%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[150.34049988 562.45947266]
[140.55125427 551.08673096]
[131.54348755 539.08551025]
[123.35742188 526.50939941]
[116.02963257 513.41467285]
[109.59284210 499.85968018]
[104.07580566 485.90505981]
[99.50315857 471.61309814]
[95.89532471 457.04763794]
[93.26841736 442.27371216]
[91.63417053 427.35733032]
[90.99987793 412.36511230]
[91.36838531 397.36398315]
[92.73802948 382.42098999]
[95.10269928 367.60284424]
[98.45184326 352.97570801]
[102.77049255 338.60498047]
[108.03936005 324.55477905]
[114.23491669 310.88784790]
[121.32949066 297.66528320]
[129.29139709 284.94610596]
[138.08506775 272.78713989]
[147.67123413 261.24267578]
[158.00709534 250.36428833]
[169.04646301 240.20054626]
[180.74003601 230.79685974]
[172.14147949 218.50602722]
[163.54290771 206.21517944]
[154.94435120 193.92434692]
[142.06680298 193.47895813]
[131.64144897 185.57995605]
[127.60974884 172.93260193]
[131.65704346 160.08604431]
[123.24241638 147.66854858]
[114.82779694 135.25105286]
[106.41317749 122.83354950]
[97.99855804 110.41605377]
[89.12766266 98.32030487]
[74.49324036 92.30830383]
[72.65432739 77.52764893]
[63.33944702 65.77040100]
[54.02456665 54.01314926]
[44.70968246 42.25589752]
[35.39479828 30.49864578]
[22.92817307 38.85467911]
[9.83706188 46.19381332]
[-3.79576421 52.46965408]
[-17.88411331 57.64251328]
[-32.33891678 61.67969131]
[-47.06877899 64.55566406]
[-61.98057556 66.25225067]
[-76.98002625 66.75872040]
[-91.97230530 66.07186890]
[-106.86261749 64.19603729]
[-121.55681610 61.14309692]
[-135.96200562 56.93234253]
[-149.98712158 51.59039307]
[-163.54347229 45.15102768]
[-176.54536438 37.65495682]
[-188.91056824 29.14957428]
[-200.56094360 19.68865395]
[-211.42280579 9.33201027]
[-221.42749023 -1.85487604]
[-230.51173401 -13.80127716]
[-238.61811829 -26.43166351]
[-245.69537354 -39.66617966]
[-251.69877625 -53.42115402]
[-256.59036255 -67.60961914]
[-260.33920288 -82.14186859]
[-262.92156982 -96.92603302]
[-264.32119751 -111.86862946]
[-264.52917480 -126.87518311]
[-263.54421997 -141.85083008]
[-261.37255859 -156.70088196]
[-258.02789307 -171.33145142]
[-253.53141785 -185.65002441]
[-247.91151428 -199.56608582]
[-241.20375061 -212.99166870]
[-233.45051575 -225.84185791]
[-224.70083618 -238.03543091]
[-215.01002502 -249.49528503]
[-204.43936157 -260.14895630]
[-193.05566406 -269.92913818]
[-180.93092346 -278.77392578]
[-168.14176941 -286.62747192]
[-154.76908875 -293.44006348]
[-140.89741516 -299.16864014]
[-126.61444855 -303.77700806]
[-112.01049805 -307.23599243]
[-97.17788696 -309.52377319]
[-82.21040344 -310.62585449]
[-67.20268250 -310.53527832]
[-52.24959183 -309.25259399]
[-37.44568253 -306.78594971]
[-22.88454819 -303.15090942]
[-8.65824986 -298.37048340]
[5.14326715 -292.47488403]
[18.43274498 -285.50137329]
[31.12615967 -277.49404907]
[43.14326096 -268.50350952]
[54.40807343 -258.58666992]
[64.84937286 -247.80615234]
[74.40114594 -236.23014832]
[83.00299835 -223.93185425]
[90.60055542 -210.98901367]
[97.14577484 -197.48344421]
[102.59727478 -183.50054932]
[106.92059326 -169.12873840]
[110.08839417 -154.45887756]
[112.08065033 -139.58369446]
[112.88476562 -124.59724426]
[112.49565887 -109.59429169]
[110.91577911 -94.66967773]
[108.15512848 -79.91777039]
[104.23114777 -65.43182373]
[99.16866302 -51.30344009]
[92.99966431 -37.62193298]
[85.76316833 -24.47381020]
[77.50491333 -11.94219589]
[68.27712250 -0.10632009]
[58.13813400 10.95898628]
[47.15205002 21.18376160]
[56.46693420 32.94101334]
[65.78181458 44.69826508]
[75.09670258 56.45551682]
[84.41158295 68.21276855]
[98.37974548 73.38381195]
[100.88491821 89.00542450]
[105.17875671 74.63312531]
[119.03485107 68.88781738]
[132.23901367 76.00471497]
[135.05760193 90.73751831]
[125.41288757 102.22574615]
[110.41605377 102.00144196]
[118.83067322 114.41893768]
[127.24529266 126.83643341]
[135.65991211 139.25392151]
[144.07453918 151.67141724]
[161.31124878 154.65724182]
[170.86737061 168.90487671]
[167.23518372 185.32577515]
[175.83375549 197.61662292]
[184.43231201 209.90745544]
[193.03088379 222.19830322]
[205.87332153 214.43679810]
[219.20550537 207.55041504]
[232.96786499 201.56990051]
[247.09895325 196.52197266]
[261.53564453 192.42916870]
[276.21347046 189.30978394]
[291.06689453 187.17773438]
[306.02954102 186.04255676]
[321.03457642 185.90930176]
[336.01501465 186.77857971]
[350.90396118 188.64649963]
[365.63485718 191.50473022]
[380.14196777 195.34048462]
[394.36047363 200.13665771]
[408.22689819 205.87181091]
[421.67926025 212.52033997]
[434.65753174 220.05253601]
[447.10369873 228.43476868]
[458.96221924 237.62960815]
[470.18008423 247.59596252]
[480.70724487 258.28933716]
[490.49664307 269.66198730]
[499.50454712 281.66311646]
[507.69079590 294.23907471]
[515.01873779 307.33374023]
[521.45568848 320.88864136]
[526.97290039 334.84317017]
[531.54571533 349.13510132]
[535.15374756 363.70050049]
[537.78082275 378.47439575]
[539.41528320 393.39074707]
[540.04974365 408.38296509]
[539.68145752 423.38409424]
[538.31201172 438.32711792]
[535.94750977 453.14529419]
[532.59851074 467.77246094]
[528.28009033 482.14324951]
[523.01135254 496.19354248]
[516.81597900 509.86050415]
[509.72158813 523.08319092]
[501.75985718 535.80242920]
[492.96630859 547.96154785]
[483.38031006 559.50610352]
[473.04458618 570.38464355]
[462.00534058 580.54852295]
[450.31188965 589.95233154]
[438.01641846 598.55413818]
[425.17388916 606.31549072]
[411.84161377 613.20172119]
[398.07916260 619.18206787]
[383.94802856 624.22979736]
[369.51126099 628.32238770]
[354.83340454 631.44158936]
[339.97994995 633.57348633]
[325.01730347 634.70849609]
[310.01226807 634.84155273]
[295.03182983 633.97204590]
[280.14291382 632.10394287]
[265.41204834 629.24554443]
[250.90498352 625.40960693]
[236.68653870 620.61328125]
[222.82020569 614.87792969]
[209.36790466 608.22924805]
[196.38973999 600.69689941]
[183.94366455 592.31445312]
[172.08528137 583.11950684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 144]
[27 143]
[28 142]
[29 141]
[33 138]
[34 137]
[35 136]
[36 135]
[37 134]
[38 128]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
