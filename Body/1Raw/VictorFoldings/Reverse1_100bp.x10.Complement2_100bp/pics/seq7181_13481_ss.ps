%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[112.79779816 660.79333496]
[107.84733582 646.08709717]
[112.51853943 631.28985596]
[125.01523590 622.09136963]
[124.79190826 607.09301758]
[124.56858063 592.09466553]
[124.34525299 577.09631348]
[124.12192535 562.09802246]
[111.18832397 558.34063721]
[99.82228851 551.08380127]
[90.94907379 540.90698242]
[85.29415894 528.62774658]
[83.32395172 515.23638916]
[85.20732117 501.81549072]
[90.80117798 489.45300293]
[99.66127777 479.15359497]
[111.07752228 471.75726318]
[124.13082886 467.87075806]
[124.35415649 452.87240601]
[124.57748413 437.87408447]
[124.80081177 422.87573242]
[125.02413940 407.87738037]
[125.24746704 392.87905884]
[125.47079468 377.88070679]
[124.57798004 362.90731812]
[122.57396698 348.04177856]
[120.56995392 333.17626953]
[111.14366150 325.59524536]
[109.35242462 313.22692871]
[116.69628143 302.62359619]
[114.91381073 287.72988892]
[113.13134766 272.83618164]
[111.34888458 257.94244385]
[98.27565002 250.85523987]
[91.80593872 237.26823425]
[94.61009979 222.30192566]
[105.81874847 211.73440552]
[104.03628540 196.84069824]
[102.25381470 181.94697571]
[93.05894470 170.22932434]
[99.10153198 155.60749817]
[97.31906891 140.71377563]
[95.53659821 125.82006073]
[93.75413513 110.92634583]
[91.63951111 96.07614136]
[89.19377899 81.27687073]
[86.74805450 66.47760010]
[69.81749725 55.65930176]
[66.35488129 36.17818451]
[78.15087891 20.67435074]
[75.04676819 5.99904871]
[71.94265747 -8.67625427]
[68.83854675 -23.35155678]
[65.73443604 -38.02685928]
[62.63032532 -52.70215988]
[59.52621460 -67.37746429]
[56.09515381 -81.97978210]
[52.33885574 -96.50184631]
[48.58255386 -111.02390289]
[44.82625198 -125.54596710]
[41.06995392 -140.06802368]
[37.31365204 -154.59008789]
[33.01952744 -168.96229553]
[28.19353104 -183.16474915]
[23.36753273 -197.36720276]
[21.19563484 -182.52528381]
[14.98264790 -168.87248230]
[5.21855450 -157.48553467]
[-7.32660866 -149.26246643]
[-21.66347694 -144.85177612]
[-36.66138458 -144.60130310]
[-51.13753891 -148.53082275]
[-63.95028305 -156.33041382]
[-74.08914948 -167.38496399]
[-80.75455475 -180.82269287]
[-83.42082977 -195.58381653]
[-81.87770081 -210.50424194]
[-76.24687195 -224.40724182]
[-66.97240448 -236.19641113]
[-54.78572845 -244.94197083]
[-40.64793396 -249.95422363]
[-25.67398453 -250.83789062]
[-11.04479122 -247.52326965]
[2.08592868 -240.27177429]
[12.68263054 -229.65528870]
[19.91084290 -216.50781250]
[19.46423721 -231.50115967]
[19.01763153 -246.49452209]
[18.45942116 -261.48413086]
[17.78963470 -276.46917725]
[17.11985016 -291.45419312]
[16.45006561 -306.43923950]
[12.94058704 -314.87258911]
[15.88354301 -321.65203857]
[15.43693638 -336.64538574]
[0.91147512 -340.87222290]
[-11.59575462 -349.38247681]
[-20.85942268 -361.34237671]
[-25.97196770 -375.58026123]
[-26.43251610 -390.70120239]
[-22.19594574 -405.22384644]
[-13.67731667 -417.72537231]
[-1.71119320 -426.98101807]
[12.53010368 -432.08401489]
[27.65135765 -432.53442383]
[42.17114258 -428.28814697]
[54.66695404 -419.76113892]
[63.91458511 -407.78881836]
[69.00804901 -393.54409790]
[69.44833374 -378.42254639]
[65.19229889 -363.90560913]
[56.65692520 -351.41549683]
[44.67840958 -342.17590332]
[30.43028641 -337.09197998]
[30.87689209 -322.09863281]
[31.43510437 -307.10903931]
[32.10488892 -292.12399292]
[32.77467346 -277.13894653]
[33.44445801 -262.15390015]
[36.88349533 -255.61213684]
[34.01098251 -246.94111633]
[34.45758820 -231.94776917]
[34.90419388 -216.95442200]
[37.56998825 -202.19320679]
[42.39598465 -187.99075317]
[47.22198486 -173.78829956]
[56.09263992 -185.88421631]
[71.07343292 -186.64312744]
[81.12107086 -175.50558472]
[78.82881927 -160.68176270]
[65.88643646 -153.09924316]
[51.83571243 -158.34638977]
[55.59201050 -143.82432556]
[59.34831238 -129.30226135]
[63.10461426 -114.78020477]
[66.86091614 -100.25814819]
[70.61721802 -85.73608398]
[73.45343018 -83.64128113]
[75.41592407 -80.06864929]
[75.82115173 -75.44381714]
[74.20151520 -70.48157501]
[77.30562592 -55.80627060]
[80.40973663 -41.13097000]
[83.51384735 -26.45566559]
[86.61795807 -11.78036404]
[89.72206879 2.89493847]
[92.82617950 17.57024002]
[102.61988068 20.64504242]
[110.31369781 27.56173706]
[114.47451782 37.12209702]
[114.29011536 47.62778854]
[109.72673798 57.18198776]
[101.54732513 64.03187561]
[103.99304962 78.83114624]
[106.43878174 93.63041687]
[109.22393036 96.29787445]
[110.81977844 100.18003082]
[110.71019745 104.71820068]
[108.64785004 109.14387512]
[110.43031311 124.03759003]
[112.21278381 138.93130493]
[113.99524689 153.82502747]
[123.31761169 166.60798645]
[117.14752960 180.16450500]
[118.93000031 195.05822754]
[120.71246338 209.95195007]
[134.09826660 217.57601929]
[140.35494995 231.45793152]
[137.27418518 246.18792725]
[126.24259949 256.16000366]
[128.02507019 271.05371094]
[129.80752563 285.94741821]
[131.58999634 300.84115601]
[142.96595764 315.32110596]
[135.43548584 331.17224121]
[137.43949890 346.03778076]
[139.44351196 360.90328979]
[146.59541321 347.71807861]
[159.32981873 339.79119873]
[174.31794739 339.19476318]
[187.64196777 346.08465576]
[195.81900024 358.65988159]
[196.71159363 373.63330078]
[190.08641052 387.09088135]
[177.67527771 395.51489258]
[162.72242737 396.70327759]
[149.13650513 390.34539795]
[140.46913147 378.10403442]
[140.24580383 393.10238647]
[140.02247620 408.10070801]
[139.79914856 423.09906006]
[139.57582092 438.09741211]
[139.35249329 453.09573364]
[139.12916565 468.09408569]
[154.75213623 473.81820679]
[167.45162964 484.52856445]
[175.70411682 498.91720581]
[178.52740479 515.23638916]
[175.59761047 531.51062012]
[167.28611755 545.77618408]
[154.61267090 556.31774902]
[139.12025452 561.87469482]
[139.34358215 576.87298584]
[139.56690979 591.87133789]
[139.79023743 606.86968994]
[140.01356506 621.86804199]
[152.77859497 630.69036865]
[157.88830566 645.34197998]
[153.37789917 660.18908691]
[140.98171997 669.52258301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 177]
[26 176]
[27 175]
[30 173]
[31 172]
[32 171]
[33 170]
[37 166]
[38 165]
[39 164]
[41 162]
[42 161]
[43 160]
[44 159]
[45 155]
[46 154]
[47 153]
[50 147]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[63 126]
[64 125]
[65 124]
[86 123]
[87 122]
[88 121]
[89 119]
[90 118]
[91 117]
[92 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
