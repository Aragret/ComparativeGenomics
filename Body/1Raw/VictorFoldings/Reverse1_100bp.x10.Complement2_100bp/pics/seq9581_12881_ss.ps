%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[154.88990784 404.43130493]
[167.80043030 396.62228394]
[163.61341858 382.21850586]
[159.42640686 367.81472778]
[155.23939514 353.41094971]
[144.25701904 343.34930420]
[147.83468628 327.93789673]
[143.64767456 313.53411865]
[132.66529846 303.47247314]
[136.24295044 288.06109619]
[131.94883728 273.68887329]
[127.54783630 259.34902954]
[123.14683533 245.00917053]
[117.68972015 258.98129272]
[105.60780334 267.87100220]
[90.64479065 268.92376709]
[77.43714142 261.81335449]
[70.07738495 248.74301147]
[70.84603119 233.76271057]
[79.50489044 221.51428223]
[93.37094116 215.79301453]
[108.14762115 218.37173462]
[119.25635529 228.45158386]
[116.81062317 213.65231323]
[114.36489868 198.85304260]
[111.91917419 184.05377197]
[109.03389740 169.33387756]
[105.71163940 154.70642090]
[102.38938141 140.07896423]
[98.84970856 125.50258636]
[95.09340668 110.98052216]
[91.12130737 96.51599884]
[86.93429565 82.11222076]
[82.74728394 67.70843506]
[78.56027985 53.30465317]
[74.37326813 38.90087128]
[70.07913971 24.52865982]
[65.67814636 10.18881226]
[61.27714539 -4.15103483]
[56.87614822 -18.49088287]
[54.26331329 -3.72019839]
[47.64658356 9.74155903]
[37.54779053 20.83274078]
[24.76335526 28.67864990]
[10.30152130 32.66052246]
[-4.69719601 32.46433640]
[-19.04993439 28.10556221]
[-31.62477493 19.92794800]
[-41.43001556 8.57641602]
[-47.69237137 -5.05380297]
[-49.91797256 -19.88777351]
[-47.93129349 -34.75563049]
[-41.88901138 -48.48482513]
[-32.26765060 -59.99262238]
[-19.82598877 -68.37146759]
[-5.54522657 -72.96057129]
[9.44839287 -73.39801025]
[23.97241211 -69.64929962]
[36.88140488 -62.01006699]
[47.15731812 -51.08277893]
[53.99087524 -37.72592545]
[53.99087524 -52.72592545]
[53.99087524 -67.72592163]
[53.99087524 -82.72592163]
[53.99087524 -97.72592163]
[51.68730545 -101.40662384]
[50.76733017 -105.24304962]
[51.11001587 -108.78112030]
[52.45936584 -111.65267944]
[54.46407700 -113.61209106]
[55.35689163 -128.58549500]
[56.24971008 -143.55889893]
[57.14252472 -158.53230286]
[54.52945328 -167.28500366]
[58.16173553 -173.72148132]
[59.27738571 -188.67993164]
[60.39303589 -203.63839722]
[61.50868225 -218.59684753]
[58.98669052 -224.70840454]
[59.80664825 -230.33198547]
[62.88676453 -233.98190308]
[64.44728851 -248.90051270]
[66.00781250 -263.81912231]
[67.56833649 -278.73773193]
[53.61989594 -284.51016235]
[41.87503433 -293.96957397]
[33.28023148 -306.34271240]
[28.52500153 -320.62191772]
[27.98661613 -335.64730835]
[31.70016289 -350.20083618]
[39.35640717 -363.10522461]
[50.32751083 -373.31896973]
[63.71852875 -380.02059937]
[78.44039917 -382.67465210]
[80.00091553 -397.59326172]
[81.56143951 -412.51187134]
[83.01085663 -427.44168091]
[84.34909821 -442.38186646]
[70.28787994 -447.90081787]
[58.35196304 -457.15881348]
[49.50893402 -469.40533447]
[44.47565460 -483.64764404]
[43.66015625 -498.73110962]
[47.12854004 -513.43304443]
[54.59964371 -526.56164551]
[65.46781921 -537.05255127]
[78.85202789 -544.05535889]
[93.66728210 -547.00244141]
[108.71256256 -545.65478516]
[122.76822662 -540.12170410]
[134.69483948 -530.85168457]
[143.52555847 -518.59631348]
[148.54452515 -504.34893799]
[149.34487915 -489.26464844]
[145.86172485 -474.56619263]
[138.37742615 -461.44515991]
[127.49872589 -450.96514893]
[114.10748291 -443.97576904]
[99.28927612 -441.04360962]
[97.95104218 -426.10342407]
[100.48526764 -419.16085815]
[96.48004913 -410.95132446]
[94.91952515 -396.03271484]
[93.35900116 -381.11413574]
[107.21295929 -375.47097778]
[118.92726898 -366.14324951]
[127.54724884 -353.88021851]
[132.36732483 -339.67080688]
[132.98875427 -324.66381836]
[129.35266113 -310.07510376]
[121.74542236 -297.08901978]
[110.77616119 -286.76232910]
[97.32799530 -279.93817139]
[82.48693848 -277.17718506]
[80.92641449 -262.25857544]
[79.36589050 -247.33998108]
[77.80537415 -232.42138672]
[76.46714020 -217.48120117]
[75.35148621 -202.52273560]
[74.23583984 -187.56428528]
[73.12019348 -172.60583496]
[72.11592865 -157.63949585]
[71.22311401 -142.66609192]
[70.33029938 -127.69268036]
[69.43748474 -112.71927643]
[68.99087524 -97.72592163]
[68.99087524 -82.72592163]
[68.99087524 -67.72592163]
[68.99087524 -52.72592545]
[68.99087524 -37.72592545]
[71.21599579 -22.89188004]
[75.61698914 -8.55203247]
[80.01799011 5.78781414]
[84.41899109 20.12766075]
[89.38664246 25.59979439]
[88.77704620 34.71385956]
[92.96405792 49.11764145]
[97.15106964 63.52142334]
[101.33808136 77.92520905]
[105.52509308 92.32898712]
[109.43074799 95.83039093]
[111.09661865 101.27081299]
[109.61546326 107.22422028]
[113.37176514 121.74628448]
[117.72595215 126.72148132]
[118.75888824 132.30986023]
[117.01683807 136.75669861]
[120.33909607 151.38415527]
[123.66136169 166.01162720]
[126.72293091 169.09069824]
[128.46977234 172.62808228]
[128.91921997 176.15419006]
[128.23937988 179.25329590]
[126.71844482 181.60804749]
[129.16416931 196.40731812]
[131.60989380 211.20658875]
[134.05561829 226.00585938]
[137.48667908 240.60818481]
[141.88768005 254.94802856]
[146.28868103 269.28787231]
[151.79821777 276.57366943]
[150.64674377 283.87408447]
[161.92860413 294.96597290]
[158.05145264 309.34710693]
[162.23846436 323.75088501]
[173.52032471 334.84280396]
[169.64317322 349.22393799]
[173.83018494 363.62771606]
[178.01719666 378.03149414]
[182.20420837 392.43527222]
[197.28910828 392.10635376]
[211.94490051 395.69384766]
[225.17233276 402.95315552]
[236.06953430 413.38931274]
[243.89350891 426.29077148]
[248.11080933 440.77792358]
[248.43389893 455.86294556]
[244.84074402 470.51733398]
[237.57633972 483.74197388]
[227.13597107 494.63513184]
[214.23149109 502.45413208]
[199.74273682 506.66583252]
[184.65757751 506.98309326]
[170.00456238 503.38430786]
[156.78274536 496.11477661]
[145.89361572 485.67019653]
[138.07958984 472.76269531]
[133.87347412 458.27233887]
[133.56204224 443.18704224]
[137.16650391 428.53543091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 190]
[3 189]
[4 188]
[5 187]
[7 185]
[8 184]
[10 182]
[11 180]
[12 179]
[13 178]
[23 177]
[24 176]
[25 175]
[26 174]
[27 169]
[28 168]
[29 167]
[30 164]
[31 163]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[37 154]
[38 153]
[39 152]
[40 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[70 145]
[71 144]
[72 143]
[73 142]
[75 141]
[76 140]
[77 139]
[78 138]
[81 137]
[82 136]
[83 135]
[84 134]
[94 124]
[95 123]
[96 122]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
