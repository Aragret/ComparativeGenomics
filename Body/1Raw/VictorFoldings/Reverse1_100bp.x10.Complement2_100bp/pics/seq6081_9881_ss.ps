%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[238.66421509 265.45904541]
[228.83363342 254.12945557]
[219.00305176 242.79986572]
[209.17247009 231.47027588]
[199.25782776 220.21417236]
[189.25964355 209.03219604]
[179.26147461 197.85023499]
[169.26330566 186.66825867]
[159.18215942 175.56101990]
[149.01861572 164.52914429]
[134.70454407 160.41131592]
[131.04441833 145.01930237]
[120.88087463 133.98742676]
[110.71733093 122.95555115]
[100.55377960 111.92367554]
[103.92631531 126.53962708]
[101.86338043 141.39709473]
[94.63639832 154.54132080]
[83.19619751 164.24295044]
[69.04792786 169.22558594]
[54.05305099 168.83366394]
[40.18439102 163.11874390]
[29.26661301 152.83273315]
[22.73613548 139.32891846]
[21.45215797 124.38397217]
[25.58360672 109.96415710]
[34.58692169 97.96664429]
[47.27755737 89.96990967]
[61.98584747 87.02606964]
[76.77666473 89.52243805]
[89.70581055 97.13211823]
[82.23807526 84.12316895]
[74.77033234 71.11421204]
[69.25411224 67.46964264]
[66.77821350 62.35427856]
[67.28052521 57.60488510]
[60.20341873 44.37935638]
[53.39533615 38.28938293]
[53.12106705 30.90381813]
[38.33389664 26.00714684]
[31.54707718 12.39120960]
[36.30643463 -1.67591918]
[29.42702103 -15.00534821]
[22.54760933 -28.33477783]
[15.66819668 -41.66420746]
[8.78878403 -54.99363708]
[1.90937114 -68.32306671]
[-4.97004128 -81.65249634]
[-7.27915287 -66.83129120]
[-16.61232948 -55.08855820]
[-30.52990341 -49.49381638]
[-45.39385223 -51.50951385]
[-57.31877518 -60.60875320]
[-63.18752670 -74.41301727]
[-61.46603012 -89.31391144]
[-52.60427856 -101.41635895]
[-38.91871643 -107.55683136]
[-23.98671150 -106.13020325]
[-11.71202850 -97.51008606]
[-16.53802681 -111.71253967]
[-21.36402321 -125.91500092]
[-26.19002151 -140.11744690]
[-31.01601982 -154.31991577]
[-45.63488388 -150.90588379]
[-60.51799393 -148.94122314]
[-75.52200317 -148.44483948]
[-90.50242615 -149.42152405]
[-105.31497192 -151.86184692]
[-119.81699371 -155.74232483]
[-133.86882019 -161.02558899]
[-147.33512878 -167.66073608]
[-160.08622742 -175.58389282]
[-171.99931335 -184.71873474]
[-182.95964050 -194.97727966]
[-192.86167908 -206.26074219]
[-201.61003113 -218.46046448]
[-209.12046814 -231.45892334]
[-215.32064819 -245.13096619]
[-220.15086365 -259.34487915]
[-223.56459045 -273.96383667]
[-225.52896118 -288.84698486]
[-226.02503967 -303.85098267]
[-225.04806519 -318.83139038]
[-222.60743713 -333.64389038]
[-218.72666931 -348.14584351]
[-213.44313049 -362.19757080]
[-206.80770874 -375.66375732]
[-198.88430786 -388.41467285]
[-189.74922180 -400.32757568]
[-179.49046326 -411.28771973]
[-168.20678711 -421.18951416]
[-156.00689697 -429.93762207]
[-143.00828552 -437.44781494]
[-129.33612061 -443.64770508]
[-115.12210083 -448.47763062]
[-100.50309753 -451.89108276]
[-85.61991119 -453.85513306]
[-70.61587524 -454.35092163]
[-55.63549805 -453.37365723]
[-40.82304764 -450.93273926]
[-26.32118034 -447.05166626]
[-12.26955986 -441.76785278]
[1.19648516 -435.13217163]
[13.94726562 -427.20849609]
[25.85998154 -418.07318115]
[36.81990433 -407.81417847]
[46.72148132 -396.53033447]
[55.46935272 -384.33026123]
[62.97926712 -371.33148193]
[69.17890167 -357.65921021]
[74.00854492 -343.44509888]
[77.42169189 -328.82601929]
[79.38545990 -313.94277954]
[79.88094330 -298.93875122]
[78.90337372 -283.95840454]
[76.46215057 -269.14599609]
[72.58080292 -254.64419556]
[67.29669952 -240.59268188]
[60.66073990 -227.12677002]
[52.73682404 -214.37614441]
[43.60127258 -202.46362305]
[33.34206009 -191.50390625]
[22.05800056 -181.60255432]
[9.85776138 -172.85491943]
[-3.14115644 -165.34526062]
[-16.81356430 -159.14590454]
[-11.98756599 -144.94345093]
[-7.16156816 -130.74099731]
[-2.33557057 -116.53853607]
[2.49042702 -102.33608246]
[8.35938740 -88.53190613]
[15.23880005 -75.20247650]
[22.11821365 -61.87304688]
[28.99762535 -48.54362106]
[35.87703705 -35.21419144]
[42.75645065 -21.88476181]
[49.63586426 -8.55533218]
[63.85916519 -4.28528643]
[71.02574921 9.13465023]
[66.45049286 24.02440453]
[73.42894745 37.30224991]
[80.50605011 50.52777863]
[87.77928162 63.64647293]
[95.24702454 76.65542603]
[102.71476746 89.66437531]
[111.58566284 101.76013184]
[121.74920654 112.79200745]
[131.91275024 123.82388306]
[142.07629395 134.85575867]
[157.11734009 139.76264954]
[160.05049133 154.36560059]
[170.21405029 165.39747620]
[178.33026123 169.58851624]
[180.44528198 176.67007446]
[190.44345093 187.85205078]
[200.44161987 199.03402710]
[210.43978882 210.21600342]
[218.49270630 214.52743530]
[220.50205994 221.63969421]
[230.33264160 232.96928406]
[240.16322327 244.29887390]
[249.99380493 255.62847900]
[262.46096802 247.25296021]
[275.86294556 240.47303772]
[289.99649048 235.39149475]
[304.64739990 232.08537292]
[319.59356689 230.60476685]
[334.60836792 230.97213745]
[349.46423340 233.18191528]
[363.93591309 237.20060730]
[377.80404663 242.96726990]
[390.85839844 250.39451599]
[402.90103149 259.36972046]
[413.74942017 269.75683594]
[423.23910522 281.39837646]
[431.22619629 294.11788940]
[437.58963013 307.72253418]
[442.23294067 322.00604248]
[445.08572388 336.75195312]
[446.10476685 351.73663330]
[445.27456665 366.73300171]
[442.60775757 381.51364136]
[438.14474487 395.85452271]
[431.95318604 409.53823853]
[424.12695312 422.35736084]
[414.78466797 434.11752319]
[404.06799316 444.64047241]
[392.13934326 453.76666260]
[379.17959595 461.35775757]
[365.38522339 467.29864502]
[350.96530151 471.49932861]
[336.13845825 473.89605713]
[321.12945557 474.45254517]
[306.16583252 473.16033936]
[291.47445679 470.03900146]
[277.27798462 465.13589478]
[263.79171753 458.52536011]
[251.22001648 450.30755615]
[239.75350952 440.60708618]
[229.56604004 429.57101440]
[220.81201172 417.36663818]
[213.62414551 404.17898560]
[208.11141968 390.20794678]
[204.35740662 375.66537476]
[202.41899109 360.77166748]
[202.32559204 345.75265503]
[204.07859802 330.83599854]
[207.65144348 316.24783325]
[212.98997498 302.20932007]
[220.01324463 288.93328857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 157]
[6 156]
[7 155]
[8 154]
[9 152]
[10 151]
[12 149]
[13 148]
[14 147]
[15 146]
[31 145]
[32 144]
[33 143]
[36 142]
[37 141]
[39 140]
[42 137]
[43 136]
[44 135]
[45 134]
[46 133]
[47 132]
[48 131]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
