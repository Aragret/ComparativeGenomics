%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[86.17942047 603.37145996]
[74.19223022 594.19482422]
[65.12628174 582.12377930]
[59.65434265 568.05389404]
[58.18246078 553.02941895]
[60.81986618 538.16510010]
[67.37084198 524.56414795]
[77.34925842 513.23565674]
[90.01465607 505.02041626]
[104.42717743 500.52801514]
[103.98056793 485.53466797]
[103.53396606 470.54132080]
[103.08735657 455.54794312]
[102.64075470 440.55459595]
[90.25194550 432.32931519]
[85.02020264 418.21929932]
[89.14840698 403.56283569]
[101.25514984 394.03744507]
[93.14234161 381.54620361]
[100.46532440 367.52175903]
[92.35251617 355.03051758]
[99.67550659 341.00607300]
[99.22889709 326.01272583]
[98.78229523 311.01937866]
[98.33568573 296.02603149]
[97.88908386 281.03268433]
[97.44247437 266.03933716]
[82.80081177 262.92321777]
[69.32234955 256.38940430]
[57.79245377 246.81372070]
[48.88412476 234.74949646]
[43.11868286 220.89541626]
[40.83526993 206.05513000]
[42.17090607 191.09060669]
[47.05228806 176.87211609]
[55.19976425 164.22755432]
[66.14338684 153.89428711]
[79.25000000 146.47615051]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.80016327 43.04516220]
[79.75257111 53.19162750]
[64.76088715 52.69223404]
[54.41302872 41.83305359]
[54.63671494 26.83472252]
[65.30381012 16.28896332]
[80.30371857 16.23686600]
[91.04343414 26.70740509]
[91.93624878 11.73399925]
[92.82906342 -3.23940682]
[93.72188568 -18.21281242]
[94.61470032 -33.18621826]
[94.83802795 -48.18455505]
[94.39141846 -63.17790604]
[93.94481659 -78.17125702]
[93.49820709 -93.16460419]
[93.05160522 -108.15795898]
[91.93595123 -123.11640930]
[90.15348816 -138.01013184]
[88.37102509 -152.90383911]
[84.93996429 -167.50616455]
[79.90304565 -181.63519287]
[74.86612701 -195.76422119]
[69.82921600 -209.89324951]
[64.79229736 -224.02227783]
[53.49476242 -230.24551392]
[49.59037781 -242.11730957]
[54.65411377 -253.10298157]
[49.82811737 -267.30545044]
[45.00211716 -281.50790405]
[40.17612076 -295.71035767]
[25.33898163 -293.27947998]
[10.30409336 -293.32400513]
[-4.51838303 -295.84274292]
[-18.72407913 -300.76696777]
[-31.92545319 -307.96237183]
[-43.76236343 -317.23260498]
[-53.91188812 -328.32479858]
[-62.09714127 -340.93637085]
[-68.09482574 -354.72323608]
[-71.74131775 -369.30929565]
[-72.93713379 -384.29660034]
[-71.64965820 -399.27633667]
[-67.91401672 -413.83981323]
[-61.83211136 -427.58975220]
[-53.56986618 -440.15100098]
[-43.35268021 -451.18090820]
[-31.45928764 -460.37857056]
[-18.21414757 -467.49307251]
[-3.97859550 -472.33032227]
[10.85901070 -474.75833130]
[25.89389038 -474.71090698]
[40.71588135 -472.18930054]
[54.92062759 -467.26235962]
[68.12061310 -460.06442261]
[79.95574188 -450.79190063]
[90.10312653 -439.69772339]
[98.28594971 -427.08459473]
[104.28097534 -413.29656982]
[107.92465973 -398.70980835]
[109.11759186 -383.72225952]
[107.82723236 -368.74276733]
[104.08878326 -354.18002319]
[98.00422668 -340.43127441]
[89.73956299 -327.87161255]
[79.52025604 -316.84365845]
[67.62508392 -307.64828491]
[54.37857437 -300.53634644]
[59.20457458 -286.33389282]
[64.03057098 -272.13143921]
[68.85656738 -257.92898560]
[82.65829468 -247.09019470]
[78.92132568 -229.05920410]
[83.95824432 -214.93017578]
[88.99515533 -200.80114746]
[94.03207397 -186.67211914]
[99.06899261 -172.54307556]
[101.68402100 -187.31338501]
[109.39568329 -200.17922974]
[121.18938446 -209.44792175]
[135.51345825 -213.89999390]
[150.48332214 -212.94969177]
[164.12944031 -206.72204590]
[174.65643311 -196.03642273]
[180.67927551 -182.29869080]
[181.40557861 -167.31628418]
[176.73977661 -153.06040955]
[167.29574585 -141.40664673]
[154.31599426 -133.88825989]
[139.50823975 -131.49443054]
[124.82069397 -134.54010010]
[112.18576050 -142.62457275]
[103.26473999 -154.68630981]
[105.04720306 -139.79258728]
[106.82967377 -124.89887238]
[116.92798615 -135.99049377]
[131.90443420 -136.83058167]
[143.17984009 -126.93789673]
[144.29513550 -111.97941589]
[134.61141968 -100.52404022]
[119.67597961 -99.13392639]
[108.04495239 -108.60456085]
[108.49156189 -93.61121368]
[108.93816376 -78.61785889]
[109.38477325 -63.62451172]
[109.83137512 -48.63116074]
[120.87896729 -58.77762604]
[135.87065125 -58.27823257]
[146.21850586 -47.41905212]
[145.99482727 -32.42071915]
[135.32772827 -21.87495995]
[120.32781982 -21.82286453]
[109.58810425 -32.29340363]
[108.69528961 -17.31999588]
[107.80247498 -2.34659100]
[106.90966034 12.62681484]
[106.01683807 27.60021973]
[105.79351044 42.59855652]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[123.47951508 145.15867615]
[137.00442505 151.78355408]
[148.54370117 161.44712830]
[157.42935181 173.58432007]
[163.14837646 187.48706055]
[165.37234497 202.34555054]
[163.97628784 217.29544067]
[159.04568481 231.46812439]
[150.87121582 244.04119873]
[139.93173218 254.28616333]
[126.86605835 261.61065674]
[112.43582916 265.59271240]
[112.88243103 280.58609009]
[113.32904053 295.57943726]
[113.77564240 310.57278442]
[114.22225189 325.56613159]
[114.66885376 340.55947876]
[122.81360626 354.12316895]
[115.45867920 367.07516479]
[123.60343170 380.63885498]
[116.24849701 393.59085083]
[128.90072632 402.37875366]
[133.89398193 416.76348877]
[129.51136780 431.15988159]
[117.63410187 440.10800171]
[118.08070374 455.10134888]
[118.52731323 470.09469604]
[118.97392273 485.08804321]
[119.42052460 500.08139038]
[134.07489014 503.70800781]
[147.20680237 511.15481567]
[157.84181213 521.86926270]
[165.19071960 535.05621338]
[168.70819092 549.73718262]
[168.13319397 564.82269287]
[163.50840759 579.19323730]
[155.17701721 591.78259277]
[143.75727844 601.65637207]
[130.09658813 608.08197021]
[115.20868683 610.58258057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[18 191]
[20 189]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[39 170]
[40 169]
[41 168]
[43 166]
[44 165]
[45 164]
[46 163]
[53 162]
[54 161]
[55 160]
[56 159]
[57 158]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[63 140]
[64 139]
[65 138]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[73 116]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
