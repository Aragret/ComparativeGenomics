%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[107.45785522 416.62615967]
[104.09896851 400.93865967]
[114.38073730 388.62344360]
[114.38073730 373.62344360]
[114.38073730 358.62344360]
[114.38073730 343.62344360]
[113.37648010 328.65710449]
[111.37246704 313.79156494]
[109.36845398 298.92605591]
[107.36444092 284.06051636]
[105.36042786 269.19497681]
[103.35641479 254.32945251]
[101.21151733 252.52458191]
[99.65232849 249.76133728]
[99.04744720 246.25854492]
[99.67952728 242.36431885]
[101.70296478 238.52249146]
[93.04048157 226.40594482]
[99.72994232 212.06851196]
[98.61429596 197.11006165]
[97.49864197 182.15161133]
[93.86636353 175.71513367]
[96.47943115 166.96243286]
[95.58661652 151.98902893]
[87.10549164 139.74485779]
[94.00767517 125.50861359]
[93.11486053 110.53520966]
[91.88788605 95.58547974]
[90.32736206 80.66687012]
[88.76683807 65.74826813]
[79.63582611 52.82792664]
[86.00705719 39.36476898]
[84.44653320 24.44616508]
[82.88601685 9.52756023]
[81.32549286 -5.39104462]
[79.65394592 -20.29761887]
[77.87148285 -35.19133759]
[73.15135193 -49.42932510]
[65.68360901 -62.43827820]
[58.21586609 -75.44722748]
[50.74812698 -88.45618439]
[37.16743851 -96.57255554]
[37.54145432 -111.46246338]
[30.07371140 -124.47142029]
[22.50933266 -137.42442322]
[14.84873581 -150.32073975]
[7.18813848 -163.21707153]
[-0.66361713 -175.99790955]
[-8.70479012 -188.66043091]
[-16.74596214 -201.32296753]
[-30.05272675 -194.38006592]
[-43.90035629 -188.59066772]
[-58.18907547 -183.99650574]
[-72.81593323 -180.63067627]
[-87.67554474 -178.51742554]
[-102.66083527 -177.67198181]
[-117.66384888 -178.10043335]
[-132.57647705 -179.79969788]
[-147.29125977 -182.75752258]
[-161.70219421 -186.95260620]
[-175.70544434 -192.35472107]
[-189.20011902 -198.92494202]
[-202.08897400 -206.61593628]
[-214.27914429 -215.37228394]
[-225.68280029 -225.13088989]
[-236.21778870 -235.82144165]
[-245.80818176 -247.36691284]
[-254.38490295 -259.68414307]
[-261.88613892 -272.68432617]
[-268.25784302 -286.27386475]
[-273.45413208 -300.35479736]
[-277.43753052 -314.82565308]
[-280.17935181 -329.58224487]
[-281.65985107 -344.51815796]
[-281.86834717 -359.52584839]
[-280.80331421 -374.49713135]
[-278.47247314 -389.32415771]
[-274.89260864 -403.90011597]
[-270.08950806 -418.11996460]
[-264.09774780 -431.88125610]
[-256.96054077 -445.08480835]
[-248.72930908 -457.63552856]
[-239.46333313 -469.44296265]
[-229.22938538 -480.42202759]
[-218.10121155 -490.49365234]
[-206.15899658 -499.58526611]
[-193.48875427 -507.63131714]
[-180.18182373 -514.57391357]
[-166.33404541 -520.36291504]
[-152.04519653 -524.95672607]
[-137.41825867 -528.32214355]
[-122.55859375 -530.43505859]
[-107.57327271 -531.28009033]
[-92.57027435 -530.85125732]
[-77.65769958 -529.15161133]
[-62.94298172 -526.19342041]
[-48.53215408 -521.99792480]
[-34.52904510 -516.59545898]
[-21.03454781 -510.02490234]
[-8.14589405 -502.33355713]
[4.04405212 -493.57690430]
[15.44746113 -483.81802368]
[25.98216820 -473.12719727]
[35.57227325 -461.58145142]
[44.14867020 -449.26400757]
[51.64957428 -436.26361084]
[58.02093506 -422.67395020]
[63.21684647 -408.59286499]
[67.19987488 -394.12188721]
[69.94131470 -379.36526489]
[71.42141724 -364.42929077]
[71.62952423 -349.42160034]
[70.56412506 -334.45034790]
[68.23290253 -319.62335205]
[64.65265656 -305.04751587]
[59.84917831 -290.82778931]
[53.85707855 -277.06665039]
[46.71952820 -263.86328125]
[38.48796082 -251.31277466]
[29.22167969 -239.50558472]
[18.98745346 -228.52676392]
[7.85901976 -218.45542908]
[-4.08343792 -209.36413574]
[3.95773482 -196.70161438]
[11.99890804 -184.03909302]
[16.38219452 -182.14282227]
[19.62079430 -177.47285461]
[20.08446503 -170.87767029]
[27.74506187 -157.98133850]
[35.40565872 -145.08502197]
[41.52431870 -140.93968201]
[43.08266449 -131.93916321]
[50.55040741 -118.93020630]
[63.59694672 -111.74431610]
[63.75707626 -95.92391968]
[71.22482300 -82.91497040]
[78.69255829 -69.90602112]
[86.16030121 -56.89706802]
[85.20879364 -71.86685944]
[87.45365143 -86.69792938]
[92.79274750 -100.71556091]
[100.98319244 -113.28205109]
[111.65237427 -123.82569885]
[124.31491089 -131.86685181]
[138.39474487 -137.03967285]
[153.25134277 -139.10885620]
[168.20883179 -137.98025513]
[182.58673096 -133.70521545]
[195.73094177 -126.47821045]
[207.04351807 -116.62804413]
[216.00978088 -104.60281372]
[222.22183228 -90.94960022]
[225.39707947 -76.28952026]
[225.39105225 -61.28952408]
[222.20404053 -46.63199997]
[215.98103333 -32.98377609]
[207.00511169 -20.96574783]
[195.68464661 -11.12466145]
[182.53463745 -3.90821743]
[168.15330505 0.35528335]
[153.19491577 1.47188008]
[138.33999634 -0.60922486]
[124.26430511 -5.79335499]
[111.60823059 -13.84466743]
[100.94751740 -24.39688110]
[92.76519775 -36.97380066]
[94.54766846 -22.08008385]
[98.46372986 -15.81221199]
[96.24409485 -6.95156765]
[97.80461884 7.96703720]
[99.36514282 22.88564110]
[100.92566681 37.80424500]
[109.94506073 49.65750885]
[103.68544006 64.18774414]
[105.24596405 79.10634613]
[106.80648804 94.02495575]
[109.42793274 96.85345459]
[110.78987885 100.82371521]
[110.41037750 105.34732056]
[108.08826447 109.64239502]
[108.98107910 124.61579895]
[117.52606201 137.93096924]
[110.56002045 151.09620667]
[111.45283508 166.06961060]
[112.45709991 181.03596497]
[113.57274628 195.99441528]
[114.68839264 210.95286560]
[123.43067932 224.13934326]
[116.66141510 237.40684509]
[118.22193909 252.32543945]
[120.22595215 267.19097900]
[122.22996521 282.05648804]
[124.23397827 296.92202759]
[126.23799133 311.78756714]
[128.24200439 326.65307617]
[135.90423584 313.75772095]
[149.27392578 306.95690918]
[164.20835876 308.35794067]
[176.07991028 317.52667236]
[181.21008301 331.62213135]
[178.00921631 346.27661133]
[167.46913147 356.94934082]
[152.85580444 360.33319092]
[138.69731140 355.37966919]
[129.38073730 343.62344360]
[129.38073730 358.62344360]
[129.38073730 373.62344360]
[129.38073730 388.62344360]
[139.66250610 400.93865967]
[136.30361938 416.62615967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[12 190]
[17 189]
[19 187]
[20 186]
[21 185]
[23 184]
[24 183]
[26 181]
[27 180]
[28 176]
[29 175]
[30 174]
[32 172]
[33 171]
[34 170]
[35 169]
[36 167]
[37 166]
[38 138]
[39 137]
[40 136]
[41 135]
[43 133]
[44 132]
[45 130]
[46 129]
[47 128]
[48 125]
[49 124]
[50 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
