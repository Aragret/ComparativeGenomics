%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[33.35036850 713.72998047]
[18.72312164 717.08496094]
[3.88605785 719.33746338]
[-11.07784843 720.47485352]
[-26.08491135 720.49084473]
[-41.05120468 719.38525391]
[-55.89303207 717.16436768]
[-70.52738953 713.84057617]
[-84.87243652 709.43237305]
[-98.84793854 703.96453857]
[-112.37575531 697.46759033]
[-125.38021851 689.97784424]
[-137.78860474 681.53723145]
[-149.53153992 672.19293213]
[-160.54331970 661.99719238]
[-170.76237488 651.00708008]
[-180.13156128 639.28399658]
[-188.59848022 626.89355469]
[-196.11576843 613.90496826]
[-202.64140320 600.39099121]
[-208.13887024 586.42706299]
[-212.57745361 572.09143066]
[-215.93231201 557.46417236]
[-218.18467712 542.62707520]
[-219.32196045 527.66314697]
[-219.33781433 512.65606689]
[-218.23213196 497.68978882]
[-216.01109314 482.84799194]
[-212.68714905 468.21365356]
[-208.27885437 453.86865234]
[-202.81088257 439.89318848]
[-196.31379700 426.36544800]
[-188.82395935 413.36105347]
[-180.38322449 400.95272827]
[-171.03881836 389.20989990]
[-160.84298706 378.19818115]
[-149.85276794 367.97924805]
[-138.12960815 358.61013794]
[-125.73906708 350.14334106]
[-112.75045013 342.62615967]
[-99.23638916 336.10064697]
[-85.27246094 330.60330200]
[-70.93675232 326.16485596]
[-56.30945206 322.81011963]
[-41.47234726 320.55789185]
[-26.50842094 319.42074585]
[-11.50135708 319.40502930]
[3.46491766 320.51083374]
[18.30670547 322.73199463]
[21.62896538 308.10452271]
[24.95122337 293.47708130]
[28.27348328 278.84960938]
[31.59574318 264.22213745]
[18.95037079 272.29028320]
[4.06155825 270.46728516]
[-6.26372814 259.58663940]
[-7.30490780 244.62281799]
[1.41403365 232.41708374]
[15.90691280 228.54972839]
[29.54778099 234.78884888]
[36.10041428 248.28385925]
[40.92641068 234.08140564]
[45.75241089 219.87895203]
[50.57840729 205.67649841]
[49.75405884 198.33195496]
[55.58342743 191.29943848]
[60.62034225 177.17041016]
[54.20435715 170.36265564]
[50.68695068 161.63197327]
[50.59042740 152.16197205]
[53.97020721 143.25312805]
[60.40142822 136.14425659]
[69.03189087 131.84014893]
[78.69485474 130.96981812]
[84.56381226 117.16564178]
[90.43277740 103.36146545]
[90.43778229 95.30091095]
[96.49324799 89.39648438]
[102.56708527 75.68122101]
[108.64091492 61.96595383]
[114.20014191 48.03415298]
[119.23706055 33.90512466]
[124.27397919 19.77609444]
[129.20556641 5.60996008]
[134.03157043 -8.59249496]
[138.85755920 -22.79495049]
[143.57769775 -37.03293991]
[148.19171143 -51.30567169]
[133.85194397 -46.90439224]
[121.38462067 -55.24499512]
[119.98017120 -70.17910004]
[130.67390442 -80.69784546]
[145.58280945 -79.04719543]
[153.71636963 -66.44559479]
[159.37916565 -80.33561707]
[165.04194641 -94.22564697]
[170.70472717 -108.11566925]
[176.36752319 -122.00569916]
[163.45103455 -129.68829346]
[151.82392883 -139.21025085]
[141.74592590 -150.35887146]
[133.44218445 -162.88505554]
[127.09821320 -176.50900269]
[122.85573578 -190.92631531]
[120.80953979 -205.81492615]
[121.00533295 -220.84220886]
[123.43874359 -235.67245483]
[128.05540466 -249.97434998]
[134.75216675 -263.42837524]
[143.37945557 -275.73397827]
[153.74449158 -286.61624146]
[165.61575317 -295.83203125]
[178.72801208 -303.17550659]
[192.78833008 -308.48254395]
[207.48260498 -311.63467407]
[222.48257446 -312.56140137]
[237.45310974 -311.24203491]
[252.05976868 -307.70608521]
[265.97625732 -302.03250122]
[278.89163208 -294.34808350]
[290.51739502 -284.82446289]
[300.59381104 -273.67440796]
[308.89575195 -261.14703369]
[315.23779297 -247.52220154]
[319.47821045 -233.10427856]
[321.52227783 -218.21537781]
[321.32437134 -203.18811035]
[318.88882446 -188.35821533]
[314.27014160 -174.05697632]
[307.57144165 -160.60389709]
[298.94241333 -148.29953003]
[288.57583618 -137.41876221]
[276.70327759 -128.20465088]
[263.58996582 -120.86305237]
[249.52888489 -115.55799103]
[234.83415222 -112.40798187]
[219.83406067 -111.48339081]
[204.86370850 -112.80487823]
[190.25755310 -116.34291077]
[184.59475708 -102.45288849]
[178.93197632 -88.56285858]
[173.26918030 -74.67282867]
[167.60639954 -60.78280640]
[162.46444702 -46.69166565]
[157.85043335 -32.41893005]
[158.78404236 -25.08748055]
[153.06001282 -17.96895409]
[148.23402405 -3.76649785]
[143.40802002 10.43595791]
[144.23237610 17.78049660]
[138.40299988 24.81301117]
[133.36608887 38.94203949]
[128.32917786 53.07107162]
[142.79362488 49.09869003]
[155.00709534 57.80679321]
[155.96627808 72.77609253]
[144.96409607 82.97177887]
[130.11094666 80.87796783]
[122.35618591 68.03978729]
[116.28234863 81.75505066]
[110.20851898 95.47032166]
[104.23695374 109.23042297]
[98.36799622 123.03459930]
[92.49903107 136.83877563]
[101.61340332 155.78869629]
[93.88754272 175.02943420]
[74.74937439 182.20732117]
[69.71245575 196.33634949]
[64.78086090 210.50248718]
[59.95486450 224.70494080]
[55.12886810 238.90740967]
[50.30287170 253.10986328]
[46.22320175 267.54440308]
[42.90094376 282.17187500]
[39.57868576 296.79934692]
[36.25642395 311.42678833]
[32.93416595 326.05426025]
[47.27928925 330.46215820]
[61.25489044 335.92977905]
[74.78282166 342.42648315]
[87.78741455 349.91598511]
[100.19596100 358.35638428]
[111.93904114 367.70050049]
[122.95100403 377.89602661]
[133.17025757 388.88598633]
[142.53964233 400.60888672]
[151.00679016 412.99920654]
[158.52430725 425.98760986]
[165.05017090 439.50152588]
[170.54789734 453.46530151]
[174.98672485 467.80087280]
[178.34184265 482.42810059]
[180.59446716 497.26513672]
[181.73202515 512.22906494]
[181.74813843 527.23608398]
[180.64271545 542.20239258]
[178.42195129 557.04425049]
[175.09825134 571.67864990]
[170.69021606 586.02374268]
[165.22248840 599.99926758]
[158.72564697 613.52716064]
[151.23602295 626.53167725]
[142.79551697 638.94012451]
[133.45132446 650.68316650]
[123.25568390 661.69500732]
[112.26564026 671.91418457]
[100.54264832 681.28344727]
[88.15225983 689.75048828]
[75.16377258 697.26788330]
[61.64982224 703.79364014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[61 172]
[62 171]
[63 170]
[64 169]
[66 168]
[67 167]
[74 164]
[75 163]
[76 162]
[78 161]
[79 160]
[80 159]
[81 153]
[82 152]
[83 151]
[84 149]
[85 148]
[86 147]
[87 145]
[88 144]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
