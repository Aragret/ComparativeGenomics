%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[53.76477814 466.65612793]
[50.43554688 451.99026489]
[49.70378113 436.96908569]
[51.59172058 422.04907227]
[56.04199600 407.68362427]
[62.91936111 394.30929565]
[72.01482391 382.33248901]
[83.05198669 372.11718750]
[95.69543457 363.97384644]
[109.56095886 358.14990234]
[106.23870087 343.52243042]
[102.91643524 328.89495850]
[99.59417725 314.26751709]
[95.04728699 308.44104004]
[96.33306122 299.39758301]
[93.22895050 284.72225952]
[88.66404724 299.01077271]
[79.30261993 310.73101807]
[66.37634277 318.34097290]
[51.58588028 320.83941650]
[36.87717438 317.89764404]
[24.18541145 309.90270996]
[15.18040562 297.90646362]
[11.04692364 283.48721313]
[12.32879543 268.54208374]
[18.85736847 255.03735352]
[29.77369881 244.74980164]
[43.64155197 239.03292847]
[58.63637543 238.63890076]
[72.78533936 243.61953735]
[84.22691345 253.31954956]
[91.45649719 266.46502686]
[91.67982483 251.46669006]
[91.90315247 236.46835327]
[92.12648010 221.47001648]
[92.34980774 206.47166443]
[84.80285645 193.63061523]
[92.74476624 179.94717407]
[92.96809387 164.94883728]
[93.19142151 149.95050049]
[93.19142151 134.95050049]
[92.96809387 119.95215607]
[92.74476624 104.95381927]
[90.74554443 102.65325165]
[89.53922272 99.57440186]
[89.41566467 96.00954437]
[90.55272675 92.35395050]
[92.98139191 89.06237030]
[93.65117645 74.07733154]
[94.32096100 59.09228897]
[94.99074554 44.10725021]
[95.54895782 29.11764145]
[95.99555969 14.12429142]
[87.76618195 26.66531754]
[75.19161224 34.84334564]
[60.39088440 37.28023529]
[45.85818100 33.56532669]
[34.04251862 24.32464790]
[26.93504524 11.11541557]
[25.73349380 -3.83638310]
[30.64034843 -18.01110649]
[40.82871628 -29.02006531]
[54.58167648 -35.00805664]
[69.58161926 -34.96599960]
[83.30078125 -28.90098000]
[93.42725372 -17.83506012]
[98.25474548 -3.63139701]
[101.57700348 -18.25885773]
[104.89926147 -32.88631821]
[108.22152710 -47.51377869]
[111.54378510 -62.14123917]
[113.32624817 -77.03495789]
[113.54957581 -92.03329468]
[113.77290344 -107.03163147]
[113.99623108 -122.02996826]
[114.21955872 -137.02830505]
[111.33827209 -142.97891235]
[111.82205963 -148.64132690]
[114.67946625 -152.46810913]
[115.34925079 -167.45315552]
[116.01903534 -182.43818665]
[116.68881989 -197.42323303]
[117.35860443 -212.40826416]
[118.02838898 -227.39331055]
[109.16559601 -243.53431702]
[119.17980194 -257.94552612]
[119.62641144 -272.93887329]
[120.07302094 -287.93222046]
[120.51962280 -302.92556763]
[120.96623230 -317.91891479]
[121.41283417 -332.91226196]
[121.85944366 -347.90560913]
[107.23052979 -351.46774292]
[93.66207886 -357.99389648]
[81.74723053 -367.19879150]
[72.00685883 -378.68002319]
[64.86676788 -391.93569946]
[60.63909531 -406.38632202]
[59.50865555 -421.40017700]
[61.52486420 -436.32092285]
[66.59957886 -450.49627686]
[74.51096344 -463.30657959]
[84.91316223 -474.19180298]
[97.35143280 -482.67608643]
[111.28202820 -488.38854980]
[126.09596252 -491.07943726]
[141.14564514 -490.63116455]
[155.77314758 -487.06329346]
[169.33903503 -480.53179932]
[181.25025940 -471.32220459]
[190.98611450 -459.83712769]
[198.12098694 -446.57867432]
[202.34297180 -432.12637329]
[203.46751404 -417.11209106]
[201.44543457 -402.19213867]
[196.36512756 -388.01876831]
[188.44871521 -375.21157837]
[178.04223633 -364.33044434]
[165.60063171 -355.85107422]
[151.66778564 -350.14410400]
[136.85279846 -347.45901489]
[136.40618896 -332.46566772]
[135.95957947 -317.47232056]
[135.51296997 -302.47897339]
[135.06636047 -287.48562622]
[134.61976624 -272.49224854]
[134.17315674 -257.49890137]
[142.23722839 -248.48242188]
[141.98786926 -235.98754883]
[133.01342773 -226.72352600]
[132.34364319 -211.73847961]
[131.67385864 -196.75344849]
[131.00407410 -181.76840210]
[130.33428955 -166.78337097]
[129.66450500 -151.79832458]
[129.21789551 -136.80497742]
[128.99456787 -121.80664062]
[128.77124023 -106.80830383]
[128.54791260 -91.80996704]
[128.32458496 -76.81163025]
[136.13545227 -89.61750031]
[148.20687866 -98.52146912]
[162.74815369 -102.20266724]
[177.60217285 -100.11501312]
[190.56541443 -92.56820679]
[199.71487427 -80.68176270]
[203.69326782 -66.21897125]
[201.91043091 -51.32529831]
[194.63084412 -38.21013260]
[182.93438721 -28.81902885]
[168.55615234 -24.54510307]
[153.62907410 -26.02236557]
[140.36749268 -33.03167725]
[130.73867798 -44.53324127]
[126.17124176 -58.81897736]
[122.84898376 -44.19151688]
[119.52672577 -29.56405830]
[116.20446777 -14.93659782]
[112.88220215 -0.30913740]
[110.98891449 14.57089806]
[110.54230499 29.56424713]
[113.48526001 36.34368896]
[109.97578430 44.77703476]
[109.30599976 59.76207352]
[108.63621521 74.74711609]
[107.96643066 89.73215485]
[107.74310303 104.73049164]
[107.96643066 119.72882843]
[108.18975830 134.72715759]
[111.24694061 140.58934021]
[110.93196106 146.26365662]
[108.18975830 150.17382812]
[107.96643066 165.17216492]
[107.74310303 180.17050171]
[115.27407837 194.08433533]
[107.34814453 206.69499207]
[107.12481689 221.69334412]
[106.90148926 236.69168091]
[106.67816162 251.69001770]
[106.45483398 266.68835449]
[107.90425873 281.61816406]
[111.00836182 296.29345703]
[114.22164154 310.94525146]
[117.54389954 325.57269287]
[120.86615753 340.20016479]
[124.18841553 354.82763672]
[139.20933533 354.09075928]
[154.12998962 355.97360229]
[168.49696350 360.41900635]
[181.87364197 367.29180908]
[193.85353088 376.38320923]
[204.07257080 387.41690063]
[212.22023010 400.05755615]
[218.04890442 413.92111206]
[221.38146973 428.58621216]
[222.11663818 443.60720825]
[220.23208618 458.52764893]
[215.78506470 472.89410400]
[208.91073608 486.27001953]
[199.81799316 498.24887085]
[188.78314209 508.46667480]
[176.14154053 516.61291504]
[162.27734375 522.44000244]
[147.61186218 525.77087402]
[132.59077454 526.50433350]
[117.67053986 524.61810303]
[103.30458832 520.16949463]
[89.92946625 513.29364014]
[77.95163727 504.19952393]
[67.73509216 493.16351318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 186]
[11 185]
[12 184]
[13 183]
[15 182]
[16 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[38 174]
[39 173]
[40 172]
[41 169]
[42 168]
[43 167]
[48 166]
[49 165]
[50 164]
[51 163]
[52 161]
[53 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
