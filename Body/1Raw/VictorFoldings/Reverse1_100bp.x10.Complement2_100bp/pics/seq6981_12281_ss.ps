%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-15.88883972 318.27325439]
[-8.33639812 331.26196289]
[-2.66520905 345.17541504]
[1.01433778 359.74273682]
[2.63061833 374.68038940]
[2.15217137 389.69763184]
[-0.41169009 404.50210571]
[-5.01105976 418.80569458]
[-11.55640984 432.32989502]
[-19.92033195 444.81152344]
[-29.94002151 456.00759888]
[-41.42044067 465.70016479]
[-54.13812256 473.70059204]
[-67.84551239 479.85311890]
[-82.27578735 484.03799438]
[-97.14806366 486.17376709]
[-112.17284393 486.21887207]
[-127.05767059 484.17239380]
[-141.51280212 480.07418823]
[-155.25688171 474.00405884]
[-168.02233887 466.08010864]
[-179.56072998 456.45660400]
[-189.64743042 445.32086182]
[-198.08612061 432.88967896]
[-204.71252441 419.40496826]
[-209.39765930 405.12927246]
[-212.05032349 390.34045410]
[-212.61889648 375.32635498]
[-211.09230042 360.37927246]
[-207.50024414 345.79010010]
[-201.91267395 331.84289551]
[-194.43832397 318.80908203]
[-185.22270203 306.94238281]
[-174.44517517 296.47378540]
[-162.31555176 287.60708618]
[-149.06993103 280.51486206]
[-134.96614075 275.33517456]
[-120.27872467 272.16882324]
[-105.29356384 271.07748413]
[-90.30235291 272.08233643]
[-75.59690094 275.16387939]
[-61.46345901 280.26211548]
[-48.17713165 287.27777100]
[-39.39653015 275.11633301]
[-30.61592484 262.95486450]
[-29.24910736 255.69169617]
[-21.61295128 250.67901611]
[-12.65225601 238.64964294]
[-3.69155979 226.62026978]
[5.26913643 214.59088135]
[14.22983265 202.56150818]
[23.19052887 190.53213501]
[31.97113228 178.37068176]
[40.56969452 166.07983398]
[49.16825867 153.78900146]
[57.76682281 141.49816895]
[66.36538696 129.20732117]
[74.96395111 116.91648865]
[60.93233490 122.21871948]
[46.03292847 120.48444366]
[33.59429932 112.10109711]
[26.39526939 98.94154358]
[26.04411888 83.94564819]
[32.61929703 70.46355438]
[44.65188980 61.50717545]
[59.45378876 59.07740021]
[73.71820831 63.71704483]
[84.25844574 74.38960266]
[88.71977997 88.71079254]
[86.10552979 103.48124695]
[89.75897217 89.98517609]
[103.17008972 86.03125000]
[113.65759277 75.30686951]
[117.77436066 60.03065491]
[132.20469666 56.34084702]
[142.69219971 45.61646652]
[152.85574341 34.58459091]
[162.68632507 23.25499725]
[172.51690674 11.92540359]
[182.34748840 0.59581023]
[192.17807007 -10.73378277]
[202.00865173 -22.06337547]
[211.83923340 -33.39296722]
[221.66981506 -44.72256088]
[231.41577148 -56.12502289]
[241.07658386 -67.59972382]
[250.73739624 -79.07442474]
[240.00239563 -89.56093597]
[230.07116699 -100.81162262]
[220.99795532 -112.76503754]
[212.83232117 -125.35588837]
[205.61885071 -138.51541138]
[199.39694214 -152.17173767]
[194.20059204 -166.25027466]
[190.05818176 -180.67411804]
[186.99230957 -195.36451721]
[185.01976013 -210.24122620]
[184.15127563 -225.22297668]
[184.39160156 -240.22795105]
[185.73944092 -255.17420959]
[188.18742371 -269.98010254]
[191.72216797 -284.56478882]
[196.32440186 -298.84857178]
[201.96894836 -312.75347900]
[208.62501526 -326.20355225]
[216.25622559 -339.12530518]
[224.82089233 -351.44818115]
[234.27226257 -363.10488892]
[244.55870056 -374.03176880]
[255.62403870 -384.16909790]
[267.40783691 -393.46154785]
[279.84570312 -401.85833740]
[292.86975098 -409.31365967]
[306.40881348 -415.78674316]
[320.38897705 -421.24221802]
[334.73385620 -425.65036011]
[349.36511230 -428.98703003]
[364.20285034 -431.23403931]
[379.16601562 -432.37908936]
[394.17285156 -432.41595459]
[409.14147949 -431.34442139]
[423.99005127 -429.17031860]
[438.63754272 -425.90554810]
[453.00390625 -421.56796265]
[467.01068115 -416.18118286]
[480.58139038 -409.77468872]
[493.64187622 -402.38345337]
[506.12088013 -394.04785156]
[517.95013428 -384.81338501]
[529.06512451 -374.73052979]
[539.40515137 -363.85433960]
[548.91363525 -352.24420166]
[557.53875732 -339.96353149]
[565.23333740 -327.07940674]
[571.95538330 -313.66220093]
[577.66821289 -299.78521729]
[582.34051514 -285.52420044]
[585.94689941 -270.95706177]
[588.46759033 -256.16336060]
[589.88879395 -241.22390747]
[590.20281982 -226.22029114]
[589.40795898 -211.23445129]
[587.50848389 -196.34823608]
[584.51483154 -181.64295959]
[580.44329834 -167.19892883]
[575.31622314 -153.09503174]
[569.16143799 -139.40830994]
[562.01269531 -126.21351624]
[553.90899658 -113.58270264]
[544.89465332 -101.58486938]
[535.01879883 -90.28553009]
[524.33544922 -79.74641418]
[512.90289307 -70.02507782]
[500.78363037 -61.17461014]
[488.04385376 -53.24335861]
[474.75308228 -46.27463531]
[460.98397827 -40.30650330]
[446.81167603 -35.37155914]
[432.31365967 -31.49675751]
[417.56903076 -28.70325851]
[402.65838623 -27.00632095]
[387.66311646 -26.41521454]
[372.66516113 -26.93316460]
[357.74639893 -28.55734444]
[342.98834229 -31.27888298]
[328.47155762 -35.08291626]
[314.27539062 -39.94866562]
[300.47732544 -45.84955597]
[287.15274048 -52.75336075]
[274.37438965 -60.62237549]
[262.21209717 -69.41361237]
[252.55128479 -57.93891525]
[242.89047241 -46.46421432]
[240.98724365 -39.32282257]
[232.99940491 -34.89198303]
[223.16882324 -23.56238747]
[213.33824158 -12.23279476]
[203.50765991 -0.90320200]
[193.67707825 10.42639065]
[183.84649658 21.75598335]
[174.01591492 33.08557892]
[164.18533325 44.41516876]
[164.24867249 47.21769333]
[163.20570374 50.21416092]
[160.97700500 52.98332977]
[157.63696289 55.08300400]
[153.41658020 56.10396957]
[142.92907715 66.82834625]
[139.56243896 81.33748627]
[124.38197327 85.79437256]
[113.89447021 96.51875305]
[110.24102783 110.01482391]
[96.82991028 113.96875000]
[87.25479126 125.51505280]
[78.65622711 137.80589294]
[70.05766296 150.09672546]
[61.45909882 162.38755798]
[52.86053467 174.67840576]
[44.26197052 186.96923828]
[43.30905533 193.51167297]
[39.73209000 197.92782593]
[35.21990585 199.49282837]
[26.25921059 211.52220154]
[17.29851341 223.55158997]
[8.33781815 235.58096313]
[-0.62287807 247.61033630]
[-9.58357430 259.63970947]
[-18.45446968 271.73547363]
[-27.23507309 283.89691162]
[-36.01567459 296.05838013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 210]
[44 209]
[45 208]
[47 207]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 199]
[54 198]
[55 197]
[56 196]
[57 195]
[58 194]
[70 193]
[72 191]
[73 190]
[75 188]
[76 187]
[77 182]
[78 181]
[79 180]
[80 179]
[81 178]
[82 177]
[83 176]
[84 175]
[85 173]
[86 172]
[87 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
