%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[65.72541046 548.16821289]
[50.67403030 550.94573975]
[36.05935669 546.39929199]
[25.23973465 535.57366943]
[20.70142746 520.95648193]
[23.48731041 505.90664673]
[32.95720673 493.88250732]
[46.93500137 487.64715576]
[47.82781601 472.67373657]
[48.72063065 457.70034790]
[49.61344910 442.72692871]
[46.87364578 435.86288452]
[50.63265991 427.53775024]
[47.99535751 420.63366699]
[51.87790298 412.36544800]
[53.21613693 397.42526245]
[54.55437088 382.48507690]
[44.83658981 371.25561523]
[45.98092270 356.08508301]
[57.82527924 345.96832275]
[59.16351318 331.02813721]
[60.50174713 316.08795166]
[61.83998108 301.14776611]
[55.26900482 287.78097534]
[64.20664215 274.72610474]
[65.32229614 259.76763916]
[66.21511078 244.79425049]
[67.10792542 229.82084656]
[57.55337143 241.38417053]
[43.53203201 246.71353149]
[28.70905495 244.41584778]
[16.95912933 235.09172058]
[11.35365772 221.17846680]
[13.35789585 206.31297302]
[22.44794273 194.38102722]
[36.24768066 188.50164795]
[51.14989090 190.21165466]
[63.25917053 199.06407166]
[69.41004181 212.74401855]
[72.51415253 198.06871033]
[67.57812500 184.01577759]
[78.00376129 172.11549377]
[71.67309570 155.74816895]
[84.09451294 142.15441895]
[86.97978973 127.43453217]
[89.86505890 112.71463776]
[84.02105713 96.99128723]
[95.18329620 84.47007751]
[97.84909058 69.70886230]
[86.98815155 80.05487823]
[72.43286896 83.68030548]
[57.98796082 79.63747406]
[47.42928314 68.98316193]
[43.51685715 54.50238419]
[47.27337646 39.98038101]
[57.71689987 29.21317101]
[72.11751556 25.01527405]
[86.71092987 28.48401260]
[97.68247223 38.71266556]
[102.16415405 53.02659988]
[106.99015045 38.82414627]
[111.81614685 24.62168884]
[116.64215088 10.41923428]
[121.46814728 -3.78322172]
[126.29414368 -17.98567772]
[131.12013245 -32.18813324]
[135.94613647 -46.39058685]
[129.21273804 -60.43690872]
[134.30931091 -74.77146912]
[147.74182129 -81.10417175]
[151.92883301 -95.50795746]
[155.46850586 -110.08432770]
[159.00817871 -124.66070557]
[151.04847717 -138.05029297]
[154.84585571 -152.78237915]
[167.65983582 -160.28822327]
[171.19950867 -174.86459351]
[174.73918152 -189.44097900]
[178.27885437 -204.01734924]
[181.81852722 -218.59371948]
[171.94503784 -230.41830444]
[170.93920898 -245.61177063]
[178.97764587 -258.33370972]
[192.80041504 -263.81719971]
[196.34008789 -278.39358521]
[199.87976074 -292.96997070]
[203.41943359 -307.54632568]
[206.63272095 -322.19812012]
[209.51799011 -336.91802979]
[212.40325928 -351.63790894]
[215.28852844 -366.35778809]
[218.06414795 -381.09875488]
[220.72993469 -395.85998535]
[223.39573669 -410.62118530]
[225.84146118 -425.42047119]
[228.06657410 -440.25451660]
[222.46202087 -455.04977417]
[232.00169373 -466.48846436]
[234.22680664 -481.32250977]
[220.38873291 -487.33666992]
[208.57936096 -496.72821045]
[199.60388184 -508.85684204]
[194.07426453 -522.89556885]
[192.36750793 -537.88720703]
[194.59999084 -552.80963135]
[200.61949158 -566.64538574]
[210.01560974 -578.45111084]
[222.14767456 -587.42187500]
[236.18853760 -592.94610596]
[251.18083191 -594.64709473]
[266.10238647 -592.40881348]
[279.93582153 -586.38397217]
[291.73791504 -576.98333740]
[300.70404053 -564.84777832]
[306.22280884 -550.80480957]
[307.91799927 -535.81182861]
[305.67398071 -520.89111328]
[299.64379883 -507.06005859]
[290.23858643 -495.26156616]
[278.09957886 -486.30014038]
[264.05447388 -480.78677368]
[249.06085205 -479.09738159]
[246.83573914 -464.26333618]
[252.59945679 -450.52911377]
[242.90061951 -438.02938843]
[240.67550659 -423.19534302]
[242.74346924 -418.89041138]
[242.12904358 -413.24066162]
[238.15695190 -407.95541382]
[235.49114990 -393.19418335]
[232.82536316 -378.43295288]
[234.73008728 -371.29196167]
[230.00842285 -363.47253418]
[227.12315369 -348.75262451]
[224.23788452 -334.03274536]
[221.35260010 -319.31283569]
[223.00567627 -316.19842529]
[223.23237610 -312.12857056]
[221.60006714 -307.78244019]
[217.99581909 -304.00665283]
[214.45614624 -289.43029785]
[210.91647339 -274.85391235]
[207.37680054 -260.27752686]
[217.14523315 -249.06523132]
[218.45378113 -234.07351685]
[210.59182739 -221.03346252]
[196.39489746 -215.05404663]
[192.85522461 -200.47767639]
[189.31555176 -185.90130615]
[185.77587891 -171.32492065]
[182.23620605 -156.74855042]
[190.18067932 -144.20181274]
[186.79859924 -129.36886597]
[173.58454895 -121.12103271]
[170.04487610 -106.54465485]
[166.50520325 -91.96828461]
[179.84526062 -98.82706451]
[194.16952515 -94.37560272]
[201.27239990 -81.16389465]
[197.08505249 -66.76021576]
[184.00616455 -59.41563797]
[169.52793884 -63.33747482]
[161.94427490 -76.27817535]
[168.73771667 -63.07268906]
[164.04577637 -48.60063171]
[150.14859009 -41.56459045]
[145.32260132 -27.36213493]
[140.49659729 -13.15967941]
[135.67059326 1.04277599]
[130.84460449 15.24523163]
[126.01860809 29.44768715]
[121.19260406 43.65014267]
[116.36660767 57.85260010]
[112.61030579 72.37465668]
[109.94451141 87.13587189]
[115.99656677 97.08644867]
[113.84149170 108.53182983]
[104.58495331 115.59991455]
[101.69967651 130.31980896]
[98.81440735 145.03968811]
[105.34928131 156.15986633]
[102.64308929 168.36070251]
[92.67906189 175.21960449]
[97.39305878 190.32221985]
[87.18945312 201.17282104]
[84.08534241 215.84812927]
[82.08132935 230.71365356]
[81.18851471 245.68705750]
[80.29570007 260.66046143]
[82.90840149 266.73379517]
[82.17226410 272.36895752]
[79.14682770 276.06433105]
[85.62208557 290.49978638]
[76.78016663 302.48599243]
[75.44193268 317.42617798]
[74.10369873 332.36636353]
[72.76546478 347.30654907]
[82.62332153 359.36724854]
[81.05333710 374.49966431]
[69.49456024 383.82330322]
[68.15632629 398.76348877]
[66.81809235 413.70367432]
[65.59111023 428.65341187]
[64.58685303 443.61975098]
[63.69403839 458.59313965]
[62.80122375 473.56655884]
[61.90840530 488.53997803]
[75.04620361 496.39215088]
[83.02016449 509.45639038]
[83.99791718 524.73065186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[13 203]
[15 202]
[16 201]
[17 200]
[20 197]
[21 196]
[22 195]
[23 194]
[25 192]
[26 189]
[27 188]
[28 187]
[39 186]
[40 185]
[42 183]
[44 180]
[45 179]
[46 178]
[48 175]
[49 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 166]
[70 163]
[71 156]
[72 155]
[73 154]
[76 151]
[77 150]
[78 149]
[79 148]
[80 147]
[84 143]
[85 142]
[86 141]
[87 140]
[88 136]
[89 135]
[90 134]
[91 133]
[92 131]
[93 130]
[94 129]
[95 126]
[96 125]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
