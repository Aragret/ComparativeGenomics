%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[159.58093262 699.57843018]
[151.89877319 686.67633057]
[145.70951843 672.99517822]
[141.09101868 658.70709229]
[138.10134888 643.99169922]
[136.77810669 629.03417969]
[137.13793945 614.02246094]
[139.17630005 599.14544678]
[142.86758423 584.59027100]
[148.16535950 570.53985596]
[155.00297546 557.17095947]
[163.29447937 544.65173340]
[172.93559265 533.13964844]
[183.80503845 522.77935791]
[195.76614380 513.70123291]
[208.66848755 506.01950073]
[222.34979248 499.83065796]
[217.73577881 485.55792236]
[213.12178040 471.28518677]
[208.50776672 457.01245117]
[203.89375305 442.73971558]
[187.09512329 440.93249512]
[172.72940063 431.93475342]
[163.71246338 417.51571655]
[161.89945984 400.55068970]
[167.70327759 384.44766235]
[180.00177002 372.46279907]
[174.96485901 358.33377075]
[169.92793274 344.20474243]
[164.89102173 330.07571411]
[153.32923889 320.68557739]
[155.98324585 305.08859253]
[152.12881470 302.26858521]
[150.00497437 296.99731445]
[151.01354980 290.46322632]
[146.39953613 276.19049072]
[141.78553772 261.91775513]
[131.16200256 256.13265991]
[127.20118713 244.27957153]
[132.54371643 232.53988647]
[128.14271545 218.20004272]
[123.74172211 203.86019897]
[119.34072113 189.52035522]
[106.10270691 182.79051208]
[101.43519592 168.31056213]
[108.58381653 154.47094727]
[104.18282318 140.13110352]
[99.78182220 125.79125977]
[95.38082123 111.45140839]
[92.68172455 126.20657349]
[85.80668640 139.53825378]
[75.35047150 150.29315186]
[62.21764374 157.54081726]
[47.54432678 160.65429688]
[32.59990311 159.36422729]
[18.67722511 153.78219604]
[6.98073483 144.39112854]
[-1.47769988 132.00344849]
[-5.96634102 117.69078827]
[-6.09687614 102.69135284]
[-1.85801268 88.30274963]
[6.38354540 75.76972198]
[17.91482162 66.17651367]
[31.73824310 60.35302353]
[46.65794754 58.80305099]
[61.38323212 61.66067886]
[74.64020538 68.67869568]
[85.28202057 79.24996948]
[92.38684845 92.45667267]
[92.16352081 77.45833588]
[91.94019318 62.45999908]
[91.71686554 47.46166229]
[91.49353790 32.46332169]
[82.79890442 22.93619537]
[82.92166138 10.43944740]
[91.25061798 1.66704547]
[91.25061798 -13.33295441]
[91.25061798 -28.33295441]
[83.51332092 -42.13312531]
[91.25061798 -54.86039734]
[83.51332092 -68.66056824]
[91.25061798 -81.38784027]
[88.12121582 -89.96949005]
[91.36395264 -96.61075592]
[91.58728027 -111.60909271]
[91.81060791 -126.60742950]
[88.80931091 -135.23471069]
[92.15057373 -141.82696533]
[92.59717560 -156.82031250]
[93.04378510 -171.81365967]
[93.49038696 -186.80702209]
[78.82303619 -190.17674255]
[65.09503937 -196.34344482]
[52.83406067 -205.07011414]
[42.51138306 -216.02130127]
[34.52378464 -228.77607727]
[29.17828178 -242.84419250]
[26.68034554 -257.68490601]
[27.12598991 -272.72775269]
[30.49808311 -287.39456177]
[36.66701508 -301.12158203]
[45.39566040 -313.38113403]
[56.34852219 -323.70202637]
[69.10459900 -331.68756104]
[83.17357635 -337.03079224]
[98.01468658 -339.52633667]
[113.05747223 -339.07824707]
[127.72373199 -335.70379639]
[141.44973755 -329.53262329]
[153.70788574 -320.80200195]
[164.02702332 -309.84747314]
[172.01049805 -297.09008789]
[177.35144043 -283.02026367]
[179.84457397 -268.17874146]
[179.39405823 -253.13603210]
[176.01721191 -238.47032166]
[169.84384155 -224.74531555]
[161.11122131 -212.48857117]
[150.15502930 -202.17121887]
[137.39636230 -194.18980408]
[123.32565308 -188.85113525]
[108.48374176 -186.36041260]
[108.03713226 -171.36706543]
[107.59052277 -156.37371826]
[107.14392090 -141.38035583]
[106.80894470 -126.38410187]
[106.58561707 -111.38576508]
[106.36228943 -96.38742828]
[106.25061798 -81.38784027]
[113.98792267 -68.66056824]
[106.25061798 -54.86039734]
[113.98792267 -42.13312531]
[106.25061798 -28.33295441]
[106.25061798 -13.33295441]
[106.25061798 1.66704547]
[115.83131409 16.37001228]
[106.49187469 32.23999405]
[106.71520233 47.23833466]
[106.93852997 62.23667145]
[107.16185760 77.23500824]
[107.38518524 92.23334503]
[109.72067261 107.05041504]
[114.12166595 121.39025879]
[118.52266693 135.73010254]
[122.92366791 150.06996155]
[136.60520935 157.51664734]
[140.86416626 172.12197876]
[133.68057251 185.11935425]
[138.08155823 199.45919800]
[142.48255920 213.79904175]
[146.88356018 228.13888550]
[160.65179443 240.36660767]
[156.05825806 257.30374146]
[160.67227173 271.57647705]
[165.28628540 285.84921265]
[170.11227417 300.05166626]
[182.03433228 310.45239258]
[179.02005005 325.03878784]
[184.05696106 339.16781616]
[189.09388733 353.29684448]
[194.13079834 367.42587280]
[207.33654785 367.88375854]
[219.57115173 372.79022217]
[229.38644409 381.54107666]
[235.62860107 393.07861328]
[237.57374573 406.01916504]
[235.01181030 418.81930542]
[228.26901245 429.95974731]
[218.16648865 438.12570190]
[222.78050232 452.39843750]
[227.39451599 466.67117310]
[232.00851440 480.94390869]
[236.62252808 495.21664429]
[251.33761597 492.22564697]
[266.29507446 490.90106201]
[281.30679321 491.25955200]
[296.18395996 493.29656982]
[310.73953247 496.98654175]
[324.79040527 502.28305054]
[338.15988159 509.11947632]
[350.67984009 517.40985107]
[362.19284058 527.04992676]
[372.55407715 537.91845703]
[381.63327026 549.87872314]
[389.31619263 562.78039551]
[395.50625610 576.46118164]
[400.12561035 590.74896240]
[403.11618042 605.46417236]
[404.44030762 620.42163086]
[404.08139038 635.43334961]
[402.04388428 650.31048584]
[398.35348511 664.86590576]
[393.05654907 678.91662598]
[386.21972656 692.28588867]
[377.92898560 704.80560303]
[368.28857422 716.31835938]
[357.41973877 726.67926025]
[345.45916748 735.75805664]
[332.55728149 743.44061279]
[318.87634277 749.63024902]
[304.58840942 754.24920654]
[289.87310791 757.23931885]
[274.91558838 758.56298828]
[259.90390015 758.20361328]
[245.02684021 756.16571045]
[230.47151184 752.47485352]
[216.42094421 747.17749023]
[203.05186462 740.34027100]
[190.53239441 732.04913330]
[179.01997375 722.40838623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[27 161]
[28 160]
[29 159]
[30 158]
[32 156]
[35 155]
[36 154]
[37 153]
[40 151]
[41 150]
[42 149]
[43 148]
[46 145]
[47 144]
[48 143]
[49 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[76 135]
[77 134]
[78 133]
[80 131]
[82 129]
[84 128]
[85 127]
[86 126]
[88 125]
[89 124]
[90 123]
[91 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
