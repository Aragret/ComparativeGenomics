%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[11.44980526 337.20935059]
[17.60004807 350.92184448]
[21.63776016 365.39782715]
[23.47273636 380.31396484]
[23.06398582 395.33694458]
[20.42063713 410.13122559]
[15.60174465 424.36624146]
[8.71496391 437.72402954]
[-0.08585081 449.90609741]
[-10.60408688 460.64038086]
[-22.60476303 469.68698120]
[-35.81977844 476.84387207]
[-49.95390701 481.95114136]
[-64.69139099 484.89465332]
[-79.70298004 485.60870361]
[-94.65331268 484.07730103]
[-109.20839691 480.33468628]
[-123.04306030 474.46444702]
[-135.84823608 466.59774780]
[-147.33786011 456.91030884]
[-157.25523376 445.61859131]
[-165.37879944 432.97479248]
[-171.52709961 419.26144409]
[-175.56274414 404.78488159]
[-177.39559937 389.86849976]
[-176.98471069 374.84555054]
[-174.33924866 360.05166626]
[-169.51832581 345.81732178]
[-162.62965393 332.46054077]
[-153.82710266 320.27969360]
[-143.30732727 309.54693604]
[-131.30537415 300.50201416]
[-118.08933258 293.34701538]
[-103.95447540 288.24176025]
[-89.21658325 285.30035400]
[-74.20488739 284.58843994]
[-59.25477219 286.12194824]
[-44.70022202 289.86666870]
[-30.86639214 295.73886108]
[-23.01463699 282.95800781]
[-15.16288185 270.17718506]
[-7.31112623 257.39633179]
[-11.01103497 243.01417542]
[-3.23030663 229.94073486]
[11.88010311 226.15745544]
[19.73185730 213.37660217]
[27.58361435 200.59576416]
[22.86558723 188.60536194]
[25.96127319 175.89714050]
[35.95816803 167.16372681]
[49.35407639 165.76220703]
[57.39524841 153.09968567]
[65.43642426 140.43714905]
[73.47759247 127.77462769]
[81.51876831 115.11210632]
[76.16947174 101.42744446]
[79.84696198 87.20207214]
[91.15824890 77.82444763]
[105.81871033 76.84671783]
[113.85987854 64.18419647]
[121.90105438 51.52167130]
[129.27174377 38.45748520]
[135.95193481 25.02711105]
[142.63212585 11.59673405]
[149.31233215 -1.83364177]
[155.99252319 -15.26401806]
[154.42466736 -33.61131668]
[169.41659546 -42.73323441]
[175.89608765 -56.26157761]
[182.37557983 -69.78992462]
[169.26753235 -77.09215546]
[156.63386536 -85.18747711]
[144.52252197 -94.04518890]
[132.97944641 -103.63168335]
[122.04841614 -113.91060638]
[111.77089691 -124.84295654]
[102.18588257 -136.38726807]
[93.32972717 -148.49974060]
[85.23602295 -161.13444519]
[77.93547821 -174.24343872]
[71.45578766 -187.77699280]
[65.82152557 -201.68379211]
[61.05406570 -215.91105652]
[57.17149734 -230.40481567]
[54.18854141 -245.11010742]
[52.11651993 -259.97113037]
[50.96329117 -274.93154907]
[50.73322678 -289.93457031]
[51.42720032 -304.92330933]
[53.04257965 -319.84088135]
[55.57324219 -334.63073730]
[59.00957870 -349.23672485]
[63.33856201 -363.60348511]
[68.54376984 -377.67648315]
[74.60544586 -391.40234375]
[81.50061035 -404.72903442]
[89.20310211 -417.60595703]
[97.68370819 -429.98428345]
[106.91024017 -441.81707764]
[116.84772491 -453.05941772]
[127.45844269 -463.66867065]
[138.70214844 -473.60458374]
[150.53620911 -482.82949829]
[162.91571045 -491.30838013]
[175.79370117 -499.00909424]
[189.12133789 -505.90240479]
[202.84805298 -511.96218872]
[216.92176819 -517.16546631]
[231.28912354 -521.49243164]
[245.89559937 -524.92675781]
[260.68579102 -527.45538330]
[275.60357666 -529.06872559]
[290.59240723 -529.76062012]
[305.59539795 -529.52844238]
[320.55566406 -528.37316895]
[335.41641235 -526.29907227]
[350.12127686 -523.31408691]
[364.61450195 -519.42950439]
[378.84112549 -514.66009521]
[392.74713135 -509.02392578]
[406.27978516 -502.54235840]
[419.38778687 -495.23999023]
[432.02136230 -487.14456177]
[444.13259888 -478.28671265]
[455.67559814 -468.70010376]
[466.60653687 -458.42108154]
[476.88394165 -447.48861694]
[486.46884155 -435.94421387]
[495.32485962 -423.83166504]
[503.41845703 -411.19686890]
[510.71887207 -398.08779907]
[517.19842529 -384.55419922]
[522.83251953 -370.64733887]
[527.59985352 -356.42004395]
[531.48229980 -341.92623901]
[534.46508789 -327.22091675]
[536.53698730 -312.35986328]
[537.69006348 -297.39944458]
[537.91998291 -282.39642334]
[537.22583008 -267.40768433]
[535.61035156 -252.49012756]
[533.07952881 -237.70030212]
[529.64306641 -223.09434509]
[525.31390381 -208.72763062]
[520.10858154 -194.65467834]
[514.04675293 -180.92886353]
[507.15145874 -167.60224915]
[499.44885254 -154.72540283]
[490.96813965 -142.34715271]
[481.74145508 -130.51446533]
[471.80389404 -119.27222443]
[461.19305420 -108.66307831]
[449.94924927 -98.72726440]
[438.11511230 -89.50247955]
[425.73550415 -81.02371216]
[412.85745239 -73.32312775]
[399.52975464 -66.42993164]
[385.80297852 -60.37028503]
[371.72918701 -55.16716385]
[357.36181641 -50.84030914]
[342.75531006 -47.40613556]
[327.96508789 -44.87766647]
[313.04727173 -43.26449203]
[298.05844116 -42.57273865]
[283.05545044 -42.80502319]
[268.09521484 -43.96047211]
[253.23448181 -46.03469467]
[238.52963257 -49.01982498]
[224.03643799 -52.90454102]
[209.80987549 -57.67410660]
[195.90393066 -63.31042862]
[189.42443848 -49.78208542]
[182.94493103 -36.25373840]
[186.66735840 -24.74416924]
[181.37989807 -13.42045307]
[169.42289734 -8.58382320]
[162.74270630 4.84655285]
[156.06250000 18.27692986]
[149.38230896 31.70730400]
[142.70211792 45.13768005]
[156.89427185 40.28145218]
[170.93240356 45.56638718]
[178.39849854 58.57628632]
[175.87913513 73.36320496]
[164.52613831 83.16674805]
[149.52995300 83.50488281]
[137.74662781 74.22301483]
[134.56358337 59.56284332]
[126.52240753 72.22537231]
[118.48123169 84.88789368]
[123.83052826 98.57255554]
[120.15303802 112.79792786]
[108.84175110 122.17555237]
[94.18128967 123.15328217]
[86.14012146 135.81581116]
[78.09894562 148.47833252]
[70.05777740 161.14085388]
[62.01660156 173.80337524]
[66.13958740 190.80397034]
[56.87400055 205.24224854]
[40.36445618 208.44752502]
[32.51269913 221.22836304]
[24.66094589 234.00920105]
[28.11607742 249.19801331]
[19.97121429 262.04776001]
[5.46971607 265.24807739]
[-2.38203931 278.02893066]
[-10.23379517 290.80978394]
[-18.08555031 303.59060669]
[-6.59455252 313.27639771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 209]
[40 208]
[41 207]
[42 206]
[45 203]
[46 202]
[47 201]
[51 198]
[52 197]
[53 196]
[54 195]
[55 194]
[59 190]
[60 189]
[61 188]
[62 180]
[63 179]
[64 178]
[65 177]
[66 176]
[68 173]
[69 172]
[70 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
