%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[97.79499817 649.48339844]
[84.61556244 657.67376709]
[69.14146423 656.51965332]
[57.32281494 646.46484375]
[53.70412064 631.37561035]
[59.67684555 617.05407715]
[72.94435120 609.00720215]
[74.06000519 594.04870605]
[75.17565155 579.09027100]
[76.29129791 564.13183594]
[77.40694427 549.17333984]
[78.52259827 534.21490479]
[79.63824463 519.25646973]
[80.75389099 504.29800415]
[81.86954498 489.33953857]
[80.14458466 487.12988281]
[79.19097137 484.10379028]
[79.32405090 480.55163574]
[80.74832916 476.87252808]
[83.52298737 473.53256226]
[85.52700043 458.66705322]
[87.53102112 443.80151367]
[89.53503418 428.93600464]
[91.31749725 414.04226685]
[92.87802124 399.12365723]
[94.43854523 384.20507812]
[92.00797272 377.22552490]
[96.13497162 369.07653809]
[97.91743469 354.18283081]
[99.69990540 339.28912354]
[101.48236847 324.39538574]
[102.82060242 309.45520020]
[103.71341705 294.48181152]
[100.97361755 287.61773682]
[104.73263550 279.29263306]
[104.73263550 264.29263306]
[103.61698151 249.33416748]
[102.50133514 234.37571716]
[101.38568878 219.41726685]
[100.27003479 204.45881653]
[88.85135651 194.96411133]
[87.50683594 179.81001282]
[97.54317474 167.89743042]
[96.42752075 152.93896484]
[95.31187439 137.98051453]
[94.19622803 123.02206421]
[93.08058167 108.06360626]
[90.96595764 93.21340942]
[87.86184692 78.53810883]
[84.75773621 63.86280823]
[81.65362549 49.18750381]
[76.81606293 41.43922424]
[78.61425781 34.27066422]
[75.72898865 19.55077171]
[72.84371185 4.83088064]
[69.87517548 1.66201258]
[68.23443604 -1.92581475]
[67.89016724 -5.46373558]
[68.66197205 -8.54122257]
[70.25234985 -10.84964943]
[60.74069977 -23.49239540]
[66.70825958 -37.13928223]
[64.59363556 -51.98947906]
[62.36851883 -66.82352448]
[60.14340210 -81.65756226]
[46.53654099 -88.87971497]
[39.86931229 -102.56918335]
[42.51013947 -117.38437653]
[53.23993301 -127.68047333]
[51.01481628 -142.51451111]
[48.34902191 -157.27572632]
[45.24491119 -171.95103455]
[42.14080048 -186.62634277]
[39.03668976 -201.30163574]
[35.93257904 -215.97694397]
[32.82846832 -230.65223694]
[29.33823395 -234.53364563]
[27.83605766 -238.92646790]
[28.18382454 -242.98774719]
[29.92889023 -246.05158997]
[27.48316383 -260.85086060]
[25.03743553 -275.65011597]
[22.59170914 -290.44940186]
[7.55224800 -290.68264771]
[-7.20383549 -293.59774780]
[-21.20219421 -299.10098267]
[-33.99283981 -307.01547241]
[-45.16460419 -317.08679199]
[-54.35836411 -328.99118042]
[-61.27857590 -342.34597778]
[-65.70278168 -356.72186279]
[-67.48876953 -371.65670776]
[-66.57911682 -386.67047119]
[-63.00307465 -401.28045654]
[-56.87559128 -415.01702881]
[-48.39363861 -427.43862915]
[-37.82988358 -438.14596558]
[-25.52390289 -446.79479980]
[-11.87128353 -453.10714722]
[2.68909955 -456.88009644]
[17.68918991 -457.99230957]
[32.64679718 -456.40811157]
[47.08109665 -452.17834473]
[60.52808380 -445.43902588]
[72.55549622 -436.40679932]
[82.77669525 -425.37200928]
[90.86312103 -412.68936157]
[96.55482483 -398.76657104]
[99.66883850 -384.05117798]
[100.10506439 -369.01623535]
[97.84947968 -354.14505005]
[92.97458649 -339.91567993]
[85.63709259 -326.78552246]
[76.07287598 -315.17666626]
[64.58938599 -305.46228027]
[51.55575943 -297.95465088]
[37.39097977 -292.89514160]
[39.83670807 -278.09585571]
[42.28243256 -263.29660034]
[44.72816086 -248.49731445]
[47.50377274 -233.75634766]
[50.60788345 -219.08105469]
[53.71199417 -204.40574646]
[56.81610107 -189.73045349]
[59.92021179 -175.05514526]
[63.02432251 -160.37983704]
[65.29751587 -158.73948669]
[67.05790710 -156.09986877]
[67.92164612 -152.65177917]
[67.58094788 -148.72131348]
[65.84886169 -144.73963928]
[68.07397461 -129.90559387]
[81.35242462 -123.21075439]
[88.22380066 -109.82239532]
[85.86648560 -94.77923584]
[74.97744751 -83.88268280]
[77.20256042 -69.04863739]
[79.42768097 -54.21459579]
[83.52862549 -48.06609726]
[81.57379150 -39.14329529]
[90.94210052 -27.56382942]
[85.11788177 -12.85366249]
[87.56360626 1.94560802]
[90.44888306 16.66549873]
[93.33415222 31.38539124]
[96.32892609 46.08339310]
[99.43303680 60.75869751]
[102.53714752 75.43399811]
[105.64125824 90.10929871]
[112.32314301 76.67976379]
[125.14998627 68.90338898]
[140.14724731 69.18976593]
[152.66787720 77.45014954]
[158.83219910 91.12498474]
[156.73014832 105.97696686]
[147.01306152 117.40405273]
[132.69187927 121.86542511]
[118.20418549 117.97869110]
[108.03903198 106.94795990]
[109.15467834 121.90641785]
[110.27033234 136.86486816]
[111.38597870 151.82331848]
[112.50162506 166.78176880]
[124.19404602 177.07376099]
[125.11238861 192.25965881]
[115.22849274 203.34317017]
[116.34413910 218.30162048]
[117.45978546 233.26007080]
[118.57543945 248.21852112]
[119.69108582 263.17697144]
[127.61511230 250.44082642]
[140.79875183 243.28596497]
[155.79580688 243.58268738]
[168.68611145 251.25343323]
[176.10015869 264.29306030]
[176.09992981 279.29306030]
[168.68548584 292.33245850]
[155.79495239 300.00280762]
[140.79788208 300.29907227]
[127.61447144 293.14382935]
[119.69108582 280.40826416]
[118.68682861 295.37463379]
[117.79400635 310.34802246]
[119.87442017 314.15930176]
[120.56441498 318.04370117]
[120.01174927 321.55508423]
[118.49386597 324.34124756]
[116.37608337 326.17785645]
[114.59362030 341.07159424]
[112.81115723 355.96530151]
[111.02868652 370.85900879]
[109.35714722 385.76559448]
[107.79662323 400.68420410]
[106.23609924 415.60278320]
[108.57501221 421.78674316]
[107.58798218 427.38342285]
[104.40055847 430.94000244]
[102.39654541 445.80554199]
[100.39253235 460.67105103]
[98.38851929 475.53659058]
[96.82799530 490.45520020]
[95.71234894 505.41363525]
[94.59669495 520.37213135]
[93.48104858 535.33056641]
[92.36540222 550.28900146]
[91.24975586 565.24743652]
[90.13410187 580.20593262]
[89.01845551 595.16436768]
[87.90280914 610.12280273]
[99.82984161 620.04882812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 194]
[25 193]
[26 192]
[28 191]
[29 190]
[30 189]
[31 188]
[32 183]
[33 182]
[35 181]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[48 149]
[49 148]
[50 147]
[51 146]
[53 145]
[54 144]
[55 143]
[60 142]
[62 140]
[63 138]
[64 137]
[65 136]
[69 132]
[70 131]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
[76 121]
[80 120]
[81 119]
[82 118]
[83 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
