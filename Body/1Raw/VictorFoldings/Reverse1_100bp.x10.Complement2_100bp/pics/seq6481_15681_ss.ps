%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[130.16151428 620.52227783]
[137.34678650 607.22326660]
[148.13395691 596.63421631]
[161.56382751 589.69659424]
[158.89802551 574.93542480]
[156.23223877 560.17419434]
[153.56643677 545.41296387]
[150.90065002 530.65173340]
[148.23484802 515.89050293]
[145.56904602 501.12930298]
[130.23283386 496.03884888]
[119.49459839 483.83859253]
[116.35630035 467.79589844]
[121.76743317 452.27124023]
[134.34051514 441.53298950]
[131.45523071 426.81311035]
[128.56996155 412.09323120]
[125.68469238 397.37332153]
[122.29122925 394.01275635]
[120.97282410 388.48474121]
[122.93951416 382.17257690]
[120.49378967 367.37329102]
[118.04805756 352.57403564]
[115.60233307 337.77474976]
[104.87815857 348.26245117]
[89.97410583 346.56863403]
[81.87687683 333.94186401]
[86.55545807 319.69015503]
[100.56096649 314.31936646]
[113.56813049 321.78723145]
[112.22989655 306.84704590]
[100.67111206 297.52340698]
[99.10112762 282.39099121]
[108.95898438 270.33029175]
[107.62075043 255.39010620]
[106.28251648 240.44992065]
[104.94428253 225.50973511]
[103.60604858 210.56954956]
[102.15663147 195.63973999]
[100.59610748 180.72114563]
[99.03558350 165.80253601]
[97.47505951 150.88392639]
[95.91453552 135.96533203]
[92.09222412 129.63984680]
[94.44354248 120.81323242]
[93.10530853 105.87304688]
[90.52626801 103.00582886]
[89.22357941 99.01573181]
[89.67039490 94.49827576]
[92.05619049 90.23825073]
[91.38640594 75.25321198]
[83.04061127 61.81229401]
[90.20189667 48.75222778]
[89.53211212 33.76718903]
[88.86232758 18.78215027]
[87.96950531 3.80874491]
[86.85385895 -11.14970875]
[85.51562500 -26.08989334]
[83.95510101 -41.00849915]
[82.39457703 -55.92710114]
[80.83405304 -70.84571075]
[79.27353668 -85.76431274]
[77.71301270 -100.68291473]
[75.93054199 -115.57663727]
[73.92652893 -130.44216919]
[71.92251587 -145.30769348]
[61.99045944 -134.06695557]
[47.02817154 -133.00398254]
[35.60672760 -142.72769165]
[34.26885223 -157.66790771]
[43.78094101 -169.26618958]
[58.69403458 -170.87852478]
[70.46477509 -161.58210754]
[69.79499054 -176.56713867]
[69.12519836 -191.55218506]
[66.31452942 -195.95072937]
[65.54869843 -200.52967834]
[66.55400085 -204.47991943]
[68.77526093 -207.21823120]
[68.77526093 -222.21823120]
[68.77526093 -237.21823120]
[68.77526093 -252.21823120]
[61.03796387 -266.01840210]
[68.77526093 -278.74566650]
[68.77526093 -293.74566650]
[53.91425705 -295.98355103]
[39.55279922 -300.41143799]
[26.01173973 -306.93045044]
[13.59358311 -315.39489746]
[2.57575846 -325.61572266]
[-6.79559183 -337.36456299]
[-14.31110764 -350.37896729]
[-19.80289078 -364.36816406]
[-23.14825439 -379.01968384]
[-24.27245712 -394.00613403]
[-23.15038872 -408.99273682]
[-19.80711365 -423.64471436]
[-14.31732178 -437.63470459]
[-6.80365896 -450.65017700]
[2.56601763 -462.40036011]
[13.58238602 -472.62274170]
[25.99933624 -481.08895874]
[39.53947067 -487.60989380]
[53.90029526 -492.03982544]
[68.76098633 -494.27981567]
[83.78954315 -494.27981567]
[98.65023804 -492.03982544]
[113.01106262 -487.60989380]
[126.55119324 -481.08895874]
[138.96813965 -472.62274170]
[149.98451233 -462.40036011]
[159.35418701 -450.65017700]
[166.86784363 -437.63470459]
[172.35763550 -423.64471436]
[175.70091248 -408.99273682]
[176.82298279 -394.00613403]
[175.69877625 -379.01968384]
[172.35342407 -364.36816406]
[166.86163330 -350.37896729]
[159.34611511 -337.36456299]
[149.97477722 -325.61572266]
[138.95693970 -315.39489746]
[126.53878784 -306.93045044]
[112.99772644 -300.41143799]
[98.63627625 -295.98355103]
[83.77526093 -293.74566650]
[83.77526093 -278.74566650]
[91.51256561 -266.01840210]
[83.77526093 -252.21823120]
[83.77526093 -237.21823120]
[83.77526093 -222.21823120]
[83.77526093 -207.21823120]
[84.11023712 -192.22196960]
[84.78002930 -177.23692322]
[85.44981384 -162.25189209]
[86.78804779 -147.31170654]
[88.79206085 -132.44618225]
[90.79607391 -117.58065033]
[93.98349762 -114.02404785]
[94.97052765 -108.42737579]
[92.63161469 -102.24343872]
[94.19213867 -87.32483673]
[95.75266266 -72.40622711]
[97.31318665 -57.48762512]
[98.87371063 -42.56901932]
[100.43422699 -27.65041733]
[103.51434326 -24.00049400]
[104.33430481 -18.37691116]
[101.81230927 -12.26535702]
[102.92796326 2.69309640]
[105.89804077 6.43310642]
[106.55020142 12.07861042]
[103.84736633 18.11236572]
[104.51715088 33.09740448]
[105.18693542 48.08244324]
[113.48481750 60.45153046]
[106.37144470 74.58342743]
[107.04122925 89.56846619]
[108.04549408 104.53481293]
[109.38372803 119.47499847]
[110.83314514 134.40480042]
[112.39366913 149.32341003]
[113.95419312 164.24201965]
[115.51470947 179.16061401]
[117.07523346 194.07922363]
[121.08045197 202.28872681]
[118.54623413 209.23132324]
[119.88446808 224.17150879]
[121.22270203 239.11169434]
[122.56093597 254.05187988]
[123.89916992 268.99206543]
[135.74353027 279.10882568]
[136.88786316 294.27935791]
[127.17007446 305.50878906]
[128.50831604 320.44897461]
[130.40161133 335.32901001]
[132.84733582 350.12829590]
[135.29306030 364.92755127]
[137.73878479 379.72683716]
[140.40458679 394.48803711]
[143.28985596 409.20794678]
[146.17512512 423.92782593]
[149.06039429 438.64773560]
[162.51083374 442.48812866]
[172.94459534 451.70510864]
[178.36326599 464.45721436]
[177.76187134 478.23355103]
[171.31469727 490.34811401]
[160.33027649 498.46350098]
[162.99606323 513.22473145]
[165.66186523 527.98596191]
[168.32765198 542.74719238]
[170.99345398 557.50836182]
[173.65924072 572.26959229]
[176.32504272 587.03082275]
[191.33320618 588.83264160]
[205.14282227 594.97967529]
[216.52595520 604.92529297]
[224.47041321 617.78521729]
[228.26979065 632.41583252]
[227.58625793 647.51629639]
[222.48057556 661.74389648]
[213.40675354 673.83343506]
[201.17161560 682.70996094]
[186.86311340 687.58416748]
[171.75354004 688.02270508]
[157.18643188 683.98651123]
[144.45709229 675.83447266]
[134.69740295 664.29156494]
[128.77517700 650.38403320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[15 183]
[16 182]
[17 181]
[18 180]
[21 179]
[22 178]
[23 177]
[24 176]
[30 175]
[31 174]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[45 160]
[46 159]
[50 158]
[51 157]
[53 155]
[54 154]
[55 153]
[56 150]
[57 149]
[58 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 138]
[65 137]
[66 136]
[73 135]
[74 134]
[75 133]
[79 132]
[80 131]
[81 130]
[82 129]
[84 127]
[85 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
