%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[16.27863312 865.25939941]
[1.29367912 865.98126221]
[-13.70845604 866.05773926]
[-28.69999313 865.48876953]
[-43.65316772 864.27532959]
[-58.54029465 862.41967773]
[-73.33380127 859.92529297]
[-88.00630188 856.79675293]
[-102.53061676 853.03985596]
[-116.87985229 848.66156006]
[-131.02745056 843.67004395]
[-144.94718933 838.07440186]
[-158.61329651 831.88513184]
[-172.00048828 825.11364746]
[-185.08395386 817.77252197]
[-197.83947754 809.87524414]
[-210.24342346 801.43652344]
[-222.27284241 792.47198486]
[-233.90544128 782.99816895]
[-245.11968994 773.03271484]
[-255.89482117 762.59399414]
[-266.21087646 751.70141602]
[-276.04876709 740.37506104]
[-285.39022827 728.63598633]
[-294.21801758 716.50585938]
[-302.51577759 704.00714111]
[-310.26812744 691.16302490]
[-317.46072388 677.99731445]
[-324.08023071 664.53430176]
[-330.11437988 650.79901123]
[-335.55206299 636.81683350]
[-340.38311768 622.61364746]
[-344.59866333 608.21575928]
[-348.19088745 593.64984131]
[-351.15313721 578.94287109]
[-353.47988892 564.12207031]
[-355.16687012 549.21484375]
[-356.21096802 534.24890137]
[-356.61019897 519.25189209]
[-356.36386108 504.25158691]
[-355.47241211 489.27575684]
[-353.93750000 474.35217285]
[-351.76196289 459.50842285]
[-348.94982910 444.77200317]
[-345.50628662 430.17022705]
[-341.43774414 415.73010254]
[-336.75170898 401.47839355]
[-331.45687866 387.44149780]
[-325.56307983 373.64538574]
[-319.08114624 360.11560059]
[-312.02316284 346.87722778]
[-304.40216064 333.95477295]
[-296.23226929 321.37213135]
[-287.52862549 309.15261841]
[-278.30728149 297.31890869]
[-268.58538818 285.89285278]
[-258.38092041 274.89562988]
[-247.71278381 264.34762573]
[-236.60072327 254.26832581]
[-225.06530762 244.67645264]
[-213.12791443 235.58972168]
[-200.81063843 227.02499390]
[-188.13629150 218.99810791]
[-175.12835693 211.52392578]
[-161.81089783 204.61630249]
[-148.20858765 198.28802490]
[-134.34661865 192.55081177]
[-120.25064850 187.41526794]
[-105.94679260 182.89093018]
[-91.46154022 178.98617554]
[-76.82170105 175.70820618]
[-62.05438995 173.06312561]
[-47.18695450 171.05581665]
[-32.24692535 169.68998718]
[-17.26196861 168.96818542]
[-2.25983381 168.89173889]
[12.73170090 169.46078491]
[27.68487358 170.67427063]
[42.57199478 172.52995300]
[57.36549377 175.02439880]
[72.03797913 178.15298462]
[75.79428101 163.63092041]
[79.55058289 149.10887146]
[83.30688477 134.58680725]
[87.06318665 120.06474304]
[90.81948090 105.54268646]
[92.38000488 90.62408447]
[82.11252594 75.33812714]
[90.80109406 60.09097672]
[89.90827942 45.11757278]
[89.01546478 30.14416504]
[88.12265015 15.17076015]
[87.22983551 0.19735445]
[86.33702087 -14.77605152]
[85.44419861 -29.74945641]
[70.90960693 -34.05309677]
[58.72533035 -43.07081223]
[50.36268616 -55.71367645]
[46.83150101 -70.45499420]
[48.55818558 -85.51469421]
[55.33423615 -99.07422638]
[66.34140778 -109.49622345]
[80.25053406 -115.52217102]
[95.38201141 -116.42440796]
[109.90865326 -112.09399414]
[122.07629395 -103.05384064]
[130.41561890 -90.39558411]
[133.91963196 -75.64778137]
[132.16519165 -60.59129715]
[125.36417389 -47.04427338]
[114.33781433 -36.64257812]
[100.41761017 -30.64227295]
[101.31042480 -15.66886711]
[102.20323944 -0.69546139]
[103.09605408 14.27794456]
[103.98886871 29.25135040]
[104.88168335 44.22475433]
[105.77450562 59.19816208]
[114.61083221 67.45925903]
[115.47719574 79.92654419]
[107.36504364 89.95429993]
[113.59350586 76.30855560]
[123.37049866 64.93268585]
[135.92497253 56.72383881]
[150.26683044 52.32940292]
[165.26501465 52.09593582]
[179.73670959 56.04185104]
[192.54060364 63.85595703]
[202.66693115 74.92200470]
[209.31709290 88.36727142]
[211.96664429 103.13141632]
[210.40660095 118.05007172]
[204.76000977 131.94668579]
[195.47219849 143.72532654]
[183.27560425 152.45707703]
[169.13214111 157.45330811]
[154.15719604 158.31999207]
[139.53176880 154.98880005]
[126.40928650 147.72242737]
[115.82462311 137.09393311]
[108.61254120 123.94151306]
[105.34154510 109.29898834]
[101.58524323 123.82104492]
[97.82894135 138.34310913]
[94.07263947 152.86517334]
[90.31633759 167.38722229]
[86.56004333 181.90928650]
[100.90929413 186.28750610]
[115.05690002 191.27902222]
[128.97665405 196.87457275]
[142.64279175 203.06379700]
[156.03001404 209.83525085]
[169.11349487 217.17637634]
[181.86904907 225.07359314]
[194.27302551 233.51226807]
[206.30247498 242.47677612]
[217.93510437 251.95051575]
[229.14938354 261.91595459]
[239.92454529 272.35461426]
[250.24063110 283.24719238]
[260.07855225 294.57348633]
[269.42007446 306.31256104]
[278.24789429 318.44265747]
[286.54571533 330.94134521]
[294.29809570 343.78540039]
[301.49072266 356.95111084]
[308.11026001 370.41409302]
[314.14450073 384.14938354]
[319.58218384 398.13156128]
[324.41333008 412.33471680]
[328.62890625 426.73260498]
[332.22119141 441.29849243]
[335.18347168 456.00546265]
[337.51028442 470.82626343]
[339.19732666 485.73342896]
[340.24145508 500.69937134]
[340.64074707 515.69641113]
[340.39447021 530.69671631]
[339.50305176 545.67254639]
[337.96820068 560.59613037]
[335.79269409 575.43988037]
[332.98062134 590.17633057]
[329.53713989 604.77813721]
[325.46862793 619.21826172]
[320.78265381 633.46997070]
[315.48788452 647.50689697]
[309.59408569 661.30303955]
[303.11224365 674.83282471]
[296.05429077 688.07122803]
[288.43331909 700.99371338]
[280.26348877 713.57635498]
[271.55984497 725.79589844]
[262.33856201 737.62963867]
[252.61671448 749.05572510]
[242.41229248 760.05297852]
[231.74418640 770.60107422]
[220.63214111 780.68035889]
[209.09677124 790.27227783]
[197.15940857 799.35906982]
[184.84216309 807.92382812]
[172.16783142 815.95074463]
[159.15991211 823.42498779]
[145.84248352 830.33264160]
[132.24020386 836.66094971]
[118.37825012 842.39825439]
[104.28230286 847.53381348]
[89.97846222 852.05822754]
[75.49320984 855.96301270]
[60.85338593 859.24102783]
[46.08608246 861.88616943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 121]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
