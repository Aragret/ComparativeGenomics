%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[66.06555176 653.19946289]
[58.16884613 640.39782715]
[52.68506241 626.39184570]
[49.79048538 611.63171387]
[49.57815552 596.59191895]
[52.05490112 581.75598145]
[57.14110947 567.60076904]
[64.67327118 554.58129883]
[74.40927124 543.11614990]
[86.03612518 533.57379150]
[99.18008423 526.26104736]
[113.41861725 521.41296387]
[111.19350433 506.57894897]
[108.96838379 491.74490356]
[106.74326324 476.91085815]
[104.51815033 462.07681274]
[101.27812958 458.56805420]
[100.20787811 452.98669434]
[102.45446014 446.76861572]
[100.67199707 431.87490845]
[98.88953400 416.98120117]
[89.57715607 409.26068115]
[87.97026062 396.86706543]
[95.47116852 386.37426758]
[93.91064453 371.45565796]
[92.35012054 356.53704834]
[90.78960419 341.61843872]
[79.09328461 332.46792603]
[77.29817200 317.36056519]
[86.97537994 305.15444946]
[85.41485596 290.23583984]
[83.85433197 275.31723022]
[80.03202057 268.99176025]
[82.38333130 260.16513062]
[81.04509735 245.22496033]
[74.07312012 258.50619507]
[62.08087158 267.51654053]
[47.38386154 270.51617432]
[32.81985092 266.92596436]
[21.20092773 257.43908691]
[14.77052116 243.88734436]
[14.77024078 228.88734436]
[21.20014191 215.33535767]
[32.81871033 205.84806824]
[47.38258743 202.25729370]
[62.07970810 205.25639343]
[74.07229614 214.26626587]
[81.04509735 227.54849243]
[82.38333130 212.60830688]
[83.72156525 197.66812134]
[85.05979919 182.72793579]
[78.48882294 169.36112976]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[87.07379150 69.12644958]
[73.67112732 75.86207581]
[58.67498398 76.20201874]
[44.98086929 70.08064270]
[35.23290634 58.67988968]
[31.31327629 44.20106125]
[33.97879791 29.43979263]
[42.71479797 17.24625778]
[55.83449173 9.97483444]
[70.80467224 9.02952194]
[84.73484039 14.59284401]
[94.93528748 25.59061050]
[99.43657684 39.90059662]
[103.40866852 25.43607330]
[107.38076782 10.97154999]
[111.35286713 -3.49297404]
[115.32495880 -17.95749855]
[119.29705811 -32.42202377]
[122.94514465 -46.97164154]
[126.26740265 -61.59910202]
[129.58966064 -76.22656250]
[132.91192627 -90.85401917]
[136.23417664 -105.48148346]
[139.44744873 -120.13327026]
[142.55155945 -134.80857849]
[145.54634094 -149.50657654]
[148.43161011 -164.22647095]
[143.49328613 -179.25721741]
[153.53421021 -190.25854492]
[156.41947937 -204.97843933]
[159.19508362 -219.71939087]
[161.86088562 -234.48060608]
[164.52668762 -249.24183655]
[167.08251953 -264.02249146]
[169.52824402 -278.82174683]
[171.97396851 -293.62103271]
[174.41969299 -308.42028809]
[176.86541748 -323.21957397]
[162.96185303 -329.03228760]
[150.77392578 -337.89517212]
[140.95890808 -349.33032227]
[134.04611206 -362.72097778]
[130.40834045 -377.34503174]
[130.24176025 -392.41384888]
[133.55537415 -407.11474609]
[140.17047119 -420.65496826]
[149.73031616 -432.30426025]
[161.71934509 -441.43441772]
[175.49102783 -447.55307007]
[190.30264282 -450.33023071]
[205.35543823 -449.61611938]
[219.83764648 -445.44924927]
[232.96823120 -438.05438232]
[244.03909302 -427.83026123]
[252.45320129 -415.32827759]
[257.75677490 -401.22265625]
[259.66381836 -386.27407837]
[258.07150269 -371.28872681]
[253.06564331 -357.07470703]
[244.91622925 -344.39859009]
[234.06275940 -333.94396973]
[221.09054565 -326.27465820]
[206.69915771 -321.80426025]
[191.66468811 -320.77383423]
[189.21896362 -305.97457886]
[186.77323914 -291.17529297]
[184.32751465 -276.37603760]
[181.88179016 -261.57675171]
[183.89262390 -254.46490479]
[179.28790283 -246.57603455]
[176.62210083 -231.81481934]
[173.95631409 -217.05360413]
[175.86103821 -209.91259766]
[171.13937378 -202.09315491]
[168.25410461 -187.37327576]
[173.39880371 -173.39538574]
[163.15150452 -161.34120178]
[160.26623535 -146.62130737]
[162.06442261 -139.45274353]
[157.22686768 -131.70446777]
[154.12275696 -117.02915955]
[155.81402588 -109.83461761]
[150.86164856 -102.15922546]
[147.53938293 -87.53176117]
[144.21711731 -72.90430450]
[140.89486694 -58.27684402]
[137.57260132 -43.64938354]
[139.13221741 -40.48711014]
[139.23762512 -36.41231918]
[137.47665405 -32.11671066]
[133.76158142 -28.44992638]
[129.78948975 -13.98540211]
[125.81739044 0.47912213]
[121.84529114 14.94364643]
[117.87319183 29.40817070]
[113.90110016 43.87269211]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[108.84190369 172.07994080]
[99.99998474 184.06617737]
[98.66175079 199.00634766]
[97.32351685 213.94653320]
[95.98528290 228.88671875]
[95.98528290 243.88671875]
[97.32351685 258.82690430]
[98.77293396 273.75671387]
[100.33345795 288.67532349]
[101.89398193 303.59393311]
[113.88764954 313.53323364]
[115.25772095 328.68505859]
[105.70820618 340.05792236]
[107.26873016 354.97653198]
[108.82925415 369.89514160]
[110.38977814 384.81375122]
[121.54888916 399.46145630]
[113.78324890 415.19873047]
[115.56571198 430.09243774]
[117.34818268 444.98617554]
[119.35219574 459.85168457]
[121.57730865 474.68572998]
[123.80242920 489.51977539]
[126.02754211 504.35382080]
[128.25265503 519.18786621]
[143.28698730 519.64501953]
[157.99803162 522.77947998]
[171.91290283 528.49053955]
[184.58428955 536.59454346]
[195.60487366 546.83111572]
[204.62037659 558.87103271]
[211.34098816 572.32739258]
[215.55067444 586.76757812]
[217.11410522 601.72735596]
[215.98101807 616.72589111]
[212.18785095 631.28100586]
[205.85652161 644.92480469]
[197.19058228 657.21881104]
[186.46858215 667.76763916]
[174.03518677 676.23229980]
[160.29010010 682.34069824]
[145.67515564 685.89642334]
[130.66017151 686.78521729]
[115.72780609 684.97845459]
[101.35808563 680.53430176]
[88.01292419 673.59552002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[19 184]
[20 183]
[21 182]
[24 180]
[25 179]
[26 178]
[27 177]
[30 174]
[31 173]
[32 172]
[34 171]
[35 170]
[48 169]
[49 168]
[50 167]
[51 166]
[53 164]
[54 163]
[55 162]
[56 161]
[58 159]
[59 158]
[60 157]
[73 156]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 147]
[80 146]
[81 145]
[82 144]
[83 143]
[84 141]
[85 140]
[86 138]
[87 137]
[89 135]
[90 134]
[91 132]
[92 131]
[93 130]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
