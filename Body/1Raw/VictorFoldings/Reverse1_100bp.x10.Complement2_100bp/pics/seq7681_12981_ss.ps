%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[178.84463501 466.30987549]
[191.81303406 458.42413330]
[181.93701172 447.27453613]
[187.09858704 432.31896973]
[184.43278503 417.55776978]
[181.76698303 402.79653931]
[179.10119629 388.03533936]
[176.10641479 373.33731079]
[172.78416443 358.70986938]
[169.46189880 344.08239746]
[165.48980713 329.61788940]
[160.87579346 315.34515381]
[156.26177979 301.07241821]
[151.64778137 286.79968262]
[147.03376770 272.52694702]
[142.41975403 258.25421143]
[130.23963928 254.05015564]
[122.59066772 243.44000244]
[122.44713593 230.16635132]
[130.08547974 219.07264709]
[125.68448639 204.73280334]
[121.28348541 190.39294434]
[116.88248444 176.05310059]
[112.48149109 161.71325684]
[101.35053253 151.81623840]
[104.69834137 136.35328674]
[99.97821045 122.11530304]
[94.94129181 107.98626709]
[90.83415222 104.72354889]
[88.84741211 99.39192200]
[89.97158813 93.36090851]
[85.35758209 79.08817291]
[80.74356842 64.81543732]
[69.13646698 54.06436157]
[72.58370972 39.57416534]
[67.96970367 25.30143166]
[65.76593018 40.13866043]
[60.74795151 54.27442551]
[53.10337067 67.18025208]
[43.11798859 78.37364960]
[31.16510963 87.43614197]
[17.69160652 94.02891541]
[3.20119333 97.90550232]
[-11.76439476 98.92097473]
[-26.64565849 97.03736115]
[-40.88624954 92.32508087]
[-53.95377350 84.96031952]
[-65.35969543 75.21839905]
[-74.67758942 63.46353149]
[-81.55910492 50.13518906]
[-85.74697113 35.73165512]
[-87.08461761 20.79141617]
[-85.52203369 5.87302732]
[-81.11764526 -8.46577930]
[-74.03611755 -21.68893623]
[-64.54218292 -33.30208588]
[-52.99078751 -42.87105942]
[-39.81378937 -50.03812027]
[-25.50382233 -54.53531647]
[-10.59586906 -56.19452286]
[4.35272121 -54.95370102]
[18.78308678 -50.85924911]
[32.15573502 -44.06423187]
[43.97072601 -34.82269287]
[53.78633881 -23.48013115]
[61.23561859 -10.46059799]
[66.03867340 3.74322295]
[68.04268646 -11.12230492]
[70.04669952 -25.98783302]
[71.49611664 -40.91764069]
[72.38893890 -55.89104843]
[63.76744080 -72.16223145]
[73.99510193 -86.42272949]
[74.66488647 -101.40776825]
[75.33467102 -116.39280701]
[76.00445557 -131.37785339]
[62.28612518 -137.86499023]
[52.12397385 -149.07987976]
[47.04347610 -163.29263306]
[47.78949738 -178.32695007]
[54.21725845 -191.89341736]
[65.31912231 -201.93801880]
[79.38244629 -206.95321655]
[79.04747009 -221.94947815]
[77.70923615 -236.88966370]
[76.37100220 -251.82984924]
[75.03276825 -266.77001953]
[73.69452667 -281.71020508]
[72.35629272 -296.65039062]
[71.01805878 -311.59057617]
[69.67982483 -326.53076172]
[68.34159088 -341.47094727]
[53.52339172 -344.40310669]
[40.13214874 -351.39248657]
[29.25344086 -361.87249756]
[21.76915169 -374.99353027]
[18.28599930 -389.69198608]
[19.08634758 -404.77627563]
[24.10531616 -419.02362061]
[32.93603897 -431.27902222]
[44.86264801 -440.54901123]
[58.91830826 -446.08212280]
[73.96359253 -447.42974854]
[88.77883911 -444.48272705]
[102.16305542 -437.47988892]
[113.03122711 -426.98898315]
[120.50233459 -413.86041260]
[123.97071838 -399.15847778]
[123.15522003 -384.07498169]
[118.12194061 -369.83267212]
[109.27890778 -357.58615112]
[97.34299469 -348.32815552]
[83.28177643 -342.80920410]
[84.62001038 -327.86901855]
[85.95824432 -312.92883301]
[87.29647827 -297.98864746]
[88.63471222 -283.04846191]
[89.97294617 -268.10827637]
[91.31118011 -253.16807556]
[92.64942169 -238.22789001]
[93.98765564 -223.28770447]
[102.21804047 -235.82807922]
[115.87807465 -242.02513123]
[130.73504639 -239.95863342]
[142.18536377 -230.26893616]
[146.68101501 -215.95848083]
[142.82897949 -201.46153259]
[131.82284546 -191.27011108]
[117.07299805 -188.54214478]
[103.14981842 -194.12292480]
[94.36748505 -206.28343201]
[107.92729187 -200.03356934]
[118.08874512 -189.03855896]
[123.28053284 -174.95274353]
[122.68228912 -159.91180420]
[116.35404968 -146.20899963]
[105.23188019 -135.94544983]
[90.98949432 -130.70806885]
[90.31970978 -115.72302246]
[89.64992523 -100.73798370]
[88.98014069 -85.75294495]
[96.90908051 -76.61738586]
[96.47370911 -64.12762451]
[87.36234283 -54.99822998]
[86.46952820 -40.02482605]
[99.25021362 -47.87683487]
[113.40895844 -42.92405319]
[118.50845337 -28.81748962]
[110.78955078 -15.95597839]
[95.94232941 -13.82054520]
[84.91223145 -23.98381996]
[82.90821838 -9.11829185]
[80.90420532 5.74723673]
[82.24243927 20.68742180]
[86.85644531 34.96015549]
[98.13352203 44.69035339]
[95.01630402 60.20143127]
[99.63031006 74.47416687]
[104.24432373 88.74689484]
[109.07032013 102.94935608]
[114.10723877 117.07838440]
[118.08474731 120.45869446]
[120.16033936 124.61143494]
[120.35827637 128.68278503]
[119.03818512 131.95228577]
[130.48393250 142.87498474]
[126.82133484 157.31225586]
[131.22233582 171.65209961]
[135.62333679 185.99194336]
[140.02433777 200.33180237]
[144.42532349 214.67164612]
[160.02740479 222.58331299]
[164.98272705 239.00767517]
[156.69248962 253.64019775]
[161.30650330 267.91293335]
[165.92051697 282.18566895]
[170.53451538 296.45840454]
[175.14852905 310.73114014]
[179.76254272 325.00387573]
[187.53878784 312.17694092]
[202.07397461 308.47180176]
[215.04170227 316.01092529]
[219.01345825 330.47552490]
[211.71403503 343.57968140]
[197.32487488 347.81668091]
[184.08935547 340.76013184]
[187.41162109 355.38760376]
[190.73388672 370.01507568]
[194.28152466 373.84408569]
[195.84893799 378.21405029]
[195.56167603 382.28005981]
[193.86241150 385.36953735]
[196.52821350 400.13073730]
[199.19400024 414.89196777]
[201.85980225 429.65319824]
[211.92649841 441.85861206]
[206.57424927 455.75833130]
[221.48173523 458.60986328]
[234.35040283 466.65734863]
[243.43984985 478.81243896]
[247.52082825 493.43124390]
[246.04139709 508.53674316]
[239.20164490 522.08599854]
[227.92658997 532.24658203]
[213.74110413 537.64440918]
[198.56362915 537.54937744]
[184.44682312 531.97442627]
[173.29986572 521.67346191]
[166.63026428 508.03964233]
[165.34005737 492.91683960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[4 195]
[5 194]
[6 193]
[7 192]
[8 188]
[9 187]
[10 186]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[26 165]
[27 161]
[28 160]
[31 159]
[32 158]
[33 157]
[35 155]
[36 154]
[67 153]
[68 152]
[69 151]
[70 145]
[71 144]
[73 141]
[74 140]
[75 139]
[76 138]
[83 131]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
