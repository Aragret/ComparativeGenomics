%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[79.55832672 466.14071655]
[82.03564453 446.91799927]
[82.25897217 431.91964722]
[82.48229980 416.92132568]
[82.37062836 401.92175293]
[81.92402649 386.92840576]
[73.81121826 374.43713379]
[81.13420105 360.41271973]
[80.68759918 345.41934204]
[80.24098969 330.42599487]
[72.12818146 317.93475342]
[79.45117188 303.91030884]
[76.10991669 297.31808472]
[79.11120605 288.69079590]
[78.88787842 273.69244385]
[76.97266388 271.64547729]
[75.75287628 268.71652222]
[75.56851959 265.16668701]
[76.65888214 261.37515259]
[79.12450409 257.80099487]
[79.79428864 242.81596375]
[69.85407257 234.61708069]
[66.39951324 222.00169373]
[70.90792084 209.51631165]
[81.94412994 201.79513550]
[82.83694458 186.82173157]
[83.72975922 171.84832764]
[84.62258148 156.87492371]
[72.71382141 165.99530029]
[57.82646942 164.16041565]
[48.48868179 152.42134094]
[50.04956055 137.50277710]
[61.61496735 127.95073700]
[76.55970764 129.23707581]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[85.26826477 98.72418976]
[72.65909576 106.84877014]
[58.04706192 110.23823547]
[43.14877319 108.49440002]
[29.71446228 101.82211304]
[19.32238388 91.00524139]
[13.19338417 77.31454468]
[12.04749393 62.35837555]
[16.01933098 47.89377975]
[24.64228821 35.62004089]
[36.90334702 26.97907066]
[51.36209488 22.98599625]
[66.31993103 24.10992050]
[80.01961517 30.21880722]
[90.85173798 40.59498978]
[97.54373932 54.01948929]
[99.30937195 68.91676331]
[104.97216034 55.02673721]
[110.63494873 41.13671112]
[116.29772949 27.24668503]
[121.96051788 13.35665703]
[120.00559235 -2.34330559]
[131.97512817 -11.20780373]
[137.63792419 -25.09782982]
[126.63181305 -37.08113098]
[121.97006226 -52.60890579]
[124.53734589 -68.55786896]
[133.76957703 -81.74305725]
[147.77688599 -89.55389404]
[163.73023987 -90.47093964]
[169.18560791 -104.44373322]
[174.64096069 -118.41653442]
[180.09631348 -132.38932800]
[177.90785217 -148.05844116]
[189.74409485 -157.10017395]
[195.19944763 -171.07296753]
[193.01098633 -186.74208069]
[204.84722900 -195.78381348]
[197.53114319 -211.67387390]
[203.84648132 -227.62478638]
[219.43119812 -233.94583130]
[224.67791748 -247.99830627]
[229.92462158 -262.05078125]
[235.17134094 -276.10324097]
[240.41806030 -290.15573120]
[245.66477966 -304.20819092]
[250.80674744 -318.29931641]
[248.15272522 -333.89633179]
[259.71450806 -343.28646851]
[264.75143433 -357.41549683]
[269.78833008 -371.54452515]
[274.82525635 -385.67355347]
[279.86218262 -399.80258179]
[266.44143677 -406.54525757]
[253.95106506 -414.88613892]
[242.58038330 -424.69873047]
[232.50177002 -435.83428955]
[223.86801147 -448.12405396]
[216.80999756 -461.38165283]
[211.43473816 -475.40615845]
[207.82371521 -489.98489380]
[206.03166199 -504.89691162]
[206.08573914 -519.91613770]
[207.98515320 -534.81481934]
[211.70108032 -549.36718750]
[217.17721558 -563.35260010]
[224.33052063 -576.55908203]
[233.05256653 -588.78631592]
[243.21110535 -599.84899902]
[254.65217590 -609.57946777]
[267.20230103 -617.83013916]
[280.67123413 -624.47601318]
[294.85479736 -629.41625977]
[309.53799438 -632.57598877]
[324.49816895 -633.90740967]
[339.50857544 -633.39019775]
[354.34164429 -631.03228760]
[368.77249146 -626.86938477]
[382.58239746 -620.96466064]
[395.56198120 -613.40753174]
[407.51446533 -604.31256104]
[418.25866699 -593.81774902]
[427.63168335 -582.08209229]
[435.49145508 -569.28350830]
[441.71884155 -555.61602783]
[446.21939087 -541.28686523]
[448.92489624 -526.51324463]
[449.79434204 -511.51913452]
[448.81454468 -496.53179932]
[446.00036621 -481.77850342]
[441.39447021 -467.48287964]
[435.06668091 -453.86160278]
[427.11288452 -441.12124634]
[417.65374756 -429.45489502]
[406.83258057 -419.03939819]
[394.81347656 -410.03271484]
[381.77862549 -402.57131958]
[367.92562866 -396.76834106]
[353.46450806 -392.71179199]
[338.61450195 -390.46313477]
[323.60070801 -390.05642700]
[308.65072632 -391.49789429]
[293.99121094 -394.76565552]
[288.95428467 -380.63662720]
[283.91735840 -366.50759888]
[278.88046265 -352.37857056]
[273.84353638 -338.24954224]
[276.85781860 -323.66314697]
[264.93576050 -313.26242065]
[265.65066528 -305.90640259]
[259.71725464 -298.96148682]
[254.47053528 -284.90899658]
[249.22381592 -270.85653687]
[243.97709656 -256.80404663]
[238.73037720 -242.75158691]
[233.48365784 -228.69911194]
[240.41995239 -217.84014893]
[239.82652283 -204.77377319]
[231.69619751 -194.28053284]
[218.82002258 -190.32846069]
[221.39868164 -175.65876770]
[209.17224121 -165.61761475]
[203.71688843 -151.64482117]
[206.29554749 -136.97512817]
[194.06910706 -126.93397522]
[188.61375427 -112.96117401]
[183.15840149 -98.98838043]
[177.70304871 -85.01557922]
[187.64523315 -75.33979034]
[193.16609192 -62.56512070]
[193.40174866 -48.60718918]
[188.28363037 -35.57279587]
[178.55371094 -25.44192886]
[165.65722656 -19.76700783]
[151.52795410 -19.43504333]
[145.86515808 -5.54501677]
[148.22512817 9.16143799]
[135.85054016 19.01944351]
[130.18775940 32.90946960]
[124.52497101 46.79949951]
[118.86218262 60.68952560]
[113.19940186 74.57955170]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[99.59598541 157.76773071]
[98.70317078 172.74113464]
[97.81034851 187.71453857]
[96.91753387 202.68795776]
[108.76670074 215.55715942]
[107.66406250 232.67729187]
[94.77932739 243.48574829]
[94.10954285 258.47079468]
[93.88621521 273.46911621]
[94.10954285 288.46746826]
[94.44451904 303.46371460]
[102.58927155 317.02740479]
[95.23434448 329.97940063]
[95.68094635 344.97274780]
[96.12755585 359.96609497]
[104.27230835 373.52978516]
[96.91737366 386.48178101]
[97.36398315 401.47512817]
[100.10885620 405.91503906]
[100.80642700 410.50488281]
[99.74242401 414.43972778]
[97.48063660 417.14465332]
[97.25730896 432.14297485]
[97.03398132 447.14132690]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 204]
[6 203]
[8 201]
[9 200]
[10 199]
[12 197]
[14 196]
[15 195]
[20 194]
[21 193]
[25 190]
[26 189]
[27 188]
[28 187]
[35 186]
[36 185]
[37 184]
[39 182]
[56 181]
[57 180]
[58 179]
[59 178]
[60 177]
[62 175]
[63 174]
[69 167]
[70 166]
[71 165]
[72 164]
[74 162]
[75 161]
[77 159]
[80 155]
[81 154]
[82 153]
[83 152]
[84 151]
[85 150]
[86 148]
[88 146]
[89 145]
[90 144]
[91 143]
[92 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
