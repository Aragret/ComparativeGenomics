%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[156.25910950 512.81567383]
[158.79055786 498.00445557]
[163.40417480 483.70428467]
[170.00604248 470.20626831]
[178.46173096 457.78524780]
[188.59913635 446.69406128]
[200.21183777 437.15856934]
[213.06341553 429.37283325]
[207.19445801 415.56866455]
[201.32550049 401.76449585]
[195.45654297 387.96032715]
[189.58757019 374.15612793]
[183.71861267 360.35195923]
[181.17234802 359.17950439]
[178.93708801 356.92776489]
[177.42623901 353.71020508]
[177.00454712 349.78762817]
[177.93840027 345.54711914]
[172.90148926 331.41809082]
[167.86457825 317.28906250]
[156.30279541 307.89892578]
[158.95680237 292.30191040]
[147.39501953 282.91180420]
[150.04904175 267.31478882]
[138.48725891 257.92465210]
[141.14126587 242.32765198]
[136.10435486 228.19862366]
[131.06744385 214.06959534]
[120.27637482 208.60337830]
[115.96440887 196.87347412]
[120.95503235 184.97991943]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[69.66851044 34.04853058]
[64.84251404 19.84607697]
[60.01651382 5.64362097]
[54.45729065 -8.28817749]
[48.17992783 -21.91149330]
[41.90256882 -35.53480911]
[40.80427551 -20.57507133]
[34.71887589 -6.86493397]
[24.36126900 3.98495078]
[10.94826126 10.69994926]
[-3.94440389 12.49118900]
[-18.56714821 9.14823723]
[-31.20210838 1.06382167]
[-40.36494064 -10.81230927]
[-44.97920609 -25.08496094]
[-44.50282669 -40.07739258]
[-38.99176025 -54.02831268]
[-29.09344864 -65.29878235]
[-15.97073174 -72.56475067]
[-1.16525507 -74.97262573]
[13.58364964 -72.23952484]
[26.54329491 -64.68654633]
[36.19198227 -53.19963074]
[33.30671310 -67.91952515]
[30.42143822 -82.63941193]
[27.53616524 -97.35930634]
[15.11474609 -110.95304871]
[21.44540977 -127.32038116]
[16.40785027 -113.19158173]
[6.11824036 -102.27719116]
[-7.68943882 -96.41647339]
[-22.68835068 -96.59706879]
[-36.35091782 -102.78853607]
[-46.37475586 -113.94750977]
[-51.07067108 -128.19351196]
[-49.64731979 -143.12582397]
[-42.34456253 -156.22810364]
[-30.39304161 -165.29237366]
[-15.80679893 -168.79116821]
[-1.04387224 -166.13485718]
[11.40792656 -157.77108765]
[19.45083237 -145.10774231]
[19.22750473 -160.10607910]
[19.00417709 -175.10441589]
[15.94699669 -180.96659851]
[16.26197433 -186.64091492]
[19.00417709 -190.55107117]
[19.22750473 -205.54940796]
[16.22621155 -214.17669678]
[19.56746864 -220.76895142]
[20.01407433 -235.76229858]
[20.46068001 -250.75564575]
[20.90728760 -265.74899292]
[6.38173294 -269.78280640]
[-6.75603342 -277.17623901]
[-17.74219894 -287.49938965]
[-25.93804359 -300.15213013]
[-30.86707115 -314.39880371]
[-32.24271393 -329.41116333]
[-29.98499489 -344.31640625]
[-24.22517204 -358.24795532]
[-15.29811859 -370.39584351]
[-3.72283864 -380.05380249]
[9.82769585 -386.66033936]
[24.56567383 -389.83139038]
[39.63425064 -389.38253784]
[54.15735626 -385.33990479]
[67.29063416 -377.93853760]
[78.27054596 -367.60870361]
[86.45871735 -354.95101929]
[91.37910461 -340.70135498]
[92.74564362 -325.68814087]
[90.47888947 -310.78427124]
[84.71062469 -296.85623169]
[75.77620697 -284.71374512]
[64.19506836 -275.06280518]
[50.64053345 -268.46447754]
[35.90063858 -265.30239868]
[35.45402908 -250.30903625]
[35.00742340 -235.31568909]
[34.56081772 -220.32234192]
[34.22584152 -205.32608032]
[34.00251389 -190.32774353]
[34.00251389 -175.32774353]
[34.22584152 -160.32940674]
[34.44916916 -145.33106995]
[36.12071228 -130.42449951]
[46.08474350 -123.56558228]
[48.79093170 -111.36475372]
[42.25605774 -100.24457550]
[45.14133072 -85.52468872]
[48.02660370 -70.80479431]
[50.91187668 -56.08490372]
[55.52588272 -41.81217194]
[61.80324554 -28.18885422]
[68.08060455 -14.56553841]
[73.19255066 -28.66759682]
[86.10967255 -36.29307556]
[100.92644501 -33.95570374]
[110.86883545 -22.72410393]
[111.39131165 -7.73320580]
[102.25502014 4.16335106]
[87.63693237 7.52662182]
[74.21897125 0.81762332]
[79.04496765 15.02007866]
[83.87096405 29.22253418]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[135.15748596 180.15393066]
[149.28369141 191.96629333]
[145.19647217 209.03266907]
[150.23338318 223.16169739]
[155.27029419 237.29074097]
[167.19235229 247.69146729]
[164.17807007 262.27786255]
[176.10012817 272.67858887]
[173.08583069 287.26501465]
[185.00788879 297.66574097]
[181.99360657 312.25213623]
[187.03051758 326.38116455]
[192.06744385 340.51019287]
[197.52279663 354.48300171]
[203.39175415 368.28717041]
[209.26071167 382.09133911]
[215.12966919 395.89553833]
[220.99864197 409.69970703]
[226.86759949 423.50387573]
[241.39118958 419.65081787]
[256.31530762 417.90399170]
[271.33612061 418.29891968]
[286.14782715 420.82763672]
[300.44885254 425.43859863]
[313.94808960 432.03793335]
[326.37069702 440.49133301]
[337.46374512 450.62667847]
[347.00140381 462.23760986]
[354.78952026 475.08773804]
[360.66949463 488.91549683]
[364.52166748 503.43930054]
[366.26757812 518.36352539]
[365.87170410 533.38433838]
[363.34210205 548.19586182]
[358.73025513 562.49664307]
[352.13003540 575.99542236]
[343.67587280 588.41754150]
[333.53985596 599.50994873]
[321.92834473 609.04687500]
[309.07772827 616.83422852]
[295.24960327 622.71331787]
[280.72555542 626.56463623]
[265.80120850 628.30957031]
[250.78045654 627.91278076]
[235.96907043 625.38226318]
[221.66859436 620.76953125]
[208.17018127 614.16851807]
[195.74862671 605.71356201]
[184.65682983 595.57684326]
[175.12060547 583.96478271]
[167.33409119 571.11364746]
[161.45581055 557.28515625]
[157.60543823 542.76086426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[18 170]
[19 169]
[20 168]
[22 166]
[24 164]
[26 162]
[27 161]
[28 160]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 137]
[46 136]
[47 135]
[64 134]
[65 133]
[66 132]
[67 131]
[69 128]
[83 127]
[84 126]
[85 125]
[88 124]
[89 123]
[91 122]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
