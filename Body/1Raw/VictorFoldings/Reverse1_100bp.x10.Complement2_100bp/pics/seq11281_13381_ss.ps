%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[71.72866058 408.60150146]
[67.61005402 423.12527466]
[59.72473526 435.99865723]
[48.65784073 446.26641846]
[35.23060608 453.16653442]
[20.43942261 456.18707275]
[5.38189507 455.10379028]
[-8.82460785 449.99716187]
[-21.12586975 441.24606323]
[-30.60905647 429.49993896]
[-36.57044983 415.63037109]
[-38.56767654 400.66662598]
[-36.45252991 385.71908569]
[-30.38196754 371.89697266]
[-20.80646515 360.22598267]
[-8.43658733 351.57214355]
[5.80973768 346.57766724]
[20.87533760 345.61315918]
[23.97944832 330.93786621]
[27.08355904 316.26257324]
[30.18766785 301.58724976]
[17.05773544 308.84017944]
[2.60728765 304.81719971]
[-4.88580370 291.82281494]
[-1.12915504 277.30084229]
[11.72525501 269.57012939]
[26.31383514 273.05914307]
[34.27942276 285.76831055]
[30.61682320 271.33105469]
[42.06257248 260.40835571]
[46.46356964 246.06849670]
[50.86457062 231.72865295]
[55.26556778 217.38880920]
[59.66656494 203.04896545]
[56.00396347 188.61169434]
[67.44971466 177.68899536]
[57.50747681 168.32582092]
[52.54557419 155.53097534]
[53.58548737 141.78077698]
[60.48111725 129.76293945]
[71.93621826 121.85112000]
[85.74770355 119.63624573]
[90.36171722 105.36351013]
[76.02194977 109.76479340]
[63.55462265 101.42418671]
[62.15017319 86.49008179]
[72.84391785 75.97134399]
[87.75281525 77.62198639]
[95.88638306 90.22359467]
[101.54916382 76.33356476]
[107.21195221 62.44353867]
[112.87474060 48.55351257]
[106.98933411 34.13131714]
[112.93006897 20.12552261]
[126.71569824 14.60356426]
[132.37847900 0.71353740]
[138.04127502 -13.17648983]
[143.70405579 -27.06651688]
[149.36685181 -40.95654297]
[147.41192627 -56.65650558]
[159.38146973 -65.52100372]
[165.04425049 -79.41103363]
[170.70703125 -93.30105591]
[176.36982727 -107.19108582]
[164.08317566 -98.58652496]
[149.29414368 -96.07967377]
[134.85823059 -100.15455627]
[123.56281281 -110.02437592]
[117.58884430 -123.78343964]
[118.08980560 -138.77507019]
[124.96896362 -152.10462952]
[136.89807129 -161.19837952]
[151.57380676 -164.30047607]
[166.16250610 -160.81193542]
[177.84732056 -151.40634155]
[184.37210083 -137.89978027]
[184.47673035 -122.89890289]
[192.51791382 -135.56143188]
[200.55908203 -148.22395325]
[208.60025024 -160.88647461]
[216.64143372 -173.54899597]
[224.68260193 -186.21153259]
[232.72377014 -198.87405396]
[240.76495361 -211.53657532]
[247.94030762 -224.70904541]
[254.21768188 -238.33236694]
[260.49502563 -251.95568848]
[266.77239990 -265.57901001]
[273.04974365 -279.20230103]
[279.32711792 -292.82562256]
[285.60449219 -306.44894409]
[291.88183594 -320.07226562]
[279.01812744 -327.81744385]
[267.08453369 -336.93078613]
[256.22595215 -347.30160522]
[246.57414246 -358.80404663]
[238.24632263 -371.29846191]
[231.34355164 -384.63320923]
[225.94964600 -398.64636230]
[222.13006592 -413.16787720]
[219.93116760 -428.02142334]
[219.37966919 -443.02673340]
[220.48225403 -458.00161743]
[223.22554016 -472.76431274]
[227.57621765 -487.13565063]
[233.48149109 -500.94110107]
[240.86965942 -514.01312256]
[249.65104675 -526.19305420]
[259.71902466 -537.33300781]
[270.95144653 -547.29779053]
[283.21188354 -555.96636963]
[296.35156250 -563.23358154]
[310.21093750 -569.01116943]
[324.62179565 -573.22906494]
[339.40917969 -575.83599854]
[354.39361572 -576.80029297]
[369.39318848 -576.11035156]
[384.22583008 -573.77447510]
[398.71145630 -569.82104492]
[412.67425537 -564.29803467]
[425.94470215 -557.27246094]
[438.36172485 -548.82971191]
[449.77459717 -539.07214355]
[460.04476929 -528.11828613]
[469.04757690 -516.10113525]
[476.67370605 -503.16647339]
[482.83062744 -489.47137451]
[487.44357300 -475.18209839]
[490.45654297 -460.47204590]
[491.83297729 -445.51983643]
[491.55618286 -430.50695801]
[489.62948608 -415.61566162]
[486.07626343 -401.02667236]
[480.93969727 -386.91714478]
[474.28210449 -373.45834351]
[466.18432617 -360.81362915]
[456.74462891 -349.13647461]
[446.07763672 -338.56869507]
[434.31280518 -329.23849487]
[421.59298706 -321.25921631]
[408.07257080 -314.72763062]
[393.91567993 -309.72311401]
[379.29412842 -306.30636597]
[364.38549805 -304.51885986]
[349.37066650 -304.38232422]
[334.43197632 -305.89837646]
[319.75073242 -309.04867554]
[305.50515747 -313.79489136]
[299.22778320 -300.17160034]
[292.95043945 -286.54827881]
[286.67306519 -272.92495728]
[280.39572144 -259.30163574]
[274.11834717 -245.67832947]
[267.84100342 -232.05500793]
[261.56362915 -218.43168640]
[274.94476318 -225.20999146]
[289.87680054 -223.78382874]
[301.73291016 -214.59510803]
[306.83935547 -200.49105835]
[303.61380005 -185.84196472]
[293.05578613 -175.18701172]
[278.43676758 -171.82775879]
[264.28665161 -176.80509949]
[254.98997498 -188.57675171]
[253.42747498 -203.49540710]
[245.38630676 -190.83287048]
[237.34512329 -178.17034912]
[229.30395508 -165.50782776]
[221.26278687 -152.84530640]
[213.22160339 -140.18278503]
[205.18043518 -127.52025604]
[197.13926697 -114.85772705]
[190.25985718 -101.52829742]
[184.59706116 -87.63827515]
[178.93428040 -73.74824524]
[173.27148438 -59.85821915]
[175.63145447 -45.15176392]
[163.25686646 -35.29375839]
[157.59408569 -21.40373039]
[151.93130493 -7.51370287]
[146.26850891 6.37632418]
[140.60572815 20.26635170]
[146.60110474 33.85277557]
[141.05610657 48.01990891]
[126.76476288 54.21629715]
[121.10198212 68.10632324]
[115.43919373 81.99635315]
[109.77640533 95.88638306]
[104.63444519 109.97752380]
[100.02043915 124.25025177]
[111.22839355 136.40646362]
[114.75637054 152.46414185]
[109.73394012 168.02023315]
[97.62201691 178.85801697]
[81.78955841 182.08999634]
[85.13737488 197.55294800]
[74.00640869 207.44996643]
[69.60541534 221.78981018]
[65.20441437 236.12965393]
[60.80341721 250.46949768]
[56.40242004 264.80935669]
[59.75023270 280.27230835]
[48.61927032 290.16931152]
[44.86297226 304.69137573]
[41.75886154 319.36666870]
[38.65475082 334.04199219]
[35.55064011 348.71728516]
[48.93533707 355.69958496]
[59.93910599 366.03494263]
[67.74539185 378.95642090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 207]
[19 206]
[20 205]
[21 204]
[28 203]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[36 195]
[42 190]
[43 189]
[49 188]
[50 187]
[51 186]
[52 185]
[55 182]
[56 181]
[57 180]
[58 179]
[59 178]
[61 176]
[62 175]
[63 174]
[64 173]
[77 172]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
