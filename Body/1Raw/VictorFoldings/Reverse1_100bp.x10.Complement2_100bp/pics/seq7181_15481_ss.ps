%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[62.53019714 739.25207520]
[47.93361282 735.73474121]
[33.79360199 730.68572998]
[20.27037811 724.16235352]
[7.51717377 716.23846436]
[-4.32150745 707.00390625]
[-15.11152554 696.56323242]
[-24.73061943 685.03479004]
[-33.06980133 672.54919434]
[-40.03457642 659.24792480]
[-45.54603195 645.28167725]
[-49.54171753 630.80871582]
[-51.97636414 615.99304199]
[-52.82237625 601.00244141]
[-52.07017517 586.00689697]
[-49.72827911 571.17626953]
[-45.82322693 556.67858887]
[-40.39926147 542.67816162]
[-33.51784897 529.33355713]
[-25.25695229 516.79602051]
[-15.71017933 505.20764160]
[-4.98569870 494.69964600]
[6.79497099 485.39117432]
[19.49834633 477.38763428]
[32.98048782 470.77978516]
[47.08863068 465.64242554]
[61.66292572 462.03381348]
[76.53822327 459.99481201]
[76.09162140 445.00146484]
[67.97881317 432.51019287]
[75.30180359 418.48577881]
[74.85519409 403.49243164]
[74.40858459 388.49908447]
[73.96198273 373.50573730]
[73.51537323 358.51239014]
[73.06877136 343.51904297]
[64.95596313 331.02777100]
[72.27894592 317.00335693]
[68.93769073 310.41110229]
[71.93898773 301.78381348]
[60.74155426 311.76467896]
[45.75896835 311.04211426]
[35.57392883 300.03009033]
[36.02089310 285.03674316]
[46.84381866 274.65097046]
[61.84284210 274.82220459]
[72.42547607 285.45147705]
[73.54112244 270.49304199]
[74.65677643 255.53457642]
[75.77242279 240.57612610]
[76.88806915 225.61767578]
[74.25077057 218.71357727]
[78.13331604 210.44535828]
[79.47154999 195.50517273]
[80.80978394 180.56498718]
[79.11791229 178.32987976]
[78.20945740 175.28991699]
[78.39540863 171.74015808]
[79.87430573 168.08264160]
[82.69838715 164.78437805]
[84.92350769 149.95033264]
[87.14862061 135.11630249]
[81.38490295 121.38207245]
[91.08373260 108.88234711]
[92.97702789 94.00231171]
[86.71741486 79.47206879]
[95.73680878 67.61881256]
[96.96378326 52.66907883]
[97.85659790 37.69567108]
[98.74941254 22.72226715]
[99.64222717 7.74886084]
[100.53504944 -7.22454500]
[101.42786407 -22.19795036]
[101.76284027 -37.19421005]
[101.53951263 -52.19254684]
[101.31618500 -67.19088745]
[101.09285736 -82.18922424]
[100.86952972 -97.18756104]
[100.64620209 -112.18589783]
[100.42287445 -127.18423462]
[91.72824097 -136.71136475]
[91.85099792 -149.20811462]
[100.17995453 -157.98051453]
[100.17995453 -172.98051453]
[100.17995453 -187.98051453]
[92.44265747 -201.78068542]
[100.17995453 -214.50794983]
[100.17995453 -229.50794983]
[100.17995453 -244.50794983]
[100.17995453 -259.50796509]
[100.17995453 -274.50796509]
[100.17995453 -289.50796509]
[100.17995453 -304.50796509]
[92.44265747 -318.30813599]
[100.17995453 -331.03540039]
[92.44265747 -344.83557129]
[100.17995453 -357.56283569]
[100.17995453 -372.56283569]
[100.17995453 -387.56283569]
[86.40608978 -394.13879395]
[76.85616302 -406.04516602]
[73.42632294 -420.91793823]
[76.79756927 -435.80407715]
[86.30052948 -447.74798584]
[100.04840088 -454.37811279]
[115.31151581 -454.37811279]
[129.05938721 -447.74798584]
[138.56234741 -435.80407715]
[141.93359375 -420.91793823]
[138.50375366 -406.04516602]
[128.95382690 -394.13879395]
[115.17995453 -387.56283569]
[115.17995453 -372.56283569]
[115.17995453 -357.56283569]
[122.91725922 -344.83557129]
[115.17995453 -331.03540039]
[122.91725922 -318.30813599]
[115.17995453 -304.50796509]
[115.17995453 -289.50796509]
[115.17995453 -274.50796509]
[115.17995453 -259.50796509]
[115.17995453 -244.50794983]
[115.17995453 -229.50794983]
[115.17995453 -214.50794983]
[122.91725922 -201.78068542]
[115.17995453 -187.98051453]
[115.17995453 -172.98051453]
[115.17995453 -157.98051453]
[124.76065063 -143.27754211]
[115.42121124 -127.40756226]
[115.64453888 -112.40922546]
[115.86786652 -97.41088867]
[116.09119415 -82.41255188]
[116.31452179 -67.41421509]
[116.53784943 -52.41587448]
[116.76117706 -37.41753769]
[128.92245483 -46.19837952]
[143.41035461 -42.31239700]
[149.54492188 -28.62418938]
[142.80400085 -15.22419453]
[128.15672302 -11.99039078]
[116.40126801 -21.30513573]
[115.50845337 -6.33172894]
[114.61563873 8.64167690]
[113.72281647 23.61508179]
[112.83000183 38.58848953]
[111.93718719 53.56189346]
[113.99153137 56.42755508]
[114.75992584 60.43063354]
[113.72290802 64.95587921]
[110.65541077 69.17933655]
[117.02664948 82.64249420]
[107.89562988 95.56282806]
[109.87499237 98.87258911]
[110.38585663 103.03874969]
[109.07845306 107.38590240]
[105.91777802 111.10746002]
[111.52234650 125.90270996]
[101.98266602 137.34141541]
[99.75755310 152.17546082]
[97.53243256 167.00950623]
[95.74996948 181.90321350]
[94.41173553 196.84339905]
[93.07350159 211.78358459]
[91.84652710 226.73332214]
[90.73087311 241.69177246]
[89.61522675 256.65023804]
[88.49958038 271.60867310]
[87.38392639 286.56713867]
[86.93732452 301.56048584]
[87.27230072 316.55673218]
[95.41705322 330.12042236]
[88.06211853 343.07241821]
[88.50872803 358.06576538]
[88.95532990 373.05911255]
[89.40193939 388.05249023]
[89.84854126 403.04583740]
[90.29515076 418.03918457]
[98.43990326 431.60287476]
[91.08496857 444.55487061]
[91.53157806 459.54821777]
[106.50186920 460.69818115]
[121.26510620 463.43292236]
[135.65402222 467.72143555]
[149.50556946 473.51513672]
[162.66279602 480.74835205]
[174.97663879 489.33911133]
[186.30754089 499.19012451]
[196.52714539 510.18975830]
[205.51963806 522.21337891]
[213.18313599 535.12469482]
[219.43081665 548.77752686]
[224.19186401 563.01702881]
[227.41233826 577.68200684]
[229.05575562 592.60620117]
[229.10350037 607.62048340]
[227.55500793 622.55480957]
[224.42785645 637.23999023]
[219.75746155 651.50952148]
[213.59674072 665.20172119]
[206.01550293 678.16156006]
[197.09963989 690.24212646]
[186.95019531 701.30651855]
[175.68215942 711.22937012]
[163.42320251 719.89831543]
[150.31222534 727.21502686]
[136.49780273 733.09667969]
[122.13645935 737.47662354]
[107.39090729 740.30517578]
[92.42823029 741.55029297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 181]
[29 180]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[38 171]
[40 170]
[47 169]
[48 168]
[49 167]
[50 166]
[51 165]
[53 164]
[54 163]
[55 162]
[60 161]
[61 160]
[62 159]
[64 157]
[65 153]
[67 151]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[83 128]
[84 127]
[85 126]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[95 116]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
