%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[27.05789566 564.46911621]
[13.41026688 557.63500977]
[4.08618164 545.55096436]
[0.93694329 530.61627197]
[4.58783627 515.79620361]
[14.31397247 504.03335571]
[28.18422127 497.66317749]
[28.40754890 482.66485596]
[28.63087654 467.66650391]
[25.58731079 460.93164062]
[28.97084045 452.44699097]
[29.41744614 437.45361328]
[29.86405182 422.46026611]
[30.31065750 407.46691895]
[30.75726318 392.47357178]
[23.40233231 379.52157593]
[31.54708481 365.95788574]
[31.99369049 350.96453857]
[21.13636971 361.31436157]
[6.17493677 362.38928223]
[-6.05044508 353.69790649]
[-9.95049477 339.21380615]
[-3.74216270 325.55889893]
[9.73618603 318.97601318]
[24.32243156 322.47479248]
[33.34848785 334.45739746]
[35.35250092 319.59188843]
[27.82202721 303.74072266]
[39.19798660 289.26077271]
[40.98045349 274.36706543]
[42.76291656 259.47332764]
[44.54538345 244.57962036]
[38.37530136 231.02310181]
[47.69766617 218.24014282]
[39.05942917 230.50312805]
[26.94618034 239.35011292]
[12.63625526 243.84744263]
[-2.36018157 243.52052307]
[-16.46052170 238.40385437]
[-28.17672348 229.03738403]
[-36.27234650 216.40960693]
[-39.89303970 201.85314941]
[-38.65670395 186.90417480]
[-32.69381714 173.14031982]
[-22.63364792 162.01408386]
[-9.53787613 154.69966125]
[5.21147156 151.96896362]
[20.05786133 154.11015320]
[33.43452072 160.89727783]
[43.92977142 171.61407471]
[50.43603516 185.12956238]
[52.26667404 200.01762390]
[57.72203064 186.04483032]
[63.17738724 172.07203674]
[68.63274384 158.09922791]
[64.06459808 146.89840698]
[68.49519348 135.21278381]
[80.05934143 129.50022888]
[85.72212219 115.61020660]
[91.38491058 101.72017670]
[90.44519806 98.82079315]
[90.53968811 95.51540375]
[91.82078552 92.18640137]
[94.29750061 89.26712799]
[97.82042694 87.18820190]
[104.29991913 73.65985870]
[110.77941895 60.13151169]
[117.25891113 46.60316467]
[116.24193573 30.81468010]
[128.71788025 22.67833710]
[135.19737244 9.14999199]
[141.27120972 -4.56527472]
[146.93399048 -18.45530128]
[152.59678650 -32.34532928]
[158.25956726 -46.23535538]
[150.24940491 -59.39374924]
[151.50851440 -74.56833649]
[161.34519958 -85.95709229]
[175.82847595 -89.32942963]
[181.49125671 -103.21945953]
[187.15405273 -117.10948181]
[191.23371887 -131.54403687]
[193.67944336 -146.34330750]
[196.12516785 -161.14257812]
[198.57089233 -175.94184875]
[185.18402100 -185.18986511]
[177.19889832 -199.29948425]
[176.16998291 -215.42094421]
[182.25260925 -230.32347107]
[194.18206787 -241.04269409]
[209.53608704 -245.47038269]
[211.76121521 -260.30441284]
[213.87583923 -275.15463257]
[215.87985229 -290.02014160]
[210.05561829 -304.73031616]
[219.42393494 -316.30978394]
[221.42794800 -331.17532349]
[215.60372925 -345.88546753]
[224.97204590 -357.46493530]
[226.97605896 -372.33047485]
[213.24980164 -378.66143799]
[202.00056458 -388.75830078]
[194.22862244 -401.72317505]
[190.62506104 -416.40328979]
[191.51028442 -431.49328613]
[196.80558777 -445.65136719]
[206.04013062 -457.61859131]
[218.39277649 -466.33087158]
[232.76512146 -471.01348877]
[247.87919617 -471.25009155]
[262.39108276 -467.01962280]
[275.01037598 -458.69827271]
[284.61495972 -447.02597046]
[290.35086060 -433.04055786]
[291.70797729 -417.98568726]
[288.56567383 -403.19998169]
[281.20336914 -389.99816895]
[270.27569580 -379.55416870]
[256.75433350 -372.79663086]
[241.84158325 -370.32644653]
[239.83757019 -355.46093750]
[245.80513000 -341.81405640]
[236.29348755 -329.17129517]
[234.28945923 -314.30575562]
[240.25703430 -300.65887451]
[230.74537659 -288.01614380]
[228.74136353 -273.15060425]
[230.96304321 -266.10177612]
[226.59526062 -258.07931519]
[224.37013245 -243.24526978]
[236.20843506 -236.01181030]
[244.42155457 -224.77720642]
[247.74282837 -211.21812439]
[245.63871765 -197.37387085]
[238.39428711 -185.33959961]
[227.07499695 -176.94924927]
[213.37016296 -173.49612427]
[210.92443848 -158.69685364]
[208.47871399 -143.89758301]
[206.03298950 -129.09831238]
[215.48188782 -140.74812317]
[228.46476746 -148.26109314]
[243.27351379 -150.64874268]
[257.95977783 -147.59695435]
[270.59133911 -139.50721741]
[279.50628662 -127.44390106]
[283.53170776 -112.99412537]
[282.13800049 -98.05901337]
[275.50851440 -84.60353851]
[264.51547241 -74.39799500]
[250.60520935 -68.78509521]
[235.60784912 -68.50331879]
[221.49656677 -73.58973694]
[210.12794495 -83.37514496]
[202.99769592 -96.57210541]
[201.04406738 -111.44670105]
[195.38128662 -97.55667114]
[189.71850586 -83.66664124]
[197.71562195 -71.12933350]
[196.78579712 -56.10936737]
[187.07644653 -44.37983322]
[172.14959717 -40.57256699]
[166.48681641 -26.68254280]
[160.82402039 -12.79251480]
[155.16123962 1.09751201]
[156.12286377 3.73064876]
[156.09941101 6.90335464]
[154.88014221 10.24233532]
[152.39321899 13.30497074]
[148.72572327 15.62948799]
[142.24623108 29.15783310]
[143.72666931 43.97868347]
[130.78726196 53.08266068]
[124.30776215 66.61100769]
[117.82826996 80.13935089]
[111.34877014 93.66770172]
[105.27494049 107.38296509]
[99.61215210 121.27299500]
[93.94936371 135.16302490]
[96.87747955 153.34289551]
[82.60554504 163.55459595]
[77.15018463 177.52738953]
[71.69483185 191.50018311]
[66.23947144 205.47297668]
[62.59138489 220.02259827]
[68.63397217 234.64442444]
[59.43910217 246.36209106]
[57.65663528 261.25579834]
[55.87416840 276.14950562]
[54.09170151 291.04324341]
[61.43555832 301.64657593]
[59.64431763 314.01489258]
[50.21802902 321.59588623]
[48.21401596 336.46142578]
[46.98704147 351.41116333]
[46.54043579 366.40451050]
[53.86342239 380.42892456]
[45.75061417 392.92019653]
[45.30400848 407.91354370]
[44.85740280 422.90689087]
[44.41079712 437.90023804]
[43.96419144 452.89358521]
[43.62921524 467.88983154]
[43.40588760 482.88818359]
[43.18255615 497.88650513]
[56.85699463 504.66680908]
[66.22859192 516.71405029]
[69.43662262 531.63623047]
[65.84411621 546.47052002]
[56.16437531 558.27160645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[17 196]
[18 195]
[26 194]
[27 193]
[29 190]
[30 189]
[31 188]
[32 187]
[34 185]
[52 184]
[53 183]
[54 182]
[55 181]
[58 179]
[59 178]
[60 177]
[65 176]
[66 175]
[67 174]
[68 173]
[70 171]
[71 170]
[72 165]
[73 164]
[74 163]
[75 162]
[79 158]
[80 157]
[81 156]
[82 140]
[83 139]
[84 138]
[85 137]
[91 130]
[92 129]
[93 127]
[94 126]
[96 124]
[97 123]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
