%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[179.76408386 476.75350952]
[176.65997314 462.07818604]
[173.55586243 447.40289307]
[170.45175171 432.72760010]
[167.34764099 418.05230713]
[164.24353027 403.37698364]
[161.13941956 388.70169067]
[158.03530884 374.02639771]
[154.59219360 370.71670532]
[153.19163513 365.20895386]
[155.06413269 358.86819458]
[152.39833069 344.10696411]
[148.11613464 338.08328247]
[149.80444336 329.10623169]
[147.35871887 314.30697632]
[144.58309937 299.56600952]
[141.47898865 284.89071655]
[138.37489319 270.21539307]
[133.91523743 264.32189941]
[135.33552551 255.29856873]
[132.45025635 240.57867432]
[129.56497192 225.85877991]
[126.67970276 211.13888550]
[122.92340088 196.61682129]
[118.30939484 182.34410095]
[113.69538879 168.07136536]
[109.08137512 153.79862976]
[104.46736908 139.52589417]
[93.84384155 133.74081421]
[89.88301849 121.88771820]
[95.22554779 110.14803314]
[88.27539062 123.44071198]
[74.45529175 129.27209473]
[60.08362579 124.97614288]
[51.73091888 112.51691437]
[53.21591949 97.59060669]
[63.85970306 87.02131653]
[78.79607391 85.64118195]
[91.19741821 94.08268738]
[88.31214905 79.36280060]
[85.42687225 64.64290619]
[82.54160309 49.92301559]
[79.65632629 35.20312500]
[76.55221558 20.52782249]
[73.22995758 5.90036201]
[69.90769958 -8.72709846]
[66.58544159 -23.35455894]
[63.15437698 -37.95688248]
[59.61470413 -52.53325653]
[55.64260864 -66.99777985]
[51.24161148 -81.33762360]
[36.12964249 -81.63068390]
[21.86747169 -86.57365417]
[9.84771347 -95.67056274]
[1.23990738 -108.02049255]
[-3.12328148 -122.40677643]
[-2.82659411 -137.41687012]
[2.08833218 -151.58103943]
[11.12827492 -163.51626587]
[23.39789391 -172.06129456]
[18.99689484 -186.40113831]
[14.59589767 -200.74098206]
[10.19489956 -215.08082581]
[5.79390144 -229.42066956]
[1.39290321 -243.76052856]
[-3.32723117 -257.99850464]
[-8.36414719 -272.12753296]
[-13.40106392 -286.25656128]
[-25.32312012 -296.65728760]
[-22.30883026 -311.24371338]
[-28.13820076 -318.27621460]
[-27.31385040 -325.62075806]
[-32.13984680 -339.82321167]
[-36.96584702 -354.02566528]
[-41.79184341 -368.22811890]
[-46.61783981 -382.43057251]
[-51.44384003 -396.63302612]
[-66.30659485 -394.33746338]
[-81.34216309 -394.65783691]
[-96.09364319 -397.58444214]
[-110.11274719 -403.02832031]
[-122.97345734 -410.82403564]
[-134.28494263 -420.73471069]
[-143.70346069 -432.45916748]
[-150.94279480 -445.64108276]
[-155.78294373 -459.87991333]
[-158.07684326 -474.74291992]
[-157.75476074 -489.77847290]
[-154.82647705 -504.52960205]
[-149.38101196 -518.54809570]
[-141.58383179 -531.40789795]
[-131.67187500 -542.71826172]
[-119.94635773 -552.13549805]
[-106.76361084 -559.37329102]
[-92.52423859 -564.21185303]
[-77.66096497 -566.50402832]
[-62.62546158 -566.18023682]
[-47.87464905 -563.25030518]
[-33.85677719 -557.80328369]
[-20.99784088 -550.00463867]
[-9.68860722 -540.09136963]
[-0.27274904 -528.36480713]
[6.96359539 -515.18121338]
[11.80052090 -500.94131470]
[14.09104061 -486.07778931]
[13.76554680 -471.04229736]
[10.83393097 -456.29183960]
[5.38528156 -442.27456665]
[-2.41482258 -429.41653442]
[-12.32934570 -418.10842896]
[-24.05699539 -408.69387817]
[-37.24138260 -401.45904541]
[-32.41538620 -387.25659180]
[-27.58938789 -373.05413818]
[-22.76338959 -358.85168457]
[-17.93739319 -344.64920044]
[-13.11139488 -330.44674683]
[-8.17980194 -316.28060913]
[3.38198161 -306.89050293]
[0.72796601 -291.29348755]
[5.76488209 -277.16445923]
[10.80179882 -263.03543091]
[13.81359577 -261.20202637]
[16.08699417 -257.81872559]
[16.90321541 -253.24847412]
[15.73274994 -248.16151428]
[20.13374901 -233.82167053]
[24.53474617 -219.48182678]
[28.93574524 -205.14198303]
[33.33674240 -190.80213928]
[37.73773956 -176.46228027]
[52.68847656 -176.27137756]
[66.86740112 -171.46218872]
[78.88187408 -162.49375916]
[87.54776001 -150.23434448]
[92.00611115 -135.87727356]
[91.80828094 -120.82482910]
[86.96105957 -106.55133057]
[77.92724609 -94.45865631]
[65.58145905 -85.73862457]
[69.98246002 -71.39878082]
[72.39292908 -69.96777344]
[74.38179779 -67.49572754]
[75.54971313 -64.13844299]
[75.56103516 -60.19326782]
[74.19107819 -56.07292938]
[77.73075104 -41.49655151]
[82.36389160 -35.73844147]
[81.21289825 -26.67681694]
[84.53515625 -12.04935741]
[87.85741425 2.57810259]
[91.17967987 17.20556259]
[94.67169189 20.46360970]
[96.15409851 25.94991112]
[94.37622070 32.31785202]
[97.26148987 47.03774261]
[100.14676666 61.75763321]
[103.03203583 76.47752380]
[105.91731262 91.19741821]
[109.56539917 105.74703979]
[123.33363342 117.97475433]
[118.74009705 134.91188049]
[123.35411072 149.18461609]
[127.96811676 163.45735168]
[132.58212280 177.73008728]
[137.19613647 192.00282288]
[143.11930847 178.22181702]
[155.95219421 170.45541382]
[170.90844727 171.60028076]
[182.40974426 181.22941589]
[186.16638184 195.75138855]
[180.77725220 209.74986267]
[168.25233459 218.00373840]
[153.26313782 217.43455505]
[141.39959717 208.25361633]
[144.28486633 222.97351074]
[147.17013550 237.69338989]
[150.05541992 252.41328430]
[153.05018616 267.11129761]
[156.15429688 281.78659058]
[159.25840759 296.46188354]
[162.74864197 300.34329224]
[164.25082397 304.73611450]
[163.90306091 308.79739380]
[162.15798950 311.86123657]
[164.60371399 326.66052246]
[167.15954590 341.44116211]
[169.82534790 356.20239258]
[172.71061707 370.92227173]
[175.81472778 385.59756470]
[178.91883850 400.27288818]
[182.02294922 414.94818115]
[185.12705994 429.62347412]
[188.23117065 444.29879761]
[191.33528137 458.97409058]
[194.43939209 473.64938354]
[209.42517090 476.05578613]
[222.52772522 483.71655273]
[231.97505188 495.59564209]
[236.48947144 510.08648682]
[235.46044922 525.22930908]
[229.02714539 538.97619629]
[218.05960083 549.46801758]
[204.04110718 555.28576660]
[188.86755371 555.64270020]
[174.59101868 550.49047852]
[163.14228821 540.52600098]
[156.06971741 527.09680176]
[154.32981873 512.01910400]
[158.15789795 497.33203125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[11 188]
[12 187]
[14 186]
[15 185]
[16 181]
[17 180]
[18 179]
[20 178]
[21 177]
[22 176]
[23 175]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[31 160]
[39 159]
[40 158]
[41 157]
[42 156]
[43 155]
[44 152]
[45 151]
[46 150]
[47 149]
[48 147]
[49 146]
[50 141]
[51 140]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 122]
[67 121]
[68 120]
[70 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
