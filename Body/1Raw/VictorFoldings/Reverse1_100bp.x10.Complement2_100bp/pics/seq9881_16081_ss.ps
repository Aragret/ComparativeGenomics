%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[113.40315247 659.35693359]
[101.77389526 649.84509277]
[91.54820251 638.83837891]
[82.91656494 626.54168701]
[76.03977966 613.18414307]
[71.04596710 599.01458740]
[68.02814484 584.29705811]
[67.04254913 569.30566406]
[68.10753632 554.31964111]
[71.20326233 539.61828613]
[76.27204895 525.47540283]
[83.21948242 512.15447998]
[91.91613007 499.90368652]
[102.19998169 488.95123291]
[113.87944794 479.50115967]
[126.73695374 471.72952271]
[140.53297424 465.78109741]
[155.01048279 461.76672363]
[153.00646973 446.90118408]
[151.00245667 432.03567505]
[148.99844360 417.17013550]
[146.99443054 402.30459595]
[144.99041748 387.43908691]
[141.80299377 383.88247681]
[140.81596375 378.28579712]
[143.15487671 372.10186768]
[141.59434509 357.18325806]
[140.03382874 342.26464844]
[138.47329712 327.34603882]
[136.91278076 312.42745972]
[135.35226440 297.50885010]
[133.79173279 282.59024048]
[131.01612854 267.84927368]
[127.04402924 253.38475037]
[123.07192993 238.92022705]
[119.09983063 224.45570374]
[116.73303986 222.95356750]
[114.81864929 220.42340088]
[113.75121307 217.03283691]
[113.85736084 213.08906555]
[115.34938049 209.01133728]
[112.24526978 194.33604431]
[109.14116669 179.66073608]
[106.03705597 164.98544312]
[102.93294525 150.31013489]
[92.72933960 139.45951843]
[97.44333649 124.35691833]
[94.33922577 109.68161011]
[86.23086548 122.30122375]
[71.94562531 126.87637329]
[58.01453781 121.31538391]
[50.80669403 108.16064453]
[53.61743164 93.42633820]
[65.16172028 83.84879303]
[80.16165924 83.80672455]
[91.76043701 93.32096100]
[90.19991302 78.40235138]
[88.63938904 63.48374939]
[86.96784973 48.57717514]
[85.18538666 33.68345642]
[83.40291595 18.78973961]
[81.62045288 3.89602327]
[79.83798218 -10.99769402]
[78.05551910 -25.89141083]
[76.16222382 -40.77144623]
[74.15821075 -55.63697433]
[72.15419769 -70.50250244]
[65.42716217 -57.09552765]
[53.29417801 -48.27562714]
[38.46577835 -46.01319504]
[24.25467110 -50.81365585]
[13.83565426 -61.60458374]
[9.53635979 -75.97525024]
[12.31726360 -90.71521759]
[21.55710411 -102.53153229]
[35.19167709 -108.78440857]
[50.17498398 -108.07692719]
[63.15971375 -100.56715393]
[71.24505615 -87.93276215]
[71.69166565 -102.92610931]
[72.13826752 -117.91945648]
[64.81527710 -131.94387817]
[72.92808533 -144.43515015]
[73.37469482 -159.42849731]
[73.82130432 -174.42184448]
[74.26790619 -189.41519165]
[59.48011780 -192.09454346]
[45.25686264 -196.94807434]
[31.91589928 -203.86734009]
[19.75526810 -212.69778442]
[9.04663944 -223.24211121]
[0.02925111 -235.26477051]
[-7.09544611 -248.49717712]
[-12.16828442 -262.64370728]
[-15.07593346 -277.38830566]
[-15.75343609 -292.40158081]
[-14.18565655 -307.34814453]
[-10.40762043 -321.89407349]
[-4.50372887 -335.71441650]
[3.39412212 -348.50039673]
[13.10949135 -359.96640015]
[24.42533493 -369.85626221]
[37.08885193 -377.94903564]
[50.81713486 -384.06393433]
[65.30348969 -388.06433105]
[80.22428131 -389.86087036]
[95.24617767 -389.41342163]
[110.03359222 -386.73196411]
[124.25614929 -381.87640381]
[137.59613037 -374.95523071]
[149.75550842 -366.12307739]
[160.46263123 -355.57720947]
[169.47830200 -343.55325317]
[176.60112000 -330.31985474]
[181.67193604 -316.17260742]
[184.57748413 -301.42758179]
[185.25285339 -286.41421509]
[183.68295288 -271.46786499]
[179.90283203 -256.92248535]
[173.99697876 -243.10298157]
[166.09730530 -230.31811523]
[156.38031006 -218.85350037]
[145.06304932 -208.96525574]
[132.39837646 -200.87428284]
[118.66922760 -194.76133728]
[104.18230438 -190.76300049]
[89.26125336 -188.96858215]
[88.81465149 -173.97523499]
[88.36804199 -158.98188782]
[87.92144012 -143.98854065]
[95.27636719 -131.03654480]
[87.13161469 -117.47285461]
[86.68501282 -102.47950745]
[86.23840332 -87.48615265]
[87.01972961 -72.50651550]
[89.02374268 -57.64098740]
[91.02775574 -42.77545929]
[95.03670502 -36.56658554]
[92.94923401 -27.67387772]
[94.73170471 -12.78015995]
[96.51416779 2.11355734]
[98.29663849 17.00727463]
[100.07910156 31.90099144]
[101.86156464 46.79470825]
[105.77763367 53.06258011]
[103.55799103 61.92322540]
[105.11851501 76.84182739]
[106.67903900 91.76043701]
[109.01452637 106.57750702]
[112.11863708 121.25280762]
[122.54427338 133.15309143]
[117.60824585 147.20602417]
[120.71235657 161.88133240]
[123.81646729 176.55662537]
[126.92057800 191.23193359]
[130.02468872 205.90722656]
[133.56436157 220.48361206]
[137.53645325 234.94813538]
[141.50854492 249.41265869]
[145.48065186 263.87716675]
[150.35618591 249.69165039]
[161.20205688 239.32984924]
[175.59526062 235.10661316]
[190.32031250 237.96542358]
[202.08761597 247.26762390]
[208.26829529 260.93505859]
[207.48159790 275.91442871]
[199.90325928 288.85925293]
[187.22630310 296.87765503]
[172.28280640 298.17831421]
[158.41116333 292.47064209]
[148.71034241 281.02972412]
[150.27085876 295.94833374]
[151.83139038 310.86691284]
[153.39190674 325.78552246]
[154.95242310 340.70413208]
[156.51295471 355.62274170]
[158.07347107 370.54135132]
[159.85594177 385.43505859]
[161.85995483 400.30059814]
[163.86396790 415.16610718]
[165.86798096 430.03164673]
[167.87199402 444.89718628]
[169.87600708 459.76269531]
[184.89973450 459.80004883]
[199.77844238 461.88284302]
[214.23492432 465.97229004]
[227.99989319 471.99221802]
[240.81690979 479.83044434]
[252.44718933 489.34100342]
[262.67407227 500.34664917]
[271.30703735 512.64239502]
[278.18527222 525.99920654]
[283.18063354 540.16821289]
[286.20004272 554.88543701]
[287.18725586 569.87670898]
[286.12390137 584.86279297]
[283.02975464 599.56451416]
[277.96249390 613.70794678]
[271.01651001 627.02960205]
[262.32116699 639.28137207]
[252.03851318 650.23492432]
[240.36007690 659.68627930]
[227.50341797 667.45928955]
[213.70803833 673.40917969]
[199.23095703 677.42517090]
[184.34187317 679.43237305]
[169.31814575 679.39337158]
[154.43968201 677.30895996]
[139.98362732 673.21795654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 160]
[34 159]
[35 158]
[36 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[47 150]
[48 149]
[56 148]
[57 147]
[58 146]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[65 137]
[66 136]
[67 135]
[79 134]
[80 133]
[81 132]
[83 130]
[84 129]
[85 128]
[86 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
