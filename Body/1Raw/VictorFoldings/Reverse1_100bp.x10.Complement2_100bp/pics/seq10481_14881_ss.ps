%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[106.64680481 756.75250244]
[91.96828461 759.90606689]
[77.04330444 761.53363037]
[62.03007507 761.61791992]
[47.08775711 760.15808105]
[32.37473679 757.16961670]
[18.04698563 752.68414307]
[4.25638533 746.74920654]
[-8.85087776 739.42773438]
[-21.13585854 730.79736328]
[-32.46833038 720.94958496]
[-42.72816086 709.98876953]
[-51.80659103 698.03106689]
[-59.60738373 685.20330811]
[-66.04784393 671.64141846]
[-71.05970764 657.48919678]
[-74.58983612 642.89666748]
[-76.60081482 628.01849365]
[-77.07131958 613.01239014]
[-75.99636841 598.03747559]
[-73.38735962 583.25244141]
[-69.27194214 568.81402588]
[-63.69374847 554.87530518]
[-56.71190262 541.58404541]
[-48.40042496 529.08111572]
[-38.84741592 517.49908447]
[-28.15414238 506.96066284]
[-16.43396378 497.57763672]
[-3.81111574 489.44940186]
[9.58058929 482.66220093]
[23.59919357 477.28793335]
[38.09608841 473.38357544]
[52.91760635 470.99050903]
[67.90662384 470.13412476]
[82.90425110 470.82348633]
[85.12936401 455.98944092]
[87.35448456 441.15539551]
[89.46910858 426.30520630]
[91.36239624 411.42517090]
[93.14486694 396.53146362]
[94.92733002 381.63772583]
[96.70980072 366.74401855]
[98.49226379 351.85031128]
[100.27472687 336.95657349]
[102.05719757 322.06286621]
[103.83966064 307.16915894]
[105.62212372 292.27542114]
[107.40459442 277.38171387]
[108.96511841 262.46310425]
[110.30335236 247.52291870]
[111.64158630 232.58273315]
[110.97180176 217.59770203]
[108.30599976 202.83648682]
[105.64020538 188.07527161]
[102.97441101 173.31405640]
[100.30861664 158.55282593]
[97.64282227 143.79161072]
[87.07598114 154.43783569]
[72.14836121 152.96607971]
[63.86404037 140.46127319]
[68.32991791 126.14150238]
[82.25390625 120.56275940]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[77.07961273 35.17372894]
[76.08697510 22.71586037]
[83.60008240 13.23536777]
[82.26184845 -1.70481753]
[80.92361450 -16.64500237]
[70.49954224 -5.85896254]
[55.50471115 -5.46515179]
[44.52884674 -15.68916225]
[43.85942078 -30.67421722]
[53.87990952 -41.83619690]
[68.85012817 -42.78100967]
[80.19401550 -32.96827698]
[80.19401550 -47.96827698]
[80.19401550 -62.96827698]
[80.19401550 -77.96827698]
[80.19401550 -92.96827698]
[72.45671844 -106.76844788]
[80.19401550 -119.49571991]
[77.22445679 -125.40277100]
[77.62387848 -131.07176208]
[80.42399597 -134.94065857]
[80.87059784 -149.93400574]
[81.31720734 -164.92736816]
[68.35888672 -173.05320740]
[61.25462341 -186.48548889]
[61.82383347 -201.56999207]
[69.81358337 -214.25935364]
[82.99336243 -221.19900513]
[83.43997192 -236.19236755]
[83.88657379 -251.18571472]
[84.33318329 -266.17907715]
[70.76121521 -273.16220093]
[61.57001495 -285.34762573]
[58.58451462 -300.31591797]
[62.39748001 -315.09509277]
[72.25184631 -326.75076294]
[86.19102478 -332.96862793]
[101.44737244 -332.51419067]
[114.99173737 -325.47766113]
[124.13488007 -313.25613403]
[127.06140900 -298.27621460]
[123.19027710 -283.51214600]
[113.29008484 -271.89541626]
[99.32653046 -265.73245239]
[98.87992859 -250.73910522]
[98.43331909 -235.74575806]
[97.98671722 -220.75241089]
[110.73007965 -213.04057312]
[117.95037842 -199.89814758]
[117.62072754 -184.80650330]
[109.72956085 -171.82089233]
[96.31055450 -164.48075867]
[95.86395264 -149.48741150]
[95.41734314 -134.49406433]
[95.19401550 -119.49571991]
[102.93131256 -106.76844788]
[95.19401550 -92.96827698]
[95.19401550 -77.96827698]
[95.19401550 -62.96827698]
[95.19401550 -47.96827698]
[95.19401550 -32.96827698]
[95.86380005 -17.98323631]
[97.20203400 -3.04305172]
[98.54026794 11.89713287]
[109.39449310 25.68672180]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[112.40403748 141.12582397]
[115.06983185 155.88703918]
[117.73562622 170.64825439]
[120.40142822 185.40946960]
[123.06722260 200.17068481]
[125.73301697 214.93190002]
[130.26884460 200.63414001]
[138.94973755 188.40130615]
[150.94828796 179.39938354]
[165.12088013 174.48635864]
[180.11665344 174.13050842]
[194.50633240 178.36576843]
[206.91835022 186.78845215]
[216.16970825 198.59576416]
[221.37860107 212.66229248]
[222.04855347 227.64732361]
[218.11572266 242.12257385]
[209.95495605 254.70835876]
[198.34408569 264.20507812]
[184.38977051 269.70755005]
[169.42207336 270.69134521]
[154.86759949 267.06265259]
[142.11358643 259.16738892]
[132.37568665 247.75802612]
[126.58177185 233.92097473]
[125.24353790 248.86116028]
[123.90530396 263.80133057]
[126.33602142 269.94976807]
[125.43242645 275.56051636]
[122.29830933 279.16418457]
[120.51584625 294.05789185]
[118.73337555 308.95162964]
[116.95091248 323.84533691]
[115.16844940 338.73904419]
[113.38597870 353.63278198]
[111.60351562 368.52648926]
[109.82105255 383.42019653]
[108.03858185 398.31393433]
[106.25611877 413.20764160]
[108.34358978 422.10034180]
[104.33463287 428.30923462]
[106.28947449 437.23202515]
[102.18852997 443.38052368]
[99.96340942 458.21456909]
[97.73829651 473.04861450]
[112.27812958 476.78988647]
[126.35621643 482.00634766]
[139.82330322 488.64273071]
[152.53665161 496.62863159]
[164.36149597 505.87945557]
[175.17245483 516.29705811]
[184.85494995 527.77111816]
[193.30633545 540.17987061]
[200.43704224 553.39190674]
[206.17144775 567.26708984]
[210.44877625 581.65832520]
[213.22369385 596.41314697]
[214.46676636 611.37506104]
[214.16484070 626.38549805]
[212.32110596 641.28527832]
[208.95509338 655.91656494]
[204.10250854 670.12420654]
[197.81478882 683.75756836]
[190.15856934 696.67211914]
[181.21502686 708.73101807]
[171.07894897 719.80639648]
[159.85780334 729.78088379]
[147.67054749 738.54870605]
[134.64634705 746.01690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 186]
[36 185]
[37 184]
[38 182]
[39 180]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 168]
[50 167]
[51 166]
[52 147]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[63 141]
[64 140]
[66 138]
[67 137]
[68 136]
[69 135]
[72 133]
[73 132]
[74 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[87 124]
[90 123]
[91 122]
[92 121]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
