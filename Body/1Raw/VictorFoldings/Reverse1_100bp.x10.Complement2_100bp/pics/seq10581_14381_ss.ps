%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[68.03262329 596.07281494]
[63.28044891 581.79644775]
[61.31623077 566.87872314]
[62.21097565 551.85888672]
[65.93233490 537.27984619]
[72.34579468 523.66870117]
[81.21949768 511.51739502]
[92.23266602 501.26525879]
[104.98719788 493.28286743]
[119.02200317 487.85879517]
[116.35620880 473.09756470]
[113.69041443 458.33636475]
[107.93113708 472.18664551]
[96.79056549 482.23092651]
[82.41977692 486.52981567]
[67.59354401 484.25326538]
[55.17457581 475.84082031]
[47.56078339 462.91680908]
[46.22226715 447.97665405]
[51.41748047 433.90505981]
[62.14330292 423.41903687]
[76.32875061 418.54324341]
[91.23483276 420.21917725]
[103.98342133 428.12319946]
[112.11339569 440.73037720]
[112.11339569 425.73037720]
[112.11339569 410.73037720]
[112.11339569 395.73037720]
[112.11339569 380.73037720]
[104.37609863 368.00311279]
[112.11339569 354.20294189]
[112.11339569 339.20294189]
[110.55287170 324.28433228]
[107.44876099 309.60900879]
[104.34465027 294.93371582]
[101.24054718 280.25842285]
[98.13643646 265.58312988]
[95.03232574 250.90780640]
[90.25175476 265.12561035]
[80.45220947 276.48208618]
[67.08740234 283.29251099]
[52.13992310 284.54663086]
[37.82714081 280.05841064]
[26.27226448 270.49362183]
[19.18939781 257.27117920]
[17.62924194 242.35255432]
[21.82323456 227.95079041]
[31.14922142 216.20234680]
[44.22375107 208.85002136]
[59.10729218 206.98449707]
[73.59195709 210.88249207]
[85.52903748 219.96577454]
[93.14710236 232.88510132]
[93.14710236 217.88510132]
[93.14710236 202.88510132]
[93.14710236 187.88510132]
[93.14710236 172.88510132]
[93.14710236 157.88510132]
[83.56640625 143.18212891]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.42582703 27.91616821]
[91.20249939 12.91783047]
[90.97917175 -2.08050728]
[77.20075226 -8.55480862]
[67.63865662 -20.32142639]
[64.14789581 -35.01274109]
[67.36873627 -49.70243835]
[76.61002350 -61.48836899]
[89.99664307 -68.06590271]
[82.05473328 -81.74934387]
[89.60168457 -94.59040833]
[89.37835693 -109.58874512]
[89.15502930 -124.58708191]
[88.93170166 -139.58541870]
[85.67487335 -148.11952209]
[88.81837463 -154.80833435]
[88.81837463 -169.80833435]
[88.81837463 -184.80833435]
[81.08106995 -198.60850525]
[88.81837463 -211.33576965]
[88.81837463 -226.33576965]
[88.81837463 -241.33576965]
[88.81837463 -256.33578491]
[88.81837463 -271.33578491]
[88.81837463 -286.33578491]
[88.81837463 -301.33578491]
[88.59504700 -316.33410645]
[88.14843750 -331.32745361]
[87.70183563 -346.32080078]
[87.25522614 -361.31414795]
[86.80862427 -376.30752563]
[86.36201477 -391.30087280]
[72.39846039 -397.46380615]
[62.49827194 -409.08056641]
[58.62713623 -423.84460449]
[61.55366898 -438.82452393]
[70.69680786 -451.04605103]
[84.24117279 -458.08261108]
[99.49752808 -458.53704834]
[113.43669891 -452.31915283]
[123.29106903 -440.66351318]
[127.10403442 -425.88433838]
[124.11853027 -410.91604614]
[114.92733765 -398.73062134]
[101.35536194 -391.74746704]
[101.80197144 -376.75411987]
[102.24857330 -361.76077271]
[102.69518280 -346.76742554]
[103.14179230 -331.77407837]
[103.58839417 -316.78073120]
[106.38851166 -312.91180420]
[106.78793335 -307.24282837]
[103.81837463 -301.33578491]
[103.81837463 -286.33578491]
[103.81837463 -271.33578491]
[103.81837463 -256.33578491]
[103.81837463 -241.33576965]
[103.81837463 -226.33576965]
[103.81837463 -211.33576965]
[111.55567169 -198.60850525]
[103.81837463 -184.80833435]
[103.81837463 -169.80833435]
[103.81837463 -154.80833435]
[103.93003845 -139.80874634]
[104.15336609 -124.81040955]
[104.37669373 -109.81207275]
[104.60002136 -94.81373596]
[112.52595520 -82.20307159]
[104.99497986 -68.28923035]
[118.57149506 -62.11318207]
[128.15959167 -50.60762405]
[131.81637573 -36.02033615]
[128.76457214 -21.23159981]
[119.55705261 -9.18550110]
[105.97750854 -2.30383492]
[106.20083618 12.69450283]
[106.42416382 27.69284058]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[116.59882355 136.61595154]
[116.47605896 149.11270142]
[108.14710236 157.88510132]
[108.14710236 172.88510132]
[108.14710236 187.88510132]
[108.14710236 202.88510132]
[108.14710236 217.88510132]
[108.14710236 232.88510132]
[109.70762634 247.80369568]
[112.81173706 262.47900391]
[115.91584778 277.15429688]
[119.01995850 291.82962036]
[122.12406921 306.50491333]
[125.22817993 321.18020630]
[130.00874329 306.96240234]
[139.80828857 295.60595703]
[153.17309570 288.79553223]
[168.12057495 287.54138184]
[182.43336487 292.02963257]
[193.98823547 301.59439087]
[201.07110596 314.81683350]
[202.63125610 329.73547363]
[198.43727112 344.13723755]
[189.11128235 355.88568115]
[176.03674316 363.23800659]
[161.15321350 365.10354614]
[146.66854858 361.20553589]
[134.73146057 352.12225342]
[127.11339569 339.20294189]
[127.11339569 354.20294189]
[134.85069275 368.00311279]
[127.11339569 380.73037720]
[127.11339569 395.73037720]
[127.11339569 410.73037720]
[127.11339569 425.73037720]
[127.11339569 440.73037720]
[128.45162964 455.67056274]
[131.11743164 470.43176270]
[133.78321838 485.19299316]
[148.82872009 485.36532593]
[163.56964111 488.38220215]
[177.47314453 494.13452148]
[190.03659058 502.41436768]
[200.80586243 512.92242432]
[209.39161682 525.27886963]
[215.48350525 539.03698730]
[218.86129761 553.69940186]
[219.40290833 568.73614502]
[217.08872986 583.60357666]
[212.00245667 597.76434326]
[204.32791138 610.70642090]
[194.34255981 621.96203613]
[182.40734863 631.12432861]
[168.95372009 637.86199951]
[154.46803284 641.93157959]
[139.47393799 643.18591309]
[124.51343536 641.57965088]
[110.12736511 637.17083740]
[96.83576202 630.11889648]
[85.11911011 620.67877197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 189]
[11 188]
[12 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[31 180]
[32 179]
[33 164]
[34 163]
[35 162]
[36 161]
[37 160]
[38 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[58 153]
[60 150]
[61 149]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[75 135]
[77 133]
[78 132]
[79 131]
[80 130]
[82 129]
[83 128]
[84 127]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
