%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[43.98498917 756.42761230]
[29.46797752 760.37365723]
[14.47304821 761.58471680]
[-0.48907641 760.01965332]
[-14.90879345 755.73168945]
[-28.29497147 748.86694336]
[-40.19168091 739.65917969]
[-50.19372940 728.42205811]
[-57.96044540 715.53820801]
[-63.22729874 701.44653320]
[-65.81490326 686.62701416]
[-65.63513184 671.58435059]
[-62.69409180 656.83087158]
[-57.09196854 642.86907959]
[-49.01956558 630.17456055]
[-38.75181961 619.17968750]
[-26.63845444 610.25885010]
[-13.09204006 603.71594238]
[1.42603469 599.77386475]
[16.42128944 598.56683350]
[17.98181343 583.64819336]
[19.54233551 568.72961426]
[21.10285950 553.81097412]
[22.66338158 538.89239502]
[24.22390556 523.97375488]
[25.78442764 509.05517578]
[14.18739700 518.56878662]
[-0.81254762 518.52795410]
[-12.35763264 508.95138550]
[-15.16960144 494.21731567]
[-7.96285963 481.06198120]
[5.96776819 475.49981689]
[20.25338554 480.07379150]
[28.36321640 492.69451904]
[31.46732712 478.01922607]
[34.57143784 463.34393311]
[29.63541222 449.29098511]
[40.06104279 437.39071655]
[43.16515350 422.71539307]
[46.26926422 408.04010010]
[49.37337494 393.36480713]
[39.27543640 382.44830322]
[37.52111053 367.50219727]
[44.99132919 354.23382568]
[59.00393677 347.83438110]
[62.10804749 333.15908813]
[60.41677856 325.96453857]
[65.36916351 318.28915405]
[68.69142151 303.66168213]
[72.01367950 289.03424072]
[75.33593750 274.40676880]
[78.33071899 259.70877075]
[80.99651337 244.94754028]
[83.66230774 230.18632507]
[86.32810211 215.42510986]
[87.99964142 200.51853943]
[88.66942596 185.53349304]
[89.33921051 170.54846191]
[82.17793274 157.48838806]
[90.52372742 144.04747009]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[83.75152588 99.39491272]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[84.27734375 54.35578918]
[94.07587433 39.79709625]
[94.29920959 24.79875755]
[94.52253723 9.80041981]
[94.41086578 -5.19916439]
[93.96426392 -20.19251442]
[93.40605164 -35.18212509]
[92.73626709 -50.16716385]
[92.06648254 -65.15219879]
[83.72068787 -78.59312439]
[90.88196564 -91.65319061]
[87.37248993 -100.08654022]
[90.31544495 -106.86597443]
[89.86883545 -121.85932922]
[89.42223358 -136.85267639]
[88.97562408 -151.84602356]
[74.70093536 -164.30184937]
[74.07449341 -182.91690063]
[87.02760315 -195.85261536]
[86.13478088 -210.82601929]
[85.13052368 -225.79237366]
[84.01487732 -240.75082397]
[82.89922333 -255.70927429]
[81.78357697 -270.66772461]
[80.66793060 -285.62619019]
[79.55228424 -300.58462524]
[78.43663025 -315.54309082]
[63.63495255 -318.51171875]
[50.18360901 -325.36474609]
[39.08078384 -335.59362793]
[31.15037918 -348.43930054]
[26.98088455 -362.94854736]
[26.88170242 -378.04464722]
[30.86019516 -392.60742188]
[38.62113190 -405.55618286]
[49.58859634 -415.93005371]
[62.94873428 -422.95922852]
[77.71012878 -426.12210083]
[92.77739716 -425.18395996]
[107.03243256 -420.21438599]
[119.41743469 -411.58221436]
[129.01333618 -399.92797852]
[135.10807800 -386.11651611]
[137.24935913 -371.17269897]
[135.27832031 -356.20547485]
[129.34118652 -342.32553101]
[119.87857056 -330.56283569]
[107.59263611 -321.79022217]
[93.39508820 -316.65875244]
[94.51073456 -301.70028687]
[95.62638092 -286.74182129]
[96.74203491 -271.78338623]
[97.85768127 -256.82492065]
[98.97332764 -241.86647034]
[100.08898163 -226.90802002]
[103.72126007 -220.47154236]
[101.10819244 -211.71884155]
[102.00100708 -196.74543762]
[111.97282410 -191.20205688]
[118.09378052 -181.43222046]
[118.74519348 -169.80168152]
[113.64973450 -159.19332886]
[103.96897888 -152.29263306]
[104.41558075 -137.29928589]
[104.86219025 -122.30593109]
[105.30879211 -107.31258392]
[105.86700439 -92.32297516]
[114.16489410 -79.95388031]
[107.05152130 -65.82198334]
[107.72130585 -50.83694839]
[108.39109039 -35.85190964]
[111.83012390 -29.31013489]
[108.95761108 -20.63912010]
[109.40421295 -5.64577055]
[111.70603180 -2.97481513]
[112.82849884 0.94374472]
[112.19933319 5.54346800]
[109.52087402 10.02374744]
[109.29754639 25.02208519]
[109.07421875 40.02042389]
[117.27164459 48.91585922]
[117.20832825 61.41304779]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[115.38739014 94.74573517]
[114.95397186 106.38417816]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[105.50876617 144.71725464]
[112.62213898 158.84915161]
[104.32424927 171.21824646]
[103.65446472 186.20327759]
[102.98468018 201.18832397]
[112.81668854 189.85997009]
[127.18219757 185.54347229]
[141.62989807 189.57632446]
[151.68301392 200.70893860]
[154.22647095 215.49172974]
[148.47215271 229.34408569]
[136.20310974 237.97370911]
[121.22103119 238.70663452]
[108.16826630 231.31573486]
[101.08931732 218.09091187]
[98.42352295 232.85212708]
[95.75772858 247.61334229]
[93.09193420 262.37457275]
[94.85858917 267.28637695]
[94.59123993 271.92123413]
[92.73599243 275.55072021]
[89.96340179 277.72903442]
[86.64114380 292.35647583]
[83.31888580 306.98394775]
[79.99662018 321.61141968]
[76.78334808 336.26318359]
[73.67923737 350.93850708]
[83.90039825 362.46386719]
[85.35815430 377.62066650]
[77.70206451 390.57629395]
[64.04867554 396.46890259]
[60.94456863 411.14419556]
[57.84045792 425.81951904]
[54.73634720 440.49481201]
[59.45034409 455.59741211]
[49.24673843 466.44802856]
[46.14263153 481.12332153]
[43.03852081 495.79864502]
[40.70303345 510.61569214]
[39.14250946 525.53430176]
[37.58198547 540.45294189]
[36.02146530 555.37152100]
[34.46094131 570.29010010]
[32.90041733 585.20874023]
[31.33989525 600.12731934]
[45.76076508 604.41137695]
[59.14879608 611.27252197]
[71.04798889 620.47711182]
[81.05306244 631.71154785]
[88.82324982 644.59326172]
[94.09390259 658.68353271]
[96.68550110 673.50238037]
[96.50978088 688.54510498]
[93.57272339 703.29937744]
[87.97436523 717.26263428]
[79.90538025 729.95935059]
[69.64060211 740.95703125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 192]
[34 191]
[35 190]
[36 189]
[38 187]
[39 186]
[40 185]
[41 184]
[45 180]
[46 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 171]
[53 170]
[54 169]
[55 168]
[56 158]
[57 157]
[58 156]
[60 154]
[61 153]
[62 152]
[64 149]
[65 148]
[67 145]
[68 144]
[69 143]
[70 139]
[71 138]
[72 136]
[73 135]
[74 134]
[76 132]
[78 131]
[79 130]
[80 129]
[81 128]
[84 123]
[85 122]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
