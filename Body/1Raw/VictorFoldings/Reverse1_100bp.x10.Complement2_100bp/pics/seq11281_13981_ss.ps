%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[212.22262573 352.95452881]
[217.24560547 338.80624390]
[223.69674683 325.24945068]
[231.50762939 312.42782593]
[240.59545898 300.47726440]
[250.86390686 289.52450562]
[241.03332520 278.19491577]
[231.20275879 266.86532593]
[221.37217712 255.53573608]
[209.33207703 254.36845398]
[201.04933167 245.01004028]
[201.37261963 232.11592102]
[191.71182251 220.64122009]
[182.05101013 209.16651917]
[172.39019775 197.69181824]
[158.27426147 192.93894958]
[155.30508423 177.39884949]
[145.64427185 165.92414856]
[135.98345947 154.44944763]
[126.32265472 142.97476196]
[112.20672607 138.22187805]
[109.23754883 122.68179321]
[99.57673645 111.20709229]
[98.38159943 126.15940094]
[87.94487000 136.93319702]
[73.03808594 138.60284424]
[60.47642136 130.40499878]
[56.00290680 116.08761597]
[61.66276932 102.19639587]
[74.86839294 95.08222198]
[89.58394623 97.99855804]
[81.16932678 85.58106232]
[72.75470734 73.16356659]
[64.34008789 60.74607468]
[55.92546844 48.32857895]
[47.51084900 35.91108322]
[39.09622955 23.49358749]
[24.94949341 16.40977859]
[24.21500969 1.53329372]
[15.80039120 -10.88420200]
[7.38577223 -23.30169678]
[-1.02884626 -35.71919250]
[-9.44346523 -48.13668823]
[-17.85808372 -60.55418396]
[-26.27270126 -72.97167969]
[-30.15942955 -58.48398209]
[-43.08264923 -50.86883926]
[-57.63935471 -54.48855209]
[-65.49080658 -67.26958466]
[-62.13933182 -81.89038086]
[-49.50481033 -89.97547913]
[-34.82565689 -86.89391327]
[-42.09888458 -100.01260376]
[-48.99688721 -106.00054169]
[-49.38108444 -113.38120270]
[-56.45819092 -126.60673523]
[-63.53529739 -139.83226013]
[-70.61240387 -153.05778503]
[-77.68950653 -166.28330994]
[-77.18597412 -151.29176331]
[-79.98594666 -136.55541992]
[-85.95280457 -122.79326630]
[-94.79541779 -110.67681885]
[-106.08232117 -100.79725647]
[-119.26280975 -93.63662720]
[-133.69378662 -89.54430389]
[-148.67111206 -88.71997833]
[-163.46403503 -91.20384979]
[-177.35075378 -96.87474060]
[-189.65371704 -105.45594788]
[-199.77262878 -116.52877808]
[-207.21376038 -129.55296326]
[-211.61405945 -143.89302063]
[-212.75881958 -158.84927368]
[-210.59217834 -173.69197083]
[-205.21986389 -187.69691467]
[-196.90397644 -200.18074036]
[-186.05029297 -210.53437805]
[-173.18838501 -218.25260925]
[-158.94580078 -222.95887756]
[-144.01748657 -224.42353821]
[-129.13180542 -222.57511902]
[-115.01508331 -217.50382996]
[-102.35609436 -209.45709229]
[-91.77249908 -198.82752991]
[-83.78358459 -186.13973999]
[-85.34410858 -201.05834961]
[-86.90462494 -215.97695923]
[-88.46514893 -230.89555359]
[-90.02567291 -245.81416321]
[-91.58619690 -260.73275757]
[-106.46970367 -263.25939941]
[-120.11912537 -269.70889282]
[-131.52157593 -279.60263062]
[-139.83093262 -292.20651245]
[-144.43057251 -306.58517456]
[-144.97917175 -321.67163086]
[-141.43603516 -336.34640503]
[-134.06407166 -349.52050781]
[-123.41033936 -360.21630859]
[-110.26541138 -367.64016724]
[-95.60472107 -371.24111938]
[-80.51620483 -370.75198364]
[-66.11952972 -366.20907593]
[-53.48300934 -357.94946289]
[-43.54436874 -346.58612061]
[-37.04111862 -332.96221924]
[-34.45584106 -318.08880615]
[-35.98038483 -303.06951904]
[-41.50161743 -289.01895142]
[-50.60982895 -276.97973633]
[-62.62912369 -267.84521484]
[-76.66759491 -262.29330444]
[-75.10707092 -247.37467957]
[-73.54654694 -232.45608521]
[-71.98602295 -217.53747559]
[-70.42549896 -202.61886597]
[-68.86497498 -187.70027161]
[-64.46398163 -173.36042786]
[-57.38687515 -160.13488770]
[-50.30976868 -146.90936279]
[-43.23266220 -133.68383789]
[-36.15555954 -120.45831299]
[-28.98019218 -107.28583527]
[-21.70696259 -94.16713715]
[-13.85520649 -81.38629913]
[-5.44058800 -68.96880341]
[2.97403073 -56.55130768]
[11.38864899 -44.13381195]
[19.80326843 -31.71631622]
[28.21788597 -19.29882050]
[36.63250351 -6.88132477]
[50.17737198 -0.68569750]
[51.51372528 15.07896996]
[59.92834473 27.49646568]
[68.34296417 39.91395950]
[76.75758362 52.33145523]
[85.17220306 64.74895477]
[93.58682251 77.16645050]
[102.00144196 89.58394623]
[111.05143738 101.54627991]
[120.71224976 113.02098083]
[135.51918030 118.59459686]
[137.79736328 133.31394958]
[147.45816040 144.78865051]
[157.11897278 156.26335144]
[166.77978516 167.73803711]
[181.58673096 173.31166077]
[183.86489868 188.03100586]
[193.52571106 199.50570679]
[203.18650818 210.98040771]
[212.84732056 222.45510864]
[230.30220032 228.32099915]
[232.70176697 245.70515442]
[242.53234863 257.03475952]
[252.36293030 268.36434937]
[262.19351196 279.69393921]
[274.48446655 271.07211304]
[287.59683228 263.75973511]
[301.39154053 257.83441162]
[315.72241211 253.35887146]
[330.43750000 250.38058472]
[345.38082886 248.93113708]
[360.39398193 249.02587891]
[375.31784058 250.66380310]
[389.99417114 253.82756042]
[404.26739502 258.48361206]
[417.98623657 264.58258057]
[431.00524902 272.05984497]
[443.18643188 280.83612061]
[454.40063477 290.81835938]
[464.52902222 301.90078735]
[473.46420288 313.96588135]
[481.11145020 326.88577271]
[487.38970947 340.52349854]
[492.23242188 354.73449707]
[495.58825684 369.36810303]
[497.42166138 384.26919556]
[497.71316528 399.27981567]
[496.45968628 414.24087524]
[493.67453003 428.99374390]
[489.38720703 443.38201904]
[483.64315796 457.25320435]
[476.50329590 470.46026611]
[468.04330444 482.86318970]
[458.35284424 494.33050537]
[447.53463745 504.74060059]
[435.70336914 513.98321533]
[422.98449707 521.96026611]
[409.51278687 528.58728027]
[395.43109131 533.79400635]
[380.88867188 537.52520752]
[366.03964233 539.74127197]
[351.04150391 540.41888428]
[336.05316162 539.55065918]
[321.23352051 537.14599609]
[306.73971558 533.23022461]
[292.72534180 527.84490967]
[279.33895874 521.04718018]
[266.72253418 512.90899658]
[255.00973511 503.51675415]
[244.32475281 492.96994019]
[234.78085327 481.38037109]
[226.47921753 468.87091064]
[219.50784302 455.57415771]
[213.94061279 441.63104248]
[209.83654785 427.18942261]
[207.23918152 412.40234375]
[206.17601013 397.42657471]
[206.65832520 382.42086792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 157]
[7 156]
[8 155]
[9 154]
[12 152]
[13 151]
[14 150]
[15 149]
[17 147]
[18 146]
[19 145]
[20 144]
[22 142]
[23 141]
[31 140]
[32 139]
[33 138]
[34 137]
[35 136]
[36 135]
[37 134]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[44 127]
[45 126]
[52 125]
[53 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
