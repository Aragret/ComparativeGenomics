%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[95.88490295 657.55004883]
[80.09637451 656.84429932]
[69.49301147 645.12493896]
[70.36560059 629.34472656]
[82.19644165 618.86590576]
[82.86622620 603.88085938]
[83.53601074 588.89581299]
[84.20579529 573.91076660]
[76.65989685 567.02075195]
[74.09831238 556.90209961]
[77.60089874 546.83673096]
[86.23927307 540.22711182]
[87.35491943 525.26861572]
[88.47056580 510.31018066]
[89.25189209 495.33053589]
[89.69849396 480.33718872]
[90.14510345 465.34384155]
[79.77616119 454.71273804]
[80.01549530 439.50097656]
[91.23669434 428.69717407]
[91.68330383 413.70379639]
[92.12990570 398.71044922]
[84.77497864 385.75845337]
[92.91973114 372.19476318]
[93.36633301 357.20141602]
[84.22765350 342.21972656]
[94.03546143 326.63485718]
[94.25878906 311.63650513]
[94.48211670 296.63818359]
[79.39042664 288.35089111]
[70.52923584 273.48507690]
[70.41720581 256.08990479]
[79.17541504 240.95701599]
[94.46914673 232.30050659]
[94.24581909 217.30216980]
[94.02249146 202.30383301]
[93.79916382 187.30549622]
[93.57583618 172.30715942]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[90.75634003 27.94109917]
[89.19581604 13.02249432]
[87.63529205 -1.89611030]
[86.07476807 -16.81471443]
[72.28586578 -27.57972336]
[70.58233643 -44.65054321]
[81.53234863 -57.41518784]
[79.74987793 -72.30890656]
[77.96741486 -87.20262146]
[76.18494415 -102.09633636]
[74.18093109 -116.96186829]
[71.95581818 -131.79591370]
[62.25698471 -144.29563904]
[68.02070618 -158.02986145]
[65.79558563 -172.86390686]
[63.57046890 -187.69795227]
[56.10108948 -174.68994141]
[42.83412933 -167.69081116]
[27.88049889 -168.86933899]
[15.87374210 -177.86032104]
[10.53428555 -191.87780762]
[13.51661777 -206.57835388]
[23.89662933 -217.40679932]
[38.45796204 -221.00785828]
[52.68862915 -216.26568604]
[62.17920303 -204.64947510]
[54.23729324 -218.33291626]
[61.78424835 -231.17398071]
[61.56092072 -246.17231750]
[61.33759308 -261.17065430]
[61.11426544 -276.16897583]
[46.17164230 -277.65753174]
[31.49610519 -280.83975220]
[17.27898598 -285.67413330]
[3.70562816 -292.09765625]
[-9.04700851 -300.02658081]
[-20.81266785 -309.35757446]
[-31.43796158 -319.96890259]
[-40.78436279 -331.72232056]
[-48.73003006 -344.46453857]
[-55.17136765 -358.02944946]
[-60.02440262 -372.24023438]
[-63.22586823 -386.91156006]
[-64.73402405 -401.85223389]
[-64.52920532 -416.86740112]
[-62.61408234 -431.76138306]
[-59.01362991 -446.33993530]
[-53.77478409 -460.41302490]
[-46.96583939 -473.79721069]
[-38.67556763 -486.31796265]
[-29.01205254 -497.81204224]
[-18.10127449 -508.12963867]
[-6.08547783 -517.13623047]
[6.87868643 -524.71435547]
[20.62220383 -530.76525879]
[34.96590042 -535.21008301]
[49.72277069 -537.99078369]
[64.70043945 -539.07122803]
[79.70362854 -538.43719482]
[94.53675842 -536.09710693]
[109.00643158 -532.08129883]
[122.92401123 -526.44232178]
[136.10806274 -519.25347900]
[148.38668823 -510.60867310]
[159.59982300 -500.62051392]
[169.60127258 -489.41925049]
[178.26066589 -477.15087891]
[185.46508789 -463.97537231]
[191.12062073 -450.06448364]
[195.15353394 -435.59957886]
[197.51124573 -420.76922607]
[198.16304016 -405.76681519]
[197.10038757 -390.78787231]
[194.33715820 -376.02770996]
[189.90939331 -361.67874146]
[183.87478638 -347.92807007]
[176.31202698 -334.95492554]
[167.31970215 -322.92846680]
[157.01506042 -312.00543213]
[145.53244019 -302.32830811]
[133.02153015 -294.02319336]
[119.64544678 -287.19836426]
[105.57855988 -281.94284058]
[91.00428009 -278.32510376]
[76.11260223 -276.39230347]
[76.33592987 -261.39398193]
[76.55925751 -246.39564514]
[76.78258514 -231.39730835]
[84.70851898 -218.78663635]
[77.17753601 -204.87280273]
[78.40451050 -189.92306519]
[80.62963104 -175.08901978]
[82.85475159 -160.25497437]
[92.39442444 -148.81628418]
[86.78986359 -134.02102661]
[89.01497650 -119.18698120]
[92.25499725 -115.67823792]
[93.32524872 -110.09687805]
[91.07866669 -103.87880707]
[92.86112976 -88.98508453]
[94.64359283 -74.09136963]
[96.42606354 -59.19765091]
[107.57007599 -52.72923279]
[113.03533173 -40.84592056]
[110.62297821 -27.79253006]
[100.99337769 -18.37523842]
[102.55390167 -3.45663333]
[104.11442566 11.46197128]
[105.67494202 26.38057709]
[115.93727875 15.44053268]
[130.92457581 14.82351494]
[142.05145264 24.88297844]
[142.94390869 39.85640335]
[133.09071350 51.16633606]
[118.13622284 52.33393097]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[108.57417297 172.08383179]
[108.79750061 187.08216858]
[109.02082825 202.08050537]
[109.24415588 217.07884216]
[109.46748352 232.07717896]
[121.29306030 237.26708984]
[130.24490356 246.51045227]
[135.01852417 258.40951538]
[134.93756104 271.18341064]
[130.04939270 282.93475342]
[121.11279297 291.93130493]
[109.48045349 296.86151123]
[109.25712585 311.85983276]
[109.03379822 326.85818481]
[117.44091797 336.63995361]
[116.94613647 349.12750244]
[108.35968781 357.64804077]
[107.91307831 372.64138794]
[115.23606873 386.66580200]
[107.12326050 399.15707397]
[106.67665100 414.15042114]
[106.23004913 429.14376831]
[116.78829193 440.59631348]
[116.12178802 455.79534912]
[105.13845062 465.79046631]
[104.69184875 480.78381348]
[104.24523926 495.77716064]
[106.72097778 500.37255859]
[107.14412689 504.99578857]
[105.84780121 508.86032104]
[103.42902374 511.42584229]
[102.31337738 526.38427734]
[101.19772339 541.34271240]
[110.76124573 559.08819580]
[99.19083405 574.58056641]
[98.52104950 589.56561279]
[97.85126495 604.55059814]
[97.18148041 619.53564453]
[108.03027344 631.02825928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[8 206]
[12 204]
[13 203]
[14 202]
[15 198]
[16 197]
[17 196]
[20 193]
[21 192]
[22 191]
[24 189]
[25 188]
[27 185]
[28 184]
[29 183]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[44 166]
[45 165]
[46 164]
[47 163]
[48 156]
[49 155]
[50 154]
[51 153]
[54 149]
[55 148]
[56 147]
[57 146]
[58 143]
[59 142]
[61 140]
[62 139]
[63 138]
[73 137]
[75 135]
[76 134]
[77 133]
[78 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
