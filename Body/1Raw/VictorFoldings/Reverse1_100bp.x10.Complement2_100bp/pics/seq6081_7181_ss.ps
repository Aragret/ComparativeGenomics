%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[187.79081726 377.02148438]
[193.48815918 363.12472534]
[200.85009766 350.03344727]
[209.76506042 337.94613647]
[220.09785461 327.04602051]
[231.69187927 317.49832153]
[223.65069580 304.83578491]
[215.60952759 292.17324829]
[207.56835938 279.51074219]
[199.52719116 266.84820557]
[191.48600769 254.18568420]
[183.44483948 241.52316284]
[167.03669739 241.02258301]
[154.02983093 230.73748779]
[149.67312622 214.56590271]
[155.87484741 198.82948303]
[147.64604187 186.28808594]
[139.41723633 173.74668884]
[131.18841553 161.20527649]
[117.73729706 154.80867004]
[116.63580322 139.02586365]
[108.40699768 126.48445892]
[90.89261627 126.25185394]
[76.99720001 115.58766937]
[72.24229431 98.72947693]
[78.51734924 82.37615204]
[69.91878510 70.08531189]
[61.32022095 57.79447556]
[52.72165680 45.50363922]
[38.76050568 51.15095901]
[23.89983177 53.54860687]
[8.88544750 52.57951736]
[-5.52984619 48.29549789]
[-18.62400055 40.91448212]
[-29.74189186 30.80945396]
[-38.32809067 18.48958206]
[-43.95461655 4.57458019]
[-46.34226608 -10.23647499]
[-45.37446976 -25.20026016]
[-41.10297012 -39.56650925]
[-33.74507904 -52.61563873]
[-23.67261124 -63.69477844]
[-32.27117538 -75.98561859]
[-40.86973953 -88.27645111]
[-49.74063492 -100.37220764]
[-58.87943649 -112.26683807]
[-68.01824188 -124.16147614]
[-77.15704346 -136.05610657]
[-86.29584503 -147.95074463]
[-98.97016907 -139.90910339]
[-112.31431580 -133.03598022]
[-126.22085571 -127.38670349]
[-140.57781982 -123.00674438]
[-155.26959229 -119.93138123]
[-170.17790222 -118.18537140]
[-185.18270874 -117.78277588]
[-200.16319275 -118.72682953]
[-214.99874878 -121.00994110]
[-229.56991577 -124.61372375]
[-243.75938416 -129.50915527]
[-257.45291138 -135.65682983]
[-270.54022217 -143.00724792]
[-282.91595459 -151.50122070]
[-294.48043823 -161.07035828]
[-305.14062500 -171.63761902]
[-314.81063843 -183.11791992]
[-323.41259766 -195.41880798]
[-330.87728882 -208.44128418]
[-337.14462280 -222.08045959]
[-342.16406250 -236.22651672]
[-345.89526367 -250.76559448]
[-348.30816650 -265.58059692]
[-349.38330078 -280.55224609]
[-349.11209106 -295.55999756]
[-347.49664307 -310.48300171]
[-344.54998779 -325.20114136]
[-340.29589844 -339.59588623]
[-334.76855469 -353.55136108]
[-328.01251221 -366.95516968]
[-320.08212280 -379.69940186]
[-311.04129028 -391.68142700]
[-300.96276855 -402.80484009]
[-289.92773438 -412.97998047]
[-278.02499390 -422.12500000]
[-265.35043335 -430.16625977]
[-252.00607300 -437.03897095]
[-238.09936523 -442.68783569]
[-223.74227905 -447.06735229]
[-209.05039978 -450.14227295]
[-194.14204407 -451.88781738]
[-179.13722229 -452.28994751]
[-164.15676880 -451.34545898]
[-149.32127380 -449.06188965]
[-134.75021362 -445.45764160]
[-120.56089783 -440.56179810]
[-106.86757660 -434.41369629]
[-93.78048706 -427.06289673]
[-81.40501404 -418.56854248]
[-69.84080505 -408.99905396]
[-59.18095398 -398.43145752]
[-49.51129913 -386.95086670]
[-40.90969467 -374.64968872]
[-33.44539642 -361.62701416]
[-27.17850494 -347.98764038]
[-22.15947723 -333.84143066]
[-18.42872620 -319.30224609]
[-16.01628876 -304.48715210]
[-14.94158840 -289.51547241]
[-15.21327972 -274.50775146]
[-16.82917404 -259.58477783]
[-19.77626038 -244.86671448]
[-24.03081131 -230.47209167]
[-29.55856895 -216.51681519]
[-36.31502914 -203.11320496]
[-44.24579239 -190.36921692]
[-53.28699875 -178.38745117]
[-63.36585617 -167.26437378]
[-74.40121460 -157.08953857]
[-65.26240540 -145.19490051]
[-56.12360764 -133.30027771]
[-46.98480606 -121.40563965]
[-37.84600067 -109.51100922]
[-34.41627121 -108.69291687]
[-31.21239090 -106.17295074]
[-29.02993584 -102.07537079]
[-28.57890129 -96.87501526]
[-19.98033714 -84.58418274]
[-11.38177395 -72.29334259]
[2.47888827 -77.95761108]
[17.25962830 -80.39647675]
[32.21967697 -79.48445129]
[46.60855484 -75.26406860]
[59.70372009 -67.94389343]
[70.84684753 -57.88825989]
[79.47692108 -45.59908295]
[85.15850067 -31.69085693]
[87.60365295 -16.85989380]
[86.68657684 -1.84948039]
[82.45005798 12.58737564]
[75.10348511 25.72572327]
[65.01249695 36.90507507]
[73.61106110 49.19591141]
[82.20962524 61.48675156]
[90.80818939 73.77758789]
[102.78266907 72.35292053]
[114.23305511 76.13529205]
[123.00279999 84.41233063]
[127.44020844 95.62514496]
[126.70953369 107.66191864]
[120.94840240 118.25565338]
[129.17720032 130.79705811]
[143.21690369 138.09069824]
[143.72982788 152.97647095]
[151.95863342 165.51786804]
[160.18743896 178.05928040]
[168.41624451 190.60067749]
[182.19500732 190.23089600]
[194.26145935 196.66667175]
[201.51419067 208.13259888]
[202.14916992 221.57658386]
[196.10736084 233.48199463]
[204.14852905 246.14451599]
[212.18971252 258.80703735]
[220.23088074 271.46957397]
[228.27204895 284.13208008]
[236.31323242 296.79461670]
[244.35440063 309.45715332]
[257.92608643 303.02368164]
[272.18548584 298.30685425]
[286.91647339 295.37811279]
[301.89572144 294.28189087]
[316.89614868 295.03479004]
[331.69036865 297.62542725]
[346.05404663 302.01449585]
[359.76950073 308.13546753]
[372.62875366 315.89553833]
[384.43688965 325.17709351]
[395.01492310 335.83941650]
[404.20245361 347.72088623]
[411.86019897 360.64132690]
[417.87210083 374.40493774]
[422.14703369 388.80300903]
[424.62011719 403.61730957]
[425.25393677 418.62322998]
[424.03884888 433.59332275]
[420.99325562 448.30059814]
[416.16336060 462.52212524]
[409.62237549 476.04229736]
[401.46948242 488.65615845]
[391.82821655 500.17248535]
[380.84478760 510.41671753]
[368.68566895 519.23352051]
[355.53524780 526.48919678]
[341.59280396 532.07385254]
[327.06973267 535.90277100]
[312.18624878 537.91784668]
[297.16790771 538.08868408]
[282.24240112 536.41253662]
[267.63604736 532.91491699]
[253.57020569 527.64880371]
[240.25814819 520.69403076]
[227.90168762 512.15600586]
[216.68812561 502.16421509]
[206.78746033 490.87014771]
[198.34979248 478.44494629]
[191.50303650 465.07702637]
[186.35098267 450.96902466]
[182.97172546 436.33480835]
[181.41648865 421.39620972]
[181.70887756 406.37976074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[12 161]
[16 156]
[17 155]
[18 154]
[19 153]
[21 151]
[22 150]
[26 144]
[27 143]
[28 142]
[29 141]
[42 128]
[43 127]
[44 126]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
