%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[11.35735607 750.74365234]
[-2.58969617 756.28619385]
[-16.93301773 760.70306396]
[-31.58192635 763.96649170]
[-46.44380188 766.05566406]
[-61.42468643 766.95745850]
[-76.42985535 766.66613770]
[-91.36445618 765.18359375]
[-106.13404846 762.51916504]
[-120.64526367 758.68975830]
[-134.80635071 753.71948242]
[-148.52778625 747.63977051]
[-161.72280884 740.48913574]
[-174.30799866 732.31280518]
[-186.20378113 723.16235352]
[-197.33494568 713.09570312]
[-207.63113403 702.17651367]
[-217.02722168 690.47381592]
[-225.46382141 678.06158447]
[-232.88760376 665.01824951]
[-239.25160217 651.42639160]
[-244.51560974 637.37182617]
[-248.64631653 622.94348145]
[-251.61764526 608.23254395]
[-253.41076660 593.33203125]
[-254.01437378 578.33618164]
[-253.42463684 563.33978271]
[-251.64529419 548.43762207]
[-248.68759155 533.72393799]
[-244.57022095 519.29180908]
[-239.31922913 505.23239136]
[-232.96780396 491.63461304]
[-225.55610657 478.58444214]
[-217.13098145 466.16439819]
[-207.74572754 454.45300293]
[-197.45964050 443.52429199]
[-186.33779907 433.44735718]
[-174.45048523 424.28591919]
[-161.87286377 416.09790039]
[-148.68446350 408.93508911]
[-134.96865845 402.84271240]
[-120.81217957 397.85934448]
[-106.30451202 394.01647949]
[-91.53739166 391.33837891]
[-76.60417175 389.84201050]
[-61.59927368 389.53683472]
[-46.61756134 390.42477417]
[-31.75375938 392.50021362]
[-17.10183907 395.75003052]
[-12.70084095 381.41018677]
[-8.29984283 367.07034302]
[-3.89884472 352.73049927]
[-17.62349319 358.78311157]
[-31.65740395 353.48693848]
[-37.96131516 339.87588501]
[-32.92406082 325.74697876]
[-19.43120766 319.19387817]
[-5.21207619 323.97052002]
[1.58789182 337.33969116]
[7.25067854 323.44964600]
[12.91346455 309.55963135]
[18.57625198 295.66958618]
[24.23903847 281.77957153]
[10.88638592 271.98956299]
[0.49527195 259.08587646]
[-6.23064995 243.93377686]
[-8.83373642 227.55110168]
[-7.13348818 211.03987122]
[-1.23905838 195.51210022]
[8.45774174 182.01498413]
[21.30848122 171.46020508]
[36.45146942 164.56240845]
[52.86952972 161.79080200]
[69.45832825 163.33718872]
[74.49524689 149.20816040]
[79.53216553 135.07913208]
[84.56907654 120.95010376]
[75.14617157 107.70114136]
[75.42684174 91.44545746]
[85.30150604 78.52968597]
[100.91484070 73.99647522]
[105.74083710 59.79402161]
[110.56683350 45.59156418]
[115.39282990 31.38910866]
[120.21882629 17.18665314]
[125.04482269 2.98419714]
[129.87081909 -11.21825886]
[133.19308472 -25.84571838]
[134.97555542 -40.73943710]
[136.75801086 -55.63315201]
[138.54048157 -70.52687073]
[132.49789429 -85.14869690]
[141.69276428 -96.86635590]
[143.47523499 -111.76007080]
[145.25769043 -126.65378571]
[131.00491333 -131.50683594]
[118.07280731 -139.21748352]
[107.02669525 -149.44866943]
[98.34947205 -161.75311279]
[92.42046356 -175.59292603]
[89.49887085 -190.36309814]
[89.71240997 -205.41793823]
[93.05173492 -220.09930420]
[99.37088013 -233.76539612]
[108.39360046 -245.81878662]
[119.72544098 -255.73257446]
[132.87104797 -263.07333374]
[147.25573730 -267.52017212]
[162.25067139 -268.87872314]
[177.20033264 -267.08956909]
[191.45120239 -262.23092651]
[204.38027954 -254.51518250]
[215.42236328 -244.27964783]
[224.09475708 -231.97178650]
[230.01831055 -218.12963867]
[232.93409729 -203.35832214]
[232.71463013 -188.30357361]
[229.36952209 -173.62351990]
[223.04501343 -159.95991516]
[214.01754761 -147.91006470]
[202.68180847 -138.00074768]
[189.53330994 -130.66516113]
[175.14688110 -126.22396088]
[160.15141296 -124.87132263]
[158.36894226 -109.97760773]
[156.58648682 -95.08388519]
[162.75656128 -81.52736664]
[153.43420410 -68.74440765]
[151.65173340 -53.85068893]
[149.86926270 -38.95697021]
[148.08680725 -24.06325340]
[157.18753052 -35.98703766]
[170.11978149 -43.58683395]
[184.96513367 -45.73525620]
[199.52134705 -42.11360168]
[211.62911987 -33.25911331]
[219.49232483 -20.48531151]
[221.94450378 -5.68710661]
[218.62187195 8.94027233]
[210.01736450 21.22694016]
[197.40736389 29.35024452]
[182.66252136 32.10514069]
[167.97012329 29.08295631]
[155.50971985 20.73201561]
[147.12971497 8.29112816]
[144.07327271 -6.39226055]
[139.24728394 7.81019497]
[134.42127991 22.01265144]
[129.59529114 36.21510696]
[124.76928711 50.41756058]
[119.94329071 64.62001801]
[115.11729431 78.82247162]
[123.57987976 88.99956512]
[125.94083405 102.02317047]
[121.58924103 114.52326202]
[111.65111542 123.26524353]
[98.69811249 125.98702240]
[93.66119385 140.11605835]
[88.62427521 154.24508667]
[83.58736420 168.37411499]
[94.98454285 175.63427734]
[104.60545349 185.11399841]
[112.02603149 196.39158630]
[116.92001343 208.96615601]
[119.07327271 222.27990723]
[118.39320374 235.74288940]
[114.91266632 248.75910950]
[108.78845215 260.75296021]
[100.29419708 271.19464111]
[89.80815125 279.62350464]
[77.79635620 285.66851807]
[64.79192352 289.06445312]
[51.37137222 289.66366577]
[38.12906647 287.44235229]
[32.46627808 301.33239746]
[26.80349159 315.22241211]
[21.14070511 329.11242676]
[15.47791862 343.00247192]
[10.44100285 357.13150024]
[6.04000425 371.47134399]
[1.63900638 385.81118774]
[-2.76199174 400.15103149]
[11.19041729 405.68008423]
[24.65943336 412.30017090]
[37.55989838 419.96948242]
[49.81025314 428.63946533]
[61.33304214 438.25537109]
[72.05541992 448.75634766]
[81.90959167 460.07604980]
[90.83325195 472.14288330]
[98.76998138 484.88055420]
[105.66960907 498.20855713]
[111.48850250 512.04260254]
[116.18988037 526.29522705]
[119.74401855 540.87628174]
[122.12844086 555.69366455]
[123.32807159 570.65362549]
[123.33533478 585.66162109]
[122.15017700 600.62280273]
[119.78009033 615.44244385]
[116.24006653 630.02697754]
[111.55248260 644.28411865]
[105.74697113 658.12377930]
[98.86024475 671.45843506]
[90.93584442 684.20379639]
[82.02386475 696.27923584]
[72.18064880 707.60845947]
[61.46844101 718.11981201]
[49.95495987 727.74688721]
[37.71300125 736.42871094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 182]
[50 181]
[51 180]
[52 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[74 160]
[75 159]
[76 158]
[77 157]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 131]
[89 130]
[90 129]
[91 128]
[93 126]
[94 125]
[95 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
