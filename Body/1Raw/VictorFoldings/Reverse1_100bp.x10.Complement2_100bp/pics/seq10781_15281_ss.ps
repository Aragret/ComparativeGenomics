%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[150.81889343 610.79412842]
[144.39405823 597.01770020]
[143.73527527 581.83105469]
[148.94300842 567.54998779]
[159.22314453 556.35235596]
[173.00799561 549.94561768]
[172.33821106 534.96057129]
[171.66842651 519.97552490]
[170.99864197 504.99050903]
[170.32885742 490.00546265]
[169.65907288 475.02044678]
[168.98928833 460.03540039]
[160.69140625 447.66629028]
[167.80477905 433.53439331]
[167.13499451 418.54937744]
[164.90988159 403.71533203]
[161.15357971 389.19326782]
[157.39727783 374.67120361]
[153.64097595 360.14913940]
[148.92262268 354.46066284]
[149.93856812 345.38290405]
[146.39889526 330.80651855]
[135.87675476 320.26452637]
[140.13900757 305.02825928]
[136.59933472 290.45187378]
[133.05966187 275.87551880]
[128.42651367 270.11740112]
[129.57751465 261.05578613]
[126.25524902 246.42831421]
[122.93299103 231.80085754]
[110.23218536 224.10505676]
[106.65457153 209.31806946]
[114.81273651 196.04847717]
[111.49047852 181.42100525]
[108.16822052 166.79354858]
[104.84596252 152.16609192]
[101.41490173 137.56376648]
[97.87522888 122.98739624]
[94.33555603 108.41101837]
[89.52436066 101.94380188]
[90.85340881 93.59128571]
[87.53115082 78.96382141]
[84.20888519 64.33636475]
[69.14039612 63.72332382]
[54.75525284 59.23410797]
[42.03225327 51.18046570]
[31.83546638 40.11646271]
[24.85555840 26.80035973]
[21.56300545 12.14266205]
[22.17639160 -2.85614729]
[26.64790154 -17.17389679]
[34.66699600 -29.83638573]
[45.68196487 -39.98366547]
[58.93788528 -46.92845154]
[55.61562729 -61.55591202]
[52.29336548 -76.18337250]
[41.69171143 -87.92711639]
[46.41796112 -102.05197906]
[43.09570312 -116.67944336]
[39.77344513 -131.30690002]
[26.95279503 -144.52478027]
[32.79333496 -161.07334900]
[24.08460236 -148.86032104]
[9.31408978 -146.24652100]
[-3.05698204 -154.72924805]
[-5.94190216 -169.44920349]
[2.31194329 -181.97413635]
[16.97637558 -185.12919617]
[29.65039253 -177.10780334]
[27.42527580 -191.94183350]
[17.72644615 -204.44157410]
[23.49016380 -218.17579651]
[21.26504707 -233.00984192]
[19.03993034 -247.84387207]
[15.22696304 -253.24507141]
[14.78102303 -258.91058350]
[16.97624207 -263.15206909]
[15.19377708 -278.04577637]
[13.41131115 -292.93948364]
[3.77270508 -301.51037598]
[2.59470272 -313.95208740]
[9.96582794 -323.54339600]
[8.40530491 -338.46200562]
[6.84478188 -353.38058472]
[5.28425884 -368.29919434]
[-8.50464630 -379.06420898]
[-10.20817471 -396.13504028]
[0.74183249 -408.89968872]
[-1.04063344 -423.79339600]
[-2.82309937 -438.68710327]
[-4.60556507 -453.58081055]
[-6.38803101 -468.47454834]
[-21.23266983 -471.38864136]
[-34.44927216 -478.74911499]
[-44.74301147 -489.83486938]
[-51.10541153 -503.55984497]
[-52.91314697 -518.57940674]
[-49.98911667 -533.42211914]
[-42.61978531 -546.63372803]
[-31.52712822 -556.92004395]
[-17.79788971 -563.27325439]
[-2.77711797 -565.07092285]
[12.06360245 -562.13696289]
[25.27032852 -554.75878906]
[35.54920197 -543.65924072]
[41.89319992 -529.92572021]
[43.68080902 -514.90374756]
[40.73688889 -500.06500244]
[33.34986115 -486.86325073]
[22.24342728 -476.59179688]
[8.50568581 -470.25701904]
[10.28815174 -455.36328125]
[12.07061768 -440.46957397]
[13.85308361 -425.57586670]
[15.63554955 -410.68212891]
[26.77956390 -404.21371460]
[32.24481583 -392.33041382]
[29.83246422 -379.27700806]
[20.20286369 -369.85971069]
[21.76338577 -354.94113159]
[23.32390976 -340.02252197]
[24.88443184 -325.10391235]
[35.94276047 -311.47744751]
[28.30502892 -294.72195435]
[30.08749390 -279.82824707]
[31.86996078 -264.93453979]
[33.87397385 -250.06900024]
[36.09909058 -235.23495483]
[38.32420731 -220.40090942]
[47.86388397 -208.96220398]
[42.25931931 -194.16696167]
[44.48443604 -179.33291626]
[47.36970901 -164.61302185]
[57.53353882 -158.05381775]
[60.60179138 -145.93896484]
[54.40090561 -134.62916565]
[57.72316360 -120.00170135]
[61.04542160 -105.37423706]
[71.40944672 -94.67675018]
[66.92082977 -79.50563049]
[70.24308777 -64.87817383]
[73.56534576 -50.25070953]
[88.52063751 -49.71339417]
[102.83821106 -45.31976318]
[115.54031372 -37.36357117]
[125.75791168 -26.38208389]
[132.79010010 -13.11977291]
[136.15220642 1.52212465]
[135.60922241 16.54686546]
[131.19212341 30.93004608]
[123.19627380 43.68945312]
[112.16165161 53.95212936]
[98.83634949 61.01410294]
[102.15860748 75.64156342]
[105.48086548 90.26902771]
[108.91192627 104.87134552]
[112.45159912 119.44772339]
[115.99127197 134.02409363]
[121.05738068 141.62490845]
[119.47341919 148.84382629]
[122.79567719 163.47129822]
[126.11793518 178.09875488]
[129.44020081 192.72621155]
[142.52998352 201.16986084]
[145.69085693 216.05151367]
[137.56045532 228.47859192]
[140.88270569 243.10604858]
[144.20497131 257.73352051]
[147.63603210 272.33584595]
[151.17570496 286.91220093]
[154.71537781 301.48858643]
[165.49070740 313.07318115]
[160.97528076 327.26684570]
[164.51495361 341.84323120]
[168.16304016 356.39285278]
[171.91934204 370.91491699]
[175.67562866 385.43695068]
[179.43193054 399.95901489]
[183.57287598 385.54193115]
[192.85556030 373.75924683]
[205.90292358 366.35882568]
[220.77949524 364.43850708]
[235.27842712 368.28317261]
[247.24885559 377.32244873]
[254.91506958 390.21542358]
[257.13983154 405.04953003]
[253.59309387 419.62417603]
[244.80099487 431.77734375]
[232.06781006 439.70614624]
[217.28240967 442.23440552]
[202.63813782 438.98706055]
[190.30737305 430.44586182]
[182.12002563 417.87957764]
[182.78981018 432.86462402]
[191.13560486 446.30554199]
[183.97433472 459.36560059]
[184.64411926 474.35064697]
[185.31390381 489.33569336]
[185.98368835 504.32073975]
[186.65347290 519.30578613]
[187.32325745 534.29083252]
[187.99304199 549.27581787]
[202.29450989 554.42718506]
[213.53265381 564.66302490]
[219.99371338 578.42248535]
[220.69244385 593.60736084]
[215.52229309 607.90203857]
[205.27166748 619.12670898]
[191.50370789 625.56970215]
[176.31793213 626.24847412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[14 194]
[15 193]
[16 178]
[17 177]
[18 176]
[19 175]
[21 174]
[22 173]
[24 171]
[25 170]
[26 169]
[28 168]
[29 167]
[30 166]
[33 163]
[34 162]
[35 161]
[36 160]
[37 158]
[38 157]
[39 156]
[41 155]
[42 154]
[43 153]
[54 142]
[55 141]
[56 140]
[58 138]
[59 137]
[60 136]
[62 133]
[69 132]
[70 131]
[72 129]
[73 128]
[74 127]
[77 126]
[78 125]
[79 124]
[82 122]
[83 121]
[84 120]
[85 119]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
