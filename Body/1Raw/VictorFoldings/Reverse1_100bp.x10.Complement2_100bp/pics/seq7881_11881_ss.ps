%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[56.36432648 530.18890381]
[56.09147644 545.34478760]
[50.64855957 559.49224854]
[40.69283295 570.92285156]
[27.42650414 578.25634766]
[12.45154285 580.60717773]
[-2.42374897 577.69146729]
[-15.40310860 569.86126709]
[-24.91921425 558.06213379]
[-29.82295227 543.71887207]
[-29.52216911 528.56347656]
[-24.05318832 514.42608643]
[-14.07641602 503.01382446]
[-0.79659408 495.70477295]
[14.18267345 493.38156128]
[17.06794548 478.66168213]
[19.95321846 463.94177246]
[22.83849144 449.22189331]
[25.72376442 434.50198364]
[28.60903549 419.78210449]
[20.11223984 407.60260010]
[22.82862473 392.63345337]
[35.66120911 383.80380249]
[38.54648209 369.08392334]
[41.43175125 354.36401367]
[44.09754944 339.60281372]
[46.43303680 324.78573608]
[48.65815353 309.95169067]
[50.66216660 295.08618164]
[52.44463348 280.19244385]
[54.22709656 265.29873657]
[56.00956345 250.40501404]
[57.79203033 235.51129150]
[59.57449722 220.61758423]
[61.35696030 205.72386169]
[51.78747559 217.27484131]
[38.19021225 223.60842896]
[23.19059181 223.50173950]
[9.68480492 216.97534180]
[0.28060848 205.28941345]
[-3.20619559 190.70030212]
[-0.10235964 176.02493286]
[8.99281406 164.09690857]
[22.32319069 157.21932983]
[37.31488419 156.72015381]
[51.07323074 162.69577026]
[60.94170761 173.99237061]
[65.01493835 188.43002319]
[61.35234070 173.99276733]
[72.79808807 163.07006836]
[77.19908905 148.73020935]
[81.60009003 134.39036560]
[86.00108337 120.05052185]
[90.40208435 105.71067047]
[94.69620514 91.33846283]
[98.88321686 76.93467712]
[94.07965088 59.15808487]
[107.21176910 47.51701736]
[111.18386841 33.05249405]
[115.15596008 18.58797073]
[119.12805939 4.12344742]
[111.57054901 -9.49719048]
[115.80487061 -24.10968971]
[128.83663940 -31.23068428]
[132.70094299 -45.72437668]
[136.45724487 -60.24643707]
[140.21354675 -74.76849365]
[143.86163330 -89.31811523]
[147.40130615 -103.89449310]
[150.94097900 -118.47086334]
[154.48065186 -133.04724121]
[156.70576477 -147.88128662]
[157.59858704 -162.85469055]
[158.49140930 -177.82809448]
[155.87832642 -186.58079529]
[159.51062012 -193.01727295]
[160.62626648 -207.97572327]
[161.74191284 -222.93417358]
[162.85755920 -237.89263916]
[161.74191284 -252.85108948]
[158.41964722 -267.47854614]
[155.09739685 -282.10601807]
[151.77513123 -296.73345947]
[148.45288086 -311.36093140]
[133.39289856 -311.25430298]
[118.66220093 -314.38806152]
[104.94974518 -320.61563110]
[92.89688873 -329.64572144]
[83.06737518 -341.05603027]
[75.92094421 -354.31280518]
[71.79183960 -368.79605103]
[70.87319946 -383.82836914]
[73.20798492 -398.70663452]
[78.68699646 -412.73498535]
[87.05396271 -425.25726318]
[97.91755676 -435.68783569]
[110.76966095 -443.53878784]
[125.00915527 -448.44293213]
[139.97004700 -450.17092896]
[154.95257568 -448.64190674]
[169.25598145 -443.92739868]
[182.21127319 -436.24792480]
[193.21250916 -425.96264648]
[201.74514771 -413.55264282]
[207.41007996 -399.59832764]
[209.94236755 -384.75241089]
[209.22355652 -369.70922852]
[205.28729248 -355.17236328]
[198.31764221 -341.82177734]
[188.64062500 -330.28189087]
[176.70883179 -321.09240723]
[163.08033752 -314.68319702]
[166.40258789 -300.05572510]
[169.72485352 -285.42825317]
[173.04711914 -270.80081177]
[176.36936951 -256.17333984]
[180.07356262 -270.70877075]
[187.67320251 -283.64111328]
[198.56895447 -293.95046997]
[211.90151978 -300.82379150]
[226.61946106 -303.71902466]
[241.56204224 -302.40780640]
[255.55084229 -296.99362183]
[267.48263550 -287.90338135]
[276.41641235 -275.85400391]
[281.64767456 -261.79574585]
[282.76379395 -246.83734131]
[279.67678833 -232.15843201]
[272.63012695 -218.91667175]
[262.17950439 -208.15634155]
[249.14910889 -200.72607422]
[234.56658936 -197.21183777]
[219.58195496 -197.89077759]
[205.37698364 -202.70936584]
[193.07192993 -211.28756714]
[183.63720703 -222.94886780]
[177.81600952 -236.77699280]
[176.70036316 -221.81852722]
[175.58471680 -206.86007690]
[174.46907043 -191.90162659]
[173.46481323 -176.93528748]
[172.57199097 -161.96186829]
[171.67916870 -146.98846436]
[180.54417419 -159.08854675]
[193.74034119 -166.22024536]
[208.71972656 -167.00653076]
[222.59002686 -161.29559326]
[232.67309570 -150.19012451]
[237.02207947 -135.83441162]
[234.79724121 -121.00032806]
[226.42816162 -108.55209351]
[213.53077698 -100.89327240]
[198.59538269 -99.50265503]
[184.50575256 -104.64875793]
[173.98239136 -115.33794403]
[169.05702209 -129.50756836]
[165.51734924 -114.93119049]
[161.97767639 -100.35482025]
[158.43800354 -85.77844238]
[159.91432190 -78.53673553]
[154.73561096 -71.01219177]
[150.97930908 -56.49013519]
[147.22300720 -41.96807480]
[148.59133911 -34.70519257]
[143.30116272 -27.25858688]
[150.86856079 -14.48086643]
[147.04634094 0.24480130]
[133.59259033 8.09554386]
[129.62048340 22.56006813]
[125.64839172 37.02459335]
[121.67629242 51.48911667]
[127.38493347 62.15391922]
[124.19409180 74.23706055]
[113.28700256 81.12168884]
[109.09999084 95.52547455]
[110.05286407 103.52951050]
[104.74192810 110.11167145]
[100.34093475 124.45151520]
[95.93993378 138.79136658]
[91.53893280 153.13121033]
[87.13793945 167.47105408]
[90.48574829 182.93400574]
[79.35478973 192.83102417]
[76.25067902 207.50633240]
[74.46821594 222.40003967]
[72.68574524 237.29376221]
[70.90328217 252.18748474]
[69.12081909 267.08120728]
[67.33834839 281.97491455]
[65.55588531 296.86862183]
[67.80246735 303.08670044]
[66.73221588 308.66806030]
[63.49219513 312.17681885]
[61.26707840 327.01086426]
[63.08885574 335.96176147]
[58.89682007 342.04852295]
[60.86350632 348.36071777]
[59.54510880 353.88873291]
[56.15164566 357.24929810]
[53.26637268 371.96917725]
[50.38109970 386.68908691]
[58.93073654 399.70989990]
[55.79496765 414.59686279]
[43.32892609 422.66738892]
[40.44365311 437.38726807]
[37.55838394 452.10714722]
[34.67311096 466.82705688]
[31.78783798 481.54693604]
[28.90256500 496.26684570]
[41.89633179 504.07308960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 204]
[23 201]
[24 200]
[25 199]
[26 196]
[27 194]
[28 193]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[34 185]
[35 184]
[48 183]
[50 181]
[51 180]
[52 179]
[53 178]
[54 177]
[55 175]
[56 174]
[58 171]
[59 170]
[60 169]
[61 168]
[64 165]
[65 163]
[66 162]
[67 161]
[68 159]
[69 158]
[70 157]
[71 156]
[72 143]
[73 142]
[74 141]
[76 140]
[77 139]
[78 138]
[79 137]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
