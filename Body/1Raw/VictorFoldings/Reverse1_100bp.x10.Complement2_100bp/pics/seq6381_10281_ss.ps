%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[150.19337463 710.45788574]
[144.29501343 696.62133789]
[140.96224976 681.95397949]
[140.30223083 666.92718506]
[142.33615112 652.02404785]
[146.99865723 637.72369385]
[154.13984680 624.48571777]
[163.53016663 612.73577881]
[174.86775208 602.85150146]
[187.78814697 595.15063477]
[201.87603760 589.88079834]
[199.21023560 575.11956787]
[196.54443359 560.35833740]
[193.87864685 545.59710693]
[191.21284485 530.83593750]
[188.54705811 516.07470703]
[185.88125610 501.31347656]
[182.99598694 486.59359741]
[179.89187622 471.91830444]
[176.78776550 457.24298096]
[173.68365479 442.56768799]
[170.24053955 439.25799561]
[168.83998108 433.75024414]
[170.71246338 427.40948486]
[168.04667664 412.64825439]
[165.38087463 397.88705444]
[162.71508789 383.12582397]
[160.04928589 368.36462402]
[156.72702026 353.73715210]
[152.75492859 339.27261353]
[148.78283691 324.80810547]
[144.81074524 310.34356689]
[140.83863831 295.87905884]
[136.86654663 281.41452026]
[123.22952271 282.42922974]
[109.63624573 280.89877319]
[96.55779266 276.87445068]
[84.44767761 270.49420166]
[73.72619629 261.97750854]
[64.76576996 251.61811829]
[57.87803268 239.77384949]
[53.30301666 226.85415649]
[51.20075607 213.30603027]
[51.64569855 199.59855652]
[54.62407303 186.20660400]
[60.03432083 173.59446716]
[67.69053650 162.19969177]
[77.32886505 152.41790771]
[88.61659241 144.58912659]
[101.16365051 138.98590088]
[97.84139252 124.35843658]
[94.51913452 109.73097229]
[91.08807373 95.12865448]
[87.54840088 80.55227661]
[84.00872803 65.97590637]
[80.46905518 51.39952850]
[76.92938232 36.82315063]
[73.38970947 22.24677658]
[69.85003662 7.67040110]
[66.04682922 22.18024635]
[57.79326248 34.70536804]
[45.96036148 43.92396164]
[31.79687691 48.86316299]
[16.79751778 49.00173187]
[2.54519963 44.32504272]
[-9.45599556 35.32663345]
[-17.93955231 22.95613480]
[-22.01018143 8.51903057]
[-21.23830032 -6.46109629]
[-15.70536518 -20.40335655]
[-5.99528265 -31.83639145]
[6.86722088 -39.55364609]
[21.52473450 -42.74069595]
[36.43041611 -41.06121063]
[50.01123047 -34.69242477]
[60.83396912 -24.30645561]
[67.75653076 -10.99917316]
[67.97985840 -25.99751091]
[68.09152985 -40.99709320]
[68.09152985 -55.99709320]
[68.09152985 -70.99709320]
[68.09152985 -85.99709320]
[68.09152985 -100.99709320]
[57.54717636 -90.32860565]
[42.62437820 -88.80868530]
[30.14564323 -97.13221741]
[25.81607628 -111.49378967]
[31.61509705 -125.32749176]
[44.89147568 -132.30874634]
[59.57542419 -129.24580383]
[68.95424652 -117.53725433]
[70.51477051 -132.45585632]
[72.07529449 -147.37446594]
[73.52471161 -162.30427551]
[67.04945374 -176.73970032]
[75.89137268 -188.72593689]
[77.22960663 -203.66612244]
[78.56784058 -218.60630798]
[79.90607452 -233.54649353]
[65.98581696 -239.46945190]
[54.57848740 -249.40565491]
[46.80166626 -262.38165283]
[43.41724777 -277.12615967]
[44.75680161 -292.19470215]
[50.68909073 -306.11099243]
[60.63293076 -317.51165771]
[73.61412811 -325.27978516]
[88.36091614 -328.65432739]
[103.42855072 -327.30465698]
[117.34085846 -321.36306763]
[128.73486328 -311.41156006]
[136.49427795 -298.42517090]
[139.85894775 -283.67614746]
[138.49919128 -268.60940552]
[132.54826355 -254.70108032]
[122.58914948 -243.31375122]
[109.59755707 -235.56303406]
[94.84626007 -232.20825195]
[93.50802612 -217.26806641]
[92.16979218 -202.32788086]
[90.83155823 -187.38769531]
[97.40253448 -174.02088928]
[88.46489716 -160.96603394]
[90.99911499 -154.02345276]
[86.99389648 -145.81393433]
[85.43337250 -130.89533997]
[83.87284851 -115.97673035]
[83.09152985 -100.99709320]
[83.09152985 -85.99709320]
[83.09152985 -70.99709320]
[83.09152985 -55.99709320]
[83.09152985 -40.99709320]
[86.23503113 -34.30828476]
[82.97820282 -25.77418327]
[82.75486755 -10.77584553]
[84.42641449 4.13072872]
[87.96608734 18.70710373]
[91.50576019 33.28347778]
[95.04543304 47.85985565]
[98.58509827 62.43622971]
[102.12477112 77.01260376]
[105.66444397 91.58898163]
[110.47563934 98.05619812]
[109.14659119 106.40871429]
[112.46884918 121.03617859]
[115.79111481 135.66363525]
[132.18560791 135.52351379]
[148.20039368 139.00373840]
[163.04629517 145.92984009]
[175.99237061 155.95765686]
[186.40193176 168.59037781]
[193.76382446 183.20315552]
[197.71757507 199.07403564]
[198.07099915 215.41966248]
[194.80952454 231.43382263]
[188.09681702 246.32734680]
[178.26657104 259.36694336]
[165.80586243 269.91122437]
[151.33106995 277.44244385]
[155.30316162 291.90695190]
[159.27526855 306.37149048]
[163.24736023 320.83599854]
[167.21945190 335.30053711]
[171.19154358 349.76504517]
[179.53279114 337.29815674]
[194.21893311 334.24572754]
[206.83708191 342.35635376]
[210.15899658 356.98388672]
[202.28172302 369.74902344]
[187.71772766 373.33932495]
[174.81050110 365.69882202]
[177.47630310 380.46002197]
[180.14208984 395.22125244]
[182.80789185 409.98245239]
[185.47367859 424.74368286]
[188.35896301 439.46356201]
[191.46307373 454.13888550]
[194.56718445 468.81417847]
[197.67129517 483.48947144]
[201.79898071 488.65414429]
[202.58134460 494.28308105]
[200.64247131 498.64767456]
[203.30827332 513.40893555]
[205.97406006 528.17010498]
[208.63986206 542.93133545]
[211.30566406 557.69256592]
[213.97145081 572.45379639]
[216.63725281 587.21496582]
[231.67851257 587.22430420]
[246.47636414 589.91937256]
[260.55511475 595.21356201]
[273.46215820 602.93676758]
[284.78265381 612.84063721]
[294.15261841 624.60681152]
[301.27090454 637.85711670]
[305.90866089 652.16552734]
[307.91680908 667.07214355]
[307.23077393 682.09777832]
[303.87265015 696.75939941]
[297.95037842 710.58563232]
[289.65429688 723.13220215]
[279.25112915 733.99560547]
[267.07528687 742.82672119]
[253.51815796 749.34161377]
[239.01556396 753.33093262]
[224.03369141 754.66638184]
[209.05415344 753.30499268]
[194.55847168 749.29064941]
[181.01264954 742.75225830]
[168.85209656 733.90008545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 179]
[19 178]
[20 177]
[21 176]
[24 175]
[25 174]
[26 173]
[27 172]
[28 171]
[29 164]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[50 146]
[51 145]
[52 144]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[77 135]
[78 134]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[91 127]
[92 126]
[93 125]
[94 123]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
