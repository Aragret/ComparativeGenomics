%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[70.73395538 507.70718384]
[78.31540680 494.41131592]
[91.21359253 486.17144775]
[89.87535858 471.23126221]
[88.53712463 456.29107666]
[87.19889069 441.35089111]
[85.86065674 426.41070557]
[84.52242279 411.47052002]
[83.18418884 396.53033447]
[74.95380402 409.07070923]
[61.29376602 415.26776123]
[46.43679428 413.20126343]
[34.98647690 403.51156616]
[30.49082375 389.20111084]
[34.34286118 374.70416260]
[45.34898758 364.51272583]
[60.09884262 361.78475952]
[74.02201843 367.36553955]
[82.80435944 379.52606201]
[83.47414398 364.54101562]
[84.14392853 349.55599976]
[76.98265076 336.49591064]
[85.32843781 323.05499268]
[76.41382599 307.93890381]
[86.45258331 292.50177002]
[86.89919281 277.50842285]
[87.34579468 262.51507568]
[87.79240417 247.52172852]
[85.22753143 243.49301147]
[85.16623688 237.81030273]
[88.48213196 232.09046936]
[89.37494659 217.11706543]
[90.26776123 202.14366150]
[91.16057587 187.17025757]
[92.05339050 172.19685364]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[82.92531586 27.06732750]
[92.28604126 12.22334766]
[92.06271362 -2.77499008]
[91.83938599 -17.77332687]
[91.61605835 -32.77166367]
[91.39273071 -47.77000046]
[88.13590240 -56.30410385]
[91.27939606 -62.99291611]
[91.27939606 -77.99291229]
[91.27939606 -92.99291229]
[90.49807739 -107.97254944]
[88.93755341 -122.89115906]
[87.37702942 -137.80976868]
[83.40493774 -152.27429199]
[77.12757111 -165.89759827]
[70.85021210 -179.52091980]
[64.57285309 -193.14422607]
[52.76515961 -198.33471680]
[47.81719589 -209.81085205]
[51.88064575 -221.20448303]
[45.80681229 -234.91975403]
[39.73297501 -248.63500977]
[25.36814499 -244.25221252]
[10.57975388 -241.63288879]
[-4.41653967 -240.81526184]
[-19.40204620 -241.81123352]
[-34.15822983 -244.60629272]
[-48.46990967 -249.15966797]
[-62.12836838 -255.40496826]
[-74.93443298 -263.25112915]
[-86.70135498 -272.58370972]
[-97.25753021 -283.26660156]
[-106.44902039 -295.14404297]
[-114.14179230 -308.04284668]
[-120.22365570 -321.77487183]
[-124.60592651 -336.13986206]
[-127.22469330 -350.92834473]
[-128.04176331 -365.92465210]
[-127.04522705 -380.91012573]
[-124.24961853 -395.66622925]
[-119.69570160 -409.97772217]
[-113.44989014 -423.63595581]
[-105.60326385 -436.44171143]
[-96.27024841 -448.20828247]
[-85.58694458 -458.76406860]
[-73.70915222 -467.95510864]
[-60.81007767 -475.64739990]
[-47.07783508 -481.72875977]
[-32.71267319 -486.11047363]
[-17.92408752 -488.72869873]
[-2.92773223 -489.54522705]
[12.05769920 -488.54812622]
[26.81367683 -485.75195312]
[41.12501144 -481.19750977]
[54.78300476 -474.95117188]
[67.58848572 -467.10406494]
[79.35470581 -457.77062988]
[89.91007996 -447.08691406]
[99.10068512 -435.20877075]
[106.79248810 -422.30941772]
[112.87332916 -408.57696533]
[117.25452423 -394.21163940]
[119.87218475 -379.42294312]
[120.68813324 -364.42654419]
[119.69048309 -349.44116211]
[116.89376831 -334.68530273]
[112.33878326 -320.37411499]
[106.09194946 -306.71636963]
[98.24436188 -293.91119385]
[88.91046143 -282.14532471]
[78.22637177 -271.59033203]
[66.34789276 -262.40017700]
[53.44824219 -254.70884705]
[59.52207565 -240.99357605]
[65.59590912 -227.27832031]
[80.30958557 -217.71408081]
[78.19616699 -199.42160034]
[84.47352600 -185.79827881]
[90.75089264 -172.17495728]
[97.02825165 -158.55165100]
[97.51906586 -173.54360962]
[101.82247925 -187.91305542]
[109.65305328 -200.70687866]
[120.49142456 -211.07652283]
[133.61872864 -218.33422852]
[148.16424561 -221.99858093]
[163.16326904 -221.82656860]
[177.62092590 -217.82958984]
[190.57832336 -210.27273560]
[201.17602539 -199.65725708]
[208.71113586 -186.68721008]
[212.68386841 -172.22285461]
[212.83073425 -157.22357178]
[209.14198303 -142.68420410]
[201.86228943 -129.56910706]
[191.47447205 -118.74813843]
[178.66752625 -110.93902588]
[164.29089355 -106.65971375]
[149.29812622 -106.19403839]
[134.68363953 -109.57289124]
[121.41674805 -116.57215118]
[110.37741089 -126.72759247]
[102.29563904 -139.37028503]
[103.85615540 -124.45168304]
[105.41667938 -109.53307343]
[114.79392242 -121.24065399]
[129.47761536 -124.30481720]
[142.75457764 -117.32467651]
[148.55474854 -103.49146271]
[144.22639465 -89.12952423]
[131.74835205 -80.80495453]
[116.82542419 -82.32363129]
[106.27939606 -92.99291229]
[106.27939606 -77.99291229]
[106.27939606 -62.99291611]
[106.39106750 -47.99332809]
[106.61439514 -32.99499130]
[106.83772278 -17.99665451]
[107.06105042 -2.99831772]
[107.28437805 12.00002003]
[115.74301910 20.64744377]
[116.05182648 33.14097977]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[109.80357361 160.88420105]
[110.72354889 164.72062683]
[110.38085938 168.25869751]
[109.03150940 171.13026428]
[107.02680206 173.08966064]
[106.13398743 188.06306458]
[105.24116516 203.03648376]
[104.34835052 218.00988770]
[103.45553589 232.98329163]
[102.78575134 247.96832275]
[102.33914185 262.96166992]
[101.89253998 277.95501709]
[101.44593048 292.94836426]
[109.70648193 302.85424805]
[109.02584076 315.33303833]
[100.31347656 323.72479248]
[107.42684937 337.85668945]
[99.12896729 350.22576904]
[98.45918274 365.21081543]
[97.78939819 380.19586182]
[98.12437439 395.19210815]
[99.46260834 410.13229370]
[100.80084229 425.07247925]
[102.13907623 440.01266479]
[103.47731018 454.95285034]
[104.81554413 469.89303589]
[106.15377808 484.83322144]
[120.31102753 490.64965820]
[130.13471985 502.38650513]
[133.36746216 517.34667969]
[129.26637268 532.09252930]
[118.77387238 543.23553467]
[104.30104065 548.21502686]
[89.17363739 545.88690186]
[76.86783600 536.78601074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[19 195]
[20 194]
[21 193]
[23 191]
[25 188]
[26 187]
[27 186]
[28 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 175]
[37 174]
[38 173]
[39 172]
[41 170]
[42 169]
[43 168]
[44 167]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[52 159]
[53 158]
[54 157]
[55 149]
[56 148]
[57 147]
[58 124]
[59 123]
[60 122]
[61 121]
[64 119]
[65 118]
[66 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
