%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[123.53576660 763.36047363]
[109.01789856 759.57226562]
[94.73526764 754.97601318]
[80.73282623 749.58612061]
[67.05462646 743.41961670]
[53.74370956 736.49584961]
[40.84194565 728.83666992]
[28.38993835 720.46606445]
[16.42686272 711.41046143]
[4.99036026 701.69836426]
[-5.88358593 691.36022949]
[-16.16076279 680.42871094]
[-25.80883217 668.93811035]
[-34.79743958 656.92462158]
[-43.09830093 644.42602539]
[-50.68530273 631.48168945]
[-57.53457260 618.13226318]
[-63.62455368 604.41979980]
[-68.93609619 590.38745117]
[-73.45247650 576.07940674]
[-77.15948486 561.54058838]
[-80.04547119 546.81677246]
[-82.10133362 531.95434570]
[-83.32062531 517.00000000]
[-83.69949341 502.00079346]
[-83.23676300 487.00396729]
[-81.93386841 472.05667114]
[-79.79492950 457.20596313]
[-76.82666016 442.49853516]
[-73.03840637 427.98068237]
[-68.44209290 413.69805908]
[-63.05216980 399.69564819]
[-56.88560486 386.01745605]
[-49.96179962 372.70657349]
[-42.30253601 359.80484009]
[-33.93191528 347.35287476]
[-24.87627029 335.38983154]
[-15.16409969 323.95333862]
[-4.82595825 313.07943726]
[6.10562611 302.80230713]
[17.59625816 293.15429688]
[29.60978317 284.16571045]
[42.10840225 275.86489868]
[55.05278778 268.27795410]
[68.40222168 261.42874146]
[82.11468506 255.33879089]
[96.14704895 250.02731323]
[110.45515442 245.51098633]
[124.99398041 241.80403137]
[122.10870361 227.08413696]
[119.22343445 212.36424255]
[116.01016235 197.71246338]
[112.47048950 183.13607788]
[108.93081665 168.55970764]
[105.39114380 153.98333740]
[101.85147095 139.40695190]
[91.32932281 128.86495972]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.21271515 60.90005493]
[77.59870148 46.62732315]
[65.99160004 35.87623978]
[69.43884277 21.38604546]
[64.82483673 7.11331272]
[60.21082687 -7.15942097]
[55.59681702 -21.43215370]
[44.48957825 -27.98898697]
[40.94039536 -39.97176743]
[46.32897186 -50.80181122]
[41.92797089 -65.14165497]
[37.52697372 -79.48150635]
[33.12597656 -93.82135010]
[28.72497749 -108.16120148]
[13.86141300 -105.94036865]
[-1.16713548 -105.95973969]
[-16.02492523 -108.21888733]
[-30.38002777 -112.66733551]
[-43.91174316 -119.20571136]
[-56.31776810 -127.68794250]
[-67.32095337 -137.92453003]
[-76.67546844 -149.68678284]
[-84.17234802 -162.71192932]
[-89.64409637 -176.70898438]
[-92.96848297 -191.36524963]
[-94.07123566 -206.35330200]
[-92.92771149 -221.33828735]
[-89.56346130 -235.98545837]
[-84.05364990 -249.96757507]
[-76.52136230 -262.97229004]
[-67.13487244 -274.70904541]
[-56.10388184 -284.91564941]
[-43.67482376 -293.36407471]
[-30.12537003 -299.86563110]
[-15.75821877 -304.27499390]
[-0.89433748 -306.49371338]
[14.13420868 -306.47219849]
[28.99167633 -304.21093750]
[43.34614563 -299.76043701]
[56.87693024 -293.22015381]
[69.28174591 -284.73614502]
[80.28347015 -274.49798584]
[89.63631439 -262.73440552]
[97.13134003 -249.70819092]
[102.60109711 -235.71035767]
[105.92339325 -221.05361938]
[107.02400208 -206.06541443]
[105.87834930 -191.08058167]
[102.51201630 -176.43389893]
[97.00021362 -162.45256042]
[89.46607208 -149.44892883]
[80.07791138 -137.71351624]
[69.04546356 -127.50847626]
[56.61520767 -119.06179810]
[43.06482697 -112.56219482]
[47.46582413 -98.22235107]
[51.86682129 -83.88249969]
[56.26781845 -69.54265594]
[60.66881943 -55.20280838]
[74.14170837 -43.95789719]
[69.86955261 -26.04616356]
[74.48355865 -11.77342987]
[79.09757233 2.49930334]
[83.71157837 16.77203751]
[94.98865509 26.50223541]
[91.87143707 42.01331329]
[96.48545074 56.28604507]
[105.53520966 44.32353210]
[120.52564240 43.78774643]
[130.40634155 55.07365036]
[127.89363861 69.86169434]
[114.83979797 77.25068665]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[120.94327545 121.67361450]
[116.42784119 135.86727905]
[119.96751404 150.44366455]
[123.50718689 165.02003479]
[127.04685974 179.59640503]
[130.58653259 194.17279053]
[134.19078064 197.94854736]
[135.82308960 202.29469299]
[135.59638977 206.36453247]
[133.94332886 209.47897339]
[136.82859802 224.19886780]
[139.71386719 238.91874695]
[154.57629395 236.86271667]
[169.53062439 235.64326477]
[184.52980042 235.26422119]
[199.52664185 235.72679138]
[214.47395325 237.02952576]
[229.32469177 239.16830444]
[244.03215027 242.13639832]
[258.55004883 245.92448425]
[272.83270264 250.52064514]
[286.83520508 255.91041565]
[300.51342773 262.07681274]
[313.82440186 269.00048828]
[326.72622681 276.65960693]
[339.17831421 285.03009033]
[351.14144897 294.08560181]
[362.57803345 303.79763794]
[373.45205688 314.13565063]
[383.72930908 325.06713867]
[393.37744141 336.55764771]
[402.36614990 348.57107544]
[410.66711426 361.06961060]
[418.25421143 374.01391602]
[425.10357666 387.36325073]
[431.19366455 401.07565308]
[436.50531006 415.10797119]
[441.02178955 429.41601562]
[444.72891235 443.95480347]
[447.61499023 458.67858887]
[449.67098999 473.54101562]
[450.89038086 488.49536133]
[451.26934814 503.49453735]
[450.80673218 518.49133301]
[449.50396729 533.43865967]
[447.36511230 548.28942871]
[444.39697266 562.99682617]
[440.60882568 577.51470947]
[436.01260376 591.79736328]
[430.62280273 605.79986572]
[424.45632935 619.47808838]
[417.53262329 632.78900146]
[409.87344360 645.69079590]
[401.50292969 658.14282227]
[392.44735718 670.10595703]
[382.73529053 681.54248047]
[372.39721680 692.41644287]
[361.46572876 702.69366455]
[349.97515869 712.34179688]
[337.96170044 721.33044434]
[325.46313477 729.63134766]
[312.51879883 737.21838379]
[299.16943359 744.06774902]
[285.45700073 750.15777588]
[271.42468262 755.46936035]
[257.11660767 759.98577881]
[242.57781982 763.69287109]
[227.85403442 766.57891846]
[212.99159241 768.63482666]
[198.03724670 769.85418701]
[183.03807068 770.23309326]
[168.04122925 769.77038574]
[153.09393311 768.46759033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 149]
[50 148]
[51 147]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[58 137]
[60 135]
[61 134]
[62 128]
[63 127]
[65 125]
[66 124]
[67 123]
[68 122]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
