%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[-15.42926502 300.73565674]
[-8.21080875 313.90844727]
[-2.73616552 327.89617920]
[0.90476686 342.46914673]
[2.65220070 357.38809204]
[2.47744131 372.40802002]
[0.38335857 387.28225708]
[-3.59566069 401.76657104]
[-9.39427757 415.62313843]
[-16.91727448 428.62442017]
[-26.04111481 440.55688477]
[-36.61597824 451.22460938]
[-48.46821594 460.45245361]
[-61.40320206 468.08883667]
[-75.20853424 474.00839233]
[-89.65751648 478.11392212]
[-104.51287842 480.33798218]
[-119.53069305 480.64404297]
[-134.46434021 479.02713013]
[-149.06860352 475.51376343]
[-163.10366821 470.16165161]
[-176.33906555 463.05862427]
[-188.55746460 454.32141113]
[-199.55821228 444.09341431]
[-209.16067505 432.54260254]
[-217.20716858 419.85867310]
[-223.56556702 406.24987793]
[-228.13145447 391.93972778]
[-230.82986450 377.16314697]
[-231.61648560 362.16284180]
[-230.47837830 347.18508911]
[-227.43426514 332.47583008]
[-222.53411865 318.27664185]
[-215.85838318 304.82067871]
[-207.51670837 292.32888794]
[-197.64607239 281.00640869]
[-186.40853882 271.03915405]
[-173.98864746 262.59078979]
[-160.59036255 255.80006409]
[-146.43367004 250.77847290]
[-131.75103760 247.60848999]
[-116.78358459 246.34214783]
[-101.77707672 247.00025940]
[-86.97794342 249.57200623]
[-72.62918854 254.01516724]
[-58.96644592 260.25677490]
[-46.21405792 268.19433594]
[-36.72515869 256.57708740]
[-27.23625946 244.95980835]
[-17.74736023 233.34254456]
[-15.68859196 218.59091187]
[-0.96627963 212.79745483]
[1.09248936 198.04582214]
[15.81480217 192.25238037]
[25.30369949 180.63511658]
[34.79259872 169.01785278]
[36.85136795 154.26622009]
[51.57368088 148.47276306]
[61.06258011 136.85549927]
[70.46472931 125.16791534]
[79.77960968 113.41066742]
[89.09449768 101.65341187]
[74.12107086 100.76089478]
[65.35867310 88.58631897]
[69.26660919 74.10432434]
[82.96410370 67.99050903]
[96.35385895 74.75173950]
[99.56583405 89.40229034]
[109.72938538 78.37040710]
[119.89292908 67.33853149]
[130.05647278 56.30665588]
[133.71659851 40.91464233]
[148.03067017 36.79682159]
[158.19421387 25.76494408]
[168.35775757 14.73306751]
[178.52131653 3.70119023]
[179.32106018 -0.56663960]
[181.24389648 -4.01151896]
[183.89321899 -6.38143444]
[186.83129883 -7.57906723]
[189.63331604 -7.66179895]
[200.43547058 -18.06917191]
[211.23762512 -28.47654533]
[215.24638367 -36.68432617]
[222.27894592 -38.95696640]
[233.23484802 -49.20235825]
[244.19076538 -59.44775009]
[255.14666748 -69.69313812]
[264.46154785 -81.45039368]
[271.92929077 -94.45934296]
[279.39703369 -107.46829987]
[286.86477661 -120.47724915]
[294.33251953 -133.48620605]
[301.80026245 -146.49514771]
[309.26800537 -159.50410461]
[316.73574829 -172.51306152]
[304.64895630 -181.42413330]
[293.65676880 -191.65495300]
[283.90246582 -203.07211304]
[275.51324463 -215.52677917]
[268.59844971 -228.85656738]
[263.24826050 -242.88772583]
[259.53240967 -257.43728638]
[257.49932861 -272.31561279]
[257.17553711 -287.32870483]
[258.56524658 -302.28085327]
[261.65036011 -316.97711182]
[266.39062500 -331.22586060]
[272.72427368 -344.84140015]
[280.56872559 -357.64617920]
[289.82171631 -369.47326660]
[300.36257935 -380.16848755]
[312.05392456 -389.59240723]
[324.74334717 -397.62216187]
[338.26538086 -404.15304565]
[352.44372559 -409.09991455]
[367.09359741 -412.39831543]
[382.02395630 -414.00521851]
[397.04016113 -413.89968872]
[411.94647217 -412.08306885]
[426.54852295 -408.57910156]
[440.65594482 -403.43341064]
[454.08483887 -396.71310425]
[466.66012573 -388.50579834]
[478.21786499 -378.91848755]
[488.60736084 -368.07617188]
[497.69320679 -356.12017822]
[505.35687256 -343.20639038]
[511.49853516 -329.50320435]
[516.03808594 -315.18920898]
[518.91632080 -300.45101929]
[520.09570312 -285.48083496]
[519.56091309 -270.47378540]
[517.31890869 -255.62550354]
[513.39892578 -241.12959290]
[507.85205078 -227.17503357]
[500.75057983 -213.94375610]
[492.18710327 -201.60823059]
[482.27331543 -190.32929993]
[471.13839722 -180.25401306]
[458.92755127 -171.51370239]
[445.79995728 -164.22232056]
[431.92678833 -158.47494507]
[417.48886108 -154.34648132]
[402.67443848 -151.89074707]
[387.67663574 -151.13978577]
[372.69100952 -152.10337830]
[357.91290283 -154.76895142]
[343.53497314 -159.10176086]
[329.74468994 -165.04531860]
[322.27694702 -152.03636169]
[314.80920410 -139.02742004]
[307.34146118 -126.01846313]
[299.87371826 -113.00950623]
[292.40597534 -100.00055695]
[284.93826294 -86.99160767]
[277.47052002 -73.98265076]
[290.04354858 -82.16301727]
[304.39535522 -86.52493286]
[319.39401245 -86.72439575]
[333.85671997 -82.74568176]
[346.64288330 -74.90257263]
[356.74407959 -63.81359863]
[363.36376953 -50.35329056]
[365.97982788 -35.58317566]
[364.38598633 -20.66809654]
[358.70788574 -6.78431273]
[349.39340210 4.97324133]
[337.17706299 13.67731571]
[323.02230835 18.64146996]
[308.04544067 19.47421265]
[293.42758179 16.10986710]
[280.32159424 8.81376171]
[269.76107788 -1.83870280]
[262.57882690 -15.00742817]
[259.34127808 -29.65387535]
[260.30380249 -44.62296295]
[265.39205933 -58.73723221]
[254.43615723 -48.49184036]
[243.48023987 -38.24644852]
[232.52433777 -28.00105858]
[221.64500427 -17.67438889]
[210.84284973 -7.26701593]
[200.04069519 3.14035726]
[189.55319214 13.86473751]
[179.38964844 24.89661407]
[169.22608948 35.92848969]
[159.06254578 46.96036911]
[156.12939453 61.56330872]
[141.08834839 66.47019958]
[130.92480469 77.50208282]
[120.76126099 88.53395844]
[110.59770966 99.56583405]
[100.85174561 110.96829987]
[91.53686523 122.72554779]
[82.22197723 134.48280334]
[79.34573364 143.15257263]
[72.67984009 146.34439087]
[63.19094467 157.96165466]
[60.45346451 173.54423523]
[46.40986252 178.50674438]
[36.92096329 190.12400818]
[27.43206596 201.74127197]
[24.69458771 217.32385254]
[10.65098381 222.28636169]
[7.91350508 237.86894226]
[-6.13009787 242.83145142]
[-15.61899567 254.44871521]
[-25.10789490 266.06597900]
[-34.59679413 277.68322754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 210]
[48 209]
[49 208]
[50 207]
[52 205]
[54 203]
[55 202]
[56 201]
[58 199]
[59 198]
[60 196]
[61 195]
[62 194]
[68 193]
[69 192]
[70 191]
[71 190]
[73 188]
[74 187]
[75 186]
[76 185]
[81 184]
[82 183]
[83 182]
[85 181]
[86 180]
[87 179]
[88 178]
[89 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 151]
[96 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
