%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[-46.07926178 637.04418945]
[-39.20144272 650.47393799]
[-36.03480530 665.22637939]
[-36.79524994 680.29571533]
[-41.43093491 694.65441895]
[-49.62578583 707.32354736]
[-60.82106781 717.43933105]
[-74.25347137 724.31195068]
[-89.00714111 727.47290039]
[-104.07615662 726.70660400]
[-118.43309021 722.06536865]
[-131.09904480 713.86566162]
[-141.21046448 702.66644287]
[-148.07791138 689.23138428]
[-151.23315430 674.47650146]
[-150.46107483 659.40777588]
[-145.81430054 645.05267334]
[-137.60966492 632.38983154]
[-126.40657043 622.28277588]
[-112.96887207 615.42053223]
[-98.21276093 612.27093506]
[-83.14434052 613.04888916]
[-78.53033447 598.77612305]
[-73.91632080 584.50341797]
[-69.30231476 570.23065186]
[-64.68830109 555.95794678]
[-60.28730774 541.61810303]
[-56.10029602 527.21429443]
[-51.91328430 512.81054688]
[-47.72627258 498.40673828]
[-48.87775040 491.10632324]
[-43.36821365 483.82052612]
[-38.96721649 469.48068237]
[-34.56621933 455.14083862]
[-30.16522026 440.80099487]
[-25.76422119 426.46115112]
[-21.47009850 412.08892822]
[-17.28308678 397.68515015]
[-13.09607601 383.28137207]
[-8.90906429 368.87759399]
[-14.00484657 352.08474731]
[-0.60677487 339.45251465]
[3.36532140 324.98797607]
[7.33741760 310.52346802]
[-5.17499208 318.79629517]
[-20.16503334 318.24975586]
[-32.04179001 309.08773804]
[-36.37552643 294.72741699]
[-31.54986763 280.52487183]
[-19.36466217 271.77725220]
[-4.36469221 271.74722290]
[7.85542488 280.44601440]
[12.73791218 294.63031006]
[18.40069962 280.74029541]
[24.06348610 266.85025024]
[18.06809998 253.26383972]
[23.61310196 239.09671021]
[37.90444565 232.90031433]
[43.56723022 219.01028442]
[49.23001862 205.12025452]
[54.89280701 191.23023987]
[60.55559158 177.34020996]
[54.56020737 163.75378418]
[60.10520935 149.58665466]
[74.39655304 143.39025879]
[80.05934143 129.50022888]
[85.72212219 115.61020660]
[91.38491058 101.72017670]
[90.44519806 98.82079315]
[90.53968811 95.51540375]
[91.82078552 92.18640137]
[94.29750061 89.26712799]
[97.82042694 87.18820190]
[104.29991913 73.65985870]
[110.77941895 60.13151169]
[117.25891113 46.60316467]
[123.73841095 33.07482147]
[129.40119934 19.18479347]
[134.22718811 4.98233843]
[130.22218323 -12.99101543]
[143.86100769 -24.03409004]
[148.47502136 -38.30682373]
[153.08901978 -52.57955551]
[157.70303345 -66.85228729]
[161.02529907 -81.47975159]
[155.20108032 -96.18991852]
[164.56938171 -107.76937866]
[158.74516296 -122.47954559]
[168.11347961 -134.05900574]
[170.11749268 -148.92454529]
[159.46797180 -157.67546082]
[154.57192993 -170.44445801]
[156.60833740 -183.85798645]
[164.93954468 -194.42845154]
[177.30543518 -199.46104431]
[179.53054810 -214.29508972]
[181.75567627 -229.12913513]
[183.42721558 -244.03570557]
[184.54286194 -258.99417114]
[170.61834717 -264.94281006]
[159.38150024 -275.09231567]
[152.05119324 -288.34167480]
[149.42259216 -303.25372314]
[151.78082275 -318.21090698]
[158.87007141 -331.59078979]
[169.92134094 -341.94201660]
[183.73588562 -348.14178467]
[198.81521606 -349.51754761]
[213.52362061 -345.92010498]
[226.26564026 -337.73968506]
[235.65913391 -325.86361694]
[240.68515015 -311.58013916]
[240.79852295 -296.43859863]
[235.98693848 -282.08148193]
[226.77230835 -270.06607056]
[214.15420532 -261.69577026]
[199.50131226 -257.87850952]
[198.38566589 -242.92005920]
[211.28184509 -250.58091736]
[225.36526489 -245.41787720]
[230.25418091 -231.23695374]
[222.34463501 -218.49179077]
[207.46726990 -216.57765198]
[196.58970642 -226.90402222]
[194.36459351 -212.06997681]
[192.13948059 -197.23593140]
[204.20457458 -186.10440063]
[207.28819275 -169.81167603]
[199.98042297 -154.74191284]
[184.98301697 -146.92053223]
[182.97900391 -132.05499268]
[188.94656372 -118.40811157]
[179.43492126 -105.76536560]
[185.40248108 -92.11848450]
[175.89082336 -79.47573853]
[185.63122559 -90.88294983]
[199.32127380 -97.01340485]
[214.31764221 -96.68339539]
[227.72477722 -89.95664978]
[236.95393372 -78.13199615]
[240.22314453 -63.49258804]
[236.90115356 -48.86506653]
[227.62940979 -37.07377625]
[214.19810486 -30.39543152]
[199.20065308 -30.11951447]
[185.53279114 -36.29930115]
[175.83360291 -47.74157333]
[171.97576904 -62.23828125]
[167.36175537 -47.96554947]
[162.74775696 -33.69281387]
[158.13374329 -19.42008018]
[163.36047363 -8.51101112]
[159.63328552 3.41759968]
[148.42965698 9.80833626]
[143.60365295 24.01079178]
[156.58628845 16.49738693]
[171.51722717 17.93515968]
[182.82759094 27.78785324]
[186.29890442 42.38066101]
[180.63644409 56.27082062]
[167.95217896 64.27764893]
[152.97702026 63.41480255]
[141.29632568 54.00408936]
[137.26675415 39.55431747]
[130.78726196 53.08266068]
[124.30776215 66.61100769]
[117.82826996 80.13935089]
[111.34877014 93.66770172]
[105.27494049 107.38296509]
[99.61215210 121.27299500]
[93.94936371 135.16302490]
[88.28657532 149.05303955]
[94.17198944 163.47523499]
[88.23124695 177.48103333]
[74.44561768 183.00299072]
[68.78282928 196.89302063]
[63.12004471 210.78305054]
[57.45726013 224.67308044]
[51.79447174 238.56309509]
[57.67988205 252.98529053]
[51.73913956 266.99108887]
[37.95351410 272.51306152]
[32.29072571 286.40307617]
[26.62793922 300.29309082]
[21.80194092 314.49554443]
[17.82984543 328.96008301]
[13.85774899 343.42462158]
[19.54744148 355.00003052]
[15.94129276 366.96578979]
[5.49471760 373.06460571]
[1.30770636 387.46838379]
[-2.87930489 401.87216187]
[-7.06631613 416.27593994]
[-6.45672369 425.39001465]
[-11.42437458 430.86215210]
[-15.82537270 445.20199585]
[-20.22636986 459.54183960]
[-24.62736893 473.88168335]
[-29.02836609 488.22152710]
[-33.32249069 502.59375000]
[-37.50950241 516.99755859]
[-41.69651413 531.40130615]
[-45.88352585 545.80511475]
[-44.68085480 552.30627441]
[-46.64681244 557.63842773]
[-50.41556931 560.57196045]
[-55.02957916 574.84466553]
[-59.64358902 589.11743164]
[-64.25759888 603.39013672]
[-68.87160492 617.66290283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 210]
[23 209]
[24 208]
[25 207]
[26 206]
[27 203]
[28 202]
[29 201]
[30 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 193]
[38 192]
[39 191]
[40 190]
[42 187]
[43 186]
[44 185]
[53 184]
[54 183]
[55 182]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[65 172]
[66 171]
[67 170]
[68 169]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[78 155]
[79 154]
[81 151]
[82 150]
[83 149]
[84 148]
[85 135]
[87 133]
[89 131]
[90 130]
[95 126]
[96 125]
[97 124]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
