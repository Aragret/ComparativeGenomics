%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[142.85612488 755.62847900]
[132.49203491 744.76342773]
[123.38613129 732.82421875]
[115.64892578 719.95568848]
[109.37435150 706.31408691]
[104.63858032 692.06500244]
[101.49909210 677.38146973]
[99.99399567 662.44165039]
[100.14157104 647.42694092]
[101.94001770 632.51959229]
[105.36750793 617.90057373]
[110.38243866 603.74737549]
[116.92392731 590.23175049]
[124.91257477 577.51782227]
[134.25138855 565.75982666]
[144.82702637 555.10058594]
[156.51109314 545.66949463]
[169.16175842 537.58099365]
[182.62545776 530.93328857]
[196.73875427 525.80706787]
[193.19909668 511.23071289]
[189.65942383 496.65435791]
[186.11975098 482.07797241]
[182.58007812 467.50158691]
[179.04040527 452.92523193]
[175.50073242 438.34884644]
[171.96105957 423.77246094]
[157.00215149 424.59191895]
[142.14344788 422.64810181]
[127.89115906 418.00570679]
[114.73114014 410.82153320]
[103.11227417 401.33886719]
[93.43119812 389.87960815]
[86.01874542 376.83303833]
[81.12861633 362.64276123]
[78.92875671 347.79156494]
[79.49552917 332.78503418]
[82.81109619 318.13430786]
[88.76396942 304.33865356]
[97.15275574 291.86853027]
[107.69298553 281.14938354]
[120.02671814 272.54733276]
[133.73475647 266.35656738]
[120.92079163 258.85070801]
[117.12341309 244.11862183]
[125.08310699 230.72903442]
[114.56096649 220.18704224]
[118.82321167 204.95077515]
[115.28353882 190.37438965]
[111.74386597 175.79801941]
[108.09577942 161.24839783]
[97.41784668 150.86422729]
[101.45277405 135.56619263]
[97.69647217 121.04412842]
[86.08751678 115.95632935]
[79.46580505 105.14862823]
[80.20503235 92.49527740]
[88.04020691 82.53217316]
[84.50053406 67.95579529]
[73.72521210 56.37119675]
[78.24063873 42.17752838]
[74.70096588 27.60115433]
[63.92564011 16.01655579]
[68.44107056 1.82288849]
[64.90139771 -12.75348663]
[54.12607193 -24.33808517]
[58.64149857 -38.53175354]
[55.10182571 -53.10812759]
[51.56215668 -67.68450165]
[45.82077789 -53.82677841]
[33.98015594 -44.61810303]
[19.13539886 -42.46560669]
[5.16689396 -47.93194580]
[-4.27402782 -59.58823013]
[-6.71953106 -74.38754272]
[-1.53036809 -88.46136475]
[9.93702698 -98.13084412]
[24.68510437 -100.86840057]
[38.85875320 -95.95844269]
[48.75261688 -84.68521118]
[47.41438293 -99.62539673]
[46.07614899 -114.56558228]
[44.73791504 -129.50576782]
[43.39968109 -144.44595337]
[42.06144714 -159.38613892]
[33.12380981 -172.44099426]
[39.69478607 -185.80780029]
[38.35655212 -200.74798584]
[37.01831818 -215.68817139]
[35.68008041 -230.62835693]
[34.34184647 -245.56854248]
[19.47537422 -248.14736938]
[5.78332233 -254.48693848]
[-5.80076170 -264.15499878]
[-14.48705482 -276.49237061]
[-19.68331146 -290.65786743]
[-21.03524208 -305.68566895]
[-18.45067215 -320.55114746]
[-12.10581684 -334.24075317]
[-2.43328333 -345.82110596]
[9.90744019 -354.50262451]
[24.07494354 -359.69342041]
[39.10326004 -361.03955078]
[53.96773911 -358.44921875]
[67.65489197 -352.09909058]
[79.23150635 -342.42208862]
[87.90827179 -330.07800293]
[93.09358978 -315.90850830]
[94.43391418 -300.87966919]
[91.83786011 -286.01620483]
[85.48243713 -272.33148193]
[75.80096436 -260.75860596]
[63.45354080 -252.08662415]
[49.28203201 -246.90676880]
[50.62026596 -231.96658325]
[51.95849991 -217.02639771]
[53.29673386 -202.08621216]
[54.63497162 -187.14602661]
[63.47688675 -175.15980530]
[57.00163269 -160.72436523]
[58.33986664 -145.78417969]
[59.67810059 -130.84399414]
[61.01633453 -115.90381622]
[62.35456848 -100.96363068]
[63.69280243 -86.02344513]
[66.13852692 -71.22417450]
[69.67819977 -56.64780045]
[73.21787262 -42.07142639]
[83.74002075 -31.52942657]
[79.47777557 -16.29315948]
[83.01744843 -1.71678400]
[93.53958893 8.82521534]
[89.27734375 24.06148148]
[92.81701660 38.63785553]
[103.33915710 49.17985535]
[99.07691193 64.41612244]
[102.61658478 78.99250031]
[116.90313721 87.25458527]
[120.91690063 103.26263428]
[112.21853638 117.28782654]
[115.97483826 131.80989075]
[126.92144775 143.23277283]
[122.61783600 157.49209595]
[127.79655457 165.01664734]
[126.32024384 172.25834656]
[129.85990906 186.83471680]
[133.39958191 201.41110229]
[144.17491150 212.99569702]
[139.65948486 227.18936157]
[152.87353516 235.43719482]
[156.25561523 250.27012634]
[148.31114197 262.81689453]
[163.33175659 262.03131104]
[178.23699951 264.01873779]
[192.51943970 268.71002197]
[205.69311523 275.94403076]
[217.31007385 285.47308350]
[226.97560120 296.97152710]
[234.36166382 310.04681396]
[239.21795654 324.25292969]
[241.38050842 339.10556030]
[240.77709961 354.09869385]
[237.42976379 368.72171021]
[231.45391846 382.47698975]
[223.05441284 394.89663696]
[212.51853943 405.55847168]
[200.20616150 414.10043335]
[186.53742981 420.23278809]
[190.07710266 434.80917358]
[193.61677551 449.38555908]
[197.15644836 463.96191406]
[200.69612122 478.53829956]
[204.23579407 493.11468506]
[207.77546692 507.69104004]
[211.31513977 522.26739502]
[226.20764160 520.34997559]
[241.22068787 520.08245850]
[256.17202759 521.46820068]
[270.88018799 524.49029541]
[285.16662598 529.11212158]
[298.85787964 535.27758789]
[311.78781128 542.91174316]
[323.79940796 551.92199707]
[334.74685669 562.19897461]
[344.49731445 573.61791992]
[352.93237305 586.04016113]
[359.94967651 599.31500244]
[365.46401978 613.28118896]
[369.40844727 627.76928711]
[371.73510742 642.60339355]
[372.41577148 657.60339355]
[371.44210815 672.58721924]
[368.82601929 687.37298584]
[364.59921265 701.78118896]
[358.81298828 715.63702393]
[351.53762817 728.77215576]
[342.86141968 741.02722168]
[332.88967896 752.25341797]
[321.74346924 762.31451416]
[309.55807495 771.08831787]
[296.48147583 778.46838379]
[282.67233276 784.36505127]
[268.29830933 788.70678711]
[253.53390503 791.44091797]
[238.55831909 792.53417969]
[223.55335999 791.97338867]
[208.70118713 789.76525879]
[194.18205261 785.93664551]
[180.17224121 780.53405762]
[166.84179688 773.62298584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[43 152]
[46 149]
[48 147]
[49 146]
[50 145]
[51 143]
[53 141]
[54 140]
[58 137]
[59 136]
[61 134]
[62 133]
[64 131]
[65 130]
[67 128]
[68 127]
[69 126]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
