%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[38.98580933 602.48791504]
[38.31345749 617.50006104]
[35.46239090 632.25439453]
[30.49337578 646.43627930]
[23.51232719 659.74353027]
[14.66804695 671.89245605]
[4.14905262 682.62414551]
[-7.82044363 691.70977783]
[-20.98531151 698.95574951]
[-35.06494141 704.20764160]
[-49.75922012 707.35339355]
[-64.75494385 708.32604980]
[-79.73248291 707.10485840]
[-94.37258148 703.71582031]
[-108.36318207 698.23126221]
[-121.40608215 690.76794434]
[-133.22326660 681.48504639]
[-143.56286621 670.58044434]
[-152.20446777 658.28649902]
[-158.96388245 644.86535645]
[-163.69703674 630.60296631]
[-166.30305481 615.80346680]
[-166.72636414 600.78216553]
[-164.95796204 585.85931396]
[-161.03553772 571.35302734]
[-155.04269409 557.57250977]
[-147.10717773 544.81140137]
[-137.39811707 533.34179688]
[-126.12247467 523.40814209]
[-113.52059174 515.22216797]
[-99.86106873 508.95834351]
[-85.43506622 504.75021362]
[-70.55007935 502.68743896]
[-55.52337646 502.81402588]
[-40.67525101 505.12728882]
[-26.32219887 509.57785034]
[-19.84270287 496.04953003]
[-13.36320591 482.52117920]
[-6.88371038 468.99282837]
[-0.60634983 455.36950684]
[5.46748400 441.65423584]
[11.54131794 427.93896484]
[17.51288033 414.17886353]
[23.38184166 400.37469482]
[29.25080299 386.57052612]
[22.29908180 371.25671387]
[28.69994545 355.33993530]
[44.94565201 348.85177612]
[50.60844040 334.96176147]
[54.68810654 320.52719116]
[57.13383484 305.72793579]
[59.57955933 290.92864990]
[50.72389984 279.00753784]
[52.99339676 263.96414185]
[65.55739594 254.75633240]
[68.00312805 239.95706177]
[70.44885254 225.15779114]
[72.89457703 210.35852051]
[75.34030914 195.55924988]
[68.55313873 185.54621887]
[70.46958923 173.19668579]
[80.60125732 165.21469116]
[83.26705170 150.45347595]
[85.93284607 135.69226074]
[88.59864807 120.93104553]
[91.26444244 106.16983032]
[92.15725708 91.19641876]
[91.26444244 76.22301483]
[90.37162781 61.24961090]
[79.63102722 71.72050476]
[64.63112640 71.66768646]
[53.96453094 61.12141800]
[53.74156189 46.12307739]
[64.08994293 35.26439285]
[79.08164978 34.76571655]
[90.12834930 44.91184998]
[90.57495880 29.91850090]
[91.02156067 14.92515182]
[91.46817017 -0.06819861]
[88.59565735 -8.73921204]
[92.03469086 -15.28098774]
[92.70447540 -30.26602554]
[93.37425995 -45.25106430]
[94.04404449 -60.23610306]
[93.82071686 -75.23444366]
[92.70507050 -90.19289398]
[88.94606018 -98.51801300]
[91.68585968 -105.38207245]
[90.79304504 -120.35547638]
[89.90023041 -135.32888794]
[81.35523987 -148.64405823]
[88.32128906 -161.80929565]
[79.77629852 -175.12446594]
[86.74234009 -188.28970337]
[72.09747314 -192.08219910]
[59.34240723 -200.21629333]
[49.72675323 -211.89509583]
[44.19256210 -225.97442627]
[43.28200912 -241.07496643]
[47.08430862 -255.71728516]
[55.22694397 -268.46688843]
[66.91218567 -278.07473755]
[80.99523926 -283.59948730]
[96.09637451 -284.49990845]
[110.73615265 -280.68780518]
[123.48030090 -272.53662109]
[133.08029175 -260.84494019]
[138.59561157 -246.75820923]
[139.48593140 -231.65646362]
[135.66401672 -217.01925659]
[127.50429535 -204.28056335]
[115.80619049 -194.68840027]
[101.71575165 -189.18252563]
[110.19687653 -176.93835449]
[103.29469299 -162.70211792]
[111.77581787 -150.45793152]
[104.87363434 -136.22169495]
[105.76644897 -121.24829102]
[106.65926361 -106.27488708]
[107.66352081 -91.30854034]
[108.77917480 -76.35009003]
[117.78708649 -88.34415436]
[132.09025574 -92.86293793]
[146.35394287 -88.22105408]
[155.25816345 -76.14981079]
[155.48184204 -61.15147781]
[146.94157410 -48.82006836]
[132.82264709 -43.75488663]
[118.39108276 -47.84512711]
[109.02908325 -59.56631851]
[108.35929871 -44.58127975]
[107.68951416 -29.59624100]
[107.01972961 -14.61120224]
[106.46151733 0.37840733]
[106.01491547 15.37175751]
[105.56830597 30.36510658]
[105.12170410 45.35845566]
[105.34503174 60.35679626]
[106.23784637 75.33020020]
[107.13066101 90.30360413]
[113.59445190 76.76775360]
[124.24937439 66.20968628]
[137.84368896 59.86976624]
[152.78034973 58.49279785]
[167.30462646 62.24054337]
[179.71020508 70.67272186]
[188.53968811 82.79872894]
[192.75581360 97.19401550]
[191.86326599 112.16743469]
[185.96690369 125.95993042]
[175.75942993 136.95117188]
[162.43998718 143.84991455]
[147.57334900 145.84570312]
[132.90603638 142.70407104]
[120.16114044 134.79409790]
[110.83592224 123.04504395]
[106.02565765 108.83562469]
[103.35986328 123.59683990]
[100.69406891 138.35806274]
[98.02827454 153.11927795]
[95.36247253 167.88049316]
[101.98935699 185.06088257]
[90.13957977 198.00497437]
[87.69384766 212.80424500]
[85.24812317 227.60351562]
[82.80239868 242.40278625]
[80.35666656 257.20205688]
[89.29019165 269.96255493]
[86.59905243 284.93627930]
[74.37882996 293.37438965]
[71.93310547 308.17364502]
[69.48737335 322.97293091]
[78.93627930 311.32308960]
[91.91915894 303.81015015]
[106.72791290 301.42248535]
[121.41418457 304.47427368]
[134.04574585 312.56402588]
[142.96069336 324.62731934]
[146.98611450 339.07711792]
[145.59239197 354.01220703]
[138.96290588 367.46771240]
[127.96986389 377.67324829]
[114.05960083 383.28613281]
[99.06224823 383.56790161]
[84.95096588 378.48150635]
[73.58232880 368.69607544]
[66.45208740 355.49914551]
[64.49846649 340.62454224]
[58.83567810 354.51455688]
[65.45383453 366.24548340]
[64.12665558 379.45339966]
[55.56159973 389.33883667]
[43.05498123 392.43948364]
[37.18601990 406.24365234]
[31.31705856 420.04782104]
[30.83929634 429.16976929]
[25.25658417 434.01281738]
[19.18275070 447.72808838]
[13.10891724 461.44332886]
[13.43224430 468.04690552]
[10.77152824 473.06860352]
[6.64463520 475.47232056]
[0.16513921 489.00067139]
[-6.31435680 502.52902222]
[-12.79385281 516.05737305]
[-0.32944375 524.45117188]
[10.77992249 534.57049561]
[20.29744911 546.19952393]
[28.02027130 559.09045410]
[33.78377533 572.96844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 205]
[37 204]
[38 203]
[39 202]
[40 199]
[41 198]
[42 197]
[43 195]
[44 194]
[45 193]
[48 189]
[49 188]
[50 172]
[51 171]
[52 170]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 140]
[68 139]
[69 138]
[76 137]
[77 136]
[78 135]
[79 134]
[81 133]
[82 132]
[83 131]
[84 130]
[85 121]
[86 120]
[88 119]
[89 118]
[90 117]
[92 115]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
