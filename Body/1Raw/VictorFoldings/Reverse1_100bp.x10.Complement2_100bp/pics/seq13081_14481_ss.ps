%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[99.19765472 470.95147705]
[86.43956757 479.02200317]
[71.97683716 483.35009766]
[56.88271332 483.61450195]
[42.27726746 479.79565430]
[29.24432564 472.17694092]
[18.75101662 461.32369995]
[11.57601547 448.04129028]
[8.25175285 433.31539917]
[9.02491188 418.23876953]
[13.83811855 403.93020630]
[22.33420181 391.45144653]
[33.88269806 381.72854614]
[47.62662506 375.48300171]
[62.54610062 373.17825317]
[64.32856750 358.28451538]
[66.11103058 343.39080811]
[67.89350128 328.49710083]
[69.67596436 313.60336304]
[71.45842743 298.70965576]
[63.69279099 282.97238159]
[74.85190582 268.32464600]
[76.41242981 253.40605164]
[70.04119110 239.94290161]
[79.17220306 227.02255249]
[80.73272705 212.10395813]
[82.29325104 197.18534851]
[70.15876770 188.54707336]
[63.93595505 174.90402222]
[65.38715363 159.87870789]
[74.22229004 147.51597595]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[101.61289978 12.48943615]
[103.06232452 -2.44037294]
[104.40055847 -17.38055801]
[105.73879242 -32.32074356]
[107.07702637 -47.26092911]
[108.41526031 -62.20111465]
[93.47452545 -74.16397095]
[88.79957581 -92.56925201]
[96.10405731 -109.93511963]
[112.26949310 -119.31443787]
[112.93927765 -134.29946899]
[113.60906219 -149.28451538]
[114.27884674 -164.26954651]
[114.94863129 -179.25459290]
[107.83525848 -193.38648987]
[116.13314819 -205.75558472]
[116.80293274 -220.74061584]
[101.88364410 -222.34109497]
[87.09272766 -224.86599731]
[72.48738861 -228.30557251]
[58.12414551 -232.64651489]
[44.05855942 -237.87200928]
[30.34505081 -243.96185303]
[17.03667450 -250.89248657]
[4.18491697 -258.63708496]
[-8.16049862 -267.16571045]
[-19.95181084 -276.44531250]
[-31.14340019 -286.44006348]
[-41.69196701 -297.11123657]
[-51.55670547 -308.41760254]
[-60.69944763 -320.31536865]
[-69.08482361 -332.75851440]
[-76.68038177 -345.69891357]
[-83.45675659 -359.08648682]
[-89.38771057 -372.86947632]
[-94.45030975 -386.99450684]
[-98.62496185 -401.40695190]
[-101.89552307 -416.05105591]
[-104.24932861 -430.87017822]
[-105.67728424 -445.80694580]
[-106.17386627 -460.80361938]
[-105.73713684 -475.80215454]
[-104.36880493 -490.74450684]
[-102.07415009 -505.57290649]
[-98.86205292 -520.22991943]
[-94.74494934 -534.65893555]
[-89.73876190 -548.80407715]
[-83.86285400 -562.61059570]
[-77.13996124 -576.02508545]
[-69.59609985 -588.99572754]
[-61.26045227 -601.47222900]
[-52.16526031 -613.40637207]
[-42.34572220 -624.75201416]
[-31.83982277 -635.46520996]
[-20.68820763 -645.50451660]
[-8.93402195 -654.83111572]
[3.37726021 -663.40893555]
[16.19800758 -671.20477295]
[29.47862053 -678.18847656]
[43.16771698 -684.33300781]
[57.21233749 -689.61456299]
[71.55814362 -694.01275635]
[86.14964294 -697.51062012]
[100.93036652 -700.09454346]
[115.84314728 -701.75451660]
[130.83027649 -702.48419189]
[145.83378601 -702.28070068]
[160.79560852 -701.14483643]
[175.65788269 -699.08099365]
[190.36308289 -696.09716797]
[204.85435486 -692.20489502]
[219.07559204 -687.41918945]
[232.97180176 -681.75866699]
[246.48922729 -675.24511719]
[259.57556152 -667.90380859]
[272.18014526 -659.76318359]
[284.25427246 -650.85461426]
[295.75119019 -641.21264648]
[306.62640381 -630.87457275]
[316.83789062 -619.88037109]
[326.34609985 -608.27264404]
[335.11428833 -596.09619141]
[343.10848999 -583.39819336]
[350.29782104 -570.22772217]
[356.65441895 -556.63586426]
[362.15371704 -542.67504883]
[366.77441406 -528.39935303]
[370.49868774 -513.86395264]
[373.31207275 -499.12521362]
[375.20373535 -484.24005127]
[376.16629028 -469.26605225]
[376.19610596 -454.26119995]
[375.29296875 -439.28353882]
[373.46044922 -424.39096069]
[370.70559692 -409.64114380]
[367.03906250 -395.09112549]
[362.47506714 -380.79721069]
[357.03125000 -366.81466675]
[350.72866821 -353.19760132]
[343.59170532 -339.99874878]
[335.64797974 -327.26910400]
[326.92822266 -315.05795288]
[317.46615601 -303.41253662]
[307.29840088 -292.37786865]
[296.46429443 -281.99670410]
[285.00576782 -272.30917358]
[272.96710205 -263.35275269]
[260.39492798 -255.16209412]
[247.33786011 -247.76889038]
[233.84640503 -241.20175171]
[219.97277832 -235.48606873]
[205.77064514 -230.64398193]
[191.29495239 -226.69418335]
[176.60169983 -223.65199280]
[161.74774170 -221.52915955]
[146.79054260 -220.33389282]
[131.78796387 -220.07083130]
[131.11817932 -205.08580017]
[138.27946472 -192.02572632]
[129.93367004 -178.58480835]
[129.26388550 -163.59976196]
[128.59410095 -148.61473083]
[127.92431641 -133.62968445]
[127.25453186 -118.64465332]
[137.13433838 -113.46390533]
[144.40046692 -104.93151855]
[147.97401428 -94.25535583]
[147.30242920 -82.96563721]
[142.44448853 -72.69565582]
[134.06742859 -64.94548798]
[123.35544586 -60.86288071]
[122.01721191 -45.92269516]
[120.67897797 -30.98250961]
[119.34073639 -16.04232407]
[118.00250244 -1.10213864]
[120.53672791 5.84044933]
[116.53150940 14.04995918]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[115.38671875 151.82186890]
[121.47225952 165.74534607]
[119.78269196 180.74574280]
[110.87128448 192.80569458]
[97.21186066 198.74586487]
[95.65133667 213.66447449]
[94.09081268 228.58308411]
[100.35042572 243.11331177]
[91.33103180 254.96658325]
[89.77050781 269.88519287]
[97.27141571 280.37799072]
[95.66452026 292.77160645]
[86.35214996 300.49212646]
[84.56967926 315.38583374]
[82.78721619 330.27954102]
[81.00475311 345.17327881]
[79.22228241 360.06698608]
[77.43981934 374.96069336]
[91.39407349 380.72103882]
[103.27603912 390.03347778]
[112.20398712 402.20697021]
[117.51541901 416.33819580]
[118.81617737 431.37847900]
[116.00974274 446.21179199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 204]
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[22 196]
[23 195]
[25 193]
[26 192]
[27 191]
[32 186]
[33 185]
[34 184]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[50 164]
[51 163]
[52 162]
[53 161]
[54 160]
[56 158]
[57 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
