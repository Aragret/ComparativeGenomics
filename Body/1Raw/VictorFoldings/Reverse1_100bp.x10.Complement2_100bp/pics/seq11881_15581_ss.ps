%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[250.05447388 356.85183716]
[257.92657471 344.06329346]
[267.23013306 332.27514648]
[277.83935547 321.64682007]
[268.52447510 309.88955688]
[259.20956421 298.13232422]
[249.89469910 286.37506104]
[240.49253845 274.68750000]
[231.00364685 263.07022095]
[221.51473999 251.45295715]
[212.02584839 239.83569336]
[202.53695679 228.21842957]
[193.04804993 216.60116577]
[178.21273804 217.62663269]
[165.46751404 209.62518311]
[159.81159973 195.48786926]
[163.60856628 180.55839539]
[154.11965942 168.94113159]
[144.63076782 157.32386780]
[134.63259888 146.14189148]
[124.14509583 135.41751099]
[113.65759277 124.69313049]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[65.13052368 75.06999207]
[54.64302444 64.34561157]
[58.90880585 78.72626495]
[58.58477783 93.72276306]
[53.70183182 107.90573883]
[44.72537994 119.92336273]
[32.51099777 128.63018799]
[18.22287941 133.19635010]
[3.22288322 133.18659973]
[-11.05928993 128.60189819]
[-23.26235390 119.87921143]
[-32.22319031 107.84993744]
[-37.08771133 93.66062927]
[-37.39225769 78.66372681]
[-33.10780334 64.28862762]
[-24.64271736 51.90547943]
[-12.80383682 42.69456863]
[1.28043294 37.53381729]
[16.26766777 36.91511536]
[30.72937965 40.89743423]
[43.28801727 49.10196304]
[36.01478577 35.98326874]
[22.55644608 27.66559792]
[23.15210724 12.78290939]
[15.87887764 -0.33578509]
[5.21398830 -0.62548828]
[-4.29594421 -5.28041220]
[-10.96443462 -13.40043354]
[-13.64002037 -23.47784424]
[-11.90469265 -33.67706299]
[-6.13765430 -42.16895676]
[-12.81784916 -55.59933090]
[-19.49804306 -69.02970886]
[-26.17823792 -82.46008301]
[-32.80198288 -88.75006104]
[-32.85623550 -96.14051819]
[-39.33573151 -109.66886139]
[-45.81522751 -123.19721222]
[-52.29472351 -136.72555542]
[-58.77421951 -150.25390625]
[-65.25371552 -163.78224182]
[-79.53237915 -159.11590576]
[-94.29798126 -156.35328674]
[-109.29785919 -155.54165649]
[-124.27534485 -156.69491577]
[-138.97415161 -159.79331970]
[-153.14276123 -164.78384399]
[-166.53874207 -171.58110046]
[-178.93286133 -180.06878662]
[-190.11303711 -190.10166931]
[-199.88798523 -201.50805664]
[-208.09040833 -214.09277344]
[-214.57997131 -227.64048767]
[-219.24563599 -241.91937256]
[-222.00755310 -256.68511963]
[-222.81846619 -271.68502808]
[-221.66448975 -286.66244507]
[-218.56539917 -301.36111450]
[-213.57418823 -315.52947998]
[-206.77629089 -328.92514038]
[-198.28800964 -341.31884766]
[-188.25460815 -352.49856567]
[-176.84776306 -362.27294922]
[-164.26264954 -370.47479248]
[-150.71463013 -376.96371460]
[-136.43551636 -381.62869263]
[-121.66965485 -384.38989258]
[-106.66970062 -385.20010376]
[-91.69232178 -384.04541016]
[-76.99381256 -380.94561768]
[-62.82567215 -375.95373535]
[-49.43033981 -369.15521240]
[-37.03702927 -360.66635132]
[-25.85780144 -350.63238525]
[-16.08395195 -339.22506714]
[-7.88272285 -326.63958740]
[-1.39444721 -313.09124756]
[3.26985145 -298.81192017]
[6.03036118 -284.04592896]
[6.83984518 -269.04592896]
[5.68445349 -254.06860352]
[2.58395505 -239.37023926]
[-2.40859580 -225.20234680]
[-9.20777035 -211.80734253]
[-17.69722557 -199.41442871]
[-27.73169518 -188.23567200]
[-39.13947678 -178.46237183]
[-51.72536850 -170.26173401]
[-45.24587250 -156.73339844]
[-38.76637650 -143.20504761]
[-32.28688049 -129.67671204]
[-25.80738640 -116.14836121]
[-19.32789040 -102.62001038]
[-12.74786186 -89.14028168]
[-6.06766748 -75.70989990]
[0.61252707 -62.27952576]
[7.29272175 -48.84915161]
[26.16637611 -44.02220535]
[35.54994583 -26.60232544]
[28.99757195 -7.60901451]
[36.27080154 5.50967932]
[49.20891190 12.88901424]
[49.13348007 28.71004105]
[56.40671158 41.82873535]
[65.36740875 53.85811234]
[75.85490417 64.58248901]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[124.38197327 114.20562744]
[134.86947632 124.93000793]
[145.35697937 135.65438843]
[146.60708618 120.70656586]
[157.97122192 110.91593933]
[172.93948364 111.89102173]
[182.93739319 123.07323456]
[182.23767090 138.05690002]
[171.24116516 148.25869751]
[156.24803162 147.83496094]
[165.73692322 159.45222473]
[175.22583008 171.06948853]
[190.61279297 170.32966614]
[203.33627319 178.69425964]
[208.63203430 192.78038025]
[204.66531372 207.11227417]
[214.15422058 218.72953796]
[223.64311218 230.34680176]
[233.13200378 241.96406555]
[242.62091064 253.58132935]
[252.10980225 265.19857788]
[259.96218872 269.86529541]
[261.65194702 277.06018066]
[270.96682739 288.81744385]
[280.28170776 300.57467651]
[289.59658813 312.33193970]
[302.36987305 304.43511963]
[315.97357178 298.07458496]
[330.22369385 293.33639526]
[344.92752075 290.28463745]
[359.88626099 288.96054077]
[374.89755249 289.38204956]
[389.75839233 291.54345703]
[404.26782227 295.41549683]
[418.22961426 300.94586182]
[431.45495605 308.05972290]
[443.76498413 316.66088867]
[454.99322510 326.63299561]
[464.98779297 337.84124756]
[473.61358643 350.13403320]
[480.75390625 363.34509277]
[486.31219482 377.29580688]
[490.21328735 391.79745483]
[492.40441895 406.65396118]
[492.85598755 421.66436768]
[491.56182861 436.62570190]
[488.53952026 451.33563232]
[483.82986450 465.59521484]
[477.49658203 479.21160889]
[469.62533569 492.00067139]
[460.32257080 503.78942871]
[449.71408081 514.41845703]
[437.94332886 523.74401855]
[425.16952515 531.64001465]
[411.56542969 537.99963379]
[397.31497192 542.73687744]
[382.61093140 545.78765869]
[367.65209961 547.11071777]
[352.64083862 546.68823242]
[337.78015137 544.52581787]
[323.27096558 540.65283203]
[309.30953979 535.12152100]
[296.08468628 528.00677490]
[283.77523804 519.40478516]
[272.54766846 509.43194580]
[262.55383301 498.22302246]
[253.92886353 485.92965698]
[246.78942871 472.71810913]
[241.23207092 458.76705933]
[237.33193970 444.26513672]
[235.14179993 429.40850830]
[234.69123840 414.39804077]
[235.98638916 399.43679810]
[239.00968933 384.72705078]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 157]
[9 156]
[10 155]
[11 154]
[12 153]
[13 152]
[17 148]
[18 147]
[19 146]
[20 139]
[21 138]
[22 137]
[23 136]
[25 134]
[26 133]
[27 132]
[28 131]
[47 130]
[48 129]
[50 127]
[51 126]
[57 123]
[58 122]
[59 121]
[60 120]
[62 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
