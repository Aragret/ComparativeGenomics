%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[155.61679077 681.63854980]
[154.05627441 666.71997070]
[145.03688049 654.86669922]
[151.29649353 640.33642578]
[149.73596191 625.41784668]
[148.17544556 610.49926758]
[146.61492920 595.58062744]
[145.05439758 580.66204834]
[143.27192688 565.76831055]
[141.26791382 550.90277100]
[139.26390076 536.03723145]
[137.25988770 521.17175293]
[134.81416321 506.37246704]
[131.92889404 491.65255737]
[121.88796997 480.65124512]
[126.82630157 465.62048340]
[123.94102478 450.90060425]
[121.05575562 436.18069458]
[118.17047882 421.46081543]
[115.28520966 406.74093628]
[112.39993286 392.02102661]
[109.51466370 377.30114746]
[106.62938690 362.58123779]
[99.74829865 375.90982056]
[86.80709839 383.49435425]
[71.81575775 382.98474121]
[59.41950989 374.53884888]
[53.45946503 360.77374268]
[55.78240585 345.95471191]
[65.66854858 334.67355347]
[80.05456543 330.42590332]
[94.48278809 334.52792358]
[104.48258209 345.70877075]
[103.58976746 330.73535156]
[102.69695282 315.76196289]
[101.80413818 300.78854370]
[100.91131592 285.81512451]
[97.37526703 279.32528687]
[100.11836243 270.61245728]
[99.44857788 255.62742615]
[85.38525391 250.61222839]
[74.28339386 240.56762695]
[67.85563660 227.00117493]
[67.10961151 211.96684265]
[72.19010925 197.75408936]
[82.35225677 186.53919983]
[96.07059479 180.05206299]
[95.40081024 165.06701660]
[94.73102570 150.08198547]
[94.06124115 135.09693909]
[93.39144897 120.11190796]
[83.08666229 112.73187256]
[78.84483337 100.78781891]
[82.18655396 88.56134796]
[91.91390228 80.43531799]
[91.46729279 65.44197083]
[91.02069092 50.44861984]
[87.63716125 41.96395493]
[90.68072510 35.22908401]
[90.45739746 20.23074532]
[81.76276398 10.70361805]
[81.88552856 -1.79312932]
[90.21448517 -10.56553173]
[90.21448517 -25.56553078]
[90.21448517 -40.56553268]
[90.21448517 -55.56553268]
[82.08541870 -42.95925140]
[69.33712769 -35.05475616]
[54.43110657 -33.37827682]
[40.24547577 -38.25351334]
[29.51926231 -48.73913574]
[24.32352448 -62.81053543]
[25.66147804 -77.75074768]
[33.27478790 -90.67504883]
[45.69344330 -99.08795166]
[60.51959229 -101.36507416]
[74.89054108 -97.06671906]
[86.03148651 -87.02285004]
[91.79150391 -73.17150879]
[94.45729828 -87.93273163]
[92.90283203 -96.93392181]
[97.27423096 -102.89316559]
[100.15950775 -117.61306000]
[101.94197083 -132.50677490]
[102.61175537 -147.49182129]
[103.28153992 -162.47685242]
[103.95132446 -177.46189880]
[95.83917236 -187.48963928]
[96.70553589 -199.95692444]
[105.54187012 -208.21803284]
[106.43468475 -223.19143677]
[107.32749939 -238.16484070]
[104.71443176 -246.91754150]
[108.34671783 -253.35401917]
[109.46236420 -268.31246948]
[106.97989655 -277.10308838]
[110.70760345 -283.48480225]
[112.04583740 -298.42498779]
[113.38407898 -313.36517334]
[114.72231293 -328.30535889]
[100.98692322 -334.71743774]
[90.27515411 -345.44284058]
[83.88048553 -359.18634033]
[82.57511902 -374.28839111]
[86.51667023 -388.92532349]
[95.22918701 -401.32968140]
[107.66059113 -410.00354004]
[122.30972290 -413.89953613]
[137.40763855 -412.54714966]
[151.13117981 -406.10977173]
[161.82316589 -395.36465454]
[168.19248962 -381.60937500]
[169.47003174 -366.50497437]
[165.50151062 -351.87530518]
[156.76614380 -339.48703003]
[144.31878662 -330.83609009]
[129.66249084 -326.96710205]
[128.32426453 -312.02691650]
[126.98602295 -297.08673096]
[125.64778900 -282.14654541]
[124.42081451 -267.19683838]
[123.30516815 -252.23837280]
[122.30091095 -237.27203369]
[121.40808868 -222.29861450]
[120.51527405 -207.32521057]
[129.20384216 -192.07806396]
[118.93636322 -176.79211426]
[118.26657867 -161.80706787]
[117.59679413 -146.82203674]
[116.92700958 -131.83699036]
[126.30834198 -143.54129028]
[140.24877930 -149.07881165]
[155.10432434 -147.00207520]
[166.99177551 -137.85392761]
[172.80377197 -124.02567291]
[171.02107239 -109.13198090]
[162.10969543 -97.06603241]
[148.39901733 -90.98183441]
[133.47299194 -92.46977997]
[121.23326111 -101.14093018]
[114.87939453 -114.72779083]
[111.99412537 -100.00789642]
[109.21851349 -85.26693726]
[106.55271912 -70.50571442]
[105.21448517 -55.56553268]
[105.21448517 -40.56553268]
[105.21448517 -25.56553078]
[105.21448517 -10.56553173]
[114.79517365 4.13743544]
[105.45573425 20.00741768]
[105.67906189 35.00575638]
[106.01403809 50.00201416]
[106.46064758 64.99536133]
[106.90724945 79.98871613]
[119.17478943 91.02842712]
[119.78895569 107.52056885]
[108.37648773 119.44212341]
[109.04627991 134.42715454]
[109.71606445 149.41220093]
[110.38584900 164.39723206]
[111.05563354 179.38227844]
[125.29801178 184.61965942]
[136.42018127 194.88320923]
[142.74842834 208.58601379]
[143.34666443 223.62695312]
[138.15487671 237.71276855]
[127.99342346 248.70777893]
[114.43361664 254.95764160]
[115.10340118 269.94268799]
[115.88472748 284.92233276]
[116.77754211 299.89572144]
[117.67035675 314.86914062]
[118.56317139 329.84252930]
[119.45598602 344.81594849]
[121.34928131 359.69598389]
[124.23455048 374.41586304]
[127.11982727 389.13577271]
[130.00509644 403.85565186]
[132.89036560 418.57553101]
[135.77565002 433.29544067]
[138.66091919 448.01531982]
[141.54618835 462.73522949]
[151.79348755 474.78939819]
[146.64878845 488.76730347]
[149.53405762 503.48718262]
[152.50259399 506.65606689]
[154.14334106 510.24386597]
[154.48760986 513.78179932]
[153.71580505 516.85931396]
[152.12542725 519.16772461]
[154.12944031 534.03326416]
[156.13345337 548.89874268]
[158.13746643 563.76428223]
[161.86958313 569.22167969]
[162.23112488 574.89318848]
[159.97300720 579.10150146]
[161.53352356 594.02014160]
[163.09405518 608.93872070]
[164.65457153 623.85729980]
[166.21510315 638.77593994]
[175.34611511 651.69628906]
[168.97486877 665.15942383]
[170.53540039 680.07800293]
[184.03660583 687.72637939]
[190.43309021 701.86370850]
[187.26525879 717.05395508]
[175.75122070 727.45623779]
[160.31834412 729.07049561]
[146.90089417 721.27618408]
[140.65815735 707.07025146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[9 193]
[10 192]
[11 191]
[12 190]
[13 185]
[14 184]
[16 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[39 169]
[40 168]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[55 154]
[56 153]
[57 152]
[59 151]
[60 150]
[63 148]
[64 147]
[65 146]
[66 145]
[79 144]
[80 143]
[82 142]
[83 141]
[84 130]
[85 129]
[86 128]
[87 127]
[90 125]
[91 124]
[92 123]
[94 122]
[95 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
