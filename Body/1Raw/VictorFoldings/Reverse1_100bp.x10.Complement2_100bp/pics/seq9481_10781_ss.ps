%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[127.00906372 573.63220215]
[124.41613007 558.42431641]
[130.47785950 544.23773193]
[143.25994873 535.59936523]
[142.81335449 520.60601807]
[142.36674500 505.61264038]
[134.25393677 493.12139893]
[141.57691956 479.09695435]
[141.13031006 464.10360718]
[140.68371582 449.11026001]
[132.57090759 436.61898804]
[139.89389038 422.59457397]
[139.44728088 407.60122681]
[139.00067139 392.60787964]
[138.55407715 377.61453247]
[138.10746765 362.62118530]
[137.66085815 347.62783813]
[135.98931885 332.72125244]
[133.10404968 318.00137329]
[130.21876526 303.28146362]
[127.33350372 288.56158447]
[122.96209717 282.60232544]
[124.51656342 273.60113525]
[121.85076904 258.83993530]
[119.18497467 244.07870483]
[116.40936279 229.33773804]
[113.52408600 214.61785889]
[110.63881683 199.89796448]
[100.77800751 192.89146423]
[98.25376892 180.65168762]
[104.95348358 169.63005066]
[102.28768921 154.86882019]
[99.62189484 140.10760498]
[96.95610046 125.34638977]
[94.29030609 110.58517456]
[91.40502930 95.86528015]
[88.30091858 81.18997955]
[85.19680786 66.51467896]
[74.83198547 58.83788681]
[72.54868317 46.55088806]
[79.03472137 36.34021378]
[76.14944458 21.62032127]
[73.26417542 6.90043020]
[70.37890625 -7.81946087]
[54.75968933 -8.83652687]
[39.94446182 -13.85196304]
[26.93792152 -22.51956558]
[16.62055588 -34.24565887]
[9.68900967 -48.22976685]
[6.60905981 -63.51923752]
[7.58431625 -79.07415771]
[12.54277515 -93.83808136]
[21.14209747 -106.80976105]
[32.79323959 -117.11107635]
[46.70080566 -124.04646301]
[43.59669495 -138.72177124]
[30.63407707 -147.35937500]
[27.69512177 -162.28643799]
[36.00964355 -174.59107971]
[32.90553284 -189.26638794]
[22.47990227 -201.16667175]
[27.41592598 -215.21960449]
[24.20265198 -229.87138367]
[20.88039207 -244.49885559]
[8.05974293 -257.71673584]
[13.90028286 -274.26528931]
[10.36061001 -288.84167480]
[6.82093811 -303.41806030]
[3.28126550 -317.99441528]
[-0.25840700 -332.57080078]
[-3.79807949 -347.14718628]
[-7.33775187 -361.72354126]
[-22.25282288 -359.96343994]
[-37.27130508 -360.01400757]
[-52.17418289 -361.87451172]
[-66.74413300 -365.51785278]
[-80.76868439 -370.89086914]
[-94.04330444 -377.91525269]
[-106.37442780 -386.48849487]
[-117.58222198 -396.48565674]
[-127.50323486 -407.76086426]
[-135.99281311 -420.14974976]
[-142.92712402 -433.47164917]
[-148.20506287 -447.53225708]
[-151.74966431 -462.12652588]
[-153.50923157 -477.04168701]
[-153.45809937 -492.06015015]
[-151.59703064 -506.96295166]
[-147.95314026 -521.53277588]
[-142.57958984 -535.55712891]
[-135.55473328 -548.83148193]
[-126.98101044 -561.16229248]
[-116.98345184 -572.36968994]
[-105.70785522 -582.29028320]
[-93.31864929 -590.77941895]
[-79.99650574 -597.71325684]
[-65.93569946 -602.99066162]
[-51.34128571 -606.53472900]
[-36.42608261 -608.29370117]
[-21.40760422 -608.24200439]
[-6.50486374 -606.38037109]
[8.06481361 -602.73596191]
[22.08895874 -597.36187744]
[35.36306000 -590.33654785]
[47.69353867 -581.76232910]
[58.90058136 -571.76434326]
[68.82075500 -560.48840332]
[77.30940247 -548.09887695]
[84.24272156 -534.77648926]
[89.51961517 -520.71545410]
[93.06312561 -506.12091064]
[94.82157135 -491.20565796]
[94.76932526 -476.18716431]
[92.90713501 -461.28451538]
[89.26216125 -446.71496582]
[83.88755798 -432.69100952]
[76.86170959 -419.41717529]
[68.28706360 -407.08700562]
[58.28866577 -395.88034058]
[47.01232529 -385.96060181]
[34.62248611 -377.47241211]
[21.29982376 -370.53958130]
[7.23862362 -365.26321411]
[10.77829552 -350.68685913]
[14.31796837 -336.11047363]
[17.85764122 -321.53408813]
[21.39731407 -306.95773315]
[24.93698502 -292.38134766]
[28.47665787 -277.80496216]
[38.64048767 -271.24575806]
[41.70874023 -259.13092041]
[35.50785446 -247.82110596]
[38.83011246 -233.19364929]
[43.37700653 -227.36720276]
[42.09122849 -218.32371521]
[52.29483414 -207.47309875]
[47.58083725 -192.37049866]
[50.68494415 -177.69519043]
[63.26976395 -169.81115723]
[66.62682343 -154.97253418]
[58.27199936 -141.82588196]
[61.37611008 -127.15057373]
[75.76551819 -126.63132477]
[89.61991119 -122.67492676]
[102.12998199 -115.50777435]
[112.56383514 -105.54395294]
[120.30976868 -93.36133575]
[124.91219330 -79.66802216]
[126.09835815 -65.26123810]
[123.79457092 -50.98088074]
[118.13072205 -37.66057205]
[109.43296814 -26.07899857]
[98.20499420 -16.91437149]
[85.09879303 -10.70473385]
[87.98406982 4.01515770]
[90.86933899 18.73504829]
[93.75460815 33.45494080]
[105.98453522 46.04048538]
[99.87210846 63.41056824]
[102.97621918 78.08586884]
[106.08032990 92.76117706]
[109.71475220 96.54336548]
[110.97136688 102.09262085]
[109.05152130 107.91938019]
[111.71731567 122.68059540]
[114.38311005 137.44181824]
[117.04890442 152.20303345]
[119.71469879 166.96424866]
[131.93235779 180.74142456]
[125.35871124 197.01268005]
[128.24397278 211.73257446]
[131.12925720 226.45246887]
[135.85092163 234.27191162]
[133.94618225 241.41290283]
[136.61198425 256.17413330]
[139.27778625 270.93533325]
[142.05339050 285.67630005]
[144.93865967 300.39620972]
[147.82394409 315.11608887]
[150.70921326 329.83596802]
[156.62632751 316.05236816]
[168.21282959 306.52593994]
[182.88027954 303.38491821]
[197.35191345 307.33102417]
[208.39474487 317.48266602]
[213.54177856 331.57192993]
[211.64314270 346.45129395]
[203.12300110 358.79663086]
[189.88478088 365.84997559]
[174.88592529 366.03555298]
[161.47723389 359.31198120]
[152.65420532 347.18121338]
[153.10081482 362.17456055]
[153.54742432 377.16790771]
[153.99403381 392.16128540]
[154.44062805 407.15463257]
[154.88723755 422.14797974]
[163.03199768 435.71166992]
[155.67706299 448.66366577]
[156.12367249 463.65701294]
[156.57026672 478.65036011]
[164.71502686 492.21405029]
[157.36009216 505.16604614]
[157.80670166 520.15936279]
[158.25331116 535.15270996]
[171.52690125 543.01501465]
[178.42228699 556.81561279]
[176.73913574 572.15087891]
[167.01457214 584.12738037]
[152.35163879 588.92340088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[8 201]
[9 200]
[10 199]
[12 197]
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[18 180]
[19 179]
[20 178]
[21 177]
[23 176]
[24 175]
[25 174]
[26 172]
[27 171]
[28 170]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 161]
[37 160]
[38 159]
[41 157]
[42 156]
[43 155]
[44 154]
[55 142]
[56 141]
[59 138]
[60 137]
[62 135]
[63 133]
[64 132]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
