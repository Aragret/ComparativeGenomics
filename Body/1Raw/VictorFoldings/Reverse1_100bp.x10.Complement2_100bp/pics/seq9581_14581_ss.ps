%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[55.80119705 573.67767334]
[43.31339264 582.01751709]
[29.95630264 588.87939453]
[15.90406513 594.17401123]
[1.33988166 597.83215332]
[-13.54637527 599.80627441]
[-28.56063271 600.07061768]
[-43.50714874 598.62164307]
[-58.19106293 595.47833252]
[-72.42094421 590.68164062]
[-86.01126862 584.29406738]
[-98.78487396 576.39898682]
[-110.57521820 567.09924316]
[-121.22858429 556.51605225]
[-130.60609436 544.78747559]
[-138.58549500 532.06634521]
[-145.06275940 518.51855469]
[-149.95343018 504.32067871]
[-153.19375610 489.65786743]
[-154.74150085 474.72125244]
[-154.57646179 459.70556641]
[-152.70082092 444.80661011]
[-149.13900757 430.21853638]
[-143.93746948 416.13162231]
[-137.16401672 402.72943115]
[-128.90695190 390.18676758]
[-119.27391815 378.66711426]
[-108.39051819 368.32064819]
[-96.39862823 359.28225708]
[-83.45458984 351.66979980]
[-69.72714996 345.58248901]
[-55.39528656 341.09970093]
[-40.64583206 338.27987671]
[-25.67107964 337.15979004]
[-10.66625977 337.75402832]
[4.17301321 340.05484009]
[8.14510918 325.59033203]
[12.11720562 311.12579346]
[-0.87581521 318.62121582]
[-15.66837597 316.13525391]
[-25.49751854 304.80441284]
[-25.86948967 289.80902100]
[-16.61422920 278.00476074]
[-1.96311915 274.78842163]
[11.38555145 281.63040161]
[17.32906532 295.40454102]
[22.78442383 281.43176270]
[28.23978043 267.45895386]
[25.66111946 252.78926086]
[37.88755798 242.74810791]
[35.30889893 228.07843018]
[47.53533554 218.03727722]
[52.99069595 204.06448364]
[50.41203308 189.39479065]
[62.63847351 179.35363770]
[68.09382629 165.38084412]
[73.54918671 151.40803528]
[79.00454712 137.43524170]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.33267212 71.72566986]
[105.51968384 57.32188797]
[109.70669556 42.91810608]
[113.89370728 28.51432419]
[118.08071899 14.11054230]
[122.26773071 -0.29323962]
[126.45474243 -14.69702148]
[122.87707520 -30.10841179]
[133.85945129 -40.17005539]
[138.04646301 -54.57383728]
[123.84410095 -49.74756241]
[111.13397217 -57.71326828]
[109.28549957 -72.59893799]
[119.66131592 -83.43141174]
[134.61276245 -82.22538757]
[143.11790466 -69.87153625]
[148.36462402 -83.92400360]
[153.61134338 -97.97647858]
[152.74072266 -102.23041534]
[153.22077942 -106.14629364]
[154.77935791 -109.34100342]
[157.04789734 -111.55919647]
[159.61134338 -112.69361877]
[165.68516541 -126.40888977]
[171.75900269 -140.12416077]
[177.83283997 -153.83941650]
[183.90667725 -167.55468750]
[189.98049927 -181.26995850]
[195.64329529 -195.15997314]
[200.89001465 -209.21244812]
[206.13673401 -223.26492310]
[211.38345337 -237.31739807]
[216.63017273 -251.36987305]
[221.87687683 -265.42233276]
[225.30793762 -280.02465820]
[226.86846924 -294.94326782]
[228.42898560 -309.86187744]
[229.98951721 -324.78048706]
[216.24829102 -331.14108276]
[205.31860352 -341.62063599]
[198.38604736 -355.08236694]
[196.20259094 -370.06607056]
[199.00509644 -384.94641113]
[206.48957825 -398.10928345]
[217.84414673 -408.12689209]
[231.83715820 -413.91259766]
[246.95075989 -414.83877563]
[261.54553223 -410.80502319]
[274.03836060 -402.24884033]
[283.07409668 -390.09835815]
[287.67260742 -375.67156982]
[287.33508301 -360.53338623]
[282.09817505 -346.32586670]
[272.52990723 -334.59014893]
[259.66815186 -326.59924316]
[244.90811157 -323.21994019]
[243.34759521 -308.30133057]
[241.78707886 -293.38275146]
[240.22654724 -278.46414185]
[248.68125916 -290.85437012]
[260.66143799 -299.88073730]
[274.90283203 -304.59063721]
[289.90246582 -304.48699951]
[304.07742310 -299.58084106]
[315.93176270 -290.38986206]
[324.21450806 -277.88400269]
[328.05151367 -263.38305664]
[327.03790283 -248.41734314]
[321.28057861 -234.56622314]
[311.38720703 -223.29144287]
[298.40176392 -215.78285217]
[283.69470215 -212.83285522]
[268.81808472 -214.75277710]
[255.34187317 -221.33998108]
[244.68821716 -231.89933777]
[237.98146057 -245.31646729]
[235.92935181 -260.17562866]
[230.68263245 -246.12315369]
[225.43591309 -232.07067871]
[220.18919373 -218.01820374]
[214.94248962 -203.96572876]
[209.69577026 -189.91326904]
[210.73536682 -187.30992126]
[210.80638123 -184.13792419]
[209.68707275 -180.76412964]
[207.29243469 -177.62879944]
[203.69577026 -175.19612122]
[197.62193298 -161.48085022]
[191.54811096 -147.76557922]
[185.47427368 -134.05032349]
[179.40043640 -120.33505249]
[173.32659912 -106.61978912]
[167.66381836 -92.72975922]
[162.41709900 -78.67728424]
[157.17037964 -64.62481689]
[152.45024109 -50.38682938]
[148.26322937 -35.98304367]
[152.14038086 -21.60191154]
[140.85852051 -10.51001072]
[136.67150879 3.89377165]
[132.48449707 18.29755402]
[128.29748535 32.70133591]
[124.11047363 47.10511780]
[119.92346191 61.50889969]
[115.73645020 75.91268158]
[117.10507202 79.16217804]
[116.96777344 83.23601532]
[114.95423889 87.41919708]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[99.36744690 133.28964233]
[98.41551971 137.83355713]
[96.04238892 141.14767456]
[92.97734070 142.89059448]
[87.52198792 156.86340332]
[82.06662750 170.83619690]
[76.61126709 184.80899048]
[78.79972839 200.47810364]
[66.96349335 209.51983643]
[61.50813675 223.49263000]
[63.69659424 239.16174316]
[51.86035538 248.20347595]
[54.04881287 263.87258911]
[42.21257782 272.91430664]
[36.75722122 286.88711548]
[31.30186462 300.85989380]
[26.58172989 315.09790039]
[22.60963249 329.56240845]
[18.63753700 344.02694702]
[32.57072067 349.62731934]
[45.77466965 356.77947998]
[58.07725143 365.39019775]
[69.31806946 375.34719849]
[79.35057831 386.52066040]
[88.04398346 398.76495361]
[95.28495789 411.92041016]
[100.97908020 425.81552124]
[105.05213928 440.26919556]
[107.45101929 455.09292603]
[108.14444733 470.09347534]
[107.12338257 485.07531738]
[104.40114594 499.84307861]
[100.01322174 514.20428467]
[94.01680756 527.97167969]
[86.49008942 540.96575928]
[77.53119659 553.01715088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 193]
[37 192]
[38 191]
[46 190]
[47 189]
[48 188]
[50 186]
[52 184]
[53 183]
[55 181]
[56 180]
[57 179]
[58 178]
[59 174]
[60 173]
[62 171]
[63 167]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[69 161]
[71 159]
[72 158]
[78 157]
[79 156]
[80 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[96 139]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
