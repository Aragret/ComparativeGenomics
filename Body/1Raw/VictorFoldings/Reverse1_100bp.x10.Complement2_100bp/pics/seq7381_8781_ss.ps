%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[178.30993652 550.81011963]
[189.22096252 540.42919922]
[202.10871887 532.63690186]
[197.28271484 518.43444824]
[192.15434265 513.11267090]
[192.49230957 503.98449707]
[187.87829590 489.71176147]
[183.26429749 475.43902588]
[167.38546753 472.44311523]
[155.11354065 461.78686523]
[149.86004639 446.30728149]
[153.14855957 430.19885254]
[164.17428589 417.87713623]
[159.34828186 403.67465210]
[154.52229309 389.47219849]
[149.69628906 375.26974487]
[138.27560425 365.70852661]
[141.16152954 350.15277100]
[129.74084473 340.59155273]
[132.62677002 325.03576660]
[127.58985901 310.90673828]
[124.70391846 325.62649536]
[116.14720154 337.94650269]
[103.36167145 345.79064941]
[88.50191498 347.83700562]
[74.07205963 343.74075317]
[62.50378799 334.19219971]
[55.74655914 320.80041504]
[54.93908691 305.82214355]
[60.21744156 291.78152466]
[70.69212341 281.04464722]
[84.59797668 275.42080688]
[99.59161377 275.85778809]
[113.14633942 282.28192139]
[122.97875214 293.61206055]
[120.53302765 278.81280518]
[110.82410431 267.51739502]
[116.20776367 252.64033508]
[113.76203918 237.84106445]
[111.31631470 223.04179382]
[108.87058258 208.24252319]
[99.22275543 200.94554138]
[97.06406403 188.63603210]
[104.08895874 177.81875610]
[101.86384583 162.98471069]
[99.63872528 148.15066528]
[97.41361237 133.31661987]
[95.18849182 118.48257446]
[83.59905243 109.78596497]
[81.44966125 95.45675659]
[89.97746277 83.74253845]
[87.75234222 68.90849304]
[85.52722931 54.07445145]
[83.08150482 39.27518082]
[80.41570282 24.51396370]
[77.74990845 9.75274658]
[75.08411407 -5.00847006]
[72.41831970 -19.76968765]
[59.71862030 -28.78940964]
[57.22540283 -43.79735947]
[65.90259552 -55.84899521]
[63.23679733 -70.61021423]
[53.17010498 -82.81562805]
[58.52234650 -96.71537018]
[55.41823578 -111.39067078]
[51.87856674 -125.96704865]
[48.33889389 -140.54342651]
[44.79922104 -155.11979675]
[34.02389526 -166.70439148]
[38.53932190 -180.89807129]
[34.99964905 -195.47444153]
[31.45997810 -210.05081177]
[27.18034554 -215.09028625]
[26.23073006 -220.69343567]
[28.03879166 -225.11383057]
[24.93468094 -239.78913879]
[21.83057022 -254.46444702]
[8.86795044 -263.10205078]
[5.92899656 -278.02911377]
[14.24351788 -290.33377075]
[11.13940716 -305.00906372]
[6.10184813 -290.88024902]
[-4.18776083 -279.96588135]
[-17.99543953 -274.10516357]
[-32.99435425 -274.28573608]
[-46.65691757 -280.47720337]
[-56.68075562 -291.63619995]
[-61.37667084 -305.88217163]
[-59.95331955 -320.81448364]
[-52.65056229 -333.91677856]
[-40.69904327 -342.98104858]
[-26.11280060 -346.47985840]
[-11.34987354 -343.82354736]
[1.10192525 -335.45974731]
[9.14483166 -322.79641724]
[8.92150402 -337.79473877]
[8.69817638 -352.79309082]
[8.47484875 -367.79144287]
[-5.54467297 -373.73895264]
[-15.92832375 -384.87893677]
[-20.87707329 -399.28137207]
[-19.53352165 -414.45089722]
[-12.13044643 -427.75933838]
[0.04952476 -436.90090942]
[14.89613819 -440.29174805]
[29.83712769 -437.34445190]
[42.28387833 -428.56958008]
[50.07991409 -415.48745728]
[51.87452316 -400.36465454]
[47.35678101 -385.82125854]
[37.30941391 -374.37704468]
[23.47318649 -368.01477051]
[23.69651413 -353.01641846]
[23.91984177 -338.01806641]
[24.14316940 -323.01974487]
[25.81471062 -308.11315918]
[28.91881943 -293.43786621]
[41.50363541 -285.55383301]
[44.86070251 -270.71520996]
[36.50587463 -257.56854248]
[39.60998535 -242.89324951]
[42.71409225 -228.21794128]
[46.03635406 -213.59048462]
[49.57602692 -199.01411438]
[53.11569977 -184.43774414]
[63.63784409 -173.89573669]
[59.37559509 -158.65946960]
[62.91526794 -144.08309937]
[66.45494080 -129.50671387]
[69.99461365 -114.93034363]
[72.31563568 -113.35840607]
[74.15383911 -110.77236176]
[75.11985779 -107.35150909]
[74.89633179 -103.41265869]
[73.28356171 -99.38116455]
[83.15958405 -88.23156738]
[77.99801636 -73.27600861]
[80.66381073 -58.51478958]
[93.00830841 -50.25955582]
[95.92208862 -35.32755661]
[87.17953491 -22.43548203]
[89.84532928 -7.67426586]
[92.51112366 7.08695173]
[95.17692566 21.84816933]
[97.84272003 36.60938644]
[101.18577576 40.02011108]
[102.42172241 45.56713104]
[100.36127472 51.84933472]
[102.58638763 66.68338013]
[104.81150818 81.51742554]
[116.40094757 90.21403503]
[118.55033875 104.54324341]
[110.02253723 116.25746155]
[112.24765778 131.09150696]
[114.47277069 145.92555237]
[116.69789124 160.75959778]
[118.92300415 175.59362793]
[130.72503662 189.72846985]
[123.66985321 205.79679871]
[126.11558533 220.59606934]
[128.56130981 235.39533997]
[131.00703430 250.19461060]
[140.89089966 262.54855347]
[135.33229065 276.36706543]
[137.77803040 291.16632080]
[141.64233398 305.66003418]
[146.49047852 310.15524292]
[148.09919739 315.60583496]
[146.82923889 320.20977783]
[158.59510803 330.78686523]
[155.36398315 345.32678223]
[167.12986755 355.90383911]
[163.89874268 370.44375610]
[168.72474670 384.64620972]
[173.55075073 398.84866333]
[178.37673950 413.05111694]
[192.21966553 415.06011963]
[203.79130554 422.80050659]
[210.86509705 434.71435547]
[212.10960388 448.44754028]
[207.33876038 461.31484985]
[197.53701782 470.82501221]
[202.15103149 485.09774780]
[206.76504517 499.37048340]
[211.48518372 513.60845947]
[216.31117249 527.81091309]
[231.27833557 526.13812256]
[246.25512695 527.72235107]
[260.54104614 532.48956299]
[273.46795654 540.21673584]
[284.43118286 550.54248047]
[292.91802979 562.98388672]
[298.53146362 576.95898438]
[301.00900269 591.81414795]
[300.23474121 606.85455322]
[296.24490356 621.37683105]
[289.22610474 634.70159912]
[279.50659180 646.20574951]
[267.54101562 655.35119629]
[253.88899231 661.71014404]
[239.18905640 664.98516846]
[224.12875366 665.02313232]
[209.41249084 661.82226562]
[195.72856140 655.53228760]
[183.71699524 646.44732666]
[173.93959045 634.99237061]
[166.85365295 621.70312500]
[162.79061890 607.20123291]
[161.94050598 592.16485596]
[164.34307861 577.29742432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[6 184]
[7 183]
[8 182]
[13 176]
[14 175]
[15 174]
[16 173]
[18 171]
[20 169]
[21 166]
[35 165]
[36 164]
[38 162]
[39 161]
[40 160]
[41 159]
[44 157]
[45 156]
[46 155]
[47 154]
[48 153]
[51 150]
[52 149]
[53 148]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[61 138]
[62 137]
[64 135]
[65 130]
[66 129]
[67 128]
[68 127]
[70 125]
[71 124]
[72 123]
[75 122]
[76 121]
[77 120]
[80 117]
[81 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
