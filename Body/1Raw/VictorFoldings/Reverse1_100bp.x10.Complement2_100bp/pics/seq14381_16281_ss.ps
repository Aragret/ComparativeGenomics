%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-19.65626907 398.02081299]
[-15.57550335 412.47106934]
[-13.10918522 427.28259277]
[-12.28725147 442.27551270]
[-13.11968040 457.26785278]
[-15.59636784 472.07760620]
[-19.68724823 486.52502441]
[-25.34266281 500.43472290]
[-32.49395752 513.63781738]
[-41.05432510 525.97406006]
[-50.91984940 537.29376221]
[-61.97077179 547.45941162]
[-74.07294464 556.34759521]
[-87.07946014 563.85052490]
[-100.83242798 569.87707520]
[-115.16490173 574.35406494]
[-129.90289307 577.22711182]
[-144.86750793 578.46148682]
[-159.87709045 578.04205322]
[-174.74942017 575.97393799]
[-189.30397034 572.28228760]
[-203.36405945 567.01190186]
[-216.75901794 560.22674561]
[-229.32623291 552.00921631]
[-240.91317749 542.45904541]
[-251.37915039 531.69213867]
[-260.59713745 519.83917236]
[-268.45523071 507.04412842]
[-274.85806274 493.46224976]
[-279.72787476 479.25845337]
[-283.00555420 464.60513306]
[-284.65133667 449.68017578]
[-284.64523315 434.66473389]
[-282.98730469 419.74111938]
[-279.69769287 405.09045410]
[-274.81634521 390.89062500]
[-268.40246582 377.31396484]
[-260.53396606 364.52529907]
[-251.30633545 352.67987061]
[-240.83160400 341.92147827]
[-229.23690796 332.38070679]
[-216.66300964 324.17340088]
[-203.26252747 317.39913940]
[-189.19815063 312.14019775]
[-174.64060974 308.46038818]
[-159.76660156 306.40441895]
[-144.75668335 305.99719238]
[-129.79309082 307.24368286]
[-115.05743408 310.12875366]
[-100.72860718 314.61740112]
[-86.98054504 320.65512085]
[-73.98014069 328.16860962]
[-61.88519669 337.06668091]
[-51.72165298 326.03482056]
[-41.55810547 315.00292969]
[-31.39455795 303.97106934]
[-21.23101044 292.93917847]
[-11.06746387 281.90728760]
[-0.90391713 270.87542725]
[9.25962925 259.84353638]
[19.00559616 248.44108582]
[28.32047844 236.68383789]
[37.63536072 224.92658997]
[46.95024490 213.16932678]
[55.17905045 200.62792969]
[62.25615692 187.40240479]
[69.33325958 174.17687988]
[76.41036987 160.95135498]
[81.65708923 146.89888000]
[84.97934723 132.27142334]
[88.30160522 117.64395905]
[79.18950653 103.88395691]
[82.72487640 87.76351166]
[96.75910187 79.07971954]
[99.86321259 64.40441132]
[102.96732330 49.72911072]
[104.74978638 34.83539581]
[105.19639587 19.84204483]
[92.96932220 7.33133221]
[93.56173706 -9.81404400]
[106.11894989 -21.00132370]
[106.34227753 -35.99966049]
[106.56560516 -50.99799728]
[106.78893280 -65.99633789]
[94.37694550 -78.32361603]
[94.71403503 -95.47591400]
[107.10328674 -106.84891510]
[107.10328674 -121.84891510]
[107.10328674 -136.84890747]
[107.10328674 -151.84890747]
[107.10328674 -166.84890747]
[107.10328674 -181.84890747]
[104.13372803 -187.75596619]
[104.53314972 -193.42495728]
[107.33326721 -197.29385376]
[107.77987671 -212.28720093]
[108.22647858 -227.28056335]
[93.97835541 -232.36447144]
[81.99983978 -241.60408020]
[73.46446228 -254.09417725]
[69.20843506 -268.61111450]
[69.64871979 -283.73266602]
[74.74217987 -297.97738647]
[83.98981476 -309.94970703]
[96.48562622 -318.47671509]
[111.00540924 -322.72299194]
[126.12666321 -322.27258301]
[140.36796570 -317.16958618]
[152.33407593 -307.91394043]
[160.85270691 -295.41241455]
[165.08927917 -280.88977051]
[164.62873840 -265.76882935]
[159.51618958 -251.53096008]
[150.25251770 -239.57104492]
[137.74528503 -231.06079102]
[123.21983337 -226.83395386]
[122.77322388 -211.84060669]
[122.32661438 -196.84724426]
[122.10328674 -181.84890747]
[122.10328674 -166.84890747]
[122.10328674 -151.84890747]
[122.10328674 -136.84890747]
[122.10328674 -121.84891510]
[122.10328674 -106.84891510]
[132.39968872 -99.10207367]
[136.41412354 -86.65351868]
[132.46771240 -73.97927856]
[121.78726959 -65.77301025]
[121.56394196 -50.77466965]
[121.34061432 -35.77633286]
[121.11728668 -20.77799606]
[131.29721069 -12.87871456]
[135.12585449 -0.37177125]
[130.99118042 12.24230576]
[120.18974304 20.28865051]
[119.74314117 35.28200150]
[128.24394226 22.92334366]
[141.22192383 15.40191555]
[156.17124939 14.16998577]
[170.20544434 19.46541977]
[180.61470032 30.26575470]
[185.38917542 44.48561478]
[183.60699463 59.37936401]
[175.61224365 72.07125854]
[162.94862366 80.11068726]
[148.06124878 81.94536591]
[133.82464600 77.22104645]
[122.98767853 66.84991455]
[117.64262390 52.83322144]
[114.53851318 67.50852203]
[111.43440247 82.18383026]
[119.56275177 91.90924072]
[120.67839050 104.53496552]
[114.38139343 115.53502655]
[102.92906189 120.96621704]
[99.60680389 135.59367371]
[96.28454590 150.22113037]
[106.05297852 138.83790588]
[118.82807922 130.97682190]
[133.39222717 127.38714600]
[148.35723877 128.41102600]
[162.29675293 133.95085144]
[173.88215637 143.47863770]
[182.00918579 156.08622742]
[185.90322876 170.57196045]
[185.19313049 185.55514526]
[179.94657898 199.60768127]
[170.66363525 211.39015198]
[158.22909546 219.77957153]
[143.82812500 223.97627258]
[128.83335876 223.58026123]
[114.67398071 218.62928772]
[102.69958496 209.59526062]
[94.05149078 197.33921814]
[89.55397034 183.02935791]
[89.63589478 168.02845764]
[82.55879211 181.25398254]
[75.48168182 194.47950745]
[68.40457916 207.70503235]
[81.51972198 200.42541504]
[96.48931122 199.47073364]
[110.42295074 205.02534485]
[120.63027954 216.01672363]
[125.14041138 230.32261658]
[123.08251190 245.18078613]
[114.85394287 257.72235107]
[102.04349518 265.52569580]
[87.12467957 267.08416748]
[72.97807312 262.09683228]
[62.33517456 251.52665710]
[57.25095367 237.41458130]
[58.70749664 222.48420715]
[49.39261246 234.24147034]
[40.07772827 245.99871826]
[30.76284599 257.75598145]
[45.73627090 258.64849854]
[54.49866867 270.82305908]
[50.59073257 285.30505371]
[36.89324188 291.41888428]
[23.50347900 284.65765381]
[20.29150772 270.00708008]
[10.12796021 281.03897095]
[-0.03558673 292.07086182]
[-10.19913387 303.10272217]
[-20.36268044 314.13461304]
[-30.52622795 325.16647339]
[-40.68977356 336.19836426]
[-50.85332108 347.23022461]
[-40.99572372 358.55679321]
[-32.44399261 370.89904785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 208]
[54 207]
[55 206]
[56 205]
[57 204]
[58 203]
[59 202]
[60 201]
[61 195]
[62 194]
[63 193]
[64 192]
[65 179]
[66 178]
[67 177]
[68 176]
[69 157]
[70 156]
[71 155]
[74 151]
[75 150]
[76 149]
[77 136]
[78 135]
[81 131]
[82 130]
[83 129]
[84 128]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
