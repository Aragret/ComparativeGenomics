%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[64.19374084 598.20281982]
[60.07514191 612.72656250]
[52.18982315 625.59997559]
[41.12292480 635.86767578]
[27.69569016 642.76782227]
[12.90450859 645.78833008]
[-2.15301895 644.70507812]
[-16.35952187 639.59844971]
[-28.66078377 630.84735107]
[-38.14397049 619.10119629]
[-44.10536575 605.23168945]
[-46.10259247 590.26794434]
[-43.98744583 575.32037354]
[-37.91688156 561.49829102]
[-28.34137917 549.82727051]
[-15.97150040 541.17346191]
[-1.72517610 536.17895508]
[13.34042358 535.21447754]
[16.44453430 520.53918457]
[19.54864502 505.86386108]
[22.65275383 491.18856812]
[25.31855011 476.42733765]
[27.54366684 461.59329224]
[29.76878357 446.75924683]
[24.00506592 433.02502441]
[33.70389557 420.52529907]
[35.92901230 405.69125366]
[38.15412903 390.85720825]
[40.37924576 376.02316284]
[31.34593582 366.83465576]
[29.22255898 353.92831421]
[35.00541687 341.97973633]
[46.78501511 335.44860840]
[49.23074341 320.64932251]
[51.67647171 305.85006714]
[54.12220001 291.05078125]
[56.56792450 276.25152588]
[49.78075409 266.23846436]
[51.69721222 253.88894653]
[61.82887650 245.90695190]
[64.49467468 231.14573669]
[67.16046906 216.38452148]
[65.25574493 209.24353027]
[69.97740173 201.42408752]
[68.10372925 197.03108215]
[68.96981812 191.41442871]
[73.17394257 186.31179810]
[76.49620819 171.68432617]
[79.81846619 157.05686951]
[83.14072418 142.42941284]
[77.05445099 125.96963501]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[104.07086182 40.24041367]
[102.65058899 31.21707535]
[107.11022949 25.32357216]
[110.21434021 10.64826965]
[113.20911407 -4.04973507]
[116.09438324 -18.76962662]
[118.97966003 -33.48951721]
[117.55937958 -42.51285553]
[122.01902008 -48.40636063]
[125.12313080 -63.08166122]
[127.89874268 -77.82262421]
[130.34446716 -92.62189484]
[132.79019165 -107.42116547]
[135.23593140 -122.22043610]
[137.68165588 -137.01971436]
[140.12738037 -151.81898499]
[142.57310486 -166.61825562]
[145.01882935 -181.41752625]
[147.46456909 -196.21679688]
[148.13435364 -211.20182800]
[146.90737915 -226.15156555]
[145.56913757 -241.09175110]
[144.11972046 -256.02154541]
[142.55918884 -270.94015503]
[140.99867249 -285.85876465]
[138.99465942 -300.72430420]
[136.54893494 -315.52355957]
[134.10321045 -330.32284546]
[131.65747070 -345.12210083]
[116.61593628 -345.70254517]
[101.99922180 -349.29928589]
[88.40587616 -355.76504517]
[76.39254761 -364.83502197]
[66.45116425 -376.13784790]
[58.98882294 -389.21066284]
[54.31110764 -403.51812744]
[52.60955811 -418.47439575]
[53.95385742 -433.46697998]
[58.28895569 -447.88198853]
[65.43733215 -461.12905884]
[75.10626984 -472.66583252]
[86.89983368 -482.01980591]
[100.33507538 -488.80795288]
[114.86183167 -492.75234985]
[129.88525391 -493.69140625]
[144.79011536 -491.58673096]
[158.96611023 -486.52450562]
[171.83270264 -478.71197510]
[182.86303711 -468.46908569]
[191.60542297 -456.21527100]
[197.70185852 -442.45236206]
[200.90269470 -427.74386597]
[201.07688904 -412.69213867]
[198.21726990 -397.91351318]
[192.44096375 -384.01318359]
[183.98449707 -371.56036377]
[173.19415283 -361.06497192]
[160.51179504 -352.95678711]
[146.45674133 -347.56784058]
[148.90248108 -332.76855469]
[151.34820557 -317.96929932]
[153.79393005 -303.17001343]
[155.99160767 -301.42980957]
[157.63238525 -298.71420288]
[158.34129333 -295.23098755]
[157.82542419 -291.31967163]
[155.91728210 -287.41928101]
[157.47779846 -272.50067139]
[159.03833008 -257.58209229]
[162.86064148 -251.25659180]
[160.50932312 -242.42997742]
[161.84756470 -227.48979187]
[165.57527161 -221.10810852]
[163.09280396 -212.31747437]
[169.35435486 -225.94807434]
[179.85089111 -236.66360474]
[193.34930420 -243.20521545]
[208.26382446 -244.80441284]
[222.84226990 -241.27333069]
[235.37202454 -233.02679443]
[244.38107300 -221.03358459]
[248.81105042 -206.70266724]
[248.14154053 -191.71760559]
[242.45117188 -177.83886719]
[232.40846252 -166.69686890]
[219.19322205 -159.60058594]
[204.35795593 -157.38366699]
[189.64547729 -160.30657959]
[176.78422546 -168.02592468]
[167.28512573 -179.63482666]
[162.26383972 -193.77105713]
[159.81809998 -178.97178650]
[157.37237549 -164.17251587]
[154.92665100 -149.37324524]
[152.48092651 -134.57397461]
[150.03520203 -119.77471161]
[147.58946228 -104.97544098]
[145.14373779 -90.17617035]
[142.69801331 -75.37689972]
[144.44308472 -72.31306458]
[144.79084778 -68.25177002]
[143.28866577 -63.85895920]
[139.79843140 -59.97755051]
[136.69432068 -45.30224991]
[133.69955444 -30.60424423]
[130.81427002 -15.88435364]
[127.92900848 -1.16446233]
[129.72720337 6.00409985]
[124.88964081 13.75237942]
[121.78553009 28.42768097]
[118.79075623 43.12568665]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[110.72077179 126.88268280]
[107.83322906 139.04187012]
[97.76818085 145.75166321]
[94.44592285 160.37913513]
[91.12366486 175.00659180]
[87.80140686 189.63404846]
[84.69729614 204.30935669]
[81.92168427 219.05032349]
[79.25588989 233.81153870]
[76.59009552 248.57275391]
[83.21697998 265.75314331]
[71.36719513 278.69723511]
[68.92147064 293.49652100]
[66.47573853 308.29577637]
[64.03001404 323.09506226]
[61.58428574 337.89431763]
[72.03030396 351.92642212]
[69.15255737 368.83895874]
[55.21329117 378.24829102]
[52.98817444 393.08233643]
[50.76305771 407.91638184]
[48.53794098 422.75042725]
[54.14250183 437.54565430]
[44.60282898 448.98437500]
[42.37771225 463.81842041]
[40.15259171 478.65246582]
[41.88468170 482.63415527]
[42.22537613 486.56460571]
[41.36164093 490.01269531]
[39.60124969 492.65231323]
[37.32805634 494.29266357]
[34.22394562 508.96795654]
[31.11983681 523.64324951]
[28.01572609 538.31854248]
[41.40042496 545.30084229]
[52.40419388 555.63623047]
[60.21047592 568.55767822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 207]
[19 206]
[20 205]
[21 204]
[22 199]
[23 198]
[24 197]
[26 195]
[27 194]
[28 193]
[29 192]
[33 189]
[34 188]
[35 187]
[36 186]
[37 185]
[40 183]
[41 182]
[42 181]
[44 180]
[47 179]
[48 178]
[49 177]
[50 176]
[52 173]
[54 170]
[55 169]
[56 168]
[57 167]
[59 166]
[60 165]
[61 163]
[62 162]
[63 161]
[65 160]
[66 159]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 130]
[77 128]
[78 127]
[79 125]
[80 124]
[81 123]
[82 118]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
