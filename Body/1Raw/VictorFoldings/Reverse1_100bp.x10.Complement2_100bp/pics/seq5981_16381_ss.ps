%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[37.30509949 603.03894043]
[25.29349518 612.03790283]
[12.57978630 620.01422119]
[-0.74918061 626.91333008]
[-14.60235214 632.68823242]
[-28.88509750 637.29937744]
[-43.49984741 640.71527100]
[-58.34676743 642.91265869]
[-73.32444000 643.87652588]
[-88.33054352 643.60015869]
[-103.26257324 642.08557129]
[-118.01853180 639.34307861]
[-132.49760437 635.39141846]
[-146.60090637 630.25756836]
[-160.23207092 623.97656250]
[-173.29800415 616.59136963]
[-185.70944214 608.15240479]
[-197.38159180 598.71734619]
[-208.23472595 588.35064697]
[-218.19471741 577.12310791]
[-227.19351196 565.11138916]
[-235.16964722 552.39758301]
[-242.06863403 539.06854248]
[-247.84333801 525.21527100]
[-252.45433044 510.93246460]
[-255.87008667 496.31768799]
[-258.06729126 481.47073364]
[-259.03094482 466.49304199]
[-258.75442505 451.48693848]
[-257.23965454 436.55493164]
[-254.49697876 421.79901123]
[-250.54513550 407.31997681]
[-245.41110229 393.21673584]
[-239.12995911 379.58566284]
[-231.74461365 366.51980591]
[-223.30551147 354.10848999]
[-213.87031555 342.43643188]
[-203.50346375 331.58343506]
[-192.27578735 321.62356567]
[-180.26396179 312.62490845]
[-167.55006409 304.64892578]
[-154.22093201 297.75012207]
[-140.36763000 291.97555542]
[-126.08477020 287.36474609]
[-111.46994019 283.94915771]
[-96.62296295 281.75213623]
[-81.64527130 280.78866577]
[-66.63917542 281.06536865]
[-51.70718002 282.58029175]
[-36.95129013 285.32315063]
[-22.47230339 289.27517700]
[-8.36912918 294.40939331]
[-2.09176874 280.78607178]
[4.18559217 267.16275024]
[10.46295261 253.53942871]
[16.74031258 239.91612244]
[23.01767349 226.29280090]
[29.29503441 212.66947937]
[23.91229439 198.82890320]
[30.08436203 184.92349243]
[44.63813400 179.37142944]
[50.91549683 165.74810791]
[37.53436661 172.52641296]
[22.60231972 171.10025024]
[10.74620914 161.91152954]
[5.63977909 147.80747986]
[8.86531448 133.15838623]
[19.42334747 122.50343323]
[34.04235458 119.14418030]
[48.19248199 124.12152100]
[57.48915482 135.89317322]
[59.05165100 150.81182861]
[67.09282684 138.14930725]
[75.13399506 125.48677826]
[83.17517090 112.82424927]
[91.21634674 100.16172791]
[90.80686951 97.14148712]
[91.48728943 93.90550995]
[93.33962250 90.85717773]
[96.29571533 88.42453766]
[100.13203430 87.00479889]
[108.91263580 74.84334564]
[117.60246277 62.61685944]
[126.20102692 50.32601929]
[134.79959106 38.03518295]
[142.93479919 25.43287086]
[150.59539795 12.53654289]
[158.25599670 -0.35978377]
[165.91659546 -13.25611019]
[173.57719421 -26.15243721]
[174.04086304 -32.74762726]
[177.27946472 -37.41758728]
[181.66275024 -39.31385422]
[189.70391846 -51.97637939]
[197.74510193 -64.63890839]
[205.78627014 -77.30142975]
[194.05525208 -86.67321777]
[183.40628052 -97.25843048]
[173.96423340 -108.93296814]
[165.83978271 -121.55995178]
[159.12820435 -134.99133301]
[153.90818787 -149.06964111]
[150.24093628 -163.62980652]
[148.16943359 -178.50111389]
[147.71797180 -193.50923157]
[148.89184570 -208.47817993]
[151.67729187 -223.23245239]
[156.04165649 -237.59906006]
[161.93377686 -251.40957642]
[169.28454590 -264.50207520]
[178.00781250 -276.72302246]
[188.00126648 -287.92919922]
[199.14776611 -297.98916626]
[211.31660461 -306.78497314]
[224.36512756 -314.21353149]
[238.14031982 -320.18771362]
[252.48071289 -324.63751221]
[267.21813965 -327.51071167]
[282.17984009 -328.77362061]
[297.19036865 -328.41149902]
[312.07376099 -326.42852783]
[326.65548706 -322.84796143]
[340.76461792 -317.71182251]
[354.23568726 -311.08029175]
[366.91079712 -303.03112793]
[378.64129639 -293.65869141]
[389.28970337 -283.07290649]
[398.73114014 -271.39785767]
[406.85488892 -258.77044678]
[413.56573486 -245.33871460]
[418.78500366 -231.26013184]
[422.45147705 -216.69976807]
[424.52218628 -201.82832336]
[424.97283936 -186.82019043]
[423.79815674 -171.85131836]
[421.01190186 -157.09719849]
[416.64675903 -142.73081970]
[410.75390625 -128.92062378]
[403.40243530 -115.82852173]
[394.67852783 -103.60802460]
[384.68444824 -92.40240479]
[373.53741455 -82.34304047]
[361.36810303 -73.54786682]
[348.31918335 -66.12001801]
[334.54367065 -60.14657211]
[320.20303345 -55.69756317]
[305.46545410 -52.82515717]
[290.50369263 -51.56303024]
[275.49316406 -51.92598343]
[260.60989380 -53.90975571]
[246.02836609 -57.49109268]
[231.91952515 -62.62800217]
[218.44879150 -69.26025391]
[210.40762329 -56.59773254]
[202.36645508 -43.93520737]
[194.32527161 -31.27268219]
[186.47352600 -18.49184036]
[178.81292725 -5.59551334]
[171.15232849 7.30081367]
[163.49172974 20.19713974]
[155.83113098 33.09346771]
[170.78956604 31.97752380]
[181.09994507 42.87229538]
[179.16184998 57.74655914]
[166.40396118 65.63556671]
[152.23092651 60.72383118]
[147.09042358 46.63374710]
[138.49186707 58.92458344]
[129.89329529 71.21542358]
[128.63476562 78.49813080]
[121.07408905 83.62394714]
[112.29348755 95.78540039]
[103.87886810 108.20289612]
[95.83769989 120.86542511]
[87.79652405 133.52795410]
[79.75534821 146.19047546]
[71.71417999 158.85299683]
[64.53881073 172.02546692]
[58.26145172 185.64878845]
[63.49700546 200.31939697]
[56.93679810 214.04595947]
[42.91835022 218.94683838]
[36.64099121 232.57015991]
[30.36363029 246.19348145]
[24.08626938 259.81680298]
[17.80890846 273.44009399]
[11.53154755 287.06341553]
[5.25418663 300.68673706]
[18.32029343 308.07162476]
[30.73192787 316.51028442]
[42.40430450 325.94503784]
[53.25769424 336.31152344]
[63.21794510 347.53884888]
[72.21702576 359.55032349]
[80.19346619 372.26394653]
[87.09276581 385.59283447]
[92.86780548 399.44595337]
[97.47913361 413.72863770]
[100.89524078 428.34335327]
[103.09280396 443.19024658]
[104.05680084 458.16787720]
[103.78064728 473.17401123]
[102.26624298 488.10604858]
[99.52391815 502.86203003]
[95.57240295 517.34118652]
[90.43870544 531.44451904]
[84.15789032 545.07574463]
[76.77285767 558.14178467]
[68.33406067 570.55334473]
[58.89913559 582.22558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[61 179]
[62 178]
[72 177]
[73 176]
[74 175]
[75 174]
[76 173]
[81 172]
[82 171]
[83 169]
[84 168]
[85 167]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[93 156]
[94 155]
[95 154]
[96 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
