%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[151.03932190 313.20065308]
[148.17877197 298.47018433]
[146.30848694 283.58157349]
[145.43684387 268.60125732]
[145.56771851 253.59619141]
[146.70054626 238.63337708]
[148.83024597 223.77963257]
[151.94731140 209.10130310]
[156.03782654 194.66395569]
[161.08351135 180.53207397]
[167.06185913 166.76875305]
[173.94612122 153.43548584]
[161.10719299 145.67910767]
[148.26824951 137.92271423]
[135.42930603 130.16632080]
[122.59037018 122.40992737]
[109.75142670 114.65353394]
[100.25372314 117.59977722]
[90.67504120 114.92855072]
[84.07267761 107.49245453]
[82.55397034 97.66493225]
[69.95166016 89.52971649]
[57.34934616 81.39450073]
[44.74703598 73.25928497]
[32.14472580 65.12406921]
[19.54241180 56.98885727]
[3.75183368 56.00489044]
[-2.74472928 42.60175705]
[-15.34704113 34.46654129]
[-27.94935226 26.33132553]
[-40.55166626 18.19610977]
[-49.62084198 30.15300751]
[-59.56834030 41.38976669]
[-70.33717346 51.84201813]
[-81.86565399 61.44990158]
[-94.08776093 70.15837860]
[-106.93347931 77.91756439]
[-120.32922363 84.68301392]
[-134.19827271 90.41598511]
[-148.46118164 95.08362579]
[-163.03623962 98.65921021]
[-177.83998108 101.12225342]
[-192.78761292 102.45864868]
[-207.79350281 102.66073608]
[-222.77168274 101.72736359]
[-237.63638306 99.66387939]
[-252.30245972 96.48209381]
[-266.68588257 92.20024109]
[-280.70428467 86.84284210]
[-294.27737427 80.44058990]
[-307.32739258 73.03015137]
[-319.77957153 64.65396881]
[-331.56262207 55.36003113]
[-342.60903931 45.20157242]
[-352.85552979 34.23677063]
[-362.24340820 22.52844238]
[-370.71890259 10.14364815]
[-378.23348999 -2.84667277]
[-384.74411011 -16.36811066]
[-390.21347046 -30.34321594]
[-394.61022949 -44.69194031]
[-397.90921021 -59.33209229]
[-400.09152222 -74.17981720]
[-401.14468384 -89.15006256]
[-401.06262207 -104.15708160]
[-399.84582520 -119.11491394]
[-397.50125122 -133.93788147]
[-394.04235840 -148.54109192]
[-389.48895264 -162.84086609]
[-383.86709595 -176.75532532]
[-377.20901489 -190.20475769]
[-369.55282593 -203.11212158]
[-360.94238281 -215.40348816]
[-351.42703247 -227.00846863]
[-341.06121826 -237.86054993]
[-329.90438843 -247.89759827]
[-318.02041626 -257.06213379]
[-305.47738647 -265.30163574]
[-292.34710693 -272.56890869]
[-278.70483398 -278.82235718]
[-264.62866211 -284.02612305]
[-250.19927979 -288.15045166]
[-235.49928284 -291.17163086]
[-220.61291504 -293.07244873]
[-205.62541199 -293.84197998]
[-190.62263489 -293.47579956]
[-175.69052124 -291.97601318]
[-160.91459656 -289.35122681]
[-146.37950134 -285.61648560]
[-132.16848755 -280.79312134]
[-118.36296082 -274.90884399]
[-105.04200745 -267.99731445]
[-92.28190613 -260.09811401]
[-80.15576935 -251.25648499]
[-68.73303986 -241.52310181]
[-58.07915497 -230.95372009]
[-48.25513840 -219.60884094]
[-39.31725693 -207.55348206]
[-31.31671524 -194.85668945]
[-24.29933167 -181.59117126]
[-18.30530739 -167.83294678]
[-13.36897469 -153.66078186]
[-9.51860714 -139.15588379]
[-6.77626085 -124.40132904]
[-5.15764332 -109.48162842]
[-4.67202663 -94.48224640]
[-5.32219172 -79.48908997]
[-7.10441494 -64.58805084]
[-10.00848770 -49.86447144]
[-14.01777554 -35.40269470]
[-19.10931396 -21.28555489]
[-25.25393677 -7.59391546]
[-32.41645050 5.59379864]
[-19.81413651 13.72901440]
[-7.21182537 21.86422920]
[5.39048672 29.99944687]
[20.27966309 30.40152740]
[27.67762756 44.38654327]
[40.27994156 52.52175903]
[52.88225174 60.65697479]
[65.48456573 68.79219055]
[78.08687592 76.92740631]
[90.68918610 85.06262207]
[109.32495880 85.07144928]
[117.50782013 101.81459808]
[130.34675598 109.57098389]
[143.18569946 117.32737732]
[156.02464294 125.08377075]
[168.86358643 132.84016418]
[181.70251465 140.59655762]
[190.30221558 128.29962158]
[199.70405579 116.60455322]
[209.86605835 105.56358337]
[220.74281311 95.22600555]
[232.28576660 85.63801575]
[244.44334412 76.84241486]
[257.16125488 68.87850189]
[270.38269043 61.78183746]
[284.04861450 55.58411789]
[298.09799194 50.31303024]
[312.46807861 45.99210739]
[327.09466553 42.64065552]
[341.91244507 40.27363968]
[356.85522461 38.90163040]
[371.85626221 38.53075790]
[386.84860229 39.16267776]
[401.76525879 40.79456711]
[416.53958130 43.41913605]
[431.10562134 47.02466965]
[445.39828491 51.59505463]
[459.35379028 57.10988617]
[472.90979004 63.54452896]
[486.00570679 70.87024689]
[498.58306885 79.05432129]
[510.58572388 88.06019592]
[521.96002197 97.84764862]
[532.65521240 108.37297058]
[542.62347412 119.58914948]
[551.82031250 131.44609070]
[560.20471191 143.89083862]
[567.73913574 156.86781311]
[574.38995361 170.31904602]
[580.12744141 184.18447876]
[584.92608643 198.40217590]
[588.76428223 212.90863037]
[591.62506104 227.63905334]
[593.49548340 242.52766418]
[594.36730957 257.50796509]
[594.23663330 272.51303101]
[593.10400391 287.47586060]
[590.97448730 302.32962036]
[587.85760498 317.00799561]
[583.76727295 331.44537354]
[578.72174072 345.57733154]
[572.74359131 359.34072876]
[565.85949707 372.67407227]
[558.10015869 385.51785278]
[549.50030518 397.81466675]
[540.09832764 409.50961304]
[529.93621826 420.55047607]
[519.05932617 430.88790894]
[507.51626587 440.47573853]
[495.35855103 449.27120972]
[482.64056396 457.23495483]
[469.41900635 464.33145142]
[455.75302124 470.52899170]
[441.70358276 475.79989624]
[427.33343506 480.12063599]
[412.70681763 483.47192383]
[397.88900757 485.83874512]
[382.94619751 487.21057129]
[367.94515991 487.58126831]
[352.95281982 486.94915771]
[338.03619385 485.31707764]
[323.26190186 482.69232178]
[308.69592285 479.08660889]
[294.40328979 474.51602173]
[280.44787598 469.00103760]
[266.89196777 462.56622314]
[253.79612732 455.24032593]
[241.21887207 447.05609131]
[229.21633911 438.05007935]
[217.84214783 428.26248169]
[207.14709473 417.73703003]
[197.17895508 406.52072144]
[187.98225403 394.66366577]
[179.59805298 382.21881104]
[172.06379700 369.24172974]
[165.41314697 355.79040527]
[159.67579651 341.92489624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[17 125]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[28 116]
[29 115]
[30 114]
[31 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
