%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[83.42714691 464.18161011]
[82.02513123 479.18597412]
[77.20009613 493.46237183]
[69.21224213 506.24090576]
[58.49234009 516.83245850]
[45.61850739 524.66577148]
[31.28501511 529.31848145]
[16.26484489 530.53967285]
[1.36801898 528.26342773]
[-12.60209656 522.61248779]
[-24.89211082 513.89172363]
[-34.83924103 502.57131958]
[-41.90704346 489.26181030]
[-45.71437073 474.68096924]
[-46.05589294 459.61511230]
[-42.91319275 444.87670898]
[-36.45574951 431.26062012]
[-27.03180885 419.50109863]
[-15.14959240 410.23236084]
[-1.44989026 403.95425415]
[13.32848835 401.00531006]
[28.38856506 401.54458618]
[32.36066055 387.08004761]
[36.33275604 372.61553955]
[40.30485153 358.15100098]
[44.27695084 343.68649292]
[47.70801163 329.08416748]
[42.56330490 315.10629272]
[52.81060410 303.05209351]
[55.69587708 288.33221436]
[58.58115005 273.61230469]
[53.43644333 259.63442993]
[63.68374252 247.58023071]
[58.53903961 233.60235596]
[68.78633881 221.54815674]
[71.67160797 206.82827759]
[74.55688477 192.10838318]
[77.33249664 177.36741638]
[79.99829102 162.60620117]
[82.66408539 147.84498596]
[85.32987976 133.08377075]
[83.63062286 129.99429321]
[83.34336090 125.92826843]
[84.91077423 121.55831146]
[88.45841217 117.72929382]
[91.78067017 103.10183716]
[90.38079834 100.39446259]
[89.93508148 97.11790466]
[90.65624237 93.62457275]
[92.62383270 90.34053802]
[95.76065063 87.71502686]
[99.94766235 73.31124115]
[104.13467407 58.90746307]
[108.32168579 44.50368118]
[112.50869751 30.09989738]
[111.32409668 25.92249680]
[111.51156616 21.98176193]
[112.82822418 18.67997360]
[114.92549133 16.29920197]
[117.39745331 14.97725964]
[122.43437195 0.84822994]
[127.47129059 -13.28079987]
[124.81727600 -28.87781143]
[136.37905884 -38.26793671]
[132.64208984 -56.29892731]
[146.44381714 -67.13771820]
[151.26980591 -81.34017181]
[156.09580994 -95.54262543]
[160.92181396 -109.74507904]
[148.31846619 -101.61145020]
[133.31907654 -101.47642517]
[120.57135773 -109.38183594]
[114.02532196 -122.87811279]
[115.70933533 -137.78327942]
[125.10159302 -149.47882080]
[139.29179382 -154.34072876]
[153.88294983 -150.86250305]
[164.35383606 -140.12190247]
[167.45991516 -125.44676208]
[174.14012146 -138.87713623]
[180.82031250 -152.30751038]
[187.50050354 -165.73789978]
[193.87910461 -179.31410217]
[199.95294189 -193.02937317]
[206.02677917 -206.74462891]
[212.10061646 -220.45989990]
[218.17443848 -234.17517090]
[216.68783569 -249.92637634]
[228.91600037 -258.43057251]
[234.98983765 -272.14584351]
[241.06365967 -285.86108398]
[237.15403748 -298.15246582]
[242.49530029 -309.45089722]
[253.73100281 -313.93258667]
[260.00836182 -327.55590820]
[266.28573608 -341.17922974]
[272.56307983 -354.80252075]
[259.87802124 -362.85064697]
[248.37887573 -372.51779175]
[238.27087402 -383.63137817]
[229.73443604 -395.99310303]
[222.92185974 -409.38238525]
[217.95475769 -423.56021118]
[214.92175293 -438.27362061]
[213.87698364 -453.26000977]
[214.83909607 -468.25195312]
[217.79090881 -482.98184204]
[222.67974854 -497.18685913]
[229.41836548 -510.61349487]
[237.88652039 -523.02209473]
[247.93305969 -534.19128418]
[259.37872314 -543.92169189]
[272.01919556 -552.03967285]
[285.62896729 -558.40032959]
[299.96511841 -562.89013672]
[314.77175903 -565.42901611]
[329.78472900 -565.97167969]
[344.73605347 -564.50836182]
[359.35891724 -561.06524658]
[373.39239502 -555.70373535]
[386.58596802 -548.51953125]
[398.70425415 -539.64086914]
[409.53094482 -529.22619629]
[418.87283325 -517.46130371]
[426.56320190 -504.55618286]
[432.46481323 -490.74118042]
[436.47235107 -476.26281738]
[438.51431274 -461.37948608]
[438.55419922 -446.35675049]
[436.59133911 -431.46276855]
[432.66076660 -416.96331787]
[426.83261108 -403.11718750]
[419.21090698 -390.17141724]
[409.93164062 -378.35705566]
[399.16043091 -367.88497925]
[387.08950806 -358.94204712]
[373.93426514 -351.68789673]
[359.92947388 -346.25192261]
[345.32510376 -342.73117065]
[330.38177490 -341.18847656]
[315.36611938 -341.65133667]
[300.54617310 -344.11154175]
[286.18640137 -348.52517700]
[279.90902710 -334.90185547]
[273.63168335 -321.27853394]
[267.35430908 -307.65521240]
[269.90264893 -290.29223633]
[254.77893066 -279.78726196]
[248.70509338 -266.07199097]
[242.63127136 -252.35673523]
[244.55232239 -237.58653259]
[231.88970947 -228.10133362]
[225.81587219 -214.38606262]
[219.74205017 -200.67079163]
[213.66821289 -186.95553589]
[207.59437561 -173.24026489]
[208.51658630 -169.83705139]
[207.83625793 -165.81806946]
[205.28189087 -161.94140625]
[200.93087769 -159.05769348]
[194.25068665 -145.62731934]
[187.57049561 -132.19694519]
[180.89028931 -118.76657104]
[175.12426758 -104.91908264]
[170.29826355 -90.71662903]
[165.47225952 -76.51417542]
[160.64627075 -62.31171799]
[165.71000671 -51.32603836]
[161.80561829 -39.45424271]
[150.50808716 -33.23101807]
[153.52236938 -18.64461136]
[141.60031128 -8.24388313]
[136.56340027 5.88514614]
[131.52648926 20.01417542]
[126.91247559 34.28690720]
[122.72546387 48.69069290]
[118.53845215 63.09447479]
[114.35144043 77.49825287]
[110.16442871 91.90203857]
[106.40813446 106.42409515]
[103.08586884 121.05155945]
[100.09109497 135.74955750]
[97.42530060 150.51077271]
[94.75950623 165.27198792]
[92.09371185 180.03321838]
[93.64817810 189.03440857]
[89.27677155 194.99365234]
[86.39150238 209.71354675]
[83.50622559 224.43344116]
[88.44455719 239.46418762]
[78.40363312 250.46551514]
[83.34196472 265.49624634]
[73.30104065 276.49758911]
[70.41577148 291.21746826]
[67.53049469 305.93737793]
[72.46882629 320.96810913]
[62.42790222 331.96945190]
[76.14305115 325.89532471]
[89.51316071 332.69534302]
[92.68229675 347.35671997]
[83.31427765 359.07168579]
[68.31486511 359.20437622]
[58.74147415 347.65856934]
[54.76937866 362.12310791]
[50.79727936 376.58764648]
[46.82518387 391.05215454]
[42.85308838 405.51669312]
[56.07648087 412.74429321]
[67.27622223 422.82708740]
[75.84833527 435.22125244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[27 197]
[29 195]
[30 194]
[31 193]
[33 191]
[35 189]
[36 188]
[37 187]
[38 185]
[39 184]
[40 183]
[41 182]
[45 181]
[46 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[60 174]
[61 173]
[62 172]
[64 170]
[66 167]
[67 166]
[68 165]
[69 164]
[79 163]
[80 162]
[81 161]
[82 160]
[83 156]
[84 155]
[85 154]
[86 153]
[87 152]
[89 150]
[90 149]
[91 148]
[94 146]
[95 145]
[96 144]
[97 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
