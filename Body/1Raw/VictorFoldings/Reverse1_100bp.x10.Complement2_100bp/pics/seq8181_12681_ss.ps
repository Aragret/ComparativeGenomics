%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[135.41244507 697.65374756]
[128.59196472 684.27154541]
[123.50255585 670.13995361]
[120.22447968 655.48193359]
[118.80944824 640.52868652]
[119.27976227 625.51593018]
[121.62801361 610.68054199]
[125.81716156 596.25646973]
[131.78114319 582.47113037]
[139.42590332 569.54205322]
[148.63084412 557.67315674]
[159.25082397 547.05151367]
[171.11834717 537.84466553]
[184.04621887 530.19787598]
[197.83058167 524.23175049]
[193.64356995 509.82797241]
[189.45655823 495.42419434]
[185.26954651 481.02041626]
[181.08253479 466.61663818]
[166.23291016 465.06170654]
[153.07426453 457.92059326]
[143.62664795 446.25408936]
[139.35392761 431.82037354]
[140.93704224 416.81015015]
[148.16572571 403.51394653]
[159.96580505 393.97277832]
[155.77879333 379.56900024]
[151.59178162 365.16522217]
[147.40476990 350.76141357]
[133.35093689 345.90063477]
[124.75245667 333.55029297]
[125.07885742 318.32708740]
[134.41448975 306.07342529]
[130.22747803 291.66964722]
[122.07277679 304.25933838]
[107.43370819 307.53009033]
[94.69620514 299.60821533]
[91.15688324 285.03176880]
[98.84322357 272.15075684]
[113.35214996 268.34405518]
[126.37170410 275.79153442]
[123.48642731 261.07162476]
[120.60115814 246.35174561]
[117.71588135 231.63185120]
[114.83061218 216.91195679]
[111.94533539 202.19206238]
[99.47930145 194.12153625]
[96.34352875 179.23457336]
[104.89316559 166.21376038]
[102.00789642 151.49388123]
[92.14708710 144.48738098]
[89.62284851 132.24760437]
[96.32256317 121.22595978]
[93.65676880 106.46473694]
[90.83221436 103.83904266]
[89.17874146 99.98107910]
[89.22074127 95.44178009]
[91.21697235 90.98589325]
[89.21295166 76.12036133]
[87.20893860 61.25483322]
[85.20492554 46.38930511]
[83.20091248 31.52377701]
[79.46878815 26.06641960]
[79.10724640 20.39488411]
[81.36537170 16.18656921]
[79.80484772 1.26796520]
[78.24432373 -13.65063953]
[76.68379974 -28.56924438]
[67.55278778 -41.48958206]
[73.92402649 -54.95273972]
[72.36350250 -69.87134552]
[70.80297852 -84.78994751]
[69.24245453 -99.70855713]
[60.11143875 -112.62889099]
[66.48267365 -126.09205627]
[64.92214966 -141.01065063]
[63.36162949 -155.92926025]
[61.13651276 -170.76330566]
[58.25123978 -185.48320007]
[55.36596680 -200.20309448]
[52.48069382 -214.92297363]
[49.37658310 -229.59828186]
[46.05432510 -244.22573853]
[42.73206711 -258.85321045]
[39.40980530 -273.48065186]
[24.34066963 -273.61437988]
[9.70870876 -277.22027588]
[-3.69699574 -284.10385132]
[-15.15349102 -293.89392090]
[-24.04294205 -306.06250000]
[-29.88595200 -319.95336914]
[-32.36741257 -334.81738281]
[-31.35350800 -349.85296631]
[-26.89891052 -364.24926758]
[-19.24385452 -377.22988892]
[-8.80116463 -388.09484863]
[3.86599541 -396.25814819]
[18.07450294 -401.27963257]
[33.05810928 -402.88842773]
[48.00876999 -400.99780273]
[62.12021255 -395.70968628]
[74.63143158 -387.30932617]
[84.86769867 -376.24969482]
[92.27699280 -363.12722778]
[96.45974731 -348.64962769]
[97.19038391 -333.59762573]
[94.42949677 -318.78295898]
[88.32598114 -305.00457764]
[79.20899200 -293.00552368]
[67.57019806 -283.43289185]
[54.03726578 -276.80291748]
[57.35952377 -262.17547607]
[60.68178558 -247.54800415]
[64.00404358 -232.92054749]
[67.49606323 -229.66249084]
[68.97846222 -224.17619324]
[67.20058441 -217.80825806]
[70.08586121 -203.08836365]
[72.97113037 -188.36846924]
[75.85640717 -173.64857483]
[85.10179138 -185.46055603]
[99.97428131 -187.41221619]
[111.95423889 -178.38555908]
[114.17900085 -163.55145264]
[105.37412262 -151.40756226]
[90.58343506 -148.91046143]
[78.28023529 -157.48979187]
[79.84075928 -142.57118225]
[81.40128326 -127.65257263]
[90.42067719 -115.79931641]
[84.16105652 -101.26908112]
[85.72158051 -86.35047150]
[87.28210449 -71.43186951]
[88.84262848 -56.51326370]
[97.86202240 -44.66000366]
[91.60240936 -30.12976646]
[93.16293335 -15.21116257]
[94.72344971 -0.29255778]
[96.28397369 14.62604713]
[98.06644440 29.51976395]
[100.07045746 44.38529205]
[102.07447052 59.25082016]
[104.07848358 74.11634827]
[106.08249664 88.98188019]
[108.41798401 103.79894257]
[111.08377838 118.56016541]
[123.30142975 132.33734131]
[116.72778320 148.60859680]
[119.61306000 163.32849121]
[132.44564819 172.15814209]
[135.16203308 187.12730408]
[126.66522980 199.30679321]
[129.55050659 214.02668762]
[132.43577576 228.74656677]
[135.32104492 243.46646118]
[138.20631409 258.18637085]
[141.09159851 272.90625000]
[144.63127136 287.48263550]
[148.81828308 301.88641357]
[163.26803589 307.22592163]
[171.70442200 319.90191650]
[171.06660461 334.93710327]
[161.80856323 346.57440186]
[165.99557495 360.97821045]
[170.18258667 375.38198853]
[174.36959839 389.78576660]
[189.44566345 391.51434326]
[202.67568970 398.86343384]
[212.05877686 410.68594360]
[216.18945312 425.16091919]
[214.46824646 440.07406616]
[207.18833923 453.15643311]
[195.48631287 462.42962646]
[199.67332458 476.83340454]
[203.86033630 491.23718262]
[208.04734802 505.64096069]
[212.23435974 520.04473877]
[227.06900024 517.69171143]
[242.08157349 517.21649170]
[257.03530884 518.62670898]
[271.69439697 521.89996338]
[285.82760620 526.98480225]
[299.21206665 533.80096436]
[311.63665771 542.24090576]
[322.90545654 552.17150879]
[332.84069824 563.43627930]
[341.28573608 575.85742188]
[348.10733032 589.23907471]
[353.19793701 603.37017822]
[356.47723389 618.02795410]
[357.89352417 632.98114014]
[357.42446899 647.99389648]
[355.07748413 662.82946777]
[350.88952637 677.25390625]
[344.92672729 691.03973389]
[337.28305054 703.96942139]
[328.07910156 715.83917236]
[317.46002197 726.46166992]
[305.59326172 735.66949463]
[292.66604614 743.31738281]
[278.88217163 749.28466797]
[264.45910645 753.47729492]
[249.62428284 755.82910156]
[234.61166382 756.30303955]
[219.65803528 754.89160156]
[204.99922180 751.61706543]
[190.86643982 746.53100586]
[177.48255920 739.71374512]
[165.05867004 731.27276611]
[153.79072571 721.34118652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[26 166]
[27 165]
[28 164]
[29 163]
[33 159]
[34 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[49 149]
[50 148]
[53 146]
[54 145]
[58 144]
[59 143]
[60 142]
[61 141]
[62 140]
[65 139]
[66 138]
[67 137]
[68 136]
[70 134]
[71 133]
[72 132]
[73 131]
[75 129]
[76 128]
[77 127]
[78 120]
[79 119]
[80 118]
[81 117]
[82 114]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
