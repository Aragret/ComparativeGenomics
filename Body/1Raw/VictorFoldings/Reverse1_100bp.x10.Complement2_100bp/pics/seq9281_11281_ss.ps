%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[133.54600525 681.10247803]
[123.98999023 669.52496338]
[115.59598541 657.07922363]
[108.44236755 643.88146973]
[102.59593964 630.05487061]
[98.11126709 615.72857666]
[95.03025055 601.03625488]
[93.38162994 586.11523438]
[93.18082428 571.10473633]
[94.42968750 556.14489746]
[97.11656952 541.37548828]
[101.21638489 526.93432617]
[106.69084930 512.95629883]
[113.48884583 499.57186890]
[121.54690552 486.90603638]
[130.78979492 475.07705688]
[141.13119507 464.19540405]
[152.47457886 454.36260986]
[164.71400452 445.67056274]
[177.73521423 438.20037842]
[191.41661072 432.02178955]
[186.59060669 417.81933594]
[181.76461792 403.61688232]
[176.63624573 398.29507446]
[176.97419739 389.16690063]
[172.36019897 374.89416504]
[167.74618530 360.62145996]
[163.13217163 346.34872437]
[158.51815796 332.07598877]
[153.90415955 317.80325317]
[141.93290710 315.78717041]
[131.89543152 308.83145142]
[125.73153687 298.20565796]
[124.66404724 285.89550781]
[128.95668030 274.23181152]
[137.85240173 265.44921875]
[133.66539001 251.04544067]
[129.47837830 236.64164734]
[126.58104706 234.63221741]
[124.51306152 231.11959839]
[123.97031403 226.50888062]
[125.44148254 221.50062561]
[121.90180969 206.92424011]
[118.36213684 192.34786987]
[107.83999634 181.80587769]
[112.10224152 166.56961060]
[108.56256866 151.99322510]
[105.02289581 137.41685486]
[100.62189484 123.07700348]
[95.37517548 109.02453613]
[89.82956696 103.17485809]
[90.15666199 94.72359467]
[85.11974335 80.59455872]
[79.97778320 66.50341797]
[74.73106384 52.45095062]
[62.65547943 42.22887802]
[65.45226288 27.59920692]
[60.60411072 23.10399437]
[58.99539566 17.65339279]
[60.26536560 13.04945660]
[55.43936539 -1.15299857]
[50.61336899 -15.35545444]
[45.78737259 -29.55790901]
[40.96137238 -43.76036453]
[36.02978134 -57.92650223]
[24.10772324 -68.32722473]
[27.12201309 -82.91363525]
[22.08509636 -97.04266357]
[17.04818153 -111.17169952]
[11.90622139 -125.26284027]
[6.65950298 -139.31530762]
[1.41278458 -153.36778259]
[-13.26836777 -150.16706848]
[-28.25559998 -149.08836365]
[-43.24379349 -150.15364075]
[-57.92781067 -153.34118652]
[-72.00869751 -158.58612061]
[-85.19979095 -165.78167725]
[-97.23252869 -174.78134155]
[-107.86194611 -185.40188599]
[-116.87164307 -197.42712402]
[-124.07819366 -210.61219788]
[-129.33488464 -224.68870544]
[-132.53468323 -239.37005615]
[-133.61245728 -254.35736084]
[-132.54624939 -269.34548950]
[-129.35780334 -284.02929688]
[-124.11198425 -298.10986328]
[-116.91562653 -311.30050659]
[-107.91521454 -323.33270264]
[-97.29400635 -333.96145630]
[-85.26821899 -342.97039795]
[-72.08268738 -350.17614746]
[-58.00585938 -355.43194580]
[-43.32431030 -358.63085938]
[-28.33694458 -359.70770264]
[-13.34888172 -358.64056396]
[1.33473802 -355.45120239]
[15.41497612 -350.20452881]
[28.60517502 -343.00735474]
[40.63680267 -334.00619507]
[51.26490784 -323.38430786]
[60.27311707 -311.35797119]
[67.47803497 -298.17199707]
[72.73297882 -284.09484863]
[75.93096161 -269.41308594]
[77.00688171 -254.42567444]
[75.93882751 -239.43766785]
[72.74855042 -224.75424194]
[67.50099945 -210.67433167]
[60.30300140 -197.48457336]
[51.30110550 -185.45350647]
[40.67857742 -174.82606506]
[28.65167618 -165.81860352]
[15.46525574 -158.61450195]
[20.71197319 -144.56202698]
[25.95869255 -130.50955200]
[31.24324226 -125.34280396]
[31.17720985 -116.20861053]
[36.21412659 -102.07958221]
[41.25104141 -87.95055389]
[52.81282425 -78.56042480]
[50.15880966 -62.96341705]
[55.36584854 -57.71855927]
[55.16382980 -48.58636475]
[59.98982620 -34.38390732]
[64.81582642 -20.18145180]
[69.64182281 -5.97899628]
[74.46781921 8.22345924]
[79.50473785 22.35248947]
[91.20503998 31.56943512]
[88.78353882 47.20423126]
[94.03025818 61.25670242]
[99.31480408 66.42345428]
[99.24877167 75.55764771]
[104.28569031 89.68667603]
[109.42765045 103.77781677]
[114.67436981 117.83028412]
[119.97628784 103.79854584]
[132.44958496 95.46687317]
[147.44203186 95.94276428]
[159.36181641 105.04873657]
[163.76315308 119.38848114]
[159.00445557 133.61363220]
[146.86059570 142.41854858]
[131.86093140 142.51922607]
[119.59927368 133.87718201]
[123.13894653 148.45355225]
[126.67861176 163.02993774]
[137.45393372 174.61453247]
[132.93850708 188.80819702]
[136.47817993 203.38456726]
[140.01785278 217.96095276]
[143.88215637 232.45463562]
[148.06916809 246.85842896]
[152.25617981 261.26220703]
[169.49230957 266.89013672]
[179.80924988 281.60882568]
[179.23066711 299.41659546]
[168.17689514 313.18923950]
[172.79089355 327.46197510]
[177.40490723 341.73471069]
[182.01892090 356.00744629]
[186.63291931 370.28018188]
[191.24693298 384.55291748]
[195.96707153 398.79089355]
[200.79306030 412.99334717]
[205.61906433 427.19580078]
[220.23239136 423.75982666]
[235.10913086 421.75027466]
[250.11036682 421.18594360]
[265.09603882 422.07211304]
[279.92620850 424.40048218]
[294.46243286 428.14929199]
[308.56900024 433.28359985]
[322.11413574 439.75540161]
[334.97143555 447.50430298]
[347.02081299 456.45797729]
[358.14974976 466.53277588]
[368.25439453 477.63467407]
[377.24035645 489.65997314]
[385.02374268 502.49642944]
[391.53189087 516.02416992]
[396.70401001 530.11688232]
[400.49185181 544.64300537]
[402.85998535 559.46685791]
[403.78634644 574.45007324]
[403.26229858 589.45281982]
[401.29269409 604.33489990]
[397.89593506 618.95739746]
[393.10372925 633.18377686]
[386.96084595 646.88122559]
[379.52462769 659.92187500]
[370.86453247 672.18389893]
[361.06137085 683.55291748]
[350.20669556 693.92266846]
[338.40185547 703.19635010]
[325.75708008 711.28741455]
[312.39041138 718.12023926]
[298.42669678 723.63116455]
[283.99627686 727.76861572]
[269.23388672 730.49395752]
[254.27738953 731.78186035]
[239.26641846 731.62017822]
[224.34112549 730.01043701]
[209.64086914 726.96777344]
[195.30291748 722.52044678]
[181.46112061 716.71008301]
[168.24473572 709.59088135]
[155.77717590 701.22937012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 168]
[22 167]
[23 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[36 156]
[37 155]
[38 154]
[42 153]
[43 152]
[44 151]
[46 149]
[47 148]
[48 147]
[49 138]
[50 137]
[52 136]
[53 135]
[54 133]
[55 132]
[57 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[65 123]
[67 121]
[68 120]
[69 119]
[70 117]
[71 116]
[72 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
