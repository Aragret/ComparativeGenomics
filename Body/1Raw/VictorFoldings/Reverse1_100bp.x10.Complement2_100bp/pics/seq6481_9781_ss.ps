%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[109.14936829 732.49810791]
[97.77014160 722.54803467]
[89.83072662 709.68499756]
[86.03707886 695.05285645]
[86.72653961 679.95263672]
[91.83779907 665.72711182]
[100.91636658 653.64111328]
[113.15498352 644.76940918]
[127.46540070 639.90075684]
[127.01879120 624.90740967]
[126.57218933 609.91406250]
[126.12557983 594.92071533]
[125.67897797 579.92736816]
[125.23236847 564.93402100]
[115.43001556 559.09619141]
[109.60266113 549.14843750]
[109.29782867 537.50366211]
[114.70687103 527.05175781]
[124.58879852 520.44232178]
[124.58879852 505.44232178]
[124.58879852 490.44232178]
[124.58879852 475.44232178]
[116.85149384 462.71505737]
[124.58879852 448.91488647]
[124.58879852 433.91488647]
[124.25382233 418.91860962]
[123.58403778 403.93359375]
[122.91425323 388.94854736]
[106.72434998 376.47140503]
[104.98373413 355.81069946]
[119.25688171 340.36892700]
[117.69636536 325.45031738]
[116.13584137 310.53170776]
[114.57531738 295.61309814]
[113.01479340 280.69451904]
[111.45426941 265.77590942]
[96.08767700 263.45474243]
[81.83274078 257.23678589]
[69.66025543 247.53918457]
[60.40081024 235.01631165]
[54.68813705 220.51554871]
[52.91570663 205.01998901]
[55.20965958 189.58174133]
[61.41984177 175.25054932]
[71.12960052 163.00238037]
[83.68377686 153.67292786]
[98.23284912 147.90069580]
[96.45037842 133.00698853]
[87.25550842 121.28932190]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[77.75343323 54.03512573]
[72.87528229 41.68951416]
[75.95270538 28.97686005]
[85.64440918 20.48566437]
[84.52876282 5.52721024]
[83.41311646 -9.43124294]
[82.29746246 -24.38969612]
[71.57941437 -39.36317062]
[79.81017303 -54.86225510]
[78.47193909 -69.80243683]
[77.13370514 -84.74262238]
[68.19606781 -97.79747772]
[74.76703644 -111.16428375]
[73.42880249 -126.10446930]
[72.09056854 -141.04466248]
[70.75233459 -155.98484802]
[69.41410065 -170.92503357]
[68.07586670 -185.86521912]
[65.07159424 -190.13386536]
[64.10206604 -194.67405701]
[64.92997742 -198.66525269]
[67.02675629 -201.50000000]
[66.35697174 -216.48504639]
[52.62916183 -219.14373779]
[39.84937286 -224.79873657]
[28.66211700 -233.16104126]
[19.63072205 -243.80517578]
[13.20898724 -256.19088745]
[9.71836853 -269.69055176]
[9.33189964 -283.62103271]
[12.06560802 -297.27807617]
[17.77788734 -309.97216797]
[26.17682838 -321.06311035]
[36.83513260 -329.99249268]
[49.21184921 -336.31167603]
[62.67983627 -339.70437622]
[62.45650864 -354.70272827]
[62.23318100 -369.70104980]
[51.17407990 -380.67074585]
[51.16125107 -395.88436890]
[61.68732452 -406.35992432]
[61.46399689 -421.35827637]
[61.24066925 -436.35659790]
[61.01734161 -451.35494995]
[47.33190918 -458.20822144]
[38.40836716 -470.64321899]
[36.29727173 -485.80242920]
[41.48374557 -500.20239258]
[52.77596664 -510.53411865]
[67.57907104 -514.42340088]
[82.49140930 -510.97659302]
[94.08624268 -500.98565674]
[99.69915771 -486.74649048]
[98.04034424 -471.53115845]
[89.49098969 -458.83599854]
[76.01567841 -451.57827759]
[76.23900604 -436.57992554]
[76.46233368 -421.58160400]
[76.68566132 -406.58325195]
[87.51896667 -396.42575073]
[87.95910645 -381.21847534]
[77.23151398 -369.92437744]
[77.45484161 -354.92605591]
[77.67816925 -339.92770386]
[93.30696106 -336.19039917]
[107.45269775 -328.54382324]
[119.15573120 -317.50048828]
[127.62052917 -303.80343628]
[132.26971436 -288.37640381]
[132.78344727 -272.26153564]
[129.12144470 -256.54879761]
[121.52606201 -242.30255127]
[110.50627899 -230.48913574]
[96.80355835 -221.91156006]
[81.34201050 -217.15483093]
[82.01179504 -202.16978455]
[83.01605225 -187.20344543]
[84.35428619 -172.26325989]
[85.69252014 -157.32307434]
[87.03075409 -142.38288879]
[88.36898804 -127.44270325]
[89.70722198 -112.50251770]
[98.54914093 -100.51628876]
[92.07388306 -86.08085632]
[93.41211700 -71.14067078]
[94.75035858 -56.20048904]
[103.82873535 -48.20614243]
[105.06591034 -35.77017975]
[97.25592041 -25.50534439]
[98.37156677 -10.54689217]
[99.48721313 4.41156149]
[100.60286713 19.37001419]
[113.80368805 29.79004288]
[115.41557312 46.86975861]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[117.51418304 117.66799164]
[111.34410095 131.22451782]
[113.12656403 146.11824036]
[127.50740814 147.99533081]
[141.01004028 153.26188660]
[152.84858704 161.60649109]
[162.33517456 172.53877258]
[168.91990662 185.41810608]
[172.22277832 199.49125671]
[172.05557251 213.93635559]
[168.43258667 227.91096497]
[161.56948853 240.60115051]
[151.87057495 251.26892090]
[139.90490723 259.29510498]
[126.37287140 264.21539307]
[127.93339539 279.13397217]
[129.49392700 294.05258179]
[131.05444336 308.97119141]
[132.61495972 323.88980103]
[134.17549133 338.80841064]
[143.15782166 342.47555542]
[150.14564514 349.12240601]
[154.20808411 357.80532837]
[154.82525635 367.31372070]
[151.95449829 376.33862305]
[146.03030396 383.65307617]
[137.89929199 388.27874756]
[138.56907654 403.26379395]
[139.23886108 418.24884033]
[142.04953003 422.64736938]
[142.81536865 427.22634888]
[141.81005859 431.17657471]
[139.58879089 433.91488647]
[139.58879089 448.91488647]
[147.32609558 462.71505737]
[139.58879089 475.44232178]
[139.58879089 490.44232178]
[139.58879089 505.44232178]
[139.58879089 520.44232178]
[153.48629761 533.31762695]
[153.55822754 551.94311523]
[140.22572327 564.48742676]
[140.67233276 579.48077393]
[141.11892700 594.47412109]
[141.56553650 609.46746826]
[142.01214600 624.46081543]
[142.45875549 639.45416260]
[157.03358459 643.46240234]
[169.77854919 651.58990479]
[179.56039429 663.11413574]
[185.50930786 677.01025391]
[187.09632874 692.04260254]
[184.18032837 706.87463379]
[177.02061462 720.18737793]
[166.25379944 730.79718018]
[152.83728027 737.76049805]
[137.96401978 740.45825195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[19 192]
[20 191]
[21 190]
[22 189]
[24 187]
[25 186]
[26 182]
[27 181]
[28 180]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[47 156]
[48 155]
[50 153]
[53 152]
[54 151]
[55 150]
[59 147]
[60 146]
[61 145]
[62 144]
[64 141]
[65 140]
[66 139]
[68 137]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[77 131]
[78 130]
[91 119]
[92 118]
[93 117]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
