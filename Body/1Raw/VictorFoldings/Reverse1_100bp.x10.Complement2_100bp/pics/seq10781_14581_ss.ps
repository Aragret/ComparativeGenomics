%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[117.91891479 677.80535889]
[103.40457916 673.68267822]
[90.45233917 665.94305420]
[79.94528961 655.11419678]
[72.59982300 641.93438721]
[68.91676331 627.30236816]
[69.14723206 612.21563721]
[73.27552032 597.70288086]
[81.02014160 584.75360107]
[91.85306549 574.25073242]
[105.03567505 566.91040039]
[119.66916656 563.23297119]
[119.89249420 548.23461914]
[120.11582184 533.23626709]
[120.33914948 518.23797607]
[120.45082092 503.23837280]
[120.45082092 488.23837280]
[120.45082092 473.23837280]
[120.45082092 458.23837280]
[120.45082092 443.23837280]
[104.44542694 439.53500366]
[89.77094269 432.13131714]
[77.26948547 421.44784546]
[67.65951538 408.09347534]
[61.49451828 392.83071899]
[59.13114166 376.53219604]
[60.70856857 360.13073730]
[66.14031219 344.56600952]
[75.11896515 330.73065186]
[87.13357544 319.41909790]
[101.49874878 311.28198242]
[117.39371490 306.78863525]
[116.72393036 291.80358887]
[116.05414581 276.81854248]
[115.38436127 261.83352661]
[114.71457672 246.84848022]
[114.04479218 231.86343384]
[113.37500763 216.87840271]
[111.59253693 201.98468018]
[108.70726776 187.26478577]
[105.82199097 172.54489136]
[102.93672180 157.82501221]
[98.56532288 151.86575317]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[87.78479004 74.56244659]
[84.46253204 59.93498611]
[80.49044037 45.47046280]
[76.51834106 31.00593948]
[65.40287781 19.74729729]
[69.49370575 5.42548227]
[65.52160645 -9.03904152]
[60.27489090 -23.09151268]
[53.79539490 -36.61985779]
[47.31589890 -50.14820480]
[40.83640289 -63.67654800]
[34.35690689 -77.20489502]
[21.41750526 -86.30887604]
[22.89794159 -101.12972260]
[8.26312160 -106.46449280]
[1.88470745 -120.27646637]
[7.06078434 -134.19564819]
[0.58128870 -147.72399902]
[-5.89820719 -161.25234985]
[-20.17687416 -156.58599854]
[-34.94247437 -153.82337952]
[-49.94234848 -153.01176453]
[-64.91983032 -154.16500854]
[-79.61864471 -157.26341248]
[-93.78725433 -162.25393677]
[-107.18323517 -169.05120850]
[-119.57735443 -177.53889465]
[-130.75753784 -187.57176208]
[-140.53247070 -198.97814941]
[-148.73489380 -211.56286621]
[-155.22447205 -225.11058044]
[-159.89012146 -239.38946533]
[-162.65203857 -254.15519714]
[-163.46295166 -269.15512085]
[-162.30899048 -284.13253784]
[-159.20988464 -298.83120728]
[-154.21868896 -312.99957275]
[-147.42079163 -326.39523315]
[-138.93251038 -338.78894043]
[-128.89910889 -349.96865845]
[-117.49225616 -359.74304199]
[-104.90714264 -367.94488525]
[-91.35911560 -374.43380737]
[-77.08000946 -379.09878540]
[-62.31414413 -381.85998535]
[-47.31418991 -382.67019653]
[-32.33681870 -381.51550293]
[-17.63830566 -378.41571045]
[-3.47016525 -373.42382812]
[9.92516613 -366.62530518]
[22.31847954 -358.13644409]
[33.49770355 -348.10250854]
[43.27155685 -336.69519043]
[51.47278595 -324.10968018]
[57.96105957 -310.56134033]
[62.62535858 -296.28201294]
[65.38587189 -281.51602173]
[66.19535065 -266.51602173]
[65.03996277 -251.53871155]
[61.93946075 -236.84034729]
[56.94691086 -222.67243958]
[50.14773560 -209.27743530]
[41.65828323 -196.88452148]
[31.62381172 -185.70578003]
[20.21603012 -175.93246460]
[7.63013840 -167.73184204]
[14.10963440 -154.20349121]
[20.58913040 -140.67514038]
[34.67898941 -135.98352051]
[41.44283676 -122.35614777]
[36.42628860 -107.60922241]
[48.90223312 -99.47287750]
[47.88525391 -83.68439484]
[54.36474609 -70.15604401]
[60.84424210 -56.62770081]
[67.32373810 -43.09935379]
[73.80323792 -29.57100868]
[75.68927002 -44.45196533]
[83.77234650 -57.08778381]
[96.49174500 -65.03868103]
[111.39155579 -66.76947021]
[125.59485626 -61.94596100]
[136.35920715 -51.49949265]
[141.60618591 -37.44712067]
[140.32269287 -22.50213432]
[132.75653076 -9.55017757]
[120.36861420 -1.09206963]
[105.55085754 1.23906028]
[91.16434479 -3.00689197]
[79.98612976 -13.01113796]
[83.95822906 1.45338583]
[94.78958130 11.67742729]
[90.98286438 27.03384209]
[94.95496368 41.49836731]
[98.92705536 55.96289062]
[107.26830292 43.49598694]
[121.95444489 40.44356918]
[134.57258606 48.55419922]
[137.89450073 63.18173981]
[130.01722717 75.94686890]
[115.45323944 79.53714752]
[102.54601288 71.89665222]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.65661621 154.93972778]
[120.54188538 169.65962219]
[123.42715454 184.37951660]
[126.31243134 199.09941101]
[132.66685486 185.51187134]
[144.90686035 176.84109497]
[159.83293152 175.35359192]
[173.54341125 181.43820190]
[182.45443726 193.50442505]
[184.23667908 208.39817810]
[178.42425537 222.22625732]
[166.53654480 231.37403870]
[151.68093872 233.45033264]
[137.74066162 227.91238403]
[128.36004639 216.20861816]
[129.02983093 231.19364929]
[129.69961548 246.17869568]
[130.36940002 261.16372681]
[131.03918457 276.14877319]
[131.70896912 291.13381958]
[132.37875366 306.11883545]
[145.82885742 308.35983276]
[158.57099915 313.19909668]
[170.10870361 320.44586182]
[179.99285889 329.81555176]
[187.83923340 340.94097900]
[193.34339905 353.38681030]
[196.29246521 366.66653442]
[196.57345581 380.26147461]
[194.17750549 393.64111328]
[189.20019531 406.28372192]
[181.83770752 417.69671631]
[172.37911987 427.43591309]
[161.19505310 435.12274170]
[148.72311401 440.45898438]
[135.45082092 443.23837280]
[135.45082092 458.23837280]
[135.45082092 473.23837280]
[135.45082092 488.23837280]
[135.45082092 503.23837280]
[138.58023071 511.82000732]
[135.33749390 518.46130371]
[135.11416626 533.45959473]
[134.89083862 548.45794678]
[134.66751099 563.45629883]
[149.18501282 567.56774902]
[162.14323425 575.29736328]
[172.65864563 586.11810303]
[180.01428223 599.29223633]
[183.70864868 613.92144775]
[183.48982239 629.00836182]
[179.37274170 643.52429199]
[171.63812256 656.47949219]
[160.81332397 666.99072266]
[147.63638306 674.34130859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[15 197]
[16 195]
[17 194]
[18 193]
[19 192]
[20 191]
[32 176]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 159]
[40 158]
[41 157]
[42 156]
[44 155]
[45 154]
[46 153]
[48 151]
[49 150]
[50 143]
[51 142]
[52 141]
[54 139]
[55 138]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[62 119]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
