%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[81.71157074 700.06225586]
[78.61720276 685.31365967]
[79.00811005 670.24896240]
[82.86321259 655.68066406]
[89.97460938 642.39440918]
[99.95879364 631.10668945]
[112.27732849 622.42626953]
[126.26589203 616.82116699]
[124.04077911 601.98712158]
[121.81565857 587.15307617]
[112.27598572 575.71441650]
[117.88054657 560.91912842]
[115.65543365 546.08508301]
[113.43031311 531.25103760]
[111.20520020 516.41699219]
[108.98007965 501.58297729]
[106.75496674 486.74893188]
[97.90984344 498.86352539]
[83.37761688 502.58029175]
[69.80222321 496.19998169]
[63.39014435 482.63955688]
[67.07289886 468.09866333]
[79.16678619 459.22521973]
[94.14263153 460.07604980]
[105.15454865 470.26379395]
[104.48476410 455.27874756]
[103.81497955 440.29370117]
[103.03366089 425.31405640]
[102.14083862 410.34066772]
[93.65972137 398.09649658]
[100.56189728 383.86026001]
[99.66908264 368.88684082]
[98.77626801 353.91342163]
[96.39595032 351.31219482]
[95.15731049 347.42880249]
[95.64924622 342.81237793]
[98.19312286 338.25433350]
[97.96979523 323.25601196]
[97.74646759 308.25765991]
[87.94793701 293.69897461]
[97.05005646 277.69168091]
[96.60345459 262.69833374]
[96.15684509 247.70498657]
[95.59864044 232.71537781]
[94.92884827 217.73034668]
[94.25906372 202.74530029]
[91.40165710 198.91851807]
[90.91787720 193.25610352]
[93.79916382 187.30549622]
[93.57583618 172.30715942]
[93.35250854 157.30882263]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.64915466 42.91450500]
[91.42582703 27.91616821]
[79.26454926 36.69701004]
[64.77664948 32.81102753]
[58.64207840 19.12281990]
[65.38301086 5.72282505]
[80.03028107 2.48902082]
[91.78573608 11.80376434]
[92.67855072 -3.16964102]
[93.57136536 -18.14304733]
[85.60941315 -28.29046440]
[86.66130066 -40.74346924]
[95.61964417 -48.87209320]
[96.73529816 -63.83054733]
[97.85094452 -78.78900146]
[98.63227081 -93.76863861]
[99.07887268 -108.76198578]
[88.52062225 -120.21454620]
[89.18713379 -135.41357422]
[100.17046356 -145.40867615]
[100.61707306 -160.40202332]
[100.72873688 -175.40161133]
[100.50540924 -190.39994812]
[100.28208160 -205.39828491]
[100.05875397 -220.39662170]
[99.83542633 -235.39495850]
[99.27721405 -250.38456726]
[90.73223114 -263.69973755]
[97.69827271 -276.86499023]
[89.15328979 -290.18014526]
[96.11933136 -303.34539795]
[95.22651672 -318.31878662]
[94.33370209 -333.29220581]
[85.78871918 -346.60736084]
[92.75476074 -359.77261353]
[91.86194611 -374.74603271]
[90.96913147 -389.71942139]
[76.43453217 -394.02307129]
[64.25025940 -403.04077148]
[55.88761139 -415.68365479]
[52.35643005 -430.42495728]
[54.08311462 -445.48464966]
[60.85916519 -459.04418945]
[71.86633301 -469.46618652]
[85.77545929 -475.49212646]
[100.90694427 -476.39437866]
[115.43358612 -472.06396484]
[127.60121918 -463.02380371]
[135.94055176 -450.36557007]
[139.44456482 -435.61773682]
[137.69012451 -420.56127930]
[130.88909912 -407.01425171]
[119.86273956 -396.61254883]
[105.94253540 -390.61224365]
[106.83535004 -375.63882446]
[107.72816467 -360.66543579]
[116.20928955 -348.42126465]
[109.30710602 -334.18502808]
[110.19992065 -319.21160889]
[111.09274292 -304.23822021]
[119.57386017 -291.99401855]
[112.67168427 -277.75778198]
[121.15280151 -265.51361084]
[114.25062561 -251.27738953]
[116.63093567 -248.67614746]
[117.86958313 -244.79273987]
[117.37764740 -240.17633057]
[114.83376312 -235.61828613]
[115.05709076 -220.61994934]
[115.28041840 -205.62161255]
[115.50374603 -190.62327576]
[115.72707367 -175.62493896]
[117.98886871 -172.91999817]
[119.05287170 -168.98516846]
[118.35529327 -164.39532471]
[115.61042023 -159.95541382]
[115.16381836 -144.96206665]
[125.53276062 -134.33094788]
[125.29341888 -119.11920166]
[114.07221985 -108.31538391]
[113.62561798 -93.32202911]
[115.76437378 -90.51880646]
[116.65161133 -86.54038239]
[115.74978638 -81.98625946]
[112.80939484 -77.67334747]
[111.69374847 -62.71489716]
[110.57810211 -47.75644302]
[119.03870392 -32.38162231]
[108.54477692 -17.25023079]
[107.65195465 -2.27682519]
[106.75914001 12.69658089]
[106.42416382 27.69284058]
[106.64749146 42.69117737]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.35084534 157.08549500]
[108.57417297 172.08383179]
[108.79750061 187.08216858]
[109.24410248 202.07551575]
[109.91388702 217.06056213]
[110.58367920 232.04559326]
[114.09315491 240.47894287]
[111.15019989 247.25839233]
[111.59680176 262.25173950]
[112.04341125 277.24508667]
[120.87892151 286.64169312]
[120.94223022 299.13888550]
[112.74480438 308.03433228]
[112.96813202 323.03268433]
[113.19146729 338.03100586]
[113.74967194 353.02062988]
[114.64248657 367.99401855]
[115.53530884 382.96743774]
[124.08029175 396.28259277]
[117.11425018 409.44784546]
[118.00706482 424.42123413]
[121.64171600 432.80142212]
[118.80001831 439.62390137]
[119.46980286 454.60894775]
[120.13958740 469.59399414]
[121.58900452 484.52380371]
[123.81412506 499.35784912]
[126.03924561 514.19189453]
[128.26435852 529.02593994]
[130.48947144 543.85998535]
[132.71459961 558.69403076]
[142.41342163 571.19372559]
[136.64970398 584.92797852]
[138.87481689 599.76202393]
[141.09994507 614.59606934]
[156.11738586 615.85021973]
[170.44062805 620.53436279]
[183.29722595 628.39599609]
[193.99383545 639.01104736]
[201.95361328 651.80706787]
[206.74728394 666.09405518]
[208.11633301 681.10144043]
[205.98693848 696.01995850]
[200.47393799 710.04504395]
[191.87463379 722.42041016]
[180.65277100 732.47857666]
[167.41352844 739.67712402]
[152.87089539 743.62786865]
[137.80914307 744.11779785]
[123.04050446 741.12042236]
[109.36145782 734.79742432]
[97.50968933 725.48980713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[25 183]
[26 182]
[27 181]
[28 179]
[29 178]
[31 176]
[32 175]
[33 174]
[37 173]
[38 172]
[39 171]
[41 168]
[42 167]
[43 166]
[44 164]
[45 163]
[46 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[56 154]
[57 153]
[58 152]
[59 151]
[60 150]
[66 149]
[67 148]
[68 147]
[71 145]
[72 144]
[73 143]
[74 139]
[75 138]
[78 135]
[79 134]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 122]
[87 120]
[89 118]
[90 117]
[91 116]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
