%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[-13.65605831 508.08752441]
[-23.94186211 497.05786133]
[-31.16083527 483.81637573]
[-34.85918427 469.19540405]
[-34.80443192 454.11401367]
[-31.00001526 439.52029419]
[-23.68508720 426.33154297]
[-13.31946850 415.37689209]
[-0.55475044 407.34490967]
[13.80666542 402.74047852]
[12.91384983 387.76708984]
[12.02103329 372.79367065]
[11.12821770 357.82028198]
[10.23540211 342.84686279]
[9.34258556 327.87347412]
[8.44976997 312.90005493]
[2.60067439 326.71264648]
[-5.79729605 339.14141846]
[-16.43017578 349.72167969]
[-28.90044975 358.05789185]
[-42.74190521 363.83837891]
[-57.43706894 366.84704590]
[-72.43655396 366.97143555]
[-87.17958832 364.20684814]
[-101.11500549 358.65670776]
[-113.72180176 350.52844238]
[-124.52867889 340.12597656]
[-133.13160706 327.83816528]
[-139.20895386 314.12445068]
[-142.53350830 299.49752808]
[-142.98100281 284.50421143]
[-140.53469849 269.70501709]
[-135.28604126 255.65328979]
[-127.43126678 242.87429810]
[-117.26403046 231.84582520]
[-105.16442871 222.98017883]
[-91.58483124 216.60879517]
[-77.03291321 212.96987915]
[-62.05271149 212.19947815]
[-47.20426941 214.32638550]
[-33.04270935 219.27110291]
[-20.09746552 226.84873962]
[-8.85251331 236.77603149]
[0.27175069 248.68182373]
[6.93420839 262.12100220]
[10.88577938 276.59115601]
[11.97887611 291.54516602]
[17.64166260 277.65515137]
[23.30444908 263.76513672]
[22.28131485 260.39086914]
[22.84169579 256.35342407]
[25.27950096 252.40243530]
[29.54272270 249.39045715]
[35.82008362 235.76713562]
[42.09744263 222.14381409]
[40.39651108 207.34664917]
[53.19893265 198.05104065]
[59.06789398 184.24685669]
[64.52325439 170.27406311]
[69.97860718 156.30125427]
[75.43396759 142.32846069]
[72.85530090 127.65877533]
[85.08174133 117.61762238]
[90.53710175 103.64482117]
[90.30211639 95.58769226]
[96.17910004 89.50559998]
[101.84188843 75.61557007]
[107.50466919 61.72554398]
[113.16745758 47.83551407]
[113.50935364 38.70748520]
[119.01934052 33.78185654]
[124.88830566 19.97767830]
[130.75726318 6.17350197]
[129.03630066 -9.55382729]
[141.13650513 -18.23913383]
[147.00546265 -32.04331207]
[132.33021545 -28.93891144]
[120.65671539 -38.35853577]
[120.59022522 -53.35838699]
[132.17976379 -62.88113403]
[146.88194275 -59.90696335]
[153.85881042 -46.62997055]
[160.73822021 -59.95940018]
[167.61763000 -73.28882599]
[174.49705505 -86.61825562]
[181.37646484 -99.94768524]
[188.25587463 -113.27711487]
[188.00808716 -118.49110413]
[189.62353516 -122.84352875]
[192.46203613 -125.76894379]
[195.75172424 -127.03791809]
[203.21945190 -140.04687500]
[203.37959290 -155.86726379]
[216.42613220 -163.05316162]
[223.89387512 -176.06210327]
[231.36161804 -189.07106018]
[238.82936096 -202.08001709]
[246.29708862 -215.08895874]
[253.76483154 -228.09791565]
[241.80018616 -237.17951965]
[231.09513855 -247.71661377]
[221.82548523 -259.53616333]
[214.14341736 -272.44409180]
[208.17510986 -286.22839355]
[204.01855469 -300.66278076]
[201.74198914 -315.51019287]
[201.38282776 -330.52682495]
[202.94696045 -345.46609497]
[206.40869141 -360.08270264]
[211.71116638 -374.13659668]
[218.76734924 -387.39700317]
[227.46133423 -399.64620972]
[237.65039062 -410.68304443]
[249.16717529 -420.32626343]
[261.82260132 -428.41754150]
[275.40881348 -434.82400513]
[289.70275879 -439.44046021]
[304.46969604 -442.19107056]
[319.46713257 -443.03070068]
[334.44882202 -441.94555664]
[349.16873169 -438.95343018]
[363.38513184 -434.10348511]
[376.86462402 -427.47537231]
[389.38583374 -419.17791748]
[400.74313354 -409.34735107]
[410.75003052 -398.14511108]
[419.24224854 -385.75515747]
[426.08029175 -372.38095093]
[431.15188599 -358.24209595]
[434.37374878 -343.57077026]
[435.69299316 -328.60787964]
[435.08792114 -313.59915161]
[432.56848145 -298.79101562]
[428.17608643 -284.42663574]
[421.98278809 -270.74191284]
[414.09036255 -257.96154785]
[404.62835693 -246.29542542]
[393.75216675 -235.93507385]
[381.64038086 -227.05064392]
[368.49188232 -219.78802490]
[354.52261353 -214.26647949]
[339.96191406 -210.57666016]
[325.04891968 -208.77917480]
[310.02853394 -208.90353394]
[295.14733887 -210.94769287]
[280.64971924 -214.87808228]
[266.77380371 -220.63017273]
[259.30606079 -207.62123108]
[251.83830261 -194.61227417]
[244.37055969 -181.60331726]
[236.90283203 -168.59436035]
[229.43508911 -155.58541870]
[229.80909729 -140.69551086]
[216.22840881 -132.57913208]
[208.76066589 -119.57017517]
[201.58529663 -106.39770508]
[194.70588684 -93.06827545]
[187.82647705 -79.73884583]
[180.94706726 -66.40941620]
[174.06765747 -53.07998657]
[167.18824768 -39.75055695]
[160.80963135 -26.17434883]
[154.94067383 -12.37017250]
[157.08142090 2.36978889]
[144.56144714 12.04246235]
[138.69247437 25.84663963]
[132.82351685 39.65081787]
[127.05748749 53.49830246]
[121.39469910 67.38832855]
[115.73191071 81.27835846]
[110.06912231 95.16838074]
[104.50989532 109.10018158]
[99.05454254 123.07298279]
[101.24299622 138.74209595]
[89.40676117 147.78381348]
[83.95140839 161.75662231]
[78.49604797 175.72941589]
[73.04069519 189.70220947]
[73.84787750 193.96864319]
[73.30958557 197.87693787]
[71.70360565 201.04809570]
[69.40229797 203.23225403]
[66.82225037 204.32839966]
[68.07418823 220.09999084]
[55.72076035 228.42117310]
[49.44340134 242.04449463]
[43.16603851 255.66781616]
[37.19447708 269.42791748]
[31.53169060 283.31793213]
[25.86890411 297.20797729]
[23.42317581 312.00723267]
[24.31599236 326.98065186]
[25.20880699 341.95404053]
[26.10162354 356.92745972]
[26.99444008 371.90084839]
[27.88725471 386.87426758]
[28.78007126 401.84768677]
[43.58687592 404.71286011]
[57.21559906 411.17111206]
[68.80952454 420.81640625]
[77.63985443 433.04244995]
[83.15150452 447.08068848]
[84.99800873 462.04870605]
[83.06328583 477.00555420]
[77.46896362 491.01107788]
[68.56670380 503.18484497]
[56.91611099 512.76159668]
[43.24954987 519.13934326]
[28.42610931 521.91723633]
[13.37760735 520.92053223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[47 190]
[48 189]
[49 188]
[53 187]
[54 186]
[55 185]
[57 183]
[58 178]
[59 177]
[60 176]
[61 175]
[63 173]
[64 172]
[66 171]
[67 170]
[68 169]
[69 168]
[71 167]
[72 166]
[73 165]
[75 163]
[76 162]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[87 156]
[91 155]
[92 154]
[94 152]
[95 151]
[96 150]
[97 149]
[98 148]
[99 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
