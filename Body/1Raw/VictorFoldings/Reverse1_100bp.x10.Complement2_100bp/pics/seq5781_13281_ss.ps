%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[271.21432495 421.58255005]
[282.59295654 411.76705933]
[274.55178833 399.10452271]
[266.51062012 386.44198608]
[254.77688599 383.50158691]
[247.97401428 373.01803589]
[250.20646667 360.31454468]
[242.35470581 347.53369141]
[234.50296021 334.75283813]
[226.65119934 321.97201538]
[218.70451355 309.24996948]
[210.66334534 296.58743286]
[202.62217712 283.92492676]
[189.26777649 277.32876587]
[188.40138245 261.53128052]
[180.36021423 248.86877441]
[172.22499084 236.26646423]
[163.99618530 223.72505188]
[155.48936462 211.37054443]
[146.70875549 199.20909119]
[137.92816162 187.04763794]
[137.84318542 202.04739380]
[130.35519409 215.04470825]
[117.42153931 222.64210510]
[102.42302704 222.85363770]
[89.28025055 215.62402344]
[81.42868805 202.84306335]
[80.92072296 187.85166931]
[87.88913727 174.56854248]
[100.51240540 166.46588135]
[115.49082947 165.66169739]
[128.90843201 172.36560059]
[122.02901459 159.03617859]
[115.14960480 145.70674133]
[108.27018738 132.37731934]
[101.39077759 119.04788971]
[87.61955261 114.54238129]
[80.97425842 101.66657257]
[85.27979279 87.83152771]
[85.00799561 102.82906342]
[79.94318390 116.94811249]
[70.61985016 128.69866943]
[58.02191162 136.84065247]
[43.47885513 140.51483154]
[28.52544975 139.33345032]
[14.73976040 133.42118835]
[3.57662559 123.40199280]
[-3.78588390 110.33319092]
[-6.57078409 95.59398651]
[-4.48417807 80.73982239]
[2.25372958 67.33831024]
[12.93187141 56.80373383]
[26.42335892 50.24783325]
[41.30440140 48.36247635]
[56.00456619 51.34661865]
[68.97251129 58.88534164]
[78.83980560 70.18323517]
[75.51753998 55.55577087]
[72.19528198 40.92831039]
[68.64764404 37.09929657]
[67.08023071 32.72933960]
[67.36749268 28.66332054]
[69.06674957 25.57384300]
[66.40095520 10.81262589]
[63.73516083 -3.94859147]
[61.06936646 -18.70980835]
[58.40356827 -33.47102737]
[44.58771133 -40.28484726]
[37.51585388 -53.76973724]
[39.71440125 -68.65699005]
[50.13288879 -79.26798248]
[47.46709442 -94.02920532]
[37.40039825 -106.23461914]
[42.75264359 -120.13436127]
[38.78055191 -125.41962433]
[38.16612625 -131.06936646]
[40.23408890 -135.37431335]
[38.00897217 -150.20835876]
[35.78385544 -165.04240417]
[33.55873871 -179.87643433]
[29.74577141 -185.27763367]
[29.29983139 -190.94314575]
[31.49505043 -195.18461609]
[29.71258545 -210.07833862]
[27.93011856 -224.97206116]
[16.74834251 -214.97366333]
[1.93478417 -217.33131409]
[-5.59054995 -230.30703735]
[-0.28026474 -244.33560181]
[13.95109558 -249.07568359]
[26.61182213 -241.03446960]
[25.94203758 -256.01950073]
[25.27225113 -271.00454712]
[10.56552029 -274.41256714]
[-2.67581916 -281.66305542]
[-13.46917057 -292.21795654]
[-21.01359558 -305.29406738]
[-24.74924660 -319.92098999]
[-24.39891624 -335.01336670]
[-19.98859978 -349.45123291]
[-11.84557247 -362.16317749]
[-0.57409954 -372.20593262]
[12.98939896 -378.83419800]
[27.83842278 -381.55615234]
[42.87107468 -380.16983032]
[56.97183228 -374.77804565]
[69.09432983 -365.78094482]
[78.33898926 -353.84616089]
[84.01979828 -339.85937500]
[85.71520996 -324.85842896]
[83.29940796 -309.95654297]
[76.95166016 -296.25949097]
[67.14300537 -284.78375244]
[54.60132980 -276.38082886]
[40.25728989 -271.67434692]
[40.92707443 -256.68930054]
[41.59686279 -241.70425415]
[42.82383728 -226.75451660]
[44.60630035 -211.86080933]
[46.38876724 -196.96708679]
[48.39278030 -182.10156250]
[50.61790085 -167.26751709]
[52.84301758 -152.43347168]
[55.06813431 -137.59942627]
[57.51386261 -122.80015564]
[67.38987732 -111.65055847]
[62.22830963 -96.69499969]
[64.89410400 -81.93378448]
[78.36599731 -75.63726044]
[85.63294983 -62.45942307]
[83.72457123 -47.35275269]
[73.16478729 -36.13682175]
[75.83058167 -21.37560463]
[78.49637604 -6.61438704]
[81.16217041 8.14683056]
[83.82797241 22.90804672]
[86.82274628 37.60605240]
[90.14500427 52.23351288]
[93.46726227 66.86096954]
[98.60922241 80.95211029]
[112.38044739 85.45761871]
[119.02574158 98.33342743]
[114.72020721 112.16847229]
[121.59961700 125.49790192]
[128.47903442 138.82733154]
[135.35844421 152.15676880]
[142.23785400 165.48619080]
[150.08961487 178.26702881]
[158.87020874 190.42848206]
[167.65081787 202.58995056]
[172.41378784 204.72564697]
[175.56605530 208.13394165]
[176.89257812 211.98822021]
[176.53759766 215.49624634]
[184.76640320 228.03764343]
[192.09065247 233.49595642]
[193.02273560 240.82759094]
[201.06391907 253.49012756]
[214.99346924 260.99200439]
[215.28469849 275.88375854]
[223.32586670 288.54626465]
[231.36703491 301.20880127]
[238.60922241 306.77554321]
[239.43203735 314.12023926]
[247.28379822 326.90109253]
[255.13555908 339.68194580]
[262.98730469 352.46276855]
[279.37893677 360.85305786]
[279.17315674 378.40081787]
[287.21432495 391.06335449]
[295.25549316 403.72589111]
[308.97796631 397.60122681]
[323.44601440 393.53997803]
[338.35119629 391.62863159]
[353.37585449 391.90798950]
[368.19967651 394.37203979]
[382.50674438 398.96829224]
[395.99209595 405.59878540]
[408.36828613 414.12216187]
[419.37149048 424.35678101]
[428.76718140 436.08444214]
[436.35513306 449.05523682]
[441.97357178 462.99261475]
[445.50274658 477.59957886]
[446.86740112 492.56472778]
[446.03851318 507.56906128]
[443.03369141 522.29284668]
[437.91702271 536.42211914]
[430.79754639 549.65582275]
[421.82702637 561.71185303]
[411.19665527 572.33325195]
[399.13305664 581.29351807]
[385.89331055 588.40179443]
[371.75967407 593.50646973]
[357.03338623 596.49884033]
[342.02832031 597.31500244]
[327.06433105 595.93768311]
[312.46038818 592.39611816]
[298.52777100 586.76586914]
[285.56341553 579.16699219]
[273.84368896 569.76135254]
[263.61840820 558.74945068]
[255.10551453 546.36602783]
[248.48646545 532.87512207]
[243.90232849 518.56414795]
[241.45082092 503.73822021]
[241.18421936 488.71334839]
[243.10816956 473.80978394]
[247.18170166 459.34518433]
[253.31796265 445.62789917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 171]
[3 170]
[4 169]
[7 167]
[8 166]
[9 165]
[10 164]
[11 162]
[12 161]
[13 160]
[15 158]
[16 157]
[17 155]
[18 154]
[19 150]
[20 149]
[21 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[39 140]
[57 139]
[58 138]
[59 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[71 128]
[72 127]
[74 125]
[77 124]
[78 123]
[79 122]
[80 121]
[83 120]
[84 119]
[85 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
