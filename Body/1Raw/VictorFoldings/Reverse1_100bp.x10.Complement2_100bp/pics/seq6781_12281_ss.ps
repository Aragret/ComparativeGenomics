%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[2.18619251 478.15042114]
[-5.56534863 464.56927490]
[-2.72272873 449.19223022]
[9.37185383 439.27984619]
[9.37185383 424.27984619]
[1.04289699 415.50744629]
[0.92013574 403.01071167]
[9.61476803 393.48358154]
[9.83809566 378.48522949]
[10.06142330 363.48690796]
[10.28475189 348.48855591]
[10.50807953 333.49023438]
[3.58939171 346.79931641]
[-6.49892378 357.90002441]
[-19.08774567 366.05609131]
[-33.34210205 370.72656250]
[-48.31655502 371.60165405]
[-63.01789856 368.62335205]
[-76.47105408 361.98913574]
[-87.78370667 352.13906860]
[-96.20554352 339.72647095]
[-101.17797089 325.57461548]
[-102.37118530 310.62213135]
[-99.70603943 295.86080933]
[-93.35930634 282.26968384]
[-83.75194550 270.75018311]
[-71.52117157 262.06640625]
[-57.47821808 256.79425049]
[-42.55449295 255.28347778]
[-27.73983955 257.63421631]
[-14.01686001 263.69061279]
[-2.29574871 273.05093384]
[6.64607477 285.09432983]
[12.21553135 299.02206421]
[14.04318237 313.91543579]
[19.08009911 299.78640747]
[24.11701584 285.65737915]
[21.10272598 271.07095337]
[33.02478409 260.67022705]
[38.06169891 246.54119873]
[43.09861374 232.41217041]
[40.08432388 217.82575989]
[52.00638199 207.42503357]
[51.29147339 200.06903076]
[57.22489929 193.12408447]
[62.47161865 179.07162476]
[67.71833801 165.01914978]
[72.96505737 150.96667480]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[107.73575592 57.83907700]
[112.98247528 43.78660583]
[118.22919464 29.73413467]
[123.47590637 15.68166256]
[111.21916199 24.32875443]
[96.36019897 26.38084602]
[82.21853638 21.37949753]
[71.95346832 10.44202042]
[67.85823822 -3.98812413]
[70.84772491 -18.68720436]
[80.25407410 -30.37140846]
[93.97587585 -36.43045807]
[108.94765472 -35.51074219]
[121.82466888 -27.81772804]
[129.73016357 -15.07005596]
[130.89804077 -0.11556701]
[138.36576843 -13.12451935]
[145.83351135 -26.13347244]
[153.20420837 -39.19765854]
[153.12876892 -55.01868439]
[166.06687927 -62.39801788]
[173.34011841 -75.51671600]
[159.93624878 -68.78347015]
[144.93727112 -68.95827484]
[131.69398499 -76.00208282]
[123.16496277 -88.34128571]
[121.25562286 -103.21926880]
[126.39250946 -117.31225586]
[137.42803955 -127.47183990]
[151.89683533 -131.42834473]
[166.56654358 -128.29786682]
[178.15989685 -118.77978516]
[184.08692932 -105.00043488]
[183.02349854 -90.03816223]
[192.33837891 -101.79541016]
[201.65325928 -113.55266571]
[210.96815491 -125.30991364]
[213.47332764 -140.93151855]
[227.44148254 -146.10256958]
[236.75636292 -157.85981750]
[225.88694763 -168.21215820]
[216.00396729 -179.51002502]
[207.18930054 -191.65980530]
[199.51602173 -204.56080627]
[193.04768372 -218.10614014]
[187.83790588 -232.18354797]
[183.92985535 -246.67639160]
[181.35592651 -261.46456909]
[180.13742065 -276.42553711]
[180.28445435 -291.43530273]
[181.79580688 -306.36953735]
[184.65895081 -321.10446167]
[188.85015869 -335.51794434]
[194.33470154 -349.49060059]
[201.06715393 -362.90661621]
[208.99168396 -375.65481567]
[218.04266357 -387.62960815]
[228.14508057 -398.73168945]
[239.21520996 -408.86911011]
[251.16133118 -417.95785522]
[263.88446045 -425.92263794]
[277.27914429 -432.69741821]
[291.23440552 -438.22607422]
[305.63458252 -442.46279907]
[320.36038208 -445.37246704]
[335.28976440 -446.93096924]
[350.29901123 -447.12539673]
[365.26373291 -445.95416260]
[380.05996704 -443.42694092]
[394.56509399 -439.56469727]
[408.65887451 -434.39938354]
[422.22457886 -427.97387695]
[435.14974976 -420.34136963]
[447.32730103 -411.56515503]
[458.65631104 -401.71789551]
[469.04293823 -390.88122559]
[478.40109253 -379.14492798]
[486.65322876 -366.60629272]
[493.73092651 -353.36917114]
[499.57562256 -339.54330444]
[504.13879395 -325.24319458]
[507.38269043 -310.58740234]
[509.28039551 -295.69735718]
[509.81622314 -280.69641113]
[508.98568726 -265.70889282]
[506.79568481 -250.85900879]
[503.26440430 -236.26979065]
[498.42105103 -222.06214905]
[492.30575562 -208.35380554]
[484.96926880 -195.25836182]
[476.47229004 -182.88430786]
[466.88531494 -171.33421326]
[456.28771973 -160.70378113]
[444.76733398 -151.08108521]
[432.41964722 -142.54586792]
[419.34695435 -135.16886902]
[405.65762329 -129.01119995]
[391.46502686 -124.12390900]
[376.88681030 -120.54747009]
[362.04376221 -118.31153870]
[347.05889893 -117.43463135]
[332.05636597 -117.92401886]
[317.16052246 -119.77564240]
[302.49475098 -122.97416687]
[288.18060303 -127.49307251]
[274.33670044 -133.29493713]
[261.07775879 -140.33164978]
[248.51362610 -148.54493713]
[239.19873047 -136.78768921]
[237.35983276 -122.00703430]
[222.72540283 -115.99503326]
[213.41052246 -104.23777771]
[204.09564209 -92.48052979]
[194.78074646 -80.72327423]
[186.45880127 -68.24348450]
[179.18557739 -55.12479019]
[179.78123474 -40.24209976]
[166.32290649 -31.92442703]
[165.82885742 -24.55030251]
[158.84246826 -18.66573143]
[151.37472534 -5.65677834]
[143.90698242 7.35217428]
[137.52838135 20.92838097]
[132.28166199 34.98085403]
[127.03494263 49.03332520]
[121.78822327 63.08579636]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[87.01752472 156.21339417]
[81.77080536 170.26586914]
[76.52409363 184.31834412]
[71.27737427 198.37080383]
[66.13541412 212.46194458]
[68.78942871 228.05895996]
[57.22764587 237.44908142]
[52.19072723 251.57810974]
[47.15381241 265.70715332]
[49.80782700 281.30416870]
[38.24604416 290.69427490]
[33.20912933 304.82330322]
[28.17221260 318.95233154]
[25.50641632 333.71356201]
[25.28308868 348.71188354]
[25.05976105 363.71023560]
[24.83643341 378.70855713]
[24.61310577 393.70690918]
[33.95254517 409.57690430]
[24.37185287 424.27984619]
[24.37185287 439.27984619]
[36.46643448 449.19223022]
[39.30905533 464.56927490]
[31.55751419 478.15042114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[35 199]
[36 198]
[37 197]
[39 195]
[40 194]
[41 193]
[43 191]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[70 176]
[71 175]
[72 174]
[73 172]
[75 170]
[76 169]
[88 168]
[89 167]
[90 166]
[91 165]
[93 163]
[94 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
