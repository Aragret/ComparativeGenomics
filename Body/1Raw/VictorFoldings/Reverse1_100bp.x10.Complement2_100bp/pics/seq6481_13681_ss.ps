%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[72.00655365 686.68395996]
[58.66139603 693.62274170]
[44.29167175 698.06695557]
[29.35930824 699.87365723]
[14.34432125 698.98492432]
[-0.27062181 695.42919922]
[-14.01570988 689.32080078]
[-26.44909477 680.85614014]
[-37.17109680 670.30725098]
[-45.83704376 658.01330566]
[-52.16836548 644.36950684]
[-55.96153641 629.81433105]
[-57.09461975 614.81579590]
[-55.53118896 599.85601807]
[-51.32150650 585.41583252]
[-44.60089493 571.95953369]
[-35.58539581 559.91955566]
[-24.56481361 549.68304443]
[-11.89342213 541.57897949]
[2.02145052 535.86791992]
[16.73249626 532.73345947]
[31.76681900 532.27636719]
[33.99193573 517.44232178]
[36.21705246 502.60824585]
[38.44216919 487.77420044]
[40.66728592 472.94015503]
[34.90356827 459.20593262]
[44.60239792 446.70620728]
[46.82751465 431.87216187]
[48.94213867 417.02197266]
[50.94615173 402.15643311]
[41.73948288 390.50427246]
[43.56007385 375.39996338]
[55.84435654 365.82217407]
[57.84836960 350.95666504]
[59.85238266 336.09112549]
[61.85639572 321.22558594]
[50.52055359 313.60879517]
[43.53887177 301.79418945]
[42.32291794 288.05844116]
[47.16678238 275.07708740]
[57.17858124 265.40341187]
[70.44410706 260.96624756]
[72.66922760 246.13220215]
[70.55273438 239.05108643]
[75.03948975 231.09452820]
[77.48521423 216.29525757]
[79.93093872 201.49598694]
[82.37667084 186.69671631]
[84.82239532 171.89744568]
[87.26812744 157.09817505]
[89.71385193 142.29888916]
[92.15957642 127.49962616]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[77.22128296 37.39526749]
[68.27021790 26.73250771]
[64.80314636 13.31767654]
[67.44149780 -0.21702784]
[75.61442566 -11.24118042]
[87.68116760 -17.63733673]
[87.23456573 -32.63068771]
[86.78795624 -47.62403870]
[86.34135437 -62.61738586]
[85.89474487 -77.61074066]
[77.74999237 -91.17442322]
[85.10492706 -104.12641907]
[84.65831757 -119.11977386]
[76.51356506 -132.68345642]
[83.86849976 -145.63545227]
[83.42189026 -160.62879944]
[82.97528839 -175.62214661]
[79.59175873 -184.10682678]
[82.63532257 -190.84169006]
[81.74250793 -205.81509399]
[80.18198395 -220.73370361]
[78.62145996 -235.65231323]
[77.06093597 -250.57090759]
[68.41412354 -238.31396484]
[54.25184250 -233.37132263]
[39.85626984 -237.58647156]
[30.59659576 -249.38725281]
[29.92645454 -264.37228394]
[38.09579086 -276.95248413]
[52.05764389 -282.43579102]
[66.60458374 -278.77706909]
[76.31141663 -267.33981323]
[64.06420135 -276.68389893]
[59.71824646 -291.27725220]
[64.73932648 -305.46359253]
[77.00429535 -313.87243652]
[77.22762299 -328.87075806]
[77.45095062 -343.86911011]
[77.67427826 -358.86743164]
[77.89760590 -373.86578369]
[78.12093353 -388.86410522]
[64.64562225 -396.12182617]
[56.09627151 -408.81698608]
[54.43745804 -424.03234863]
[60.05037308 -438.27151489]
[71.64520264 -448.26245117]
[86.55754089 -451.70925903]
[101.36064911 -447.81997681]
[112.65287018 -437.48825073]
[117.83934021 -423.08828735]
[115.72824860 -407.92907715]
[106.80470276 -395.49407959]
[93.11927795 -388.64077759]
[92.89595032 -373.64245605]
[92.67262268 -358.64410400]
[92.44929504 -343.64578247]
[92.22596741 -328.64743042]
[92.00263214 -313.64910889]
[104.01181030 -304.87881470]
[108.60828400 -290.54925537]
[103.82975006 -276.09176636]
[91.30976105 -267.11648560]
[91.97954559 -252.13143921]
[93.54006195 -237.21282959]
[95.10058594 -222.29421997]
[96.66110992 -207.37562561]
[106.92344666 -218.31565857]
[121.91074371 -218.93267822]
[133.03761292 -208.87321472]
[133.93006897 -193.89979553]
[124.07688141 -182.58985901]
[109.12239075 -181.42227173]
[97.63365936 -191.06501770]
[97.96863556 -176.06875610]
[98.41524506 -161.07540894]
[98.86184692 -146.08206177]
[106.97465515 -133.59080505]
[99.65167236 -119.56637573]
[100.09827423 -104.57302856]
[108.21108246 -92.08176422]
[100.88809204 -78.05734253]
[101.33470154 -63.06399155]
[101.78131104 -48.07064438]
[102.22791290 -33.07729340]
[102.67452240 -18.08394241]
[117.08593750 -10.77480030]
[125.89556122 2.88339448]
[126.61934662 19.21413231]
[118.96514130 33.76434708]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[115.07222748 98.60835266]
[126.59228516 89.00167084]
[140.88867188 84.46148682]
[155.84060669 85.66130829]
[169.23005676 92.42314911]
[179.07078552 103.74393463]
[183.90296936 117.94428253]
[183.00979614 132.91766357]
[176.52374268 146.44287109]
[165.40698242 156.51351929]
[151.30862427 161.63566589]
[136.32008362 161.04949951]
[122.66481781 154.84196472]
[112.36849213 143.93389893]
[106.95884705 129.94535828]
[104.51312256 144.74462891]
[102.06739807 159.54389954]
[99.62166595 174.34317017]
[97.17594147 189.14244080]
[94.73021698 203.94171143]
[92.28448486 218.74098206]
[89.83876038 233.54025269]
[87.50327301 248.35731506]
[85.27815247 263.19137573]
[98.31817627 273.35745239]
[104.41712189 288.62503052]
[101.99829865 304.79183960]
[91.81554413 317.45941162]
[76.72192383 323.22961426]
[74.71791077 338.09512329]
[72.71389771 352.96066284]
[70.70988464 367.82620239]
[80.01937103 380.31503296]
[77.77525330 395.36224365]
[65.81168365 404.16046143]
[63.80766678 419.02600098]
[65.76250458 427.94879150]
[61.66156006 434.09729004]
[59.43644333 448.93133545]
[65.04100800 463.72659302]
[55.50133133 475.16528320]
[53.27621460 489.99932861]
[51.05109787 504.83337402]
[48.82597733 519.66741943]
[46.60086060 534.50146484]
[60.83939743 539.34954834]
[73.98336029 546.66229248]
[85.61021423 556.20458984]
[95.34620667 567.66979980]
[102.87837219 580.68920898]
[107.96457672 594.84442139]
[110.44132233 609.68041992]
[110.22899628 624.72015381]
[107.33441925 639.48028564]
[101.85063171 653.48626709]
[93.95393372 666.28790283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[28 193]
[29 192]
[30 190]
[31 189]
[34 186]
[35 185]
[36 184]
[37 183]
[43 178]
[44 177]
[46 176]
[47 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 154]
[56 152]
[57 151]
[58 150]
[59 149]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[71 138]
[72 137]
[74 135]
[75 134]
[76 133]
[78 132]
[79 125]
[80 124]
[81 123]
[82 122]
[91 121]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
