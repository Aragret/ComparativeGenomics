%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[92.85559845 424.27929688]
[78.64829254 416.82733154]
[75.75797272 401.04678345]
[86.40185547 389.04315186]
[86.84845734 374.04980469]
[87.29506683 359.05645752]
[87.74166870 344.06311035]
[88.18827820 329.06976318]
[80.83334351 316.11776733]
[88.97809601 302.55407715]
[89.42470551 287.56072998]
[82.06977081 274.60873413]
[90.21452332 261.04504395]
[90.66113281 246.05168152]
[90.99610901 231.05543518]
[91.21943665 216.05709839]
[83.67247772 203.21603394]
[91.61438751 189.53259277]
[91.72605133 174.53300476]
[91.72605133 159.53300476]
[88.58255768 152.84419250]
[91.83938599 144.31008911]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[83.74071503 99.87895203]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[82.62496185 81.86418152]
[68.02532196 85.30663300]
[54.14638138 79.61672211]
[46.16464615 66.91664886]
[47.05710602 51.94322205]
[56.49089432 40.28116226]
[70.94744110 36.28012848]
[85.03481293 41.43240738]
[93.49909973 53.81745148]
[95.28156281 38.92373276]
[97.06403351 24.03001404]
[98.84649658 9.13629723]
[100.62895966 -5.75741959]
[102.41143036 -20.65113640]
[87.71089172 -25.41692162]
[74.22214508 -32.94877243]
[62.45954895 -42.95742035]
[52.87124252 -55.05917740]
[45.82205582 -68.79066467]
[41.57964325 -83.62654114]
[40.30432129 -98.99962616]
[42.04299927 -114.32254028]
[46.72747040 -129.01020813]
[54.17707825 -142.50212097]
[64.10568237 -154.28379822]
[76.13265228 -163.90638733]
[89.79746246 -171.00372314]
[104.57730865 -175.30632019]
[119.90713501 -176.65155029]
[121.46765900 -191.57015991]
[123.02818298 -206.48875427]
[124.58869934 -221.40736389]
[125.37002563 -236.38700867]
[125.37002563 -251.38700867]
[125.37002563 -266.38699341]
[125.37002563 -281.38699341]
[122.70423126 -296.14822388]
[117.45751190 -310.20068359]
[112.21079254 -324.25317383]
[106.96407318 -338.30563354]
[94.88848877 -348.52770996]
[97.68527222 -363.15737915]
[92.43855286 -377.20983887]
[88.84802246 -362.64590454]
[78.96983337 -351.35781860]
[65.01081085 -345.86730957]
[50.08942413 -347.40103149]
[37.53915405 -355.61630249]
[30.16376495 -368.67782593]
[29.61093712 -383.66763306]
[36.00416946 -397.23696899]
[47.91520309 -406.35437012]
[62.68307877 -408.98303223]
[77.00862122 -404.53567505]
[87.69146729 -394.00585938]
[84.80619812 -408.72573853]
[81.92092133 -423.44561768]
[79.03565216 -438.16552734]
[76.15037537 -452.88540649]
[73.26510620 -467.60531616]
[58.20824814 -468.46661377]
[43.83887863 -473.04614258]
[31.06026840 -481.05599976]
[20.67568970 -491.99270630]
[13.33792877 -505.16873169]
[9.50824165 -519.75585938]
[9.42736626 -534.83709717]
[13.10038567 -549.46447754]
[20.29641151 -562.71844482]
[30.56309509 -573.76593018]
[43.25506592 -581.91235352]
[57.57449341 -586.64575195]
[72.62124634 -587.66845703]
[87.44947815 -584.91632080]
[101.12706757 -578.56225586]
[112.79422760 -569.00567627]
[121.71755981 -556.84735107]
[127.33612823 -542.85150146]
[129.29675293 -527.89807129]
[127.47618103 -512.92687988]
[121.98885345 -498.87908936]
[113.17971802 -486.63775635]
[101.60251617 -476.97241211]
[87.98499298 -470.49057007]
[90.87026978 -455.77069092]
[93.75553894 -441.05078125]
[96.64081573 -426.33090210]
[99.52608490 -411.61102295]
[102.41136169 -396.89111328]
[106.49102783 -382.45657349]
[111.73774719 -368.40408325]
[123.43804932 -359.18716431]
[121.01654816 -343.55233765]
[126.26326752 -329.49987793]
[131.50997925 -315.44741821]
[136.75669861 -301.39492798]
[138.28996277 -316.31637573]
[143.30319214 -330.45382690]
[151.51286316 -343.00775146]
[162.45469666 -353.26818848]
[175.50987244 -360.65481567]
[189.94004822 -364.74990845]
[204.92915344 -365.32189941]
[219.62944031 -362.33837891]
[233.20956421 -355.96810913]
[244.90150452 -346.57138062]
[254.04400635 -334.67959595]
[260.12005615 -320.96530151]
[262.78594971 -306.20410156]
[261.89099121 -291.23083496]
[257.48577881 -276.89227295]
[249.81942749 -263.99938965]
[239.32551575 -253.28126526]
[226.59753418 -245.34413147]
[212.35530090 -240.63682556]
[197.40428162 -239.42558289]
[182.59002686 -241.77891541]
[168.75038147 -247.56370544]
[156.66801453 -256.45281982]
[147.02624512 -267.94354248]
[140.37002563 -281.38699341]
[140.37002563 -266.38699341]
[140.37002563 -251.38700867]
[140.37002563 -236.38700867]
[150.91438293 -247.05549622]
[165.83717346 -248.57540894]
[178.31591797 -240.25187683]
[182.64547729 -225.89030457]
[176.84645081 -212.05661011]
[163.57008362 -205.07536316]
[148.88612366 -208.13829041]
[139.50730896 -219.84684753]
[137.94677734 -204.92823792]
[136.38626099 -190.00962830]
[134.82574463 -175.09103394]
[148.78927612 -170.91191101]
[161.74694824 -164.22872925]
[173.25398254 -155.26914978]
[182.91516113 -144.33900452]
[190.39826965 -131.81184387]
[195.44555664 -118.11614990]
[197.88265991 -103.72073364]
[197.62454224 -89.11862946]
[194.67855835 -74.81025696]
[189.14413452 -61.28623962]
[181.20954895 -49.01058197]
[171.14540100 -38.40477753]
[159.29548645 -29.83330536]
[146.06497192 -23.59112740]
[131.90660095 -19.89352226]
[117.30514526 -18.86867142]
[115.52268219 -3.97495365]
[113.74021149 10.91876316]
[111.95774841 25.81248093]
[110.17528534 40.70619965]
[108.39281464 55.59991455]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[115.22412872 94.28992462]
[115.13742828 105.93611145]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[106.83772278 144.53341675]
[106.72605133 159.53300476]
[106.72605133 174.53300476]
[109.85546112 183.11463928]
[106.61272430 189.75592041]
[114.14370728 203.66975403]
[106.21777344 216.28042603]
[105.99444580 231.27876282]
[108.99573517 239.90603638]
[105.65447998 246.49829102]
[105.20787048 261.49163818]
[112.53086090 275.51605225]
[104.41805267 288.00732422]
[103.97144318 303.00067139]
[111.29443359 317.02508545]
[103.18162537 329.51635742]
[102.73502350 344.50970459]
[102.28841400 359.50305176]
[101.84180450 374.49639893]
[101.39520264 389.48974609]
[111.30574036 402.10565186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[10 203]
[11 202]
[13 200]
[14 199]
[15 197]
[16 196]
[18 194]
[19 192]
[20 191]
[22 190]
[23 189]
[24 188]
[26 185]
[27 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[56 162]
[57 161]
[58 160]
[59 159]
[60 151]
[61 150]
[62 149]
[63 148]
[64 123]
[65 122]
[66 121]
[67 120]
[69 118]
[70 117]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
