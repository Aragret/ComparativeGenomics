%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[62.64775467 432.76480103]
[61.97540665 447.77700806]
[59.12433624 462.53128052]
[54.15532303 476.71319580]
[47.17427444 490.02044678]
[38.32999420 502.16937256]
[27.81099892 512.90106201]
[15.84150314 521.98669434]
[2.67663622 529.23266602]
[-11.40299225 534.48449707]
[-26.09727478 537.63031006]
[-41.09300232 538.60296631]
[-56.07053375 537.38177490]
[-70.71063232 533.99273682]
[-84.70123291 528.50817871]
[-97.74413300 521.04486084]
[-109.56132507 511.76199341]
[-119.90090942 500.85736084]
[-128.54251099 488.56344604]
[-135.30194092 475.14224243]
[-140.03509521 460.87988281]
[-142.64111328 446.08035278]
[-143.06442261 431.05908203]
[-141.29602051 416.13626099]
[-137.37359619 401.62997437]
[-131.38075256 387.84939575]
[-123.44522858 375.08831787]
[-113.73616791 363.61871338]
[-102.46052551 353.68502808]
[-89.85864258 345.49905396]
[-76.19911957 339.23522949]
[-61.77312088 335.02709961]
[-46.88813400 332.96435547]
[-31.86142921 333.09094238]
[-17.01330566 335.40417480]
[-2.66025090 339.85476685]
[3.81924486 326.32641602]
[2.33880711 311.50558472]
[15.27820873 302.40158081]
[21.75770569 288.87326050]
[28.23720169 275.34490967]
[34.71669769 261.81655884]
[33.23625946 246.99571228]
[46.17565918 237.89172363]
[52.65515518 224.36338806]
[59.13465118 210.83503723]
[64.48583984 196.82202148]
[68.67285156 182.41822815]
[72.85986328 168.01445007]
[77.04687500 153.61067200]
[81.23388672 139.20689392]
[76.13809967 122.41403198]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[111.88768768 28.38800240]
[106.19799805 16.81258965]
[109.80414581 4.84682751]
[120.25071716 -1.25199485]
[124.43772888 -15.65577698]
[128.62474060 -30.05955887]
[132.81175232 -44.46334076]
[136.99876404 -58.86712265]
[133.42109680 -74.27851105]
[144.40347290 -84.34015656]
[148.59048462 -98.74394226]
[143.07376099 -110.40277863]
[146.85766602 -122.31352997]
[157.39389038 -128.25613403]
[161.79489136 -142.59599304]
[166.19589233 -156.93583679]
[167.31153870 -171.89428711]
[165.08641052 -186.72833252]
[162.86129761 -201.56237793]
[160.63618469 -216.39642334]
[145.61357117 -216.21008301]
[130.70550537 -218.07112122]
[116.18972778 -221.94488525]
[102.33666229 -227.75920105]
[89.40437317 -235.40574646]
[77.63378143 -244.74206543]
[67.24417114 -255.59425354]
[58.42908859 -267.76010132]
[51.35276031 -281.01300049]
[46.14701080 -295.10604858]
[42.90881729 -309.77670288]
[41.69850922 -324.75164795]
[42.53863144 -339.75189209]
[45.41353607 -354.49804688]
[50.26966095 -368.71536255]
[57.01654434 -382.13897705]
[65.52849579 -394.51879883]
[75.64693451 -405.62423706]
[87.18336487 -415.24841309]
[99.92287445 -423.21200562]
[113.62813568 -429.36663818]
[128.04380798 -433.59768677]
[142.90136719 -435.82635498]
[157.92401123 -436.01104736]
[172.83186340 -434.14840698]
[187.34721375 -430.27307129]
[201.19966125 -424.45724487]
[214.13111877 -416.80929565]
[225.90069580 -407.47171021]
[236.28913879 -396.61840820]
[245.10290527 -384.45159912]
[252.17779541 -371.19793701]
[257.38201904 -357.10430908]
[260.61862183 -342.43331909]
[261.82730103 -327.45825195]
[260.98556519 -312.45806885]
[258.10906982 -297.71224976]
[253.25140381 -283.49545288]
[246.50306702 -270.07257080]
[237.98977661 -257.69366455]
[227.87013245 -246.58930969]
[216.33265686 -236.96640015]
[203.59228516 -229.00419617]
[189.88636780 -222.85102844]
[175.47023010 -218.62153625]
[177.69534302 -203.78749084]
[179.92045593 -188.95344543]
[182.14558411 -174.11940002]
[186.73904419 -188.39875793]
[193.99468994 -201.52719116]
[203.64125061 -213.01387024]
[215.31806946 -222.42938232]
[228.58862305 -229.42169189]
[242.95677185 -233.72941589]
[257.88534546 -235.19148254]
[272.81622314 -233.75325012]
[287.19122314 -229.46847534]
[300.47293091 -222.49734497]
[312.16476440 -213.10049438]
[321.82965088 -201.62922668]
[329.10623169 -188.51239014]
[333.72250366 -174.24038696]
[335.50585938 -159.34677124]
[334.38961792 -144.38836670]
[330.41552734 -129.92439270]
[323.73214722 -116.49559784]
[314.58938599 -104.60402679]
[303.32897949 -94.69425201]
[290.37194824 -87.13676453]
[276.20272827 -82.21410370]
[261.35098267 -80.11030579]
[246.37199402 -80.90402985]
[231.82575989 -84.56558990]
[218.25610352 -90.95809937]
[206.17031860 -99.84257507]
[196.02024841 -110.88685608]
[188.18537903 -123.67805481]
[182.95860291 -137.73796082]
[180.53573608 -152.53483582]
[176.13473511 -138.19499207]
[171.73373413 -123.85514069]
[176.57893372 -106.98828125]
[162.99427795 -94.55693054]
[158.80726624 -80.15314484]
[162.68440247 -65.77201080]
[151.40254211 -54.68011093]
[147.21553040 -40.27632904]
[143.02851868 -25.87254715]
[138.84150696 -11.46876526]
[134.65449524 2.93501639]
[139.75028992 19.72787094]
[126.35221100 32.36009979]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[109.69039154 125.32931519]
[106.08424377 137.29507446]
[95.63766479 143.39390564]
[91.45065308 157.79768372]
[87.26364136 172.20146179]
[83.07662964 186.60523987]
[78.88961792 201.00903320]
[90.46927643 191.47427368]
[105.13446045 188.32270813]
[119.60893250 192.25839233]
[130.65905762 202.40209961]
[135.81620789 216.48768616]
[133.92826843 231.36839294]
[125.41701508 243.71984863]
[112.18386841 250.78269958]
[97.18515015 250.97908020]
[83.77162170 244.26512146]
[74.93989563 232.14074707]
[72.66300201 217.31452942]
[66.18350220 230.84288025]
[59.70400620 244.37123108]
[60.72098923 260.15969849]
[48.24504089 268.29605103]
[41.76554489 281.82440186]
[35.28604889 295.35275269]
[28.80655479 308.88110352]
[29.82353592 324.66958618]
[17.34758949 332.80590820]
[10.86809444 346.33425903]
[23.33250427 354.72808838]
[34.44186783 364.84738159]
[43.95939636 376.47640991]
[51.68221664 389.36734009]
[57.44572067 403.24536133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 205]
[37 204]
[39 202]
[40 201]
[41 200]
[42 199]
[44 197]
[45 196]
[46 195]
[47 183]
[48 182]
[49 181]
[50 180]
[51 179]
[53 176]
[55 174]
[56 173]
[57 172]
[58 171]
[59 170]
[62 168]
[63 167]
[64 166]
[65 165]
[66 164]
[68 162]
[69 161]
[72 159]
[73 158]
[74 157]
[75 126]
[76 125]
[77 124]
[78 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
