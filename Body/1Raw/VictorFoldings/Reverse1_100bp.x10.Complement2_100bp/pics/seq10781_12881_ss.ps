%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[121.49284363 625.88085938]
[121.42462921 610.07666016]
[132.61077881 598.91223145]
[132.38745117 583.91387939]
[132.16412354 568.91552734]
[131.94079590 553.91717529]
[131.71746826 538.91888428]
[131.49414062 523.92053223]
[123.56821442 511.30987549]
[131.09919739 497.39602661]
[130.87586975 482.39767456]
[130.65254211 467.39935303]
[130.42921448 452.40100098]
[130.20588684 437.40267944]
[129.98255920 422.40432739]
[129.75923157 407.40600586]
[121.83329010 394.79534912]
[129.36427307 380.88150024]
[129.14094543 365.88314819]
[128.91761780 350.88482666]
[117.33494568 344.24523926]
[110.49064636 332.65649414]
[110.26454926 319.09112549]
[116.82265472 307.09072876]
[128.54583740 299.84103394]
[128.54583740 284.84103394]
[128.54583740 269.84103394]
[128.54583740 254.84104919]
[128.54583740 239.84104919]
[126.54181671 224.97552490]
[122.56972504 210.51100159]
[118.59762573 196.04646301]
[114.62553406 181.58193970]
[110.65343475 167.11741638]
[106.68133545 152.65289307]
[102.70924377 138.18836975]
[98.73714447 123.72385406]
[94.76505280 109.25933075]
[89.72813416 95.13029480]
[83.65429688 81.41503143]
[71.92519379 76.04931641]
[67.14864349 64.50080109]
[71.38127136 53.16892242]
[65.51231384 39.36474609]
[59.64335251 25.56056976]
[53.77439117 11.75639343]
[38.80875397 1.02740419]
[41.61531448 -16.29570580]
[35.54147720 -30.01097298]
[29.46764565 -43.72623825]
[24.36052513 -47.92491531]
[22.43023872 -53.27009964]
[23.42392349 -57.94146347]
[17.76113701 -71.83148956]
[12.09835052 -85.72151947]
[6.43556404 -99.61154175]
[-5.93901873 -109.46955109]
[-3.57905316 -124.17600250]
[-9.24183941 -138.06604004]
[-14.90462589 -151.95605469]
[-29.28088951 -147.63543701]
[-44.00275803 -144.70092773]
[-58.93691254 -143.17913818]
[-73.94809723 -143.08384705]
[-88.90036774 -144.41589355]
[-103.65830994 -147.16323853]
[-118.08827209 -151.30097961]
[-132.05957031 -156.79165649]
[-145.44567871 -163.58555603]
[-158.12536621 -171.62112427]
[-169.98379517 -180.82559204]
[-180.91357422 -191.11563110]
[-190.81571960 -202.39801025]
[-199.60055542 -214.57057190]
[-207.18852234 -227.52308655]
[-213.51089478 -241.13822937]
[-218.51043701 -255.29272461]
[-222.14184570 -269.85833740]
[-224.37225342 -284.70321655]
[-225.18144226 -299.69287109]
[-224.56208801 -314.69158936]
[-222.51980591 -329.56350708]
[-219.07308960 -344.17395020]
[-214.25315857 -358.39059448]
[-208.10366821 -372.08468628]
[-200.68028259 -385.13223267]
[-192.05026245 -397.41503906]
[-182.29174805 -408.82186890]
[-171.49311829 -419.24945068]
[-159.75218201 -428.60333252]
[-147.17524719 -436.79879761]
[-133.87622070 -443.76159668]
[-119.97556305 -449.42874146]
[-105.59914398 -453.74884033]
[-90.87715912 -456.68280029]
[-75.94295502 -458.20404053]
[-60.93176651 -458.29879761]
[-45.97954559 -456.96618652]
[-31.22170067 -454.21832275]
[-16.79188919 -450.08004761]
[-2.82079172 -444.58886719]
[10.56506634 -437.79449463]
[23.24445534 -429.75845337]
[35.10255051 -420.55352783]
[46.03195572 -410.26312256]
[55.93368912 -398.98037720]
[64.71808624 -386.80749512]
[72.30558014 -373.85470581]
[78.62746429 -360.23931885]
[83.62648010 -346.08465576]
[87.25736237 -331.51889038]
[89.48722076 -316.67395020]
[90.29586029 -301.68423462]
[89.67596436 -286.68557739]
[87.63314819 -271.81372070]
[84.18590546 -257.20339966]
[79.36544800 -242.98693848]
[73.21545410 -229.29306030]
[65.79160309 -216.24580383]
[57.16112900 -203.96330261]
[47.40219879 -192.55680847]
[36.60319138 -182.12962341]
[24.86190605 -172.77618408]
[12.28467369 -164.58117676]
[-1.01459932 -157.61885071]
[4.64818716 -143.72882080]
[10.31097412 -129.83879089]
[22.28051567 -120.97429657]
[20.32559013 -105.27433014]
[25.98837662 -91.38430786]
[31.65116310 -77.49427795]
[37.31394958 -63.60425186]
[43.18291092 -49.80007172]
[49.25674438 -36.08480835]
[55.33057785 -22.36953926]
[66.49831390 -17.72106361]
[71.67076874 -6.34435844]
[67.57856750 5.88743210]
[73.44753265 19.69160843]
[79.31649017 33.49578476]
[85.18544769 47.29996109]
[99.75509644 57.08220673]
[97.36956787 75.34119415]
[103.44339752 89.05646515]
[106.63059235 74.39897919]
[116.64616394 63.23258591]
[130.87207031 58.47615051]
[145.58967590 61.37299347]
[156.95187378 71.16588593]
[161.98857117 85.29499054]
[159.38320923 100.06699371]
[149.81681824 111.62052917]
[135.79002380 116.93553162]
[120.96941376 114.62266541]
[109.22957611 105.28723145]
[113.20166779 119.75175476]
[117.17376709 134.21627808]
[121.14585876 148.68080139]
[125.11795807 163.14532471]
[129.09005737 177.60984802]
[133.06214905 192.07437134]
[137.03424072 206.53889465]
[141.00634766 221.00341797]
[144.24850464 206.35800171]
[151.80342102 193.39947510]
[162.95101929 183.36299133]
[176.62876892 177.20513916]
[191.53300476 175.51286316]
[206.24313354 178.44744873]
[219.35710144 185.72920227]
[229.62496948 196.66406250]
[236.06803894 210.20977783]
[238.07223511 225.07528687]
[235.44650269 239.84368896]
[228.44111633 253.10734558]
[217.72380066 263.60205078]
[204.31604004 270.32754517]
[189.49578857 272.64276123]
[174.67562866 270.32702637]
[161.26809692 263.60110474]
[150.55113220 253.10601807]
[143.54583740 239.84104919]
[143.54583740 254.84104919]
[143.54583740 269.84103394]
[143.54583740 284.84103394]
[143.54583740 299.84103394]
[157.36384583 309.59597778]
[162.59275818 325.50695801]
[157.36007690 341.24166870]
[143.91595459 350.66149902]
[144.13928223 365.65982056]
[144.36260986 380.65817261]
[152.30451965 394.34161377]
[144.75756836 407.18267822]
[144.98089600 422.18099976]
[145.20422363 437.17935181]
[145.42755127 452.17767334]
[145.65087891 467.17602539]
[145.87420654 482.17434692]
[146.09753418 497.17269897]
[154.03942871 510.85614014]
[146.49247742 523.69720459]
[146.71580505 538.69555664]
[146.93913269 553.69384766]
[147.16246033 568.69219971]
[147.38578796 583.69055176]
[147.60911560 598.68890381]
[159.12272644 609.51538086]
[159.52508545 625.31451416]
[148.57749939 636.71301270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[18 192]
[19 191]
[20 190]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 144]
[40 143]
[43 141]
[44 140]
[45 139]
[46 138]
[48 135]
[49 134]
[50 133]
[53 132]
[54 131]
[55 130]
[56 129]
[58 127]
[59 126]
[60 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
