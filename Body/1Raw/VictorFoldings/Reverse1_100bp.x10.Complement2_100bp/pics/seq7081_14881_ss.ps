%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[124.04621887 710.76080322]
[110.37794495 704.42633057]
[98.46223450 695.20874023]
[88.89678955 683.57043457]
[82.16139984 670.09521484]
[78.59391785 655.45892334]
[78.37327576 640.39575195]
[81.51054382 625.66125488]
[87.84835815 611.99450684]
[97.06882477 600.08105469]
[108.70944214 590.51843262]
[122.18631744 583.78625488]
[136.82347107 580.22235107]
[136.60014343 565.22399902]
[136.37681580 550.22564697]
[136.15348816 535.22735596]
[135.93016052 520.22900391]
[135.70683289 505.23065186]
[135.48350525 490.23233032]
[135.26017761 475.23397827]
[134.36735535 460.26055908]
[132.80683899 445.34197998]
[131.24630737 430.42337036]
[129.68579102 415.50476074]
[128.12525940 400.58615112]
[114.05187988 395.64596558]
[103.47554016 385.04171753]
[98.53193665 370.83883667]
[100.25217438 355.83679199]
[108.34828186 343.01727295]
[121.25971985 334.95153809]
[119.69919586 320.03292847]
[118.13867188 305.11434937]
[109.11927795 293.26107788]
[115.37889862 278.73083496]
[113.70735168 263.82424927]
[111.92488861 248.93054199]
[110.14242554 234.03683472]
[108.35995483 219.14311218]
[106.57749176 204.24938965]
[97.38262177 192.53173828]
[103.42520905 177.90991211]
[101.64273834 163.01618958]
[99.63872528 148.15066528]
[97.41361237 133.31661987]
[95.18849182 118.48257446]
[83.59905243 109.78596497]
[81.44966125 95.45675659]
[89.97746277 83.74253845]
[87.75234222 68.90849304]
[85.52722931 54.07445145]
[83.30210876 39.24040985]
[81.07699585 24.40636444]
[69.27495575 10.27153492]
[76.33014679 -5.79679537]
[73.88441467 -20.59606552]
[71.43869019 -35.39533615]
[68.66307831 -50.13629913]
[64.90677643 -64.65835571]
[60.50577927 -78.99820709]
[56.10478210 -93.33805084]
[50.59524536 -100.62384796]
[51.74672318 -107.92425537]
[47.55971146 -122.32803345]
[43.37269974 -136.73181152]
[39.18568802 -151.13560486]
[34.99868011 -165.53938293]
[22.52644348 -170.62445068]
[15.36469555 -181.80120850]
[15.93935299 -194.86840820]
[23.81677818 -205.06526184]
[19.84468269 -219.52978516]
[15.87258530 -233.99430847]
[11.79291916 -248.42886353]
[7.60590744 -262.83264160]
[3.41889644 -277.23641968]
[-0.76811486 -291.64019775]
[-15.68962955 -289.81140137]
[-30.71127319 -290.39999390]
[-45.44394302 -293.39071655]
[-59.50603485 -298.70614624]
[-72.53330231 -306.20858765]
[-84.18830872 -315.70367432]
[-94.16916656 -326.94549561]
[-102.21733856 -339.64288330]
[-108.12435913 -353.46688843]
[-111.73722839 -368.05944824]
[-112.96236420 -383.04263306]
[-111.76802063 -398.02828979]
[-108.18515015 -412.62823486]
[-102.30654907 -426.46435547]
[-94.28448486 -439.17825317]
[-84.32675171 -450.44055176]
[-72.69128418 -459.95959473]
[-59.67946243 -467.48876953]
[-45.62832260 -472.83309937]
[-30.90182686 -475.85409546]
[-15.88142681 -476.47357178]
[-0.95618451 -474.67541504]
[13.48729897 -470.50625610]
[27.07490158 -464.07403564]
[39.45467377 -455.54541016]
[50.30595016 -445.14129639]
[59.34765244 -433.13113403]
[66.34558105 -419.82604980]
[71.11847687 -405.57067871]
[73.54270172 -390.73425293]
[73.55547333 -375.70111084]
[71.15645599 -360.86059570]
[66.40778351 -346.59713745]
[59.43246460 -333.28018188]
[50.41117477 -321.25466919]
[39.57759094 -310.83212280]
[27.21232414 -302.28250122]
[13.63566685 -295.82720947]
[17.82267761 -281.42343140]
[22.00968933 -267.01965332]
[26.19670105 -252.61587524]
[31.08232880 -247.07038879]
[30.33710861 -237.96640015]
[34.30920410 -223.50187683]
[38.28130341 -209.03735352]
[53.23992538 -201.35110474]
[58.10701370 -184.90039062]
[49.40246201 -169.72639465]
[53.58946991 -155.32261658]
[57.77648163 -140.91882324]
[61.96349335 -126.51504517]
[66.15050507 -112.11126709]
[70.44462585 -97.73905182]
[74.84562683 -83.39920807]
[79.24662781 -69.05935669]
[87.21298218 -81.76908112]
[101.80173492 -85.25740814]
[114.65576935 -77.52606201]
[118.41172791 -63.00391769]
[110.91801453 -50.00990677]
[96.46736908 -45.98759842]
[83.33837891 -53.24040985]
[86.07823181 -51.02104950]
[87.87924194 -47.36435318]
[88.07755280 -42.72603989]
[86.23796082 -37.84106445]
[88.68368530 -23.04179382]
[91.12941742 -8.24252319]
[100.77724457 -0.94553626]
[102.93593597 11.36396408]
[95.91104126 22.18124771]
[98.13615417 37.01529312]
[100.36127472 51.84933472]
[102.58638763 66.68338013]
[104.81150818 81.51742554]
[116.40094757 90.21403503]
[118.55033875 104.54324341]
[110.02253723 116.25746155]
[112.24765778 131.09150696]
[114.47277069 145.92555237]
[118.28573608 151.32673645]
[118.73168182 156.99226379]
[116.53646088 161.23373413]
[118.31892395 176.12744141]
[127.64128876 188.91040039]
[121.47120667 202.46693420]
[123.25367737 217.36064148]
[125.03614044 232.25436401]
[126.81860352 247.14808655]
[128.60107422 262.04180908]
[132.72807312 270.19076538]
[130.29750061 277.17031860]
[139.42851257 290.09066772]
[133.05728149 303.55380249]
[134.61779785 318.47241211]
[136.17832947 333.39102173]
[150.47941589 338.61026001]
[161.05314636 349.47686768]
[165.84066772 363.79815674]
[163.94322205 378.71664429]
[155.79028320 391.28002930]
[143.04386902 399.02563477]
[144.60438538 413.94424438]
[146.16491699 428.86285400]
[147.72543335 443.78143311]
[149.28596497 458.70004272]
[159.54829407 447.76000977]
[174.53559875 447.14297485]
[185.66246033 457.20245361]
[186.55491638 472.17587280]
[176.70172119 483.48580933]
[161.74723816 484.65341187]
[150.25851440 475.01065063]
[150.48184204 490.00900269]
[150.70516968 505.00732422]
[150.92849731 520.00567627]
[151.15182495 535.00402832]
[151.37515259 550.00231934]
[151.59848022 565.00067139]
[151.82180786 579.99902344]
[166.55857849 583.12554932]
[180.22991943 589.45343018]
[192.15008545 598.66528320]
[201.72117615 610.29888916]
[208.46308899 623.77087402]
[212.03767395 638.40545654]
[212.26560974 653.46850586]
[209.13548279 668.20452881]
[202.80429077 681.87432861]
[193.58959961 693.79229736]
[181.95361328 703.36053467]
[168.48001099 710.09918213]
[153.84458923 713.67022705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[31 173]
[32 172]
[33 171]
[35 169]
[36 167]
[37 166]
[38 165]
[39 164]
[40 163]
[42 161]
[43 160]
[44 157]
[45 156]
[46 155]
[49 152]
[50 151]
[51 150]
[52 149]
[53 148]
[55 145]
[56 144]
[57 143]
[58 139]
[59 132]
[60 131]
[61 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[71 122]
[72 121]
[73 120]
[74 118]
[75 117]
[76 116]
[77 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
