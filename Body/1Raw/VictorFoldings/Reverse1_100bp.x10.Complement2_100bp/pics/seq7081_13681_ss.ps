%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[93.07157135 668.85565186]
[79.38719177 662.63598633]
[66.84432983 654.35205078]
[55.75185394 644.20794678]
[46.38293839 632.45336914]
[38.96829605 619.37780762]
[33.69052505 605.30334473]
[30.67958641 590.57647705]
[30.00963402 575.55987549]
[31.69716263 560.62335205]
[35.70061493 546.13482666]
[41.92140579 532.45092773]
[50.20634079 519.90875244]
[60.35139465 508.81710815]
[72.10673523 499.44915771]
[85.18288422 492.03561401]
[99.25782013 486.75900269]
[113.98493958 483.74926758]
[113.31515503 468.76422119]
[112.64537048 453.77920532]
[104.34748077 441.41009521]
[111.46085358 427.27819824]
[110.79106903 412.29318237]
[102.49318695 399.92407227]
[109.60655975 385.79217529]
[108.93677521 370.80715942]
[108.26699066 355.82211304]
[94.03840637 344.30416870]
[92.72483063 325.72494507]
[105.62622070 311.85165405]
[104.51057434 296.89318848]
[95.84809113 284.77664185]
[102.53755188 270.43923950]
[101.42190552 255.48077393]
[100.30625916 240.52232361]
[99.19060516 225.56385803]
[96.22052765 221.82385254]
[95.56836700 216.17834473]
[98.27120972 210.14459229]
[97.60142517 195.15956116]
[96.93164062 180.17451477]
[96.26184845 165.18948364]
[95.48052979 150.20983887]
[94.58771515 135.23643494]
[79.78630066 129.36503601]
[69.01769257 117.63507843]
[64.43031311 102.38677216]
[66.93938446 86.66227722]
[76.04431915 73.59877777]
[89.92861176 65.80253601]
[88.81296539 50.84408569]
[87.69731903 35.88563156]
[86.35908508 20.94544601]
[84.79856110 6.02684116]
[83.23803711 -8.89176369]
[81.67751312 -23.81036758]
[80.00597382 -38.71694183]
[78.22351074 -53.61066055]
[66.84754944 -68.09061432]
[74.37802124 -83.94176483]
[72.37400818 -98.80728912]
[68.12613678 -106.89390564]
[70.45252991 -113.90887451]
[68.67005920 -128.80259705]
[66.88759613 -143.69630432]
[63.56533432 -158.32376099]
[58.73933792 -172.52622986]
[53.91334152 -186.72868347]
[49.08734131 -200.93113708]
[37.32146072 -211.50820923]
[40.55258560 -226.04812622]
[35.72658539 -240.25057983]
[30.90058899 -254.45303345]
[25.18324661 -240.58537292]
[12.46741295 -232.62876892]
[-2.50421977 -233.55082703]
[-14.14760399 -243.00765991]
[-18.12004471 -257.47210693]
[-12.93991852 -271.54925537]
[-0.53928649 -279.98870850]
[14.45672321 -279.64273071]
[26.45564651 -270.63943481]
[23.35153580 -285.31475830]
[20.24742508 -299.99005127]
[17.14331627 -314.66534424]
[14.03920555 -329.34066772]
[-1.02801692 -329.83285522]
[-15.53943443 -333.91723633]
[-28.65137291 -341.35635376]
[-39.60152054 -351.71771240]
[-47.75325012 -364.39889526]
[-52.63263321 -378.66265869]
[-53.95598602 -393.67971802]
[-51.64637375 -408.57702637]
[-45.83806992 -422.48840332]
[-36.86876297 -434.60513306]
[-25.25991821 -444.22274780]
[-11.68645859 -450.78204346]
[3.06247354 -453.90173340]
[18.12939453 -453.40042114]
[32.63833237 -449.30722046]
[45.74575806 -441.86016846]
[56.68962479 -431.49215698]
[64.83366394 -418.80603027]
[69.70439911 -404.53930664]
[71.01864624 -389.52145386]
[68.70000458 -374.62557983]
[62.88326645 -360.71768188]
[53.90661621 -348.60641479]
[42.29194260 -338.99584961]
[28.71450806 -332.44476318]
[31.81861877 -317.76947021]
[34.92272949 -303.09414673]
[38.02683640 -288.41885376]
[41.13094711 -273.74356079]
[45.10304642 -259.27902222]
[49.92904282 -245.07658386]
[54.75503922 -230.87411499]
[66.17573547 -221.31289673]
[63.28979874 -205.75712585]
[68.11579895 -191.55467224]
[72.94179535 -177.35221863]
[77.76779175 -163.14976501]
[80.82497406 -177.83491516]
[89.20558167 -190.27539062]
[101.66639709 -198.62571716]
[116.35894012 -201.64718628]
[131.10365295 -198.89157104]
[143.71324158 -190.76763916]
[152.31716919 -178.48054504]
[155.63906860 -163.85301208]
[153.18615723 -149.05493164]
[145.32234192 -136.28150940]
[133.21412659 -127.42761230]
[118.65773010 -123.80667114]
[103.81249237 -125.95582581]
[90.88061523 -133.55625916]
[81.78131104 -145.47877502]
[83.56378174 -130.58505249]
[85.34624481 -115.69133759]
[87.23954010 -100.81130219]
[89.24355316 -85.94577789]
[98.66983795 -78.36476898]
[100.46107483 -65.99645233]
[93.11722565 -55.39312744]
[94.89968872 -40.49940872]
[98.81575775 -34.23153687]
[96.59611511 -25.37089157]
[98.15663910 -10.45228672]
[99.71716309 4.46631813]
[101.27768707 19.38492203]
[104.35780334 23.03484535]
[105.17776489 28.65842819]
[102.65576935 34.76998138]
[103.77141571 49.72843552]
[104.88706970 64.68688965]
[117.95696259 69.20314026]
[128.32505798 78.35306549]
[134.43139648 90.75997162]
[135.35720825 104.55712891]
[130.96318054 117.66862488]
[121.91046906 128.12170410]
[109.56111908 134.34361267]
[110.45393372 149.31703186]
[114.08858490 157.69718933]
[111.24689484 164.51969910]
[111.91667938 179.50473022]
[112.58646393 194.48977661]
[113.25624847 209.47480774]
[114.14906311 224.44821167]
[115.26470947 239.40666199]
[116.38036346 254.36512756]
[117.49600983 269.32357788]
[126.23828888 282.51004028]
[119.46903229 295.77755737]
[120.58467865 310.73599243]
[130.93081665 316.59210205]
[137.10226440 326.61279297]
[137.66436768 338.24798584]
[132.59303284 348.60162354]
[123.25202942 355.15231323]
[123.92181396 370.13735962]
[124.59159851 385.12240601]
[132.93739319 398.56332397]
[125.77610779 411.62338257]
[126.44589233 426.60842896]
[134.79168701 440.04934692]
[127.63040924 453.10940552]
[128.30018616 468.09445190]
[128.96997070 483.07949829]
[143.90689087 484.76330566]
[158.39645386 488.76318359]
[172.08186340 494.98059082]
[184.62609863 503.26242065]
[195.72024536 513.40472412]
[205.09109497 525.15777588]
[212.50788879 538.23205566]
[217.78799438 552.30566406]
[220.80136108 567.03204346]
[221.47378540 582.04852295]
[219.78872681 596.98529053]
[215.78765869 611.47454834]
[209.56913757 625.15942383]
[201.28627014 637.70300293]
[191.14303589 648.79632568]
[179.38925171 658.16619873]
[166.31433105 665.58190918]
[152.24026489 670.86083984]
[137.51364136 673.87298584]
[122.49710846 674.54418945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 190]
[19 189]
[20 188]
[22 186]
[23 185]
[25 183]
[26 182]
[27 181]
[30 176]
[31 175]
[33 173]
[34 172]
[35 171]
[36 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 164]
[44 163]
[50 156]
[51 155]
[52 154]
[53 151]
[54 150]
[55 149]
[56 148]
[57 146]
[58 145]
[60 142]
[61 141]
[63 140]
[64 139]
[65 138]
[66 123]
[67 122]
[68 121]
[69 120]
[71 118]
[72 117]
[73 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
