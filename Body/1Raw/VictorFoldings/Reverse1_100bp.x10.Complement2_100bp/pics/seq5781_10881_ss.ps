%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[82.19984436 606.29895020]
[67.20090485 605.62854004]
[52.35420609 603.39398193]
[37.82242584 599.61968994]
[23.76477623 594.34710693]
[10.33528328 587.63397217]
[-2.31891322 579.55377197]
[-14.05916595 570.19512939]
[-24.75684357 559.66058350]
[-34.29473495 548.06549072]
[-42.56834030 535.53692627]
[-49.48700714 522.21209717]
[-54.97492981 508.23712158]
[-58.97198105 493.76504517]
[-61.43436813 478.95443726]
[-62.33510971 463.96755981]
[-61.66434097 448.96862793]
[-59.42940521 434.12197876]
[-55.65479279 419.59030151]
[-50.38186264 405.53277588]
[-43.66838074 392.10345459]
[-35.58790970 379.44943237]
[-26.22898483 367.70941162]
[-15.69414330 357.01199341]
[-4.09881210 347.47439575]
[8.42996311 339.20108032]
[21.75491142 332.28274536]
[35.73003769 326.79516602]
[50.20222092 322.79846191]
[65.01289368 320.33642578]
[79.99979401 319.43603516]
[80.66957855 304.45101929]
[73.50829315 291.39093018]
[81.85408783 277.95001221]
[82.52387238 262.96499634]
[83.19365692 247.97994995]
[83.86344147 232.99490356]
[84.53323364 218.00987244]
[85.20301819 203.02482605]
[85.87280273 188.03979492]
[86.20777893 173.04353333]
[86.20777893 158.04353333]
[86.20777893 143.04353333]
[78.07871246 155.64981079]
[65.33042145 163.55430603]
[50.42440033 165.23078918]
[36.23876953 160.35556030]
[25.51255417 149.86993408]
[20.31681633 135.79852295]
[21.65477180 120.85832214]
[29.26808167 107.93402100]
[41.68673706 99.52111053]
[56.51288605 97.24399567]
[70.88383484 101.54234314]
[82.02478027 111.58621216]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[92.29241943 56.94108963]
[102.16844177 45.79149246]
[104.83423615 31.03027534]
[107.50003052 16.26905823]
[110.16582489 1.50784183]
[97.19857788 -3.94739127]
[85.66219330 -11.98748970]
[76.06420898 -22.25551796]
[68.82621002 -34.29658890]
[64.26531219 -47.57803345]
[62.58027267 -61.51294327]
[63.84281540 -75.48612213]
[67.99460602 -88.88123322]
[74.84992218 -101.10800171]
[84.10397339 -111.62820435]
[95.34642792 -119.97938538]
[108.07965088 -125.79515839]
[121.74067688 -128.82130432]
[135.72613525 -128.92687988]
[138.83024597 -143.60217285]
[141.93435669 -158.27748108]
[133.57952881 -171.42413330]
[136.93659973 -186.26277161]
[149.52140808 -194.14678955]
[152.62551880 -208.82209778]
[155.62030029 -223.52011108]
[158.50556946 -238.23999023]
[161.39083862 -252.95988464]
[164.27612305 -267.67977905]
[150.05010986 -272.50720215]
[136.59449768 -279.18777466]
[124.14940643 -287.60223389]
[112.93693542 -297.60043335]
[103.15719604 -309.00393677]
[94.98470306 -321.60925293]
[88.56531525 -335.19140625]
[84.01359558 -349.50802612]
[81.41075897 -364.30358887]
[80.80327606 -379.31405640]
[82.20197296 -394.27157593]
[85.58189392 -408.90917969]
[90.88272095 -422.96566772]
[98.00985718 -436.19015503]
[106.83610535 -448.34667969]
[117.20394897 -459.21826172]
[128.92837524 -468.61087036]
[141.80012512 -476.35693359]
[155.58950806 -482.31817627]
[170.05043030 -486.38821411]
[184.92480469 -488.49441528]
[199.94720459 -488.59921265]
[214.84953308 -486.70074463]
[229.36582947 -482.83282471]
[243.23703003 -477.06454468]
[256.21560669 -469.49880981]
[268.06991577 -460.27069092]
[278.58843994 -449.54479980]
[287.58340454 -437.51260376]
[294.89434814 -424.38882446]
[300.39077759 -410.40768433]
[303.97457886 -395.81863403]
[305.58181763 -380.88211060]
[305.18380737 -365.86462402]
[302.78762817 -351.03417969]
[298.43609619 -336.65545654]
[292.20681763 -322.98507690]
[284.21096802 -310.26696777]
[274.59127808 -298.72811890]
[263.51937866 -288.57446289]
[251.19290161 -279.98721313]
[237.83180237 -273.11956787]
[223.67453003 -268.09414673]
[208.97372437 -265.00057983]
[193.99176025 -263.89413452]
[178.99600220 -264.79449463]
[176.11073303 -250.07461548]
[173.22546387 -235.35472107]
[170.34019470 -220.63482666]
[172.13838196 -213.46626282]
[167.30082703 -205.71798706]
[164.19671631 -191.04269409]
[172.51123047 -178.73803711]
[169.57228088 -163.81097412]
[156.60966492 -155.17337036]
[153.50555420 -140.49806213]
[150.40144348 -125.82276917]
[164.86177063 -119.02472687]
[177.29264832 -108.97201538]
[186.97564697 -96.24046326]
[193.34992981 -81.56085205]
[196.04472351 -65.77698517]
[194.90086365 -49.79719543]
[189.98022461 -34.54205704]
[181.56237793 -20.89134598]
[170.12867737 -9.63332653]
[156.33480835 -1.41921258]
[140.97308350 3.27449250]
[124.92704010 4.17363739]
[122.26124573 18.93485451]
[119.59545135 33.69607162]
[116.92965698 48.45729065]
[122.28189850 62.35702896]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[101.20777893 143.04353333]
[101.20777893 158.04353333]
[101.20777893 173.04353333]
[103.81924438 177.56320190]
[104.37985229 182.17178345]
[103.19916534 186.07319641]
[100.85784149 188.70957947]
[100.18805695 203.69461060]
[99.51827240 218.67965698]
[98.84848022 233.66468811]
[98.17869568 248.64973450]
[97.50891113 263.63476562]
[96.83912659 278.61981201]
[103.95249939 292.75170898]
[95.65461731 305.12078857]
[94.98483276 320.10583496]
[109.83163452 322.33969116]
[124.36360168 326.11325073]
[138.42150879 331.38516235]
[151.85131836 338.09765625]
[164.50592041 346.17718506]
[176.24662781 355.53527832]
[186.94480896 366.06933594]
[196.48326111 377.66397095]
[204.75747681 390.19213867]
[211.67678833 403.51657104]
[217.16539001 417.49130249]
[221.16314697 431.96319580]
[223.62625122 446.77371216]
[224.52772522 461.76052856]
[223.85768127 476.75949097]
[221.62347412 491.60623169]
[217.84956360 506.13812256]
[212.57731628 520.19586182]
[205.86448669 533.62554932]
[197.78463745 546.27990723]
[188.42626953 558.02044678]
[177.89195251 568.71832275]
[166.29708862 578.25653076]
[153.76870728 586.53045654]
[140.44410706 593.44940186]
[126.46924591 598.93768311]
[111.99725342 602.93505859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 183]
[32 182]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 170]
[42 169]
[43 168]
[56 167]
[57 166]
[59 164]
[60 163]
[62 161]
[63 160]
[64 159]
[65 158]
[79 146]
[80 145]
[81 144]
[84 141]
[85 140]
[86 138]
[87 137]
[88 136]
[89 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
