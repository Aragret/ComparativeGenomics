%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[120.52855682 676.18090820]
[108.30403137 667.45373535]
[97.26974487 657.26312256]
[87.59972382 645.76995850]
[79.44647980 633.15533447]
[72.93859863 619.61834717]
[68.17871857 605.37237549]
[65.24191284 590.64221191]
[64.17449188 575.66009521]
[64.99330139 560.66235352]
[67.68541718 545.88543701]
[72.20838928 531.56256104]
[78.49087524 517.91949463]
[86.43379974 505.17138672]
[95.91188049 493.51940918]
[106.77565002 483.14724731]
[118.85375977 474.21847534]
[131.95571899 466.87399292]
[145.87490845 461.22955322]
[160.39176941 457.37420654]
[158.38775635 442.50866699]
[156.38374329 427.64315796]
[154.37973022 412.77761841]
[152.37571716 397.91207886]
[150.37170410 383.04656982]
[148.36769104 368.18103027]
[146.03221130 353.36395264]
[143.36640930 338.60275269]
[140.70062256 323.84152222]
[138.03482056 309.08032227]
[134.93070984 294.40499878]
[124.40856934 283.86300659]
[128.67080688 268.62673950]
[118.14866638 258.08474731]
[122.41091919 242.84848022]
[118.87124634 228.27210999]
[115.33110809 225.06640625]
[113.76718140 219.60278320]
[115.45005798 213.20907593]
[112.34594727 198.53378296]
[109.24183655 183.85847473]
[106.13772583 169.18316650]
[96.17369843 162.32426453]
[93.46750641 150.12342834]
[100.00238037 139.00326538]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[88.13294983 80.19017029]
[85.02883911 65.51486969]
[78.34695435 78.94440460]
[65.52011108 86.72077942]
[50.52284241 86.43440247]
[38.00222397 78.17401886]
[31.83789635 64.49918365]
[33.93994904 49.64720154]
[43.65703583 38.22011948]
[57.97821426 33.75874329]
[72.46591187 37.64547729]
[82.63106537 48.67620850]
[81.51541901 33.71775436]
[80.39976501 18.75930214]
[79.28411865 3.80084801]
[78.16847229 -11.15760517]
[66.47605133 -21.44959450]
[65.55770874 -36.63548660]
[75.44160461 -47.71899796]
[73.77006531 -62.62557220]
[71.54494476 -77.45961761]
[69.31983185 -92.29365540]
[67.09471130 -107.12770081]
[64.86959839 -121.96174622]
[62.64448166 -136.79579163]
[60.41936111 -151.62983704]
[58.19424438 -166.46388245]
[52.02514648 -152.79119873]
[40.59046173 -143.08305359]
[26.09804916 -139.21394348]
[11.34616756 -141.93093872]
[-0.81682462 -150.70941162]
[-8.04244614 -163.85438538]
[-8.93554115 -178.82777405]
[-3.32366872 -192.73844910]
[7.70960808 -202.90048218]
[22.03393555 -207.35173035]
[36.88351059 -205.23274231]
[49.39111328 -196.95265198]
[57.14212418 -184.10900879]
[57.58872986 -199.10235596]
[58.03533554 -214.09570312]
[48.93320847 -230.10298157]
[58.73174667 -244.66168213]
[51.20076752 -258.57550049]
[59.12670135 -271.18618774]
[59.35002899 -286.18450928]
[59.57335663 -301.18286133]
[45.19203949 -305.83786011]
[32.82269669 -314.52639771]
[23.56519127 -326.47589111]
[18.24270058 -340.62377930]
[17.32849693 -355.71203613]
[20.90386772 -370.39904785]
[28.65089607 -383.37881470]
[39.88072205 -393.49725342]
[53.59479141 -399.85458374]
[68.57366943 -401.88552856]
[83.48542786 -399.40948486]
[97.00414276 -392.64666748]
[107.92772675 -382.19839478]
[115.28485870 -368.99368286]
[118.42136383 -354.20672607]
[117.05832672 -339.15237427]
[111.31696320 -325.16925049]
[101.70777893 -313.50070190]
[89.08522797 -305.18429565]
[74.57169342 -300.95953369]
[74.34836578 -285.96118164]
[74.12503815 -270.96286011]
[81.67198944 -258.12179565]
[73.73008728 -244.43835449]
[81.92750549 -235.54290771]
[81.86419678 -223.04571533]
[73.02868652 -213.64909363]
[72.58207703 -198.65574646]
[72.13547516 -183.66239929]
[73.02828979 -168.68899536]
[75.25340271 -153.85494995]
[77.47852325 -139.02090454]
[79.70364380 -124.18686676]
[81.92875671 -109.35282135]
[84.15387726 -94.51877594]
[86.37899017 -79.68473053]
[88.60411072 -64.85068512]
[99.48323822 -75.17757416]
[114.36042786 -73.26202393]
[122.26876068 -60.51610947]
[117.37850952 -46.33564758]
[103.29459381 -41.17394638]
[90.40006256 -48.83464432]
[101.81874084 -39.33994675]
[103.16326141 -24.18584251]
[93.12692261 -12.27325439]
[94.24256897 2.68519926]
[95.35822296 17.64365196]
[96.47386932 32.60210419]
[97.58951569 47.56055832]
[99.70413971 62.41075516]
[102.80825043 77.08605957]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[114.72227478 136.11798096]
[127.14369202 149.71173096]
[120.81302643 166.07907104]
[123.91713715 180.75436401]
[127.02124786 195.42967224]
[130.12536621 210.10496521]
[133.44761658 224.73243713]
[136.98728943 239.30880737]
[147.76261902 250.89340210]
[143.24719238 265.08706665]
[154.02250671 276.67166138]
[149.50708008 290.86532593]
[152.61416626 293.89849854]
[154.41346741 297.40948486]
[154.91537476 300.92849731]
[154.28175354 304.03738403]
[152.79603577 306.41452026]
[155.46183777 321.17572021]
[158.12762451 335.93695068]
[160.79342651 350.69818115]
[164.16654968 354.68176270]
[165.53727722 359.11737061]
[165.06874084 363.16650391]
[163.23321533 366.17703247]
[165.23724365 381.04254150]
[167.24125671 395.90808105]
[169.24526978 410.77359009]
[171.24928284 425.63912964]
[173.25329590 440.50466919]
[175.25730896 455.37017822]
[190.27687073 455.24374390]
[205.19383240 457.00079346]
[219.77294922 460.61361694]
[233.78428650 466.02526855]
[247.00685120 473.15036011]
[259.23211670 481.87655640]
[270.26724243 492.06619263]
[279.93823242 503.55859375]
[288.09255981 516.17248535]
[294.60156250 529.70898438]
[299.36264038 543.95452881]
[302.30068970 558.68444824]
[303.36938477 573.66644287]
[302.55181885 588.66430664]
[299.86096191 603.44140625]
[295.33920288 617.76470947]
[289.05786133 631.40826416]
[281.11599731 644.15704346]
[271.63888550 655.80981445]
[260.77600098 666.18292236]
[248.69863892 675.11267090]
[235.59730530 682.45825195]
[221.67858887 688.10388184]
[207.16204834 691.96044922]
[192.27659607 693.96716309]
[177.25703430 694.09234619]
[162.34020996 692.33404541]
[147.76139832 688.71997070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[27 172]
[28 171]
[29 170]
[30 169]
[31 164]
[33 162]
[35 160]
[36 159]
[39 158]
[40 157]
[41 156]
[42 155]
[45 153]
[46 152]
[47 151]
[48 149]
[49 148]
[50 147]
[60 146]
[61 145]
[62 144]
[63 143]
[64 142]
[67 139]
[68 133]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[88 125]
[89 124]
[90 123]
[92 120]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
