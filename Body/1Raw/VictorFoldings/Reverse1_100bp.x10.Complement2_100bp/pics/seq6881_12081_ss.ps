%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[160.80792236 732.17083740]
[152.00856018 720.01031494]
[144.33470154 707.11004639]
[137.84812927 693.57373047]
[132.60104370 679.51049805]
[128.63572693 665.03356934]
[125.98408508 650.25939941]
[124.66747284 635.30706787]
[124.69649506 620.29687500]
[126.07091522 605.34973145]
[128.77966309 590.58599854]
[132.80094910 576.12445068]
[138.10235596 562.08160400]
[144.64123535 548.57055664]
[152.36492920 535.70001221]
[161.21124268 523.57360840]
[171.10896301 512.28906250]
[181.97837830 501.93713379]
[193.73197937 492.60125732]
[206.27513123 484.35653687]
[219.50685120 477.26937866]
[213.63789368 463.46520996]
[207.76893616 449.66101074]
[191.91752625 444.04217529]
[184.89624023 428.38916016]
[191.49549866 412.18826294]
[185.42166138 398.47299194]
[179.34782410 384.75772095]
[175.29432678 382.23220825]
[172.78431702 377.13351440]
[173.30410767 370.54251099]
[167.64132690 356.65249634]
[161.97853088 342.76245117]
[156.31575012 328.87243652]
[149.51506042 342.24218750]
[135.29570007 347.01815796]
[121.80316162 340.46441650]
[116.76658630 326.33526611]
[123.07115173 312.72451782]
[137.10531616 307.42904663]
[150.82901001 313.48159790]
[146.42800903 299.14175415]
[135.29705811 289.24475098]
[138.64486694 273.78179932]
[134.24386597 259.44195557]
[129.84286499 245.10209656]
[125.44187164 230.76225281]
[121.71720123 227.77296448]
[119.83085632 222.41210938]
[121.13018036 215.92956543]
[117.15808868 201.46504211]
[113.52407074 198.36618042]
[111.79817200 192.95153809]
[113.28993225 186.51055908]
[109.75025940 171.93418884]
[106.21058655 157.35781860]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[86.29238129 75.33460999]
[82.75270844 60.75823212]
[79.21303558 46.18185806]
[66.11017609 41.90332794]
[56.90544510 31.78940201]
[53.92403030 18.55381584]
[57.84033966 5.67722321]
[67.52909851 -3.50809002]
[56.92744827 -15.25183392]
[61.65369797 -29.37669945]
[58.33143997 -44.00415802]
[47.72978592 -55.74790192]
[52.45603561 -69.87276459]
[49.13377762 -84.50022888]
[45.81151581 -99.12768555]
[41.60738754 -104.23032379]
[40.74130249 -109.84698486]
[42.61497498 -114.23997498]
[37.36761856 -100.18774414]
[26.91664886 -89.42775726]
[13.02324390 -83.77326965]
[-1.97131801 -84.17715454]
[-15.54018784 -90.57135010]
[-25.39677429 -101.87832642]
[-29.88006592 -116.19265747]
[-28.23455429 -131.10212708]
[-20.73753357 -144.09422302]
[-8.65238380 -152.97956848]
[5.98433447 -156.26080322]
[20.70607567 -153.38497925]
[33.03197098 -144.83674622]
[40.88544846 -132.05505371]
[33.14814758 -145.85522461]
[40.88544846 -158.58250427]
[33.14814758 -172.38267517]
[40.88544846 -185.10995483]
[40.88544846 -200.10995483]
[40.88544846 -215.10995483]
[27.11157990 -221.68591309]
[17.56165314 -233.59228516]
[14.13181305 -248.46504211]
[17.50305748 -263.35119629]
[27.00602341 -275.29507446]
[40.75388718 -281.92523193]
[56.01700592 -281.92523193]
[69.76486969 -275.29507446]
[79.26783752 -263.35119629]
[82.63908386 -248.46504211]
[79.20924377 -233.59228516]
[69.65931702 -221.68591309]
[55.88544846 -215.10995483]
[55.88544846 -200.10995483]
[55.88544846 -185.10995483]
[63.62274933 -172.38267517]
[55.88544846 -158.58250427]
[63.62274933 -145.85522461]
[55.88544846 -132.05505371]
[57.33486557 -117.12525177]
[60.43897629 -102.44995117]
[63.76123428 -87.82248688]
[67.08349609 -73.19503021]
[77.44751740 -62.49753952]
[72.95890045 -47.32641983]
[76.28115845 -32.69895935]
[86.64517975 -22.00146866]
[82.15656281 -6.83034945]
[97.44387054 -0.84907389]
[106.24182892 13.20644951]
[104.91522217 29.90200043]
[93.78941345 42.64218521]
[97.32908630 57.21855927]
[100.86875916 71.79493713]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.78696442 153.81814575]
[124.32663727 168.39451599]
[127.86631012 182.97088623]
[131.62260437 197.49295044]
[135.59471130 211.95747375]
[139.78172302 226.36125183]
[144.18270874 240.70111084]
[148.58370972 255.04095459]
[152.98471069 269.38079834]
[164.43046570 280.30349731]
[160.76785278 294.74075317]
[165.16885376 309.08062744]
[170.20578003 323.20965576]
[175.86856079 337.09967041]
[181.53134155 350.98968506]
[187.19413757 364.87973022]
[193.06309509 378.68389893]
[199.13693237 392.39916992]
[205.21076965 406.11444092]
[218.25054932 409.48760986]
[226.84132385 419.60736084]
[228.01760864 432.63418579]
[221.57312012 443.79205322]
[227.44207764 457.59622192]
[233.31103516 471.40042114]
[247.59530640 466.78890991]
[262.23544312 463.47644043]
[277.11358643 461.48962402]
[292.10992432 460.84448242]
[307.10369873 461.54623413]
[321.97424316 463.58920288]
[336.60174561 466.95693970]
[350.86853027 471.62231445]
[364.65963745 477.54782104]
[377.86407471 484.68566895]
[390.37548828 492.97845459]
[402.09320068 502.35937500]
[412.92282104 512.75292969]
[422.77716064 524.07537842]
[431.57690430 536.23559570]
[439.25115967 549.13568115]
[445.73815918 562.67175293]
[450.98565674 576.73480225]
[454.95141602 591.21166992]
[457.60351562 605.98571777]
[458.92056274 620.93804932]
[458.89199829 635.94818115]
[457.51803589 650.89538574]
[454.80975342 665.65924072]
[450.78890991 680.12091064]
[445.48791504 694.16387939]
[438.94946289 707.67517090]
[431.22616577 720.54595947]
[422.38021851 732.67260742]
[412.48284912 743.95745850]
[401.61373901 754.30969238]
[389.86044312 763.64593506]
[377.31753540 771.89105225]
[364.08602905 778.97863770]
[350.27246094 784.85156250]
[335.98803711 789.46264648]
[321.34780884 792.77465820]
[306.46960449 794.76104736]
[291.47323608 795.40570068]
[276.47949219 794.70349121]
[261.60900879 792.66009521]
[246.98159790 789.29187012]
[232.71498108 784.62609863]
[218.92404175 778.70019531]
[205.71981812 771.56188965]
[193.20863342 763.26873779]
[181.49122620 753.88745117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 163]
[22 162]
[23 161]
[26 157]
[27 156]
[28 155]
[31 154]
[32 153]
[33 152]
[34 151]
[41 150]
[42 149]
[44 147]
[45 146]
[46 145]
[47 144]
[50 143]
[51 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[61 134]
[62 133]
[63 132]
[64 131]
[69 127]
[71 125]
[72 124]
[74 122]
[75 121]
[76 120]
[79 119]
[93 118]
[95 116]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
