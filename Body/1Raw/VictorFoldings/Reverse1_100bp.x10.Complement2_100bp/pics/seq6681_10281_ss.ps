%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[80.54714966 643.19055176]
[78.54290771 658.41809082]
[69.18067932 670.59368896]
[54.97885132 676.44207764]
[39.75764847 674.39007568]
[27.61149597 664.98974609]
[21.80764961 650.76965332]
[23.90731239 635.55499268]
[33.34568787 623.43835449]
[47.58389664 617.67907715]
[49.58791351 602.81359863]
[51.59192657 587.94805908]
[42.38525772 576.29589844]
[44.20584488 561.19158936]
[56.49012756 551.61376953]
[58.49414062 536.74822998]
[60.49815369 521.88269043]
[62.50216675 507.01718140]
[56.53460693 493.37030029]
[66.04625702 480.72756958]
[63.82456970 473.67874146]
[68.19236755 465.65625000]
[70.41748810 450.82220459]
[72.64260101 435.98815918]
[74.86772156 421.15411377]
[77.09283447 406.32009888]
[79.31795502 391.48605347]
[81.54306793 376.65200806]
[82.65872192 361.69354248]
[82.65872192 346.69354248]
[82.65872192 331.69354248]
[82.65872192 316.69354248]
[82.65872192 301.69354248]
[82.65872192 286.69354248]
[72.11436462 297.36203003]
[57.19157028 298.88195801]
[44.71283340 290.55841064]
[40.38326645 276.19683838]
[46.18228912 262.36315918]
[59.45866394 255.38189697]
[74.14261627 258.44482422]
[83.52143860 270.15338135]
[85.08196259 255.23477173]
[86.64248657 240.31617737]
[88.20300293 225.39756775]
[89.20726776 210.43122864]
[89.65386963 195.43788147]
[82.29894257 182.48587036]
[90.44369507 168.92219543]
[83.08876038 155.97019958]
[91.23351288 142.40650940]
[91.68012238 127.41315460]
[79.11238861 119.60635376]
[72.11570740 106.57022858]
[72.55621338 91.78171539]
[80.31640625 79.18515015]
[93.32653046 72.14023590]
[93.77313995 57.14688873]
[94.21974182 42.15353775]
[91.34722900 33.48252487]
[94.78626251 26.94074821]
[95.45604706 11.95570946]
[96.12583160 -3.02932954]
[89.01245880 -17.16122627]
[97.31034851 -29.53031540]
[97.98013306 -44.51535416]
[98.64991760 -59.50039291]
[99.31970215 -74.48542786]
[99.76631165 -89.47878265]
[99.98963928 -104.47711945]
[100.21296692 -119.47545624]
[91.80584717 -129.25723267]
[92.30062866 -141.74478149]
[100.88707733 -150.26531982]
[101.33368683 -165.25866699]
[98.85794067 -169.85408020]
[98.43479919 -174.47731018]
[99.73112488 -178.34182739]
[102.14990234 -180.90734863]
[103.26554871 -195.86579895]
[104.38120270 -210.82424927]
[105.49684906 -225.78269958]
[95.46051025 -237.69529724]
[96.80503082 -252.84939575]
[108.22370911 -262.34408569]
[109.33936310 -277.30255127]
[102.64990234 -291.63998413]
[111.31237793 -303.75653076]
[112.42803192 -318.71496582]
[113.54367828 -333.67343140]
[100.64749908 -326.01257324]
[86.56407166 -331.17559814]
[81.67516327 -345.35653687]
[89.58470154 -358.10168457]
[104.46206665 -360.01583862]
[115.33963013 -349.68945312]
[117.56474304 -364.52349854]
[119.78986359 -379.35754395]
[122.01498413 -394.19158936]
[108.17691040 -400.20574951]
[96.36753845 -409.59732056]
[87.39205933 -421.72592163]
[81.86243439 -435.76464844]
[80.15567780 -450.75628662]
[82.38816071 -465.67871094]
[88.40766907 -479.51446533]
[97.80377960 -491.32019043]
[109.93585205 -500.29098511]
[123.97670746 -505.81518555]
[138.96900940 -507.51617432]
[153.89056396 -505.27792358]
[167.72398376 -499.25308228]
[179.52609253 -489.85238647]
[188.49220276 -477.71685791]
[194.01098633 -463.67388916]
[195.70617676 -448.68090820]
[193.46215820 -433.76022339]
[187.43197632 -419.92913818]
[178.02674866 -408.13064575]
[165.88775635 -399.16921997]
[151.84263611 -393.65588379]
[136.84902954 -391.96649170]
[134.62390137 -377.13244629]
[132.39878845 -362.29840088]
[130.17367554 -347.46435547]
[128.50213623 -332.55776978]
[127.38648224 -317.59933472]
[126.27083588 -302.64086914]
[133.04010010 -289.37338257]
[124.29781342 -276.18688965]
[123.18216705 -261.22845459]
[133.06605530 -250.14492798]
[132.14772034 -234.95904541]
[120.45529938 -224.66705322]
[119.33965302 -209.70860291]
[118.22400665 -194.75015259]
[117.10835266 -179.79168701]
[116.32703400 -164.81205750]
[115.88042450 -149.81871033]
[125.01911163 -134.83700562]
[115.21130371 -119.25212860]
[114.98797607 -104.25379181]
[114.76464844 -89.25545502]
[117.38921356 -85.26538086]
[117.53510284 -79.58420563]
[114.30474091 -73.81564331]
[113.63495636 -58.83060837]
[112.96517181 -43.84556961]
[112.29538727 -28.86052895]
[119.45666504 -15.80046368]
[111.11087036 -2.35954428]
[110.44108582 12.62549496]
[109.77130127 27.61053276]
[109.21308899 42.60014343]
[108.76648712 57.59349442]
[108.31987762 72.58684540]
[120.88761139 80.39364624]
[127.88429260 93.42977142]
[127.44378662 108.21828461]
[119.68359375 120.81484985]
[106.67346954 127.85976410]
[106.22686005 142.85311890]
[113.54985046 156.87753296]
[105.43704224 169.36878967]
[112.76003265 183.39321899]
[104.64722443 195.88447571]
[104.20061493 210.87782288]
[116.74185181 202.64877319]
[131.04177856 207.17779541]
[136.55902100 221.12628174]
[129.22647095 234.21191406]
[114.44941711 236.78845215]
[103.12161255 226.95808411]
[101.56108856 241.87669373]
[100.00056458 256.79528809]
[98.44004059 271.71389771]
[97.65872192 286.69354248]
[97.65872192 301.69354248]
[97.65872192 316.69354248]
[97.65872192 331.69354248]
[97.65872192 346.69354248]
[97.65872192 361.69354248]
[106.50807190 349.58203125]
[120.18733978 343.42755127]
[135.12080383 344.83886719]
[147.40487671 353.44711304]
[153.82853699 367.00204468]
[152.71266174 381.96047974]
[144.34893799 394.41232300]
[130.92361450 401.10266113]
[115.94604492 400.28268433]
[103.33132172 392.16671753]
[96.37711334 378.87710571]
[94.15200043 393.71115112]
[91.92687988 408.54519653]
[89.70175934 423.37924194]
[87.47664642 438.21328735]
[85.25152588 453.04733276]
[83.02641296 467.88137817]
[80.91178894 482.73156738]
[86.73600769 497.44174194]
[77.36769867 509.02120972]
[75.36368561 523.88671875]
[73.35967255 538.75225830]
[71.35565948 553.61779785]
[80.66514587 566.10662842]
[78.42102814 581.15386963]
[66.45745087 589.95202637]
[64.45343781 604.81756592]
[62.44942474 619.68310547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[15 205]
[16 204]
[17 203]
[18 202]
[20 200]
[22 199]
[23 198]
[24 197]
[25 196]
[26 195]
[27 194]
[28 193]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 167]
[47 166]
[49 164]
[51 162]
[52 161]
[57 156]
[58 155]
[59 154]
[61 153]
[62 152]
[63 151]
[65 149]
[66 148]
[67 147]
[68 146]
[69 143]
[70 142]
[71 141]
[74 139]
[75 138]
[79 137]
[80 136]
[81 135]
[82 134]
[85 131]
[86 130]
[88 128]
[89 127]
[90 126]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
