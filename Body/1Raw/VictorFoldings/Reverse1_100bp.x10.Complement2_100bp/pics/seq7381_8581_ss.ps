%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[95.22499084 638.88916016]
[89.94353485 624.78051758]
[87.93448639 609.85028076]
[89.29861450 594.84741211]
[93.96749115 580.52435303]
[101.70693207 567.59967041]
[112.12873077 556.72149658]
[124.71013641 548.43560791]
[138.82006836 543.15759277]
[136.81605530 528.29205322]
[134.81202698 513.42651367]
[132.80801392 498.56097412]
[130.80400085 483.69546509]
[121.43569183 472.11599731]
[127.25991821 457.40582275]
[125.25590515 442.54031372]
[123.25189209 427.67477417]
[120.06446838 424.11816406]
[119.07743835 418.52148438]
[121.41634369 412.33755493]
[119.85582733 397.41894531]
[118.29530334 382.50036621]
[116.73477936 367.58175659]
[105.68830109 360.94812012]
[100.40058136 348.98477173]
[103.00701141 335.96875000]
[112.77575684 326.69586182]
[111.43752289 311.75567627]
[99.87873840 302.43203735]
[98.30875397 287.29962158]
[108.16661072 275.23892212]
[106.82837677 260.29873657]
[97.98646545 248.31251526]
[104.46171570 233.87709045]
[103.12348175 218.93690491]
[101.78524780 203.99671936]
[88.92882538 196.52340698]
[82.86652374 182.74978638]
[86.11504364 167.87361145]
[97.63335419 157.64450073]
[96.29512024 142.70433044]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[84.67311859 87.55683899]
[76.09516907 99.86207581]
[64.85419464 109.79386902]
[51.58594513 116.79054260]
[37.04079056 120.45639801]
[22.04133224 120.58410645]
[7.43586683 117.16645813]
[-5.94959927 110.39672089]
[-17.35805130 100.65776825]
[-26.14428902 88.50038147]
[-31.81140327 74.61212158]
[-34.03889465 59.77843094]
[-32.70079041 44.83823395]
[-27.87275887 30.63647079]
[-19.82785606 17.97631645]
[-9.02105618 7.57376385]
[3.93646240 0.01713038]
[18.31188965 -4.26622105]
[33.29222488 -5.03404617]
[48.03025818 -2.24292016]
[61.69248199 3.94930482]
[73.50623322 13.19242859]
[82.80338287 24.96370697]
[89.05812836 38.59741974]
[91.91682434 53.32358170]
[95.88892365 38.85905838]
[99.86101532 24.39453316]
[99.11579895 15.29055214]
[104.00142670 9.74506474]
[108.18843842 -4.65871716]
[112.37545013 -19.06250000]
[111.76585388 -28.17656517]
[116.73350525 -33.64870071]
[121.13450623 -47.98854446]
[125.53550720 -62.32839203]
[129.93650818 -76.66824341]
[134.33749390 -91.00808716]
[133.16703796 -96.09503937]
[133.98326111 -100.66528320]
[136.25665283 -104.04857635]
[139.26844788 -105.88199615]
[144.30537415 -120.01102448]
[149.34228516 -134.14006042]
[146.68826294 -149.73706055]
[158.25004578 -159.12719727]
[163.28697205 -173.25622559]
[168.32388306 -187.38525391]
[165.66987610 -202.98225403]
[177.23165894 -212.37239075]
[182.26856995 -226.50141907]
[168.99855042 -233.55296326]
[156.89669800 -242.46157837]
[146.22099304 -253.03735352]
[137.19897461 -265.05487061]
[130.02294922 -278.25799561]
[124.84587097 -292.36529541]
[121.77809143 -307.07604980]
[120.88500214 -322.07675171]
[122.18563843 -337.04757690]
[125.65227509 -351.66949463]
[131.21102905 -365.63079834]
[138.74339294 -378.63391113]
[148.08885193 -390.40170288]
[159.04817200 -400.68328857]
[171.38777161 -409.25955200]
[184.84461975 -415.94766235]
[199.13189697 -420.60510254]
[213.94505310 -423.13256836]
[228.96836853 -423.47616577]
[243.88159180 -421.62863159]
[258.36688232 -417.62930298]
[272.11544800 -411.56344604]
[284.83422852 -403.56033325]
[296.25219727 -393.79055786]
[306.12588501 -382.46237183]
[314.24490356 -369.81723022]
[320.43615723 -356.12466431]
[324.56771851 -341.67654419]
[326.55145264 -326.78082275]
[326.34515381 -311.75500488]
[323.95315552 -296.91937256]
[319.42651367 -282.59011841]
[312.86163330 -269.07269287]
[304.39849854 -256.65524292]
[294.21749878 -245.60243225]
[282.53561401 -236.14982605]
[269.60186768 -228.49893188]
[255.69194031 -222.81283569]
[241.10232544 -219.21270752]
[226.14399719 -217.77531433]
[211.13578796 -218.53128052]
[196.39759827 -221.46449280]
[191.36068726 -207.33546448]
[194.37496948 -192.74905396]
[182.45291138 -182.34832764]
[177.41600037 -168.21929932]
[172.37907410 -154.09027100]
[175.39337158 -139.50386047]
[163.47131348 -129.10313416]
[158.43440247 -114.97410583]
[153.39747620 -100.84507751]
[148.67735291 -86.60708618]
[144.27635193 -72.26724243]
[139.87535095 -57.92739487]
[135.47434998 -43.58754730]
[131.07334900 -29.24770164]
[126.77922821 -14.87548828]
[122.59221649 -0.47170591]
[118.40521240 13.93207645]
[114.32553864 28.36662865]
[110.35344696 42.83115387]
[106.38134766 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.23530579 141.36608887]
[112.57353973 156.30627441]
[125.72640228 164.32551575]
[131.56700134 178.38755798]
[128.04904175 193.01930237]
[116.72543335 202.65847778]
[118.06366730 217.59866333]
[119.40190125 232.53884888]
[128.33953857 245.59370422]
[121.76856232 258.96051025]
[123.10679626 273.90069580]
[134.95115662 284.01745605]
[136.09548950 299.18798828]
[126.37770844 310.41744995]
[127.71594238 325.35763550]
[141.34304810 336.32675171]
[142.79222107 353.42102051]
[131.65338135 366.02124023]
[133.21391296 380.93981934]
[134.77442932 395.85842896]
[136.33494568 410.77703857]
[138.11741638 425.67074585]
[140.12142944 440.53628540]
[142.12544250 455.40182495]
[151.63710022 468.04455566]
[145.66954041 481.69143677]
[147.67355347 496.55697632]
[149.67756653 511.42251587]
[151.68157959 526.28802490]
[153.68559265 541.15356445]
[168.68946838 542.50677490]
[183.01589966 547.16522217]
[195.94625854 554.89526367]
[206.83197021 565.30920410]
[215.12699890 577.88458252]
[220.41529846 591.99066162]
[222.43157959 606.91986084]
[221.07472229 621.92346191]
[216.41279602 636.24871826]
[208.67961121 649.17724609]
[198.26309204 660.06042480]
[185.68569946 668.35241699]
[171.57833862 673.63726807]
[156.64860535 675.64996338]
[141.64537048 674.28942871]
[127.32120514 669.62402344]
[114.39459991 661.88775635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 193]
[10 192]
[11 191]
[12 190]
[13 189]
[15 187]
[16 186]
[17 185]
[20 184]
[21 183]
[22 182]
[23 181]
[27 178]
[28 177]
[31 174]
[32 173]
[34 171]
[35 170]
[36 169]
[40 165]
[41 164]
[42 163]
[43 162]
[45 160]
[46 159]
[71 158]
[72 157]
[73 156]
[75 155]
[76 154]
[77 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 148]
[87 147]
[88 146]
[89 145]
[91 143]
[92 142]
[93 141]
[95 139]
[96 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
