%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[138.09732056 776.72894287]
[127.54844666 766.03149414]
[118.55451202 753.99725342]
[111.28307343 740.85040283]
[105.86959076 726.83581543]
[102.41491699 712.21466064]
[100.98340607 697.25921631]
[101.60173035 682.24816895]
[104.25836945 667.46118164]
[108.90383148 653.17364502]
[115.45156860 639.65179443]
[123.77960968 627.14746094]
[133.73280334 615.89367676]
[145.12573242 606.10003662]
[157.74613953 597.94903564]
[171.35893250 591.59252930]
[185.71051025 587.14886475]
[183.26478577 572.34960938]
[180.81904602 557.55029297]
[178.37332153 542.75103760]
[175.92759705 527.95178223]
[173.48187256 513.15252686]
[158.50344849 512.85711670]
[143.83047485 509.81350708]
[129.96295166 504.12396240]
[117.37371826 495.98086548]
[106.49231720 485.66030884]
[97.69036102 473.51272583]
[91.26879120 459.95098877]
[87.44763947 445.43627930]
[86.35845184 430.46261597]
[88.03978729 415.53982544]
[92.43583679 401.17626953]
[99.39830017 387.86157227]
[108.69133759 376.04989624]
[119.99962616 366.14440918]
[132.93899536 358.48352051]
[147.06951904 353.32943726]
[144.62377930 338.53018188]
[142.17805481 323.73089600]
[139.51226807 308.96969604]
[136.62699890 294.24978638]
[133.63221741 279.55178833]
[130.52810669 264.87649536]
[127.42399597 250.20118713]
[110.98745728 247.53735352]
[96.80355835 238.74537659]
[87.06311798 225.15000916]
[83.28334808 208.82043457]
[86.07161713 192.25537109]
[95.02803802 178.00071716]
[108.80253601 168.25830078]
[105.26286316 153.68191528]
[101.72319031 139.10554504]
[98.18351746 124.52916718]
[94.64384460 109.95278931]
[87.71208954 123.25507355]
[74.33711243 130.04550171]
[59.50744247 127.79141235]
[48.75418854 117.33352661]
[46.08803940 102.57237244]
[52.50341034 89.01349640]
[65.60752106 81.71402740]
[80.51287079 83.39649200]
[91.66071320 93.43437195]
[82.33834076 80.65141296]
[88.50842285 67.09488678]
[86.72595978 52.20116806]
[84.94349670 37.30744934]
[83.16102600 22.41373253]
[81.37856293 7.52001619]
[69.23824310 -2.23961353]
[67.64273834 -17.36935234]
[77.02186584 -28.88314819]
[75.23940277 -43.77686310]
[73.45693207 -58.67058182]
[70.32689667 -62.84789658]
[69.22261810 -67.35720825]
[69.93132782 -71.37127686]
[71.94277954 -74.26721191]
[70.82713318 -89.22566223]
[69.71148682 -104.18411255]
[59.12797546 -93.55446625]
[44.12894440 -93.38394928]
[33.30651855 -103.77024841]
[32.86027145 -118.76360321]
[43.04583359 -129.77516174]
[58.02845764 -130.49697876]
[69.22499084 -120.51644135]
[69.44831848 -135.51478577]
[69.67164612 -150.51312256]
[69.89497375 -165.51145935]
[70.11830139 -180.50979614]
[70.34162903 -195.50813293]
[59.61404037 -206.80221558]
[60.05418396 -222.00949097]
[70.88748932 -232.16700745]
[71.11081696 -247.16534424]
[71.33414459 -262.16366577]
[71.55747223 -277.16201782]
[58.08215714 -284.41973877]
[49.53280640 -297.11489868]
[47.87399292 -312.33026123]
[53.48690796 -326.56942749]
[65.08173370 -336.56033325]
[79.99407959 -340.00717163]
[94.79718018 -336.11785889]
[106.08940125 -325.78616333]
[111.27587891 -311.38619995]
[109.16477966 -296.22695923]
[100.24124146 -283.79199219]
[86.55580902 -276.93869019]
[86.33248138 -261.94033813]
[86.10915375 -246.94201660]
[85.88582611 -231.94367981]
[96.41189575 -221.46810913]
[96.39907074 -206.25448608]
[85.33996582 -195.28480530]
[85.11663818 -180.28646851]
[84.89331055 -165.28813171]
[84.66998291 -150.28979492]
[84.44665527 -135.29145813]
[84.22332764 -120.29311371]
[84.66993713 -105.29976654]
[85.78558350 -90.34130859]
[86.90123749 -75.38285828]
[88.35065460 -60.45304871]
[90.13311768 -45.55932999]
[91.91558075 -30.66561317]
[103.74684143 -21.69025803]
[105.76667786 -6.61130190]
[96.27227783 5.73755026]
[98.05474854 20.63126755]
[99.83721161 35.52498627]
[101.61967468 50.41870117]
[103.40214539 65.31241608]
[112.59701538 77.03008270]
[106.55442810 91.65190125]
[109.22022247 106.41312408]
[112.75989532 120.98949432]
[116.29956818 135.56587219]
[119.83924103 150.14224243]
[123.37891388 164.71862793]
[136.75462341 166.04124451]
[149.05108643 171.41194153]
[159.07727051 180.29519653]
[165.86677551 191.81600952]
[168.77098083 204.84611511]
[167.52096558 218.11441040]
[162.25233459 230.33100891]
[153.49072266 240.31260681]
[142.09930420 247.09707642]
[145.20341492 261.77236938]
[148.30752563 276.44769287]
[153.14508057 284.19595337]
[151.34687805 291.36453247]
[154.23216248 306.08441162]
[158.28250122 311.30996704]
[158.98097229 316.94992065]
[156.97732544 321.28518677]
[159.42306519 336.08444214]
[161.86878967 350.88372803]
[176.90623474 351.21749878]
[191.62237549 354.30801392]
[205.51632690 360.04861450]
[218.11547852 368.24237061]
[228.99151611 378.60906982]
[237.77507019 390.79455566]
[244.16816711 404.38299561]
[247.95440674 418.91094971]
[249.00628662 433.88327026]
[247.28941345 448.79000854]
[242.86373901 463.12356567]
[235.88136292 476.39627075]
[226.58139038 488.15679932]
[215.28172302 498.00546265]
[202.36811829 505.60800171]
[188.28114319 510.70675659]
[190.72686768 525.50604248]
[193.17259216 540.30529785]
[195.61831665 555.10455322]
[198.06405640 569.90386963]
[200.50978088 584.70312500]
[215.52795410 584.29315186]
[230.46206665 585.93200684]
[245.03392029 589.58923340]
[258.97201538 595.19665527]
[272.01672363 602.64978027]
[283.92501831 611.80987549]
[294.47503662 622.50616455]
[303.47027588 634.53942871]
[310.74313354 647.68548584]
[316.15814209 661.69946289]
[319.61437988 676.32025146]
[321.04751587 691.27551270]
[320.43081665 706.28662109]
[317.77578735 721.07397461]
[313.13186646 735.36199951]
[306.58560181 748.88458252]
[298.25891113 761.38977051]
[288.30691528 772.64459229]
[276.91506958 782.43945312]
[264.29553223 790.59185791]
[250.68342590 796.94989014]
[236.33233643 801.39508057]
[221.50961304 803.84466553]
[206.49139404 804.25305176]
[191.55744934 802.61254883]
[176.98600769 798.95373535]
[163.04850769 793.34484863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[38 162]
[39 161]
[40 160]
[41 157]
[42 156]
[43 154]
[44 153]
[45 152]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[65 138]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[74 129]
[75 128]
[76 127]
[80 126]
[81 125]
[82 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
