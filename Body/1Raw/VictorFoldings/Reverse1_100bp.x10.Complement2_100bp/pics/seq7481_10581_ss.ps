%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[-6.95865774 753.66833496]
[-16.42614365 765.33508301]
[-27.42524147 775.57061768]
[-39.74185181 784.17572021]
[-53.13622665 790.98278809]
[-67.34764099 795.85949707]
[-82.09946442 798.71075439]
[-97.10455322 799.48114014]
[-112.07082367 798.15570068]
[-126.70694733 794.76013184]
[-140.72804260 789.36059570]
[-153.86117554 782.06213379]
[-165.85070801 773.00689697]
[-176.46325684 762.37115479]
[-185.49226379 750.36181641]
[-192.76194763 737.21276855]
[-198.13081360 723.17993164]
[-201.49435425 708.53637695]
[-202.78710938 693.56726074]
[-201.98390198 678.56390381]
[-199.10037231 663.81835938]
[-194.19264221 649.61761475]
[-187.35626221 636.23815918]
[-178.72427368 623.94036865]
[-168.46472168 612.96368408]
[-156.77731323 603.52172852]
[-143.88952637 595.79833984]
[-130.05224609 589.94378662]
[-115.53481293 586.07202148]
[-100.61981964 584.25848389]
[-85.59757233 584.53845215]
[-70.76050568 586.90643311]
[-66.35950470 572.56658936]
[-61.95850754 558.22674561]
[-57.55750656 543.88690186]
[-53.15650940 529.54705811]
[-48.75551224 515.20721436]
[-44.35451508 500.86737061]
[-55.50595856 492.34771729]
[-63.09565353 480.50817871]
[-66.19475555 466.75988770]
[-64.41110229 452.74987793]
[-57.93871689 440.16357422]
[-47.53694916 430.52218628]
[-34.44139481 424.99880981]
[-20.21718407 424.27569580]
[-15.60317421 410.00296021]
[-10.98916435 395.73022461]
[-6.37515545 381.45748901]
[-18.89573097 374.74945068]
[-30.05415726 365.95434570]
[-39.50623322 355.34188843]
[-46.96012115 343.23788452]
[-52.18534088 330.01419067]
[-55.01991653 316.07730103]
[-55.37537766 301.85595703]
[-53.23953629 287.78781128]
[-48.67689133 274.30603027]
[-41.82668686 261.82592773]
[-32.89865494 250.73220825]
[-22.16659737 241.36711121]
[-9.96000099 234.01980591]
[3.34609628 228.91748047]
[17.34261703 226.21833801]
[31.59902382 226.00669861]
[45.67656326 228.29029846]
[50.71347809 214.16127014]
[55.75039673 200.03224182]
[60.78731155 185.90321350]
[54.19124222 172.59805298]
[59.09811783 158.19744873]
[73.09852600 151.36909485]
[78.13543701 137.24006653]
[83.17235565 123.11103821]
[81.97106934 118.48870087]
[83.66075897 113.06265259]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[102.90725708 71.93172455]
[108.36260986 57.95892334]
[113.81797028 43.98612595]
[113.01078033 39.71969604]
[113.54907990 35.81140518]
[115.15505981 32.64024734]
[117.45636749 30.45607758]
[120.03640747 29.35994530]
[126.31377411 15.73662949]
[132.59112549 2.11331320]
[138.86849976 -11.51000309]
[145.04426575 -25.17967224]
[151.11810303 -38.89493942]
[157.19192505 -52.61020660]
[163.26576233 -66.32546997]
[167.77339172 -80.63215637]
[170.65866089 -95.35205078]
[173.54393005 -110.07194519]
[175.98966980 -124.87121582]
[177.99368286 -139.73674011]
[179.99769592 -154.60226440]
[166.27143860 -160.93325806]
[155.02220154 -171.03009033]
[147.25025940 -183.99497986]
[143.64669800 -198.67509460]
[144.53192139 -213.76507568]
[149.82722473 -227.92315674]
[159.06176758 -239.89039612]
[171.41441345 -248.60266113]
[185.78675842 -253.28529358]
[200.90083313 -253.52189636]
[215.41271973 -249.29142761]
[228.03199768 -240.97007751]
[237.63661194 -229.29776001]
[243.37248230 -215.31236267]
[244.72961426 -200.25747681]
[241.58731079 -185.47177124]
[234.22499084 -172.26995850]
[223.29731750 -161.82595825]
[209.77595520 -155.06843567]
[194.86322021 -152.59825134]
[192.85920715 -137.73272705]
[190.85519409 -122.86720276]
[192.44557190 -120.55877686]
[193.21737671 -117.48128510]
[192.87310791 -113.94336700]
[191.23237610 -110.35553741]
[188.26382446 -107.18666840]
[185.37855530 -92.46678162]
[182.49328613 -77.74688721]
[192.28485107 -89.11021423]
[205.48567200 -96.23329926]
[220.35894775 -98.17898560]
[234.94784546 -94.69127655]
[247.33294678 -86.22904205]
[255.88476562 -73.90563965]
[259.47817993 -59.34241486]
[257.64041138 -44.45542145]
[250.61323547 -31.20329475]
[239.32121277 -21.32957840]
[225.25000000 -16.13333130]
[210.25090027 -16.29820824]
[196.29731750 -21.80251884]
[185.22506714 -31.92207336]
[178.49092102 -45.32547379]
[176.98103333 -60.25164032]
[170.90719604 -46.53637314]
[164.83335876 -32.82110596]
[158.75952148 -19.10583878]
[158.92533875 -11.71704388]
[152.49180603 -5.23264217]
[146.21444702 8.39067364]
[139.93708801 22.01399040]
[133.65972900 35.63730621]
[127.79076385 49.44148254]
[122.33541107 63.41427994]
[116.88005066 77.38707733]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.30138397 128.14794922]
[92.26446533 142.27697754]
[87.22755432 156.40600586]
[93.75107574 170.55102539]
[88.44165039 184.80812073]
[74.91634369 190.94012451]
[69.87942505 205.06915283]
[64.84250641 219.19818115]
[59.80559158 233.32720947]
[73.43795776 241.38504028]
[85.24609375 251.92996216]
[94.78307343 264.56051636]
[101.68836975 278.79635620]
[105.70153046 294.09649658]
[106.67194366 309.87991333]
[104.56452179 325.54751587]
[99.46098328 340.50500488]
[91.55663300 354.18536377]
[81.15293884 366.07028198]
[68.64601898 375.70993042]
[54.51153564 382.73989868]
[39.28664398 386.89495850]
[23.54955482 388.01913452]
[7.89757776 386.07150269]
[3.28356862 400.34423828]
[-1.33044064 414.61697388]
[-5.94444990 428.88970947]
[6.36384916 439.23446655]
[13.74228001 453.47625732]
[15.08728504 469.42074585]
[10.22238255 484.62393188]
[-0.07931805 496.76681519]
[-14.21781540 504.00918579]
[-30.01466751 505.26837158]
[-34.41566467 519.60821533]
[-38.81666183 533.94805908]
[-43.21765900 548.28790283]
[-47.61865997 562.62774658]
[-52.01965714 576.96759033]
[-56.42065430 591.30743408]
[-42.80965042 597.67034912]
[-30.21669197 605.86572266]
[-18.88690948 615.73394775]
[-9.04084110 627.08300781]
[-0.87014145 639.69195557]
[5.46614361 653.31536865]
[9.84467697 667.68811035]
[12.18022919 682.53027344]
[12.42733669 697.55310059]
[10.58119106 712.46411133]
[6.67772770 726.97302246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[38 193]
[46 186]
[47 185]
[48 184]
[49 183]
[66 168]
[67 167]
[68 166]
[69 165]
[72 162]
[73 161]
[74 160]
[77 159]
[79 157]
[80 156]
[81 155]
[82 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 148]
[92 147]
[93 146]
[94 145]
[95 129]
[96 128]
[97 127]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
