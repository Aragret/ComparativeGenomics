%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[108.98493195 552.50335693]
[94.32200623 547.70727539]
[84.59743500 535.73083496]
[82.91429138 520.39556885]
[89.80966949 506.59490967]
[103.08326721 498.73266602]
[103.52987671 483.73931885]
[103.97647858 468.74597168]
[104.42308807 453.75262451]
[104.86968994 438.75924683]
[105.31629944 423.76589966]
[96.81549835 436.12457275]
[83.83751678 443.64599609]
[68.88818359 444.87792969]
[54.85400009 439.58248901]
[44.44473648 428.78216553]
[39.67026138 414.56228638]
[41.45244980 399.66854858]
[49.44718933 386.97665405]
[62.11082077 378.93722534]
[76.99819946 377.10253906]
[91.23479462 381.82687378]
[102.07175446 392.19799805]
[107.41680908 406.21469116]
[110.52091980 391.53939819]
[113.62503052 376.86407471]
[116.72914124 362.18878174]
[115.03787231 354.99423218]
[119.99025726 347.31884766]
[123.31251526 332.69137573]
[123.87072754 317.70178223]
[121.64561462 302.86773682]
[119.42049408 288.03369141]
[109.88082123 276.59500122]
[115.48538208 261.79974365]
[113.26026917 246.96569824]
[111.03514862 232.13165283]
[108.81003571 217.29760742]
[106.58491516 202.46356201]
[104.35979462 187.62951660]
[100.25885010 181.48101807]
[102.21369171 172.55821228]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[87.20471191 83.45055389]
[86.84317017 77.77901459]
[89.10129547 73.57070160]
[87.54077148 58.65209579]
[85.98024750 43.73348999]
[84.41972351 28.81488609]
[82.85919952 13.89628220]
[73.72818756 0.97594345]
[80.09942627 -12.48721504]
[77.03192902 -16.71066856]
[75.99491119 -21.23591805]
[76.76330566 -25.23899269]
[78.81764984 -28.10465622]
[77.92482758 -43.07806015]
[77.03201294 -58.05146790]
[74.03723907 -72.74947357]
[69.00032806 -86.87850189]
[63.96340942 -101.00753021]
[58.92649078 -115.13655853]
[53.88957596 -129.26559448]
[48.85266113 -143.39462280]
[43.81574249 -157.52365112]
[31.06295395 -161.85734558]
[23.24864960 -172.58801270]
[23.04451370 -185.66624451]
[30.30104637 -196.31388855]
[25.47504807 -210.51634216]
[20.64905167 -224.71879578]
[15.82305336 -238.92124939]
[10.99705601 -253.12371826]
[-3.89311981 -250.97958374]
[-18.92373657 -251.60824585]
[-33.58285522 -254.98832703]
[-47.37119293 -261.00466919]
[-59.81912231 -269.45236206]
[-70.50267792 -280.04370117]
[-79.05797577 -292.41793823]
[-85.19361877 -306.15359497]
[-88.70064545 -320.78286743]
[-89.45959473 -335.80746460]
[-87.44462585 -350.71566772]
[-82.72436523 -364.99969482]
[-75.45957947 -378.17306519]
[-65.89770508 -389.78707886]
[-54.36442184 -399.44616699]
[-41.25254059 -406.82135010]
[-27.00865555 -411.66140747]
[-12.11790276 -413.80154419]
[2.91254354 -413.16882324]
[17.57075119 -409.78479004]
[31.35746574 -403.76473999]
[43.80311966 -395.31369019]
[54.48381805 -384.71945190]
[63.03577805 -372.34292603]
[69.16772461 -358.60562134]
[72.67080688 -343.97540283]
[73.42570496 -328.95059204]
[71.40671539 -314.04293823]
[66.68260956 -299.76016235]
[59.41426849 -286.58877563]
[49.84926605 -274.97732544]
[38.31337738 -265.32135010]
[25.19951248 -257.94970703]
[30.02550888 -243.74725342]
[34.85150528 -229.54479980]
[39.67750549 -215.34234619]
[44.50350189 -201.13989258]
[59.89309692 -194.35762024]
[65.73072052 -178.22575378]
[57.94477463 -162.56056213]
[62.98168945 -148.43153381]
[68.01860809 -134.30250549]
[73.05551910 -120.17347717]
[78.09243774 -106.04444885]
[83.12935638 -91.91542053]
[88.16626740 -77.78638458]
[90.20382690 -92.64735413]
[96.47671509 -106.27272797]
[106.44226837 -117.48377991]
[119.23837280 -125.31064606]
[133.75802612 -129.07620239]
[148.74514771 -128.45472717]
[162.90319824 -123.49994659]
[175.00735474 -114.64052582]
[184.01049805 -102.64287567]
[189.13374329 -88.54492950]
[189.93391418 -73.56628418]
[186.34176636 -59.00275421]
[178.66806030 -46.11422348]
[167.57664490 -36.01568222]
[154.02703857 -29.58075714]
[139.19142151 -27.36612892]
[124.35322571 -29.56338692]
[110.79610443 -35.98244858]
[99.69287109 -46.06799698]
[92.00542450 -58.94428253]
[92.89823914 -43.97087860]
[93.79105377 -28.99747086]
[95.01802826 -14.04773808]
[104.03742218 -2.19447756]
[97.77780914 12.33575916]
[99.33833313 27.25436401]
[100.89885712 42.17296982]
[102.45937347 57.09157181]
[104.01989746 72.01017761]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[117.07921600 170.55419922]
[119.19384003 185.40440369]
[121.41896057 200.23844910]
[123.64407349 215.07249451]
[125.86919403 229.90653992]
[128.09431458 244.74057007]
[130.31942749 259.57461548]
[140.01826477 272.07434082]
[134.25453186 285.80856323]
[136.47966003 300.64260864]
[138.70477295 315.47665405]
[143.27413940 301.18957520]
[150.97439575 288.31689453]
[161.40161133 277.53387451]
[174.00878906 269.40621948]
[188.13458252 264.36022949]
[203.03797913 262.66064453]
[217.93719482 264.39663696]
[232.05062866 269.47708130]
[244.63790894 277.63552856]
[255.03875732 288.44396973]
[262.70755005 301.33544922]
[267.24200439 315.63363647]
[268.40423584 330.58856201]
[266.13330078 345.41564941]
[260.54830933 359.33712769]
[251.94224548 371.62274170]
[240.76657104 381.62792969]
[227.60752869 388.82791138]
[213.15542603 392.84497070]
[198.16838074 393.46835327]
[183.43260193 390.66540527]
[169.72106934 384.58312988]
[157.75309753 375.54058838]
[148.15646362 364.01214600]
[141.43463135 350.60256958]
[137.93997192 336.01364136]
[134.61772156 350.64111328]
[131.40444946 365.29287720]
[128.30033875 379.96820068]
[125.19622803 394.64349365]
[122.09211731 409.31878662]
[120.30964661 424.21252441]
[119.86304474 439.20587158]
[119.41643524 454.19921875]
[118.96983337 469.19256592]
[118.52322388 484.18591309]
[118.07662201 499.17926025]
[130.85871887 507.81762695]
[136.92044067 522.00421143]
[134.32751465 537.21209717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[24 201]
[25 200]
[26 199]
[27 198]
[29 197]
[30 196]
[31 170]
[32 169]
[33 168]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[48 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[57 147]
[61 146]
[62 145]
[63 144]
[64 124]
[65 123]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
