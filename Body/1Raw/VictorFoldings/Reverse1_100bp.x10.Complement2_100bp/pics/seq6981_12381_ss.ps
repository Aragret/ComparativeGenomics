%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[33.04096985 666.54602051]
[23.19179916 677.87298584]
[12.36692715 688.27148438]
[0.65351182 697.65777588]
[-11.85413551 705.95623779]
[-25.05530739 713.10015869]
[-38.84371567 719.03192139]
[-53.10834122 723.70385742]
[-67.73432922 727.07824707]
[-82.60391998 729.12799072]
[-97.59738922 729.83660889]
[-112.59401703 729.19830322]
[-127.47306061 727.21832275]
[-142.11470032 723.91253662]
[-156.40107727 719.30755615]
[-170.21714783 713.44049072]
[-183.45167542 706.35858154]
[-195.99809265 698.11883545]
[-207.75540161 688.78753662]
[-218.62890625 678.43994141]
[-228.53108215 667.15930176]
[-237.38220215 655.03643799]
[-245.11097717 642.16894531]
[-251.65521240 628.66046143]
[-256.96218872 614.61968994]
[-260.98916626 600.15979004]
[-263.70376587 585.39709473]
[-265.08410645 570.45050049]
[-265.11907959 555.44030762]
[-263.80838013 540.48748779]
[-261.16259766 525.71228027]
[-257.20300293 511.23373413]
[-251.96148682 497.16842651]
[-245.48025513 483.62960815]
[-237.81150818 470.72625732]
[-229.01695251 458.56228638]
[-219.16743469 447.23562622]
[-208.34225464 436.83746338]
[-196.62855530 427.45156860]
[-184.12065125 419.15344238]
[-170.91926575 412.00994873]
[-157.13067627 406.07858276]
[-142.86590576 401.40710449]
[-128.23980713 398.03314209]
[-113.37015533 395.98385620]
[-98.37666321 395.27569580]
[-83.38005829 395.91445923]
[-68.50107574 397.89489746]
[-53.85952759 401.20114136]
[-39.57329559 405.80654907]
[-25.75740242 411.67404175]
[-18.68029785 398.44851685]
[-11.60319233 385.22299194]
[-4.52608681 371.99746704]
[2.35332584 358.66802979]
[9.03352070 345.23767090]
[7.77390718 330.39642334]
[20.84741974 321.48608398]
[27.52761459 308.05572510]
[34.20780945 294.62533569]
[40.88800430 281.19494629]
[47.56819916 267.76458740]
[54.24839401 254.33421326]
[52.98878098 239.49296570]
[66.06229401 230.58264160]
[71.20425415 216.49150085]
[74.74392700 201.91511536]
[78.28359985 187.33874512]
[81.82327271 172.76237488]
[85.36293793 158.18598938]
[87.91877747 143.40534973]
[89.47929382 128.48674011]
[91.03981781 113.56813049]
[83.81634521 98.42885590]
[93.81699371 84.96173096]
[87.34173584 70.52630615]
[96.18365479 58.54006958]
[97.52188873 43.59988785]
[87.75314331 34.32700729]
[85.14671326 21.31097984]
[90.43444061 9.34761715]
[101.48091125 2.71399641]
[103.04143524 -12.20460796]
[104.60195923 -27.12321281]
[106.16248322 -42.04181671]
[98.27613068 -58.68173981]
[109.13035583 -72.47132874]
[110.46858978 -87.41151428]
[102.33537292 -103.93217468]
[112.98308563 -117.88184357]
[114.09873199 -132.84030151]
[104.06240082 -144.75288391]
[105.40691376 -159.90698242]
[116.82559967 -169.40168762]
[117.94124603 -184.36013794]
[119.05689240 -199.31858826]
[120.17254639 -214.27705383]
[121.28819275 -229.23550415]
[122.40383911 -244.19395447]
[108.47932434 -250.14260864]
[97.24247742 -260.29208374]
[89.91217804 -273.54144287]
[87.28357697 -288.45349121]
[89.64179993 -303.41067505]
[96.73104858 -316.79058838]
[107.78231812 -327.14181519]
[121.59687042 -333.34155273]
[136.67619324 -334.71734619]
[151.38459778 -331.11990356]
[164.12661743 -322.93948364]
[173.52011108 -311.06341553]
[178.54614258 -296.77993774]
[178.65950012 -281.63839722]
[173.84791565 -267.28125000]
[164.63330078 -255.26586914]
[152.01518250 -246.89556885]
[137.36228943 -243.07830811]
[136.24664307 -228.11985779]
[135.13099670 -213.16139221]
[134.01535034 -198.20294189]
[132.89970398 -183.24449158]
[131.78405762 -168.28604126]
[141.66793823 -157.20252991]
[140.74960327 -142.01663208]
[129.05718994 -131.72463989]
[127.94153595 -116.76618958]
[135.59497070 -107.39860535]
[134.78791809 -94.92734528]
[125.40877533 -86.07328033]
[124.07054138 -71.13309479]
[131.58364868 -61.65260315]
[130.59101868 -49.19473648]
[121.08108521 -40.48129654]
[119.52056122 -25.56269073]
[117.96003723 -10.64408493]
[116.39951324 4.27451944]
[127.53835297 16.87471962]
[126.08917236 33.96900940]
[112.46207428 44.93812180]
[111.12384033 59.87830353]
[117.69481659 73.24510956]
[108.75717926 86.29996490]
[115.67284393 95.67092133]
[114.54747009 107.26293182]
[105.95842743 115.12865448]
[104.39790344 130.04725647]
[102.83737946 144.96586609]
[113.32623291 134.24281311]
[127.92319489 130.78900146]
[142.10523987 135.67466736]
[151.47790527 147.38591003]
[153.13696289 162.29386902]
[146.56834412 175.77917480]
[133.80741882 183.66323853]
[118.80826569 183.50309753]
[106.21855927 175.34838867]
[99.93931580 161.72566223]
[96.39964294 176.30204773]
[92.85997009 190.87841797]
[89.32029724 205.45478821]
[85.78062439 220.03117371]
[96.06983185 209.11639404]
[109.57554626 202.58985901]
[124.52086639 201.31024170]
[138.93946838 205.44590759]
[150.93435669 214.45271301]
[158.92738342 227.14569092]
[161.86692810 241.85484314]
[159.36625671 256.64492798]
[151.75434875 269.57006836]
[140.03271484 278.92971802]
[125.74350739 283.49246216]
[110.76673889 282.65798950]
[97.07284546 276.53613281]
[86.46350861 265.93225098]
[80.33455658 252.24153137]
[79.49266815 237.26283264]
[80.27446747 253.06471252]
[67.67877197 261.01440430]
[60.99857330 274.44479370]
[54.31837845 287.87515259]
[47.63818359 301.30554199]
[40.95798874 314.73590088]
[34.27779388 328.16629028]
[35.05959702 343.96817017]
[22.46389580 351.91784668]
[15.78370190 365.34823608]
[15.81184196 371.95962524]
[12.92954922 376.85754395]
[8.69944096 379.07455444]
[1.62233531 392.30010986]
[-5.45477009 405.52563477]
[-12.53187561 418.75115967]
[0.01479709 426.99050903]
[11.77238083 436.32141113]
[22.64620781 446.66870117]
[32.54872894 457.94903564]
[41.40021133 470.07165527]
[49.12938690 482.93890381]
[55.67402267 496.44717407]
[60.98143005 510.48776245]
[65.00886536 524.94757080]
[67.72391510 539.71020508]
[69.10470581 554.65673828]
[69.14012146 569.66687012]
[67.82988739 584.61981201]
[65.18454742 599.39508057]
[61.22539520 613.87371826]
[55.98431778 627.93920898]
[49.50350571 641.47821045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 193]
[52 192]
[53 191]
[54 190]
[55 187]
[56 186]
[58 184]
[59 183]
[60 182]
[61 181]
[62 180]
[63 179]
[65 177]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 147]
[72 146]
[73 145]
[75 142]
[77 140]
[78 139]
[82 136]
[83 135]
[84 134]
[85 133]
[87 130]
[88 129]
[90 126]
[91 125]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
