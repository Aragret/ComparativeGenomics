%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[-36.69423294 302.96392822]
[-34.47041702 317.80737305]
[-33.51343918 332.78598022]
[-33.83018875 347.79174805]
[-35.41838837 362.71661377]
[-38.26659393 377.45300293]
[-42.35428238 391.89477539]
[-47.65200043 405.93786621]
[-54.12158203 419.48104858]
[-61.71640778 432.42681885]
[-70.38175964 444.68182373]
[-80.05519867 456.15783691]
[-90.66703033 466.77209473]
[-102.14079285 476.44818115]
[-114.39381409 485.11636353]
[-127.33781433 492.71417236]
[-140.87953186 499.18688965]
[-154.92138672 504.48782349]
[-169.36219788 508.57885742]
[-184.09794617 511.43045044]
[-199.02244568 513.02209473]
[-214.02815247 513.34228516]
[-229.00695801 512.38879395]
[-243.85093689 510.16836548]
[-258.45312500 506.69711304]
[-272.70834351 502.00000000]
[-286.51385498 496.11087036]
[-299.77017212 489.07214355]
[-312.38183594 480.93457031]
[-324.25790405 471.75674438]
[-335.31286621 461.60482788]
[-345.46707153 450.55194092]
[-354.64730835 438.67773438]
[-362.78747559 426.06774902]
[-369.82891846 412.81286621]
[-375.72085571 399.00854492]
[-380.42089844 384.75430298]
[-383.89517212 370.15283203]
[-386.11859131 355.30929565]
[-387.07519531 340.33068848]
[-386.75805664 325.32492065]
[-385.16946411 310.40008545]
[-382.32086182 295.66375732]
[-378.23281860 281.22210693]
[-372.93472290 267.17916870]
[-366.46481323 253.63612366]
[-358.86962891 240.69056702]
[-350.20397949 228.43577576]
[-340.53024292 216.96003723]
[-329.91812134 206.34602356]
[-318.44412231 196.67024231]
[-306.19088745 188.00238037]
[-293.24667358 180.40490723]
[-279.70480347 173.93255615]
[-265.66281128 168.63195801]
[-251.22187805 164.54132080]
[-236.48605347 161.69009399]
[-221.56152344 160.09884644]
[-206.55580139 159.77902222]
[-191.57702637 160.73292542]
[-176.73310852 162.95370483]
[-162.13099670 166.42535400]
[-147.87591553 171.12283325]
[-134.07055664 177.01232910]
[-120.81440735 184.05139160]
[-108.20297241 192.18930054]
[-96.32711792 201.36741638]
[-85.27241516 211.51963806]
[-75.11851501 222.57278442]
[-65.93857574 234.44723511]
[-53.33626175 226.31201172]
[-40.73395157 218.17680359]
[-28.13163757 210.04158020]
[-15.52932644 201.90637207]
[-3.84174538 192.50421143]
[6.80426359 181.93716431]
[17.45027161 171.37011719]
[28.09628105 160.80307007]
[27.89473724 145.95399475]
[38.54077148 135.08584595]
[54.11721420 134.97514343]
[64.76322174 124.40808868]
[75.40923309 113.84104156]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[114.02371979 75.51294708]
[116.12419128 69.24401093]
[120.42904663 65.53385925]
[125.14753723 64.79567719]
[136.10343933 54.55028534]
[147.05935669 44.30489349]
[158.01525879 34.05950165]
[168.97117615 23.81410980]
[173.10168457 15.66692162]
[180.16729736 13.49923897]
[191.27453613 3.41810036]
[202.38177490 -6.66303873]
[213.48899841 -16.74417686]
[204.43759155 -28.71823502]
[196.49595642 -41.45545959]
[189.72807312 -54.85329437]
[184.18841553 -68.80386353]
[179.92160034 -83.19485474]
[176.96197510 -97.91038513]
[175.33335876 -112.83197021]
[175.04887390 -127.83947754]
[176.11080933 -142.81207275]
[178.51060486 -157.62919617]
[182.22895813 -172.17155457]
[187.23593140 -186.32205200]
[193.49119568 -199.96675110]
[200.94438171 -212.99580383]
[209.53549194 -225.30429077]
[219.19535828 -236.79313660]
[229.84619141 -247.36979675]
[241.40225220 -256.94915771]
[253.77047729 -265.45404053]
[266.85128784 -272.81600952]
[280.53936768 -278.97576904]
[294.72451782 -283.88372803]
[309.29248047 -287.50039673]
[324.12600708 -289.79660034]
[339.10565186 -290.75387573]
[354.11080933 -290.36453247]
[369.02066040 -288.63168335]
[383.71514893 -285.56930542]
[398.07598877 -281.20202637]
[411.98748779 -275.56503296]
[425.33770752 -268.70367432]
[438.01913452 -260.67324829]
[449.92965698 -251.53839111]
[460.97335815 -241.37263489]
[471.06137085 -230.25784302]
[480.11242676 -218.28350830]
[488.05364990 -205.54603577]
[494.82113647 -192.14799500]
[500.36035156 -178.19726562]
[504.62673950 -163.80613708]
[507.58590698 -149.09051514]
[509.21408081 -134.16888428]
[509.49810791 -119.16136169]
[508.43572998 -104.18880463]
[506.03546143 -89.37174988]
[502.31665039 -74.82951355]
[497.30926514 -60.67916870]
[491.05358887 -47.03465652]
[483.60000610 -34.00583267]
[475.00851440 -21.69760132]
[465.34829712 -10.20906258]
[454.69714355 0.36728147]
[443.14077759 9.94627571]
[430.77230835 18.45079422]
[417.69125366 25.81236267]
[404.00299072 31.97170830]
[389.81771851 36.87923813]
[375.24960327 40.49544144]
[360.41601562 42.79119873]
[345.43634033 43.74802780]
[330.43118286 43.35822296]
[315.52139282 41.62492371]
[300.82699585 38.56208801]
[286.46630859 34.19437408]
[272.55496216 28.55694771]
[259.20495605 21.69519997]
[246.52378845 13.66438007]
[234.61355591 4.52914810]
[223.57014465 -5.63694382]
[212.46290588 4.44419527]
[201.35568237 14.52533436]
[190.24844360 24.60647202]
[179.21656799 34.77001953]
[168.26065063 45.01541138]
[157.30474854 55.26080322]
[146.34883118 65.50619507]
[135.39292908 75.75158691]
[124.59076691 86.15895844]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[85.97628021 124.48705292]
[75.33026886 135.05409241]
[64.68425751 145.62113953]
[64.45758820 161.19633484]
[53.51049042 171.76116943]
[38.66333008 171.44908142]
[28.01732063 182.01612854]
[17.37131119 192.58317566]
[6.72530222 203.15022278]
[21.26318741 199.45564270]
[36.11911392 201.52961731]
[49.08929825 209.06449890]
[58.24969101 220.94252014]
[62.24139404 235.40164185]
[60.47227097 250.29695129]
[53.20475769 263.41879272]
[41.51694489 272.82067871]
[27.14265442 277.10781860]
[12.21422100 275.64431763]
[-1.05380666 268.64718628]
[-10.69319725 257.15451050]
[-15.27400398 242.87107849]
[-14.11669159 227.91578674]
[-7.39411068 214.50868225]
[-19.99642181 222.64389038]
[-32.59873581 230.77911377]
[-45.20104599 238.91432190]
[-57.80335617 247.04954529]
[-50.76158524 260.30426025]
[-44.86927032 274.10839844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 208]
[71 207]
[72 206]
[73 205]
[74 204]
[75 189]
[76 188]
[77 187]
[78 186]
[81 183]
[82 182]
[83 181]
[84 180]
[86 178]
[87 177]
[90 176]
[91 175]
[92 174]
[93 173]
[94 172]
[96 171]
[97 170]
[98 169]
[99 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
