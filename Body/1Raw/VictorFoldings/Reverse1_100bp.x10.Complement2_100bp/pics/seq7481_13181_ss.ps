%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[84.19102478 705.05377197]
[72.45131683 714.41735840]
[59.72073746 722.38165283]
[46.16526794 728.84283447]
[31.96162033 733.71667480]
[17.29497528 736.93963623]
[2.35654235 738.46966553]
[-12.65892792 738.28680420]
[-27.55567551 736.39349365]
[-42.13949203 732.81439209]
[-56.22024918 727.59613037]
[-69.61437225 720.80676270]
[-82.14724731 712.53485107]
[-93.65547180 702.88818359]
[-103.98902130 691.99249268]
[-113.01316833 679.98992920]
[-120.61028290 667.03686523]
[-126.68129730 653.30218506]
[-131.14707947 638.96502686]
[-133.94940186 624.21221924]
[-135.05172729 609.23614502]
[-134.43969727 594.23205566]
[-132.12129211 579.39550781]
[-128.12670898 564.91998291]
[-122.50806427 550.99420166]
[-115.33857727 537.79962158]
[-106.71173096 525.50836182]
[-96.73999023 514.28057861]
[-85.55335999 504.26275635]
[-73.29768372 495.58544922]
[-60.13272858 488.36175537]
[-46.23013687 482.68585205]
[-31.77115440 478.63177490]
[-16.94428444 476.25234985]
[-1.94282258 475.57861328]
[13.03765392 476.61932373]
[27.80184364 479.36093140]
[32.20284271 465.02108765]
[36.60383987 450.68124390]
[41.00483704 436.34140015]
[45.40583420 422.00155640]
[49.48550415 407.56698608]
[53.24180222 393.04495239]
[56.99810410 378.52288818]
[60.75440598 364.00082397]
[64.51070404 349.47875977]
[68.26700592 334.95669556]
[72.02330780 320.43463135]
[75.77960968 305.91259766]
[78.22533417 291.11331177]
[79.34098053 276.15487671]
[80.45663452 261.19641113]
[81.57228088 246.23796082]
[82.68792725 231.27949524]
[83.80358124 216.32104492]
[84.91922760 201.36259460]
[86.03487396 186.40414429]
[87.15052032 171.44569397]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[95.65972900 57.35557175]
[96.77537537 42.39711761]
[97.89102173 27.43866348]
[86.22168732 17.38217926]
[82.75205231 2.55602050]
[88.60861206 -11.30632591]
[101.35234070 -18.97022438]
[102.46799469 -33.92867661]
[103.58364105 -48.88713074]
[92.27500916 -39.03244781]
[77.28049469 -38.62664032]
[65.45539856 -47.85523987]
[62.20598984 -62.49905777]
[69.01785278 -75.86312866]
[82.77669525 -81.83759308]
[97.19216919 -77.69099426]
[105.67417145 -65.31731415]
[108.33996582 -80.07852936]
[111.00576019 -94.83974457]
[96.62026215 -99.14527130]
[82.80729675 -105.03441620]
[69.74057770 -112.43312073]
[57.58443069 -121.24833679]
[46.49172974 -131.36920166]
[36.60197830 -142.66844177]
[28.03955078 -155.00395203]
[20.91213036 -168.22061157]
[15.30935097 -182.15219116]
[11.30167389 -196.62348938]
[8.93949890 -211.45251465]
[8.25253391 -226.45278931]
[9.24941730 -241.43565369]
[11.91761303 -256.21267700]
[16.22356606 -270.59805298]
[22.11312294 -284.41082764]
[29.51221657 -297.47735596]
[38.32779694 -309.63323975]
[48.44899750 -320.72561646]
[59.74853516 -330.61505127]
[72.08430481 -339.17709351]
[85.30117035 -346.30410767]
[99.23291016 -351.90649414]
[113.70433044 -355.91372681]
[128.53343201 -358.27545166]
[143.53372192 -358.96197510]
[158.51655579 -357.96463013]
[173.29351807 -355.29602051]
[187.67875671 -350.98962402]
[201.49136353 -345.09963989]
[214.55764771 -337.70016479]
[226.71327209 -328.88421631]
[237.80535889 -318.76269531]
[247.69444275 -307.46286011]
[256.25613403 -295.12683105]
[263.38275146 -281.90975952]
[268.98471069 -267.97784424]
[272.99151611 -253.50630188]
[275.35281372 -238.67713928]
[276.03887939 -223.67681885]
[275.04107666 -208.69401550]
[272.37200928 -193.91714478]
[268.06518555 -179.53202820]
[262.17480469 -165.71960449]
[254.77493286 -152.65353394]
[245.95863342 -140.49818420]
[235.83676147 -129.40638733]
[224.53663635 -119.51765442]
[212.20036316 -110.95632935]
[198.98306274 -103.83009338]
[185.05097961 -98.22856903]
[170.57933044 -94.22219086]
[155.75009155 -91.86134338]
[140.74975586 -91.17572784]
[125.76697540 -92.17395020]
[123.10118103 -77.41273499]
[120.43538666 -62.65151978]
[118.54209137 -47.77148438]
[117.42644501 -32.81303024]
[116.31079865 -17.85457611]
[127.77666473 -8.38504887]
[131.51206970 6.19269705]
[125.88149261 20.34013176]
[112.84947968 28.55431175]
[111.73382568 43.51276398]
[110.61817932 58.47121811]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[102.10897827 172.56134033]
[100.99333191 187.51979065]
[99.87767792 202.47824097]
[98.76203156 217.43669128]
[97.64638519 232.39515686]
[96.53073120 247.35360718]
[95.41508484 262.31204224]
[94.29943848 277.27050781]
[93.18378448 292.22897339]
[102.22795105 280.26220703]
[115.52883911 273.32778931]
[130.51826477 272.76461792]
[144.30200195 278.68142700]
[154.21862793 289.93579102]
[158.35339355 304.35464478]
[155.90792847 319.15396118]
[147.35444641 331.47622681]
[134.34446716 338.94216919]
[119.39001465 340.11026001]
[105.37857056 334.75494385]
[95.01551056 323.91027832]
[90.30166626 309.66888428]
[86.54536438 324.19094849]
[82.78906250 338.71301270]
[79.03276825 353.23507690]
[75.27646637 367.75711060]
[71.52016449 382.27917480]
[67.76386261 396.80123901]
[64.00756073 411.32330322]
[65.40400696 416.35290527]
[64.79267120 420.95504761]
[62.67261124 424.43649292]
[59.74568176 426.40255737]
[55.34468460 440.74240112]
[50.94368744 455.08224487]
[46.54269028 469.42208862]
[42.14168930 483.76193237]
[55.90195084 489.77468872]
[68.88710022 497.31680298]
[80.92785645 506.28997803]
[91.86723328 516.57727051]
[101.56262207 528.04449463]
[109.88761902 540.54217529]
[116.73368835 553.90734863]
[122.01158142 567.96588135]
[125.65248871 582.53442383]
[127.60894775 597.42297363]
[127.85544586 612.43756104]
[126.38877106 627.38232422]
[123.22805023 642.06250000]
[118.41448212 656.28668213]
[112.01082611 669.86944580]
[104.10056305 682.63366699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 194]
[38 193]
[39 192]
[40 191]
[41 190]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[49 179]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[72 144]
[73 143]
[74 142]
[82 141]
[83 140]
[84 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
