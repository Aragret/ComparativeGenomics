%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[198.03182983 370.39794922]
[210.46922302 361.92462158]
[204.60026550 348.12045288]
[198.73130798 334.31628418]
[192.86235046 320.51208496]
[178.99603271 315.19598389]
[172.84742737 301.28021240]
[178.51745605 286.77197266]
[166.41725159 278.08666992]
[168.13821411 262.35934448]
[162.26925659 248.55516052]
[156.40029907 234.75099182]
[150.53134155 220.94680786]
[144.66236877 207.14263916]
[138.79341125 193.33845520]
[132.92445374 179.53428650]
[126.54584503 165.95806885]
[111.28898621 157.28656006]
[112.30986786 138.90072632]
[105.23276520 125.67519379]
[98.15565491 112.44966888]
[90.78496552 99.38548279]
[83.12437439 86.48915100]
[75.46377563 73.59282684]
[67.80317688 60.69650269]
[62.23331070 57.13446045]
[59.68152618 52.05652618]
[60.11306763 47.30018234]
[52.83983994 34.18148804]
[45.56660843 21.06279182]
[38.29338074 7.94409847]
[31.02014923 -5.17459536]
[23.74691963 -18.29328918]
[11.24684811 -18.16676712]
[-0.05530126 -23.33686066]
[-8.04022312 -32.76663208]
[-11.23942852 -44.62690353]
[-9.10504150 -56.65093613]
[-2.10253501 -66.56759644]
[-8.98194790 -79.89702606]
[-15.86136055 -93.22645569]
[-22.74077225 -106.55588531]
[-38.46294403 -116.14206696]
[-36.95259476 -133.62593079]
[-44.02969742 -146.85145569]
[-51.10680389 -160.07699585]
[-51.50185776 -145.08219910]
[-57.21966553 -131.21472168]
[-67.50795746 -120.29909515]
[-81.01313019 -113.77143097]
[-95.95834351 -112.49057007]
[-110.37729645 -116.62502289]
[-122.37293243 -125.63084412]
[-130.36701965 -138.32315063]
[-133.30778503 -153.03204346]
[-130.80834961 -167.82234192]
[-123.19752502 -180.74810791]
[-111.47666168 -190.10873413]
[-97.18784332 -194.67268372]
[-82.21099854 -193.83947754]
[-68.51660156 -187.71873474]
[-57.90502548 -177.11380005]
[-61.87712097 -191.57832336]
[-65.84922028 -206.04284668]
[-69.82131195 -220.50737000]
[-73.79341125 -234.97189331]
[-88.59831238 -232.48074341]
[-103.57928467 -231.50016785]
[-118.58259583 -232.04025269]
[-133.45428467 -234.09544373]
[-148.04174805 -237.64466858]
[-162.19529724 -242.65147400]
[-175.76968384 -249.06451416]
[-188.62561035 -256.81796265]
[-200.63117981 -265.83227539]
[-211.66316223 -276.01492310]
[-221.60836792 -287.26141357]
[-230.36474609 -299.45635986]
[-237.84242249 -312.47463989]
[-243.96469116 -326.18261719]
[-248.66871643 -340.43966675]
[-251.90621948 -355.09945679]
[-253.64398193 -370.01156616]
[-253.86418152 -385.02297974]
[-252.56454468 -399.97964478]
[-249.75840759 -414.72808838]
[-245.47457886 -429.11697388]
[-239.75700378 -442.99862671]
[-232.66436768 -456.23062134]
[-224.26945496 -468.67715454]
[-214.65838623 -480.21051025]
[-203.92980957 -490.71237183]
[-192.19381714 -500.07492065]
[-179.57081604 -508.20208740]
[-166.19036865 -515.01049805]
[-152.18977356 -520.43029785]
[-137.71267700 -524.40588379]
[-122.90766907 -526.89636230]
[-107.92665863 -527.87628174]
[-92.92337036 -527.33551025]
[-78.05176544 -525.27966309]
[-63.46446228 -521.72979736]
[-49.31113815 -516.72235107]
[-35.73703384 -510.30874634]
[-22.88143921 -502.55471802]
[-10.87627888 -493.53991699]
[0.15525936 -483.35678101]
[10.09997177 -472.10983276]
[18.85580826 -459.91448975]
[26.33292198 -446.89590454]
[32.45458603 -433.18765259]
[37.15797806 -418.93038940]
[40.39483643 -404.27044678]
[42.13194275 -389.35827637]
[42.35147476 -374.34683228]
[41.05118179 -359.39022827]
[38.24440002 -344.64190674]
[33.95993805 -330.25320435]
[28.24176025 -316.37182617]
[21.14854050 -303.14013672]
[12.75307083 -290.69396973]
[3.14150095 -279.16104126]
[-7.58753824 -268.65966797]
[-19.32394981 -259.29763794]
[-31.94729805 -251.17098999]
[-45.32804489 -244.36315918]
[-59.32888794 -238.94398499]
[-55.35679245 -224.47946167]
[-51.38469315 -210.01493835]
[-47.41259766 -195.55041504]
[-43.44050217 -181.08589172]
[-37.88127518 -167.15409851]
[-30.80417061 -153.92857361]
[-23.72706604 -140.70303345]
[-12.24452782 -136.89805603]
[-6.24023581 -125.93757629]
[-9.41134357 -113.43529510]
[-2.53193092 -100.10586548]
[4.34748173 -86.77643585]
[11.22689438 -73.44700623]
[28.78885651 -71.58983612]
[41.83522415 -59.45545578]
[45.01361847 -41.76428986]
[36.86561584 -25.56651878]
[44.13884354 -12.44782543]
[51.41207504 0.67086905]
[58.68530273 13.78956318]
[65.95853424 26.90825653]
[73.23175812 40.02695084]
[80.69950104 53.03590393]
[88.36009979 65.93222809]
[96.02069855 78.82855988]
[103.68129730 91.72488403]
[107.24584198 93.19673920]
[110.14431000 96.23265076]
[111.69272614 100.49990082]
[111.38118744 105.37255859]
[118.45829010 118.59809113]
[125.53539276 131.82362366]
[137.63110352 136.30209351]
[143.25335693 147.46336365]
[139.87527466 159.07865906]
[146.85346985 145.80067444]
[161.55593872 142.82789612]
[173.14456177 152.35174561]
[173.07666016 167.35157776]
[161.40226746 176.77011108]
[146.72862244 173.66532898]
[152.59759521 187.46949768]
[158.46655273 201.27368164]
[164.33551025 215.07785034]
[170.20446777 228.88203430]
[176.07344055 242.68620300]
[181.94239807 256.49038696]
[194.46237183 266.16305542]
[192.32162476 280.90301514]
[206.70364380 286.88595581]
[212.45895386 300.96896362]
[206.66651917 314.64312744]
[212.53547668 328.44729614]
[218.40444946 342.25149536]
[224.27340698 356.05566406]
[239.00479126 352.97796631]
[254.05355835 352.83364868]
[268.84127808 355.62829590]
[282.79953003 361.25445557]
[295.39178467 369.49588013]
[306.13406372 380.03579712]
[314.61343384 392.46905518]
[320.50396729 406.31781006]
[323.57928467 421.04971313]
[323.72116089 436.09848022]
[320.92413330 450.88574219]
[315.29571533 464.84307861]
[307.05224609 477.43402100]
[296.51058960 488.17459106]
[284.07595825 496.65194702]
[270.22625732 502.54025269]
[255.49386597 505.61318970]
[240.44505310 505.75262451]
[225.65824890 502.95318604]
[211.70182800 497.32250977]
[199.11224365 489.07702637]
[188.37338257 478.53363037]
[179.89802551 466.09759521]
[174.01196289 452.24694824]
[170.94140625 437.51406860]
[170.80441284 422.46524048]
[173.60623169 407.67889404]
[179.23916626 393.72338867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[8 176]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[17 162]
[19 159]
[20 158]
[21 157]
[22 153]
[23 152]
[24 151]
[25 150]
[28 149]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[39 140]
[40 139]
[41 138]
[42 137]
[44 134]
[45 133]
[46 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
