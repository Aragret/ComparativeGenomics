%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[82.42867279 633.62713623]
[67.79552460 630.28387451]
[53.52097702 625.64239502]
[39.71995544 619.73999023]
[26.50358772 612.62426758]
[13.97828197 604.35247803]
[2.24488783 594.99114990]
[-8.60212326 584.61578369]
[-18.47541428 573.30981445]
[-27.29549217 561.16436768]
[-34.99134064 548.27716064]
[-41.50099182 534.75195312]
[-46.77204132 520.69769287]
[-50.76203918 506.22753906]
[-53.43886948 491.45794678]
[-54.78097153 476.50784302]
[-54.77754211 461.49765015]
[-53.42861176 446.54818726]
[-50.74503708 431.77981567]
[-46.74842453 417.31146240]
[-41.47095871 403.25961304]
[-34.95512772 389.73739624]
[-27.25339508 376.85369873]
[-18.42777061 364.71224976]
[-8.54931545 353.41082764]
[2.30243421 343.04040527]
[14.04010391 333.68447876]
[26.56918716 325.41836548]
[39.78880310 318.30865479]
[53.59251785 312.41259766]
[67.86918640 307.77761841]
[82.50386047 304.44107056]
[97.37870789 302.42980957]
[96.70892334 287.44476318]
[96.03913879 272.45971680]
[95.36935425 257.47467041]
[94.69956970 242.48963928]
[94.02978516 227.50460815]
[93.35999298 212.51956177]
[83.13233948 198.25906372]
[91.75382996 181.98788452]
[90.86101532 167.01448059]
[80.12042236 177.48536682]
[65.12051392 177.43255615]
[54.45392227 166.88629150]
[54.23095322 151.88793945]
[64.57933807 141.02926636]
[79.57104492 140.53057861]
[90.61774445 150.67671204]
[91.06434631 135.68336487]
[88.12139130 128.90393066]
[91.63087463 120.47058105]
[92.30065918 105.48554230]
[89.72917938 100.91372681]
[89.90224457 95.22660828]
[93.22005463 90.06626892]
[94.33570862 75.10781860]
[95.45135498 60.14936447]
[96.56700134 45.19091034]
[97.68265533 30.23245811]
[83.12359619 23.76148033]
[71.67978668 12.71500492]
[64.72209930 -1.55815232]
[63.07524490 -17.32421494]
[66.92005920 -32.67505264]
[75.77385712 -45.75910568]
[88.55092621 -55.00472260]
[103.69566345 -59.30893326]
[104.58847809 -74.28234100]
[105.48129272 -89.25574493]
[90.61444855 -94.15177155]
[77.52723694 -102.71743011]
[67.10565948 -114.36595917]
[60.05348206 -128.30210876]
[56.84469604 -143.57643127]
[57.69166946 -159.15002441]
[62.53111649 -173.96510315]
[71.02876282 -187.01690674]
[82.60246277 -197.42182922]
[96.46202087 -204.47723389]
[111.66321564 -207.70890808]
[112.33300018 -222.69395447]
[113.00278473 -237.67898560]
[113.67256927 -252.66403198]
[114.34235382 -267.64907837]
[106.23020172 -277.67681885]
[107.09656525 -290.14410400]
[115.93289948 -298.40521240]
[116.82571411 -313.37860107]
[117.71852875 -328.35202026]
[110.81635284 -342.58825684]
[119.29747009 -354.83242798]
[120.19029236 -369.80584717]
[121.08310699 -384.77923584]
[121.97592163 -399.75265503]
[107.57691193 -404.21716309]
[94.66510010 -411.99844360]
[83.99115753 -422.64413452]
[76.17566681 -435.53527832]
[71.67300415 -449.92239380]
[70.74494171 -464.96905518]
[73.44544983 -479.80047607]
[79.61750793 -493.55435181]
[88.90229034 -505.43106079]
[100.75999451 -514.74011230]
[114.50122070 -520.94024658]
[129.32708740 -523.67108154]
[144.37561035 -522.77380371]
[158.77191162 -518.30053711]
[171.67901611 -510.51144409]
[182.34649658 -499.85928345]
[190.15415955 -486.96340942]
[194.64810181 -472.57354736]
[195.56704712 -457.52633667]
[192.85754395 -442.69656372]
[186.67715454 -428.94644165]
[177.38516235 -417.07534790]
[165.52182007 -407.77349854]
[151.77684021 -401.58166504]
[136.94932556 -398.85983276]
[136.05651855 -383.88641357]
[135.16369629 -368.91302490]
[134.27087402 -353.93960571]
[141.23692322 -340.77438354]
[132.69194031 -327.45919800]
[131.79911804 -312.48577881]
[130.90631104 -297.51239014]
[139.59487915 -282.26522827]
[129.32739258 -266.97927856]
[128.65760803 -251.99424744]
[127.98782349 -237.00920105]
[127.31803894 -222.02416992]
[126.64825439 -207.03912354]
[140.44915771 -202.93302917]
[152.87133789 -195.63327026]
[163.18800354 -185.56170654]
[170.79426575 -173.30252075]
[175.24263000 -159.56832886]
[176.26931763 -145.15878296]
[173.80995178 -130.91400146]
[168.00347900 -117.66557312]
[159.18441772 -106.18802643]
[147.86354065 -97.15356445]
[134.69831848 -91.09265900]
[120.45469666 -88.36293030]
[119.56188202 -73.38952637]
[118.66906738 -58.41611862]
[131.82485962 -53.18750381]
[142.73927307 -44.13781357]
[150.33674622 -32.14163208]
[153.86328125 -18.36472702]
[152.96127319 -4.15077162]
[147.70567322 9.10970974]
[138.59800720 20.11536789]
[126.51852417 27.78174019]
[112.64110565 31.34810638]
[111.52545929 46.30656052]
[110.40980530 61.26501465]
[109.29415894 76.22346497]
[108.17851257 91.18192291]
[107.28569794 106.15532684]
[106.61591339 121.14036560]
[106.05770111 136.12997437]
[105.61109161 151.12332153]
[105.83441925 166.12165833]
[106.72723389 181.09506226]
[115.83860779 190.22445679]
[116.27397919 202.71421814]
[108.34503174 211.84977722]
[109.01482391 226.83482361]
[109.68460846 241.81985474]
[110.35439301 256.80490112]
[111.02417755 271.78994751]
[111.69396210 286.77496338]
[112.36374664 301.76000977]
[127.35871124 302.43618774]
[142.23269653 304.45379639]
[156.86595154 307.79656982]
[171.14064026 312.43765259]
[184.94184875 318.33959961]
[198.15843201 325.45495605]
[210.68399048 333.72637939]
[222.41766357 343.08731079]
[233.26499939 353.46237183]
[243.13862610 364.76800537]
[251.95907593 376.91320801]
[259.65533447 389.80017090]
[266.16537476 403.32516479]
[271.43685913 417.37927246]
[275.42730713 431.84933472]
[278.10458374 446.61883545]
[279.44714355 461.56887817]
[279.44418335 476.57907104]
[278.09570312 491.52859497]
[275.41256714 506.29705811]
[271.41641235 520.76550293]
[266.13937378 534.81756592]
[259.62396240 548.33996582]
[251.92260742 561.22387695]
[243.09735107 573.36560059]
[233.21923828 584.66729736]
[222.36781311 595.03808594]
[210.63043213 604.39434814]
[198.10159302 612.66082764]
[184.88220215 619.77093506]
[171.07865906 625.66748047]
[156.80213928 630.30285645]
[142.16757202 633.63983154]
[127.29277802 635.65155029]
[112.29754639 636.32183838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[41 166]
[42 165]
[49 164]
[50 163]
[52 162]
[53 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[68 147]
[69 146]
[70 145]
[81 133]
[82 132]
[83 131]
[84 130]
[85 129]
[88 127]
[89 126]
[90 125]
[92 123]
[93 122]
[94 121]
[95 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
