%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[147.87467957 588.65539551]
[157.11480713 576.58526611]
[170.27311707 568.97424316]
[168.26910400 554.10876465]
[166.26509094 539.24322510]
[156.83879089 531.66223145]
[155.04756165 519.29388428]
[162.39141846 508.69055176]
[160.60894775 493.79684448]
[158.82647705 478.90313721]
[157.04402161 464.00939941]
[155.26155090 449.11569214]
[153.03643799 434.28164673]
[150.37063599 419.52041626]
[147.70483398 404.75921631]
[145.03904724 389.99798584]
[142.37324524 375.23678589]
[139.70745850 360.47555542]
[137.04165649 345.71435547]
[122.30432892 343.24526978]
[109.27653503 335.86923218]
[99.54016876 324.45968628]
[94.28502655 310.38116455]
[94.16345978 295.32608032]
[99.20942688 281.11135864]
[108.83210754 269.45907593]
[121.88499451 261.78787231]
[119.21920013 247.02664185]
[116.55339813 232.26542664]
[104.51221466 219.49919128]
[110.88257599 202.22203064]
[107.99729919 187.50213623]
[105.11203003 172.78225708]
[102.22675323 158.06236267]
[98.83329010 154.70178223]
[97.51489258 149.17378235]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[84.30056763 59.88970566]
[79.05384827 45.83723450]
[73.80713654 31.78476524]
[68.56041718 17.73229218]
[63.31369781 3.67982173]
[58.06697845 -10.37264919]
[46.67803955 -16.42697906]
[42.59733582 -28.23932838]
[47.49695206 -39.29918289]
[33.41941071 -37.01557541]
[19.16300392 -37.22722244]
[5.16648340 -39.92635727]
[-8.13961411 -45.02868652]
[-20.34621048 -52.37599945]
[-31.07826614 -61.74109650]
[-40.00629807 -72.83480835]
[-46.85650635 -85.31491089]
[-51.41915131 -98.79669952]
[-53.55498886 -112.86485291]
[-53.19952774 -127.08618927]
[-50.36495590 -141.02305603]
[-45.13973236 -154.24676514]
[-37.68584824 -166.35078430]
[-28.23377037 -176.96322632]
[-17.07534409 -185.75833130]
[-4.55476809 -192.46636963]
[-9.16877747 -206.73910522]
[-13.78278732 -221.01184082]
[-25.38989067 -231.76290894]
[-21.94264603 -246.25311279]
[-26.55665398 -260.52584839]
[-31.19925117 -265.23306274]
[-32.56298065 -270.75006104]
[-31.08870125 -275.29269409]
[-35.27571106 -289.69647217]
[-39.46272278 -304.10025024]
[-43.64973450 -318.50402832]
[-58.61034775 -316.94845581]
[-73.60828400 -318.08941650]
[-88.16141510 -321.89022827]
[-101.80191803 -328.22872925]
[-114.09130859 -336.90112305]
[-124.63453674 -347.62866211]
[-133.09268188 -360.06649780]
[-139.19384766 -373.81478882]
[-142.74189758 -388.43161011]
[-143.62278748 -403.44705200]
[-141.80819702 -418.37844849]
[-137.35647583 -432.74584961]
[-130.41069031 -446.08737183]
[-121.19414520 -457.97412109]
[-110.00311279 -468.02401733]
[-97.19733429 -475.91400146]
[-83.18846130 -481.39044189]
[-68.42681885 -484.27725220]
[-53.38694000 -484.48168945]
[-38.55228806 -481.99716187]
[-24.39974213 -476.90350342]
[-11.38424206 -469.36450195]
[0.07581496 -459.62249756]
[9.61203575 -447.99063110]
[16.91786957 -434.84283447]
[21.75846672 -420.60174561]
[23.97821999 -405.72515869]
[23.50577164 -390.69131470]
[20.35631371 -375.98348999]
[14.63108349 -362.07443237]
[6.51412678 -349.41131592]
[-3.73363161 -338.40115356]
[-15.78276825 -329.39794922]
[-29.24595261 -322.69104004]
[-25.05894089 -308.28726196]
[-20.87193108 -293.88348389]
[-16.68491936 -279.47970581]
[-12.28392124 -265.13986206]
[-7.66991186 -250.86711121]
[3.60716653 -241.13691711]
[0.48994651 -225.62583923]
[5.10395575 -211.35310364]
[9.71796513 -197.08038330]
[25.36994362 -199.02801514]
[41.10703278 -197.90385437]
[56.33192444 -193.74877930]
[70.46640778 -186.71882629]
[82.97332764 -177.07916260]
[93.37702179 -165.19424438]
[101.28137207 -151.51390076]
[106.38491058 -136.55639648]
[108.49232483 -120.88878632]
[107.52191925 -105.10538483]
[103.50875854 -89.80523682]
[96.60345459 -75.56939697]
[87.06648254 -62.93883896]
[75.25834656 -52.39392090]
[61.62598038 -44.33609772]
[75.58754730 -33.70399857]
[72.11945343 -15.61936760]
[77.36616516 -1.56689632]
[82.61288452 12.48557472]
[87.85960388 26.53804588]
[93.10632324 40.59051895]
[98.35304260 54.64299011]
[101.23898315 39.92322922]
[109.79570007 27.60321808]
[122.58123016 19.75909805]
[137.44097900 17.71273613]
[151.87083435 21.80898285]
[163.43911743 31.35754967]
[170.19633484 44.74933243]
[171.00381470 59.72758484]
[165.72546387 73.76820374]
[155.25077820 84.50509644]
[141.34492493 90.12891388]
[126.35128784 89.69194794]
[112.79656219 83.26782227]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[116.94664764 155.17709351]
[119.83191681 169.89697266]
[122.71719360 184.61686707]
[125.60246277 199.33676147]
[135.85185242 207.16702271]
[137.95196533 219.48664856]
[131.31462097 229.59962463]
[133.98040771 244.36083984]
[136.64620972 259.12207031]
[151.55781555 261.74304199]
[164.64839172 269.29345703]
[174.34765625 280.84527588]
[179.49975586 294.99185181]
[179.50097656 310.01922607]
[174.37048340 324.11361694]
[164.74563599 335.58059692]
[151.80287170 343.04855347]
[154.46867371 357.80975342]
[157.13446045 372.57098389]
[159.80026245 387.33218384]
[162.46606445 402.09341431]
[165.13185120 416.85464478]
[167.79765320 431.61584473]
[170.71868896 434.82855225]
[172.30581665 438.44042969]
[172.59738159 441.98306274]
[171.77983093 445.04873657]
[170.15527344 447.33322144]
[171.93772888 462.22692871]
[173.72019958 477.12066650]
[175.50267029 492.01437378]
[177.28512573 506.90808105]
[188.66108704 521.38806152]
[181.13061523 537.23919678]
[183.13462830 552.10473633]
[185.13864136 566.97027588]
[199.84266663 570.82513428]
[211.94918823 580.01757812]
[219.61204529 593.14575195]
[221.66271973 608.20770264]
[217.78849792 622.90667725]
[208.58015442 635.00109863]
[195.44190979 642.64666748]
[180.37724304 644.67749023]
[165.68342590 640.78393555]
[153.60112000 631.55969238]
[145.97282410 618.41143799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[27 172]
[28 171]
[29 170]
[31 167]
[32 166]
[33 165]
[34 164]
[37 163]
[38 162]
[39 161]
[41 159]
[42 158]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[51 137]
[68 122]
[69 121]
[70 120]
[72 118]
[73 117]
[76 116]
[77 115]
[78 114]
[79 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
