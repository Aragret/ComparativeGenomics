%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[12.87436485 799.43505859]
[0.82339758 808.39257812]
[-12.13984585 815.97003174]
[-25.85800362 822.07537842]
[-40.16455078 826.63452148]
[-54.88581467 829.59216309]
[-69.84310150 830.91235352]
[-84.85482788 830.57904053]
[-99.73878479 828.59637451]
[-114.31427765 824.98828125]
[-128.40438843 819.79870605]
[-141.83805847 813.09051514]
[-154.45223999 804.94519043]
[-166.09378052 795.46166992]
[-176.62138367 784.75500488]
[-185.90724182 772.95513916]
[-193.83863831 760.20538330]
[-200.31929016 746.66052246]
[-205.27052307 732.48486328]
[-208.63224792 717.85058594]
[-210.36366272 702.93536377]
[-210.44372559 687.92010498]
[-208.87145996 672.98724365]
[-205.66598511 658.31793213]
[-200.86619568 644.09033203]
[-194.53034973 630.47705078]
[-186.73536682 617.64349365]
[-177.57586670 605.74530029]
[-167.16304016 594.92694092]
[-155.62327576 585.31982422]
[-143.09667969 577.04046631]
[-129.73530579 570.18945312]
[-115.70133972 564.84985352]
[-101.16514587 561.08654785]
[-86.30318451 558.94525146]
[-71.29586029 558.45190430]
[-56.32534790 559.61254883]
[-41.57337952 562.41296387]
[-37.17238235 548.07312012]
[-32.77138519 533.73327637]
[-28.37038612 519.39343262]
[-23.96938896 505.05358887]
[-35.26296234 493.49645996]
[-39.20989227 477.73010254]
[-34.64105225 462.03482056]
[-22.71253204 450.72082520]
[-6.61488771 446.94488525]
[-2.42787647 432.54110718]
[1.75913489 418.13732910]
[-5.61717892 405.24835205]
[-1.57614160 390.58123779]
[11.99301052 382.93167114]
[16.18002129 368.52789307]
[10.63080025 357.77926636]
[14.00118637 345.74496460]
[25.00957298 339.02349854]
[29.41057014 324.68365479]
[33.81156921 310.34381104]
[38.21256638 296.00396729]
[42.61356354 281.66412354]
[47.01456070 267.32427979]
[51.41556168 252.98442078]
[55.81655884 238.64457703]
[60.21755600 224.30471802]
[64.61855316 209.96487427]
[68.59065247 195.50035095]
[72.13032532 180.92398071]
[75.66999817 166.34759521]
[79.20967102 151.77122498]
[82.74934387 137.19485474]
[81.27303314 129.95314026]
[86.45174408 122.42860413]
[90.20804596 107.90653992]
[93.63910675 93.30422211]
[96.74321747 78.62892151]
[99.18894196 63.82964706]
[100.97141266 48.93592834]
[102.75387573 34.04221344]
[104.53633881 19.14849472]
[105.87457275 4.20831013]
[106.76739502 -10.76509571]
[107.66020966 -25.73850060]
[108.55302429 -40.71190643]
[105.94032288 -46.78523636]
[106.67646027 -52.42040253]
[109.70188904 -56.11577988]
[111.04012299 -71.05596161]
[112.37836456 -85.99614716]
[102.52050018 -98.05684662]
[104.09048462 -113.18925476]
[115.64926910 -122.51288605]
[116.98750305 -137.45307922]
[110.51224518 -151.88850403]
[119.35416412 -163.87474060]
[117.00285339 -172.70135498]
[120.82516479 -179.02684021]
[122.38568878 -193.94543457]
[123.94620514 -208.86404419]
[125.50672913 -223.78265381]
[127.06725311 -238.70124817]
[113.32602692 -245.06185913]
[102.39634705 -255.54139709]
[95.46378326 -269.00314331]
[93.28033447 -283.98684692]
[96.08284760 -298.86718750]
[103.56731415 -312.03005981]
[114.92188263 -322.04766846]
[128.91490173 -327.83337402]
[144.02850342 -328.75958252]
[158.62327576 -324.72579956]
[171.11608887 -316.16961670]
[180.15182495 -304.01913452]
[184.75035095 -289.59234619]
[184.41284180 -274.45416260]
[179.17591858 -260.24664307]
[169.60763550 -248.51094055]
[156.74591064 -240.52003479]
[141.98585510 -237.14073181]
[140.42533875 -222.22212219]
[138.86480713 -207.30351257]
[137.30429077 -192.38491821]
[135.74377441 -177.46630859]
[134.29434204 -162.53649902]
[140.86532593 -149.16969299]
[131.92768860 -136.11483765]
[130.58944702 -121.17465210]
[140.30723572 -109.94521332]
[139.16290283 -94.77468109]
[127.31854248 -84.65791321]
[125.98030853 -69.71772766]
[124.64207458 -54.77754593]
[123.52642822 -39.81909180]
[122.63361359 -24.84568596]
[121.74079895 -9.87228012]
[120.84798431 5.10112572]
[122.60565186 7.28487206]
[123.60420990 10.29643059]
[123.52403259 13.85015774]
[122.15468597 17.55007935]
[119.43006134 20.93096161]
[117.64759064 35.82467651]
[115.86512756 50.71839523]
[114.08266449 65.61211395]
[126.51316071 57.21671677]
[141.26490784 59.93447113]
[149.88740540 72.20851898]
[147.44132996 87.00773621]
[135.32788086 95.85444641]
[120.48619843 93.68086243]
[111.41851807 81.73302460]
[108.31440735 96.40833282]
[109.93869781 99.90605164]
[110.01336670 104.10275269]
[108.26079559 108.29029846]
[104.73010254 111.66284180]
[100.97380066 126.18490601]
[97.32571411 140.73452759]
[93.78604126 155.31089783]
[90.24636841 169.88726807]
[86.70669556 184.46365356]
[83.16702271 199.04002380]
[84.53697968 203.16036987]
[84.52565765 207.10554504]
[83.35774231 210.46282959]
[81.36887360 212.93487549]
[78.95840454 214.36587524]
[74.55740356 228.70571899]
[70.15640259 243.04556274]
[65.75540924 257.38540649]
[61.35440826 271.72525024]
[56.95341110 286.06512451]
[52.55241394 300.40496826]
[48.15141678 314.74481201]
[43.75041580 329.08465576]
[39.34941864 343.42449951]
[43.88778305 361.27062988]
[30.58380318 372.71490479]
[26.39679337 387.11868286]
[33.75067520 400.85034180]
[29.29926491 415.39816284]
[16.16291618 422.32434082]
[11.97590542 436.72811890]
[7.78889465 451.13189697]
[17.98000908 460.71334839]
[23.02459145 473.68902588]
[21.99131966 487.50607300]
[15.13868618 499.47229004]
[3.85347247 507.28079224]
[-9.62954140 509.45458984]
[-14.03053951 523.79443359]
[-18.43153763 538.13427734]
[-22.83253670 552.47412109]
[-27.23353386 566.81396484]
[-13.45037460 572.77111816]
[-0.40622145 580.20843506]
[11.74058247 589.03558350]
[22.84258652 599.14538574]
[32.76501846 610.41522217]
[41.38743591 622.70819092]
[48.60516739 635.87506104]
[54.33059311 649.75610352]
[58.49421692 664.18273926]
[61.04549408 678.97985840]
[61.95345306 693.96777344]
[61.20707321 708.96466064]
[58.81541443 723.78839111]
[54.80751038 738.25903320]
[49.23201370 752.20098877]
[42.15660477 765.44488525]
[33.66717148 777.83007812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[47 183]
[48 182]
[49 181]
[52 178]
[53 177]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[72 156]
[73 155]
[74 151]
[75 150]
[76 143]
[77 142]
[78 141]
[79 140]
[80 135]
[81 134]
[82 133]
[83 132]
[86 131]
[87 130]
[88 129]
[91 126]
[92 125]
[94 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
