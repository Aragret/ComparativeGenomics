%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[175.59547424 705.25512695]
[170.97543335 690.96142578]
[168.26068115 676.18695068]
[167.49766541 661.18450928]
[168.69946289 646.21087646]
[171.84547424 631.52215576]
[176.88189697 617.36981201]
[183.72253418 603.99591064]
[192.25033569 591.62939453]
[202.31938171 580.48175049]
[213.75740051 570.74383545]
[226.36863708 562.58221436]
[239.93730164 556.13659668]
[235.32328796 541.86389160]
[230.70928955 527.59112549]
[226.09527588 513.31842041]
[221.48126221 499.04568481]
[210.20419312 489.31549072]
[213.32141113 473.80441284]
[200.35050964 473.09747314]
[188.36238098 468.01229858]
[178.79238892 459.13409424]
[172.79437256 447.50369263]
[171.10154724 434.49551392]
[173.93688965 421.65499878]
[180.98416138 410.51522827]
[191.42286682 402.41369629]
[187.23585510 388.00991821]
[176.25349426 377.94827271]
[179.83114624 362.53686523]
[175.64413452 348.13308716]
[171.45712280 333.72930908]
[167.27011108 319.32553101]
[163.08309937 304.92175293]
[158.89608765 290.51797485]
[141.18072510 282.41363525]
[135.04238892 263.60342407]
[144.86593628 246.07695007]
[140.03994751 231.87448120]
[135.21394348 217.67202759]
[130.38795471 203.46957397]
[125.35103607 189.34054565]
[120.10431671 175.28807068]
[114.85759735 161.23561096]
[109.61087799 147.18313599]
[104.36415863 133.13066101]
[99.11743927 119.07819366]
[85.97918701 112.96815491]
[80.91102600 99.39392090]
[86.83008575 86.16852570]
[80.89665985 79.22357941]
[81.61156464 71.86758423]
[76.57465363 57.73855591]
[64.65259552 47.33782959]
[67.66688538 32.75141907]
[62.62996674 18.62238884]
[50.70791245 8.22166252]
[53.72220230 -6.36474657]
[48.68528366 -20.49377632]
[43.64836884 -34.62280655]
[37.81900024 -41.65532303]
[38.64334869 -48.99985886]
[33.81735229 -63.20231628]
[28.99135208 -77.40476990]
[24.27918625 -82.04233551]
[22.83347130 -87.53842163]
[24.23995209 -92.10250092]
[19.83895493 -106.44235229]
[17.44943428 -91.63390350]
[11.86718845 -77.71131134]
[3.36458635 -65.35388947]
[-7.64351130 -55.16459656]
[-20.61999512 -47.64057541]
[-34.93171310 -43.14894867]
[-49.88036346 -41.90886688]
[-64.73657227 -43.98083878]
[-78.77546692 -49.26377106]
[-91.31206512 -57.49989700]
[-101.73468018 -68.28735352]
[-109.53475189 -81.09980011]
[-114.33171844 -95.31208801]
[-115.89151764 -110.23076630]
[-114.13803864 -125.12792206]
[-109.15683746 -139.27670288]
[-101.19097137 -151.98672485]
[-90.62909698 -162.63786316]
[-77.98655701 -170.71043396]
[-63.88021469 -175.81053162]
[-48.99834442 -177.68933105]
[-34.06706238 -176.25515747]
[-19.81490517 -171.57797241]
[-6.93726397 -163.88600159]
[3.93753242 -153.55456543]
[12.27887821 -141.08772278]
[17.67809296 -127.10018921]
[19.01632690 -142.04037476]
[20.35456085 -156.98056030]
[21.69279671 -171.92074585]
[23.03103065 -186.86093140]
[9.11076832 -192.78388977]
[-2.29655933 -202.72009277]
[-10.07337952 -215.69607544]
[-13.45779800 -230.44059753]
[-12.11824417 -245.50914001]
[-6.18595457 -259.42541504]
[3.75788641 -270.82608032]
[16.73908234 -278.59420776]
[31.48586845 -281.96875000]
[46.55350113 -280.61911011]
[60.46581268 -274.67749023]
[71.85981750 -264.72601318]
[79.61923981 -251.73960876]
[82.98389435 -236.99057007]
[81.62414551 -221.92384338]
[75.67321777 -208.01551819]
[65.71410370 -196.62818909]
[52.72251129 -188.87747192]
[37.97121429 -185.52268982]
[36.63298035 -170.58250427]
[35.29474640 -155.64231873]
[33.95651245 -140.70213318]
[32.61827850 -125.76195526]
[34.17880249 -110.84334564]
[38.57979965 -96.50350189]
[43.19380951 -82.23076630]
[48.01980591 -68.02831268]
[52.84580231 -53.82585526]
[57.77739716 -39.65972137]
[62.81431198 -25.53069305]
[67.85122681 -11.40166283]
[79.41300964 -2.01153827]
[76.75899506 13.58547306]
[81.79591370 27.71450233]
[93.35769653 37.10462570]
[90.70368195 52.70163727]
[95.74060059 66.83066559]
[100.88256073 80.92180634]
[114.02081299 87.03184509]
[119.08897400 100.60607910]
[113.16991425 113.83147430]
[118.41663361 127.88394165]
[123.66335297 141.93641663]
[128.91006470 155.98889160]
[134.15678406 170.04135132]
[139.40350342 184.09382629]
[144.25166321 188.58903503]
[145.86036682 194.03964233]
[144.59040833 198.64358521]
[149.41639709 212.84603882]
[154.24240112 227.04849243]
[159.06840515 241.25094604]
[169.51202393 243.43139648]
[178.04330444 249.70231628]
[183.16255188 258.87820435]
[184.00459290 269.27069092]
[180.48428345 278.99914551]
[173.29988098 286.33096313]
[177.48687744 300.73474121]
[181.67388916 315.13851929]
[185.86090088 329.54229736]
[190.04791260 343.94607544]
[194.23492432 358.34985352]
[205.51678467 369.44177246]
[201.63964844 383.82290649]
[205.82666016 398.22668457]
[222.81344604 400.74435425]
[236.94525146 410.40270996]
[245.40621948 425.21862793]
[246.53613281 442.18731689]
[240.15596008 457.89169312]
[227.59414673 469.19039917]
[239.20124817 479.94146729]
[235.75399780 494.43167114]
[240.36801147 508.70440674]
[244.98202515 522.97711182]
[249.59602356 537.24987793]
[254.21003723 551.52258301]
[268.98413086 548.80572510]
[283.98645020 548.04058838]
[298.96029663 549.24023438]
[313.64941406 552.38415527]
[327.80252075 557.41851807]
[341.17736816 564.25726318]
[353.54513550 572.78332520]
[364.69418335 582.85076904]
[374.43374634 594.28741455]
[382.59713745 606.89746094]
[389.04470825 620.46520996]
[393.66610718 634.75848389]
[396.38226318 649.53271484]
[397.14669800 664.53503418]
[395.94635010 679.50885010]
[392.80172729 694.19781494]
[387.76666260 708.35064697]
[380.92727661 721.72521973]
[372.40066528 734.09259033]
[362.33267212 745.24114990]
[350.89559937 754.98016357]
[338.28512573 763.14294434]
[324.71707153 769.58984375]
[310.42358398 774.21057129]
[295.64923096 776.92602539]
[280.64682007 777.68975830]
[265.67309570 776.48870850]
[250.98426819 773.34338379]
[236.83166504 768.30761719]
[223.45745850 761.46765137]
[211.09049988 752.94042969]
[199.94241333 742.87188721]
[190.20394897 731.43432617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[19 171]
[27 165]
[28 164]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[38 151]
[39 150]
[40 149]
[41 148]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[50 137]
[52 136]
[53 135]
[55 133]
[56 132]
[58 130]
[59 129]
[60 128]
[62 127]
[63 126]
[64 125]
[67 124]
[68 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
