%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[176.36680603 255.46939087]
[183.52976990 242.27433777]
[192.03277588 229.90029907]
[201.78265381 218.48287964]
[191.45597839 207.60354614]
[181.12931824 196.72421265]
[170.80264282 185.84487915]
[160.47598267 174.96554565]
[150.14930725 164.08619690]
[139.82264709 153.20686340]
[129.49597168 142.32752991]
[115.12216949 138.42329407]
[111.23329926 123.08747101]
[100.90663147 112.20813751]
[104.95782471 126.65071106]
[104.41056061 141.64071655]
[99.31699371 155.74942017]
[90.16261292 167.63206482]
[77.81994629 176.15608215]
[63.46543503 180.50900269]
[48.46724319 180.27592468]
[34.25491333 175.47909546]
[22.18306923 166.57568359]
[13.40232468 154.41433716]
[8.74960232 140.15417480]
[8.66837120 125.15439606]
[13.16637325 110.84467316]
[21.81488800 98.58893585]
[33.78959274 89.55530548]
[47.94913864 84.60482025]
[62.94392395 84.20932770]
[77.34474182 88.40651703]
[89.77983093 96.79711914]
[82.70272827 83.57159424]
[75.33203888 70.50740814]
[67.67144012 57.61108017]
[60.01084137 44.71475220]
[52.35024261 31.81842613]
[36.08536911 23.18504333]
[36.55238342 5.64227200]
[28.70062637 -7.13857031]
[20.84887123 -19.91941261]
[12.99711609 -32.70025635]
[-0.31122762 -25.76650429]
[-14.07552242 -19.78878593]
[-28.22719383 -14.79688168]
[-42.69573975 -10.81566048]
[-57.40907669 -7.86495829]
[-72.29389954 -5.95947456]
[-87.27606201 -5.10870218]
[-102.28091431 -5.31688023]
[-117.23370361 -6.58297157]
[-132.05993652 -8.90066814]
[-146.68574524 -12.25842285]
[-161.03828430 -16.63950920]
[-175.04602051 -22.02209663]
[-188.63917542 -28.37937355]
[-201.75003052 -35.67966843]
[-214.31327820 -43.88660431]
[-226.26631165 -52.95930099]
[-237.54959106 -62.85255814]
[-248.10690308 -73.51708221]
[-257.88565063 -84.89974976]
[-266.83709717 -96.94384766]
[-274.91668701 -109.58937073]
[-282.08413696 -122.77333069]
[-288.30374146 -136.43002319]
[-293.54452515 -150.49143982]
[-297.78036499 -164.88749695]
[-300.99017334 -179.54649353]
[-303.15792847 -194.39538574]
[-304.27288818 -209.36019897]
[-304.32943726 -224.36639404]
[-303.32733154 -239.33918762]
[-301.27154541 -254.20401001]
[-298.17233276 -268.88677979]
[-294.04510498 -283.31436157]
[-288.91049194 -297.41485596]
[-282.79400635 -311.11807251]
[-275.72613525 -324.35565186]
[-267.74209595 -337.06173706]
[-258.88168335 -349.17297363]
[-249.18901062 -360.62902832]
[-238.71238708 -371.37280273]
[-227.50399780 -381.35083008]
[-215.61968994 -390.51336670]
[-203.11866760 -398.81478882]
[-190.06320190 -406.21368408]
[-176.51835632 -412.67324829]
[-162.55158997 -418.16128540]
[-148.23249817 -422.65042114]
[-133.63240051 -426.11831665]
[-118.82405853 -428.54772949]
[-103.88124084 -429.92648315]
[-88.87838745 -430.24777222]
[-73.89023590 -429.50994873]
[-58.99147034 -427.71670532]
[-44.25630951 -424.87698364]
[-29.75816536 -421.00494385]
[-15.56926823 -416.11987305]
[-1.76030612 -410.24606323]
[11.59992409 -403.41281128]
[24.44486237 -395.65417480]
[36.71051407 -387.00878906]
[48.33577728 -377.51974487]
[59.26272583 -367.23428345]
[69.43692780 -356.20367432]
[78.80769348 -344.48284912]
[87.32833862 -332.13021851]
[94.95641327 -319.20730591]
[101.65390778 -305.77850342]
[107.38747406 -291.91073608]
[112.12852478 -277.67306519]
[115.85345459 -263.13641357]
[118.54370117 -248.37324524]
[120.18585968 -233.45707703]
[120.77175140 -218.46221924]
[120.29845428 -203.46339417]
[118.76833344 -188.53530884]
[116.18901062 -173.75233459]
[112.57333374 -159.18814087]
[107.93930817 -144.91528320]
[102.31003571 -131.00485229]
[95.71354675 -117.52614594]
[88.18271637 -104.54633331]
[79.75505829 -92.13008118]
[70.47255707 -80.33922577]
[60.38145828 -69.23252869]
[49.53204346 -58.86532211]
[37.97835541 -49.28924561]
[25.77795792 -40.55200958]
[33.62971497 -27.77116776]
[41.48146820 -14.99032593]
[49.33322525 -2.20948339]
[61.02188110 0.90530074]
[67.66790771 11.48897171]
[65.24657440 24.15782928]
[72.90716553 37.05415726]
[80.56776428 49.95048141]
[88.22836304 62.84680939]
[91.53657532 64.06666565]
[94.41830444 66.94949341]
[96.09838104 71.27738953]
[95.92825317 76.49448395]
[103.00535583 89.72001648]
[111.78596497 101.88146973]
[122.11263275 112.76080322]
[137.22506714 117.44321442]
[140.37530518 132.00086975]
[150.70198059 142.88020325]
[161.02864075 153.75953674]
[171.35531616 164.63887024]
[181.68197632 175.51820374]
[192.00865173 186.39753723]
[202.33531189 197.27687073]
[212.66198730 208.15620422]
[224.57176208 199.01428223]
[237.37190247 191.16735840]
[250.92216492 184.70143127]
[265.07406616 179.68733215]
[279.67257690 176.17999268]
[294.55770874 174.21786499]
[309.56643677 173.82241821]
[324.53424072 174.99800110]
[339.29718018 177.73173523]
[353.69351196 181.99366760]
[367.56542969 187.73710632]
[380.76101685 194.89910889]
[393.13568115 203.40119934]
[404.55380249 213.15025330]
[414.89031982 224.03942871]
[424.03198242 235.94943237]
[431.87857056 248.74975586]
[438.34417725 262.30017090]
[443.35794067 276.45220947]
[446.86489868 291.05078125]
[448.82669067 305.93600464]
[449.22177124 320.94470215]
[448.04580688 335.91250610]
[445.31170654 350.67538452]
[441.04943848 365.07156372]
[435.30566406 378.94338989]
[428.14334106 392.13879395]
[419.64096069 404.51324463]
[409.89163208 415.93112183]
[399.00219727 426.26739502]
[387.09197998 435.40872192]
[374.29144287 443.25503540]
[360.74087524 449.72030640]
[346.58874512 454.73370361]
[331.99005127 458.24035645]
[317.10479736 460.20175171]
[302.09606934 460.59646606]
[287.12832642 459.42013550]
[272.36550903 456.68569946]
[257.96942139 452.42306519]
[244.09774780 446.67895508]
[230.90251160 439.51632690]
[218.52827454 431.01361084]
[207.11061096 421.26400757]
[196.77462769 410.37432861]
[187.63356018 398.46389771]
[179.78758240 385.66317749]
[173.32263184 372.11245728]
[168.30957031 357.96017456]
[164.80329895 343.36141968]
[162.84223938 328.47613525]
[162.44790649 313.46737671]
[163.62457275 298.49966431]
[166.35939026 283.73690796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 156]
[5 155]
[6 154]
[7 153]
[8 152]
[9 151]
[10 150]
[11 149]
[13 147]
[14 146]
[33 145]
[34 144]
[35 140]
[36 139]
[37 138]
[38 137]
[40 134]
[41 133]
[42 132]
[43 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
