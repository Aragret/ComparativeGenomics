%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[118.58528137 652.19274902]
[106.66442108 662.56909180]
[90.90390778 661.39361572]
[80.65417480 649.36376953]
[81.99620819 633.61651611]
[94.13379669 623.49456787]
[95.24945068 608.53613281]
[96.36509705 593.57763672]
[97.48074341 578.61920166]
[98.59639740 563.66076660]
[99.71204376 548.70227051]
[88.20298767 536.43933105]
[89.14256287 519.30944824]
[102.43703461 507.93948364]
[103.32984924 492.96609497]
[104.22266388 477.99267578]
[105.11547852 463.01928711]
[97.32343292 453.76669312]
[97.94470978 441.28479004]
[107.19099426 432.29205322]
[108.30664062 417.33361816]
[109.42228699 402.37515259]
[109.75726318 387.37887573]
[109.31066132 372.38552856]
[108.86405182 357.39218140]
[108.41744995 342.39883423]
[107.97084045 327.40548706]
[104.62958527 320.81323242]
[107.63087463 312.18594360]
[107.40754700 297.18762207]
[92.59007263 291.56906128]
[81.03514099 280.66799927]
[74.53240967 266.13220215]
[74.10459900 250.17536926]
[79.84679413 235.24008179]
[90.90731812 223.62391663]
[105.61396790 217.12600708]
[105.16735840 202.13265991]
[104.72075653 187.13931274]
[104.27414703 172.14595032]
[102.71362305 157.22735596]
[100.04782867 142.46614075]
[86.97278595 140.41864014]
[75.16297913 134.44557190]
[65.76541901 125.12704468]
[59.69282150 113.36811066]
[57.53497696 100.31082153]
[59.50145721 87.22335052]
[65.40127563 75.37677765]
[74.66142273 65.92169189]
[86.38252258 59.77638626]
[84.15740204 44.94234085]
[81.93228912 30.10829735]
[76.06269836 43.91220856]
[65.14169312 54.19480133]
[51.00966263 59.22327805]
[36.04809189 58.15025330]
[22.77827072 51.15655136]
[13.43639851 39.42073441]
[9.59674549 24.92049026]
[11.90635967 10.09936619]
[19.97603035 -2.54501581]
[32.44587708 -10.88185787]
[47.21451187 -13.50625420]
[61.79315948 -9.97594833]
[73.72505951 -0.88585937]
[80.99996948 12.23375797]
[81.66975403 -2.75128102]
[82.33953857 -17.73632050]
[83.00932312 -32.72135925]
[83.67911530 -47.70639801]
[84.34889984 -62.69143677]
[85.01868439 -77.67647552]
[85.68846893 -92.66151428]
[86.02344513 -107.65777588]
[86.02344513 -122.65777588]
[75.12889099 -133.79089355]
[75.34256744 -149.00303650]
[86.02344513 -159.32070923]
[86.02344513 -174.32070923]
[86.02344513 -189.32070923]
[85.91177368 -204.32029724]
[85.68844604 -219.31863403]
[85.46511841 -234.31697083]
[85.01851654 -249.31031799]
[84.34873199 -264.29534912]
[83.67894745 -279.28039551]
[80.16946411 -287.71374512]
[83.11241913 -294.49319458]
[82.66581726 -309.48654175]
[82.21920776 -324.47988892]
[67.43752289 -327.38668823]
[53.67348480 -333.51031494]
[41.61748505 -342.54364014]
[31.87425232 -354.03350830]
[24.93250465 -367.40362549]
[21.14043427 -381.98333740]
[20.68824959 -397.04132080]
[23.59863472 -411.82229614]
[29.72560501 -425.58486938]
[38.76183319 -437.63867188]
[50.25406647 -447.37911987]
[63.62585831 -454.31762695]
[78.20648956 -458.10617065]
[93.26459503 -458.55468750]
[108.04486847 -455.64074707]
[121.80593872 -449.51043701]
[133.85755920 -440.47128296]
[143.59523010 -428.97668457]
[150.53048706 -415.60321045]
[154.31549072 -401.02166748]
[154.76037598 -385.96347046]
[151.84283447 -371.18389893]
[145.70919800 -357.42428589]
[136.66712952 -345.37487793]
[125.17017365 -335.63998413]
[111.79502106 -328.70797729]
[97.21256256 -324.92648315]
[97.65916443 -309.93313599]
[98.10577393 -294.93978882]
[98.66398621 -279.95019531]
[99.33377075 -264.96514893]
[100.00355530 -249.98010254]
[102.86096191 -246.15332031]
[103.34474182 -240.49090576]
[100.46345520 -234.54029846]
[100.68678284 -219.54196167]
[100.91011047 -204.54362488]
[104.15285492 -197.90235901]
[101.02344513 -189.32070923]
[101.02344513 -174.32070923]
[101.02344513 -159.32070923]
[111.70431519 -149.00303650]
[111.91799927 -133.79089355]
[101.02344513 -122.65777588]
[101.02344513 -107.65777588]
[103.24471283 -104.91947174]
[104.25001526 -100.96922302]
[103.48417664 -96.39027405]
[100.67350769 -91.99172974]
[100.00372314 -77.00669098]
[99.33393860 -62.02165222]
[98.66415405 -47.03661346]
[97.99436188 -32.05157471]
[97.32457733 -17.06653404]
[96.65479279 -2.08149576]
[95.98500824 12.90354347]
[96.76633453 27.88318062]
[98.99144745 42.71722412]
[101.21656799 57.55126953]
[117.41175842 61.26751328]
[130.94122314 70.91365814]
[139.73362732 85.01288605]
[142.44285583 101.40662384]
[138.65412903 117.58501434]
[128.94750977 131.07115173]
[114.80904388 139.80033875]
[117.47484589 154.56155396]
[124.03086853 141.07012939]
[136.39860535 132.58255005]
[151.34516907 131.31744385]
[164.96354675 137.60551453]
[173.69392395 149.80307007]
[175.25422668 164.72169495]
[169.23657227 178.46170044]
[157.21397400 187.43148804]
[142.32910156 189.28637695]
[128.47282410 183.54148865]
[119.26750183 171.69935608]
[119.71410370 186.69270325]
[120.16071320 201.68605042]
[120.60731506 216.67939758]
[134.06430054 221.34423828]
[145.09756470 230.30348206]
[152.39465332 242.46513367]
[155.09651184 256.35781860]
[152.89859009 270.30886841]
[146.08505249 282.64559937]
[135.49221802 291.89602661]
[122.40589142 296.96429443]
[122.62921906 311.96261597]
[122.96419525 326.95889282]
[123.41079712 341.95223999]
[123.85740662 356.94558716]
[124.30400848 371.93893433]
[124.75061798 386.93228149]
[134.97265625 375.95458984]
[149.84358215 373.99102783]
[162.56460571 381.93933105]
[167.31985474 396.16561890]
[161.93528748 410.16586304]
[148.87265015 417.53930664]
[134.10401917 414.91491699]
[124.38074493 403.49078369]
[123.26509094 418.44924927]
[122.14944458 433.40771484]
[130.52772522 449.80545044]
[120.08889008 463.91207886]
[119.19606781 478.88549805]
[118.30325317 493.85891724]
[117.41043854 508.83230591]
[127.45093536 517.81024170]
[130.44375610 530.74285889]
[125.51456451 542.85839844]
[114.67049408 549.81793213]
[113.55484772 564.77642822]
[112.43920135 579.73486328]
[111.32354736 594.69329834]
[110.20790100 609.65173340]
[109.09225464 624.61022949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[14 201]
[15 200]
[16 199]
[17 198]
[20 196]
[21 195]
[22 194]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[29 181]
[30 180]
[37 172]
[38 171]
[39 170]
[40 169]
[41 158]
[42 157]
[51 150]
[52 149]
[53 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 136]
[76 135]
[79 132]
[80 131]
[81 130]
[82 128]
[83 127]
[84 126]
[85 123]
[86 122]
[87 121]
[89 120]
[90 119]
[91 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
