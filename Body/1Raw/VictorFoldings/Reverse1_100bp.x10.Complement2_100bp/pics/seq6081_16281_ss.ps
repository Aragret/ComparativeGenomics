%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[103.91690063 496.56359863]
[91.61109161 505.66445923]
[76.48368835 507.99261475]
[62.01086044 503.01309204]
[51.51835251 491.87011719]
[47.41726685 477.12426758]
[50.65000534 462.16406250]
[60.47370529 450.42721558]
[74.63095093 444.61077881]
[75.96918488 429.67059326]
[77.30741882 414.73040771]
[78.64565277 399.79022217]
[79.98388672 384.85003662]
[81.21086121 369.90029907]
[82.32651520 354.94186401]
[83.33077240 339.97552490]
[84.22358704 325.00210571]
[81.48378754 318.13806152]
[85.24279785 309.81292725]
[86.35845184 294.85449219]
[73.46227264 302.51531982]
[59.37884140 297.35229492]
[54.48993301 283.17138672]
[62.39947128 270.42620850]
[77.27684021 268.51205444]
[88.15440369 278.83843994]
[90.37951660 264.00439453]
[92.60463715 249.17034912]
[94.82975006 234.33630371]
[97.05487061 219.50225830]
[97.72465515 204.51722717]
[96.83184052 189.54382324]
[95.93902588 174.57041931]
[92.40296936 168.08056641]
[95.14606476 159.36773682]
[94.47628021 144.38270569]
[86.17839813 132.01361084]
[93.29177094 117.88172150]
[82.66996765 108.02659607]
[82.02297211 93.55152130]
[91.72319031 82.78806305]
[91.05340576 67.80302429]
[90.38362122 52.81798935]
[89.71383667 37.83295059]
[89.04405212 22.84790993]
[86.23337555 18.44936371]
[85.46754456 13.87041283]
[86.47284698 9.92016983]
[88.69411469 7.18186569]
[80.95681000 -6.61830664]
[88.69411469 -19.34557915]
[80.95681000 -33.14575195]
[88.69411469 -45.87302399]
[88.69411469 -60.87302399]
[88.69411469 -75.87302399]
[87.68984985 -90.83937073]
[85.68583679 -105.70489502]
[83.68182373 -120.57042694]
[81.67781067 -135.43595886]
[79.67379761 -150.30148315]
[71.39575958 -137.79252625]
[57.38691330 -132.43040466]
[42.87221909 -136.21507263]
[33.26529694 -147.73492432]
[32.14929199 -162.69335938]
[39.94044876 -175.51123047]
[53.73285294 -181.40780640]
[68.38227844 -178.18379211]
[78.42533875 -167.04061890]
[78.20201111 -182.03895569]
[77.97868347 -197.03729248]
[77.75535583 -212.03562927]
[77.53202820 -227.03396606]
[77.30870056 -242.03230286]
[77.08537292 -257.03063965]
[68.81283569 -244.51805115]
[55.71773911 -237.20240784]
[40.72556305 -236.71807861]
[27.18559265 -243.17324829]
[18.12269592 -255.12582397]
[15.56154633 -269.90554810]
[20.07431221 -284.21063232]
[30.65282822 -294.84524536]
[44.93382645 -299.43359375]
[59.72689819 -296.95065308]
[71.72723389 -287.95108032]
[78.25392914 -274.44543457]
[80.47904205 -289.27947998]
[82.70416260 -304.11352539]
[68.70405579 -314.73568726]
[62.04613113 -330.90301514]
[64.48116302 -348.12725830]
[75.24900055 -361.67593384]
[91.31258392 -367.87268066]
[85.26999664 -382.49450684]
[94.46487427 -394.21215820]
[96.24733734 -409.10586548]
[98.02980042 -423.99960327]
[99.81227112 -438.89331055]
[101.59473419 -453.78701782]
[87.85699463 -460.12182617]
[76.75056458 -470.39324951]
[69.36353302 -483.59503174]
[66.41961670 -498.43377686]
[68.20722198 -513.45574951]
[74.55121613 -527.18927002]
[84.83009338 -538.28881836]
[98.03681946 -545.66699219]
[112.87754059 -548.60095215]
[127.89830780 -546.80328369]
[141.62754822 -540.45007324]
[152.72021484 -530.16375732]
[160.08953857 -516.95208740]
[163.01356506 -502.10943604]
[161.20582581 -487.08987427]
[154.84342957 -473.36489868]
[144.54969788 -462.27911377]
[131.33308411 -454.91864014]
[116.48844910 -452.00457764]
[114.70598602 -437.11083984]
[112.92352295 -422.21713257]
[111.14105225 -407.32342529]
[109.35858917 -392.42968750]
[115.52867126 -378.87316895]
[106.20630646 -366.09020996]
[117.07568359 -359.65011597]
[124.73021698 -349.54028320]
[128.00457764 -337.24124146]
[126.37821198 -324.57101440]
[120.05765533 -313.41641235]
[109.95114899 -305.45187378]
[97.53820801 -301.88839722]
[95.31308746 -287.05435181]
[93.08797455 -272.22030640]
[92.08370972 -257.25396729]
[92.30703735 -242.25563049]
[92.53036499 -227.25729370]
[92.75369263 -212.25895691]
[92.97702026 -197.26062012]
[93.20034790 -182.26228333]
[93.42367554 -167.26394653]
[94.53932953 -152.30549622]
[96.54334259 -137.43997192]
[98.54735565 -122.57444000]
[100.55136871 -107.70890808]
[102.55538177 -92.84338379]
[110.21760559 -105.73874664]
[123.58730316 -112.53956604]
[138.52172852 -111.13854218]
[150.39329529 -101.96978760]
[155.52345276 -87.87435150]
[152.32258606 -73.21984863]
[141.78250122 -62.54713821]
[127.16917419 -59.16328049]
[113.01068878 -64.11679840]
[103.69411469 -75.87302399]
[103.69411469 -60.87302399]
[103.69411469 -45.87302399]
[111.43141174 -33.14575195]
[103.69411469 -19.34557915]
[111.43141174 -6.61830664]
[103.69411469 7.18186569]
[104.02909088 22.17812538]
[104.69887543 37.16316223]
[105.36865997 52.14820099]
[106.03844452 67.13323975]
[106.70822906 82.11827850]
[117.33003235 91.97340393]
[117.97702789 106.44847870]
[108.27680969 117.21193695]
[116.62260437 130.65284729]
[109.46131897 143.71292114]
[110.13110352 158.69795227]
[110.91242981 173.67759705]
[111.80524445 188.65100098]
[112.69805908 203.62440491]
[119.53482819 190.27305603]
[130.91058350 180.49592590]
[145.13778687 175.74339294]
[160.10592651 176.72047424]
[173.59457397 183.28221130]
[183.60275269 194.45523071]
[188.64582825 208.58206177]
[187.97567749 223.56707764]
[181.69171143 237.18734741]
[170.72613525 247.42239380]
[156.70559692 252.75387573]
[141.70999146 252.39093018]
[127.96381378 246.38739014]
[117.50622559 235.63383484]
[111.88891602 221.72738647]
[109.66379547 236.56141663]
[107.43867493 251.39546204]
[105.21356201 266.22952271]
[102.98844147 281.06356812]
[101.31690216 295.97012329]
[100.20125580 310.92858887]
[99.19699097 325.89492798]
[98.30417633 340.86834717]
[100.91725159 349.62103271]
[97.28496552 356.05749512]
[96.16931915 371.01596069]
[98.65178680 379.80657959]
[94.92407227 386.18829346]
[93.58583832 401.12847900]
[92.24760437 416.06866455]
[90.90937042 431.00885010]
[89.57113647 445.94903564]
[102.46932220 454.18887329]
[110.05077362 467.48477173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 204]
[14 202]
[15 201]
[16 199]
[17 198]
[19 197]
[20 196]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 176]
[32 175]
[33 174]
[35 173]
[36 172]
[38 170]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[49 162]
[51 160]
[53 158]
[54 157]
[55 156]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[87 134]
[88 133]
[89 132]
[94 125]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
