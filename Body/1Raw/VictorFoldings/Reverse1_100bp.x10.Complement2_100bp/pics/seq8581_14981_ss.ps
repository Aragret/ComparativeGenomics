%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[35.47300339 813.89105225]
[20.55666161 815.51617432]
[5.56941366 816.23767090]
[-9.43405342 816.05291748]
[-24.39899445 814.96264648]
[-39.27080154 812.97082520]
[-53.99521255 810.08465576]
[-68.51849365 806.31469727]
[-82.78765869 801.67474365]
[-96.75063324 796.18170166]
[-110.35646820 789.85565186]
[-123.55552673 782.71960449]
[-136.29963684 774.79962158]
[-148.54229736 766.12463379]
[-160.23883057 756.72625732]
[-171.34657288 746.63885498]
[-181.82498169 735.89916992]
[-191.63581848 724.54638672]
[-200.74330139 712.62194824]
[-209.11418152 700.16937256]
[-216.71791077 687.23413086]
[-223.52676392 673.86334229]
[-229.51588440 660.10583496]
[-234.66340637 646.01184082]
[-238.95057678 631.63275146]
[-242.36172485 617.02099609]
[-244.88441467 602.22998047]
[-246.50942993 587.31365967]
[-247.23086548 572.32641602]
[-247.04606628 557.32293701]
[-245.95571899 542.35797119]
[-243.96380615 527.48620605]
[-241.07757568 512.76177979]
[-237.30757141 498.23852539]
[-232.66755676 483.96939087]
[-227.17445374 470.00643921]
[-220.84831238 456.40063477]
[-213.71220398 443.20159912]
[-205.79217529 430.45755005]
[-197.11712646 418.21493530]
[-187.71871948 406.51843262]
[-177.63124084 395.41073608]
[-166.89149475 384.93237305]
[-155.53866577 375.12158203]
[-143.61419678 366.01416016]
[-131.16159058 357.64334106]
[-118.22628021 350.03967285]
[-104.85546875 343.23086548]
[-91.09794617 337.24182129]
[-77.00391388 332.09436035]
[-62.62479782 327.80725098]
[-48.01306534 324.39617920]
[-33.22203827 321.87356567]
[-18.30568314 320.24859619]
[-3.31842828 319.52725220]
[11.68503666 319.71209717]
[26.64996719 320.80252075]
[41.52175522 322.79452515]
[44.40702820 308.07461548]
[47.29230118 293.35473633]
[40.71865463 277.08346558]
[52.93630981 263.30630493]
[55.60210419 248.54507446]
[58.26789856 233.78385925]
[44.64470673 240.06149292]
[31.17483139 233.46130371]
[27.78776360 218.84870911]
[36.98032379 206.99557495]
[51.97609711 206.63958740]
[61.72032928 218.04156494]
[65.47663116 203.51950073]
[69.23293304 188.99745178]
[72.98923492 174.47538757]
[76.74553680 159.95332336]
[68.98873901 147.28968811]
[72.59128571 132.50874329]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[91.76004028 71.00914764]
[102.43797302 60.62498093]
[106.19427490 46.10292053]
[109.95057678 31.58086014]
[113.70687866 17.05880165]
[115.37841797 2.15222716]
[114.93180847 -12.84112263]
[114.48520660 -27.83447266]
[105.64968872 -37.23109436]
[105.58638000 -49.72828293]
[113.78380585 -58.62372208]
[113.56047821 -73.62205505]
[113.33715057 -88.62039185]
[113.11382294 -103.61873627]
[110.05664062 -109.48091125]
[110.37162018 -115.15522766]
[113.11382294 -119.06539154]
[113.33715057 -134.06372070]
[113.56047821 -149.06205750]
[113.78380585 -164.06039429]
[100.30849457 -171.31811523]
[91.75914001 -184.01327515]
[90.10032654 -199.22863770]
[95.71324158 -213.46780396]
[107.30807495 -223.45872498]
[122.22041321 -226.90556335]
[137.02351379 -223.01625061]
[148.31573486 -212.68453979]
[153.50221252 -198.28457642]
[151.39111328 -183.12535095]
[142.46757507 -170.69036865]
[128.78215027 -163.83706665]
[128.55882263 -148.83872986]
[128.33549500 -133.84039307]
[128.11216736 -118.84206390]
[128.11216736 -103.84206390]
[128.33549500 -88.84371948]
[128.55882263 -73.84538269]
[128.78215027 -58.84704971]
[138.58068848 -44.28835297]
[129.47856140 -28.28107834]
[129.92515564 -13.28772831]
[130.37176514 1.70562124]
[136.88177490 -11.80806828]
[147.04170227 -22.84328079]
[159.97261047 -30.44536018]
[174.55584717 -33.95664978]
[189.52981567 -33.07338715]
[203.59912109 -27.87198830]
[215.54663086 -18.80241966]
[224.33876038 -6.64929342]
[229.21490479 7.53602409]
[229.75323486 22.52636147]
[225.90715027 37.02490234]
[218.00941467 49.77738190]
[206.74324036 59.68058014]
[193.08326721 65.87777710]
[178.21122742 67.83283997]
[163.41369629 65.37664795]
[149.97079468 58.72168732]
[139.04548645 48.44366837]
[131.58291626 35.43175125]
[128.22894287 20.81510162]
[124.47263336 35.33716202]
[120.71633148 49.85922241]
[116.96003723 64.38127899]
[121.26364136 78.64060211]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[108.20819092 141.72148132]
[104.19189453 156.39540100]
[91.26759338 163.70962524]
[87.51129150 178.23168945]
[83.75498962 192.75375366]
[79.99868774 207.27580261]
[76.24239349 221.79786682]
[73.02911377 236.44966125]
[70.36331940 251.21087646]
[67.69752502 265.97207642]
[74.39723969 276.99374390]
[71.87300110 289.23352051]
[62.01219177 296.24002075]
[59.12692261 310.95989990]
[56.24164963 325.67977905]
[70.76496887 329.44958496]
[85.03417206 334.08941650]
[98.99720001 339.58230591]
[112.60309601 345.90826416]
[125.80221558 353.04418945]
[138.54640198 360.96405029]
[150.78913879 369.63891602]
[162.48576355 379.03717041]
[173.59359741 389.12448120]
[184.07209778 399.86410522]
[193.88305664 411.21679688]
[202.99063110 423.14111328]
[211.36163330 435.59362793]
[218.96548462 448.52883911]
[225.77445984 461.89953613]
[231.76370239 475.65698242]
[236.91136169 489.75094604]
[241.19866943 504.13000488]
[244.60995483 518.74169922]
[247.13278198 533.53265381]
[248.75793457 548.44903564]
[249.47950745 563.43627930]
[249.29484558 578.43969727]
[248.20465088 593.40466309]
[246.21286011 608.27648926]
[243.32676697 623.00091553]
[239.55690002 637.52423096]
[234.91702271 651.79339600]
[229.42404175 665.75640869]
[223.09802246 679.36224365]
[215.96203613 692.56134033]
[208.04212952 705.30548096]
[199.36720276 717.54815674]
[189.96890259 729.24475098]
[179.88151550 740.35253906]
[169.14187622 750.83099365]
[157.78913879 760.64190674]
[145.86474609 769.74945068]
[133.41221619 778.12036133]
[120.47698212 785.72418213]
[107.10623169 792.53308105]
[93.34877014 798.52227783]
[79.25478363 803.66986084]
[64.87570953 807.95709229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 166]
[59 165]
[60 164]
[62 161]
[63 160]
[64 159]
[70 158]
[71 157]
[72 156]
[73 155]
[74 154]
[77 151]
[78 150]
[80 148]
[82 146]
[83 145]
[84 144]
[85 143]
[86 123]
[87 122]
[88 121]
[91 119]
[92 118]
[93 117]
[94 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
