%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[123.46858215 613.40081787]
[110.30146790 620.75457764]
[95.71900940 624.60198975]
[80.63786316 624.70123291]
[66.00604248 621.04602051]
[52.74332428 613.86608887]
[41.68340683 603.61285400]
[33.52152634 590.93078613]
[28.77074623 576.61712646]
[27.72970581 561.57165527]
[30.46384430 546.74005127]
[36.80129242 533.05474854]
[46.34367371 521.37597656]
[58.49114227 512.43786621]
[72.48010254 506.80227661]
[87.43119812 504.82348633]
[89.21366119 489.92977905]
[90.99612427 475.03604126]
[84.82604218 461.47952271]
[94.14841461 448.69656372]
[95.93087769 433.80285645]
[97.71334076 418.90914917]
[99.49581146 404.01541138]
[101.27827454 389.12170410]
[103.06074524 374.22799683]
[104.84320831 359.33425903]
[95.46407318 347.82046509]
[97.05958557 332.69073486]
[109.19990540 322.93109131]
[110.98236847 308.03738403]
[111.09403992 293.03781128]
[109.53351593 278.11920166]
[107.97299194 263.20059204]
[93.71568298 261.18716431]
[80.34806824 255.81088257]
[68.65151978 247.38113403]
[59.31087112 236.38591003]
[52.87438202 223.46354675]
[49.72151947 209.36572266]
[50.04059601 194.91371155]
[53.81753540 180.95051575]
[60.83642960 168.29173279]
[70.69187164 157.67787170]
[82.81236267 149.73107910]
[96.49346161 144.91864014]
[95.15522766 129.97845459]
[93.81699371 115.03826904]
[83.81634521 101.57114410]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[86.35825348 41.67605209]
[84.79772949 26.75744820]
[81.73023224 22.53399467]
[80.69321442 18.00874519]
[81.46160889 14.00566959]
[83.51595306 11.14000702]
[82.62313843 -3.83339858]
[81.73031616 -18.80680466]
[80.83750153 -33.78020859]
[67.92922974 -42.18750763]
[62.50990295 -56.41720581]
[66.46194458 -70.93772125]
[78.06752777 -80.23548889]
[77.17471313 -95.20889282]
[76.28189087 -110.18229675]
[75.38907623 -125.15570831]
[74.49626160 -140.12910461]
[72.93573761 -155.04771423]
[70.71062469 -169.88175964]
[68.48550415 -184.71580505]
[66.26039124 -199.54985046]
[64.03527069 -214.38389587]
[61.81015396 -229.21794128]
[52.11132431 -241.71766663]
[57.87504196 -255.45188904]
[55.64992523 -270.28591919]
[53.42480850 -285.11996460]
[38.40219116 -284.93362427]
[23.49412918 -286.79467773]
[8.97835445 -290.66845703]
[-4.87471485 -296.48275757]
[-17.80700493 -304.12930298]
[-29.57759476 -313.46563721]
[-39.96720505 -324.31781006]
[-48.78228378 -336.48367310]
[-55.85861588 -349.73657227]
[-61.06436539 -363.82958984]
[-64.30255890 -378.50024414]
[-65.51286316 -393.47518921]
[-64.67274475 -408.47546387]
[-61.79784012 -423.22158813]
[-56.94171143 -437.43890381]
[-50.19483185 -450.86251831]
[-41.68288422 -463.24237061]
[-31.56444168 -474.34780884]
[-20.02800941 -483.97195435]
[-7.28849888 -491.93554688]
[6.41675758 -498.09020996]
[20.83244133 -502.32125854]
[35.68999481 -504.54989624]
[50.71263123 -504.73461914]
[65.62049103 -502.87194824]
[80.13584900 -498.99661255]
[93.98828888 -493.18081665]
[106.91974640 -485.53286743]
[118.68933105 -476.19525146]
[129.07775879 -465.34194946]
[137.89152527 -453.17514038]
[144.96641541 -439.92147827]
[150.17063904 -425.82788086]
[153.40725708 -411.15689087]
[154.61593628 -396.18179321]
[153.77418518 -381.18164062]
[150.89768982 -366.43579102]
[146.04002380 -352.21902466]
[139.29168701 -338.79614258]
[130.77839661 -326.41720581]
[120.65876007 -315.31286621]
[109.12128448 -305.68994141]
[96.38091278 -297.72775269]
[82.67499542 -291.57458496]
[68.25885010 -287.34509277]
[70.48397064 -272.51104736]
[72.70908356 -257.67700195]
[82.24876404 -246.23829651]
[76.64419556 -231.44305420]
[78.86931610 -216.60900879]
[81.09442902 -201.77496338]
[83.31954956 -186.94091797]
[85.54466248 -172.10687256]
[87.76978302 -157.27282715]
[97.53337860 -168.66020203]
[112.47818756 -169.94581604]
[124.04313660 -160.39323425]
[125.60330200 -145.47459412]
[116.26494598 -133.73597717]
[101.37751007 -131.90179443]
[89.46966553 -141.02192688]
[90.36248016 -126.04852295]
[91.25530243 -111.07511902]
[92.14811707 -96.10170746]
[93.04093170 -81.12830353]
[105.66914368 -73.27552032]
[111.31867218 -59.32751465]
[107.62867737 -44.55465698]
[95.81091309 -34.67302704]
[96.70372772 -19.69961929]
[97.59654236 -4.72621441]
[98.48935699 10.24719143]
[99.71633148 25.19692421]
[101.27685547 40.11552811]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[114.54747009 92.73706818]
[115.67284393 104.32907867]
[108.75717926 113.70003510]
[110.09541321 128.64021301]
[111.43364716 143.58039856]
[126.86228943 146.21688843]
[141.07534790 152.74641418]
[153.10957336 162.72012329]
[162.15103149 175.45594788]
[167.59013367 190.08529663]
[169.06272888 205.61221313]
[166.47451782 220.98127747]
[160.00700378 235.14923096]
[150.10482788 247.15588379]
[137.44522095 256.18917847]
[122.89159393 261.64007568]
[124.45211792 276.55868530]
[126.01264191 291.47726440]
[132.03927612 277.74121094]
[142.56921387 267.05850220]
[156.21705627 260.83462524]
[171.18717957 259.88845825]
[185.51002502 264.34448242]
[197.30117798 273.61642456]
[205.00927734 286.48440552]
[207.62023926 301.25543213]
[204.79049683 315.98608398]
[196.89239502 328.73834229]
[184.96504211 337.83438110]
[170.57768250 342.07751465]
[155.62322998 340.90942383]
[142.06919861 334.48382568]
[131.69885254 323.64611816]
[125.87608337 309.81985474]
[124.09362030 324.71356201]
[133.58801270 337.06240845]
[131.56817627 352.14138794]
[119.73692322 361.11672974]
[117.95446014 376.01043701]
[116.17198944 390.90417480]
[114.38952637 405.79788208]
[112.60706329 420.69158936]
[110.82459259 435.58532715]
[109.04212952 450.47903442]
[115.08471680 465.10086060]
[105.88984680 476.81851196]
[104.10737610 491.71224976]
[102.32491302 506.60595703]
[116.38681030 512.05700684]
[128.65081787 520.83453369]
[138.34602356 532.38671875]
[144.86297607 545.98748779]
[147.79202271 560.78179932]
[146.94902039 575.83966064]
[142.38696289 590.21459961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 203]
[17 202]
[18 201]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[29 190]
[30 189]
[31 173]
[32 172]
[33 171]
[45 160]
[46 159]
[47 158]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[57 150]
[58 149]
[59 148]
[60 147]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[76 125]
[77 124]
[78 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
