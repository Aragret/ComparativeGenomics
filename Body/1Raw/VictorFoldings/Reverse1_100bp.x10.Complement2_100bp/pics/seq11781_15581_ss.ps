%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[62.82800674 648.64050293]
[48.17703629 652.01678467]
[33.17016983 652.93530273]
[18.21679878 651.37115479]
[3.72486663 647.36694336]
[-9.91027832 641.03192139]
[-22.31665802 632.53887939]
[-33.15581894 622.11956787]
[-42.13206100 610.05816650]
[-49.00050354 596.68377686]
[-53.57376862 582.36120605]
[-55.72710037 567.48126221]
[-55.40175247 552.44982910]
[-52.60659790 537.67700195]
[-47.41789246 523.56573486]
[-39.97718811 510.50106812]
[-30.48746872 498.83938599]
[-19.20762634 488.89880371]
[-6.44538116 480.95053101]
[7.45110416 475.21142578]
[22.10272217 471.83801270]
[37.10976791 470.92233276]
[38.67029190 456.00372314]
[40.23081207 441.08511353]
[41.79133606 426.16650391]
[35.42010117 412.70333862]
[44.55111694 399.78302002]
[46.11163712 384.86441040]
[47.67216110 369.94580078]
[41.30092621 356.48263550]
[50.43194199 343.56231689]
[51.99246216 328.64370728]
[40.81362534 318.83700562]
[37.51390076 304.15447998]
[43.56321335 290.18096924]
[56.83401489 282.35845947]
[58.39453888 267.43984985]
[59.95506287 252.52124023]
[61.51558685 237.60263062]
[63.07610703 222.68402100]
[64.63663483 207.76542664]
[66.19715118 192.84681702]
[67.75767517 177.92820740]
[59.01893997 190.11978149]
[46.50625229 198.39218140]
[31.86587143 201.65704346]
[17.02399254 199.48480225]
[3.93332028 192.16125488]
[-5.68384266 180.64994812]
[-10.56219292 166.46539307]
[-10.05989933 151.47380066]
[-4.24304819 137.64758301]
[6.12305450 126.80581665]
[19.67456818 120.37491608]
[34.62856293 119.20098114]
[49.01757431 123.43846893]
[60.94849014 132.52984619]
[68.85158539 145.27900696]
[71.68710327 160.01095581]
[76.51309967 145.80848694]
[73.28197479 131.26858521]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.88886261 77.87646484]
[103.28985596 63.53662109]
[98.75149536 45.69047928]
[112.05547333 34.24622345]
[116.24248505 19.84243965]
[120.42949677 5.43865824]
[124.61650848 -8.96512413]
[112.43252563 -17.95266914]
[104.07430267 -30.54282951]
[100.53454590 -45.20537567]
[102.22171021 -60.16611099]
[108.91299438 -73.62152863]
[119.78351593 -83.95623779]
[133.50798035 -89.93689728]
[148.42221069 -90.85937500]
[152.60922241 -105.26315308]
[156.79623413 -119.66693878]
[160.33590698 -134.24331665]
[163.22117615 -148.96319580]
[166.10644531 -163.68309021]
[168.99172974 -178.40298462]
[171.43745422 -193.20225525]
[173.44146729 -208.06777954]
[175.22392273 -222.96150208]
[176.78445435 -237.88011169]
[178.34497070 -252.79870605]
[179.90550232 -267.71731567]
[181.46601868 -282.63592529]
[182.91543579 -297.56573486]
[184.25367737 -312.50592041]
[185.59190369 -327.44610596]
[186.93014526 -342.38629150]
[172.67044067 -347.27752686]
[159.99603271 -355.43981934]
[149.64378357 -366.39855957]
[142.21557617 -379.51669312]
[138.14326477 -394.03149414]
[137.66362000 -409.09912109]
[140.80450439 -423.84356689]
[147.38333130 -437.40756226]
[157.01762390 -449.00256348]
[169.14723206 -457.95443726]
[183.06697083 -463.74273682]
[197.96755981 -466.03091431]
[212.98269653 -464.68597412]
[227.23944092 -459.78607178]
[239.90890503 -451.61611938]
[250.25450134 -440.65109253]
[257.67474365 -427.52847290]
[261.73825073 -413.01119995]
[262.20877075 -397.94326782]
[259.05895996 -383.20074463]
[252.47189331 -369.64071655]
[242.83058167 -358.05157471]
[230.69555664 -349.10705566]
[216.77230835 -343.32720947]
[201.87033081 -341.04806519]
[200.53208923 -326.10787964]
[199.19386292 -311.16769409]
[197.85562134 -296.22750854]
[200.38984680 -289.28491211]
[196.38462830 -281.07540894]
[194.82409668 -266.15679932]
[193.26358032 -251.23818970]
[191.70306396 -236.31958008]
[190.14253235 -221.40098572]
[192.40066528 -217.19265747]
[192.03912354 -211.52113342]
[188.30699158 -206.06376648]
[186.30297852 -191.19824219]
[187.89335632 -188.88981628]
[188.66516113 -185.81233215]
[188.32089233 -182.27441406]
[186.68016052 -178.68658447]
[183.71160889 -175.51771545]
[180.82633972 -160.79782104]
[177.94107056 -146.07792664]
[175.05580139 -131.35803223]
[188.07629395 -138.80564880]
[202.58503723 -134.99822998]
[210.27075195 -122.11686707]
[206.73074341 -107.54057312]
[193.99284363 -99.61932373]
[179.35394287 -102.89075470]
[171.20001221 -115.47992706]
[167.01300049 -101.07614136]
[162.82598877 -86.67236328]
[174.92160034 -77.89844513]
[183.30125427 -65.49237061]
[186.93759155 -50.94068909]
[185.37300110 -35.99500275]
[178.77713013 -22.46117210]
[167.92871094 -11.98110104]
[154.12364197 -5.83354712]
[139.02029419 -4.77811289]
[134.83328247 9.62566948]
[130.64627075 24.02945137]
[126.45925903 38.43323517]
[132.00848389 49.18184662]
[128.63809204 61.21614075]
[117.62970734 67.93762207]
[113.22870636 82.27746582]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[102.13625336 141.07327271]
[90.71555328 150.63449097]
[85.88955688 164.83694458]
[82.67628479 179.48873901]
[81.11576080 194.40733337]
[79.55523682 209.32594299]
[77.99471283 224.24455261]
[76.43418884 239.16314697]
[74.87366486 254.08175659]
[73.31314087 269.00036621]
[71.75262451 283.91897583]
[83.11736298 294.31842041]
[86.14403534 309.24133301]
[79.87733459 322.92315674]
[66.91107178 330.20422363]
[65.35054779 345.12283325]
[71.61016083 359.65307617]
[62.59076691 371.50631714]
[61.03024292 386.42492676]
[59.46971893 401.34353638]
[65.72933960 415.87377930]
[56.70994186 427.72702026]
[55.14941788 442.64562988]
[53.58889389 457.56423950]
[52.02837372 472.48284912]
[66.52107239 476.48428345]
[80.15744019 482.81668091]
[92.56546021 491.30731201]
[103.40662384 501.72457886]
[112.38518524 513.78424072]
[119.25621033 527.15728760]
[123.83223724 541.47894287]
[125.98843384 556.35845947]
[125.66597748 571.38995361]
[122.87367249 586.16339111]
[117.68768311 600.27563477]
[110.24949646 613.34173584]
[100.76202393 625.00524902]
[89.48410034 634.94799805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 196]
[23 195]
[24 194]
[25 193]
[27 191]
[28 190]
[29 189]
[31 187]
[32 186]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[59 174]
[60 173]
[62 171]
[63 170]
[64 167]
[65 166]
[66 165]
[68 162]
[69 161]
[70 160]
[71 159]
[79 151]
[80 150]
[81 149]
[82 142]
[83 141]
[84 140]
[85 139]
[86 134]
[87 133]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[93 124]
[94 123]
[95 122]
[96 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
