%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[32.48904419 550.01483154]
[36.48513412 564.55725098]
[36.73830032 579.63659668]
[33.23263550 594.30499268]
[26.18850136 607.64031982]
[16.04870033 618.80432129]
[3.45062876 627.09527588]
[-10.81378746 631.99188232]
[-25.84787369 633.18652344]
[-40.70657730 630.60388184]
[-54.45586777 624.40649414]
[-66.23145294 614.98382568]
[-75.29310608 602.92828369]
[-81.07120514 588.99755859]
[-83.20253754 574.06744385]
[-81.55312347 559.07641602]
[-76.22665405 544.96691895]
[-67.55793762 532.62573242]
[-56.09191513 522.82873535]
[-42.54933929 516.19177246]
[-27.78151321 513.13201904]
[-12.71675205 513.84179688]
[-8.31575394 499.50195312]
[-3.91475606 485.16210938]
[-7.57735634 470.72485352]
[3.86839247 459.80212402]
[8.26939106 445.46228027]
[12.56351471 431.09008789]
[16.75052643 416.68630981]
[20.93753624 402.28250122]
[17.06039238 387.90136719]
[28.34225082 376.80947876]
[27.19077301 369.50906372]
[32.70030975 362.22326660]
[37.10130692 347.88342285]
[33.43870544 333.44616699]
[44.88445663 322.52346802]
[49.28545380 308.18362427]
[53.68645096 293.84378052]
[46.50285339 280.84640503]
[50.76181412 266.24105835]
[64.44335175 258.79437256]
[68.84435272 244.45452881]
[73.24534607 230.11468506]
[77.64634705 215.77484131]
[82.04734802 201.43498230]
[85.80364990 186.91293335]
[88.90775299 172.23762512]
[92.01186371 157.56231689]
[95.11597443 142.88702393]
[95.78575897 127.90198517]
[94.00329590 113.00826263]
[85.77754974 101.70213318]
[91.10298920 88.77420044]
[89.32051849 73.88048553]
[87.53805542 58.98676682]
[78.21569061 46.20380783]
[84.38577271 32.64728165]
[75.06340027 19.86432457]
[81.23348236 6.30779982]
[77.10648346 -1.84116828]
[79.53705597 -8.82071781]
[77.97653198 -23.73932266]
[76.41601562 -38.65792847]
[74.85549164 -53.57653046]
[65.72447205 -66.49687195]
[72.09571075 -79.96002960]
[58.82490540 -87.78255463]
[52.77559662 -101.75607300]
[56.07531738 -116.43857574]
[67.25415802 -126.24528503]
[58.12314224 -139.16561890]
[64.49437714 -152.62878418]
[62.93385315 -167.54739380]
[61.37333298 -182.46598816]
[59.81280899 -197.38459778]
[58.25228500 -212.30320740]
[52.22564316 -198.56713867]
[41.69570923 -187.88441467]
[28.04787064 -181.66055298]
[13.07774258 -180.71438599]
[-1.24510181 -185.17041016]
[-13.03624439 -194.44235229]
[-20.74435806 -207.31033325]
[-23.35530663 -222.08134460]
[-20.52557564 -236.81201172]
[-12.62746620 -249.56427002]
[-0.70010847 -258.66030884]
[13.68724728 -262.90344238]
[28.64169693 -261.73535156]
[42.19572830 -255.30975342]
[52.56607056 -244.47204590]
[58.38883972 -230.64578247]
[60.17130661 -245.53948975]
[54.12871933 -260.16131592]
[63.32358932 -271.87896729]
[65.10605621 -286.77270508]
[66.88851929 -301.66641235]
[68.67098999 -316.56011963]
[54.78033066 -322.49530029]
[43.12535095 -332.10458374]
[34.65086365 -344.60897827]
[30.04386330 -358.99481201]
[29.67781448 -374.09588623]
[33.58239365 -388.68804932]
[41.44107437 -401.58834839]
[52.61678314 -411.75103760]
[66.20355988 -418.35223389]
[81.09999084 -420.85687256]
[96.09847260 -419.06185913]
[109.98316193 -413.11273193]
[121.62848663 -403.49176025]
[130.09040833 -390.97888184]
[134.68295288 -376.58840942]
[135.03382874 -361.48696899]
[131.11459351 -346.89874268]
[123.24295807 -334.00634766]
[112.05704498 -323.85488892]
[98.46363831 -317.26733398]
[83.56470490 -314.77764893]
[81.78224182 -299.88394165]
[79.99977112 -284.99023438]
[78.21730804 -270.09649658]
[84.38739014 -256.53997803]
[75.06502533 -243.75703430]
[73.28255463 -228.86331177]
[73.17089081 -213.86372375]
[74.73141479 -198.94511414]
[76.29193878 -184.02651978]
[77.85246277 -169.10791016]
[79.41297913 -154.18930054]
[88.43238068 -142.33604431]
[82.17276001 -127.80580902]
[95.13902283 -120.52473450]
[101.40573120 -106.84291077]
[98.37905121 -91.92002106]
[87.01431274 -81.52055359]
[96.03370667 -69.66728973]
[89.77409363 -55.13705444]
[91.33461761 -40.21844864]
[92.89514160 -25.29984474]
[94.45566559 -10.38124084]
[96.12720490 4.52533388]
[105.32207489 16.24299431]
[99.27948761 30.86481667]
[108.47435760 42.58247757]
[102.43177032 57.20429993]
[104.21424103 72.09801483]
[105.99670410 86.99173737]
[114.22245026 98.29786682]
[108.89701080 111.22579956]
[110.67948151 126.11951447]
[115.75803375 112.00540161]
[124.27285004 99.65639496]
[135.65914917 89.89155579]
[149.16174316 83.35855865]
[163.88504028 80.49071503]
[178.85249329 81.47822571]
[193.07138062 86.25560760]
[205.59860229 94.50598907]
[215.60327148 105.68215179]
[222.42182922 119.04281616]
[225.60200500 133.70182800]
[224.93287659 148.68688965]
[220.45883179 163.00411987]
[212.47660828 175.70388794]
[201.51564026 185.94386292]
[188.30294800 193.04489136]
[173.71484375 196.53596497]
[158.71894836 196.18553162]
[144.30984497 192.01684570]
[131.44326782 184.30638123]
[120.97259521 173.56558228]
[113.59231567 160.50680542]
[109.79128265 145.99113464]
[106.68717194 160.66642761]
[103.58306122 175.34173584]
[100.47895050 190.01704407]
[113.60887909 182.76411438]
[128.05932617 186.78712463]
[135.55241394 199.78147888]
[131.79577637 214.30345154]
[118.94136047 222.03417969]
[104.35278320 218.54515076]
[96.38719177 205.83598328]
[91.98619843 220.17582703]
[87.58519745 234.51568604]
[83.18419647 248.85552979]
[78.78320312 263.19537354]
[85.93182373 277.03497314]
[81.26431274 291.51492310]
[68.02629852 298.24478149]
[63.62530136 312.58462524]
[59.22430420 326.92446899]
[62.57211304 342.38742065]
[51.44115448 352.28442383]
[47.04015732 366.62426758]
[42.74603271 380.99649048]
[46.32369232 396.40786743]
[35.34132004 406.46951294]
[31.15430832 420.87332153]
[26.96729660 435.27709961]
[27.57688904 444.39114380]
[22.60923767 449.86328125]
[18.20824051 464.20312500]
[21.55605125 479.66607666]
[10.42509079 489.56311035]
[6.02409315 503.90295410]
[1.62309492 518.24279785]
[14.49238110 526.10614014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 209]
[23 208]
[24 207]
[26 205]
[27 204]
[28 202]
[29 201]
[30 200]
[32 198]
[34 197]
[35 196]
[37 194]
[38 193]
[39 192]
[42 189]
[43 188]
[44 187]
[45 186]
[46 185]
[47 178]
[48 177]
[49 176]
[50 175]
[51 152]
[52 151]
[54 149]
[55 148]
[56 147]
[58 145]
[60 143]
[62 142]
[63 141]
[64 140]
[65 139]
[67 137]
[71 133]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[93 126]
[94 125]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
