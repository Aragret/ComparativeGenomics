%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[162.51046753 541.88281250]
[167.26104736 527.60595703]
[174.62791443 514.48626709]
[184.34478760 502.99807739]
[196.06037903 493.55661011]
[209.35119629 486.50317383]
[204.95021057 472.16333008]
[200.54920959 457.82348633]
[186.42454529 453.17245483]
[177.64314270 440.95153809]
[177.74285889 425.72512817]
[186.89501953 413.33383179]
[182.49403381 398.99398804]
[178.09303284 384.65414429]
[173.69203186 370.31430054]
[169.18440247 356.00759888]
[164.57038879 341.73489380]
[159.95639038 327.46215820]
[155.34237671 313.18942261]
[150.51637268 298.98696899]
[145.47946167 284.85794067]
[140.44255066 270.72891235]
[135.40562439 256.59985352]
[130.36871338 242.47084045]
[127.35691071 240.63742065]
[125.08351898 237.25411987]
[124.26729584 232.68388367]
[125.43775940 227.59693909]
[121.03675842 213.25708008]
[116.63576508 198.91723633]
[112.23476410 184.57739258]
[107.83377075 170.23754883]
[103.32614136 155.93086243]
[98.71212769 141.65812683]
[95.43664551 156.29612732]
[86.87174988 168.61044312]
[74.28798676 176.77433777]
[59.55208969 179.57670593]
[44.85003662 176.60186768]
[32.36279297 168.29110718]
[23.94276810 155.87727356]
[20.83901787 141.20190430]
[23.51196671 126.44197845]
[31.56510162 113.78705597]
[43.80378342 105.11441803]
[58.41248322 101.71060181]
[73.22407532 104.08053589]
[86.04136658 111.87266541]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[85.71942139 49.51744843]
[82.61531830 34.84214783]
[79.51120758 20.16684532]
[73.35977936 33.84748459]
[61.25022507 42.69953918]
[46.34796524 44.40909576]
[32.54840469 38.52928543]
[23.45872116 26.59707642]
[21.45493126 11.73151779]
[27.06082344 -2.18156838]
[38.81103134 -11.50533485]
[53.63407898 -13.80257130]
[67.65525818 -8.47278595]
[77.20909119 3.09002280]
[76.31626892 -11.88338280]
[75.42345428 -26.85678864]
[74.53063965 -41.83019257]
[73.63782501 -56.80360031]
[70.76197815 -61.15981293]
[69.92805481 -65.72685242]
[70.87442780 -69.69162750]
[73.05467987 -72.46269989]
[72.83135223 -87.46103668]
[64.88945007 -101.14447784]
[72.43640137 -113.98554230]
[72.21307373 -128.98387146]
[71.98974609 -143.98220825]
[71.76641846 -158.98054504]
[63.82450867 -172.66400146]
[71.37145996 -185.50505066]
[71.14813232 -200.50338745]
[70.92480469 -215.50172424]
[58.37101364 -221.67141724]
[49.74137878 -232.59596252]
[46.67525864 -246.10807800]
[49.71541595 -259.55822754]
[58.21295166 -270.33413696]
[70.46478271 -276.36819458]
[70.46478271 -291.36819458]
[70.46478271 -306.36819458]
[70.46478271 -321.36819458]
[55.88766479 -325.26306152]
[42.81579971 -332.79888916]
[32.14045334 -343.46188354]
[24.58948326 -356.52502441]
[20.67773056 -371.09762573]
[20.67190361 -386.18609619]
[24.57240295 -400.76171875]
[32.11328125 -413.83065796]
[42.78039169 -424.50189209]
[55.84643173 -432.04782104]
[70.42053986 -435.95394897]
[85.50902557 -435.95394897]
[100.08313751 -432.04782104]
[113.14917755 -424.50189209]
[123.81628418 -413.83065796]
[131.35716248 -400.76171875]
[135.25765991 -386.18609619]
[135.25183105 -371.09762573]
[131.34008789 -356.52502441]
[123.78911591 -343.46188354]
[113.11376953 -332.79888916]
[100.04190063 -325.26306152]
[85.46478271 -321.36819458]
[85.46478271 -306.36819458]
[85.46478271 -291.36819458]
[85.46478271 -276.36819458]
[99.65219116 -268.63320923]
[108.05125427 -254.71878052]
[108.28849792 -238.37373352]
[100.20446777 -224.05786133]
[85.92314148 -215.72505188]
[86.14646912 -200.72671509]
[86.36979675 -185.72837830]
[94.29573059 -173.11772156]
[86.76475525 -159.20387268]
[86.98808289 -144.20553589]
[87.21141052 -129.20719910]
[87.43473816 -114.20886993]
[95.36067200 -101.59820557]
[87.82968903 -87.68436432]
[88.05301666 -72.68602753]
[88.61122894 -57.69641495]
[89.50404358 -42.72301102]
[90.39685822 -27.74960518]
[91.28968048 -12.77619839]
[92.18249512 2.19720697]
[94.18650818 17.06273460]
[97.29061890 31.73803711]
[100.39472961 46.41334152]
[109.46322632 34.46501923]
[124.30501556 32.29214859]
[136.41804504 41.13944244]
[138.86340332 55.93877411]
[130.24031067 68.21240997]
[115.48844147 70.92945862]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[112.98486328 137.04411316]
[117.59886932 151.31684875]
[123.21627045 158.51980591]
[122.17361450 165.83654785]
[126.57461548 180.17639160]
[130.97561646 194.51623535]
[135.37660217 208.85607910]
[139.77760315 223.19593811]
[144.49774170 237.43392944]
[149.53465271 251.56295776]
[154.57157898 265.69198608]
[159.60848999 279.82101440]
[164.64540100 293.95004272]
[169.42610168 298.51693726]
[170.95347595 303.99087524]
[169.61511230 308.57540894]
[174.22911072 322.84814453]
[178.84312439 337.12088013]
[183.45713806 351.39361572]
[189.07453918 358.59655762]
[188.03187561 365.91329956]
[192.43287659 380.25314331]
[196.83387756 394.59298706]
[201.23487854 408.93283081]
[215.76252747 414.05664062]
[224.38670349 426.60562134]
[223.97280884 441.64865112]
[214.88905334 453.42248535]
[219.29005432 467.76232910]
[223.69105530 482.10217285]
[238.65040588 480.48544312]
[253.64540100 481.72924805]
[268.13394165 485.78863525]
[281.59228516 492.51690674]
[293.53390503 501.67080688]
[303.52716064 512.91943359]
[311.21078491 525.85614014]
[316.30700684 540.01330566]
[318.63159180 554.87908936]
[318.10052490 569.91619873]
[314.73303223 584.58099365]
[308.65078735 598.34338379]
[300.07369995 610.70581055]
[289.31182861 621.22143555]
[276.75418091 629.51013184]
[262.85470581 635.27221680]
[248.11590576 638.29937744]
[233.07054138 638.48229980]
[218.26249695 635.81427002]
[204.22708130 630.39172363]
[191.47166443 622.41076660]
[180.45735168 612.15985107]
[171.58229065 600.00958252]
[165.16731262 586.39910889]
[161.44432068 571.82049561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 185]
[7 184]
[8 183]
[12 179]
[13 178]
[14 177]
[15 176]
[16 174]
[17 173]
[18 172]
[19 171]
[20 168]
[21 167]
[22 166]
[23 165]
[24 164]
[28 163]
[29 162]
[30 161]
[31 160]
[32 159]
[33 157]
[34 156]
[49 155]
[50 154]
[51 152]
[52 151]
[53 150]
[54 143]
[55 142]
[56 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[75 135]
[76 134]
[78 132]
[79 131]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[91 120]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
