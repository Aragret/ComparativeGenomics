%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[60.61151886 818.20196533]
[45.61684799 817.53173828]
[30.73765182 815.55718994]
[16.08716965 812.29333496]
[1.77690363 807.76501465]
[-12.08423328 802.00671387]
[-25.39074898 795.06219482]
[-38.04137039 786.98437500]
[-49.93981552 777.83471680]
[-60.99552917 767.68286133]
[-71.12437439 756.60601807]
[-80.24925232 744.68853760]
[-88.30072784 732.02117920]
[-95.21751404 718.70019531]
[-100.94697571 704.82714844]
[-105.44550323 690.50744629]
[-108.67885590 675.85021973]
[-110.62243652 660.96697998]
[-111.26144409 645.97094727]
[-110.59101868 630.97625732]
[-108.61625671 616.09710693]
[-105.35220337 601.44665527]
[-100.82368469 587.13647461]
[-95.06517029 573.27539062]
[-88.12048340 559.96899414]
[-80.04248810 547.31848145]
[-70.89266205 535.42016602]
[-60.74063110 524.36456299]
[-49.66366959 514.23590088]
[-37.74607849 505.11117554]
[-25.07856178 497.05987549]
[-11.75752544 490.14328003]
[2.11564541 484.41400146]
[16.43536758 479.91567993]
[31.09265518 476.68252563]
[45.97595596 474.73916626]
[60.97200012 474.10037231]
[61.64178467 459.11532593]
[62.31156921 444.13027954]
[62.98135376 429.14526367]
[63.65114212 414.16021729]
[56.67227173 408.67126465]
[52.94499207 400.46139526]
[53.42052841 391.31982422]
[58.11853027 383.30355835]
[66.09444427 378.27444458]
[67.43267822 363.33425903]
[68.77091217 348.39407349]
[70.10914612 333.45388794]
[71.44738007 318.51370239]
[72.78561401 303.57354736]
[74.12384796 288.63336182]
[75.46208191 273.69317627]
[76.80031586 258.75299072]
[78.13854980 243.81278992]
[75.60433197 236.87020874]
[79.60955048 228.66069031]
[81.17007446 213.74209595]
[82.73059082 198.82348633]
[84.29111481 183.90487671]
[85.85163879 168.98628235]
[87.41216278 154.06767273]
[79.41307831 138.44775391]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.69956970 78.76348114]
[94.59238434 63.79007339]
[95.48520660 48.81666565]
[96.37802124 33.84326172]
[87.75652313 17.57207870]
[97.98418427 3.31157660]
[98.65396881 -11.67346191]
[99.32375336 -26.65850067]
[99.99353790 -41.64353943]
[86.27520752 -48.13068390]
[76.11305237 -59.34557343]
[71.03256226 -73.55831909]
[71.77857971 -88.59265137]
[78.20634460 -102.15910339]
[89.30820465 -112.20371246]
[103.37152863 -117.21891022]
[104.04131317 -132.20394897]
[104.59952545 -147.19355774]
[105.04612732 -162.18690491]
[105.49273682 -177.18025208]
[93.38599396 -186.70564270]
[89.25778961 -201.36209106]
[94.48953247 -215.47212219]
[106.87834167 -223.69741821]
[107.32494354 -238.69076538]
[107.77155304 -253.68411255]
[108.21815491 -268.67745972]
[93.63569641 -272.45892334]
[80.26053619 -279.39096069]
[68.76358795 -289.12585449]
[59.72151947 -301.17526245]
[53.58788300 -314.93484497]
[50.67033386 -329.71441650]
[51.11521912 -344.77264404]
[54.90022659 -359.35418701]
[61.83549500 -372.72766113]
[71.57315826 -384.22225952]
[83.62477875 -393.26141357]
[97.38584900 -399.39169312]
[112.16612244 -402.30566406]
[127.22422791 -401.85714722]
[141.80485535 -398.06860352]
[155.17665100 -391.13009644]
[166.66888428 -381.38964844]
[175.70510864 -369.33584595]
[181.83207703 -355.57327271]
[184.74246216 -340.79229736]
[184.29028320 -325.73428345]
[180.49821472 -311.15457153]
[173.55645752 -297.78448486]
[163.81323242 -286.29461670]
[151.75723267 -277.26129150]
[137.99319458 -271.13766479]
[123.21150208 -268.23086548]
[122.76490021 -253.23750305]
[122.31829071 -238.24415588]
[121.87168884 -223.25080872]
[133.74894714 -214.30270386]
[138.13157654 -199.90629578]
[133.13832092 -185.52154541]
[120.48608398 -176.73365784]
[120.03948212 -161.74029541]
[119.59287262 -146.74694824]
[122.53582764 -139.96751404]
[119.02635193 -131.53416443]
[118.35656738 -116.54912567]
[131.91638184 -110.29925537]
[142.07783508 -99.30424500]
[147.26962280 -85.21842957]
[146.67137146 -70.17749786]
[140.34313965 -56.47468567]
[129.22096252 -46.21114349]
[114.97857666 -40.97375488]
[114.30879211 -25.98871613]
[113.63900757 -11.00367737]
[112.96922302 3.98136163]
[120.89816284 13.11692142]
[120.46279144 25.60668564]
[111.35142517 34.73607635]
[110.45861053 49.70948029]
[109.56579590 64.68288422]
[108.67298126 79.65629578]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[112.94935608 135.35372925]
[111.52716064 147.76989746]
[102.33076477 155.62818909]
[100.77024841 170.54679871]
[99.20972443 185.46540833]
[97.64920044 200.38400269]
[96.08867645 215.30261230]
[94.52815247 230.22122192]
[93.07873535 245.15103149]
[91.74050140 260.09121704]
[90.40226746 275.03140259]
[89.06403351 289.97158813]
[87.72579956 304.91177368]
[86.38756561 319.85195923]
[85.04933167 334.79214478]
[83.71109772 349.73233032]
[82.37286377 364.67251587]
[81.03462982 379.61270142]
[91.21655273 398.46850586]
[78.63617706 414.82998657]
[77.96639252 429.81503296]
[77.29660797 444.80007935]
[76.62682343 459.78512573]
[75.95703888 474.77014160]
[90.83628845 476.74429321]
[105.48686218 480.00772095]
[119.79725647 484.53564453]
[133.65855408 490.29357910]
[146.96527100 497.23770142]
[159.61611938 505.31515503]
[171.51481628 514.46447754]
[182.57081604 524.61602783]
[192.69996643 535.69256592]
[201.82518005 547.60980225]
[209.87701416 560.27697754]
[216.79417419 573.59771729]
[222.52401733 587.47064209]
[227.02294922 601.79016113]
[230.25671387 616.44732666]
[232.20071411 631.33056641]
[232.84014893 646.32659912]
[232.17013550 661.32122803]
[230.19580078 676.20050049]
[226.93214417 690.85101318]
[222.40403748 705.16131592]
[216.64590454 719.02258301]
[209.70159912 732.32916260]
[201.62396240 744.97991943]
[192.47445679 756.87847900]
[182.32273865 767.93432617]
[171.24606323 778.06335449]
[159.32873535 787.18835449]
[146.66143799 795.24005127]
[133.34059143 802.15698242]
[119.46758270 807.88665771]
[105.14798737 812.38537598]
[90.49079132 815.61895752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[64 153]
[65 152]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
[72 142]
[73 141]
[74 140]
[75 139]
[82 132]
[83 131]
[84 129]
[85 128]
[86 127]
[90 123]
[91 122]
[92 121]
[93 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
