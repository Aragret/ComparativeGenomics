%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[87.54226685 560.38635254]
[73.23452759 564.92761230]
[58.56440735 568.10913086]
[43.66082382 569.90289307]
[28.65475273 570.29315186]
[13.67807293 569.27655029]
[-1.13759780 566.86193848]
[-15.66205502 563.07055664]
[-29.76765633 557.93572998]
[-43.33043671 551.50256348]
[-56.23120499 543.82763672]
[-68.35658264 534.97833252]
[-79.60001373 525.03247070]
[-89.86268616 514.07751465]
[-99.05440521 502.20962524]
[-107.09439850 489.53314209]
[-113.91201019 476.15948486]
[-119.44731903 462.20617676]
[-123.65167999 447.79583740]
[-126.48815155 433.05511475]
[-127.93179321 418.11355591]
[-127.96993256 403.10244751]
[-126.60221863 388.15374756]
[-123.84069061 373.39880371]
[-119.70959473 358.96728516]
[-114.24525452 344.98602295]
[-107.49568939 331.57791138]
[-99.52021027 318.86074829]
[-90.38890076 306.94631958]
[-80.18202972 295.93930054]
[-68.98927307 285.93646240]
[-56.90901566 277.02569580]
[-44.04741287 269.28530884]
[-30.51749420 262.78332520]
[-16.43816566 257.57690430]
[-1.93315947 253.71176147]
[12.87005138 251.22189331]
[27.84137154 250.12918091]
[42.84923172 250.44322205]
[57.76173782 252.16125488]
[60.86584854 237.48594666]
[63.96995926 222.81063843]
[57.63666153 212.50453186]
[60.10264206 200.25289917]
[70.58061981 192.73126221]
[73.90287781 178.10380554]
[77.22513580 163.47634888]
[80.54739380 148.84889221]
[78.96343231 141.62995911]
[84.02954102 134.02914429]
[87.56921387 119.45277405]
[91.10888672 104.87640381]
[89.79956818 96.92289734]
[94.81128693 90.11015320]
[98.56758881 75.58809662]
[102.32389069 61.06603241]
[106.08019257 46.54397583]
[95.62962341 57.30434799]
[82.02823639 63.62908173]
[67.06552124 64.68604279]
[52.71008301 60.33616638]
[40.85062790 51.15176392]
[33.04746628 38.34119415]
[30.32724190 23.58991051]
[33.04784775 8.83869743]
[40.85133743 -3.97167039]
[52.71103287 -13.15576744]
[67.06658173 -17.50526810]
[82.02927399 -16.44792175]
[95.63050079 -10.12283897]
[106.08078766 0.63780648]
[112.00521851 14.41826630]
[112.62400818 29.40783882]
[119.50341797 16.07841110]
[126.38283539 2.74898124]
[133.26225281 -10.58044815]
[140.14166260 -23.90987778]
[147.02107239 -37.23930740]
[141.27096558 -47.64473343]
[141.25787354 -59.41336441]
[146.86938477 -69.62144470]
[156.61004639 -75.78871155]
[167.99807739 -76.48073578]
[175.27131653 -89.59943390]
[182.54454041 -102.71812439]
[188.41349792 -116.52230072]
[192.81449890 -130.86215210]
[197.21549988 -145.20199585]
[201.61650085 -159.54183960]
[206.01748657 -173.88168335]
[192.29527283 -179.98564148]
[179.40888977 -187.69914246]
[167.54623413 -196.90972900]
[156.88032532 -207.48307800]
[147.56668091 -219.26499939]
[139.74114990 -232.08366394]
[133.51782227 -245.75215149]
[128.98747253 -260.07113647]
[126.21615601 -274.83181763]
[125.24429321 -289.81887817]
[126.08605194 -304.81384277]
[128.72915649 -319.59802246]
[133.13507080 -333.95578003]
[139.23951721 -347.67776489]
[146.95352173 -360.56387329]
[156.16455078 -372.42617798]
[166.73829651 -383.09167480]
[178.52055359 -392.40487671]
[191.33952332 -400.22994995]
[205.00823975 -406.45275879]
[219.32739258 -410.98257446]
[234.08816528 -413.75332642]
[249.07528687 -414.72463989]
[264.07022095 -413.88232422]
[278.85427856 -411.23867798]
[293.21188354 -406.83221436]
[306.93362427 -400.72723389]
[319.81945801 -393.01275635]
[331.68139648 -383.80130005]
[342.34652710 -373.22714233]
[351.65927124 -361.44454956]
[359.48385620 -348.62527466]
[365.70617676 -334.95632935]
[370.23544312 -320.63699341]
[373.00564575 -305.87612915]
[373.97640991 -290.88897705]
[373.13351440 -275.89407349]
[370.48931885 -261.11010742]
[366.08233643 -246.75268555]
[359.97683716 -233.03115845]
[352.26190186 -220.14562988]
[343.04995728 -208.28401184]
[332.47543335 -197.61927795]
[320.69247437 -188.30697632]
[307.87292480 -180.48286438]
[294.20373535 -174.26107788]
[279.88424683 -169.73233032]
[265.12326050 -166.96267700]
[250.13606262 -165.99249268]
[235.14120483 -166.83592224]
[220.35734558 -169.48069763]
[215.95634460 -155.14083862]
[211.55534363 -140.80099487]
[207.15434265 -126.46115112]
[202.75334167 -112.12129974]
[213.82829285 -122.23789978]
[227.90531921 -127.41839600]
[242.89616394 -126.89431000]
[256.57702637 -120.74337769]
[266.91842651 -109.87805176]
[272.38629150 -95.91014862]
[272.16952515 -80.91172028]
[266.30020142 -67.10768127]
[255.64907837 -56.54579926]
[241.79615784 -50.79285049]
[226.79643250 -50.70225906]
[212.87501526 -56.28746033]
[202.09709167 -66.71992493]
[196.06149292 -80.45205688]
[195.66323853 -95.44489288]
[188.38999939 -82.32620239]
[181.11677551 -69.20750427]
[187.21125793 -51.94561386]
[178.60519409 -35.42748260]
[160.35049438 -30.35989380]
[153.47108459 -17.03046417]
[146.59167480 -3.70103526]
[139.71226501 9.62839413]
[132.83285522 22.95782280]
[125.95343781 36.28725052]
[120.60224915 50.30027390]
[116.84594727 64.82233429]
[113.08965302 79.34439087]
[109.33335114 93.86645508]
[105.68526459 108.41607666]
[102.14559174 122.99244690]
[98.60591888 137.56881714]
[95.17485809 152.17114258]
[91.85259247 166.79859924]
[88.53033447 181.42607117]
[85.20807648 196.05352783]
[91.06121063 213.51269531]
[78.64526367 225.91474915]
[75.54115295 240.59005737]
[72.43704224 255.26536560]
[86.76797485 259.73287964]
[100.61759186 265.52276611]
[113.86416626 272.58410645]
[126.39129639 280.85485840]
[138.08888245 290.26235962]
[148.85414124 300.72390747]
[158.59243774 312.14755249]
[167.21820068 324.43295288]
[174.65562439 337.47207642]
[180.83935547 351.15039062]
[185.71505737 365.34762573]
[189.23985291 379.93908691]
[191.38278198 394.79647827]
[192.12500000 409.78927612]
[191.46000671 424.78567505]
[189.39363098 439.65393066]
[185.94404602 454.26333618]
[181.14154053 468.48550415]
[175.02835083 482.19546509]
[167.65817261 495.27273560]
[159.09579468 507.60238647]
[149.41647339 519.07604980]
[138.70524597 529.59289551]
[127.05626678 539.06054688]
[114.57190704 547.39569092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 185]
[41 184]
[42 183]
[45 181]
[46 180]
[47 179]
[48 178]
[50 177]
[51 176]
[52 175]
[54 174]
[55 173]
[56 172]
[57 171]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[83 162]
[84 161]
[85 160]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
