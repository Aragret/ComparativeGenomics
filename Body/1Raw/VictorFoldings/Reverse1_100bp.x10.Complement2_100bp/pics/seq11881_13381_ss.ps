%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[38.94285965 567.51617432]
[27.22507095 558.03161621]
[18.11814308 546.01794434]
[12.15153980 532.17370605]
[9.67215347 517.30377197]
[10.82413197 502.27258301]
[15.54050064 487.95407104]
[23.54705620 475.18072510]
[34.37830734 464.69515991]
[47.40454102 457.10696411]
[61.86842728 452.85733032]
[61.19864273 437.87228394]
[60.52885818 422.88723755]
[59.85907364 407.90219116]
[59.18928528 392.91717529]
[48.05836105 383.08670044]
[47.16563416 367.89929199]
[57.55220032 356.29080200]
[45.65774918 365.42984009]
[31.06057549 361.97692871]
[24.52117348 348.47744751]
[30.86014748 334.88269043]
[45.40464020 331.21420288]
[57.43222427 340.17480469]
[57.87882996 325.18145752]
[58.32543564 310.18811035]
[50.97050476 297.23611450]
[59.11525726 283.67242432]
[59.56186295 268.67907715]
[60.00846863 253.68572998]
[60.45507431 238.69238281]
[51.63207245 250.82310486]
[38.22337341 257.54672241]
[23.22452354 257.36111450]
[9.98629665 250.30780029]
[1.46615005 237.96247864]
[-0.43249521 223.08312988]
[4.71452332 208.99383545]
[15.75734901 198.84217834]
[30.22898674 194.89607239]
[44.89643478 198.03709412]
[56.48294830 207.56352234]
[62.40007401 221.34713745]
[65.28534698 206.62724304]
[68.17061615 191.90736389]
[71.05589294 177.18746948]
[73.94116211 162.46757507]
[61.54161453 170.90861511]
[46.60512543 169.52973938]
[35.96046066 158.96133423]
[34.47421265 144.03514099]
[42.82587814 131.57522583]
[57.19718552 127.27807617]
[71.01776886 133.10829163]
[77.96929169 146.40222168]
[82.37029266 132.06237793]
[86.77129364 117.72253418]
[91.17228699 103.38268280]
[89.82761383 98.31259918]
[91.41934204 92.85002136]
[95.92369080 88.68495178]
[100.74968719 74.48249817]
[105.46981812 60.24451065]
[110.08383179 45.97177505]
[114.69783783 31.69904137]
[119.31185150 17.42630959]
[123.92585754 3.15357518]
[115.67694855 -12.27285671]
[121.03168488 -28.57137680]
[136.21252441 -35.80884171]
[140.61352539 -50.14868546]
[145.01451111 -64.48853302]
[149.41551208 -78.82838440]
[153.81651306 -93.16822815]
[150.46870422 -108.63117218]
[161.59965515 -118.52819824]
[158.25184631 -133.99113464]
[169.38281250 -143.88816833]
[173.78381348 -158.22801208]
[178.18479919 -172.56785583]
[164.46015930 -166.51524353]
[150.42625427 -171.81141663]
[144.12232971 -185.42247009]
[149.15959167 -199.55137634]
[162.65245056 -206.10446167]
[176.87158203 -201.32781982]
[183.67153931 -187.95867920]
[189.33433533 -201.84869385]
[194.99711609 -215.73872375]
[193.04219055 -231.43869019]
[205.01173401 -240.30319214]
[210.67451477 -254.19322205]
[216.33731079 -268.08325195]
[222.00009155 -281.97326660]
[208.91122437 -289.34109497]
[196.84902954 -298.29132080]
[186.00373840 -308.68280029]
[176.54640198 -320.35165405]
[168.62619019 -333.11383057]
[162.36799622 -346.76806641]
[157.87052917 -361.09902954]
[155.20471191 -375.88064575]
[154.41259766 -390.87985229]
[155.50668335 -405.86004639]
[158.46971130 -420.58499146]
[163.25494385 -434.82241821]
[169.78691101 -448.34783936]
[177.96258545 -460.94787598]
[187.65306091 -472.42385864]
[198.70545959 -482.59478760]
[210.94549561 -491.30023193]
[224.18013000 -498.40289307]
[238.20060730 -503.79077148]
[252.78584290 -507.37887573]
[267.70578003 -509.11062622]
[282.72509766 -508.95870972]
[297.60693359 -506.92550659]
[312.11660767 -503.04312134]
[326.02523804 -497.37274170]
[339.11349487 -490.00384521]
[351.17492676 -481.05258179]
[362.01934814 -470.66018677]
[371.47567749 -458.99053955]
[379.39483643 -446.22769165]
[385.65188599 -432.57293701]
[390.14813232 -418.24160767]
[392.81271362 -403.45974731]
[393.60354614 -388.46047974]
[392.50820923 -373.48037720]
[389.54394531 -358.75567627]
[384.75750732 -344.51864624]
[378.22442627 -330.99380493]
[370.04766846 -318.39443970]
[360.35623169 -306.91925049]
[349.30297852 -296.74926758]
[337.06219482 -288.04486084]
[323.82699585 -280.94329834]
[309.80603027 -275.55661011]
[295.22052002 -271.96972656]
[280.30044556 -270.23922729]
[265.28112793 -270.39242554]
[250.39945984 -272.42684937]
[235.89012146 -276.31048584]
[230.22734070 -262.42047119]
[224.56454468 -248.53042603]
[218.90176392 -234.64039612]
[221.26171875 -219.93394470]
[208.88714600 -210.07594299]
[203.22434998 -196.18591309]
[197.56156921 -182.29588318]
[192.52465820 -168.16685486]
[188.12365723 -153.82701111]
[183.72265625 -139.48716736]
[187.38525391 -125.04989624]
[175.93951416 -114.12719727]
[179.60211182 -99.68993378]
[168.15635681 -88.76722717]
[163.75535583 -74.42738342]
[159.35437012 -60.08753586]
[154.95336914 -45.74768829]
[150.55236816 -31.40784264]
[158.12269592 -20.98097610]
[158.30804443 -7.90245438]
[150.81669617 3.05611181]
[138.19859314 7.76758432]
[133.58457947 22.04031754]
[128.97058105 36.31305313]
[124.35656738 50.58578491]
[119.74255371 64.85852051]
[120.67616272 72.18997192]
[114.95214081 79.30849457]
[110.12614441 93.51094818]
[105.51213837 107.78368378]
[101.11113739 122.12353516]
[96.71014404 136.46337891]
[92.30914307 150.80322266]
[88.66105652 165.35284424]
[85.77577972 180.07273865]
[82.89051056 194.79263306]
[80.00523376 209.51252747]
[77.11996460 224.23240662]
[75.44842529 239.13899231]
[75.00181580 254.13233948]
[74.55521393 269.12567139]
[74.10860443 284.11904907]
[81.43159485 298.14346313]
[73.31878662 310.63470459]
[72.87217712 325.62808228]
[72.42557526 340.62142944]
[72.53723907 355.62100220]
[83.91804504 366.25656128]
[84.38383484 381.46307373]
[74.17432404 392.24737549]
[74.84410858 407.23242188]
[75.51389313 422.21743774]
[76.18367767 437.20248413]
[76.85346985 452.18753052]
[91.63880920 455.12982178]
[105.29008484 461.52560425]
[117.01361847 471.00305176]
[126.12783051 483.01116943]
[132.10282898 496.85180664]
[134.59123230 511.72024536]
[133.44836426 526.75213623]
[128.74067688 541.07348633]
[120.74186707 553.85168457]
[109.91696930 564.34381104]
[96.89533997 571.93994141]
[82.43403625 576.19830322]
[67.37380981 576.87145996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[18 190]
[24 189]
[25 188]
[26 187]
[28 185]
[29 184]
[30 183]
[31 182]
[43 181]
[44 180]
[45 179]
[46 178]
[47 177]
[55 176]
[56 175]
[57 174]
[58 173]
[61 172]
[62 171]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[70 161]
[71 160]
[72 159]
[73 158]
[74 157]
[76 155]
[78 153]
[79 152]
[80 151]
[87 150]
[88 149]
[89 148]
[91 146]
[92 145]
[93 144]
[94 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
