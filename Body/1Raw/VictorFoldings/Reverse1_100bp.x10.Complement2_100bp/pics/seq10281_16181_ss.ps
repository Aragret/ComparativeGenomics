%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[80.01477814 519.67987061]
[89.92531586 507.06396484]
[89.47871399 492.07058716]
[89.03210449 477.07723999]
[85.69084930 470.48498535]
[88.69213867 461.85772705]
[88.46881104 446.85937500]
[85.22607422 440.21810913]
[88.35548401 431.63647461]
[88.35548401 416.63647461]
[80.61818695 403.90917969]
[88.35548401 390.10900879]
[88.35548401 375.10900879]
[88.35548401 360.10900879]
[88.35548401 345.10900879]
[88.35548401 330.10900879]
[88.35548401 315.10900879]
[80.61818695 302.38174438]
[88.35548401 288.58157349]
[88.35548401 273.58157349]
[88.35548401 258.58157349]
[86.13421631 255.84327698]
[85.12891388 251.89303589]
[85.89475250 247.31407166]
[88.70542145 242.91552734]
[89.37520599 227.93049622]
[89.93341827 212.94088745]
[90.38002777 197.94754028]
[90.82662964 182.95417786]
[91.27323914 167.96083069]
[82.13455200 152.97912598]
[91.94235992 137.39425659]
[92.16568756 122.39591980]
[92.38901520 107.39758301]
[91.71923065 92.41254425]
[90.15870667 77.49393463]
[88.59818268 62.57533264]
[87.03766632 47.65672684]
[85.47714233 32.73812103]
[73.48347473 22.79882431]
[72.11340332 7.64700651]
[81.66291809 -3.72587109]
[80.10239410 -18.64447594]
[78.54187012 -33.56307983]
[76.98134613 -48.48168564]
[75.42082214 -63.40029144]
[73.86029816 -78.31889343]
[72.07783508 -93.21260834]
[70.07382202 -108.07814026]
[68.06980896 -122.94367218]
[66.06579590 -137.80920410]
[64.06178284 -152.67472839]
[54.55012894 -165.31747437]
[60.51768875 -178.96435547]
[58.51367569 -193.82987976]
[56.50966263 -208.69541931]
[51.68124771 -194.49377441]
[43.51554489 -181.91119385]
[32.51189041 -171.71710205]
[19.34315872 -164.53486633]
[4.81462574 -160.80368042]
[-10.18528461 -160.75172424]
[-24.73932076 -164.38215637]
[-37.95750046 -171.47297668]
[-49.03152084 -181.59057617]
[-57.28421021 -194.11628723]
[-62.21090698 -208.28411865]
[-63.51034164 -223.22772217]
[-61.10305786 -238.03329468]
[-55.13625717 -251.79547119]
[-45.97481537 -263.67266846]
[-34.17895508 -272.93862915]
[-20.47000122 -279.02667236]
[-5.68625832 -281.56457520]
[9.26824093 -280.39712524]
[23.47902298 -275.59570312]
[36.07709503 -267.45391846]
[46.29207611 -256.46966553]
[53.49931717 -243.31459045]
[57.25809860 -228.79315186]
[60.36220932 -243.46844482]
[63.46632004 -258.14373779]
[57.09773254 -269.35998535]
[59.98527527 -281.51916504]
[70.05032349 -288.22897339]
[73.37258148 -302.85644531]
[76.69483948 -317.48388672]
[80.01709747 -332.11135864]
[70.42480469 -346.74032593]
[74.30410004 -363.45159912]
[88.77870941 -372.01455688]
[91.88282013 -386.68988037]
[94.98693085 -401.36517334]
[97.43265533 -416.16442871]
[99.21512604 -431.05816650]
[100.99758911 -445.95187378]
[102.78005219 -460.84558105]
[104.56252289 -475.73931885]
[90.55152130 -481.33880615]
[78.46776581 -490.37457275]
[69.13515472 -502.23059082]
[63.18999100 -516.09844971]
[61.03763199 -531.03259277]
[62.82482910 -546.01489258]
[68.42972565 -560.02374268]
[77.47016907 -572.10400391]
[89.32977295 -581.43200684]
[103.19992828 -587.37182617]
[118.13494110 -589.51843262]
[133.11651611 -587.72546387]
[147.12318420 -582.11511230]
[159.19995117 -573.07000732]
[168.52340698 -561.20684814]
[174.45787048 -547.33435059]
[176.59869385 -532.39855957]
[174.79992676 -517.41766357]
[169.18420410 -503.41314697]
[160.13444519 -491.33987427]
[148.26763916 -482.02099609]
[134.39289856 -476.09188843]
[119.45623779 -473.95684814]
[117.67377472 -459.06311035]
[115.89130402 -444.16940308]
[114.10884094 -429.27569580]
[112.32637787 -414.38198853]
[124.75687408 -422.77737427]
[139.50862122 -420.05960083]
[148.13113403 -407.78555298]
[145.68504333 -392.98635864]
[133.57159424 -384.13964844]
[118.72991180 -386.31323242]
[109.66223145 -398.26104736]
[106.55812073 -383.58575439]
[103.45401001 -368.91046143]
[111.92440033 -359.20056152]
[113.27581024 -346.19073486]
[106.79201508 -334.60751343]
[94.64456177 -328.78909302]
[91.32229614 -314.16162109]
[88.00003815 -299.53417969]
[84.67778015 -284.90670776]
[90.76405334 -268.44692993]
[78.14162445 -255.03964233]
[75.03751373 -240.36433411]
[71.93340302 -225.68904114]
[71.37519073 -210.69943237]
[73.37920380 -195.83389282]
[75.38321686 -180.96836853]
[84.75153351 -169.38890076]
[78.92730713 -154.67874146]
[80.93132019 -139.81321716]
[82.93533325 -124.94768524]
[84.93934631 -110.08215332]
[86.94336700 -95.21662903]
[90.13078308 -91.66002655]
[91.11781311 -86.06335449]
[88.77890778 -79.87941742]
[90.33943176 -64.96081543]
[91.89995575 -50.04220963]
[93.46047211 -35.12360382]
[95.02099609 -20.20499802]
[96.58152008 -5.28639412]
[108.27783203 3.86411715]
[110.07294464 18.97147369]
[100.39574432 31.17759895]
[101.95626831 46.09620285]
[103.51679230 61.01480865]
[105.07731628 75.93341064]
[106.63784027 90.85202026]
[115.28464508 78.59507751]
[129.44692993 73.65243530]
[143.84251404 77.86757660]
[153.10217285 89.66835785]
[153.77232361 104.65338135]
[145.60298157 117.23359680]
[131.64112854 122.71690369]
[117.09418488 119.05815887]
[107.38735199 107.62091064]
[107.16402435 122.61924744]
[106.94069672 137.61758423]
[115.34781647 147.39935303]
[114.85303497 159.88691711]
[106.26658630 168.40744019]
[105.81997681 183.40078735]
[105.37337494 198.39413452]
[104.92676544 213.38749695]
[107.79928589 222.05850220]
[104.36024475 228.60028076]
[103.69046021 243.58531189]
[103.35548401 258.58157349]
[103.35548401 273.58157349]
[103.35548401 288.58157349]
[111.09278870 302.38174438]
[103.35548401 315.10900879]
[103.35548401 330.10900879]
[103.35548401 345.10900879]
[103.35548401 360.10900879]
[103.35548401 375.10900879]
[103.35548401 390.10900879]
[111.09278870 403.90917969]
[103.35548401 416.63647461]
[103.35548401 431.63647461]
[103.46715546 446.63604736]
[103.69048309 461.63439941]
[104.02545929 476.63064575]
[104.47206116 491.62399292]
[104.91867065 506.61734009]
[115.56254578 518.62097168]
[112.67223358 534.40155029]
[98.46492004 541.85351562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[6 204]
[7 203]
[9 202]
[10 201]
[12 199]
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[19 192]
[20 191]
[21 190]
[25 189]
[26 188]
[27 186]
[28 185]
[29 184]
[30 183]
[32 180]
[33 179]
[34 178]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[54 148]
[55 147]
[56 146]
[80 145]
[81 144]
[82 143]
[85 141]
[86 140]
[87 139]
[88 138]
[91 134]
[92 133]
[93 132]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
