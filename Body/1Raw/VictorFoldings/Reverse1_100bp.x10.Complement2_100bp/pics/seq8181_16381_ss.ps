%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[86.39310455 748.76080322]
[71.47650146 750.56115723]
[56.45451355 750.26794434]
[41.61954498 747.88677979]
[27.26035690 743.46411133]
[13.65645885 737.08605957]
[1.07265592 728.87664795]
[-10.24610615 718.99578857]
[-20.07950401 707.63574219]
[-28.23612595 695.01770020]
[-34.55720520 681.38720703]
[-38.91969681 667.00958252]
[-41.23868179 652.16479492]
[-41.46902466 637.14172363]
[-39.60623932 622.23278809]
[-35.68658829 607.72821045]
[-29.78636360 593.91033936]
[-22.02042007 581.04815674]
[-12.53991985 569.39196777]
[-1.52940667 559.16876221]
[10.79679775 550.57739258]
[24.19876099 543.78521729]
[38.41560745 538.92443848]
[53.17060471 536.08959961]
[68.17654419 535.33599854]
[69.51477814 520.39581299]
[70.85301208 505.45559692]
[72.19124603 490.51541138]
[73.52947998 475.57522583]
[74.86771393 460.63504028]
[76.20594788 445.69485474]
[77.54418182 430.75466919]
[78.88241577 415.81448364]
[65.28918457 411.91595459]
[52.64698792 405.57009888]
[41.39222717 396.99417114]
[31.91374207 386.48248291]
[24.53936958 374.39624023]
[19.52460861 361.15118408]
[17.04376411 347.20321655]
[17.18388939 333.03277588]
[19.94173813 319.12820435]
[25.22381020 305.96902466]
[32.84953690 294.00936890]
[42.55743790 283.66226196]
[54.01409149 275.28533936]
[66.82559967 269.16860962]
[80.55110168 265.52429199]
[94.71797180 264.47952271]
[96.50043488 249.58580017]
[98.28290558 234.69209290]
[98.84111023 219.70248413]
[98.17132568 204.71743774]
[97.50154114 189.73240662]
[96.83175659 174.74736023]
[96.05043793 159.76773071]
[95.15762329 144.79432678]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[83.77674103 101.08860016]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[77.52404785 45.96220779]
[76.60571289 30.77631760]
[86.48960114 19.69280624]
[85.37395477 4.73435259]
[84.25830841 -10.22410107]
[75.51602936 -23.41057587]
[82.28528595 -36.67807007]
[81.16963959 -51.63652420]
[80.05399323 -66.59497833]
[78.93833923 -81.55342865]
[77.82269287 -96.51188660]
[70.30958557 -83.52907562]
[57.67313766 -75.44698334]
[42.73637009 -74.07116699]
[28.83618546 -79.70897675]
[19.07792854 -91.10092163]
[15.64161396 -105.70201111]
[19.29492569 -120.25032043]
[29.22170258 -131.49571228]
[43.20428085 -136.92596436]
[58.11891174 -135.32791138]
[70.63363647 -127.05859375]
[77.95262909 -113.96534729]
[79.29086304 -128.90553284]
[80.62909698 -143.84571838]
[81.96733093 -158.78590393]
[67.38928986 -162.45022583]
[53.56400681 -168.35005188]
[40.83193588 -176.34010315]
[29.50661659 -186.22360229]
[19.86694908 -197.75718689]
[12.15031624 -210.65679932]
[6.54674816 -224.60478210]
[3.19423628 -239.25767517]
[2.17533994 -254.25462341]
[3.51515079 -269.22631836]
[7.18067408 -283.80404663]
[13.08164310 -297.62884521]
[21.07274246 -310.36026001]
[30.95718193 -321.68475342]
[42.49155045 -331.32348633]
[55.39179993 -339.03903198]
[69.34025574 -344.64144897]
[83.99342346 -347.99276733]
[98.99044800 -349.01043701]
[113.96202850 -347.66937256]
[128.53945923 -344.00265503]
[142.36376953 -338.10052490]
[155.09452820 -330.10839844]
[166.41821289 -320.22302246]
[176.05596924 -308.68786621]
[183.77047729 -295.78695679]
[189.37174988 -281.83804321]
[192.72184753 -267.18460083]
[193.73826599 -252.18750000]
[192.39598083 -237.21603394]
[188.72805786 -222.63890076]
[182.82479858 -208.81506348]
[174.83160400 -196.08497620]
[164.94529724 -184.76211548]
[153.40933228 -175.12528992]
[140.50781250 -167.41184998]
[126.55843353 -161.81173706]
[111.90470886 -158.46286011]
[96.90751648 -157.44767761]
[95.56928253 -142.50749207]
[94.23104858 -127.56729889]
[92.89281464 -112.62711334]
[92.78114319 -97.62753296]
[93.89679718 -82.66908264]
[95.01244354 -67.71062469]
[96.12808990 -52.75217056]
[97.24374390 -37.79372025]
[105.90621948 -25.67717171]
[99.21675873 -11.33974934]
[100.33241272 3.61870384]
[101.44805908 18.57715797]
[112.86673737 28.07185364]
[114.21125793 43.22595978]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[114.75726318 93.17341614]
[115.53700256 104.79380035]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.13102722 143.90150452]
[111.02384186 158.87490845]
[114.65849304 167.25508118]
[111.81679535 174.07757568]
[112.48657990 189.06262207]
[113.15636444 204.04765320]
[113.82614899 219.03269958]
[121.72247314 206.27934265]
[134.59394836 198.57705688]
[149.56506348 197.64657593]
[163.29122925 203.69573975]
[172.70597839 215.37318420]
[175.70603943 230.07011414]
[171.62118530 244.50318909]
[161.36399841 255.44805908]
[147.22593689 260.45956421]
[132.36549377 258.41818237]
[120.10253143 249.77990723]
[113.17662048 236.47454834]
[111.39415741 251.36827087]
[109.61168671 266.26199341]
[124.69262695 271.31030273]
[138.39955139 279.36425781]
[150.14149475 290.07403564]
[159.41278076 302.97528076]
[165.81472778 317.50936890]
[169.07284546 333.04757690]
[169.04861450 348.91818237]
[165.74536133 364.43566895]
[159.30795288 378.93017578]
[150.01657104 391.77645874]
[138.27439880 402.42092896]
[124.59018707 410.40545654]
[109.55620575 415.38708496]
[93.82260132 417.15274048]
[92.48436737 432.09292603]
[91.14613342 447.03311157]
[89.80789948 461.97329712]
[88.46966553 476.91348267]
[87.13143158 491.85366821]
[85.79319763 506.79385376]
[84.45496368 521.73400879]
[83.11672974 536.67419434]
[97.74984741 540.08270264]
[111.76615906 545.49468994]
[124.89282990 552.80468750]
[136.87434387 561.87054443]
[147.47749329 572.51568604]
[156.49584961 584.53295898]
[163.75390625 597.68847656]
[169.11035156 611.72607422]
[172.46095276 626.37255859]
[173.74046326 641.34283447]
[172.92398071 656.34552002]
[170.02740479 671.08850098]
[165.10711670 685.28485107]
[158.25889587 698.65826416]
[149.61604309 710.94836426]
[139.34677124 721.91601562]
[127.65101624 731.34759521]
[114.75640869 739.05963135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[49 170]
[50 169]
[51 168]
[52 156]
[53 155]
[54 154]
[55 153]
[56 151]
[57 150]
[58 149]
[59 148]
[61 145]
[62 144]
[63 143]
[66 140]
[67 139]
[68 138]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[86 131]
[87 130]
[88 129]
[89 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
