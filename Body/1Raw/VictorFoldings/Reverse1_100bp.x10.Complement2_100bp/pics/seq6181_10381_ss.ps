%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[4.43620539 358.63552856]
[7.10313892 373.41021729]
[8.23676586 388.38082886]
[7.82506990 403.38864136]
[5.87241459 418.27456665]
[2.39949918 432.88082886]
[-2.55686116 447.05258179]
[-8.94412613 460.63958740]
[-16.69458771 473.49783325]
[-25.72608566 485.49099731]
[-35.94288254 496.49197388]
[-47.23667145 506.38409424]
[-59.48773575 515.06256104]
[-72.56620789 522.43530273]
[-86.33344269 528.42425537]
[-100.64350891 532.96582031]
[-115.34470367 536.01196289]
[-130.28118896 537.53033447]
[-145.29463196 537.50488281]
[-160.22587585 535.93579102]
[-174.91664124 532.83978271]
[-189.21119690 528.24963379]
[-202.95803833 522.21398926]
[-216.01139832 514.79687500]
[-228.23294067 506.07690430]
[-239.49308777 496.14648438]
[-249.67248535 485.11093140]
[-258.66320801 473.08715820]
[-266.36999512 460.20269775]
[-272.71109009 446.59408569]
[-277.61932373 432.40557861]
[-281.04263306 417.78762817]
[-282.94476318 402.89514160]
[-283.30551147 387.88601685]
[-282.12106323 372.91934204]
[-279.40399170 358.15377808]
[-275.18310547 343.74588013]
[-269.50311279 329.84832764]
[-262.42425537 316.60845947]
[-254.02156067 304.16665649]
[-244.38409424 292.65478516]
[-233.61404419 282.19485474]
[-221.82554626 272.89776611]
[-209.14360046 264.86209106]
[-195.70260620 258.17300415]
[-181.64508057 252.90139771]
[-167.12001038 249.10316467]
[-152.28140259 246.81857300]
[-137.28651428 246.07182312]
[-122.29433441 246.87084961]
[-107.46376801 249.20718384]
[-92.95204163 253.05603027]
[-78.91297150 258.37661743]
[-65.49539185 265.11254883]
[-52.84153748 273.19238281]
[-41.08554077 282.53051758]
[-30.59803772 271.80612183]
[-20.11053658 261.08175659]
[-9.62303638 250.35737610]
[0.86446482 239.63299561]
[11.35196590 228.90861511]
[21.43310547 217.80137634]
[31.09391594 206.32667542]
[40.75472641 194.85197449]
[50.41553497 183.37727356]
[60.07634735 171.90257263]
[67.83274078 159.06364441]
[73.49552155 145.17361450]
[79.15830994 131.28358459]
[84.82109833 117.39356232]
[90.48388672 103.50353241]
[90.36888123 95.44379425]
[96.33576965 89.44987488]
[102.20472717 75.64569855]
[108.07369232 61.84151840]
[96.73738861 50.43991470]
[90.65896606 35.59662247]
[90.74182892 19.59572220]
[96.94368744 4.88719606]
[108.28764343 -6.28820419]
[123.01589203 -12.24031830]
[138.86209106 -12.08515167]
[144.52487183 -25.97517776]
[149.98023987 -39.94797516]
[155.22695923 -54.00044632]
[160.47367859 -68.05291748]
[165.72039795 -82.10539246]
[170.96710205 -96.15785980]
[176.21382141 -110.21033478]
[162.79733276 -116.95162964]
[150.18836975 -125.10400391]
[138.53477478 -134.57188416]
[127.97315216 -145.24426270]
[118.62736511 -156.99600220]
[110.60696411 -169.68931580]
[104.00599670 -183.17539978]
[98.90185547 -197.29614258]
[95.35438538 -211.88595581]
[93.40516663 -226.77378845]
[93.07706451 -241.78511047]
[94.37391663 -256.74389648]
[97.28053284 -271.47476196]
[101.76281738 -285.80502319]
[107.76822662 -299.56665039]
[115.22635651 -312.59829712]
[124.04975128 -324.74716187]
[134.13496399 -335.87081909]
[145.36375427 -345.83883667]
[157.60447693 -354.53436279]
[170.71360779 -361.85540771]
[184.53744507 -367.71618652]
[198.91390991 -372.04797363]
[213.67446899 -374.79995728]
[228.64602661 -375.93988037]
[243.65307617 -375.45440674]
[258.51965332 -373.34918213]
[273.07147217 -369.64892578]
[287.13790894 -364.39697266]
[300.55404663 -357.65496826]
[313.16256714 -349.50192261]
[324.81564331 -340.03341675]
[335.37670898 -329.36047363]
[344.72186279 -317.60821533]
[352.74157715 -304.91445923]
[359.34179688 -291.42800903]
[364.44519043 -277.30700684]
[367.99188232 -262.71701050]
[369.94030762 -247.82907104]
[370.26757812 -232.81773376]
[368.96994019 -217.85900879]
[366.06253052 -203.12829590]
[361.57946777 -188.79827881]
[355.57330322 -175.03697205]
[348.11450195 -162.00573730]
[339.29043579 -149.85734558]
[329.20462036 -138.73423767]
[317.97531128 -128.76681519]
[305.73410034 -120.07196045]
[292.62460327 -112.75159454]
[278.80044556 -106.89156342]
[264.42373657 -102.56056213]
[249.66304016 -99.80936432]
[234.69140625 -98.67024231]
[219.68438721 -99.15653992]
[204.81791687 -101.26256561]
[190.26629639 -104.96361542]
[185.01957703 -90.91114044]
[179.77285767 -76.85867310]
[174.52613831 -62.80620193]
[169.27941895 -48.75373077]
[164.03271484 -34.70125961]
[165.16503906 -30.06155205]
[163.39474487 -24.66126442]
[158.41490173 -20.31239128]
[152.75212097 -6.42236471]
[163.09901428 3.05820322]
[169.60217285 15.52766418]
[171.46234131 29.49760437]
[168.43589783 43.29263306]
[160.86642456 55.25130844]
[149.64598083 63.92624664]
[136.10986328 68.25926971]
[121.87786865 67.71047974]
[116.00890350 81.51465607]
[110.13994598 95.31883240]
[104.37390900 109.16632080]
[98.71112823 123.05634308]
[93.04833984 136.94636536]
[87.38555145 150.83639526]
[81.72276306 164.72642517]
[93.04428101 154.88655090]
[106.57698822 148.41616821]
[121.34395599 145.78239441]
[136.27912903 147.17536926]
[150.30435181 152.49452209]
[162.40710449 161.35586548]
[171.71368408 173.11968994]
[177.55224609 186.93675232]
[179.50131226 201.80958557]
[177.42015076 216.66450500]
[171.45901489 230.42912292]
[162.04826355 242.10977173]
[149.86723328 250.86320496]
[135.79530334 256.05749512]
[120.84832764 257.31768799]
[106.10535431 254.55279541]
[92.63068390 247.96240234]
[81.39706421 238.02229309]
[73.21545410 225.45004272]
[68.67650604 211.15325928]
[68.10787964 196.16404724]
[71.55104828 181.56338501]
[61.89023590 193.03808594]
[52.22942734 204.51278687]
[42.56861496 215.98748779]
[32.90780640 227.46218872]
[47.84801483 228.80012512]
[56.24404907 241.23019409]
[51.90666199 255.58941650]
[38.03321075 261.29269409]
[24.85069275 254.13580322]
[22.07634544 239.39611816]
[11.58884430 250.12049866]
[1.10134351 260.84487915]
[-9.38615799 271.56924438]
[-19.87365913 282.29364014]
[-30.36116028 293.01800537]
[-20.76283455 304.56253052]
[-12.40242004 317.03280640]
[-5.36854172 330.29663086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 207]
[57 206]
[58 205]
[59 204]
[60 203]
[61 202]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 170]
[68 169]
[69 168]
[70 167]
[71 166]
[73 165]
[74 164]
[75 163]
[82 155]
[83 154]
[84 151]
[85 150]
[86 149]
[87 148]
[88 147]
[89 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
