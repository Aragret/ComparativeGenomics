%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[22.21694183 457.50958252]
[16.20991707 471.26504517]
[9.01067734 484.43579102]
[0.67556685 496.91873169]
[-8.73017883 508.61614990]
[-19.13294601 519.43652344]
[-30.45131874 529.29510498]
[-42.59671021 538.11480713]
[-55.47406769 545.82653809]
[-68.98260498 552.37005615]
[-83.01660156 557.69403076]
[-97.46621704 561.75677490]
[-112.21835327 564.52661133]
[-127.15756989 565.98181152]
[-142.16693115 566.11096191]
[-157.12896729 564.91302490]
[-171.92658997 562.39746094]
[-186.44396973 558.58392334]
[-200.56750488 553.50225830]
[-214.18663025 547.19219971]
[-227.19477844 539.70312500]
[-239.49014282 531.09375000]
[-250.97647095 521.43133545]
[-261.56390381 510.79159546]
[-271.16952515 499.25775146]
[-279.71820068 486.92010498]
[-287.14300537 473.87518311]
[-293.38583374 460.22509766]
[-298.39782715 446.07669067]
[-302.13977051 431.54067993]
[-304.58233643 416.73083496]
[-305.70645142 401.76309204]
[-305.50332642 386.75454712]
[-303.97448730 371.82269287]
[-301.13195801 357.08438110]
[-296.99798584 342.65496826]
[-291.60488892 328.64739990]
[-284.99487305 315.17129517]
[-277.21972656 302.33212280]
[-268.34024048 290.23034668]
[-258.42596436 278.96072388]
[-247.55444336 268.61141968]
[-235.81079102 259.26348877]
[-223.28691101 250.99002075]
[-210.08084106 243.85580444]
[-196.29589844 237.91667175]
[-182.04000854 233.21910095]
[-167.42472839 229.79988098]
[-152.56443787 227.68572998]
[-137.57545471 226.89323425]
[-122.57509613 227.42857361]
[-107.68074036 229.28756714]
[-93.00897217 232.45565796]
[-78.67461395 236.90806580]
[-64.78986359 242.60992432]
[-51.46337891 249.51661682]
[-38.79946518 257.57409668]
[-29.66066170 245.67945862]
[-20.52185822 233.78483582]
[-11.38305664 221.89019775]
[-11.47614574 218.36547852]
[-9.86662579 214.62054443]
[-6.46959686 211.45613098]
[-1.56097257 209.68060303]
[-3.08648205 194.90872192]
[6.54749203 183.13412476]
[22.05194092 181.63418579]
[31.71275139 170.15948486]
[41.37356186 158.68478394]
[51.03437424 147.21009827]
[60.69518280 135.73539734]
[70.35599518 124.26068878]
[79.93111420 112.71438599]
[89.42001343 101.09712219]
[98.01857758 88.80628967]
[105.67917633 75.90995789]
[113.33976746 63.01363373]
[120.51513672 49.84115982]
[127.19532776 36.41078186]
[133.87551880 22.98040581]
[133.55014038 17.77068329]
[135.10061646 13.39468670]
[137.89523315 10.42733765]
[141.16566467 9.10952473]
[148.43888855 -4.00916910]
[155.71211243 -17.12786293]
[162.98535156 -30.24655724]
[170.25857544 -43.36524963]
[165.08131409 -55.79949951]
[167.96859741 -68.75611877]
[177.64765930 -77.55371857]
[190.43412781 -79.14620972]
[197.90185547 -92.15516663]
[202.30285645 -106.49501038]
[203.41850281 -121.45346832]
[204.53416443 -136.41192627]
[205.64981079 -151.37037659]
[206.76545715 -166.32882690]
[207.88110352 -181.28727722]
[193.95658875 -187.23594666]
[182.71974182 -197.38542175]
[175.38945007 -210.63478088]
[172.76084900 -225.54682922]
[175.11906433 -240.50401306]
[182.20831299 -253.88389587]
[193.25958252 -264.23513794]
[207.07412720 -270.43490601]
[222.15345764 -271.81066895]
[236.86186218 -268.21322632]
[249.60388184 -260.03280640]
[258.99737549 -248.15673828]
[264.02340698 -233.87324524]
[264.13677979 -218.73171997]
[259.32516479 -204.37458801]
[250.11056519 -192.35919189]
[237.49244690 -183.98889160]
[222.83955383 -180.17163086]
[221.72390747 -165.21318054]
[220.60826111 -150.25473022]
[219.49261475 -135.29626465]
[218.37696838 -120.33781433]
[217.26130676 -105.37936401]
[224.90335083 -118.28669739]
[234.88653564 -129.48205566]
[246.83761597 -138.54690552]
[260.30981445 -145.14233398]
[274.79946899 -149.02177429]
[289.76486206 -150.04019165]
[304.64648438 -148.15951538]
[318.88800049 -143.45004272]
[331.95700073 -136.08786011]
[343.36483765 -126.34818268]
[352.68502808 -114.59515381]
[359.56918335 -101.26816559]
[363.75988770 -86.86546326]
[365.10046387 -71.92548370]
[363.54083252 -57.00679016]
[359.13928223 -42.66711426]
[352.06033325 -29.44256401]
[342.56869507 -17.82754326]
[331.01919556 -8.25629139]
[317.84359741 -1.08663511]
[303.53451538 3.41338205]
[288.62689209 5.07552385]
[273.67807007 3.83765006]
[259.24688721 -0.25396076]
[245.87290955 -7.04634047]
[234.05609131 -16.28555107]
[224.23825073 -27.62617874]
[216.78640747 -40.64424515]
[211.97915649 -54.85305786]
[209.99624634 -69.72141266]
[210.91081238 -84.68742371]
[203.44306946 -71.67847443]
[208.52578735 -55.64710236]
[200.27886963 -40.60372543]
[183.37727356 -36.09202194]
[176.10404968 -22.97332764]
[168.83081055 -9.85463333]
[161.55758667 3.26406050]
[154.28434753 16.38275528]
[147.30590820 29.66060066]
[140.62570190 43.09097672]
[133.94551086 56.52135086]
[148.77951050 54.29594421]
[159.87165833 64.39368439]
[159.04522705 79.37090302]
[146.90942383 88.18694305]
[132.41033936 84.34295654]
[126.23609924 70.67423248]
[118.57550049 83.57055664]
[110.91490173 96.46688843]
[124.70861053 90.57336426]
[139.61256409 92.26811218]
[151.73091125 101.10812378]
[157.89591980 114.78264618]
[156.49610901 129.71719360]
[147.89735413 142.00788879]
[134.34736633 148.44200134]
[119.38807678 147.33766174]
[106.92980194 138.98353577]
[100.22911072 125.56337738]
[101.03727722 110.58602142]
[91.54837799 122.20328522]
[88.54336548 130.82928467]
[81.83069611 133.92149353]
[72.16988373 145.39619446]
[62.50907135 156.87089539]
[52.84826279 168.34559631]
[43.18745041 179.82029724]
[33.52664185 191.29499817]
[34.69042206 206.82829285]
[24.72952652 218.32765198]
[9.91372776 219.34141541]
[0.51157629 231.02899170]
[-8.62722588 242.92362976]
[-17.76602745 254.81826782]
[-26.90483093 266.71289062]
[-15.85684395 276.87359619]
[-5.75010109 287.97094727]
[3.33629656 299.91812134]
[11.33123398 312.62161255]
[18.17214012 325.98199463]
[23.80547333 339.89468384]
[28.18714333 354.25082397]
[31.28285980 368.93801880]
[33.06839371 383.84136963]
[33.52976608 398.84417725]
[32.66337204 413.82907104]
[30.47599030 428.67877197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 198]
[58 197]
[59 196]
[60 195]
[64 194]
[67 191]
[68 190]
[69 189]
[70 188]
[71 187]
[72 186]
[73 184]
[74 183]
[75 172]
[76 171]
[77 170]
[78 164]
[79 163]
[80 162]
[84 161]
[85 160]
[86 159]
[87 158]
[88 157]
[92 154]
[93 153]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
