%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[8.65275860 681.03759766]
[2.64586496 694.83306885]
[-5.86349916 707.24218750]
[-16.56772614 717.81652832]
[-29.07986450 726.17370605]
[-42.94760895 732.01171875]
[-57.66964722 735.11944580]
[-72.71379089 735.38458252]
[-87.53619385 732.79760742]
[-101.60105133 727.45190430]
[-114.39990997 719.54077148]
[-125.47011566 709.35021973]
[-134.41148376 697.24865723]
[-140.90077209 683.67346191]
[-144.70341492 669.11541748]
[-145.68194580 654.10083008]
[-143.80099487 639.17236328]
[-139.12854004 624.86975098]
[-131.83351135 611.71002197]
[-122.17961121 600.16882324]
[-110.51580811 590.66345215]
[-97.26375580 583.53747559]
[-82.90250397 579.04846191]
[-67.95121002 577.35876465]
[-52.95033646 578.52941895]
[-48.97824097 564.06488037]
[-45.00614548 549.60040283]
[-41.03404999 535.13586426]
[-37.06195450 520.67132568]
[-46.49222565 509.17315674]
[-47.35383606 494.14910889]
[-39.10711670 481.34893799]
[-24.73844910 475.79486084]
[-20.76635170 461.33035278]
[-16.79425621 446.86581421]
[-30.92318535 451.90301514]
[-43.75050735 444.12741089]
[-45.82040024 429.27093506]
[-35.60700989 418.28515625]
[-20.63927460 419.26846313]
[-11.95113277 431.49429321]
[-6.91421652 417.36526489]
[-1.87730038 403.23623657]
[3.15961576 389.10720825]
[8.19653225 374.97817993]
[-0.35242772 362.81048584]
[-0.09421243 347.76397705]
[9.08170033 335.61257935]
[23.82366180 331.14260864]
[28.86057663 317.01358032]
[33.89749527 302.88455200]
[38.93441010 288.75552368]
[43.97132492 274.62649536]
[48.58533478 260.35375977]
[52.77234650 245.94996643]
[56.95935822 231.54618835]
[51.86357498 214.75334167]
[65.26165009 202.12110901]
[69.23374176 187.65658569]
[73.20584106 173.19206238]
[77.07014465 158.69836426]
[80.82644653 144.17630005]
[84.58274841 129.65425110]
[73.25591278 120.04544067]
[67.21117401 106.47756195]
[67.64239502 91.63032532]
[74.46440887 78.43614960]
[86.32984161 69.50093842]
[100.89519501 66.58945465]
[104.65149689 52.06739426]
[108.40779877 37.54533386]
[110.52242279 22.69513702]
[110.96902466 7.70178652]
[100.41077423 -3.75077391]
[101.07728577 -18.94980049]
[112.06061554 -28.94489861]
[112.50722504 -43.93824768]
[112.95382690 -58.93159866]
[113.40043640 -73.92494965]
[102.84218597 -85.37751007]
[103.50869751 -100.57653809]
[114.49202728 -110.57163239]
[114.93863678 -125.56498718]
[115.38523865 -140.55833435]
[100.85176086 -154.43122864]
[101.20102692 -174.21459961]
[115.75892639 -187.15994263]
[115.53559875 -202.15827942]
[115.31227112 -217.15661621]
[114.97729492 -232.15287781]
[114.53069305 -247.14622498]
[114.08408356 -262.13958740]
[113.63748169 -277.13293457]
[112.96769714 -292.11795044]
[112.07488251 -307.09136963]
[111.18206024 -322.06478882]
[96.80548096 -327.00262451]
[85.41619110 -337.07000732]
[78.75098419 -350.73178101]
[77.82624817 -365.90454102]
[82.78300476 -380.27462769]
[92.86537933 -391.65066528]
[106.53588104 -398.29788208]
[121.70986938 -399.20266724]
[136.07341003 -394.22702026]
[147.43617249 -384.12969971]
[154.06541443 -370.45043945]
[154.95022583 -355.27529907]
[149.95568848 -340.91830444]
[139.84341431 -329.56884766]
[126.15547180 -322.95758057]
[127.04828644 -307.98419189]
[127.94110107 -293.01077271]
[130.85516357 -289.22695923]
[131.42320251 -283.57238770]
[128.63082886 -277.57952881]
[129.07743835 -262.58618164]
[129.52404785 -247.59283447]
[129.97064209 -232.59948730]
[133.31190491 -226.00723267]
[130.31060791 -217.37994385]
[130.53393555 -202.38160706]
[130.75726318 -187.38327026]
[139.77664185 -182.48205566]
[145.99633789 -174.21459961]
[148.24052429 -164.03242493]
[146.03877258 -153.75839233]
[139.72285461 -145.26037598]
[130.37858582 -140.11172485]
[129.93197632 -125.11837769]
[129.48538208 -110.12503052]
[139.85432434 -99.49391174]
[139.61499023 -84.28215790]
[128.39378357 -73.47834015]
[127.94718170 -58.48499298]
[127.50057220 -43.49164200]
[127.05397034 -28.49829292]
[137.42291260 -17.86717606]
[137.18357849 -2.65542507]
[125.96237183 8.14839268]
[125.51576996 23.14174271]
[133.32353210 10.33397961]
[145.18629456 1.15383971]
[159.54328918 -3.19087124]
[174.50563049 -2.12853193]
[188.10473633 4.20108891]
[198.55143738 14.96522045]
[204.47128296 28.74765587]
[205.08540344 43.73507690]
[200.31300354 57.95563507]
[190.78198242 69.53836823]
[177.74632263 76.95937347]
[162.92105103 79.24227905]
[148.25672913 76.08673859]
[135.68267822 67.90792084]
[126.85322571 55.78187561]
[122.92985535 41.30163574]
[119.17355347 55.82369232]
[115.41725159 70.34575653]
[126.74408722 79.95455933]
[132.78883362 93.52243805]
[132.35760498 108.36967468]
[125.53559113 121.56385040]
[113.67015839 130.49905396]
[99.10480499 133.41055298]
[95.34850311 147.93260193]
[91.59220123 162.45466614]
[92.47288513 171.54653931]
[87.67036438 177.16415405]
[83.69826508 191.62867737]
[79.72617340 206.09320068]
[85.41586304 217.66860962]
[81.80971527 229.63438416]
[71.36313629 235.73320007]
[67.17613220 250.13697815]
[62.98911667 264.54077148]
[64.17372131 268.71817017]
[63.98624802 272.65890503]
[62.66959000 275.96069336]
[60.57231903 278.34146118]
[58.10035706 279.66339111]
[53.06343842 293.79241943]
[48.02652359 307.92144775]
[42.98960876 322.05047607]
[37.95269012 336.17953491]
[46.54242325 348.96713257]
[45.96214294 364.18280029]
[36.64381027 375.99942017]
[22.32556152 380.01510620]
[17.28864479 394.14413452]
[12.25172901 408.27316284]
[7.21481276 422.40219116]
[2.17789674 436.53121948]
[-2.32973194 450.83792114]
[-6.30182791 465.30242920]
[-10.27392387 479.76696777]
[-0.75688475 491.88024902]
[-0.20386839 507.09695435]
[-8.61751175 519.57391357]
[-22.59742928 524.64343262]
[-26.56952477 539.10797119]
[-30.54162216 553.57244873]
[-34.51371765 568.03698730]
[-38.48581314 582.50152588]
[-24.99088287 589.15606689]
[-12.99937153 598.24456787]
[-2.94476485 609.43835449]
[4.80946827 622.33288574]
[9.98301792 636.46197510]
[12.38886356 651.31481934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[33 196]
[34 195]
[35 194]
[41 193]
[42 192]
[43 191]
[44 190]
[45 189]
[49 185]
[50 184]
[51 183]
[52 182]
[53 181]
[54 176]
[55 175]
[56 174]
[58 171]
[59 170]
[60 169]
[61 167]
[62 166]
[63 165]
[69 159]
[70 158]
[71 157]
[72 141]
[73 140]
[76 137]
[77 136]
[78 135]
[79 134]
[82 131]
[83 130]
[84 129]
[87 123]
[88 122]
[89 121]
[90 119]
[91 118]
[92 117]
[93 116]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
