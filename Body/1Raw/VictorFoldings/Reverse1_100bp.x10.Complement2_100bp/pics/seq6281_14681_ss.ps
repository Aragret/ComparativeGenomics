%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[183.88673401 762.98870850]
[171.24224854 754.89575195]
[159.46641541 745.58404541]
[148.67623901 735.14611816]
[138.97900391 723.68566895]
[130.47105408 711.31658936]
[123.23696136 698.16186523]
[117.34862518 684.35223389]
[112.86456299 670.02490234]
[109.82933807 655.32232666]
[108.27312469 640.39062500]
[108.21138763 625.37811279]
[109.64473724 610.43408203]
[112.55892181 595.70703125]
[116.92499542 581.34332275]
[122.69954681 567.48571777]
[129.82519531 554.27197266]
[138.23112488 541.83331299]
[147.83377075 530.29351807]
[158.53771973 519.76715088]
[170.23657227 510.35888672]
[182.81407166 502.16223145]
[196.14518738 495.25860596]
[210.09745789 489.71670532]
[224.53218079 485.59152222]
[221.86639404 470.83029175]
[219.20059204 456.06909180]
[216.53480530 441.30786133]
[213.86900330 426.54666138]
[209.89691162 412.08212280]
[204.65019226 398.02966309]
[189.72604370 397.58349609]
[176.07272339 391.44085693]
[165.78355408 380.50933838]
[160.44914246 366.43341064]
[160.91145325 351.34698486]
[167.13119507 337.54998779]
[178.18894958 327.15759277]
[172.94223022 313.10510254]
[167.69551086 299.05264282]
[162.44880676 285.00018311]
[157.20208740 270.94769287]
[151.95536804 256.89523315]
[146.70864868 242.84275818]
[131.33035278 244.73336792]
[115.93688965 242.89533997]
[101.41973114 237.43092346]
[88.62060547 228.65249634]
[78.28267670 217.06471252]
[71.00741577 203.33549500]
[67.21960449 188.25755310]
[67.14251709 172.70256042]
[70.78479767 157.57084656]
[77.93967438 143.73919678]
[88.19672394 132.01010132]
[100.96540833 123.06518555]
[95.51005554 109.09239197]
[89.87796021 103.32592773]
[90.07919312 94.87072754]
[84.83247375 80.81826019]
[81.38697815 78.17581177]
[79.18321228 74.90351868]
[78.26669312 71.46907043]
[78.52639008 68.30693054]
[79.71910095 65.77008057]
[75.31810760 51.43023682]
[70.91710663 37.09038925]
[66.51610565 22.75054169]
[52.83456802 15.30384731]
[48.57560730 0.69850951]
[55.75920486 -12.29885578]
[51.35820770 -26.63870239]
[46.95721054 -40.97854996]
[42.55621338 -55.31839752]
[38.15521622 -69.65824127]
[32.64567947 -76.94403839]
[33.79715729 -84.24444580]
[29.61014557 -98.64822388]
[18.32828712 -109.74012756]
[22.20543098 -124.12126160]
[18.01841927 -138.52503967]
[3.01448035 -137.31398010]
[-11.92607212 -139.14831543]
[-26.19143105 -143.95294189]
[-39.19743729 -151.53109741]
[-50.41150665 -161.57249451]
[-59.37442780 -173.66592407]
[-65.71917725 -187.31616211]
[-69.18593597 -201.96424866]
[-69.63274384 -217.01034546]
[-67.04131317 -231.83834839]
[-61.51774979 -245.84103394]
[-53.28824615 -258.44500732]
[-42.68979263 -269.13415527]
[-30.15639114 -277.47073364]
[-16.20127678 -283.11340332]
[-1.39590192 -285.83105469]
[13.65346241 -285.51248169]
[28.33055496 -282.17062378]
[42.03435898 -275.94241333]
[54.20370865 -267.08285522]
[64.34027863 -255.95474243]
[72.02898407 -243.01377869]
[76.95497131 -228.78987122]
[78.91653442 -213.86549377]
[77.83334351 -198.85177612]
[73.74974823 -184.36352539]
[66.83298492 -170.99404907]
[57.36627197 -159.29078674]
[45.73728180 -149.73298645]
[32.42220306 -142.71205139]
[36.60921478 -128.30827332]
[47.59158707 -118.24662781]
[44.01392746 -102.83523560]
[48.20093918 -88.43145752]
[52.49505997 -74.05924225]
[56.89606094 -59.71939468]
[61.29705811 -45.37954712]
[65.69805908 -31.03970146]
[70.09905243 -16.69985390]
[83.33706665 -9.97002125]
[88.00457764 4.50992870]
[80.85595703 18.34954262]
[85.25695038 32.68938828]
[89.65795135 47.02923584]
[94.05895233 61.36908340]
[98.88494873 75.57154083]
[104.13166809 89.62400818]
[109.48284912 103.63703156]
[114.93820953 117.60983276]
[129.33663940 115.55844116]
[143.82246399 116.76914978]
[157.66627502 121.17764282]
[170.17181396 128.55865479]
[180.71086121 138.53753662]
[188.75488281 150.60920715]
[193.90147400 164.16375732]
[195.89456177 178.51727295]
[194.63705444 192.94628906]
[190.19564819 206.72431946]
[182.79722595 219.15838623]
[172.81735229 229.62390137]
[160.76112366 237.59603882]
[166.00782776 251.64851379]
[171.25454712 265.70098877]
[176.50126648 279.75344849]
[181.74798584 293.80593872]
[186.99470520 307.85839844]
[192.24142456 321.91085815]
[207.40429688 322.51336670]
[221.14428711 328.85809326]
[231.38069153 339.94995117]
[236.57653809 354.07763672]
[235.96928406 369.07748413]
[229.68257141 382.66510010]
[218.70266724 392.78292847]
[223.94938660 406.83541870]
[227.15550232 392.18206787]
[236.33366394 380.31774902]
[249.71168518 373.53332520]
[264.70651245 373.13873291]
[278.42282104 379.21017456]
[288.21228027 390.57534790]
[292.18463135 405.03979492]
[289.57293701 419.81066895]
[280.88140869 432.03594971]
[267.78829956 439.35513306]
[252.82167053 440.35501099]
[238.87132263 434.84246826]
[228.63021851 423.88085938]
[231.29602051 438.64205933]
[233.96180725 453.40328979]
[236.62760925 468.16452026]
[239.29341125 482.92572021]
[254.25923157 481.74130249]
[269.26861572 482.05291748]
[284.17236328 483.85745239]
[298.82238770 487.13699341]
[313.07308960 491.85891724]
[326.78280640 497.97628784]
[339.81527710 505.42834473]
[352.04101562 514.14099121]
[363.33847046 524.02764893]
[373.59539795 534.99005127]
[382.70980835 546.91925049]
[390.59115601 559.69665527]
[397.16110229 573.19537354]
[402.35437012 587.28112793]
[406.11929321 601.81396484]
[408.41848755 616.64947510]
[409.22909546 631.64019775]
[408.54306030 646.63714600]
[406.36721802 661.49127197]
[402.72317505 676.05487061]
[397.64712524 690.18328857]
[391.18957520 703.73608398]
[383.41467285 716.57861328]
[374.39965820 728.58312988]
[364.23419189 739.63037109]
[353.01928711 749.61053467]
[340.86636353 758.42449951]
[327.89624023 765.98455811]
[314.23782349 772.21563721]
[300.02688599 777.05578613]
[285.40460205 780.45690918]
[270.51632690 782.38525391]
[255.51007080 782.82153320]
[240.53492737 781.76153564]
[225.73974609 779.21569824]
[211.27156067 775.20941162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[30 157]
[31 156]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[56 130]
[57 129]
[59 128]
[60 127]
[65 126]
[66 125]
[67 124]
[68 123]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[77 115]
[78 114]
[80 112]
[81 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
