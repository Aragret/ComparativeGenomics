%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[79.67340088 766.13726807]
[65.24597931 770.41931152]
[50.26036835 771.80407715]
[35.29257202 770.23840332]
[20.91791534 765.78247070]
[7.68892097 758.60748291]
[-3.88592386 748.98931885]
[-13.36171246 737.29766846]
[-20.37422180 723.98181152]
[-24.65390968 709.55371094]
[-26.03627396 694.56787109]
[-24.46818352 679.60034180]
[-20.00990868 665.22637939]
[-12.83281517 651.99859619]
[-3.21277189 640.42529297]
[8.48045349 630.95135498]
[21.79740334 623.94104004]
[36.22621155 619.66369629]
[51.21227264 618.28375244]
[52.77279663 603.36511230]
[54.33331680 588.44653320]
[55.89384079 573.52795410]
[57.45436478 558.60931396]
[42.36526871 553.35253906]
[28.95601463 544.64764404]
[18.00102997 532.99255371]
[10.13414192 519.05572510]
[5.81190538 503.63784790]
[5.28710508 487.62579346]
[8.59397507 471.94149780]
[15.54599953 457.48910522]
[25.74642181 445.10269165]
[38.61089325 435.49810791]
[53.40094376 429.23171997]
[69.26637268 426.66809082]
[70.38201904 411.70965576]
[71.49767303 396.75119019]
[72.61331940 381.79272461]
[73.72896576 366.83428955]
[74.84461212 351.87582397]
[59.62668228 346.39053345]
[46.55245209 336.84118652]
[36.68046570 323.99121094]
[30.81274414 308.87167358]
[29.42959595 292.69854736]
[32.65033722 276.77484131]
[40.22303391 262.38577271]
[51.54419327 250.69491577]
[65.70684814 242.65010071]
[81.57320404 238.90666199]
[82.24298859 223.92163086]
[82.91277313 208.93658447]
[83.58255768 193.95155334]
[73.37304688 183.16723633]
[73.83883667 167.96072388]
[85.21964264 157.32518005]
[85.88943481 142.34013367]
[76.05742645 153.66848755]
[61.69191742 157.98500061]
[47.24421692 153.95213318]
[37.19110489 142.81951904]
[34.64764404 128.03674316]
[40.40195465 114.18437195]
[52.67099762 105.55474091]
[67.65308380 104.82183075]
[80.70584106 112.21273041]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[90.51307678 50.99893570]
[75.55771637 49.84258652]
[64.75688171 39.43384171]
[63.04857254 24.53143692]
[71.21380615 11.94855022]
[85.51953888 7.43790960]
[99.42539215 13.06171799]
[106.57407379 26.25067902]
[110.76108551 11.84689713]
[114.94809723 -2.55688548]
[119.02776337 -16.99143791]
[122.99986267 -31.45596313]
[126.86416626 -45.94965363]
[130.62046814 -60.47171402]
[134.37677002 -74.99377441]
[138.13307190 -89.51583099]
[141.88937378 -104.03789520]
[145.64567566 -118.55995178]
[144.76498413 -127.65182495]
[149.56750488 -133.26943970]
[153.10717773 -147.84580994]
[156.21128845 -162.52111816]
[159.31539917 -177.19642639]
[162.41950989 -191.87171936]
[165.52362061 -206.54702759]
[151.76065063 -212.65228271]
[139.56800842 -221.48593140]
[129.47872925 -232.66180420]
[121.93386078 -245.69132996]
[117.26322174 -260.00491333]
[115.67101288 -274.97683716]
[117.22682190 -289.95260620]
[121.86264038 -304.27749634]
[129.37582397 -317.32531738]
[139.43791199 -328.52569580]
[151.60902405 -337.38894653]
[165.35711670 -343.52764893]
[180.08117676 -346.67343140]
[195.13751221 -346.68878174]
[209.86795044 -343.57299805]
[223.62852478 -337.46234131]
[235.81767273 -328.62390137]
[245.90257263 -317.44406128]
[253.44230652 -304.41156006]
[258.10729980 -290.09613037]
[259.69363403 -275.12356567]
[258.13192749 -260.14843750]
[253.49047852 -245.82536316]
[245.97216797 -232.78048706]
[235.90568542 -221.58409119]
[223.73106384 -212.72561646]
[209.98056030 -206.59231567]
[195.25527954 -203.45233154]
[180.19892883 -203.44291687]
[177.09481812 -188.76760864]
[173.99070740 -174.09231567]
[170.88659668 -159.41700745]
[167.78248596 -144.74169922]
[169.19676208 -142.32138062]
[169.73754883 -139.19502258]
[169.13108826 -135.69250488]
[167.22804260 -132.23664856]
[164.03202820 -129.29734802]
[160.16772461 -114.80364990]
[156.41142273 -100.28159332]
[152.65513611 -85.75952911]
[148.89883423 -71.23747253]
[145.14253235 -56.71541214]
[141.38623047 -42.19335556]
[142.75454712 -34.93047333]
[137.46438599 -27.48386574]
[133.49229431 -13.01934242]
[134.75233459 -5.73689175]
[129.35188293 1.63012588]
[125.16487122 16.03390694]
[120.97785950 30.43769073]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[100.87447357 143.00991821]
[100.20468140 157.99496460]
[110.59125519 169.60345459]
[109.69852448 184.79086304]
[98.56759644 194.62133789]
[97.89781189 209.60636902]
[97.22802734 224.59141541]
[96.55824280 239.57644653]
[109.82229614 243.67539978]
[121.70644379 250.83280945]
[131.51847839 260.62622070]
[138.68818665 272.47979736]
[142.80056763 285.69818115]
[143.61976624 299.50732422]
[141.10264587 313.09973145]
[135.40100098 325.68173218]
[126.85247040 336.51986694]
[115.96047211 344.98348999]
[103.36460114 350.58166504]
[89.80307007 352.99148560]
[88.68742371 367.94992065]
[87.57176971 382.90838623]
[86.45612335 397.86685181]
[85.34047699 412.82528687]
[84.22482300 427.78375244]
[97.68924713 431.86032104]
[109.99948120 438.65661621]
[120.61361694 447.87039185]
[129.06503296 459.09313965]
[134.98291016 471.82800293]
[138.10852051 485.51199341]
[138.30653381 499.54071045]
[135.57081604 513.29504395]
[130.02471924 526.16870117]
[121.91535187 537.59454346]
[111.60271454 547.07000732]
[99.54363251 554.17889404]
[86.27156067 558.60986328]
[72.37297058 560.16986084]
[70.81244659 575.08843994]
[69.25192261 590.00708008]
[67.69139862 604.92565918]
[66.13087463 619.84423828]
[80.50697327 624.29553223]
[93.73828888 631.46624756]
[105.31624603 641.08062744]
[114.79582214 652.76928711]
[121.81264496 666.08282471]
[126.09700012 680.50952148]
[127.48421478 695.49493408]
[125.92096710 710.46301270]
[121.46734619 724.83837891]
[114.29454041 738.06854248]
[104.67823792 749.64489746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 176]
[50 164]
[51 163]
[52 162]
[53 161]
[56 158]
[57 157]
[67 156]
[68 155]
[70 153]
[71 152]
[72 151]
[73 150]
[81 149]
[82 148]
[83 147]
[84 145]
[85 144]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[93 136]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
