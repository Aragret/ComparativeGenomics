%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[129.21615601 648.60675049]
[121.71762085 661.70916748]
[110.96134186 672.30187988]
[97.74549866 679.59875488]
[83.05080414 683.05828857]
[67.96770477 682.42382812]
[53.61545181 677.74243164]
[41.05909348 669.36145020]
[31.23038483 657.90289307]
[24.85868454 644.21697998]
[22.41681671 629.31933594]
[24.08598137 614.31549072]
[29.74231720 600.31872559]
[38.96608734 588.36779785]
[51.07282257 579.34948730]
[65.16413116 573.93310547]
[80.19433594 572.52044678]
[82.86013031 557.75921631]
[85.52592468 542.99798584]
[75.35509491 529.60424805]
[78.07167816 512.66510010]
[92.47688293 502.73989868]
[94.92260742 487.94061279]
[97.36833191 473.14135742]
[99.81406403 458.34207153]
[102.25978851 443.54281616]
[104.70551300 428.74353027]
[107.15124512 413.94427490]
[109.59696960 399.14498901]
[111.71159363 384.29479980]
[113.49406433 369.40109253]
[115.27652740 354.50735474]
[116.61476135 339.56719971]
[117.50757599 324.59378052]
[118.40039062 309.62036133]
[119.29320526 294.64697266]
[116.55340576 287.78289795]
[120.31242371 279.45779419]
[113.54315948 266.19030762]
[122.28543854 253.00381470]
[123.40109253 238.04536438]
[122.17411804 223.09562683]
[118.63444519 208.51925659]
[115.09477234 193.94288635]
[111.55509949 179.36650085]
[108.01542664 164.79013062]
[104.47575378 150.21376038]
[100.93608093 135.63737488]
[85.32682800 132.48995972]
[72.64499664 122.86051178]
[65.42071533 108.67021179]
[65.09529114 92.75012207]
[71.73365021 78.27645111]
[84.01137543 68.13680267]
[80.25507355 53.61474609]
[76.49877167 39.09268570]
[72.74247742 24.57062721]
[67.56375885 17.04608536]
[69.04006958 9.80437946]
[58.26474380 -1.78021967]
[62.78017426 -15.97388649]
[59.24050140 -30.55026245]
[55.70082855 -45.12663651]
[52.16115570 -59.70301437]
[41.38582993 -71.28761292]
[45.90125656 -85.48127747]
[42.36158752 -100.05765533]
[38.68481827 -85.51525116]
[30.74742508 -72.78742218]
[19.30595016 -63.08728409]
[5.45091963 -57.33940125]
[-9.49709225 -56.09162903]
[-24.11333656 -59.46289062]
[-37.00468445 -67.13185883]
[-46.94241714 -78.36758423]
[-52.97933197 -92.09914398]
[-54.54003143 -107.01773071]
[-51.47575378 -121.70140076]
[-44.07857132 -134.75059509]
[-33.05353546 -144.92156982]
[-19.45148087 -151.24487305]
[-4.56886959 -153.11779785]
[10.17578220 -150.36186218]
[23.37710953 -143.23971558]
[33.77684402 -132.43020630]
[40.38408661 -118.96253967]
[40.83069611 -133.95588684]
[41.27730179 -148.94923401]
[41.72390747 -163.94258118]
[42.17051315 -178.93594360]
[33.06838608 -194.94320679]
[42.86692429 -209.50190735]
[43.09025192 -224.50024414]
[30.67826462 -236.82752991]
[31.01535034 -253.97982788]
[43.40460587 -265.35281372]
[43.40460587 -280.35281372]
[43.40460587 -295.35281372]
[29.34741974 -301.13763428]
[18.57754707 -311.86508179]
[12.73731613 -325.89932251]
[12.71731949 -341.10025024]
[18.52060699 -355.14981079]
[29.26222038 -365.90557861]
[43.30413818 -371.72732544]
[58.50507355 -371.72732544]
[72.54699707 -365.90557861]
[83.28860474 -355.14981079]
[89.09189606 -341.10025024]
[89.07189941 -325.89932251]
[83.23166656 -311.86508179]
[72.46179199 -301.13763428]
[58.40460587 -295.35281372]
[58.40460587 -280.35281372]
[58.40460587 -265.35281372]
[68.70101166 -257.60598755]
[72.71543121 -245.15742493]
[68.76902771 -232.48318481]
[58.08858871 -224.27691650]
[57.86526108 -209.27857971]
[66.06268311 -200.38314819]
[65.99937439 -187.88595581]
[57.16386032 -178.48933411]
[56.71725464 -163.49598694]
[56.27064896 -148.50262451]
[55.82404327 -133.50927734]
[55.37743759 -118.51593018]
[56.93796158 -103.59732819]
[60.47763443 -89.02095032]
[70.99977875 -78.47895050]
[66.73753357 -63.24268341]
[70.27720642 -48.66630936]
[73.81687927 -34.08993530]
[77.35655212 -19.51355934]
[87.87869263 -8.97155952]
[83.61644745 6.26470661]
[87.26453400 20.81432724]
[91.02083588 35.33638763]
[94.77713776 49.85844421]
[98.53343201 64.38050842]
[112.19789886 66.50208282]
[124.02707672 73.66373444]
[132.24114990 84.78792572]
[135.60424805 98.20091248]
[133.61035156 111.88459015]
[126.55946350 123.78012085]
[115.51245880 132.09770203]
[119.05213165 146.67408752]
[122.59179688 161.25045776]
[126.13146973 175.82682800]
[129.67114258 190.40321350]
[133.21081543 204.97958374]
[136.75048828 219.55596924]
[140.16955566 204.95082092]
[147.35380554 191.78318787]
[157.78457642 181.00363159]
[170.70889282 173.39035034]
[185.19372559 169.49293518]
[200.19338989 169.59275818]
[214.62506104 173.68260193]
[227.44689941 181.46723938]
[237.73329163 192.38465881]
[244.74163818 205.64675903]
[247.96601868 220.29609680]
[247.17364502 235.27516174]
[242.42173767 249.50257874]
[234.05334473 261.95126343]
[222.67256165 271.72253418]
[209.10098267 278.11099243]
[194.31837463 280.65545654]
[179.39187622 279.17224121]
[165.39907837 273.76843262]
[153.35009766 264.83410645]
[144.11479187 253.01423645]
[138.35954285 239.16101074]
[137.24389648 254.11947632]
[143.93334961 268.45687866]
[135.27087402 280.57342529]
[134.26661682 295.53979492]
[133.37379456 310.51318359]
[132.48098755 325.48660278]
[131.58816528 340.45999146]
[133.66857910 344.27127075]
[134.35856628 348.15567017]
[133.80590820 351.66708374]
[132.28802490 354.45321655]
[130.17024231 356.28982544]
[128.38777161 371.18356323]
[126.60531616 386.07727051]
[128.66119385 390.87524414]
[128.67019653 395.51776123]
[127.03426361 399.25125122]
[124.39624023 401.59072876]
[121.95051575 416.39001465]
[119.50478363 431.18927002]
[117.05905914 445.98855591]
[114.61333466 460.78781128]
[112.16760254 475.58709717]
[109.72187805 490.38635254]
[107.27615356 505.18563843]
[116.32814789 515.15936279]
[117.95927429 528.33319092]
[111.79640198 539.87017822]
[100.28713989 545.66381836]
[97.62134552 560.42504883]
[94.95555115 575.18621826]
[108.54220581 581.76690674]
[119.84881592 591.77008057]
[128.03636169 604.45343018]
[132.49726868 618.87573242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 206]
[18 205]
[19 204]
[22 200]
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 189]
[31 188]
[32 187]
[33 182]
[34 181]
[35 180]
[36 179]
[38 178]
[40 176]
[41 175]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[54 140]
[55 139]
[56 138]
[57 137]
[59 136]
[61 134]
[62 133]
[63 132]
[64 131]
[66 129]
[67 128]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[92 120]
[93 119]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
