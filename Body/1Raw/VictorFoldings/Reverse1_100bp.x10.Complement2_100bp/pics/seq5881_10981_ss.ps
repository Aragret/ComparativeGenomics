%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[87.51776886 656.35803223]
[77.15368652 645.49304199]
[68.04778290 633.55377197]
[60.31057739 620.68524170]
[54.03600311 607.04364014]
[49.30022812 592.79461670]
[46.16073990 578.11102295]
[44.65564728 563.17126465]
[44.80321884 548.15655518]
[46.60166931 533.24920654]
[50.02915955 518.63018799]
[55.04409027 504.47695923]
[61.58557892 490.96133423]
[69.57421875 478.24737549]
[78.91304016 466.48941040]
[89.48867798 455.83020020]
[101.17274475 446.39907837]
[113.82341003 438.31057739]
[127.28711700 431.66287231]
[141.40040588 426.53668213]
[137.86073303 411.96029663]
[134.32106018 397.38394165]
[130.78138733 382.80755615]
[127.24172211 368.23117065]
[116.71958160 357.68917847]
[120.98182678 342.45291138]
[117.44215393 327.87652588]
[113.90248108 313.30017090]
[103.38033295 302.75814819]
[107.64258575 287.52188110]
[104.10291290 272.94552612]
[97.17115784 286.24780273]
[83.79617310 293.03823853]
[68.96650696 290.78414917]
[58.21324921 280.32626343]
[55.54710388 265.56509399]
[61.96247101 252.00622559]
[75.06658936 244.70675659]
[89.97193146 246.38922119]
[101.11977386 256.42709351]
[99.33730316 241.53338623]
[97.55484009 226.63966370]
[95.66154480 211.75962830]
[93.65753174 196.89410400]
[91.65351868 182.02856445]
[84.92648315 195.43554688]
[72.79349518 204.25544739]
[57.96509933 206.51788330]
[43.75399399 201.71742249]
[33.33497620 190.92649841]
[29.03568077 176.55581665]
[31.81658554 161.81585693]
[41.05642319 149.99954224]
[54.69099808 143.74667358]
[69.67430115 144.45414734]
[82.65903473 151.96391296]
[90.74437714 164.59831238]
[91.19098663 149.60496521]
[91.63758850 134.61161804]
[92.08419800 119.61826324]
[92.53079987 104.62491608]
[90.63629913 102.23736572]
[89.56865692 99.10772705]
[89.60440826 95.54090881]
[90.90355682 91.93973541]
[93.47678375 88.75988007]
[94.81501770 73.81969452]
[96.15325165 58.87950897]
[97.04606628 43.90610504]
[97.49266815 28.91275406]
[97.93927765 13.91940403]
[85.39804077 22.14845848]
[71.09811401 17.61943245]
[65.58087158 3.67095542]
[72.91342163 -9.41467571]
[87.69047546 -11.99121952]
[99.01828003 -2.16085720]
[100.57880402 -17.07946205]
[94.31919098 -31.60969925]
[103.33858490 -43.46295929]
[104.89910889 -58.38156509]
[106.45963287 -73.30017090]
[108.02015686 -88.21877289]
[109.58068085 -103.13737488]
[110.69632721 -118.09583282]
[111.36611176 -133.08087158]
[110.69632721 -148.06590271]
[108.69231415 -162.93144226]
[106.68830109 -177.79696655]
[104.68428802 -192.66249084]
[102.68027496 -207.52801514]
[87.76753998 -209.99819946]
[74.24617767 -216.75572205]
[63.31849289 -227.19972229]
[55.95617676 -240.40153503]
[52.81387711 -255.18725586]
[54.17100525 -270.24212646]
[59.90688705 -284.22753906]
[69.51148987 -295.89984131]
[82.13077545 -304.22119141]
[96.64265442 -308.45166016]
[111.75673676 -308.21505737]
[126.12908173 -303.53244019]
[138.48171997 -294.82015991]
[147.71626282 -282.85290527]
[153.01156616 -268.69485474]
[153.89680481 -253.60485840]
[150.29322815 -238.92474365]
[142.52128601 -225.95985413]
[131.27204895 -215.86302185]
[117.54579926 -209.53202820]
[119.54981232 -194.66650391]
[121.55382538 -179.80097961]
[123.55783844 -164.93545532]
[125.56185150 -150.06991577]
[131.93383789 -163.64924622]
[143.51179504 -173.18605042]
[158.06021118 -176.83897400]
[172.77000427 -173.90264893]
[184.80094910 -164.94406128]
[191.83006287 -151.69296265]
[192.50012207 -136.70793152]
[186.68176270 -122.88235474]
[175.49841309 -112.88571930]
[161.10939026 -108.64823151]
[146.29301453 -110.98807526]
[133.91007996 -119.45346832]
[126.35115051 -132.41108704]
[125.68136597 -117.42604828]
[127.47135162 -115.26871490]
[128.51463318 -112.27235413]
[128.48738098 -108.71782684]
[127.17327118 -104.99792480]
[124.49928284 -101.57685852]
[122.93875885 -86.65824890]
[121.37823486 -71.73964691]
[119.81771088 -56.82104111]
[118.25718689 -41.90243530]
[124.62842560 -28.43927765]
[115.49741364 -15.51893902]
[113.93688965 -0.60033429]
[112.93262482 14.36600971]
[112.48602295 29.35935974]
[112.03941345 44.35271072]
[113.86132050 46.48315430]
[114.94910431 49.46364975]
[114.97476959 53.01818848]
[113.71619415 56.75724030]
[111.09343719 60.21774292]
[109.75520325 75.15792847]
[108.41696930 90.09811401]
[107.52415466 105.07151794]
[107.07754517 120.06487274]
[106.63093567 135.05821228]
[106.18433380 150.05157471]
[105.73772430 165.04492188]
[106.51905060 180.02455139]
[108.52306366 194.89009094]
[110.52707672 209.75561523]
[114.77494812 217.84223938]
[112.44855499 224.85719299]
[114.23102570 239.75091553]
[116.01348877 254.64463806]
[118.67928314 269.40585327]
[122.21895599 283.98223877]
[132.99427795 295.56683350]
[128.47885132 309.76049805]
[132.01852417 324.33685303]
[135.55819702 338.91323853]
[146.33352661 350.49783325]
[141.81809998 364.69149780]
[145.35777283 379.26788330]
[148.89744568 393.84426880]
[152.43711853 408.42062378]
[155.97679138 422.99700928]
[170.86929321 421.07955933]
[185.88233948 420.81207275]
[200.83369446 422.19778442]
[215.54185486 425.21990967]
[229.82827759 429.84173584]
[243.51954651 436.00714111]
[256.44946289 443.64132690]
[268.46102905 452.65158081]
[279.40850830 462.92855835]
[289.15896606 474.34750366]
[297.59402466 486.76977539]
[304.61132812 500.04458618]
[310.12567139 514.01080322]
[314.07009888 528.49890137]
[316.39675903 543.33294678]
[317.07742310 558.33294678]
[316.10375977 573.31677246]
[313.48767090 588.10253906]
[309.26086426 602.51080322]
[303.47463989 616.36657715]
[296.19927979 629.50177002]
[287.52304077 641.75677490]
[277.55133057 652.98303223]
[266.40512085 663.04406738]
[254.21974182 671.81787109]
[241.14311218 679.19793701]
[227.33398438 685.09460449]
[212.95996094 689.43640137]
[198.19555664 692.17047119]
[183.21997070 693.26379395]
[168.21501160 692.70294189]
[153.36283875 690.49487305]
[138.84370422 686.66625977]
[124.83389282 681.26361084]
[111.50345612 674.35260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[26 169]
[27 168]
[28 167]
[30 165]
[31 164]
[40 163]
[41 162]
[42 161]
[43 159]
[44 158]
[45 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 152]
[66 151]
[67 150]
[68 149]
[69 144]
[70 143]
[71 142]
[77 141]
[78 140]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[85 129]
[86 128]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
