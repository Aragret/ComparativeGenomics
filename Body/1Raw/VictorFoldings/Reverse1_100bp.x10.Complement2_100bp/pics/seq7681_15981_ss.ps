%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[124.92907715 456.82644653]
[122.53189087 442.00042725]
[121.93930054 426.99356079]
[123.15995789 412.02465820]
[126.17605591 397.31207275]
[130.94360352 383.07031250]
[137.39309692 369.50708008]
[145.43046570 356.82015991]
[154.93849182 345.19454956]
[165.77854919 334.79980469]
[177.79254150 325.78750610]
[190.80528259 318.28909302]
[184.93630981 304.48492432]
[179.06735229 290.68075562]
[165.20103455 285.36465454]
[159.05242920 271.44885254]
[164.72245789 256.94064331]
[158.85350037 243.13645935]
[152.98454285 229.33229065]
[147.11558533 215.52810669]
[140.93981934 201.85844421]
[134.46031189 188.33009338]
[127.98081970 174.80174255]
[113.89096069 170.11010742]
[107.12711334 156.48275757]
[112.14366150 141.73582458]
[97.15174866 132.61390686]
[98.71959686 114.26660156]
[87.17493439 106.37911224]
[87.85002899 92.41358948]
[81.16983032 78.98321533]
[74.48963928 65.55284119]
[67.80944824 52.12246323]
[57.31503677 49.26308441]
[50.27175522 41.26480865]
[48.82381439 30.92789268]
[53.21021652 21.69900131]
[46.93285370 8.07568455]
[40.65549469 -5.54763174]
[34.37813568 -19.17094803]
[27.69793892 -32.60132217]
[20.62083435 -45.82685089]
[13.54372883 -59.05237961]
[6.46662283 -72.27790833]
[-0.61048239 -85.50343323]
[-8.07822323 -98.51239014]
[-15.92997932 -111.29322815]
[-23.78173447 -124.07407379]
[-31.63348961 -136.85491943]
[-45.44981003 -144.56333923]
[-45.51929092 -159.45779419]
[-53.37104416 -172.23863220]
[-61.22280121 -185.01947021]
[-69.07455444 -197.80030823]
[-81.41537476 -201.55090332]
[-87.69200134 -212.35774231]
[-85.01126099 -224.15351868]
[-92.67185974 -237.04983521]
[-100.33245850 -249.94616699]
[-113.99467468 -243.71792603]
[-128.25021362 -239.00337219]
[-142.93191528 -235.85775757]
[-157.86766052 -234.31799316]
[-172.88232422 -234.40213013]
[-187.79986572 -236.10916138]
[-202.44540405 -239.41908264]
[-216.64720154 -244.29309082]
[-230.23876953 -250.67404175]
[-243.06074524 -258.48712158]
[-254.96281433 -267.64071655]
[-265.80538940 -278.02749634]
[-275.46139526 -289.52572632]
[-283.81759644 -302.00054932]
[-290.77600098 -315.30572510]
[-296.25506592 -329.28524780]
[-300.19052124 -343.77520752]
[-302.53625488 -358.60574341]
[-303.26473999 -373.60296631]
[-302.36743164 -388.59103394]
[-299.85488892 -403.39422607]
[-295.75650024 -417.83895874]
[-290.12039185 -431.75592041]
[-283.01260376 -444.98190308]
[-274.51647949 -457.36184692]
[-264.73162842 -468.75061035]
[-253.77276611 -479.01464844]
[-241.76840210 -488.03366089]
[-228.85926819 -495.70187378]
[-215.19671631 -501.92938232]
[-200.94093323 -506.64315796]
[-186.25904846 -509.78796387]
[-171.32322693 -511.32693481]
[-156.30856323 -511.24200439]
[-141.39111328 -509.53417969]
[-126.74575806 -506.22344971]
[-112.54421234 -501.34866333]
[-98.95298767 -494.96701050]
[-86.13143158 -487.15322876]
[-74.22986603 -477.99899292]
[-63.38783646 -467.61163330]
[-53.73245621 -456.11288452]
[-45.37693405 -443.63760376]
[-38.41923141 -430.33206177]
[-32.94092178 -416.35223389]
[-29.00623703 -401.86206055]
[-26.66131020 -387.03140259]
[-25.93363571 -372.03414917]
[-26.83174133 -357.04611206]
[-29.34510040 -342.24307251]
[-33.44424438 -327.79855347]
[-39.08111191 -313.88189697]
[-46.18961334 -300.65631104]
[-54.68640900 -288.27682495]
[-64.47187042 -276.88858032]
[-75.43127441 -266.62512207]
[-87.43613434 -257.60675049]
[-79.77553558 -244.71043396]
[-72.11493683 -231.81411743]
[-56.36898422 -224.06608582]
[-56.29371262 -205.65206909]
[-48.44195938 -192.87123108]
[-40.59020233 -180.09037781]
[-32.73844910 -167.30953979]
[-19.48373795 -160.51528931]
[-18.85264778 -144.70666504]
[-11.00089169 -131.92582703]
[-3.14913654 -119.14498138]
[4.70261908 -106.36414337]
[7.39463806 -105.58236694]
[9.93918705 -103.68714142]
[11.91061974 -100.72929382]
[12.90952969 -96.91265869]
[12.61504555 -92.58053589]
[19.69215012 -79.35501099]
[26.76925659 -66.12948608]
[33.84636307 -52.90395737]
[40.92346573 -39.67842865]
[43.56418228 -38.73780823]
[45.99141312 -36.69448853]
[47.78329468 -33.62454224]
[48.55326462 -29.75521851]
[48.00144958 -25.44830894]
[54.27881241 -11.82499218]
[60.55617142 1.79832363]
[66.83353424 15.42163944]
[83.39640808 25.39952469]
[81.23982239 45.44226837]
[87.92001343 58.87264633]
[94.60021210 72.30302429]
[101.28040314 85.73339844]
[112.82506561 93.62088776]
[112.14997101 107.58641052]
[124.10697174 112.42303467]
[129.39442444 123.74675751]
[125.67201233 135.25631714]
[140.30683899 140.59109497]
[146.68524170 154.40306091]
[141.50917053 168.32225037]
[147.98866272 181.85060120]
[154.46815491 195.37893677]
[158.77575684 198.32711792]
[161.27210999 202.24137878]
[161.89254761 206.27005005]
[160.91975403 209.65914917]
[166.78872681 223.46331787]
[172.65768433 237.26750183]
[178.52664185 251.07167053]
[192.90866089 257.05459595]
[198.66397095 271.13760376]
[192.87153625 284.81179810]
[198.74049377 298.61596680]
[204.60945129 312.42013550]
[219.03794861 308.25170898]
[233.86369324 305.85284424]
[248.87049866 305.25857544]
[263.83950806 306.47753906]
[278.55245972 309.49200439]
[292.79473877 314.25793457]
[306.35870361 320.70590210]
[319.04653931 328.74185181]
[330.67321777 338.24859619]
[341.06915283 349.08749390]
[350.08279419 361.10046387]
[357.58267212 374.11236572]
[363.45941162 387.93341064]
[367.62731934 402.36203003]
[370.02563477 417.18789673]
[370.61932373 432.19470215]
[369.39981079 447.16369629]
[366.38479614 461.87649536]
[361.61831665 476.11862183]
[355.16983032 489.68234253]
[347.13342285 502.36987305]
[337.62625122 513.99615479]
[326.78698730 524.39172363]
[314.77365112 533.40490723]
[301.76147461 540.90429688]
[287.94021606 546.78051758]
[273.51141357 550.94787598]
[258.68548584 553.34564209]
[243.67863464 553.93878174]
[228.70971680 552.71868896]
[213.99700928 549.70312500]
[199.75506592 544.93615723]
[186.19158936 538.48718262]
[173.50434875 530.45025635]
[161.87840271 520.94262695]
[151.48326111 510.10299683]
[142.47052002 498.08932495]
[134.97161865 485.07687378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 172]
[13 171]
[14 170]
[17 167]
[18 166]
[19 165]
[20 164]
[21 160]
[22 159]
[23 158]
[26 155]
[28 152]
[30 150]
[31 149]
[32 148]
[33 147]
[37 145]
[38 144]
[39 143]
[40 142]
[41 137]
[42 136]
[43 135]
[44 134]
[45 133]
[46 128]
[47 127]
[48 126]
[49 125]
[51 123]
[52 122]
[53 121]
[54 120]
[57 118]
[58 117]
[59 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
