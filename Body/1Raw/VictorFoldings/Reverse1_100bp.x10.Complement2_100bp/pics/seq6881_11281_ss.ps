%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[173.73526001 474.46234131]
[184.32730103 463.69268799]
[197.52511597 456.34460449]
[194.20286560 441.71713257]
[190.88059998 427.08969116]
[187.55834961 412.46221924]
[184.01867676 397.88583374]
[180.26237488 383.36380005]
[176.50607300 368.84173584]
[172.74977112 354.31967163]
[168.99346924 339.79760742]
[165.23716736 325.27554321]
[160.51881409 319.58706665]
[161.53475952 310.50930786]
[157.99508667 295.93292236]
[154.45541382 281.35653687]
[150.91574097 266.78018188]
[147.37606812 252.20379639]
[143.83639526 237.62742615]
[140.29672241 223.05105591]
[136.75704956 208.47467041]
[131.93106079 194.27221680]
[125.85722351 180.55694580]
[119.78338623 166.84169006]
[113.60762024 153.17201233]
[107.33026123 139.54870605]
[99.76613617 152.50184631]
[84.94559479 154.81517029]
[73.79377747 144.78335571]
[74.53140259 129.80151367]
[86.61470795 120.91367340]
[101.13507080 124.67057037]
[95.88835144 110.61810303]
[91.27254486 124.89025116]
[79.74117279 134.48333740]
[64.86735535 136.42485046]
[51.25989914 130.11317444]
[43.13523483 117.50405884]
[43.01086807 102.50457001]
[50.92534256 89.76247406]
[64.42626953 83.22603607]
[79.33023834 84.92064667]
[91.01924133 94.32142639]
[87.69698334 79.69396973]
[74.87633514 66.47608185]
[80.71687317 49.92751694]
[77.17720032 35.35114288]
[73.63752747 20.77476692]
[69.88122559 6.25270844]
[65.90913391 -8.21181583]
[61.93703461 -22.67634010]
[57.96493912 -37.14086151]
[53.99283981 -51.60538864]
[42.87737656 -62.86402893]
[46.96820450 -77.18584442]
[42.99610901 -91.65036774]
[39.02401352 -106.11489105]
[35.05191422 -120.57941437]
[30.86490440 -134.98320007]
[19.41915512 -145.90589905]
[23.08175659 -160.34317017]
[18.68075752 -174.68301392]
[14.27975941 -189.02285767]
[9.87876129 -203.36270142]
[5.47776365 -217.70254517]
[-7.06879759 -222.60136414]
[-14.39615822 -233.67025757]
[-14.01611519 -246.74456787]
[-6.29137897 -257.05755615]
[-10.47839069 -271.46133423]
[-14.66540146 -285.86514282]
[-18.85241318 -300.26892090]
[-23.03942490 -314.67269897]
[-27.22643471 -329.07647705]
[-31.41344643 -343.48025513]
[-35.60045624 -357.88403320]
[-50.50402832 -355.93878174]
[-65.52987671 -356.29144287]
[-80.32576752 -358.93377686]
[-94.54487610 -363.80383301]
[-107.85388184 -370.78744507]
[-119.94080353 -379.72091675]
[-130.52229309 -390.39480591]
[-139.35032654 -402.55895996]
[-146.21795654 -415.92819214]
[-150.96417236 -430.18908691]
[-153.47775269 -445.00741577]
[-153.69975281 -460.03576660]
[-151.62496948 -474.92184448]
[-147.30204773 -489.31674194]
[-140.83232117 -502.88299561]
[-132.36744690 -515.30255127]
[-122.10584259 -526.28436279]
[-110.28807831 -535.57098389]
[-97.19116211 -542.94464111]
[-83.12210846 -548.23260498]
[-68.41071320 -551.31079102]
[-53.40184021 -552.10711670]
[-38.44731522 -550.60296631]
[-23.89769363 -546.83343506]
[-10.09403896 -540.88708496]
[2.64007115 -532.90313721]
[14.00613022 -523.06884766]
[23.73770332 -511.61474609]
[31.60666466 -498.80929565]
[37.42855835 -484.95266724]
[41.06690979 -470.36968994]
[42.43643188 -455.40225220]
[41.50501633 -440.40115356]
[38.29450226 -425.71804810]
[32.88014603 -411.69717407]
[25.38886833 -398.66717529]
[15.99627686 -386.93347168]
[4.92254496 -376.77114868]
[-7.57274151 -368.41839600]
[-21.19667625 -362.07104492]
[-17.00966454 -347.66726685]
[-12.82265282 -333.26348877]
[-8.63564205 -318.85971069]
[-4.44863081 -304.45593262]
[-0.26161948 -290.05215454]
[3.92539167 -275.64834595]
[8.11240292 -261.24456787]
[23.18380547 -253.78189087]
[28.29528236 -237.40545654]
[19.81760979 -222.10354614]
[24.21860886 -207.76370239]
[28.61960602 -193.42385864]
[33.02060318 -179.08401489]
[37.42160416 -164.74415588]
[48.55256271 -154.84713745]
[45.20475006 -139.38420105]
[48.92941666 -136.39489746]
[50.81576920 -131.03404236]
[49.51644135 -124.55151367]
[53.48853683 -110.08699036]
[57.46063232 -95.62246704]
[61.43272781 -81.15794373]
[72.26408386 -70.93389893]
[68.45736694 -55.57748413]
[72.42945862 -41.11296082]
[76.40155792 -26.64843559]
[80.37365723 -12.18391132]
[84.34574890 2.28061223]
[87.97975922 5.37948227]
[89.70566559 10.79411888]
[88.21390533 17.23509598]
[91.75357819 31.81147003]
[95.29325104 46.38784790]
[105.45707703 52.94704819]
[108.52532959 65.06189728]
[102.32444000 76.37171173]
[105.64669800 90.99916840]
[109.94082642 105.37138367]
[115.18754578 119.42385101]
[120.95357513 133.27133179]
[127.23093414 146.89465332]
[133.66447449 153.37905884]
[133.49865723 160.76785278]
[139.57249451 174.48312378]
[145.64633179 188.19837952]
[147.97457886 173.38017273]
[156.43029785 160.99063110]
[169.38078308 153.42195129]
[184.32551575 152.13555908]
[198.37890625 157.37982178]
[208.82746887 168.14215088]
[213.65371704 182.34451294]
[211.92582703 197.24465942]
[203.97738647 209.96560669]
[191.34313965 218.05111694]
[176.46253967 219.94004822]
[162.20881653 215.26762390]
[151.33343506 204.93499756]
[154.87310791 219.51138306]
[158.41278076 234.08775330]
[161.95245361 248.66412354]
[165.49212646 263.24050903]
[169.03179932 277.81689453]
[172.57147217 292.39324951]
[176.11114502 306.96963501]
[179.75923157 321.51925659]
[183.51553345 336.04132080]
[187.27182007 350.56335449]
[191.02812195 365.08541870]
[194.78442383 379.60748291]
[198.54072571 394.12954712]
[202.89491272 399.10473633]
[203.92785645 404.69314575]
[202.18580627 409.13995361]
[205.50805664 423.76742554]
[208.83032227 438.39489746]
[212.15258789 453.02233887]
[227.22967529 453.94848633]
[241.43466187 459.08612061]
[253.61598206 468.01876831]
[262.78616333 480.02227783]
[268.20181274 494.12359619]
[269.42391968 509.17959595]
[266.35339355 523.96978760]
[259.23916626 537.29510498]
[248.65795898 548.07537842]
[235.46752930 555.43670654]
[220.73716736 558.78234863]
[205.66101074 557.84106445]
[191.46119690 552.68914795]
[179.28886414 543.74426270]
[170.13075256 531.73156738]
[164.72926331 517.62481689]
[163.52227783 502.56756592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 193]
[4 192]
[5 191]
[6 190]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 161]
[23 160]
[24 159]
[25 157]
[26 156]
[32 155]
[33 154]
[43 153]
[44 152]
[46 149]
[47 148]
[48 147]
[49 144]
[50 143]
[51 142]
[52 141]
[53 140]
[55 138]
[56 137]
[57 136]
[58 135]
[59 132]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
