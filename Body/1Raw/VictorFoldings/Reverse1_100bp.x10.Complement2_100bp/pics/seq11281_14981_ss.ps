%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[156.27638245 714.14520264]
[145.77674866 703.41760254]
[136.31173706 691.76690674]
[127.96209717 679.29260254]
[120.79907227 666.10113525]
[114.88378143 652.30493164]
[110.26667786 638.02185059]
[106.98716736 623.37365723]
[105.07322693 608.48535156]
[104.54118347 593.48394775]
[105.39557648 578.49749756]
[107.62911987 563.65374756]
[111.22275543 549.07946777]
[116.14582062 534.89892578]
[122.35631561 521.23309326]
[129.80125427 508.19863892]
[138.41711426 495.90667725]
[148.13038635 484.46218872]
[158.85820007 473.96270752]
[170.50903320 464.49789429]
[182.98347473 456.14846802]
[196.17509460 448.98565674]
[209.97134399 443.07058716]
[205.35734558 428.79785156]
[200.74333191 414.52511597]
[196.12931824 400.25241089]
[191.51530457 385.97967529]
[186.90130615 371.70693970]
[182.28729248 357.43420410]
[177.67327881 343.16146851]
[162.38636780 336.15081787]
[156.78956604 319.93383789]
[164.80789185 304.38629150]
[159.98188782 290.18383789]
[148.56120300 280.62261963]
[151.44712830 265.06686401]
[146.62113953 250.86439514]
[135.20043945 241.30317688]
[138.08638000 225.74740601]
[133.26037598 211.54495239]
[121.83968353 201.98373413]
[124.72561646 186.42796326]
[119.89962006 172.22550964]
[115.07362366 158.02305603]
[109.82690430 143.97058105]
[104.16412354 130.08055115]
[98.50133514 116.19052124]
[88.05809784 111.03494263]
[83.74172211 100.21781921]
[87.76675415 89.28894043]
[82.31140137 75.31613922]
[76.85604095 61.34334564]
[62.21648026 50.17353058]
[65.53756714 32.94166183]
[59.87478256 19.05163383]
[57.92189026 33.92396545]
[50.79240799 47.12133026]
[39.42433929 56.90739059]
[25.31334686 61.99462128]
[10.31597710 61.71371078]
[-3.59460855 56.10161591]
[-14.58823299 45.89670563]
[-21.21849632 32.44160843]
[-22.61307335 17.50657654]
[-18.58848381 3.05657125]
[-9.67423153 -9.00726318]
[2.95686030 -17.09772110]
[17.64295578 -20.15036392]
[32.45184326 -17.76356316]
[45.43516159 -10.25134373]
[54.88587189 1.40002215]
[52.44014359 -13.39924908]
[49.99441528 -28.19851875]
[47.54869080 -42.99779129]
[43.06193161 -50.95434952]
[45.17842865 -58.03546906]
[40.81063080 -66.05794525]
[43.03232193 -73.10676575]
[41.02830505 -87.97229767]
[39.02429199 -102.83782959]
[37.02027893 -117.70335388]
[32.77241135 -125.78997040]
[35.09879684 -132.80493164]
[33.31633377 -147.69865417]
[30.18629646 -151.87596130]
[29.08201599 -156.38528442]
[29.79072762 -160.39935303]
[31.80217743 -163.29527283]
[30.68652916 -178.25373840]
[29.57088089 -193.21218872]
[28.45523071 -208.17063904]
[13.60740948 -210.81506348]
[-0.11595555 -217.06967163]
[-11.85220242 -226.54127502]
[-20.86358070 -238.63449097]
[-26.58362770 -252.58912659]
[-28.65277481 -267.52798462]
[-26.94095612 -282.51199341]
[-21.55577660 -296.59924316]
[-12.83575344 -308.90420532]
[-1.32903492 -318.65338135]
[12.24105740 -325.23391724]
[27.02149582 -328.23214722]
[42.08317184 -327.45962524]
[56.47929001 -322.96490479]
[69.30490112 -315.03051758]
[79.75378418 -304.15524292]
[87.16909790 -291.02267456]
[91.08472443 -276.45840454]
[91.25451660 -261.37786865]
[87.66780090 -246.72911072]
[80.55004883 -233.43293762]
[70.34867096 -222.32514954]
[57.70495605 -214.10400391]
[43.41368484 -209.28628540]
[44.52933502 -194.32783508]
[45.64498138 -179.36938477]
[46.76063156 -164.41093445]
[48.21004868 -149.48112488]
[49.99251556 -134.58740234]
[51.88580704 -119.70736694]
[53.88982010 -104.84184265]
[55.89383698 -89.97631073]
[57.89785004 -75.11078644]
[60.01247406 -60.26058578]
[62.34796143 -45.44351959]
[64.79368591 -30.64424706]
[67.23941803 -15.84497643]
[69.68514252 -1.04570520]
[73.76480865 13.38884735]
[79.42759705 27.27887535]
[90.45197296 32.25779343]
[95.28340912 43.78345871]
[90.82884216 55.88798904]
[96.28419495 69.86078644]
[101.73955536 83.83358002]
[115.10182190 93.97389984]
[112.39135742 110.52774048]
[118.05414581 124.41776276]
[123.71693420 138.30778503]
[127.23957825 140.84648132]
[129.53979492 144.05171204]
[130.55816650 147.45733643]
[130.39273071 150.62582397]
[129.27607727 153.19705200]
[134.10208130 167.39950562]
[138.92807007 181.60195923]
[150.69395447 192.17903137]
[147.46282959 206.71894836]
[152.28883362 220.92140198]
[164.05471802 231.49848938]
[160.82359314 246.03839111]
[165.64958191 260.24084473]
[177.41546631 270.81793213]
[174.18434143 285.35784912]
[179.01034546 299.56030273]
[191.69720459 304.08337402]
[199.35087585 314.92919922]
[199.36027527 328.00903320]
[191.94601440 338.54745483]
[196.56002808 352.82019043]
[201.17404175 367.09292603]
[205.78804016 381.36566162]
[210.40205383 395.63839722]
[215.01606750 409.91113281]
[219.63006592 424.18386841]
[224.24407959 438.45657349]
[238.89210510 435.17636108]
[253.78030396 433.26165771]
[268.78167725 432.72888184]
[283.76818848 433.58251953]
[298.61203003 435.81530762]
[313.18652344 439.40823364]
[327.36730957 444.33056641]
[341.03341675 450.54037476]
[354.06826782 457.98468018]
[366.36065674 466.59991455]
[377.80563354 476.31262207]
[388.30563354 487.03991699]
[397.77102661 498.69027710]
[406.12109375 511.16427612]
[413.28454590 524.35552979]
[419.20031738 538.15148926]
[423.81790161 552.43444824]
[427.09786987 567.08251953]
[429.01232910 581.97076416]
[429.54486084 596.97216797]
[428.69097900 611.95867920]
[426.45791626 626.80242920]
[422.86477661 641.37689209]
[417.94216919 655.55761719]
[411.73214722 669.22363281]
[404.28762817 682.25836182]
[395.67218018 694.55053711]
[385.95928955 705.99542236]
[375.23184204 716.49523926]
[363.58132935 725.96044922]
[351.10714722 734.31024170]
[337.91577148 741.47351074]
[324.11972046 747.38903809]
[309.83670044 752.00634766]
[295.18856812 755.28613281]
[280.30029297 757.20031738]
[265.29891968 757.73260498]
[250.31240845 756.87847900]
[235.46865845 754.64514160]
[220.89428711 751.05175781]
[206.71365356 746.12896729]
[193.04774475 739.91870117]
[180.01313782 732.47393799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[33 156]
[34 155]
[36 153]
[37 152]
[39 150]
[40 149]
[42 147]
[43 146]
[44 145]
[45 140]
[46 139]
[47 138]
[50 136]
[51 135]
[52 134]
[54 131]
[55 130]
[71 129]
[72 128]
[73 127]
[74 126]
[76 125]
[78 124]
[79 123]
[80 122]
[81 121]
[83 120]
[84 119]
[88 118]
[89 117]
[90 116]
[91 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
