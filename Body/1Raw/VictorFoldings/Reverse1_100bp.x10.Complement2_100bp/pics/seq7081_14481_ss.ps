%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[93.98453522 695.95239258]
[81.08322906 687.95733643]
[71.94438934 675.83935547]
[67.80397034 661.23724365]
[69.22192383 646.12585449]
[76.00648499 632.54888916]
[87.24009705 622.34252930]
[101.40350342 616.88702393]
[101.40350342 601.88702393]
[101.40350342 586.88702393]
[101.40350342 571.88702393]
[101.40350342 556.88702393]
[86.67131805 551.04846191]
[75.27996826 539.97662354]
[68.99437714 525.34564209]
[68.80419159 509.38418579]
[74.76811218 494.53604126]
[86.00035858 483.08584595]
[100.80211639 476.80761719]
[100.57878876 461.80926514]
[100.35546112 446.81091309]
[100.13213348 431.81259155]
[99.90880585 416.81423950]
[99.35060120 401.82464600]
[98.45777893 386.85122681]
[89.62145233 378.59014893]
[88.75508881 366.12286377]
[96.86724091 356.09509277]
[96.19745636 341.11007690]
[95.52767181 326.12503052]
[87.22978210 313.75592041]
[94.34315491 299.62402344]
[93.67337036 284.63900757]
[82.54244232 274.80853271]
[81.64971924 259.62112427]
[92.03628540 248.01263428]
[91.36650085 233.02758789]
[90.69671631 218.04255676]
[90.02693176 203.05751038]
[78.13247681 212.19654846]
[63.53530502 208.74365234]
[56.99590302 195.24415588]
[63.33487701 181.64939880]
[77.87937164 177.98092651]
[89.90695190 186.94154358]
[90.35356140 171.94818115]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[85.54367828 73.55418396]
[93.65648651 61.06292343]
[94.10309601 46.06957245]
[94.54969788 31.07622337]
[94.99630737 16.08287430]
[95.44291687 1.08952439]
[95.55458069 -13.91005993]
[95.33125305 -28.90839767]
[95.10792542 -43.90673447]
[87.16601562 -57.59017944]
[94.71296692 -70.43123627]
[94.04318237 -85.41627502]
[92.92753601 -100.37473297]
[91.81188965 -115.33318329]
[76.86418152 -117.00720978]
[62.48244858 -121.39831543]
[49.15604401 -128.35556030]
[37.33815384 -137.64071655]
[27.43035316 -148.93637085]
[19.76896858 -161.85690308]
[14.61366081 -175.96150208]
[12.13862896 -190.76931763]
[12.42671967 -205.77578735]
[15.46665478 -220.46989441]
[21.15346909 -234.35147095]
[29.29212952 -246.94831848]
[39.60422897 -257.83221436]
[51.73750687 -266.63351440]
[65.27787781 -273.05364990]
[79.76356506 -276.87530518]
[78.64791870 -291.83377075]
[77.53227234 -306.79220581]
[76.41661835 -321.75067139]
[75.30097198 -336.70910645]
[74.18532562 -351.66757202]
[73.06967163 -366.62603760]
[71.95402527 -381.58447266]
[70.83837891 -396.54293823]
[69.72272491 -411.50137329]
[60.98044968 -424.68786621]
[67.74971008 -437.95535278]
[53.01044083 -441.30877686]
[39.91526413 -448.85913086]
[29.62859726 -459.93502808]
[23.06512070 -473.55166626]
[20.80845261 -488.49819946]
[23.05925751 -503.44561768]
[29.61739349 -517.06481934]
[39.89971542 -528.14471436]
[52.99192810 -535.70025635]
[67.72988129 -539.05944824]
[82.80307770 -537.92364502]
[96.87123108 -532.39385986]
[108.68340302 -522.96179199]
[117.18927002 -510.46612549]
[121.63249207 -496.01797485]
[121.61797333 -480.90203857]
[117.14701843 -466.46243286]
[108.61717224 -453.98312378]
[96.78691101 -444.57376099]
[82.70816040 -439.07101440]
[91.37064362 -426.95446777]
[84.68118286 -412.61703491]
[85.79682922 -397.65856934]
[86.91247559 -382.70013428]
[88.02812958 -367.74166870]
[89.14377594 -352.78323364]
[90.25942230 -337.82476807]
[91.37507629 -322.86630249]
[92.49072266 -307.90786743]
[93.60636902 -292.94940186]
[94.72202301 -277.99096680]
[109.61434937 -276.36041260]
[123.95728302 -272.01989746]
[137.26191711 -265.11584473]
[149.07446289 -255.88206482]
[158.99169922 -244.63188171]
[166.67480469 -231.74746704]
[171.86085510 -217.66690063]
[174.37182617 -202.86917114]
[174.12078857 -187.85804749]
[171.11482239 -173.14474487]
[165.45483398 -159.23068237]
[157.33226013 -146.59025574]
[147.02249146 -135.65475464]
[134.87557983 -126.79762268]
[121.30434418 -120.32169342]
[106.77033997 -116.44882965]
[107.88599396 -101.49037933]
[109.00164032 -86.53192902]
[111.03530121 -84.60258484]
[112.42725372 -81.75143433]
[112.82257843 -78.21884918]
[111.95982361 -74.36914825]
[109.71131134 -70.65456390]
[117.63723755 -58.04390335]
[110.10626221 -44.13006210]
[110.32958984 -29.13172531]
[110.55291748 -14.13338757]
[112.81470490 -11.42845821]
[113.87870789 -7.49362040]
[113.18113708 -2.90377450]
[110.43626404 1.53613031]
[109.98965454 16.52947998]
[109.54305267 31.52283096]
[109.09644318 46.51618195]
[108.64984131 61.50952911]
[116.00476837 74.46152496]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[105.34690857 172.39479065]
[104.90029907 187.38813782]
[105.01197052 202.38772583]
[105.68175507 217.37277222]
[106.35153961 232.35780334]
[107.02132416 247.34284973]
[118.40213013 257.97839355]
[118.86791992 273.18490601]
[108.65840912 283.96920776]
[109.32819366 298.95425415]
[117.67398834 312.39517212]
[110.51271057 325.45523071]
[111.18249512 340.44027710]
[111.85227966 355.42532349]
[122.11975861 370.71127319]
[113.43119049 385.95843506]
[114.32400513 400.93182373]
[117.19985199 405.28802490]
[118.03377533 409.85507202]
[117.08739471 413.81985474]
[114.90715027 416.59091187]
[115.13047791 431.58926392]
[115.35380554 446.58758545]
[115.57713318 461.58593750]
[115.80046082 476.58428955]
[129.18649292 481.44894409]
[140.08515930 490.57147217]
[147.20036316 502.84042358]
[149.69506836 516.77178955]
[147.28968811 530.68853760]
[140.29324341 542.92248535]
[129.56384277 552.01416016]
[116.40350342 556.88702393]
[116.40350342 571.88702393]
[116.40350342 586.88702393]
[116.40350342 601.88702393]
[116.40350342 616.88702393]
[130.56692505 622.34252930]
[141.80053711 632.54888916]
[148.58509827 646.12585449]
[150.00303650 661.23724365]
[145.86262512 675.83935547]
[136.72378540 687.95733643]
[123.82247925 695.95239258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 183]
[25 182]
[28 180]
[29 179]
[30 178]
[32 176]
[33 175]
[36 172]
[37 171]
[38 170]
[39 169]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[52 161]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 151]
[60 150]
[61 149]
[63 147]
[64 142]
[65 141]
[66 140]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
