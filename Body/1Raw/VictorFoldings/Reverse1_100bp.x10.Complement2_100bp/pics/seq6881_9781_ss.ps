%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[123.08854675 651.29125977]
[111.62735748 661.00488281]
[98.95021057 669.06738281]
[85.29326630 675.32849121]
[70.91094208 679.67163086]
[56.07118607 682.01580811]
[41.05044174 682.31744385]
[26.12853622 680.57086182]
[11.58346176 676.80859375]
[-2.31381869 671.10076904]
[-15.30440807 663.55364990]
[-27.14629745 654.30792236]
[-37.61888123 643.53582764]
[-46.52706528 631.43798828]
[-53.70488739 618.23974609]
[-59.01863480 604.18707275]
[-62.36931229 589.54174805]
[-63.69450378 574.57647705]
[-62.96951675 559.57025146]
[-60.20786285 544.80249023]
[-55.46098328 530.54833984]
[-48.81731033 517.07330322]
[-40.40061951 504.62850952]
[-30.36769867 493.44577026]
[-18.90546036 483.73333740]
[-6.22743845 475.67224121]
[7.43018341 469.41259766]
[21.81297302 465.07104492]
[36.65298462 462.72845459]
[51.67376328 462.42843628]
[66.59547424 464.17666626]
[70.35177612 449.65460205]
[74.10807800 435.13253784]
[77.75616455 420.58291626]
[81.29583740 406.00653076]
[84.83551025 391.43017578]
[88.37518311 376.85379028]
[91.91485596 362.27740479]
[94.36058044 347.47814941]
[95.69882202 332.53796387]
[97.03705597 317.59777832]
[98.37528992 302.65759277]
[99.71352386 287.71740723]
[101.05175781 272.77722168]
[94.48078156 259.41040039]
[103.41841888 246.35556030]
[104.75665283 231.41537476]
[106.09488678 216.47518921]
[107.43312073 201.53500366]
[106.87490845 186.54539490]
[104.42918396 171.74612427]
[101.98345184 156.94685364]
[89.76322937 148.50874329]
[87.07209015 133.53501892]
[96.00561523 120.77452850]
[93.55989075 105.97525787]
[91.24151611 103.99671173]
[89.59181976 101.13087463]
[88.94081879 97.62378693]
[89.52302551 93.83996582]
[91.43653870 90.22452545]
[87.43132019 82.01501465]
[89.96554565 75.07243347]
[88.62731171 60.13224411]
[87.28907776 45.19205856]
[83.40652466 36.92382812]
[86.04383087 30.01974106]
[84.92818451 15.06128788]
[83.81253052 0.10283437]
[82.69688416 -14.85561943]
[81.58123779 -29.81407166]
[80.46558380 -44.77252579]
[79.34993744 -59.73097992]
[69.00379944 -65.58708954]
[62.83235550 -75.60778046]
[62.27024841 -87.24298096]
[67.34158325 -97.59658813]
[76.68258667 -104.14730835]
[76.01280212 -119.13234711]
[62.48600388 -126.27188110]
[54.40237045 -139.13856506]
[53.84806824 -154.22363281]
[60.87189484 -167.47209167]
[73.49903107 -175.37280273]
[72.82924652 -190.35783386]
[72.15945435 -205.34288025]
[71.48966980 -220.32791138]
[70.81988525 -235.31295776]
[70.15010071 -250.29798889]
[59.23006821 -258.18261719]
[54.90805054 -270.73376465]
[58.55005264 -283.29629517]
[68.61124420 -291.34628296]
[68.16463470 -306.33963013]
[67.71803284 -321.33297729]
[67.27142334 -336.32632446]
[52.87140656 -341.06082153]
[40.96102142 -350.43728638]
[32.97851181 -363.32354736]
[29.88779640 -378.16348267]
[32.06209946 -393.16506958]
[39.23886490 -406.51684570]
[50.55145645 -416.60650635]
[64.63382721 -422.21563721]
[79.78546906 -422.66696167]
[94.17673492 -417.90597534]
[106.06981659 -408.50753784]
[114.02857208 -395.60659790]
[117.09192657 -380.76101685]
[114.88998413 -365.76342773]
[107.68862915 -352.42489624]
[96.35746002 -342.35614014]
[82.26477051 -336.77294922]
[82.71138000 -321.77957153]
[83.15798187 -306.78622437]
[83.60459137 -291.79287720]
[96.32697296 -280.79379272]
[97.17459869 -263.65914917]
[85.13513947 -250.96777344]
[85.80492401 -235.98274231]
[86.47470856 -220.99769592]
[87.14449310 -206.01266479]
[87.81428528 -191.02761841]
[88.48406982 -176.04258728]
[101.76570892 -169.29992676]
[109.94349670 -156.73092651]
[110.73723602 -141.65655518]
[103.83374023 -128.11999512]
[90.99784088 -119.80213165]
[91.66762543 -104.81709290]
[105.89620972 -93.29914856]
[107.20978546 -74.71992493]
[94.30839539 -60.84662628]
[95.42404175 -45.88817596]
[96.53968811 -30.92972183]
[97.65533447 -15.97126770]
[98.77098846 -1.01281428]
[99.88663483 13.94563866]
[101.00228119 28.90409279]
[102.22925568 43.85382462]
[103.56749725 58.79401016]
[104.90573120 73.73419952]
[106.35514832 88.66400146]
[108.35916138 103.52953339]
[110.80488586 118.32880402]
[123.36888885 127.53660583]
[125.63838196 142.58001709]
[116.78272247 154.50112915]
[119.22845459 169.30039978]
[121.67417908 184.09967041]
[126.54605103 169.91287231]
[135.70832825 158.03631592]
[148.19410706 149.72335815]
[162.68571472 145.85125732]
[177.65383911 146.82867432]
[191.51884460 152.55245972]
[202.81752014 162.41854858]
[210.35751343 175.38575745]
[213.34307861 190.08563232]
[211.45916748 204.96685791]
[204.90458679 218.45898438]
[194.37104797 229.13815308]
[180.97018433 235.87734985]
[166.11622620 237.96540833]
[151.37673950 235.18193054]
[138.30723572 227.82069397]
[128.28694153 216.65853882]
[122.37330627 202.87322998]
[121.03507233 217.81341553]
[119.69683838 232.75360107]
[118.35860443 247.69378662]
[124.83385468 262.12921143]
[115.99194336 274.11544800]
[114.65370941 289.05563354]
[113.31547546 303.99581909]
[111.97723389 318.93600464]
[110.63899994 333.87619019]
[109.30076599 348.81637573]
[119.19537354 337.54266357]
[133.36917114 332.63311768]
[148.11715698 335.37112427]
[159.58425903 345.04095459]
[164.77299500 359.11492920]
[162.32705688 373.91415405]
[152.88577271 385.57015991]
[138.91709900 391.03607178]
[124.07241821 388.88314819]
[112.23207092 379.67410278]
[106.49123383 365.81707764]
[102.95156097 380.39346313]
[99.41188812 394.96984863]
[95.87221527 409.54620361]
[92.33254242 424.12258911]
[93.34848785 433.20034790]
[88.63014221 438.88882446]
[84.87384033 453.41088867]
[81.11753845 467.93295288]
[95.01543427 473.63928223]
[108.00684357 481.18496704]
[119.84973145 490.42938232]
[130.32348633 501.20037842]
[139.23297119 513.29730225]
[146.41223145 526.49468994]
[151.72749329 540.54681396]
[155.07975769 555.19183350]
[156.40657043 570.15686035]
[155.68321228 585.16320801]
[152.92314148 599.93127441]
[148.17781067 614.18597412]
[141.53559875 627.66168213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 197]
[32 196]
[33 195]
[34 193]
[35 192]
[36 191]
[37 190]
[38 189]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[46 171]
[47 170]
[48 169]
[49 168]
[50 150]
[51 149]
[52 148]
[55 145]
[56 144]
[61 143]
[63 142]
[64 141]
[65 140]
[67 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[78 130]
[79 129]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
