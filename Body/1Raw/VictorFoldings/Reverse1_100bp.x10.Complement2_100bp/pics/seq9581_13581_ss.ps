%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[107.43036652 622.77661133]
[94.36544800 630.60144043]
[79.24662781 632.42932129]
[64.69333649 627.94360352]
[53.22702026 617.92144775]
[46.83428574 604.09930420]
[46.62271118 588.87182617]
[52.62895584 574.87738037]
[63.81240463 564.54052734]
[78.23545074 559.65222168]
[79.57368469 544.71203613]
[80.91191864 529.77185059]
[82.25015259 514.83166504]
[75.67917633 501.46484375]
[84.61681366 488.41000366]
[85.95504761 473.46981812]
[87.29328156 458.52963257]
[88.63151550 443.58944702]
[89.96974945 428.64926147]
[90.75107574 413.66961670]
[90.97440338 398.67126465]
[91.19773102 383.67294312]
[91.42105865 368.67459106]
[91.64438629 353.67626953]
[91.86771393 338.67791748]
[81.68778992 330.77865601]
[77.85915375 318.27169800]
[81.99382019 305.65762329]
[92.79525757 297.61126709]
[85.44032288 284.65927124]
[93.58507538 271.09558105]
[94.03168488 256.10223389]
[94.47828674 241.10890198]
[94.92489624 226.11553955]
[94.92489624 211.11553955]
[94.47828674 196.12219238]
[94.03168488 181.12884521]
[85.44522858 172.60832214]
[84.95044708 160.12075806]
[93.35756683 150.33898926]
[93.13423920 135.34065247]
[92.91091156 120.34231567]
[92.68758392 105.34397888]
[90.32894897 102.29287720]
[89.32663727 98.21694183]
[90.10820007 93.74523163]
[92.80423737 89.67445374]
[93.25084686 74.68110657]
[93.69744873 59.68775558]
[91.50448608 55.94010544]
[90.69915009 52.07798767]
[91.14701843 48.55168533]
[92.58127594 45.72157288]
[94.64343262 43.82272339]
[95.98166656 28.88253784]
[97.31990051 13.94235325]
[98.65813446 -0.99783194]
[90.72190094 11.73072624]
[79.68317413 21.88683510]
[66.33885956 28.73731804]
[51.65227890 31.78763008]
[36.68367767 30.81756973]
[22.51365280 25.89716339]
[10.16514874 17.38162231]
[0.52961546 5.88568735]
[-5.69735003 -7.76073694]
[-8.06621742 -22.57250404]
[-6.40597725 -37.48034286]
[-0.83648241 -51.40803909]
[8.24020004 -63.35014343]
[20.16881561 -72.44454193]
[34.08823013 -78.03470612]
[48.99358749 -79.71707153]
[63.80885315 -77.37019348]
[77.46450806 -71.16349792]
[88.97473145 -61.54503632]
[97.50859833 -49.20918655]
[102.45002747 -35.04648209]
[103.44223022 -20.07817841]
[109.31118774 -33.88235474]
[115.18015289 -47.68653107]
[121.04911041 -61.49071121]
[126.91807556 -75.29488373]
[127.39583588 -84.41681671]
[132.97854614 -89.25986481]
[139.05238342 -102.97512817]
[145.12622070 -116.69039917]
[148.77430725 -131.24002075]
[149.88995361 -146.19847107]
[141.51167297 -162.59620667]
[151.95051575 -176.70285034]
[152.84332275 -191.67626953]
[153.73614502 -206.64967346]
[146.83395386 -220.88591003]
[155.31507874 -233.13008118]
[156.09640503 -248.10971069]
[156.76618958 -263.09475708]
[157.43597412 -278.07980347]
[158.10575867 -293.06481934]
[144.20007324 -299.14730835]
[133.43341064 -309.84512329]
[127.26185608 -323.71148682]
[126.52008057 -338.87112427]
[131.30839539 -353.27377319]
[140.97921753 -364.97161865]
[154.22463989 -372.38262939]
[169.25335693 -374.50448608]
[184.03282166 -371.05029297]
[196.56427002 -362.48715210]
[205.15289307 -349.97314453]
[208.63716125 -335.20074463]
[206.54586792 -320.16772461]
[199.16183472 -306.90725708]
[187.48368835 -297.21264648]
[173.09080505 -292.39505005]
[172.42102051 -277.41000366]
[171.75123596 -262.42495728]
[171.08145142 -247.43992615]
[173.92314148 -240.61743164]
[170.28848267 -232.23725891]
[177.25453186 -219.07202148]
[168.70954895 -205.75685120]
[167.81672668 -190.78344727]
[166.92391968 -175.81004333]
[174.71595764 -166.55744934]
[174.09468079 -154.07554626]
[164.84840393 -145.08282471]
[163.73275757 -130.12437439]
[171.39555359 -143.01939392]
[181.98834229 -153.63978577]
[194.86337280 -161.33610535]
[209.23335266 -165.63772583]
[224.21952820 -166.28160095]
[238.90548706 -163.22834778]
[252.39320374 -156.66468811]
[263.85787964 -146.99197388]
[272.59844971 -134.80171204]
[278.08041382 -120.83933258]
[279.96856689 -105.95864105]
[278.14743042 -91.06960297]
[272.72836304 -77.08268738]
[264.04278564 -64.85319519]
[252.62176514 -55.12896347]
[239.16375732 -48.50463867]
[224.49168396 -45.38529968]
[209.50276184 -45.96169281]
[195.11357117 -50.19857025]
[182.20401001 -57.83684921]
[171.56350708 -68.40944672]
[163.84272766 -81.26983643]
[159.51382446 -95.63160706]
[158.84147644 -110.61656189]
[152.76765442 -96.90129852]
[146.69381714 -83.18602753]
[140.72224426 -69.42592621]
[134.85328674 -55.62174988]
[128.98432922 -41.81757355]
[123.11537170 -28.01339531]
[117.24640656 -14.20921803]
[113.59832001 0.34040222]
[112.26008606 15.28058720]
[110.92185211 30.22077179]
[109.58361816 45.16095734]
[108.69080353 60.13436127]
[108.24419403 75.12771606]
[107.79759216 90.12106323]
[107.68592072 105.12064362]
[107.90924835 120.11898804]
[108.13257599 135.11732483]
[108.35590363 150.11566162]
[118.16371155 165.70053101]
[109.02503204 180.68223572]
[109.47163391 195.67558289]
[109.91824341 210.66894531]
[112.33038330 214.27941895]
[113.36417389 218.08674622]
[113.12698364 221.63346863]
[111.86372375 224.54393005]
[109.91824341 226.56214905]
[109.47163391 241.55549622]
[109.02503204 256.54885864]
[108.57842255 271.54220581]
[115.90141296 285.56661987]
[107.78860474 298.05789185]
[120.01567841 310.56860352]
[119.42326355 327.71395874]
[106.86605072 338.90124512]
[106.64272308 353.89959717]
[106.41939545 368.89791870]
[106.19606781 383.89627075]
[105.97274017 398.89459229]
[105.74941254 413.89294434]
[118.16674042 405.47808838]
[132.53251648 409.79370117]
[138.25682068 423.65847778]
[131.11990356 436.85183716]
[116.38285065 439.64810181]
[104.90993500 429.98748779]
[103.57170105 444.92767334]
[102.23346710 459.86785889]
[100.89523315 474.80804443]
[99.55699921 489.74822998]
[106.03225708 504.18365479]
[97.19033813 516.16986084]
[95.85210419 531.11004639]
[94.51387024 546.05023193]
[93.17563629 560.99041748]
[106.50033569 568.36419678]
[115.66868591 580.52398682]
[119.09223175 595.36309814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[12 205]
[13 204]
[15 202]
[16 201]
[17 200]
[18 199]
[19 198]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[29 184]
[31 182]
[32 181]
[33 180]
[34 179]
[35 174]
[36 173]
[37 172]
[40 170]
[41 169]
[42 168]
[43 167]
[47 166]
[48 165]
[49 164]
[54 163]
[55 162]
[56 161]
[57 160]
[79 159]
[80 158]
[81 157]
[82 156]
[83 155]
[85 154]
[86 153]
[87 152]
[88 128]
[89 127]
[91 124]
[92 123]
[93 122]
[95 120]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
