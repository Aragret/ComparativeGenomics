%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[3.21022749 595.52893066]
[-7.19238663 606.34570312]
[-18.38327217 616.34478760]
[-30.29833031 625.46887207]
[-42.86930847 633.66564941]
[-56.02420425 640.88830566]
[-69.68766022 647.09533691]
[-83.78142548 652.25122070]
[-98.22475433 656.32647705]
[-112.93492889 659.29766846]
[-127.82768250 661.14788818]
[-142.81771851 661.86645508]
[-157.81916809 661.44927979]
[-172.74609375 659.89874268]
[-187.51301575 657.22375488]
[-202.03532410 653.43963623]
[-216.22985840 648.56799316]
[-230.01530457 642.63677979]
[-243.31268311 635.68005371]
[-256.04586792 627.73748779]
[-268.14187622 618.85473633]
[-279.53146362 609.08258057]
[-290.14935303 598.47705078]
[-299.93475342 587.09881592]
[-308.83160400 575.01318359]
[-316.78894043 562.28924561]
[-323.76119995 548.99993896]
[-329.70840454 535.22143555]
[-334.59655762 521.03259277]
[-338.39758301 506.51467896]
[-341.08978271 491.75088501]
[-342.65765381 476.82577515]
[-343.09228516 461.82479858]
[-342.39117432 446.83395386]
[-340.55831909 431.93905640]
[-337.60421753 417.22543335]
[-333.54577637 402.77737427]
[-328.40628052 388.67761230]
[-322.21514893 375.00692749]
[-315.00787354 361.84365845]
[-306.82568359 349.26315308]
[-297.71548462 337.33746338]
[-287.72943115 326.13494873]
[-276.92474365 315.71975708]
[-265.36334229 306.15155029]
[-253.11137390 297.48510742]
[-240.23907471 289.77011108]
[-226.82015991 283.05072021]
[-212.93150330 277.36541748]
[-198.65264893 272.74682617]
[-184.06538391 269.22131348]
[-169.25326538 266.80917358]
[-154.30113220 265.52413940]
[-139.29464722 265.37359619]
[-124.31974792 266.35842896]
[-109.46222687 268.47296143]
[-94.80717468 271.70510864]
[-80.43853760 276.03637695]
[-66.43862152 281.44189453]
[-52.88761520 287.89074707]
[-39.86314011 295.34597778]
[-31.44852257 282.92846680]
[-23.03390312 270.51098633]
[-14.61928558 258.09347534]
[-6.20466661 245.67599487]
[2.20995188 233.25849915]
[10.62457085 220.84100342]
[7.57054853 206.30798340]
[15.92727661 193.59500122]
[31.19154739 190.49020386]
[39.60616684 178.07270813]
[47.92810822 165.59291077]
[56.15691757 153.05151367]
[64.38572693 140.51011658]
[72.61453247 127.96871948]
[80.84333801 115.42731476]
[89.07215118 102.88591766]
[74.62167358 106.90881348]
[60.52652359 101.77784729]
[52.04384613 89.40674591]
[52.33747101 74.40961456]
[61.29788208 62.38002396]
[75.58306885 57.80471039]
[89.86500549 62.39014816]
[98.81688690 74.42608643]
[99.09954834 89.42453766]
[108.76035309 77.94983673]
[118.33547211 66.40353394]
[127.82437134 54.78627014]
[137.31327820 43.16900635]
[146.80216980 31.55174446]
[156.02926636 19.72547531]
[164.98995972 7.69609690]
[173.95065308 -4.33328056]
[182.91136169 -16.36265755]
[171.79382324 -26.45007324]
[161.70178223 -37.56340790]
[152.72944641 -49.59889221]
[144.96061707 -62.44415283]
[138.46781921 -75.97925568]
[133.31167603 -90.07782745]
[129.54031372 -104.60822296]
[127.18897247 -119.43477631]
[126.27959442 -134.41905212]
[126.82066345 -149.42114258]
[128.80714417 -164.30097961]
[132.22047424 -178.91961670]
[137.02879333 -193.14057922]
[143.18719482 -206.83106995]
[150.63818359 -219.86326599]
[159.31219482 -232.11549377]
[169.12823486 -243.47334290]
[179.99465942 -253.83078003]
[191.80999756 -263.09109497]
[204.46394348 -271.16781616]
[217.83833313 -277.98550415]
[231.80828857 -283.48056030]
[246.24339294 -287.60165405]
[261.00885010 -290.31030273]
[275.96679688 -291.58120728]
[290.97760010 -291.40252686]
[305.90103149 -289.77590942]
[320.59783936 -286.71652222]
[334.93075562 -282.25299072]
[348.76593018 -276.42694092]
[361.97424316 -269.29278564]
[374.43234253 -260.91711426]
[386.02389526 -251.37817383]
[396.64065552 -240.76499939]
[406.18356323 -229.17669678]
[414.56344604 -216.72145081]
[421.70208740 -203.51557922]
[427.53283691 -189.68235779]
[432.00128174 -175.35096741]
[435.06564331 -160.65522766]
[436.69732666 -145.73231506]
[436.88113403 -130.72160339]
[435.61532593 -115.76321411]
[432.91168213 -100.99683380]
[428.79550171 -86.56033325]
[423.30520630 -72.58850098]
[416.49203491 -59.21179581]
[408.41961670 -46.55511093]
[399.16333008 -34.73662186]
[388.80960083 -23.86667824]
[377.45507812 -14.04677486]
[365.20581055 -5.36859655]
[352.17614746 2.08682823]
[338.48776245 8.24988842]
[324.26843262 13.06303883]
[309.65093994 16.48134041]
[294.77178955 18.47287750]
[279.76989746 19.01905251]
[264.78530884 18.11476707]
[249.95794678 15.76846600]
[235.42626953 12.00205421]
[221.32594299 6.85070038]
[207.78863525 0.36250135]
[194.94073486 -7.40196228]
[185.98004150 4.62741518]
[177.01934814 16.65679359]
[168.05863953 28.68617058]
[168.20420837 32.20911789]
[166.65061951 35.97759628]
[163.30107117 39.19223022]
[158.41943359 41.04064178]
[148.93054199 52.65790558]
[139.44163513 64.27516937]
[129.95274353 75.89243317]
[128.15603638 83.06137085]
[120.23505402 87.61064911]
[110.57424164 99.08535004]
[101.61354828 111.11472321]
[93.38474274 123.65612793]
[85.15593719 136.19752502]
[76.92712402 148.73892212]
[68.69831848 161.28031921]
[60.46950912 173.82173157]
[58.37820816 182.71353149]
[52.02366257 186.48733521]
[43.60904312 198.90483093]
[46.38251495 214.23275757]
[37.67200089 226.70599365]
[23.04206657 229.25561523]
[14.62744713 241.67311096]
[6.21282864 254.09060669]
[-2.20178986 266.50811768]
[-10.61640835 278.92559814]
[-19.03102684 291.34310913]
[-27.44564629 303.76058960]
[-15.69426155 313.09451294]
[-4.68245029 323.29046631]
[5.52671099 334.29003906]
[14.87474537 346.03021240]
[23.30810738 358.44375610]
[30.77849197 371.45953369]
[37.24310684 385.00302124]
[42.66492462 398.99664307]
[47.01288986 413.36022949]
[50.26209259 428.01150513]
[52.39392853 442.86657715]
[53.39618301 457.84030151]
[53.26311493 472.84695435]
[51.99548721 487.80056763]
[49.60055923 502.61547852]
[46.09204865 517.20684814]
[41.49005890 531.49108887]
[35.82094193 545.38635254]
[29.11717224 558.81304932]
[21.41715050 571.69433594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 190]
[62 189]
[63 188]
[64 187]
[65 186]
[66 185]
[67 184]
[70 181]
[71 180]
[72 178]
[73 177]
[74 176]
[75 175]
[76 174]
[77 173]
[86 172]
[87 171]
[88 169]
[89 168]
[90 167]
[91 166]
[92 162]
[93 161]
[94 160]
[95 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
