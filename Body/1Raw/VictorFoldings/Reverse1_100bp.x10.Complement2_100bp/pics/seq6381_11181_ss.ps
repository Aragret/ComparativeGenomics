%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[129.77423096 365.66424561]
[139.89421082 354.40081787]
[153.12429810 347.03579712]
[150.45851135 332.27456665]
[147.79270935 317.51336670]
[145.12690735 302.75213623]
[142.46112061 287.99090576]
[139.79531860 273.22970581]
[137.12953186 258.46847534]
[134.46372986 243.70727539]
[131.03266907 229.10494995]
[126.84565735 214.70115662]
[122.65864563 200.29737854]
[118.47164154 185.89360046]
[114.17751312 171.52139282]
[109.20986176 166.04925537]
[109.81945801 156.93518066]
[105.63244629 142.53140259]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[75.26779938 47.87698364]
[63.66069794 37.12590408]
[67.10794067 22.63570976]
[62.49393463 8.36297512]
[57.87992477 -5.90975761]
[53.26591492 -20.18249130]
[47.60313034 -34.07251740]
[40.92293549 -47.50289536]
[34.24274063 -60.93326950]
[27.56254578 -74.36364746]
[18.69165039 -86.45939636]
[7.88949299 -96.86676788]
[-2.91266322 -107.27414703]
[-13.71481991 -117.68151855]
[-24.51697540 -128.08889771]
[-42.48739624 -132.10702515]
[-46.68249130 -149.14721680]
[-57.63840103 -159.39260864]
[-68.79439545 -149.35144043]
[-80.77229309 -140.30647278]
[-93.48339844 -132.32466125]
[-106.83361053 -125.46512604]
[-120.72408295 -119.77863312]
[-135.05198669 -115.30730438]
[-149.71121216 -112.08422852]
[-164.59326172 -110.13327026]
[-179.58792114 -109.46887970]
[-194.58419800 -110.09597015]
[-209.47105408 -112.00990295]
[-224.13825989 -115.19651031]
[-238.47723389 -119.63219452]
[-252.38180542 -125.28411102]
[-265.74905396 -132.11042786]
[-278.47994995 -140.06057739]
[-290.48031616 -149.07572937]
[-301.66125488 -159.08912659]
[-311.94000244 -170.02664185]
[-321.24041748 -181.80726624]
[-329.49371338 -194.34379578]
[-336.63873291 -207.54342651]
[-342.62258911 -221.30841064]
[-347.40097046 -235.53684998]
[-350.93853760 -250.12339783]
[-353.20904541 -264.96005249]
[-354.19570923 -279.93695068]
[-353.89123535 -294.94323730]
[-352.29785156 -309.86779785]
[-349.42736816 -324.60015869]
[-345.30102539 -339.03118896]
[-339.94940186 -353.05407715]
[-333.41210938 -366.56500244]
[-325.73751831 -379.46392822]
[-316.98251343 -391.65536499]
[-307.21185303 -403.04904175]
[-296.49789429 -413.56057739]
[-284.91998291 -423.11218262]
[-272.56381226 -431.63314819]
[-259.52087402 -439.06033325]
[-245.88772583 -445.33880615]
[-231.76533508 -450.42202759]
[-217.25823975 -454.27239990]
[-202.47383118 -456.86141968]
[-187.52160645 -458.16992188]
[-172.51223755 -458.18817139]
[-157.55685425 -456.91607666]
[-142.76620483 -454.36306763]
[-128.24977112 -450.54797363]
[-114.11505127 -445.49914551]
[-100.46667480 -439.25387573]
[-87.40570068 -431.85842896]
[-75.02883148 -423.36758423]
[-63.42770386 -413.84417725]
[-52.68820190 -403.35873413]
[-42.88984680 -391.98886108]
[-34.10517883 -379.81878662]
[-26.39923859 -366.93856812]
[-19.82907867 -353.44360352]
[-14.44334507 -339.43377686]
[-10.28191090 -325.01281738]
[-7.37558699 -310.28750610]
[-5.74589062 -295.36685181]
[-5.40488815 -280.36135864]
[-6.35510445 -265.38208008]
[-8.58950424 -250.53994751]
[-12.09154320 -235.94483948]
[-16.83529472 -221.70481873]
[-22.78563690 -207.92530823]
[-29.89851570 -194.70834351]
[-38.12126541 -182.15174866]
[-47.39300919 -170.34852600]
[-36.43709946 -160.10313416]
[-24.34089661 -160.19477844]
[-15.12949848 -151.74882507]
[-14.10960293 -138.89105225]
[-3.30744648 -128.48367310]
[7.49470997 -118.07630157]
[18.29686546 -107.66893005]
[29.09902191 -97.26155090]
[24.06451035 -111.39144135]
[22.65124130 -126.32471466]
[24.94563866 -141.14819336]
[30.80739784 -154.95544434]
[39.87807083 -166.90209961]
[51.60298157 -176.25765991]
[65.26514435 -182.45001221]
[80.02912140 -185.10049438]
[94.99208069 -184.04702759]
[109.23903656 -179.35403442]
[121.89878082 -171.30847168]
[132.19717407 -160.40237427]
[139.50444031 -147.30261230]
[143.37376404 -132.81025696]
[143.56852722 -117.81151581]
[140.07681274 -103.22357941]
[133.11213684 -89.93849182]
[123.10041809 -78.76865387]
[110.65384674 -70.39710236]
[96.53355408 -65.33575439]
[81.60298920 -63.89411545]
[66.77516937 -66.16034698]
[52.95682144 -71.99586487]
[40.99291992 -81.04383850]
[47.67311478 -67.61346436]
[54.35330963 -54.18309021]
[61.03350449 -40.75271225]
[63.56302643 -55.53789139]
[73.06999969 -67.14036560]
[87.06932831 -72.52728271]
[101.90161896 -70.29050446]
[113.68974304 -61.01472473]
[119.35232544 -47.12461090]
[117.40916443 -32.25100708]
[108.36820984 -20.28183365]
[94.59273529 -14.34580517]
[79.68363190 -15.99458599]
[67.53865051 -24.79650116]
[72.15265656 -10.52376747]
[76.76667023 3.74896622]
[81.38067627 18.02169991]
[92.65775299 27.75189781]
[89.54053497 43.26297379]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.14677429 128.28475952]
[121.51050568 133.80175781]
[120.03622437 138.34439087]
[124.22323608 152.74816895]
[128.51736450 167.12039185]
[134.02690125 174.40618896]
[132.87542725 181.70658875]
[137.06242371 196.11036682]
[141.24943542 210.51414490]
[145.43644714 224.91793823]
[152.58375549 211.73020935]
[166.48913574 206.10523987]
[180.79525757 210.61468506]
[188.96153259 223.19688416]
[187.25447083 238.09944153]
[176.45449829 248.50907898]
[161.49923706 249.66668701]
[149.22494507 241.04147339]
[151.89074707 255.80268860]
[154.55653381 270.56390381]
[157.22233582 285.32513428]
[159.88813782 300.08633423]
[162.55392456 314.84756470]
[165.21972656 329.60876465]
[167.88551331 344.36999512]
[182.85603333 346.64212036]
[196.27647400 353.65429688]
[206.69110107 364.64584351]
[212.97023010 378.42449951]
[214.43272400 393.49566650]
[210.91995239 408.22451782]
[202.81295776 421.01339722]
[190.99111938 430.47503662]
[176.73680115 435.58312988]
[161.59617615 435.78359985]
[147.21159363 431.05468750]
[135.14340210 421.90933228]
[126.70064545 409.33959961]
[122.79914856 394.70889282]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 181]
[12 180]
[13 179]
[14 178]
[15 176]
[17 175]
[18 174]
[19 171]
[20 170]
[22 168]
[23 167]
[24 166]
[25 165]
[27 163]
[28 162]
[29 161]
[30 160]
[31 149]
[32 148]
[33 147]
[34 146]
[35 122]
[36 121]
[37 120]
[38 119]
[39 118]
[41 115]
[42 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
