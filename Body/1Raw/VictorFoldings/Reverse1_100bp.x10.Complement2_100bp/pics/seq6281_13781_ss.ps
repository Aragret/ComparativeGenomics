%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[15.71593666 772.53753662]
[2.74632239 780.09930420]
[-10.92176723 786.31011963]
[-25.14807510 791.10626221]
[-39.78661728 794.43853760]
[-54.68717957 796.27276611]
[-69.69685364 796.59008789]
[-84.66162109 795.38720703]
[-99.42790985 792.67657471]
[-113.84420013 788.48590088]
[-127.76255798 782.85827637]
[-141.04016113 775.85137939]
[-153.54074097 767.53717041]
[-165.13604736 758.00091553]
[-175.70707703 747.34051514]
[-185.14537048 735.66534424]
[-193.35404968 723.09521484]
[-200.24888611 709.75909424]
[-205.75915527 695.79382324]
[-209.82827759 681.34277344]
[-212.41450500 666.55419922]
[-213.49131775 651.57983398]
[-213.04765320 636.57336426]
[-211.08805847 621.68878174]
[-207.63265991 607.07879639]
[-202.71688843 592.89337158]
[-196.39122009 579.27801514]
[-188.72053528 566.37255859]
[-179.78356934 554.30932617]
[-169.67201233 543.21215820]
[-158.48965454 533.19488525]
[-146.35121155 524.36029053]
[-133.38127136 516.79913330]
[-119.71290588 510.58889771]
[-105.48638153 505.79336548]
[-90.84769440 502.46173096]
[-75.94705200 500.62817383]
[-60.93736267 500.31152344]
[-45.97265244 501.51504517]
[-31.20648003 504.22634888]
[-27.01946831 489.82257080]
[-22.83245850 475.41879272]
[-18.64544678 461.01498413]
[-14.45843506 446.61120605]
[-10.27142429 432.20742798]
[-6.08441305 417.80364990]
[-1.89740181 403.39987183]
[2.28960943 388.99609375]
[-7.79092836 379.78198242]
[-12.94277763 367.06240845]
[-12.10770035 353.29827881]
[-5.39176130 341.17907715]
[5.94427443 333.09759521]
[19.72125244 330.67733765]
[24.12225151 316.33749390]
[28.52324867 301.99765015]
[32.92424774 287.65780640]
[31.88158989 280.34106445]
[37.49898911 273.13809204]
[42.11299896 258.86535645]
[46.72700882 244.59263611]
[51.34101868 230.31990051]
[55.95502472 216.04716492]
[60.56903458 201.77442932]
[65.18304443 187.50169373]
[69.69067383 173.19500732]
[74.09167480 158.85516357]
[66.90807343 145.85780334]
[71.16703033 131.25245667]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[104.10683441 50.93503571]
[106.15196228 45.63272858]
[109.96398163 42.75565338]
[114.78997803 28.55319786]
[119.61597443 14.35074139]
[123.15564728 -0.22563402]
[125.38076019 -15.05967808]
[119.77619934 -29.85492897]
[129.31587219 -41.29362869]
[131.54098511 -56.12767410]
[133.76611328 -70.96171570]
[135.99122620 -85.79576111]
[137.77369690 -100.68947601]
[139.11192322 -115.62966156]
[140.45016479 -130.56985474]
[141.23147583 -145.54948425]
[141.45480347 -160.54782104]
[141.67813110 -175.54615784]
[141.90145874 -190.54449463]
[142.12478638 -205.54283142]
[142.34811401 -220.54116821]
[127.96680450 -225.19618225]
[115.59745789 -233.88471985]
[106.33995819 -245.83419800]
[101.01746368 -259.98208618]
[100.10326385 -275.07034302]
[103.67863464 -289.75735474]
[111.42565918 -302.73715210]
[122.65548706 -312.85556030]
[136.36955261 -319.21289062]
[151.34843445 -321.24383545]
[166.26019287 -318.76782227]
[179.77890015 -312.00497437]
[190.70248413 -301.55670166]
[198.05963135 -288.35198975]
[201.19612122 -273.56506348]
[199.83309937 -258.51071167]
[194.09172058 -244.52757263]
[184.48254395 -232.85902405]
[171.86000061 -224.54261780]
[157.34646606 -220.31784058]
[157.12313843 -205.31950378]
[156.89981079 -190.32116699]
[156.67648315 -175.32283020]
[156.45314026 -160.32449341]
[156.22981262 -145.32615662]
[168.64715576 -153.74102783]
[183.01292419 -149.42539978]
[188.73722839 -135.56060791]
[181.60031128 -122.36726379]
[166.86325073 -119.57099152]
[155.39035034 -129.23161316]
[154.05210876 -114.29142761]
[152.71388245 -99.35124207]
[154.40574646 -97.11613464]
[155.31419373 -94.07617950]
[155.12825012 -90.52641296]
[153.64935303 -86.86890411]
[150.82527161 -83.57064056]
[148.60015869 -68.73660278]
[146.37503052 -53.90255737]
[144.14991760 -39.06851196]
[149.91363525 -25.33429146]
[140.21481323 -12.83456039]
[137.98968506 1.99948311]
[147.89884949 -9.26144695]
[161.67866516 -15.18739510]
[176.66845703 -14.63415146]
[189.97393799 -7.70854044]
[199.02603149 4.25221205]
[202.07691956 18.93867111]
[198.53752136 33.51511383]
[189.09123230 45.16705322]
[175.56199646 51.64468765]
[160.56208801 51.69728470]
[146.98776245 45.31468582]
[137.45999146 33.72927475]
[133.81843567 19.17673874]
[128.99243164 33.37919617]
[124.16643524 47.58164978]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[106.33704376 142.04638672]
[101.66953278 156.52633667]
[88.43151855 163.25616455]
[84.03051758 177.59600830]
[84.50434875 186.71813965]
[79.45578003 192.11570740]
[74.84176636 206.38844299]
[70.22776031 220.66117859]
[65.61375427 234.93391418]
[60.99974060 249.20664978]
[56.38573074 263.47937012]
[51.77172089 277.75210571]
[47.26409531 292.05880737]
[42.86309433 306.39865112]
[38.46209717 320.73849487]
[34.06110001 335.07833862]
[45.44880295 347.06634521]
[49.21546173 363.06970215]
[44.42519379 378.69885254]
[32.47597504 389.71575928]
[16.69339180 393.18310547]
[12.50638008 407.58688354]
[8.31936932 421.99066162]
[4.13235760 436.39443970]
[-0.05465347 450.79821777]
[-4.24166489 465.20199585]
[-8.42867565 479.60580444]
[-12.61568737 494.00958252]
[-16.80269814 508.41336060]
[-2.88409257 514.04040527]
[10.39381504 521.04669189]
[22.89476967 529.36035156]
[34.49049377 538.89605713]
[45.06199265 549.55603027]
[54.50078964 561.23077393]
[62.71002579 573.80059814]
[69.60545349 587.13641357]
[75.11632538 601.10137939]
[79.18608856 615.55230713]
[81.77297974 630.34075928]
[82.85044861 645.31506348]
[82.40744019 660.32153320]
[80.44850159 675.20623779]
[76.99374390 689.81634521]
[72.07859802 704.00201416]
[65.75352478 717.61761475]
[58.08340836 730.52343750]
[49.14697266 742.58703613]
[39.03591156 753.68469238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[47 183]
[48 182]
[54 177]
[55 176]
[56 175]
[57 174]
[59 173]
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 165]
[67 164]
[70 161]
[71 160]
[73 158]
[74 157]
[75 156]
[78 155]
[79 154]
[80 153]
[81 140]
[82 139]
[84 137]
[85 136]
[86 135]
[87 134]
[88 129]
[89 128]
[90 127]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
