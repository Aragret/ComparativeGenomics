%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[104.11598206 656.06341553]
[117.04185486 648.06402588]
[114.59613037 633.26470947]
[112.15040588 618.46545410]
[102.50257874 611.16845703]
[100.34387970 598.85900879]
[107.36878204 588.04168701]
[105.14366150 573.20764160]
[102.91854858 558.37359619]
[100.69342804 543.53955078]
[98.46830750 528.70550537]
[96.24319458 513.87145996]
[94.01807404 499.03744507]
[91.79296112 484.20339966]
[89.56784058 469.36935425]
[87.34272766 454.53530884]
[85.11760712 439.70126343]
[82.89249420 424.86721802]
[80.66737366 410.03317261]
[78.44225311 395.19912720]
[76.21714020 380.36508179]
[73.99201965 365.53103638]
[67.03721619 378.82128906]
[54.42224884 386.93685913]
[39.44465256 387.75640869]
[26.01953316 381.06564331]
[17.65618134 368.61355591]
[16.54076004 353.65509033]
[22.96483421 340.10034180]
[35.24917221 331.49249268]
[50.18267059 330.08160400]
[63.86175156 336.23651123]
[72.71041870 348.34747314]
[72.71041870 333.34747314]
[72.71041870 318.34747314]
[72.71041870 303.34747314]
[72.71041870 288.34747314]
[64.25250244 300.73550415]
[51.04993820 307.85537720]
[36.05221176 308.11642456]
[22.60984993 301.46038818]
[13.72591400 289.37420654]
[11.38509655 274.55798340]
[16.11034203 260.32168579]
[26.84601974 249.84574890]
[41.19375229 245.47052002]
[55.94821548 248.17344666]
[67.81323242 257.35067749]
[74.13812256 270.95199585]
[76.58384705 256.15274048]
[79.02957916 241.35346985]
[81.47530365 226.55419922]
[83.58992767 211.70399475]
[85.37239075 196.81028748]
[87.15486145 181.91656494]
[88.49309540 166.97637939]
[89.38591003 152.00297546]
[90.27872467 137.02957153]
[91.17153931 122.05615997]
[92.06435394 107.08275604]
[91.84102631 92.08441925]
[90.50279236 77.14423370]
[89.16455841 62.20404816]
[87.82632446 47.26386261]
[78.44718170 38.40979767]
[77.64013672 25.93853378]
[85.29356384 16.57095146]
[84.17791748 1.61249733]
[83.06226349 -13.34595585]
[81.61284637 -28.27576447]
[79.83038330 -43.16948318]
[78.04791260 -58.06319809]
[76.26544952 -72.95691681]
[74.48298645 -87.85063171]
[66.01962280 -75.46630859]
[51.93249512 -70.31336212]
[37.47575760 -74.31370544]
[28.04141426 -85.97531891]
[27.14824295 -100.94869995]
[35.12937164 -113.64915466]
[49.00803757 -119.33972931]
[63.60784531 -115.89797211]
[73.48388672 -104.60650635]
[73.48388672 -119.60650635]
[73.48388672 -134.60650635]
[63.90919876 -150.33567810]
[73.26992798 -165.17965698]
[73.04660034 -180.17799377]
[72.82327271 -195.17633057]
[72.59994507 -210.17466736]
[69.34310913 -218.70877075]
[72.48661041 -225.39758301]
[72.48661041 -240.39758301]
[72.04000854 -255.39093018]
[71.14719391 -270.36434937]
[70.25437164 -285.33773804]
[55.87779236 -290.27560425]
[44.48850632 -300.34298706]
[37.82329559 -314.00473022]
[36.89855957 -329.17752075]
[41.85531235 -343.54760742]
[51.93768692 -354.92364502]
[65.60819244 -361.57086182]
[80.78218079 -362.47564697]
[95.14572144 -357.50000000]
[106.50848389 -347.40264893]
[113.13772583 -333.72341919]
[114.02253723 -318.54824829]
[109.02799988 -304.19128418]
[98.91572571 -292.84179688]
[85.22778320 -286.23056030]
[86.12059784 -271.25714111]
[87.01341248 -256.28375244]
[89.01811981 -254.32434082]
[90.36747742 -251.45277405]
[90.71015930 -247.91470337]
[89.79018402 -244.07827759]
[87.48661041 -240.39758301]
[87.48661041 -225.39758301]
[87.59828186 -210.39799500]
[87.82160950 -195.39965820]
[88.04493713 -180.40132141]
[88.26826477 -165.40298462]
[96.72690582 -156.75556946]
[97.03570557 -144.26202393]
[88.48388672 -134.60650635]
[88.48388672 -119.60650635]
[88.48388672 -104.60650635]
[89.37670135 -89.63310242]
[91.15916443 -74.73937988]
[92.94163513 -59.84566498]
[94.72409821 -44.95194626]
[96.50656128 -30.05823135]
[99.03749084 -27.60328293]
[100.50508118 -23.80049133]
[100.28879547 -19.16297913]
[98.02072144 -14.46160507]
[99.13636780 0.49684858]
[100.25201416 15.45530224]
[110.89972687 29.40496635]
[102.76651001 45.92562866]
[104.10474396 60.86581421]
[105.44297791 75.80599976]
[106.78121185 90.74618530]
[114.51473999 77.89345551]
[127.59038544 70.54312134]
[142.59020996 70.61652374]
[155.59329224 78.09449005]
[163.20065308 91.02229309]
[163.42375183 106.02062988]
[156.20426941 119.16898346]
[143.42936707 127.03039551]
[128.43836975 127.54991913]
[115.14987946 120.59174347]
[107.03776550 107.97557068]
[106.14495087 122.94897461]
[105.25212860 137.92237854]
[104.35931396 152.89578247]
[103.46649933 167.86918640]
[105.54690552 171.68048096]
[106.23690033 175.56486511]
[105.68423462 179.07626343]
[104.16635895 181.86241150]
[102.04857635 183.69903564]
[100.26611328 198.59274292]
[98.48364258 213.48646545]
[100.53952789 218.28442383]
[100.54852295 222.92697144]
[98.91259003 226.66043091]
[96.27457428 228.99992371]
[93.82884979 243.79919434]
[91.38311768 258.59844971]
[88.93739319 273.39773560]
[87.71041870 288.34747314]
[87.71041870 303.34747314]
[87.71041870 318.34747314]
[87.71041870 333.34747314]
[87.71041870 348.34747314]
[88.82606506 363.30590820]
[91.05118561 378.13995361]
[93.27629852 392.97399902]
[95.50141907 407.80804443]
[97.72653198 422.64208984]
[99.95165253 437.47613525]
[102.17676544 452.31018066]
[104.40188599 467.14422607]
[106.62700653 481.97827148]
[108.85211945 496.81231689]
[111.07723999 511.64636230]
[113.30235291 526.48040771]
[115.52747345 541.31445312]
[117.75258636 556.14849854]
[119.97770691 570.98254395]
[122.20281982 585.81658936]
[134.00486755 599.95141602]
[126.94967651 616.01971436]
[129.39540100 630.81903076]
[131.84112549 645.61828613]
[146.65341187 649.03369141]
[159.02825928 657.86157227]
[167.07859802 670.75573730]
[169.57681274 685.75000000]
[166.14193726 700.55780029]
[157.29777527 712.92102051]
[144.39300537 720.95434570]
[129.39547729 723.43286133]
[114.59223938 719.97851562]
[102.24066162 711.11810303]
[94.22427368 698.20275879]
[91.76551819 683.20202637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 166]
[54 165]
[55 164]
[56 159]
[57 158]
[58 157]
[59 156]
[60 155]
[61 144]
[62 143]
[63 142]
[64 141]
[67 139]
[68 138]
[69 137]
[70 133]
[71 132]
[72 131]
[73 130]
[74 129]
[83 128]
[84 127]
[85 126]
[87 123]
[88 122]
[89 121]
[90 120]
[92 119]
[93 118]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
