%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[24.44349670 502.15740967]
[26.10040092 517.08581543]
[25.87316132 532.10418701]
[23.76536179 546.97564697]
[19.81024551 561.46569824]
[14.07019138 575.34570312]
[6.63572693 588.39685059]
[-2.37589574 600.41320801]
[-12.82254982 611.20538330]
[-24.53947639 620.60308838]
[-37.34188080 628.45812988]
[-51.02785492 634.64660645]
[-65.38154602 639.07092285]
[-80.17658234 641.66131592]
[-95.17961884 642.37695312]
[-110.15404510 641.20648193]
[-124.86367798 638.16845703]
[-139.07653809 633.31066895]
[-152.56845093 626.70983887]
[-165.12666321 618.46997070]
[-176.55307007 608.72113037]
[-186.66749573 597.61700439]
[-195.31040955 585.33270264]
[-202.34550476 572.06207275]
[-207.66181946 558.01428223]
[-211.17549133 543.41094971]
[-212.83114624 528.48236084]
[-212.60264587 513.46398926]
[-210.49359131 498.59274292]
[-206.53726196 484.10305786]
[-200.79603577 470.22351074]
[-193.36047363 457.17300415]
[-184.34783936 445.15737915]
[-173.90026855 434.36608887]
[-162.18255615 424.96939087]
[-149.37948608 417.11541748]
[-135.69299316 410.92807007]
[-121.33892822 406.50494385]
[-106.54367828 403.91580200]
[-91.54058075 403.20144653]
[-76.56625366 404.37316895]
[-61.85687637 407.41247559]
[-47.64442825 412.27145386]
[-34.15306091 418.87344360]
[-25.92425346 406.33203125]
[-17.69544411 393.79061890]
[-16.65430832 386.47366333]
[-9.24959660 381.12503052]
[-0.83497781 368.70751953]
[7.57964087 356.29003906]
[15.99425983 343.87252808]
[24.40887833 331.45504761]
[32.82349777 319.03753662]
[41.23811340 306.62005615]
[49.65273285 294.20254517]
[55.41876602 280.35507202]
[58.30403900 265.63519287]
[53.15933609 251.65730286]
[63.40663528 239.60310364]
[66.29190826 224.88322449]
[61.14720154 210.90533447]
[71.39450073 198.85115051]
[74.27976990 184.13125610]
[77.16504669 169.41136169]
[80.05031586 154.69146729]
[82.93559265 139.97157288]
[81.28252411 136.85714722]
[81.05582428 132.78729248]
[82.68812561 128.44116211]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[106.21058655 42.64218521]
[109.75025940 28.06580925]
[113.28993225 13.48943424]
[101.14352417 0.02754216]
[99.52372742 -17.87373734]
[108.89109039 -33.02970123]
[125.33433533 -39.47109604]
[128.43844604 -54.14640045]
[131.54255676 -68.82170105]
[134.64666748 -83.49700165]
[126.29183197 -96.64366150]
[129.64889526 -111.48228455]
[142.23371887 -119.36631775]
[145.33782959 -134.04162598]
[140.62382507 -149.14422607]
[150.82743835 -159.99484253]
[146.11343384 -175.09744263]
[156.31704712 -185.94805908]
[159.42114258 -200.62335205]
[162.52525330 -215.29866028]
[165.62936401 -229.97396851]
[168.07510376 -244.77323914]
[169.85755920 -259.66696167]
[171.64002991 -274.56066895]
[157.74937439 -280.49584961]
[146.09439087 -290.10510254]
[137.61990356 -302.60949707]
[133.01290894 -316.99533081]
[132.64685059 -332.09643555]
[136.55143738 -346.68856812]
[144.41011047 -359.58886719]
[155.58583069 -369.75155640]
[169.17260742 -376.35278320]
[184.06903076 -378.85742188]
[199.06752014 -377.06240845]
[212.95220947 -371.11328125]
[224.59753418 -361.49230957]
[233.05944824 -348.97940063]
[237.65199280 -334.58895874]
[238.00286865 -319.48751831]
[234.08363342 -304.89929199]
[226.21200562 -292.00689697]
[215.02607727 -281.85543823]
[201.43267822 -275.26785278]
[186.53375244 -272.77819824]
[184.75128174 -257.88449097]
[182.96881104 -242.99076843]
[195.39932251 -251.38616943]
[210.15106201 -248.66841125]
[218.77355957 -236.39436340]
[216.32748413 -221.59515381]
[204.21403503 -212.74842834]
[189.37236023 -214.92201233]
[180.30467224 -226.86985779]
[177.20056152 -212.19454956]
[174.09645081 -197.51925659]
[170.99234009 -182.84394836]
[175.92835999 -168.79101562]
[165.50273132 -156.89073181]
[170.43876648 -142.83779907]
[160.01312256 -130.93751526]
[156.90901184 -116.26220703]
[165.22354126 -103.95756531]
[162.28459167 -89.03050232]
[149.32196045 -80.39289093]
[146.21784973 -65.71759033]
[143.11373901 -51.04228973]
[140.00962830 -36.36698532]
[149.38815308 -28.65864372]
[154.63038635 -17.62905121]
[154.68606567 -5.34499884]
[149.48326111 5.86260128]
[139.95365906 13.84101391]
[127.86631012 17.02910614]
[124.32663727 31.60548210]
[120.78696442 46.18185806]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.65547943 142.85685730]
[94.77021027 157.57673645]
[91.88493347 172.29663086]
[88.99966431 187.01652527]
[86.11439514 201.73641968]
[91.05271912 216.76716614]
[81.01179504 227.76849365]
[78.12652588 242.48838806]
[83.06485748 257.51913452]
[73.02393341 268.52044678]
[70.13865662 283.24035645]
[79.23075867 271.30996704]
[90.64618683 261.57919312]
[103.86560059 254.49069214]
[118.28762054 250.36692810]
[133.25613403 249.39552307]
[148.09017944 251.62066650]
[162.11488342 256.94113159]
[174.69224548 265.11486816]
[185.25007629 275.77001953]
[193.30804443 288.42187500]
[198.49958801 302.49481201]
[200.58851624 317.34863281]
[199.47978210 332.30761719]
[195.22386169 346.69119263]
[188.01432800 359.84500122]
[178.17921448 371.17065430]
[166.16590881 380.15289307]
[152.52096558 386.38308716]
[137.86511230 389.57781982]
[122.86511993 389.59173584]
[108.20337677 386.42419434]
[94.54689026 380.21932983]
[82.51694489 371.25939941]
[72.66082001 359.95202637]
[65.42691040 346.81158447]
[61.14429474 332.43594360]
[60.00782013 317.47906494]
[62.07022858 302.61718750]
[53.65560913 315.03466797]
[45.24099350 327.45217896]
[36.82637405 339.86965942]
[28.41175461 352.28717041]
[19.99713707 364.70465088]
[11.58251762 377.12216187]
[3.16789913 389.53964233]
[-5.15404463 402.01943970]
[-13.38285255 414.56085205]
[-21.61166000 427.10223389]
[-10.18442154 436.85012817]
[-0.06906223 447.95339966]
[8.57488346 460.23696899]
[15.61108780 473.50704956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 206]
[45 205]
[46 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[54 197]
[55 196]
[56 168]
[57 167]
[59 165]
[60 164]
[62 162]
[63 161]
[64 160]
[65 159]
[66 158]
[70 157]
[71 156]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[82 143]
[83 142]
[84 141]
[85 140]
[88 137]
[89 136]
[91 134]
[93 132]
[94 131]
[95 130]
[96 129]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
