%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[31.66102219 721.57342529]
[20.58217430 732.30944824]
[5.45322084 735.32910156]
[-8.89824486 729.66882324]
[-17.89272308 717.13470459]
[-18.66010666 701.72644043]
[-10.95552826 688.36071777]
[2.76251030 681.30249023]
[4.10074425 666.36230469]
[5.43897867 651.42211914]
[6.77721262 636.48193359]
[5.08534288 634.24682617]
[4.17688990 631.20684814]
[4.36284018 627.65710449]
[5.84173584 623.99957275]
[8.66582012 620.70129395]
[10.89093685 605.86724854]
[13.11605453 591.03320312]
[15.34117126 576.19915771]
[17.56628799 561.36511230]
[15.77580070 558.32763672]
[15.36760426 554.27197266]
[16.80421257 549.85729980]
[20.23627281 545.92431641]
[23.12154579 531.20446777]
[26.00681877 516.48455811]
[28.89209175 501.76464844]
[31.77736282 487.04476929]
[34.66263580 472.32489014]
[37.54790878 457.60498047]
[29.05111122 445.42550659]
[31.76749802 430.45632935]
[44.60008240 421.62667847]
[39.45537567 407.64880371]
[49.70267487 395.59460449]
[47.90447998 388.42605591]
[52.74203873 380.67776489]
[55.84614944 366.00247192]
[58.95025635 351.32717896]
[61.72586823 336.58621216]
[64.17159271 321.78692627]
[66.61732483 306.98767090]
[69.06304932 292.18838501]
[71.50878143 277.38912964]
[56.00044250 267.48364258]
[46.36147690 251.74845886]
[44.57246399 233.33135986]
[51.03833008 215.93965149]
[64.49781799 203.09381104]
[82.26923370 197.41493225]
[75.89800262 183.95178223]
[85.02901459 171.03143311]
[86.58953857 156.11283875]
[88.15006256 141.19422913]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[90.37517548 15.20191479]
[92.17028809 0.09455813]
[103.86660004 -9.05595303]
[105.42712402 -23.97455788]
[106.98764801 -38.89316177]
[95.72494507 -52.27863312]
[97.59093475 -69.33245850]
[110.94544220 -79.55478668]
[112.28367615 -94.49497223]
[113.62191010 -109.43515778]
[111.65589905 -113.30669403]
[111.08186340 -117.20989990]
[111.73883057 -120.70329285]
[113.33898926 -123.44301605]
[115.51051331 -125.21575928]
[117.73563385 -140.04980469]
[119.96074677 -154.88385010]
[122.18586731 -169.71789551]
[116.58130646 -184.51313782]
[126.12097931 -195.95184326]
[128.34609985 -210.78588867]
[119.14660645 -220.62376404]
[117.31951904 -233.77185059]
[123.30994415 -245.39927673]
[134.73167419 -251.36364746]
[137.17739868 -266.16290283]
[139.62312317 -280.96218872]
[141.07254028 -295.89199829]
[141.51914978 -310.88534546]
[141.96575928 -325.87869263]
[142.41235352 -340.87203979]
[131.85411072 -352.32461548]
[132.52061462 -367.52362061]
[143.50395203 -377.51873779]
[136.18096924 -391.54315186]
[144.29377747 -404.03442383]
[144.74038696 -419.02777100]
[145.18698120 -434.02111816]
[131.61502075 -441.00424194]
[122.42382050 -453.18969727]
[119.43831635 -468.15795898]
[123.25128174 -482.93713379]
[133.10565186 -494.59280396]
[147.04483032 -500.81069946]
[162.30117798 -500.35626221]
[175.84555054 -493.31970215]
[184.98867798 -481.09817505]
[187.91522217 -466.11825562]
[184.04408264 -451.35421753]
[174.14389038 -439.73745728]
[160.18034363 -433.57449341]
[159.73373413 -418.58114624]
[159.28712463 -403.58779907]
[166.64205933 -390.63580322]
[158.49729919 -377.07211304]
[168.86624146 -366.44100952]
[168.62690735 -351.22924805]
[157.40571594 -340.42544556]
[156.95910645 -325.43209839]
[156.51249695 -310.43872070]
[156.06588745 -295.44537354]
[165.72814941 -306.91885376]
[180.02780151 -311.44876099]
[194.53393555 -307.63146973]
[204.75167847 -296.64974976]
[207.51495361 -281.90649414]
[201.96752930 -267.96997070]
[189.82832336 -259.15863037]
[174.85881042 -258.20275879]
[161.69746399 -265.39849854]
[154.42239380 -278.51644897]
[151.97666931 -263.71719360]
[149.53094482 -248.91790771]
[159.90005493 -235.67706299]
[157.43597412 -218.69932556]
[143.18014526 -208.56076050]
[140.95501709 -193.72673035]
[146.71873474 -179.99250793]
[137.01991272 -167.49276733]
[134.79479980 -152.65872192]
[132.56967163 -137.82469177]
[130.34455872 -122.99063873]
[128.56208801 -108.09692383]
[127.22386169 -93.15673828]
[125.88562775 -78.21655273]
[135.44982910 -69.58200073]
[138.33764648 -56.82493973]
[133.27622986 -44.55332565]
[121.90625763 -37.33263779]
[120.34573364 -22.41403389]
[118.78520966 -7.49542999]
[128.33471680 3.87744737]
[126.96465302 19.02926445]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[103.06866455 142.75474548]
[101.50814056 157.67335510]
[99.94762421 172.59196472]
[106.20723724 187.12219238]
[97.18784332 198.97546387]
[107.85568237 203.90614319]
[116.70336151 211.61204529]
[123.03121185 221.46948242]
[126.34284973 232.68522644]
[126.38406372 244.36033630]
[123.16234589 255.56217957]
[116.94540405 265.39892578]
[108.23893738 273.09060669]
[97.74555969 278.03085327]
[86.30805206 279.83483887]
[83.86231995 294.63412476]
[81.41659546 309.43338013]
[78.97087097 324.23266602]
[76.52513885 339.03192139]
[78.36473083 343.91690063]
[78.16641998 348.55520630]
[76.36540985 352.21191406]
[73.62555695 354.43127441]
[70.52145386 369.10656738]
[67.41734314 383.78189087]
[64.42256927 398.47988892]
[69.36089325 413.51065063]
[59.31997299 424.51196289]
[67.86960602 437.53277588]
[64.73384094 452.41973877]
[52.26779938 460.49026489]
[49.38252640 475.21014404]
[46.49725342 489.93005371]
[43.61198425 504.64993286]
[40.72671127 519.36981201]
[37.84143829 534.08972168]
[34.95616531 548.80963135]
[32.40033340 563.59027100]
[30.17521477 578.42431641]
[27.95009804 593.25836182]
[25.72498131 608.09240723]
[23.49986458 622.92645264]
[21.71739769 637.82012939]
[20.37916374 652.76031494]
[19.04092979 667.70050049]
[17.70269585 682.64068604]
[29.94796753 692.02459717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 209]
[9 208]
[10 207]
[11 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[33 191]
[35 189]
[37 188]
[38 187]
[39 186]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[50 168]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[65 153]
[66 152]
[67 151]
[70 147]
[71 146]
[72 145]
[77 144]
[78 143]
[79 142]
[80 141]
[82 139]
[83 138]
[87 135]
[88 134]
[89 133]
[90 123]
[91 122]
[92 121]
[93 120]
[96 117]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
