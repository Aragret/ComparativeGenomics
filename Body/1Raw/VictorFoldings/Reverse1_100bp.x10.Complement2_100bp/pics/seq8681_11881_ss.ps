%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-8.08848190 578.16308594]
[-15.83829403 563.71069336]
[-6.96824741 549.91741943]
[-6.74491978 534.91906738]
[-6.52159166 519.92071533]
[-6.29826403 504.92239380]
[-16.82433701 494.44683838]
[-16.81150818 479.23321533]
[-5.75240755 468.26351929]
[-5.52907991 453.26516724]
[-5.30575180 438.26684570]
[-15.93352795 422.11328125]
[-5.33073235 404.96850586]
[-5.55405998 389.97018433]
[-5.77738810 374.97183228]
[-6.00071573 359.97351074]
[-12.56967068 373.45861816]
[-22.49190521 384.70803833]
[-35.05112839 392.90963745]
[-49.34067154 397.47131348]
[-64.32896423 398.06375122]
[-78.93399048 394.64422607]
[-92.10140228 387.45956421]
[-102.88063049 377.02844238]
[-110.49350739 364.10391235]
[-114.39046478 349.61895752]
[-114.29016876 334.61929321]
[-110.19985962 320.18774414]
[-102.41482544 307.36614990]
[-91.49707031 297.08010864]
[-78.23476410 290.07217407]
[-63.58531189 286.84826660]
[-48.60628128 287.64111328]
[-34.37901688 292.39346313]
[-21.93059349 300.76226807]
[-12.15967941 312.14334106]
[-5.77164364 325.71511841]
[-3.22760129 340.49896240]
[1.17339671 326.15911865]
[5.57439470 311.81927490]
[9.97539330 297.47943115]
[14.37639046 283.13958740]
[18.77738953 268.79974365]
[23.17838669 254.45989990]
[27.57938576 240.12004089]
[15.56597519 249.10214233]
[0.68300998 250.97225952]
[-13.17913818 245.24156189]
[-22.39693832 233.40805054]
[-24.56087685 218.56495667]
[-19.10530853 204.59223938]
[-7.45630503 195.14233398]
[7.34111309 192.68542480]
[21.41893578 197.86373901]
[31.09725380 209.32366943]
[33.84624481 224.06875610]
[40.32574081 210.54040527]
[46.80523682 197.01205444]
[44.51569366 179.61306763]
[59.79413986 169.33441162]
[66.07150269 155.71110535]
[72.34886169 142.08778381]
[78.62622070 128.46446228]
[84.90357971 114.84115601]
[78.83623505 99.49334717]
[85.63105011 84.45346069]
[101.15851593 78.86189270]
[107.23234558 65.14662933]
[113.30618286 51.43136215]
[118.96897125 37.54133606]
[114.33467102 25.50447083]
[118.99397278 13.90814877]
[129.94300842 8.76564407]
[135.39836121 -5.20715332]
[140.85371399 -19.17995071]
[146.20489502 -33.19297409]
[151.45161438 -47.24544525]
[154.99128723 -61.82181931]
[156.77375793 -76.71553802]
[158.55622864 -91.60925293]
[160.33868408 -106.50297546]
[162.12115479 -121.39669037]
[163.90362549 -136.29040527]
[151.65156555 -141.20353699]
[140.94584656 -148.90835571]
[132.40975952 -158.95010376]
[126.53880310 -170.73817444]
[123.67190552 -183.58079529]
[123.97187042 -196.72567749]
[127.41614532 -209.40402222]
[133.79843140 -220.87554932]
[142.74102783 -230.47167969]
[153.71717834 -237.63452148]
[166.08212280 -241.94927979]
[179.11093140 -243.16830444]
[181.55665588 -257.96755981]
[184.00238037 -272.76684570]
[186.33787537 -287.58392334]
[188.56298828 -302.41793823]
[190.78810120 -317.25198364]
[177.08032227 -323.59811401]
[165.71661377 -333.55014038]
[157.61817932 -346.30130005]
[153.44154358 -360.81793213]
[153.52526855 -375.92321777]
[157.86257935 -390.39263916]
[166.10186768 -403.05325317]
[177.57521057 -412.87869263]
[191.35250854 -419.07244873]
[206.31689453 -421.13244629]
[221.25529480 -418.89166260]
[234.95669556 -412.53179932]
[246.31040955 -402.56835938]
[254.39601135 -389.80905151]
[258.55807495 -375.28823853]
[258.45916748 -360.18304443]
[254.10731506 -345.71798706]
[245.85531616 -333.06567383]
[234.37211609 -323.25177002]
[220.58860779 -317.07183838]
[205.62214661 -315.02688599]
[203.39703369 -300.19284058]
[201.17192078 -285.35879517]
[203.28840637 -278.27767944]
[198.80165100 -270.32110596]
[196.35592651 -255.52183533]
[193.91020203 -240.72256470]
[209.06959534 -233.28340149]
[221.21075439 -221.52130127]
[229.14366150 -206.57369995]
[232.08604431 -189.89100647]
[229.74047852 -173.09588623]
[222.32441711 -157.82537842]
[210.55007935 -145.57133484]
[195.55609131 -137.53474426]
[178.79733276 -134.50793457]
[177.01487732 -119.61422729]
[175.23240662 -104.72050476]
[173.44993591 -89.82678986]
[171.66748047 -74.93307495]
[169.88500977 -60.03935623]
[178.65148926 -72.21099091]
[191.01318359 -80.70738983]
[205.51782227 -84.53041077]
[220.46142578 -83.23091888]
[234.08842468 -76.96158600]
[244.79795837 -66.45892334]
[251.33186340 -52.95677567]
[252.92254639 -38.04135513]
[249.38313293 -23.46491623]
[241.12944031 -10.93988323]
[229.13108826 -1.93768466]
[214.79763794 2.48411059]
[199.81297302 1.80603433]
[185.93746948 -3.89225388]
[174.80122375 -13.94132423]
[167.71249390 -27.16062355]
[165.50408936 -41.99872589]
[160.25737000 -27.94625664]
[160.86268616 -20.58042908]
[154.82650757 -13.72459412]
[149.37115479 0.24820359]
[143.91580200 14.22100163]
[147.49307251 31.40151405]
[133.02143860 42.78805161]
[134.06103516 45.39139175]
[134.13206482 48.56338882]
[133.01275635 51.93719101]
[130.61811829 55.07251358]
[127.02144623 57.50519562]
[120.94761658 71.22045898]
[114.87377930 84.93572998]
[120.81359100 96.13270569]
[119.29230499 108.71599579]
[110.85525513 118.17484283]
[98.52690125 121.11851501]
[92.24953461 134.74183655]
[85.97217560 148.36514282]
[79.69481659 161.98846436]
[73.41745758 175.61178589]
[77.14365387 187.95999146]
[71.63476562 199.17764282]
[60.33358002 203.49156189]
[53.85408401 217.01989746]
[47.37458801 230.54824829]
[41.91923141 244.52104187]
[37.51823425 258.86090088]
[33.11723709 273.20074463]
[28.71623802 287.54058838]
[24.31524086 301.88043213]
[19.91424179 316.22027588]
[15.51324368 330.56011963]
[11.11224556 344.89996338]
[8.99762154 359.75018311]
[9.22094917 374.74850464]
[9.44427681 389.74685669]
[9.66760540 404.74517822]
[17.89724922 411.85726929]
[20.79452324 422.11328125]
[17.63520813 432.06149292]
[9.69258499 438.49017334]
[9.46925735 453.48849487]
[9.24592972 468.48684692]
[19.97352028 479.78094482]
[19.53337669 494.98818970]
[8.70007324 505.14572144]
[8.47674561 520.14404297]
[8.25341797 535.14239502]
[8.03009033 550.14074707]
[16.48552704 564.19195557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[9 203]
[10 202]
[11 201]
[13 197]
[14 196]
[15 195]
[16 194]
[38 193]
[39 192]
[40 191]
[41 190]
[42 189]
[43 188]
[44 187]
[45 186]
[56 185]
[57 184]
[58 183]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[67 172]
[68 171]
[69 170]
[70 165]
[73 163]
[74 162]
[75 161]
[76 159]
[77 158]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[95 127]
[96 126]
[97 125]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
