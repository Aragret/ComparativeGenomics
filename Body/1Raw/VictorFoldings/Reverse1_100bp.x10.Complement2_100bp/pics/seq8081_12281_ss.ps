%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[100.56943512 532.40191650]
[86.59794617 537.91351318]
[72.05504608 541.66632080]
[57.16118622 543.60345459]
[42.14215851 543.69561768]
[27.22565269 541.94134521]
[12.63779259 538.36730957]
[-1.40026987 533.02758789]
[-14.67572212 526.00317383]
[-26.98731232 517.40063477]
[-38.14839935 507.35025024]
[-47.98978424 496.00448608]
[-56.36227417 483.53527832]
[-63.13894272 470.13168335]
[-68.21706390 455.99688721]
[-71.51964569 441.34518433]
[-72.99662018 426.39868164]
[-72.62561035 411.38394165]
[-70.41223145 396.52862549]
[-66.39003754 382.05792236]
[-60.62000275 368.19116211]
[-53.18960190 355.13864136]
[-44.21148300 343.09817505]
[-33.82174301 332.25228882]
[-22.17789268 322.76544189]
[-9.45644855 314.78143311]
[4.14973450 308.42129517]
[18.43439102 303.78143311]
[33.18096924 300.93222046]
[48.16591644 299.91680908]
[63.16205978 300.75064087]
[65.82785797 285.98941040]
[68.49365234 271.22821045]
[63.14140701 257.32846069]
[73.20809937 245.12304688]
[75.87389374 230.36183167]
[78.09901428 215.52778625]
[79.88147736 200.63406372]
[81.66394806 185.74035645]
[83.44641113 170.84663391]
[85.22887421 155.95292664]
[87.01134491 141.05920410]
[84.68495178 134.04423523]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[92.04388428 80.65306854]
[93.19710541 75.08825684]
[96.48900604 71.62813568]
[98.93473816 56.82886887]
[101.38046265 42.02959824]
[103.82619476 27.23032570]
[106.27191925 12.43105507]
[92.95977783 7.47335482]
[80.79708862 0.14264081]
[70.20220184 -9.30708981]
[61.53920746 -20.54898453]
[55.10541153 -33.19464111]
[51.12113953 -46.80752945]
[49.72219086 -60.91804886]
[50.95520020 -75.03974915]
[54.77610016 -88.68607330]
[61.05168915 -101.38715363]
[69.56427002 -112.70595551]
[80.01920319 -122.25334167]
[92.05510712 -129.70144653]
[105.25635529 -134.79490662]
[119.16740417 -137.35968018]
[133.30854797 -137.30891418]
[136.19381714 -152.02880859]
[139.07908630 -166.74870300]
[141.96435547 -181.46859741]
[144.84963989 -196.18849182]
[147.73490906 -210.90837097]
[150.62017822 -225.62826538]
[153.50544739 -240.34815979]
[156.39071655 -255.06805420]
[142.87887573 -266.30474854]
[136.94950867 -282.75323486]
[140.15121460 -299.85159302]
[151.51329041 -312.90594482]
[167.83755493 -318.37924194]
[170.28327942 -333.17849731]
[172.72901917 -347.97778320]
[175.17474365 -362.77703857]
[177.62046814 -377.57632446]
[167.17445374 -391.60842896]
[170.05220032 -408.52093506]
[183.99147034 -417.93026733]
[186.21658325 -432.76431274]
[188.44169617 -447.59835815]
[190.66680908 -462.43240356]
[192.89193726 -477.26644897]
[195.11705017 -492.10049438]
[180.95405579 -497.18927002]
[168.05612183 -504.94360352]
[156.91902161 -515.06542969]
[147.97082520 -527.16564941]
[141.55548096 -540.77923584]
[137.91958618 -555.38287354]
[137.20288086 -570.41528320]
[139.43292236 -585.29858398]
[144.52400208 -599.46075439]
[152.28041077 -612.35742188]
[162.40403748 -623.49291992]
[174.50573730 -632.43914795]
[188.12036133 -638.85229492]
[202.72459412 -642.48583984]
[217.75709534 -643.20007324]
[232.64004517 -640.96765137]
[246.80139160 -635.87426758]
[259.69680786 -628.11578369]
[270.83065796 -617.99035645]
[279.77493286 -605.88720703]
[286.18585205 -592.27154541]
[289.81701660 -577.66668701]
[290.52886963 -562.63409424]
[288.29400635 -547.75152588]
[283.19833374 -533.59100342]
[275.43774414 -520.69683838]
[265.31051636 -509.56463623]
[253.20593262 -500.62231445]
[239.58923340 -494.21359253]
[224.98382568 -490.58477783]
[209.95109558 -489.87536621]
[207.72598267 -475.04132080]
[205.50085449 -460.20727539]
[203.27574158 -445.37322998]
[201.05062866 -430.53918457]
[198.82550049 -415.70516968]
[207.85882568 -406.51663208]
[209.98219299 -393.61032104]
[204.19934082 -381.66171265]
[192.41973877 -375.13058472]
[189.97401428 -360.33129883]
[187.52828979 -345.53204346]
[185.08255005 -330.73275757]
[182.63682556 -315.93350220]
[193.20780945 -309.01449585]
[200.40327454 -298.57293701]
[203.12518311 -286.13995361]
[200.93467712 -273.55499268]
[194.12236023 -262.69372559]
[183.67028809 -255.18843079]
[171.11061096 -252.18278503]
[168.22534180 -237.46289062]
[165.34007263 -222.74299622]
[162.45480347 -208.02310181]
[159.56951904 -193.30320740]
[156.68424988 -178.58332825]
[153.79898071 -163.86343384]
[150.91371155 -149.14353943]
[148.02842712 -134.42364502]
[162.64381409 -128.33639526]
[175.68968201 -119.35629272]
[186.60122681 -107.86940002]
[194.90542603 -94.37037659]
[200.24166870 -79.44116211]
[202.37728882 -63.72589493]
[201.21778870 -47.90314102]
[196.81101990 -32.65657425]
[189.34515381 -18.64543533]
[179.14071655 -6.47603846]
[166.63677979 3.32447314]
[152.37208557 10.33096027]
[136.96185303 14.23872948]
[121.07118988 14.87678242]
[118.62546539 29.67605209]
[116.17973328 44.47532272]
[113.73400879 59.27459335]
[111.28827667 74.07386780]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.90505981 142.84167480]
[100.12259674 157.73538208]
[98.34012604 172.62910461]
[96.55766296 187.52282715]
[94.77519226 202.41653442]
[92.99272919 217.31025696]
[94.84259796 221.23860168]
[95.30017090 225.15716553]
[94.53948212 228.62945557]
[92.85845947 231.32032776]
[90.63511658 233.02763367]
[87.96931458 247.78884888]
[93.13088989 262.74441528]
[83.25486755 273.89401245]
[80.58907318 288.65521240]
[77.92327881 303.41644287]
[92.26379395 307.88064575]
[105.94699097 314.07336426]
[118.76544952 321.90066528]
[130.52482605 331.24392700]
[141.04687500 341.96151733]
[150.17205811 353.89089966]
[157.76206970 366.85128784]
[163.70181274 380.64617920]
[167.90127563 395.06643677]
[170.29676819 409.89349365]
[170.85198975 424.90252686]
[169.55853271 439.86602783]
[166.43597412 454.55715942]
[161.53169250 468.75320435]
[154.91999817 482.23895264]
[146.70114136 494.80993652]
[136.99972534 506.27563477]
[125.96279907 516.46221924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 192]
[32 191]
[33 190]
[35 188]
[36 187]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[42 177]
[44 176]
[45 175]
[47 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[70 154]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[76 148]
[77 147]
[78 146]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[90 131]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
