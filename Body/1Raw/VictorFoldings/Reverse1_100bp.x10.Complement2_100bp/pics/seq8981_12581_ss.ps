%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[10.00441074 426.32412720]
[16.05075073 410.48501587]
[16.05075073 395.48501587]
[16.05075073 380.48501587]
[16.05075073 365.48501587]
[16.05075073 350.48501587]
[16.05075073 335.48501587]
[8.31344986 322.75772095]
[16.05075073 308.95755005]
[16.05075073 293.95755005]
[16.05075073 278.95755005]
[9.42325687 292.41403198]
[0.09273542 304.15887451]
[-11.51633930 313.65777588]
[-24.87583160 320.47863770]
[-39.37797165 324.31109619]
[-54.36301041 324.98086548]
[-69.14923096 322.45742798]
[-83.06395721 316.85562134]
[-95.47415924 308.43023682]
[-105.81526184 297.56463623]
[-113.61680603 284.75308228]
[-118.52387238 270.57843018]
[-120.31324005 255.68553162]
[-118.90348053 240.75192261]
[-114.35874939 226.45698547]
[-106.88578796 213.45103455]
[-96.82456970 202.32574463]
[-84.63281250 193.58726501]
[-70.86515808 187.63311768]
[-56.14795303 184.73419189]
[-41.15071869 185.02236938]
[-26.55573845 188.48452759]
[-13.02698231 194.96316528]
[-1.17991948 204.16354370]
[8.44648838 215.66712952]
[15.41430378 228.95054626]
[19.40653801 243.40953064]
[20.24134827 258.39059448]
[26.11030769 244.58642578]
[31.97926903 230.78224182]
[31.70346451 223.39672852]
[38.03974152 216.81726074]
[37.87392807 209.42846680]
[44.30746078 202.94407654]
[50.58482361 189.32075500]
[56.86218262 175.69743347]
[63.13954163 162.07412720]
[69.41690063 148.45080566]
[57.92166901 138.88728333]
[49.29251099 126.67502594]
[44.11719131 112.64586639]
[42.74820709 97.75534821]
[45.27880859 83.01773071]
[51.53662872 69.43682098]
[61.09543228 57.93765640]
[73.30413818 49.30347824]
[87.33116913 44.12239075]
[102.22112274 42.74728775]
[116.95977783 45.27183151]
[123.23713684 31.64851761]
[129.51449585 18.02520180]
[135.79185486 4.40188503]
[142.06922913 -9.22143078]
[130.01994324 -18.24326706]
[120.11370850 -29.56887817]
[112.78172302 -42.70161438]
[108.34233856 -57.06625366]
[106.98728180 -72.03417969]
[108.77335358 -86.95092773]
[113.62007904 -101.16475677]
[121.31330109 -114.05515289]
[131.51464844 -125.05992126]
[143.77642822 -133.69969177]
[157.56127930 -139.59880066]
[172.26570129 -142.50161743]
[187.24647522 -142.28366089]
[201.84880066 -138.95687866]
[208.12617493 -152.58020020]
[213.99513245 -166.38436890]
[219.45048523 -180.35716248]
[224.90583801 -194.32997131]
[230.36120605 -208.30276489]
[235.71238708 -222.31578064]
[240.95910645 -236.36825562]
[245.57312012 -250.64099121]
[249.54521179 -265.10552979]
[253.30151367 -279.62756348]
[256.84118652 -294.20394897]
[260.38085938 -308.78033447]
[263.92053223 -323.35668945]
[267.46020508 -337.93307495]
[253.51113892 -343.51916504]
[240.49908447 -351.03366089]
[228.68894958 -360.32351685]
[218.32118225 -371.19961548]
[209.60682678 -383.44058228]
[202.72332764 -396.79714966]
[197.81080627 -410.99743652]
[194.96928406 -425.75231934]
[194.25660706 -440.76141357]
[195.68728638 -455.71914673]
[199.23219299 -470.32101440]
[204.81915283 -484.26971436]
[212.33442688 -497.28131104]
[221.62503052 -509.09088135]
[232.50178528 -519.45794678]
[244.74327087 -528.17156982]
[258.10028076 -535.05426025]
[272.30087280 -539.96588135]
[287.05590820 -542.80645752]
[302.06506348 -543.51824951]
[317.02270508 -542.08660889]
[331.62435913 -538.54083252]
[345.57272339 -532.95300293]
[358.58383179 -525.43688965]
[370.39282227 -516.14556885]
[380.75924683 -505.26818848]
[389.47207642 -493.02615356]
[396.35394287 -479.66873169]
[401.26470947 -465.46783447]
[404.10440063 -450.71261597]
[404.81521606 -435.70343018]
[403.38269043 -420.74588013]
[399.83596802 -406.14443970]
[394.24728394 -392.19641113]
[386.73040771 -379.18576050]
[377.43835449 -367.37734985]
[366.56030273 -357.01159668]
[354.31771851 -348.29953003]
[340.95986938 -341.41851807]
[326.75866699 -336.50863647]
[312.00326538 -333.66983032]
[296.99404907 -332.95996094]
[282.03659058 -334.39340210]
[278.49691772 -319.81701660]
[274.95724487 -305.24066162]
[271.41757202 -290.66427612]
[267.87789917 -276.08789062]
[269.55352783 -271.61563110]
[268.43750000 -266.04324341]
[264.00973511 -261.13342285]
[260.03762817 -246.66889954]
[273.57598877 -253.12745667]
[287.76138306 -248.25148010]
[294.46774292 -234.83415222]
[289.85339355 -220.56152344]
[276.56161499 -213.60961914]
[262.20657349 -217.96078491]
[255.01158142 -231.12153625]
[249.76486206 -217.06906128]
[250.37016296 -209.70324707]
[244.33399963 -202.84741211]
[238.87864685 -188.87460327]
[233.42327881 -174.90180969]
[227.96792603 -160.92901611]
[228.96865845 -158.31048584]
[228.99244690 -155.13778687]
[227.82302856 -151.78102112]
[225.38197327 -148.68170166]
[221.74948120 -146.30282593]
[215.47212219 -132.67951965]
[227.48861694 -123.74085236]
[237.38777161 -112.49462891]
[244.73506165 -99.43080139]
[249.20722961 -85.11922455]
[250.60644531 -70.18472290]
[248.86914062 -55.27988815]
[244.06884766 -41.05648422]
[236.41307068 -28.13701248]
[226.23435974 -17.08742905]
[213.97586060 -8.39236832]
[200.17196655 -2.43387961]
[185.42510986 0.52535439]
[170.37940979 0.35359889]
[155.69253540 -2.94407058]
[149.41517639 10.67924595]
[143.13781738 24.30256271]
[136.86045837 37.92587662]
[130.58309937 51.54919434]
[142.07832336 61.11272049]
[150.70748901 73.32497406]
[155.88281250 87.35413361]
[157.25180054 102.24465179]
[154.72119141 116.98226929]
[148.46336365 130.56318665]
[138.90457153 142.06234741]
[126.69586182 150.69651794]
[112.66883087 155.87760925]
[97.77887726 157.25271606]
[83.04022217 154.72816467]
[76.76286316 168.35148621]
[70.48549652 181.97479248]
[64.20813751 195.59811401]
[57.93077850 209.22143555]
[51.75500870 222.89109802]
[45.78344727 236.65119934]
[39.91448593 250.45538330]
[34.04552460 264.25955200]
[31.05075073 278.95755005]
[31.05075073 293.95755005]
[31.05075073 308.95755005]
[38.78805161 322.75772095]
[31.05075073 335.48501587]
[31.05075073 350.48501587]
[31.05075073 365.48501587]
[31.05075073 380.48501587]
[31.05075073 395.48501587]
[31.05075073 410.48501587]
[37.09709167 426.32412720]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[9 202]
[10 201]
[11 200]
[39 199]
[40 198]
[41 197]
[43 196]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[78 162]
[79 161]
[80 156]
[81 155]
[82 154]
[83 153]
[84 151]
[85 150]
[86 143]
[87 142]
[88 139]
[89 138]
[90 137]
[91 136]
[92 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
