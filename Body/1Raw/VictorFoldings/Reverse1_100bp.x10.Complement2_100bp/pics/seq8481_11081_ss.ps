%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[193.72607422 425.79711914]
[189.75398254 411.33258057]
[185.78189087 396.86807251]
[181.80978394 382.40353394]
[177.83769226 367.93902588]
[173.43669128 353.59918213]
[159.63496399 342.76037598]
[163.37193298 324.72940063]
[158.33502197 310.60037231]
[153.29811096 296.47134399]
[141.73632812 287.08120728]
[144.39033508 271.48419189]
[139.35342407 257.35516357]
[134.31649780 243.22613525]
[131.84454346 241.90419006]
[129.74726868 239.52342224]
[128.43061829 236.22163391]
[128.24313354 232.28089905]
[129.42774963 228.10350037]
[125.24073029 213.69972229]
[121.05371857 199.29592896]
[116.86670685 184.89215088]
[112.67969513 170.48837280]
[97.74922943 171.58435059]
[82.91709900 169.55256653]
[68.83138275 164.48179626]
[56.10752487 156.59359741]
[45.30148315 146.23263550]
[36.88539886 133.85162354]
[31.22700691 119.99150848]
[28.57353783 105.25789642]
[29.04093361 90.29455566]
[32.60876846 75.75527191]
[39.12115479 62.27532578]
[48.29354095 50.44369888]
[59.72515869 40.77735138]
[72.91651917 33.69864273]
[68.72950745 19.29486084]
[64.54249573 4.89107800]
[60.35548782 -9.51270390]
[46.77082443 -21.94405556]
[51.61602020 -38.81091690]
[47.21502304 -53.15076447]
[42.81402588 -67.49060822]
[38.41302872 -81.83045959]
[23.44205475 -80.32652283]
[8.47013474 -81.77188110]
[-5.92748547 -86.10911560]
[-19.19799232 -93.16973877]
[-30.83223152 -102.68072510]
[-40.38424301 -114.27509308]
[-47.48834991 -127.50602722]
[-51.87316895 -141.86413574]
[-53.37196732 -156.79702759]
[-51.92900085 -171.73060608]
[-47.60159302 -186.09107971]
[-40.55785751 -199.32707214]
[-31.07016563 -210.93075562]
[-19.50461006 -220.45733643]
[-6.30689192 -227.54212952]
[-10.70788956 -241.88198853]
[-15.10888767 -256.22183228]
[-19.50988579 -270.56167603]
[-23.91088486 -284.90151978]
[-27.19299126 -287.74435425]
[-29.19808388 -291.14202881]
[-29.90855217 -294.62493896]
[-29.46110153 -297.76602173]
[-28.11950874 -300.22738647]
[-31.65918159 -314.80374146]
[-34.95470047 -300.17022705]
[-41.61237717 -286.72869873]
[-51.25568390 -275.23928833]
[-63.33924866 -266.35177612]
[-77.17967987 -260.56884766]
[-91.99423981 -258.21749878]
[-106.94509888 -259.43075562]
[-121.18669891 -264.13998413]
[-133.91362000 -272.07882690]
[-144.40608215 -282.79837036]
[-152.07070923 -295.69229126]
[-156.47399902 -310.03143311]
[-157.36694336 -325.00485229]
[-154.69903564 -339.76568604]
[-148.62115479 -353.47915649]
[-139.47705078 -365.36968994]
[-127.78385162 -374.76486206]
[-114.20286560 -381.13330078]
[-99.50216675 -384.11483765]
[-84.51315308 -383.54083252]
[-70.08352661 -379.44378662]
[-57.02934647 -372.05538940]
[-46.08889389 -361.79348755]
[-37.88090134 -349.23846436]
[-32.86933899 -335.09930420]
[-31.08687210 -349.99301147]
[-29.30440712 -364.88671875]
[-27.52194023 -379.78045654]
[-41.53294373 -385.37994385]
[-53.61669540 -394.41571045]
[-62.94931030 -406.27172852]
[-68.89447021 -420.13955688]
[-71.04682922 -435.07376099]
[-69.25963593 -450.05603027]
[-63.65473557 -464.06484985]
[-54.61428833 -476.14511108]
[-42.75468826 -485.47314453]
[-28.88453484 -491.41296387]
[-13.94952488 -493.55953979]
[1.03205192 -491.76657104]
[15.03872490 -486.15628052]
[27.11549568 -477.11114502]
[36.43895340 -465.24795532]
[42.37340164 -451.37551880]
[44.51422882 -436.43966675]
[42.71546173 -421.45880127]
[37.09975052 -407.45428467]
[28.04997826 -395.38101196]
[16.18317413 -386.06213379]
[2.30844045 -380.13302612]
[-12.62822342 -377.99798584]
[-14.41068935 -363.10424805]
[-16.19315529 -348.21054077]
[-17.97562218 -333.31683350]
[-17.08280563 -318.34341431]
[-13.54313278 -303.76705933]
[-9.57103729 -289.30252075]
[-5.17003870 -274.96267700]
[-0.76904088 -260.62283325]
[3.63195729 -246.28297424]
[8.03295517 -231.94313049]
[22.93285370 -233.48168945]
[37.85137558 -232.08325195]
[52.21497345 -227.79969788]
[65.47106171 -220.79385376]
[77.10929871 -211.33334351]
[86.68118286 -199.78030396]
[93.81740570 -186.57757568]
[98.24204254 -172.23168945]
[99.78324127 -157.29345703]
[98.37991333 -142.33682251]
[94.08412933 -127.93680573]
[87.05919647 -114.64736938]
[77.57344818 -102.98016357]
[65.99001312 -93.38478851]
[52.75287628 -86.23145294]
[57.15387344 -71.89160919]
[61.55487061 -57.55176163]
[65.95587158 -43.21191406]
[76.49208832 -37.26930237]
[80.27599335 -25.35855675]
[74.75926971 -13.69971561]
[78.94628143 0.70406663]
[83.13329315 15.10784912]
[87.32030487 29.51163101]
[102.25077057 28.41565132]
[117.08290100 30.44743347]
[131.16862488 35.51820374]
[143.89247131 43.40639877]
[154.69851685 53.76736069]
[163.11459351 66.14838409]
[168.77299500 80.00849152]
[171.42646790 94.74210358]
[170.95906067 109.70544434]
[167.39123535 124.24472809]
[160.87884521 137.72467041]
[151.70645142 149.55630493]
[140.27484131 159.22265625]
[127.08348083 166.30136108]
[131.27049255 180.70513916]
[135.45750427 195.10891724]
[139.64451599 209.51271057]
[143.83152771 223.91648865]
[148.44552612 238.18922424]
[153.48245239 252.31825256]
[158.51936340 266.44726562]
[170.44142151 276.84799194]
[167.42713928 291.43441772]
[172.46405029 305.56344604]
[177.50096130 319.69247437]
[188.79850769 325.91571045]
[192.70288086 337.78750610]
[187.63914490 348.77316284]
[191.00444031 351.51702881]
[193.10980225 354.85348511]
[193.92366028 358.31369019]
[193.56993103 361.46670532]
[192.30221558 363.96691895]
[196.27430725 378.43145752]
[200.24641418 392.89596558]
[204.21850586 407.36050415]
[208.19059753 421.82501221]
[223.29966736 422.28070068]
[237.60261536 427.17117310]
[249.82766724 436.06158447]
[258.88775635 448.16143799]
[263.97726440 462.39480591]
[264.64364624 477.49603271]
[260.82766724 492.12234497]
[252.86859131 504.97323608]
[241.47416687 514.90594482]
[227.65757751 521.03729248]
[212.64738464 522.82202148]
[197.77827454 520.10156250]
[184.37240601 513.11767578]
[173.62182617 502.49148560]
[166.48245239 489.16778564]
[163.58912659 474.33135986]
[165.19911194 459.30139160]
[171.16925049 445.41439819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 192]
[2 191]
[3 190]
[4 189]
[5 188]
[6 183]
[8 180]
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[19 173]
[20 172]
[21 171]
[22 170]
[23 169]
[37 155]
[38 154]
[39 153]
[40 152]
[42 149]
[43 148]
[44 147]
[45 146]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[69 126]
[70 125]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
