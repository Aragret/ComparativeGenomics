%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[60.97366333 836.32464600]
[46.26977539 839.31945801]
[31.39725876 841.31469727]
[16.42396927 842.30139160]
[1.41822815 842.27496338]
[-13.55149555 841.23559570]
[-28.41689682 839.18798828]
[-43.11014938 836.14147949]
[-57.56421280 832.10992432]
[-71.71312714 827.11181641]
[-85.49234772 821.16992188]
[-98.83898926 814.31140137]
[-111.69216156 806.56738281]
[-123.99321747 797.97338867]
[-135.68601990 788.56854248]
[-146.71723938 778.39575195]
[-157.03651428 767.50146484]
[-166.59677124 755.93542480]
[-175.35440063 743.75030518]
[-183.26942444 731.00177002]
[-190.30575562 717.74798584]
[-196.43124390 704.04937744]
[-201.61798096 689.96850586]
[-205.84228516 675.56964111]
[-209.08488464 660.91839600]
[-211.33097839 646.08166504]
[-212.57031250 631.12719727]
[-212.79724121 616.12310791]
[-212.01074219 601.13800049]
[-210.21438599 586.24011230]
[-207.41636658 571.49755859]
[-203.62947083 556.97747803]
[-198.87094116 542.74621582]
[-193.16253662 528.86865234]
[-186.53027344 515.40808105]
[-179.00440979 502.42599487]
[-170.61930847 489.98162842]
[-161.41320801 478.13168335]
[-151.42813110 466.93029785]
[-140.70960999 456.42855835]
[-129.30657959 446.67440796]
[-117.27106476 437.71231079]
[-104.65797424 429.58316040]
[-91.52485657 422.32409668]
[-77.93164825 415.96817017]
[-63.94035721 410.54446411]
[-49.61483002 406.07766724]
[-35.02043533 402.58816528]
[-20.22375870 400.09191895]
[-5.29231691 398.60028076]
[9.70576096 398.12005615]
[24.70204163 398.65344238]
[39.62810135 400.19802856]
[54.41582870 402.74673462]
[57.95550156 388.17037964]
[61.49517441 373.59399414]
[65.03485107 359.01760864]
[68.57452393 344.44125366]
[67.09821320 337.19955444]
[72.27692413 329.67498779]
[76.03322601 315.15292358]
[79.78952789 300.63088989]
[83.54582977 286.10882568]
[85.77094269 271.27478027]
[86.44072723 256.28973389]
[87.11051178 241.30470276]
[87.78029633 226.31965637]
[80.61901855 213.25959778]
[88.96481323 199.81867981]
[89.63459778 184.83363342]
[90.30438232 169.84860229]
[90.86259460 154.85899353]
[91.30919647 139.86563110]
[91.75580597 124.87228394]
[92.20240784 109.87893677]
[92.31407928 94.87935638]
[91.86746979 79.88600159]
[91.19768524 64.90096283]
[90.52790070 49.91592407]
[89.85811615 34.93088531]
[81.51232147 21.48996735]
[88.67360687 8.42990112]
[88.00381470 -6.55513811]
[79.65802765 -19.99605751]
[86.81930542 -33.05612183]
[86.14952087 -48.04116058]
[72.38443756 -52.01913071]
[60.53855896 -60.04175568]
[51.76261139 -71.31370544]
[46.90415955 -84.72478485]
[46.42575073 -98.95929718]
[50.36091995 -112.62509155]
[58.31219482 -124.38974762]
[69.49121094 -133.11047363]
[82.79684448 -137.94506836]
[82.35024261 -152.93841553]
[81.90363312 -167.93176270]
[81.45703125 -182.92510986]
[67.49347687 -189.08805847]
[57.59328842 -200.70481873]
[53.72215271 -215.46887207]
[56.64868546 -230.44879150]
[65.79182434 -242.67031860]
[79.33618927 -249.70686340]
[94.59253693 -250.16130066]
[108.53171539 -243.94340515]
[118.38608551 -232.28776550]
[122.19905090 -217.50859070]
[119.21354675 -202.54029846]
[110.02235413 -190.35487366]
[96.45037842 -183.37171936]
[96.89698792 -168.37837219]
[97.34358978 -153.38502502]
[97.79019928 -138.39167786]
[112.80006409 -133.63845825]
[125.29618835 -124.01651001]
[133.75650024 -110.67465210]
[137.14256287 -95.21614838]
[135.02702332 -79.50610352]
[127.64746094 -65.44643402]
[115.87982941 -54.74557877]
[101.13455963 -48.71094894]
[101.80434418 -33.72591019]
[110.10222626 -21.35681915]
[102.98885345 -7.22492313]
[103.65864563 7.76011562]
[111.95652771 20.12920380]
[104.84315491 34.26110077]
[105.51293945 49.24613953]
[106.18272400 64.23117828]
[106.85250854 79.21621704]
[109.70991516 83.04299927]
[110.19370270 88.70542145]
[107.31241608 94.65602112]
[109.67105103 97.70712280]
[110.67336273 101.78305817]
[109.89179993 106.25476837]
[107.19576263 110.32554626]
[106.74915314 125.31889343]
[106.30255127 140.31224060]
[105.85594177 155.30558777]
[108.72845459 163.97660828]
[105.28942108 170.51838684]
[104.61963654 185.50341797]
[103.94985199 200.48846436]
[111.06322479 214.62036133]
[102.76533508 226.98944092]
[102.09555054 241.97448730]
[101.42576599 256.95953369]
[100.75598145 271.94454956]
[108.94465637 259.37692261]
[121.27584076 250.83631897]
[135.92027283 247.58970642]
[150.70555115 250.11868286]
[163.43835449 258.04809570]
[172.22984314 270.20169067]
[175.77586365 284.77651978]
[173.55038452 299.61050415]
[165.88352966 312.50311279]
[153.91265869 321.54180908]
[139.41354370 325.38577271]
[124.53706360 323.46472168]
[111.49005890 316.06365967]
[102.20796204 304.28051758]
[98.06788635 289.86511230]
[94.31158447 304.38717651]
[90.55528259 318.90924072]
[86.79898071 333.43130493]
[83.15089417 347.98092651]
[79.61122131 362.55728149]
[76.07154846 377.13366699]
[72.53187561 391.71005249]
[68.99220276 406.28640747]
[83.30191803 410.80361938]
[97.27402496 416.27655029]
[110.84478760 422.68026733]
[123.95226288 429.98553467]
[136.53666687 438.15902710]
[148.54055786 447.16342163]
[159.90917969 456.95767212]
[170.59065247 467.49710083]
[180.53623962 478.73355103]
[189.70057678 490.61581421]
[198.04182434 503.08966064]
[205.52192688 516.09814453]
[212.10678101 529.58190918]
[217.76629639 543.47949219]
[222.47468567 557.72747803]
[226.21046448 572.26074219]
[228.95655823 587.01312256]
[230.70046997 601.91723633]
[231.43421936 616.90502930]
[231.15446472 631.90820312]
[229.86248779 646.85821533]
[227.56417847 661.68695068]
[224.27003479 676.32666016]
[219.99507141 690.71057129]
[214.75880432 704.77313232]
[208.58511353 718.45007324]
[201.50218201 731.67901611]
[193.54232788 744.39959717]
[184.74186707 756.55377197]
[175.14094543 768.08618164]
[164.78338623 778.94403076]
[153.71643066 789.07794189]
[141.99058533 798.44152832]
[129.65934753 806.99218750]
[116.77899933 814.69085693]
[103.40830231 821.50244141]
[89.60825348 827.39581299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[60 168]
[61 167]
[62 166]
[63 165]
[64 150]
[65 149]
[66 148]
[67 147]
[69 145]
[70 144]
[71 143]
[72 141]
[73 140]
[74 139]
[75 138]
[76 134]
[77 131]
[78 130]
[79 129]
[80 128]
[82 126]
[83 125]
[85 123]
[86 122]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
