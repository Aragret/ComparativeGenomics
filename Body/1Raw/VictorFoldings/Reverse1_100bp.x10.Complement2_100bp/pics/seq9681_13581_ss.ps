%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[138.32479858 478.53091431]
[137.80229187 463.50503540]
[139.76022339 448.59811401]
[144.14521790 434.21682739]
[150.83761597 420.75347900]
[159.65484619 408.57537842]
[170.35638428 398.01473999]
[182.65028381 389.35968018]
[196.20115662 382.84631348]
[192.01414490 368.44253540]
[187.82713318 354.03875732]
[184.14738464 350.99432373]
[182.34104919 345.60598755]
[183.73675537 339.14352417]
[179.98045349 324.62145996]
[176.22415161 310.09939575]
[165.54621887 299.71524048]
[169.58114624 284.41720581]
[165.82484436 269.89514160]
[162.06854248 255.37307739]
[158.31224060 240.85101318]
[147.63430786 230.46684265]
[151.66925049 215.16880798]
[147.91294861 200.64674377]
[144.15664673 186.12469482]
[140.40034485 171.60263062]
[133.92085266 158.07427979]
[124.96015167 146.04490662]
[115.99945068 134.01553345]
[107.03875732 121.98615265]
[98.07806396 109.95677185]
[91.12003326 105.88758087]
[89.07508850 97.68093109]
[80.29448700 85.51947021]
[71.51387787 73.35801697]
[62.73327637 61.19656372]
[53.95267487 49.03510666]
[39.60129547 42.37563705]
[38.42420959 27.52761650]
[30.86353111 22.40180397]
[29.60500336 15.11909199]
[21.00643921 2.82825375]
[12.40787601 -9.46258450]
[3.80931187 -21.75342178]
[-4.97129107 -33.91487885]
[-13.93198776 -45.94425583]
[-22.89268303 -57.97363281]
[-31.85338020 -70.00301361]
[-40.99217987 -81.89764404]
[-50.30706406 -93.65489197]
[-59.62194824 -105.41214752]
[-68.93682861 -117.16939545]
[-78.25171661 -128.92665100]
[-87.56659698 -140.68389893]
[-100.25912476 -132.66319275]
[-113.73230743 -126.03707886]
[-127.83348846 -120.88063812]
[-142.40287781 -117.25229645]
[-157.27540588 -115.19317627]
[-172.28256226 -114.72659302]
[-187.25427246 -115.85784149]
[-202.02093506 -118.57410431]
[-216.41519165 -122.84459686]
[-230.27398682 -128.62094116]
[-243.44024658 -135.83769226]
[-255.76483154 -144.41305542]
[-267.10806274 -154.24989319]
[-277.34143066 -165.23672485]
[-286.34893799 -177.24906921]
[-294.02859497 -190.15080261]
[-300.29336548 -203.79577637]
[-305.07220459 -218.02934265]
[-308.31103516 -232.69024658]
[-309.97314453 -247.61236572]
[-310.03967285 -262.62661743]
[-308.50985718 -277.56286621]
[-305.40109253 -292.25189209]
[-300.74856567 -306.52725220]
[-294.60498047 -320.22720337]
[-287.03994751 -333.19650269]
[-278.13922119 -345.28820801]
[-268.00363159 -356.36529541]
[-256.74801636 -366.30224609]
[-244.49992371 -374.98651123]
[-231.39811707 -382.31964111]
[-217.59106445 -388.21856689]
[-203.23521423 -392.61645508]
[-188.49320984 -395.46347046]
[-173.53210449 -396.72735596]
[-158.52140808 -396.39379883]
[-143.63122559 -394.46655273]
[-129.03024292 -390.96746826]
[-114.88392639 -385.93618774]
[-101.35254669 -379.42971802]
[-88.58943939 -371.52182007]
[-76.73921204 -362.30203247]
[-65.93613434 -351.87487793]
[-56.30262375 -340.35845947]
[-47.94782257 -327.88333130]
[-40.96640778 -314.59075928]
[-35.43748093 -300.63143921]
[-31.42368507 -286.16348267]
[-28.97050285 -271.35086060]
[-28.10573196 -256.36138916]
[-28.83916855 -241.36491394]
[-31.16250229 -226.53135681]
[-35.04940796 -212.02880859]
[-40.45584869 -198.02157593]
[-47.32055664 -184.66838074]
[-55.56575775 -172.12051392]
[-65.09802246 -160.52017212]
[-75.80934143 -149.99877930]
[-66.49446106 -138.24153137]
[-57.17958069 -126.48428345]
[-47.86469650 -114.72702789]
[-38.54981232 -102.96977997]
[-29.23493004 -91.21252441]
[-24.67815018 -89.78256226]
[-20.97128677 -85.47486877]
[-19.82400131 -78.96370697]
[-10.86330605 -66.93432617]
[-1.90260959 -54.90495300]
[7.05808640 -42.87557220]
[11.57027054 -41.31056976]
[15.14723492 -36.89442444]
[16.10014915 -30.35198593]
[24.69871330 -18.06114769]
[33.29727936 -5.77030993]
[41.89584351 6.52052784]
[50.58566666 18.74701309]
[64.30899811 24.53661346]
[66.11412811 40.25450134]
[74.89473724 52.41595840]
[83.67533875 64.57741547]
[92.45594025 76.73886871]
[101.23654175 88.90032959]
[110.10743713 100.99607849]
[119.06813812 113.02545929]
[128.02882385 125.05483246]
[136.98953247 137.08421326]
[145.95022583 149.11358643]
[143.22839355 134.36259460]
[143.81138611 119.37393188]
[147.67073059 104.87892151]
[154.61814880 91.58480072]
[164.31462097 80.14022827]
[176.28707886 71.10361481]
[189.95132446 64.91586304]
[204.64067078 61.87889862]
[219.63838196 62.14089203]
[234.21269226 65.68907166]
[247.65248108 72.35030365]
[259.30200195 81.79957581]
[268.59283447 93.57583618]
[275.07168579 107.10449982]
[278.42239380 121.72546387]
[278.48150635 136.72535706]
[275.24612427 151.37226868]
[268.87411499 164.95158386]
[259.67639160 176.80070496]
[248.10171509 186.34149170]
[234.71484375 193.10845947]
[220.16894531 196.77139282]
[205.17376709 197.15158081]
[190.46095276 194.23049927]
[176.74835205 188.15063477]
[164.70504761 179.20866394]
[154.92239380 167.84632874]
[158.67869568 182.36839294]
[162.43499756 196.89044189]
[166.19129944 211.41250610]
[177.13790894 222.83538818]
[172.83430481 237.09471130]
[176.59060669 251.61677551]
[180.34690857 266.13882446]
[184.10321045 280.66088867]
[195.04981995 292.08377075]
[190.74621582 306.34310913]
[194.50251770 320.86517334]
[198.25881958 335.38720703]
[202.23091125 349.85174561]
[206.41792297 364.25552368]
[210.60493469 378.65930176]
[225.53581238 376.89337158]
[240.55372620 377.60919189]
[255.24894714 380.78729248]
[269.22058105 386.34091187]
[282.08752441 394.11859131]
[293.49868774 403.90814209]
[303.14279175 415.44247437]
[310.75674438 428.40695190]
[316.13281250 442.44787598]
[319.12435913 457.18222046]
[319.64978027 472.20797729]
[317.69470215 487.11529541]
[313.31250000 501.49743652]
[306.62268066 514.96203613]
[297.80780029 527.14184570]
[287.10830688 537.70452881]
[274.81607056 546.36199951]
[261.26644897 552.87792969]
[246.82911682 557.07470703]
[231.89788818 558.83776855]
[216.88012695 558.11907959]
[202.18551636 554.93817139]
[188.21493530 549.38183594]
[175.34951782 541.60168457]
[163.94023132 531.80993652]
[154.29835510 520.27374268]
[146.68688965 507.30776978]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 183]
[10 182]
[11 181]
[14 180]
[15 179]
[16 178]
[18 176]
[19 175]
[20 174]
[21 173]
[23 171]
[24 170]
[25 169]
[26 168]
[27 141]
[28 140]
[29 139]
[30 138]
[31 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 132]
[39 130]
[41 129]
[42 128]
[43 127]
[44 126]
[45 123]
[46 122]
[47 121]
[48 120]
[49 117]
[50 116]
[51 115]
[52 114]
[53 113]
[54 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
