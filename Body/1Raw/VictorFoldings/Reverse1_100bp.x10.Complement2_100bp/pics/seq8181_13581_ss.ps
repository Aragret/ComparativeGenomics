%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[104.56902313 471.62817383]
[105.83713531 456.64486694]
[109.61937714 442.09140015]
[115.80690002 428.38656616]
[124.22170258 415.92465210]
[134.62165833 405.06423950]
[146.70753479 396.11776733]
[160.13160706 389.34265137]
[155.73060608 375.00280762]
[151.32962036 360.66293335]
[146.92861938 346.32308960]
[142.52761841 331.98324585]
[133.30075073 343.80969238]
[118.30400848 344.12225342]
[108.59243011 332.69049072]
[111.32502747 317.94149780]
[124.48743439 310.74768066]
[138.37570190 316.41082764]
[135.05343628 301.78335571]
[131.73118591 287.15591431]
[127.18428802 281.32943726]
[128.47006226 272.28594971]
[125.36595154 257.61065674]
[121.92283630 254.30097961]
[120.52227783 248.79321289]
[122.39476776 242.45245361]
[119.72897339 227.69123840]
[117.06317902 212.93002319]
[114.28756714 198.18905640]
[111.40229034 183.46916199]
[108.51702118 168.74926758]
[105.30374908 154.09748840]
[101.76407623 139.52111816]
[98.22440338 124.94473267]
[94.68473053 110.36836243]
[89.76004791 124.53690338]
[79.23707581 135.22648621]
[65.14763641 140.37310791]
[50.21218872 138.98304749]
[37.31451797 131.32472229]
[28.94497490 118.87679291]
[26.71957970 104.04279327]
[31.06802559 89.68692017]
[41.15069199 78.58107758]
[55.02077866 72.86962128]
[70.00018311 73.65534973]
[83.19662476 80.78654480]
[92.06258392 92.88745880]
[91.16976929 77.91405487]
[90.27694702 62.94065094]
[89.38413239 47.96724319]
[88.49131775 32.99383926]
[87.59850311 18.02043152]
[86.03797913 3.10182714]
[83.81285858 -11.73221684]
[81.58774567 -26.56626129]
[79.36262512 -41.40030289]
[77.13751221 -56.23434830]
[74.91239166 -71.06838989]
[70.54459381 -79.09087372]
[72.76628113 -86.13969421]
[70.76226807 -101.00521851]
[68.75825500 -115.87075043]
[59.24660492 -128.51348877]
[65.21416473 -142.16038513]
[63.21015167 -157.02590942]
[48.43045807 -160.31011963]
[35.69007492 -168.43751526]
[26.51629829 -180.41090393]
[22.00102615 -194.77343750]
[22.67081070 -209.78585815]
[28.42553139 -223.63713074]
[38.55280304 -234.66288757]
[51.81612015 -241.54547119]
[49.81210327 -256.41098022]
[47.80809021 -271.27651978]
[45.80407715 -286.14205933]
[43.57896042 -300.97610474]
[41.13323212 -315.77536011]
[26.26230812 -318.61807251]
[13.28558922 -326.36251831]
[3.75938749 -338.05746460]
[-1.18150854 -352.27920532]
[-0.95899713 -367.30493164]
[4.38076735 -381.32138062]
[14.17527294 -392.64379883]
[27.22778702 -399.91821289]
[24.78206062 -414.71746826]
[22.33633232 -429.51675415]
[7.32882643 -431.15301514]
[-6.68027353 -436.77862549]
[-18.65139961 -445.97616577]
[-27.69621468 -458.06311035]
[-33.14353180 -472.14248657]
[-34.58912659 -487.16955566]
[-31.92572594 -502.02920532]
[-25.35096931 -515.61871338]
[-15.35275078 -526.92968750]
[-2.67300129 -535.12280273]
[11.74735546 -539.58996582]
[26.83823395 -539.99981689]
[41.47978973 -536.32183838]
[54.58552551 -528.82904053]
[65.18290710 -518.07739258]
[72.48553467 -504.86471558]
[75.95150757 -490.17153931]
[75.32363129 -475.08816528]
[70.64849091 -460.73385620]
[62.27301788 -448.17385864]
[50.81872559 -438.34014893]
[37.13560486 -431.96246338]
[39.58132935 -417.16320801]
[42.02705765 -402.36392212]
[56.72599792 -399.67572021]
[69.64252472 -392.10653687]
[79.20793915 -380.55331421]
[84.25289154 -366.39810181]
[84.15029907 -351.34286499]
[78.89325714 -337.20486450]
[69.09815216 -325.69711304]
[55.93250275 -318.22109985]
[58.37823105 -303.42181396]
[61.67013550 -299.96170044]
[62.82336044 -294.39688110]
[60.66960526 -288.14605713]
[62.67361832 -273.28054810]
[64.67763519 -258.41500854]
[66.68164825 -243.54948425]
[81.29402924 -240.42481995]
[93.97946930 -232.47442627]
[103.19666290 -220.64151001]
[107.81791687 -206.34236145]
[107.26712799 -191.29687500]
[101.59146881 -177.32164001]
[91.45808411 -166.11064148]
[78.07568359 -159.02992249]
[80.07969666 -144.16439819]
[89.44800568 -132.58493042]
[83.62378693 -117.87476349]
[85.62779999 -103.00923157]
[87.63181305 -88.14370728]
[89.74643707 -73.29351044]
[91.97155762 -58.45946503]
[94.19667053 -43.62541962]
[96.42179108 -28.79137802]
[98.64690399 -13.95733356]
[100.87202454 0.87670994]
[110.63562012 -10.51065922]
[125.58042145 -11.79627991]
[137.14537048 -2.24369097]
[138.70553589 12.67495155]
[129.36718750 24.41357040]
[114.47975159 26.24775314]
[102.57190704 17.12761688]
[103.46472168 32.10102081]
[104.35753632 47.07442856]
[105.25035858 62.04783249]
[106.14317322 77.02124023]
[107.03598785 91.99464417]
[109.26110077 106.82868958]
[112.80077362 121.40506744]
[116.34044647 135.98144531]
[119.88011932 150.55781555]
[123.48437500 154.33358765]
[125.11667633 158.67971802]
[124.88998413 162.74957275]
[123.23690796 165.86399841]
[126.12218475 180.58389282]
[129.00746155 195.30378723]
[133.72912598 203.12322998]
[131.82438660 210.26422119]
[134.49018860 225.02543640]
[137.15599060 239.78665161]
[140.04125977 254.50654602]
[143.14537048 269.18185425]
[146.35864258 283.83364868]
[149.68090820 298.46109009]
[153.00315857 313.08856201]
[156.86746216 327.58224487]
[161.26846313 341.92208862]
[165.66946411 356.26196289]
[170.07046509 370.60180664]
[174.47145081 384.94165039]
[189.38502502 383.01974487]
[204.40885925 383.64605713]
[219.11070251 386.80258179]
[233.06756592 392.39846802]
[245.87786865 400.27273560]
[257.17303467 410.19882202]
[266.62811279 421.89111328]
[273.97097778 435.01324463]
[278.99044800 449.18762207]
[281.54205322 464.00643921]
[281.55242920 479.04330444]
[279.02120972 493.86563110]
[274.02127075 508.04690552]
[266.69644165 521.17913818]
[257.25747681 532.88439941]
[245.97598267 542.82604980]
[233.17652893 550.71795654]
[219.22738647 556.33306885]
[204.52989197 559.50976562]
[189.50694275 560.15679932]
[174.59074402 558.25543213]
[160.21049500 553.86041260]
[146.77992249 547.09814453]
[134.68547058 538.16326904]
[124.27510834 527.31280518]
[115.84836578 514.85894775]
[109.64769745 501.16009521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[18 178]
[19 177]
[20 176]
[22 175]
[23 174]
[26 173]
[27 172]
[28 171]
[29 169]
[30 168]
[31 167]
[32 163]
[33 162]
[34 161]
[35 160]
[48 159]
[49 158]
[50 157]
[51 156]
[52 155]
[53 154]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[61 141]
[62 140]
[63 139]
[65 137]
[66 136]
[74 128]
[75 127]
[76 126]
[77 125]
[78 122]
[79 121]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
