%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[106.25998688 461.99365234]
[99.48674774 448.60028076]
[93.84266663 434.69329834]
[89.36630249 420.36773682]
[86.08823395 405.72146606]
[84.03085327 390.85449219]
[83.20820618 375.86840820]
[83.62592316 360.86557007]
[85.28115082 345.94845581]
[88.16257477 331.21899414]
[92.25051117 316.77780151]
[97.51704407 302.72351074]
[103.92619324 289.15213013]
[111.43417358 276.15637207]
[119.98969269 263.82501221]
[129.53431702 252.24227905]
[140.00285339 241.48730469]
[151.32377625 231.63356018]
[163.41973877 222.74835205]
[155.56799316 209.96751404]
[147.71623230 197.18666077]
[139.86447144 184.40582275]
[132.01272583 171.62498474]
[123.15622711 170.99601746]
[115.46513367 166.29052734]
[110.73061371 158.45606995]
[110.12284851 149.18447876]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.97693634 66.72629547]
[65.70370483 53.60760117]
[58.43047714 40.48890686]
[51.15724945 27.37021255]
[43.88401794 14.25151920]
[44.60065460 29.23439026]
[41.88943481 43.98733139]
[35.89258575 57.73643494]
[26.92469025 69.76044464]
[15.45618725 79.42861176]
[2.08869123 86.23375702]
[-12.47656631 89.81890869]
[-27.47552109 89.99597931]
[-42.12135696 86.75569153]
[-55.64578629 80.26802063]
[-67.33934021 70.87329865]
[-76.58860016 59.06435394]
[-82.90836334 45.46065521]
[-85.96711731 30.77583313]
[-85.60440063 15.78021908]
[-81.83924103 1.26045442]
[-74.86914825 -12.02178383]
[-65.05976868 -23.36973381]
[-52.92567062 -32.18810654]
[-39.10339355 -38.01430893]
[-24.31802177 -40.54270935]
[-9.34516907 -39.64067078]
[5.02972031 -35.35551453]
[18.05256653 -27.91203117]
[29.04022026 -17.70069122]
[37.41704941 -5.25568581]
[35.41303635 -20.12121391]
[33.40902328 -34.98674393]
[31.40501022 -49.85227203]
[19.81472588 -64.16124725]
[27.10836601 -80.12275696]
[24.88324928 -94.95680237]
[22.65813255 -109.79084778]
[20.43301582 -124.62488556]
[18.20789719 -139.45893860]
[3.20204401 -138.90724182]
[-11.77122402 -140.03916931]
[-26.52359962 -142.84048462]
[-40.86956024 -147.27597046]
[-54.62868500 -153.28982544]
[-67.62794495 -160.80642700]
[-79.70384979 -169.73124695]
[-90.70454407 -179.95204163]
[-100.49167633 -191.34028625]
[-108.94216919 -203.75276184]
[-115.94973755 -217.03334045]
[-121.42626190 -231.01502991]
[-125.30286407 -245.52198792]
[-127.53079987 -260.37179565]
[-128.08204651 -275.37765503]
[-126.94966125 -290.35089111]
[-124.14790344 -305.10317993]
[-119.71199799 -319.44900513]
[-113.69773102 -333.20794678]
[-106.18073273 -346.20700073]
[-97.25555420 -358.28262329]
[-87.03442383 -369.28302002]
[-75.64588928 -379.06982422]
[-63.23317337 -387.51992798]
[-49.95237732 -394.52709961]
[-35.97052002 -400.00320435]
[-21.46344376 -403.87936401]
[-6.61358500 -406.10687256]
[8.39230156 -406.65765381]
[23.36550140 -405.52484131]
[38.11771011 -402.72262573]
[52.46340561 -398.28628540]
[66.22216797 -392.27160645]
[79.22097778 -384.75424194]
[91.29635620 -375.82870483]
[102.29643250 -365.60723877]
[112.08288574 -354.21841431]
[120.53263092 -341.80545044]
[127.53940582 -328.52444458]
[133.01509094 -314.54241943]
[136.89083862 -300.03521729]
[139.11787415 -285.18530273]
[139.66822815 -270.17938232]
[138.53495789 -255.20622253]
[135.73229980 -240.45410156]
[131.29554749 -226.10853577]
[125.28044891 -212.34996033]
[117.76268005 -199.35136414]
[108.83677673 -187.27626038]
[98.61499023 -176.27648926]
[87.22586823 -166.49037170]
[74.81265259 -158.04100037]
[61.53143311 -151.03462219]
[47.54925156 -145.55935669]
[33.04194260 -141.68405151]
[35.26705933 -126.85000610]
[37.49217606 -112.01596069]
[39.71729279 -97.18191528]
[41.94240952 -82.34787750]
[51.48052597 -74.90805054]
[53.45571136 -62.56777954]
[46.27053833 -51.85628510]
[48.27455139 -36.99075699]
[50.27856445 -22.12522697]
[52.28257751 -7.25969982]
[57.00271225 6.97828960]
[64.27593994 20.09698296]
[71.54917145 33.21567917]
[78.82240295 46.33436966]
[86.09563446 59.45306396]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[146.02961731 143.17135620]
[144.79356384 163.77322388]
[152.64532471 176.55406189]
[160.49707031 189.33491516]
[168.34883118 202.11575317]
[176.20059204 214.89659119]
[189.59373474 208.12287903]
[203.50050354 202.47830200]
[217.82589722 198.00141907]
[232.47207642 194.72282410]
[247.33895874 192.66491699]
[262.32501221 191.84173584]
[277.32788086 192.25891113]
[292.24502563 193.91360474]
[306.97457886 196.79449463]
[321.41592407 200.88192749]
[335.47042847 206.14794922]
[349.04202271 212.55661011]
[362.03805542 220.06413269]
[374.36972046 228.61921692]
[385.95278931 238.16343689]
[396.70812988 248.63157654]
[406.56228638 259.95214844]
[415.44793701 272.04779053]
[423.30438232 284.83590698]
[430.07794189 298.22912598]
[435.72235107 312.13598633]
[440.19903564 326.46142578]
[443.47747803 341.10763550]
[445.53521729 355.97454834]
[446.35821533 370.96063232]
[445.94085693 385.96347046]
[444.28598022 400.88061523]
[441.40490723 415.61013794]
[437.31732178 430.05142212]
[432.05111694 444.10586548]
[425.64230347 457.67739868]
[418.13461304 470.67330933]
[409.57937622 483.00488281]
[400.03503418 494.58786011]
[389.56677246 505.34307861]
[378.24609375 515.19708252]
[366.15032959 524.08258057]
[353.36212158 531.93884277]
[339.96881104 538.71228027]
[326.06188965 544.35650635]
[311.73638916 548.83306885]
[297.09014893 552.11126709]
[282.22320557 554.16888428]
[267.23712158 554.99169922]
[252.23428345 554.57415771]
[237.31716919 552.91906738]
[222.58767700 550.03784180]
[208.14642334 545.95007324]
[194.09207153 540.68371582]
[180.52061462 534.27471924]
[167.52476501 526.76690674]
[155.19329834 518.21154785]
[143.61045837 508.66702271]
[132.85536194 498.19863892]
[123.00147247 486.87783813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[28 149]
[29 148]
[30 147]
[32 145]
[33 144]
[34 143]
[35 142]
[36 141]
[37 140]
[38 139]
[64 138]
[65 137]
[66 136]
[67 135]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
