%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[313.65405273 548.55273438]
[324.27908325 537.91241455]
[336.54962158 529.22094727]
[330.07012939 515.69256592]
[323.59063721 502.16424561]
[317.11114502 488.63589478]
[310.63162231 475.10754395]
[295.77066040 474.09906006]
[283.32702637 465.73175049]
[276.69851685 452.16967773]
[277.75527954 437.01119995]
[286.31338501 424.33419800]
[279.83389282 410.80587769]
[273.35440063 397.27752686]
[265.79000854 384.32452393]
[257.19146729 372.03369141]
[248.59289551 359.74285889]
[239.99432373 347.45199585]
[231.39576721 335.16116333]
[222.79719543 322.87033081]
[214.19863892 310.57949829]
[205.60006714 298.28866577]
[191.96446228 292.29537964]
[190.39353943 276.55236816]
[181.79498291 264.26150513]
[170.39674377 264.75799561]
[160.06733704 259.63757324]
[153.42427063 250.06867981]
[152.21295166 238.36253357]
[156.84931946 227.41535950]
[148.62051392 214.87396240]
[140.39170837 202.33256531]
[132.16290283 189.79116821]
[123.93408966 177.24977112]
[115.70528412 164.70835876]
[117.12526703 179.64100647]
[113.92269135 194.29513550]
[106.40280914 207.27401733]
[95.28237152 217.34059143]
[81.62130737 223.53536987]
[66.72170258 225.26791382]
[52.00368881 222.37307739]
[38.87009430 215.12678528]
[28.57273102 204.21971130]
[22.09307671 190.69145203]
[20.04873276 175.83140564]
[22.63455009 161.05596924]
[29.60406876 147.77343750]
[40.29299545 137.24980164]
[53.68252945 130.48812866]
[68.49646759 128.13287354]
[83.32284546 130.40853882]
[96.74848938 137.09822083]
[107.49445343 147.56521606]
[102.88044739 133.29248047]
[98.26643372 119.01975250]
[85.41411591 112.32916260]
[80.95713043 98.54215240]
[87.46083069 85.59425354]
[82.84681702 71.32152557]
[71.23971558 60.57044220]
[74.68695831 46.08024597]
[70.07295227 31.80751228]
[66.74888611 29.01385307]
[64.69342804 25.64641762]
[63.93118286 22.17447472]
[64.33181763 19.02707863]
[65.63661194 16.54602242]
[61.88031387 2.02396321]
[58.12401581 -12.49809647]
[54.36771393 -27.02015495]
[50.61141205 -41.54221344]
[37.27603149 -49.59239197]
[33.67348099 -64.37333679]
[41.43027878 -77.03697205]
[36.25156403 -84.56151581]
[37.72787476 -91.80322266]
[34.18820190 -106.37960052]
[30.64852905 -120.95597076]
[27.10885620 -135.53234863]
[22.82922554 -140.57182312]
[21.87961006 -146.17497253]
[23.68766975 -150.59536743]
[20.58356094 -165.27067566]
[17.47945023 -179.94596863]
[2.41647553 -180.17950439]
[-12.21674824 -183.75952148]
[-25.68622589 -190.50643921]
[-37.31633377 -200.08184814]
[-46.52370834 -212.00543213]
[-52.84651566 -225.67912292]
[-55.96760559 -240.41705322]
[-55.73041916 -255.47996521]
[-52.14686203 -270.11233521]
[-45.39668274 -283.58016968]
[-35.81846237 -295.20794678]
[-23.89264107 -304.41244507]
[-10.21741772 -310.73193359]
[4.52126694 -313.84945679]
[19.58412743 -313.60861206]
[34.21561432 -310.02151489]
[47.68181992 -303.26806641]
[59.30728531 -293.68704224]
[68.50888062 -281.75897217]
[74.82506561 -268.08224487]
[77.93901062 -253.34278870]
[77.69452667 -238.27998352]
[74.10387421 -223.64936829]
[67.34716797 -210.18479919]
[57.76331711 -198.56166077]
[45.83303833 -189.36294556]
[32.15475082 -183.05007935]
[35.25886154 -168.37478638]
[38.36297226 -153.69947815]
[41.68523407 -139.07202148]
[45.22490311 -124.49564362]
[48.76457596 -109.91927338]
[52.30424881 -95.34289551]
[55.95233536 -80.79327393]
[68.87664032 -73.47904968]
[72.89293671 -58.80512238]
[65.13346863 -45.29851532]
[68.88977051 -30.77645683]
[72.64607239 -16.25439644]
[76.40237427 -1.73233747]
[80.15867615 12.78972149]
[84.34568787 27.19350433]
[88.95969391 41.46623611]
[100.23677063 51.19643784]
[97.11955261 66.70751190]
[101.73356628 80.98024750]
[114.58588409 87.67083740]
[119.04286957 101.45784760]
[112.53916931 114.40574646]
[117.15318298 128.67848206]
[121.76718903 142.95121765]
[128.24668884 156.47955322]
[136.47549438 169.02095032]
[144.70429993 181.56236267]
[152.93310547 194.10375977]
[161.16191101 206.64515686]
[169.39071655 219.18655396]
[188.07356262 222.32752991]
[198.35139465 237.86068726]
[194.08581543 255.66294861]
[202.68438721 267.95379639]
[216.93502808 274.82620239]
[217.89091492 289.69009399]
[226.48947144 301.98092651]
[235.08804321 314.27175903]
[243.68659973 326.56259155]
[252.28517151 338.85345459]
[260.88372803 351.14428711]
[269.48229980 363.43511963]
[278.08087158 375.72595215]
[277.90988159 360.72692871]
[284.64657593 347.32479858]
[296.78588867 338.51361084]
[311.61590576 336.26184082]
[325.82354736 341.07250977]
[336.23480225 351.87094116]
[340.52377319 366.24468994]
[337.73226929 380.98263550]
[328.48394775 392.79232788]
[314.84487915 399.03540039]
[299.86209106 398.31713867]
[286.88275146 390.79803467]
[293.36224365 404.32638550]
[299.84173584 417.85470581]
[315.08361816 419.13253784]
[327.55706787 427.81063843]
[333.96942139 441.47619629]
[332.68920898 456.41665649]
[324.15997314 468.62805176]
[330.63946533 482.15640259]
[337.11895752 495.68472290]
[343.59848022 509.21307373]
[350.07797241 522.74145508]
[364.54144287 518.62847900]
[379.49194336 517.01922607]
[394.49938965 517.95996094]
[409.13192749 521.42352295]
[422.96859741 527.31036377]
[435.61123657 535.45111084]
[446.69613647 545.61151123]
[455.90432739 557.49914551]
[462.97091675 570.77215576]
[467.69253540 585.04846191]
[469.93334961 599.91748047]
[469.62890625 614.95129395]
[466.78793335 629.71734619]
[461.49221802 643.79083252]
[453.89407349 656.76684570]
[444.21212769 668.27197266]
[432.72497559 677.97521973]
[419.76312256 685.59747314]
[405.69949341 690.91931152]
[390.93872070 693.78765869]
[375.90548706 694.11999512]
[361.03237915 691.90679932]
[346.74728394 687.21166992]
[333.46121216 680.16973877]
[321.55648804 670.98364258]
[311.37554932 659.91760254]
[303.21136475 647.29010010]
[297.29885864 633.46435547]
[293.80807495 618.83831787]
[292.83953857 603.83264160]
[294.42105103 588.87915039]
[298.50714111 574.40808105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[12 169]
[13 168]
[14 167]
[15 155]
[16 154]
[17 153]
[18 152]
[19 151]
[20 150]
[21 149]
[22 148]
[24 146]
[25 145]
[30 142]
[31 141]
[32 140]
[33 139]
[34 138]
[35 137]
[54 136]
[55 135]
[56 134]
[59 131]
[60 130]
[62 128]
[63 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[75 119]
[77 118]
[78 117]
[79 116]
[80 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
