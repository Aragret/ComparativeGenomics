%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[173.48075867 461.67669678]
[179.21006775 447.78305054]
[186.94619751 434.89859009]
[196.51634216 423.31106567]
[207.70668030 413.27944946]
[220.26722717 405.02777100]
[213.98986816 391.40444946]
[207.71250916 377.78112793]
[201.43515015 364.15780640]
[195.15779114 350.53448486]
[189.50358582 345.77508545]
[188.89007568 336.66128540]
[182.81623840 322.94601440]
[176.74240112 309.23077393]
[170.66856384 295.51550293]
[162.91242981 308.35458374]
[148.05908203 310.44699097]
[137.05786133 300.25027466]
[138.01846313 285.28106689]
[150.23275757 276.57409668]
[164.69557190 280.54678345]
[159.65866089 266.41775513]
[154.62174988 252.28872681]
[149.58482361 238.15968323]
[144.54791260 224.03065491]
[139.51100159 209.90162659]
[134.47407532 195.77259827]
[129.43716431 181.64356995]
[124.40024567 167.51454163]
[112.83846283 158.12442017]
[115.49247742 142.52740479]
[109.01298523 128.99905396]
[101.16123199 116.21821594]
[90.01712799 112.83438110]
[83.99480438 102.86579132]
[86.18403625 91.42688751]
[78.52343750 78.53056335]
[70.86284637 65.63423157]
[57.16282272 57.72095490]
[57.31510544 42.82712936]
[49.65450668 29.93080139]
[42.58127975 24.15089798]
[41.97750473 16.78494644]
[34.50976181 3.77599359]
[27.04202080 -9.23295879]
[19.57427979 -22.24191093]
[12.10653877 -35.25086212]
[4.63879728 -48.25981522]
[-0.87741691 -51.90438843]
[-3.35331607 -57.01975250]
[-2.85100722 -61.76914597]
[-9.92811298 -74.99467468]
[-17.00521851 -88.22019958]
[-24.08232307 -101.44572449]
[-30.89040947 -107.53570557]
[-31.16467667 -114.92126465]
[-38.04409027 -128.25070190]
[-44.92350388 -141.58012390]
[-51.80291367 -154.90956116]
[-58.51957703 -161.10021973]
[-58.68385315 -168.48904419]
[-65.36405182 -181.91941833]
[-72.04424286 -195.34979248]
[-86.16384125 -190.23759460]
[-100.77416229 -186.76824951]
[-115.68473053 -184.98701477]
[-130.70114136 -184.91709900]
[-145.62765503 -186.55941772]
[-160.26965332 -189.89254761]
[-174.43623352 -194.87304688]
[-187.94273376 -201.43598938]
[-200.61306763 -209.49581909]
[-212.28202820 -218.94743347]
[-222.79750061 -229.66761780]
[-232.02239990 -241.51663208]
[-239.83645630 -254.33998108]
[-246.13778687 -267.97048950]
[-250.84423828 -282.23046875]
[-253.89448547 -296.93402100]
[-255.24873352 -311.88940430]
[-254.88932800 -326.90167236]
[-252.82095337 -341.77514648]
[-249.07060242 -356.31585693]
[-243.68713379 -370.33428955]
[-236.74073792 -383.64764404]
[-228.32200623 -396.08236694]
[-218.54064941 -407.47634888]
[-207.52421570 -417.68106079]
[-195.41633606 -426.56344604]
[-182.37483215 -434.00769043]
[-168.56974792 -439.91677856]
[-154.18104553 -444.21365356]
[-139.39631653 -446.84231567]
[-124.40832520 -447.76846313]
[-109.41245270 -446.98001099]
[-94.60420990 -444.48730469]
[-80.17665100 -440.32278442]
[-66.31786346 -434.54074097]
[-53.20853424 -427.21658325]
[-41.01956177 -418.44580078]
[-29.90985870 -408.34271240]
[-20.02426338 -397.03906250]
[-11.49165344 -384.68218994]
[-4.42326927 -371.43319702]
[1.08873868 -357.46481323]
[4.97250938 -342.95916748]
[7.17741060 -328.10534668]
[7.67469597 -313.09698486]
[6.45788336 -298.12979126]
[3.54283595 -283.39886475]
[-1.03244281 -269.09625244]
[-7.20830441 -255.40843201]
[-14.90423393 -242.51383972]
[-24.01989937 -230.58059692]
[-34.43645859 -219.76425171]
[-46.01811218 -210.20585632]
[-58.61386490 -202.02999878]
[-51.93367386 -188.59960938]
[-45.25347900 -175.16923523]
[-38.47348785 -161.78897095]
[-31.59407425 -148.45953369]
[-24.71466064 -135.13011169]
[-17.83524895 -121.80068207]
[-10.85679626 -108.52283478]
[-3.77969050 -95.29730988]
[3.29741502 -82.07177734]
[10.37452030 -68.84625244]
[17.64774895 -55.72755814]
[25.11549187 -42.71860504]
[32.58323288 -29.70965195]
[40.05097198 -16.70070076]
[47.51871490 -3.69174743]
[54.98645401 9.31720448]
[62.55083466 22.27020264]
[70.21143341 35.16653061]
[83.36351776 42.15737915]
[83.75917053 57.97363663]
[91.41976929 70.86996460]
[99.08036804 83.76628876]
[113.91718292 91.59220886]
[113.94207001 108.36646271]
[121.79382324 121.14730835]
[121.52255249 106.14975739]
[126.93965912 92.16208649]
[137.24153137 81.25926971]
[150.89996338 75.05868530]
[165.88880920 74.48014832]
[179.98454285 79.60948181]
[191.09617615 89.68578339]
[197.57533264 103.21428680]
[198.46089172 118.18812561]
[193.62147522 132.38601685]
[183.77497864 143.70178223]
[170.38209534 150.45680237]
[155.42955017 151.64901733]
[141.13546753 147.10154724]
[129.62150574 137.49049377]
[141.54356384 147.89122009]
[138.52928162 162.47763062]
[143.56619263 176.60665894]
[148.60310364 190.73568726]
[153.64002991 204.86471558]
[158.67694092 218.99374390]
[163.71385193 233.12277222]
[168.75077820 247.25180054]
[173.78768921 261.38082886]
[178.82460022 275.50985718]
[184.38383484 289.44165039]
[190.45767212 303.15692139]
[196.53149414 316.87219238]
[202.60533142 330.58746338]
[208.78109741 344.25714111]
[215.05845642 357.88046265]
[221.33583069 371.50375366]
[227.61318970 385.12707520]
[233.89054871 398.75039673]
[248.32415771 394.56369019]
[263.22058105 392.57507324]
[278.24697876 392.82894897]
[293.06771851 395.31967163]
[307.35165405 399.99157715]
[320.77969360 406.74029541]
[333.05184937 415.41506958]
[343.89395142 425.82211304]
[353.06381226 437.72891235]
[360.35650635 450.86944580]
[365.60919189 464.95019531]
[368.70446777 479.65652466]
[369.57321167 494.65997314]
[368.19598389 509.62530518]
[364.60360718 524.21820068]
[358.87628174 538.11260986]
[351.14196777 550.99822998]
[341.57348633 562.58703613]
[330.38458252 572.62030029]
[317.82519531 580.87377930]
[304.17593384 587.16308594]
[289.74172974 591.34771729]
[274.84503174 593.33422852]
[259.81866455 593.07824707]
[244.99829102 590.58538818]
[230.71501160 585.91143799]
[217.28793335 579.16082764]
[205.01701355 570.48425293]
[194.17639160 560.07568359]
[185.00823975 548.16760254]
[177.71739197 535.02600098]
[172.46673584 520.94451904]
[169.37355042 506.23773193]
[168.50694275 491.23419189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 176]
[7 175]
[8 174]
[9 173]
[10 172]
[12 171]
[13 170]
[14 169]
[15 168]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[31 157]
[32 142]
[33 141]
[36 139]
[37 138]
[38 137]
[40 135]
[41 134]
[43 133]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[51 127]
[52 126]
[53 125]
[54 124]
[56 123]
[57 122]
[58 121]
[59 120]
[61 119]
[62 118]
[63 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
