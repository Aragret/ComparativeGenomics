%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[66.42032623 552.53527832]
[77.24658203 542.03564453]
[90.34428406 534.55895996]
[86.37219238 520.09442139]
[82.40009308 505.62991333]
[78.42800140 491.16537476]
[65.29588318 479.52432251]
[70.09944153 461.74771118]
[65.91242981 447.34393311]
[63.30270386 462.11517334]
[57.51379013 475.95309448]
[48.82814407 488.18255615]
[37.66956329 498.20684814]
[24.58249855 505.53680420]
[10.20549202 509.81488037]
[-4.75996590 510.83224487]
[-19.58367920 508.53930664]
[-33.54236603 503.04794312]
[-45.95494843 494.62609863]
[-56.21579361 483.68466187]
[-63.82424927 470.75750732]
[-68.40908051 456.47537231]
[-69.74658966 441.53512573]
[-67.77150726 426.66571045]
[-62.58020782 412.59268188]
[-54.42598724 400.00265503]
[-43.70670700 389.50994873]
[-30.94538116 381.62649536]
[-16.76466751 376.73699951]
[-1.85647261 375.07995605]
[13.05179977 376.73629761]
[27.23274231 381.62515259]
[39.99443436 389.50799561]
[50.71420670 400.00021362]
[58.86901474 412.58984375]
[64.05937958 426.65621948]
[65.61989594 411.73760986]
[67.06932068 396.80780029]
[68.40755463 381.86761475]
[69.74578857 366.92742920]
[60.02800369 355.69799805]
[61.17233658 340.52746582]
[73.01669312 330.41070557]
[74.35492706 315.47052002]
[75.69316101 300.53033447]
[77.03139496 285.59014893]
[70.46041870 272.22332764]
[79.39805603 259.16848755]
[80.73628998 244.22828674]
[71.01850891 232.99885559]
[72.16284180 217.82830811]
[84.00720215 207.71154785]
[85.34543610 192.77136230]
[77.11467743 177.27227783]
[87.83272552 162.29881287]
[88.94837952 147.34034729]
[82.17911530 134.07286072]
[90.92139435 120.88638306]
[78.58493805 107.74966431]
[79.65757751 89.76047516]
[93.46767426 78.18278503]
[94.13745880 63.19775009]
[94.80724335 48.21271133]
[95.47702789 33.22767258]
[96.14681244 18.24263191]
[96.70502472 3.25302219]
[97.15163422 -11.74032784]
[89.82864380 -25.76474953]
[97.94145203 -38.25601196]
[90.61846161 -52.28043365]
[98.73126984 -64.77169800]
[91.40828705 -78.79611969]
[99.52109528 -91.28737640]
[90.41896820 -107.29465485]
[100.21750641 -121.85334778]
[100.44083405 -136.85168457]
[100.66416168 -151.85002136]
[100.88748932 -166.84835815]
[89.39785767 -157.20532227]
[74.44342041 -158.37362671]
[64.59076691 -169.68403625]
[65.48394775 -184.65740967]
[76.61129761 -194.71633911]
[91.59857178 -194.09860229]
[101.86003876 -183.15896606]
[95.60041809 -197.68919373]
[104.61981964 -209.54246521]
[106.18033600 -224.46105957]
[107.40731812 -239.41079712]
[108.30013275 -254.38420105]
[109.08145142 -269.36383057]
[109.75123596 -284.34887695]
[110.42102051 -299.33392334]
[111.09080505 -314.31896973]
[111.76059723 -329.30398560]
[112.43038177 -344.28903198]
[113.10016632 -359.27407837]
[113.76995087 -374.25912476]
[114.43973541 -389.24414062]
[115.10951996 -404.22918701]
[101.46885681 -411.00061035]
[91.76667786 -422.73892212]
[87.68395233 -437.41036987]
[89.92802429 -452.47302246]
[98.11010742 -465.31723022]
[110.81259918 -473.71762085]
[125.83471680 -476.21878052]
[140.57379150 -472.38739014]
[152.47618103 -462.88723755]
[159.47973633 -449.36428833]
[160.37103271 -434.16146851]
[154.99566650 -419.91278076]
[144.28494263 -409.08685303]
[130.09455872 -403.55941772]
[129.42477417 -388.57437134]
[128.75498962 -373.58932495]
[128.08520508 -358.60427856]
[127.41542053 -343.61926270]
[126.74563599 -328.63421631]
[126.07584381 -313.64916992]
[125.40605927 -298.66412354]
[124.73627472 -283.67910767]
[124.06649017 -268.69406128]
[126.90818787 -261.87155151]
[123.27353668 -253.49139404]
[122.38072205 -238.51797485]
[124.43506622 -235.65231323]
[125.20346069 -231.64924622]
[124.16644287 -227.12399292]
[121.09894562 -222.90054321]
[119.53842163 -207.98193359]
[125.90965271 -194.51878357]
[116.77864075 -181.59843445]
[115.88582611 -166.62503052]
[115.66249847 -151.62669373]
[115.43917084 -136.62835693]
[115.21584320 -121.63002014]
[123.41326904 -112.73458862]
[123.34996033 -100.23739624]
[114.51444244 -90.84077454]
[121.86937714 -77.88877869]
[113.72462463 -64.32508850]
[121.07955170 -51.37309265]
[112.93479919 -37.80940628]
[120.28973389 -24.85740852]
[112.14498138 -11.29372215]
[111.69837952 3.69962811]
[114.64133453 10.47906780]
[111.13185120 18.91241646]
[110.46206665 33.89745712]
[109.79228210 48.88249588]
[109.12249756 63.86753464]
[108.45271301 78.85256958]
[117.55715942 85.49454498]
[122.36231995 95.68852234]
[121.69152832 106.93827057]
[115.70906067 116.48901367]
[105.87985229 122.00202942]
[112.56931305 136.33946228]
[103.90682983 148.45600891]
[102.79118347 163.41445923]
[110.60117340 173.67929077]
[109.36399841 186.11524963]
[100.28562164 194.10960388]
[98.94738007 209.04978943]
[108.80524445 221.11047363]
[107.23526001 236.24288940]
[95.67647552 245.56652832]
[94.33824158 260.50671387]
[100.81349945 274.94213867]
[91.97158051 286.92837524]
[90.63334656 301.86856079]
[89.29511261 316.80874634]
[87.95687866 331.74893188]
[97.81473541 343.80963135]
[96.24475098 358.94201660]
[84.68597412 368.26565552]
[83.34774017 383.20584106]
[82.00950623 398.14602661]
[84.36081696 406.97265625]
[80.53850555 413.29812622]
[78.97798157 428.21673584]
[80.31621552 443.15692139]
[84.50322723 457.56069946]
[95.41031647 464.44534302]
[98.60115814 476.52847290]
[92.89252472 487.19326782]
[96.86461639 501.65780640]
[100.83671570 516.12231445]
[104.80880737 530.58685303]
[119.88802338 530.32592773]
[134.55819702 533.82397461]
[147.89717102 540.86126709]
[159.06642151 550.99530029]
[167.36384583 563.58905029]
[172.26786804 577.85095215]
[173.47019958 592.88439941]
[170.89529419 607.74444580]
[164.70498657 621.49694824]
[155.28840637 633.27740479]
[143.23750305 642.34527588]
[129.30978394 648.13055420]
[114.38077545 650.26959229]
[99.38891602 648.62792969]
[85.27661896 643.30871582]
[72.93098450 634.64642334]
[63.12807465 623.18542480]
[56.48410416 609.64630127]
[53.41672516 594.88000488]
[54.11874771 579.81488037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[6 187]
[8 184]
[9 183]
[36 182]
[37 181]
[38 179]
[39 178]
[40 177]
[43 174]
[44 173]
[45 172]
[46 171]
[48 169]
[49 168]
[52 165]
[53 164]
[55 161]
[56 160]
[58 158]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 147]
[67 146]
[69 144]
[71 142]
[73 140]
[75 137]
[76 136]
[77 135]
[78 134]
[85 133]
[87 131]
[88 130]
[89 126]
[90 125]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
