%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[33.34520340 296.04653931]
[37.68567276 310.42349243]
[40.29523087 325.21289062]
[41.13724136 340.20715332]
[40.19988251 355.19573975]
[37.49631882 369.96823120]
[33.06449890 384.31729126]
[26.96664429 398.04144287]
[19.28835297 410.94805908]
[10.13742065 422.85589600]
[-0.35768956 433.59783936]
[-12.04964256 443.02304077]
[-24.77430153 450.99920654]
[-38.35303497 457.41439819]
[-52.59521103 462.17849731]
[-67.30090332 465.22463989]
[-82.26365662 466.51010132]
[-97.27341461 466.01678467]
[-112.11947632 463.75167847]
[-126.59342194 459.74649048]
[-140.49205017 454.05752563]
[-153.62026978 446.76461792]
[-165.79374695 437.97015381]
[-176.84161377 427.79760742]
[-186.60876465 416.38973999]
[-194.95806885 403.90673828]
[-201.77233887 390.52383423]
[-206.95591736 376.42892456]
[-210.43600464 361.81982422]
[-212.16377258 346.90167236]
[-212.11495972 331.88388062]
[-210.29023743 316.97729492]
[-206.71524048 302.39114380]
[-201.44015503 288.33020020]
[-194.53901672 274.99188232]
[-186.10871887 262.56344604]
[-176.26762390 251.21931458]
[-165.15385437 241.11878967]
[-152.92344666 232.40365601]
[-139.74810791 225.19625854]
[-125.81278229 219.59776306]
[-111.31311035 215.68678284]
[-96.45263672 213.51821899]
[-81.43997955 213.12249756]
[-66.48590088 214.50520325]
[-51.80032730 217.64691162]
[-37.58942413 222.50350952]
[-24.05268478 229.00682068]
[-11.38014889 237.06555176]
[-1.89125073 225.44828796]
[7.59764767 213.83102417]
[9.39435291 206.66209412]
[17.31533051 202.11280823]
[19.59350204 187.39346313]
[34.40043640 181.81983948]
[44.06124878 170.34515381]
[53.72205734 158.87045288]
[62.50266266 146.70898438]
[70.35441589 133.92814636]
[78.20617676 121.14730835]
[86.05792999 108.36646271]
[84.03924561 96.89623260]
[90.20932007 87.01840973]
[101.40256500 83.80086517]
[109.44374084 71.13834381]
[103.89958954 56.76585007]
[107.83547974 42.05659866]
[119.53958130 32.59730911]
[134.39163208 31.85261726]
[142.43280029 19.19009209]
[150.47398376 6.52756691]
[147.24536133 -8.71099663]
[155.58064270 -21.43804741]
[170.12817383 -24.42212486]
[178.16935730 -37.08465195]
[186.21052551 -49.74717712]
[194.25169373 -62.40969849]
[201.52493286 -75.52839661]
[208.00442505 -89.05673981]
[214.48391724 -102.58508301]
[220.96340942 -116.11343384]
[219.94644165 -131.90191650]
[232.42237854 -140.03825378]
[238.90187073 -153.56660461]
[245.38137817 -167.09495544]
[251.86087036 -180.62329102]
[238.95880127 -188.29420471]
[226.79629517 -197.09078979]
[215.47128296 -206.94219971]
[205.07495117 -217.76913452]
[195.69099426 -229.48440552]
[187.39497375 -241.99369812]
[180.25369263 -255.19627380]
[174.32463074 -268.98587036]
[169.65554810 -283.25140381]
[166.28402710 -297.87805176]
[164.23721313 -312.74807739]
[163.53158569 -327.74166870]
[164.17283630 -342.73815918]
[166.15579224 -357.61682129]
[169.46447754 -372.25781250]
[174.07228088 -386.54327393]
[179.94207764 -400.35818481]
[187.02661133 -413.59130859]
[195.26885986 -426.13610840]
[204.60243225 -437.89154053]
[214.95217896 -448.76303101]
[226.23480225 -458.66296387]
[238.35942078 -467.51168823]
[251.22843933 -475.23791504]
[264.73822021 -481.77944946]
[278.77999878 -487.08364868]
[293.24072266 -491.10778809]
[308.00396729 -493.81945801]
[322.95083618 -495.19683838]
[337.96099854 -495.22885132]
[352.91363525 -493.91519165]
[367.68829346 -491.26647949]
[382.16601562 -487.30401611]
[396.23028564 -482.05972290]
[409.76785278 -475.57580566]
[422.66967773 -467.90451050]
[434.83190918 -459.10757446]
[446.15661621 -449.25579834]
[456.55264282 -438.42855835]
[465.93621826 -426.71298218]
[474.23187256 -414.20346069]
[481.37274170 -401.00064087]
[487.30139160 -387.21087646]
[491.97003174 -372.94519043]
[495.34112549 -358.31845093]
[497.38748169 -343.44836426]
[498.09265137 -328.45474243]
[497.45092773 -313.45825195]
[495.46752930 -298.57968140]
[492.15838623 -283.93878174]
[487.55014038 -269.65347290]
[481.67993164 -255.83872986]
[474.59500122 -242.60581970]
[466.35235596 -230.06127930]
[457.01843262 -218.30612183]
[446.66833496 -207.43496704]
[435.38543701 -197.53536987]
[423.26052856 -188.68702698]
[410.39129639 -180.96118164]
[396.88128662 -174.42004395]
[382.83935547 -169.11627197]
[368.37850952 -165.09257507]
[353.61517334 -162.38136292]
[338.66827393 -161.00444031]
[323.65811157 -160.97290039]
[308.70553589 -162.28701782]
[293.93093872 -164.93617249]
[279.45330811 -168.89907837]
[265.38922119 -174.14379883]
[258.90972900 -160.61544800]
[252.43022156 -147.08711243]
[245.95072937 -133.55876160]
[247.43116760 -118.73791504]
[234.49176025 -109.63393402]
[228.01226807 -96.10559082]
[221.53277588 -82.57724762]
[215.05326843 -69.04889679]
[228.83674622 -74.96632385]
[243.49102783 -71.76448059]
[253.55046082 -60.63757706]
[255.26309204 -45.73566818]
[247.99017334 -32.61680222]
[234.44432068 -26.17398834]
[219.67779541 -28.81023979]
[209.19815063 -39.54230118]
[206.91423035 -54.36852646]
[198.87304688 -41.70600128]
[190.83187866 -29.04347801]
[182.79071045 -16.38095284]
[186.27607727 -1.94530964]
[178.30155945 11.01084137]
[163.13650513 14.56873989]
[155.09533691 27.23126411]
[147.05415344 39.89379120]
[152.69584656 53.65276337]
[149.11148071 68.26838684]
[137.47212219 78.08565521]
[122.10626221 79.17951965]
[114.06509399 91.84204102]
[113.79046631 108.61406708]
[98.83876801 116.21821594]
[90.98701477 128.99905396]
[83.13526154 141.77990723]
[75.28350830 154.56074524]
[89.16342926 148.87324524]
[104.04049683 150.78970337]
[116.02587891 159.80915833]
[121.98662567 173.57395935]
[120.36460876 188.48599243]
[111.58382416 200.64732361]
[97.93954468 206.87898254]
[82.99835205 205.55204773]
[70.66584015 197.01335144]
[64.16569519 183.49491882]
[65.19676208 168.53125000]
[55.53594971 180.00595093]
[45.87513733 191.48065186]
[42.90596008 207.02075195]
[28.79003143 211.77362061]
[19.21491051 223.31991577]
[9.72601223 234.93717957]
[0.23711428 246.55444336]
[10.66369438 257.36291504]
[19.73870850 269.32870483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 208]
[50 207]
[51 206]
[53 205]
[55 203]
[56 202]
[57 201]
[58 190]
[59 189]
[60 188]
[61 187]
[64 185]
[65 184]
[69 180]
[70 179]
[71 178]
[74 175]
[75 174]
[76 173]
[77 172]
[78 163]
[79 162]
[80 161]
[81 160]
[83 158]
[84 157]
[85 156]
[86 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
