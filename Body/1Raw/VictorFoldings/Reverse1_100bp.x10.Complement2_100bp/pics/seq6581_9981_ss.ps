%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[-14.22809219 368.12908936]
[-9.83722591 382.49145508]
[-7.20960903 397.27838135]
[-6.38355923 412.27420044]
[-7.37112379 427.26025391]
[-10.15789986 442.01800537]
[-14.70324993 456.33224487]
[-20.94088745 469.99420166]
[-28.77985001 482.80468750]
[-38.10582352 494.57684326]
[-48.78280640 505.13900757]
[-60.65509415 514.33715820]
[-73.54956055 522.03717041]
[-87.27816010 528.12670898]
[-101.64069366 532.51708984]
[-116.42771149 535.14410400]
[-131.42358398 535.96960449]
[-146.40960693 534.98150635]
[-161.16725159 532.19415283]
[-175.48130798 527.64825439]
[-189.14303589 521.41015625]
[-201.95321655 513.57067871]
[-213.72502136 504.24426270]
[-224.28678894 493.56689453]
[-233.48449707 481.69427490]
[-241.18402100 468.79949951]
[-247.27308655 455.07067871]
[-251.66287231 440.70797729]
[-254.28938293 425.92086792]
[-255.11431885 410.92498779]
[-254.12562561 395.93899536]
[-251.33775330 381.18142700]
[-246.79132080 366.86755371]
[-240.55267334 353.20605469]
[-232.71275330 340.39617920]
[-223.38589478 328.62472534]
[-212.70811462 318.06335449]
[-200.83514404 308.86608887]
[-187.94010925 301.16705322]
[-174.21104431 295.07849121]
[-159.84819031 290.68923950]
[-145.06097412 288.06329346]
[-130.06504822 287.23892212]
[-115.07909393 288.22814941]
[-100.32165527 291.01660156]
[-86.00793457 295.56353760]
[-72.34667206 301.80270386]
[-59.53708649 309.64312744]
[-50.22220230 297.88586426]
[-40.90731812 286.12860107]
[-31.59243584 274.37136841]
[-29.75352669 259.59069824]
[-15.11910152 253.57870483]
[-5.80421829 241.82145691]
[-3.96530747 227.04080200]
[10.66911697 221.02879333]
[19.98400116 209.27154541]
[29.29888344 197.51429749]
[14.32545948 196.62178040]
[5.56305981 184.44720459]
[9.47099781 169.96520996]
[23.16848755 163.85139465]
[36.55825043 170.61262512]
[39.77022171 185.26316833]
[49.93376923 174.23129272]
[60.09731674 163.19941711]
[70.26086426 152.16754150]
[78.01725769 139.32859802]
[83.05416870 125.19956970]
[88.09108734 111.07054138]
[84.64415741 94.65423584]
[97.54031372 83.92738342]
[102.36631012 69.72492981]
[107.19230652 55.52247238]
[111.80632019 41.24974060]
[116.20731354 26.90989113]
[120.60831451 12.57004452]
[117.26050568 -2.89290261]
[128.39146423 -12.78992176]
[132.79246521 -27.12976837]
[128.25408936 -44.97591019]
[141.55807495 -56.42016983]
[145.74508667 -70.82395172]
[149.93209839 -85.22772980]
[153.79640198 -99.72142792]
[157.33607483 -114.29779816]
[160.87574768 -128.87417603]
[164.41542053 -143.45054626]
[150.35421753 -148.72691345]
[137.03155518 -155.65974426]
[124.64171600 -164.14791870]
[113.36537933 -174.06767273]
[103.36698151 -185.27433777]
[94.79233551 -197.60450745]
[87.76648712 -210.87834167]
[82.39188385 -224.90228271]
[78.74691010 -239.47183228]
[76.88471985 -254.37449646]
[76.83247375 -269.39297485]
[78.59091949 -284.30822754]
[82.13442993 -298.90280151]
[87.41132355 -312.96380615]
[94.34464264 -326.28619385]
[102.83328247 -338.67572021]
[112.75346375 -349.95169067]
[123.96050262 -359.94967651]
[136.29098511 -368.52386475]
[149.56507874 -375.54919434]
[163.58923340 -380.92327881]
[178.15890503 -384.56771851]
[193.06164551 -386.42935181]
[208.08012390 -386.48101807]
[222.99533081 -384.72201538]
[237.58975220 -381.17797852]
[251.65055847 -375.90054321]
[264.97268677 -368.96673584]
[277.36190796 -360.47763062]
[288.63751221 -350.55703735]
[298.63507080 -339.34960938]
[307.20877075 -327.01879883]
[314.23364258 -313.74444580]
[319.60717773 -299.72009277]
[323.25106812 -285.15029907]
[325.11215210 -270.24746704]
[325.16326904 -255.22900391]
[323.40371704 -240.31385803]
[319.85910034 -225.71957397]
[314.58117676 -211.65896606]
[307.64685059 -198.33708191]
[299.15728760 -185.94819641]
[289.23626709 -174.67297363]
[278.02847290 -164.67582703]
[265.69735718 -156.10256958]
[252.42272949 -149.07820129]
[238.39817810 -143.70518494]
[223.82823181 -140.06184387]
[208.92535400 -138.20132446]
[193.90686035 -138.15075684]
[178.99179077 -139.91087341]
[175.45211792 -125.33450317]
[171.91244507 -110.75812531]
[168.37277222 -96.18175507]
[169.88513184 -92.99661255]
[169.92987061 -88.92070007]
[168.10513306 -84.65178680]
[164.33587646 -81.04071808]
[160.14886475 -66.63694000]
[155.96185303 -52.23315811]
[161.51107788 -41.48454285]
[158.14068604 -29.45024872]
[147.13230896 -22.72877121]
[142.73130798 -8.38892365]
[146.39390564 6.04834127]
[134.94816589 16.97104263]
[130.54716492 31.31089020]
[126.14616394 45.65073776]
[127.55265045 50.21482086]
[126.10693359 55.71090317]
[121.39476776 60.34846878]
[116.56876373 74.55092621]
[111.74276733 88.75337982]
[116.25178528 99.49163055]
[112.42272949 110.49069977]
[102.22011566 116.10745239]
[97.18319702 130.23648071]
[92.14628601 144.36550903]
[102.90755463 133.91587830]
[115.64015961 125.98612976]
[129.76483154 120.93702698]
[144.63902283 118.99826813]
[159.58602905 120.25806427]
[173.92585754 124.65908813]
[187.00616455 132.00112915]
[198.23187256 141.95016479]
[207.09230042 154.05360413]
[213.18432617 167.76078796]
[216.23083496 182.44816589]
[216.09320068 197.44752502]
[212.77772522 212.07652283]
[206.43519592 225.66963196]
[197.35418701 237.60844421]
[185.94781494 247.34983826]
[172.73500061 254.45062256]
[158.31681824 258.58779907]
[143.34921265 259.57312012]
[128.51310730 257.36175537]
[114.48345184 252.05432129]
[101.89849854 243.89228821]
[91.33078003 233.24694824]
[83.26104736 220.60260010]
[78.05642700 206.53448486]
[75.95370483 191.68260193]
[77.04852295 176.72261047]
[81.29273987 162.33108521]
[71.12919617 173.36296082]
[60.96564865 184.39483643]
[50.80210114 195.42671204]
[41.05613327 206.82917786]
[31.74125099 218.58642578]
[22.42636871 230.34368896]
[19.92119598 245.96528625]
[5.95303297 251.13633728]
[-3.36184978 262.89358521]
[-5.86702347 278.51519775]
[-19.83518600 283.68624878]
[-29.15006828 295.44348145]
[-38.46495056 307.20074463]
[-47.77983475 318.95800781]
[-37.21726608 329.63458252]
[-28.01866531 341.50653076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 208]
[49 207]
[50 206]
[51 205]
[53 203]
[54 202]
[56 200]
[57 199]
[58 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 166]
[69 165]
[70 164]
[72 161]
[73 160]
[74 159]
[75 156]
[76 155]
[77 154]
[79 152]
[80 151]
[82 148]
[83 147]
[84 146]
[85 142]
[86 141]
[87 140]
[88 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
