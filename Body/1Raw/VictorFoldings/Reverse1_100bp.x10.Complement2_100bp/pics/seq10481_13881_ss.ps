%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[98.47118378 776.68487549]
[86.73072052 767.28967285]
[76.74706268 756.04534912]
[68.80744934 743.27545166]
[63.14031982 729.34735107]
[59.90873337 714.66180420]
[59.20566559 699.64135742]
[61.05134583 684.71820068]
[65.39266968 670.32165527]
[72.10473633 656.86590576]
[80.99441528 644.73822021]
[91.80593872 634.28741455]
[104.22823334 625.81420898]
[117.90388489 619.56250000]
[132.43942261 615.71203613]
[131.10119629 600.77185059]
[129.76295471 585.83166504]
[128.42472839 570.89147949]
[119.58280182 558.90521240]
[126.05805969 544.46978760]
[124.71982574 529.52960205]
[123.38159180 514.58941650]
[121.93217468 499.65960693]
[120.37165070 484.74099731]
[118.81112671 469.82241821]
[117.25060272 454.90380859]
[115.69007874 439.98519897]
[112.60996246 436.33526611]
[111.79000854 430.71170044]
[114.31199646 424.60012817]
[113.19635010 409.64169312]
[112.08070374 394.68322754]
[101.43299103 380.73355103]
[109.56620789 364.21289062]
[108.22797394 349.27270508]
[99.38605499 337.28649902]
[105.86131287 322.85104370]
[104.52307892 307.91085815]
[103.18484497 292.97067261]
[101.84660339 278.03048706]
[100.50836945 263.09030151]
[99.17013550 248.15013123]
[96.14470673 244.45475769]
[95.40856171 238.81958008]
[98.02127075 232.74626160]
[97.12845612 217.77285767]
[96.23563385 202.79945374]
[95.34281921 187.82603455]
[92.42875671 184.04222107]
[91.86071777 178.38763428]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[90.80056000 58.05845642]
[89.46232605 43.11827469]
[88.12409210 28.17808723]
[79.18645477 15.12323380]
[85.75743103 1.75642633]
[84.41919708 -13.18375874]
[70.79209137 -24.15287018]
[69.34291077 -41.24716187]
[80.48175049 -53.84735870]
[78.92122650 -68.76596069]
[77.13876343 -83.65968323]
[75.13475037 -98.52520752]
[73.13073730 -113.39073944]
[71.12672424 -128.25627136]
[59.54680252 -135.13522339]
[54.12226105 -147.25070190]
[56.62896729 -160.08808899]
[65.93184662 -169.00357056]
[64.14938354 -183.89729309]
[62.36691666 -198.79101562]
[60.58445358 -213.68472290]
[58.46982956 -228.53492737]
[56.02410126 -243.33419800]
[53.57837296 -258.13345337]
[51.02254105 -272.91412354]
[48.35674667 -287.67532349]
[45.69094849 -302.43655396]
[43.02515411 -317.19778442]
[40.35935974 -331.95898438]
[25.31347084 -332.89956665]
[10.93009377 -337.41418457]
[-1.95454121 -345.24041748]
[-12.59133816 -355.92318726]
[-20.36188889 -368.84149170]
[-24.81442261 -383.24420166]
[-25.69007492 -398.29400635]
[-22.93793678 -413.11593628]
[-16.71801376 -426.84820557]
[-7.39192390 -438.69253540]
[4.49812555 -447.96020508]
[18.26086235 -454.11248779]
[33.09614182 -456.79165649]
[48.14145660 -455.84194946]
[62.52209473 -451.31860352]
[75.40198517 -443.48458862]
[86.03230286 -432.79534912]
[93.79502106 -419.87237549]
[98.23881531 -405.46694946]
[99.10534668 -390.41662598]
[96.34422302 -375.59637451]
[90.11597443 -361.86782837]
[80.78270721 -350.02920532]
[68.88703918 -340.76870728]
[55.12057495 -334.62478638]
[57.78637314 -319.86355591]
[60.45216751 -305.10235596]
[63.11796188 -290.34112549]
[65.78376007 -275.57992554]
[70.06594849 -269.55624390]
[68.37764740 -260.57919312]
[70.82337189 -245.77992249]
[73.26909637 -230.98065186]
[75.90711975 -228.64115906]
[77.54304504 -224.90769958]
[77.53405762 -220.26515198]
[75.47817230 -215.46719360]
[77.26063538 -200.57347107]
[79.04309845 -185.67976379]
[80.82556915 -170.78604126]
[94.47850800 -160.96585083]
[96.85142517 -143.97514343]
[85.99224854 -130.26028442]
[87.99626160 -115.39475250]
[90.00027466 -100.52922058]
[92.00429535 -85.66369629]
[95.19171143 -82.10710144]
[96.17874146 -76.51042175]
[93.83983612 -70.32648468]
[95.40036011 -55.40788269]
[106.44683075 -48.77426147]
[111.73455811 -36.81089783]
[109.12812042 -23.79487038]
[99.35938263 -14.52199268]
[100.69761658 0.41819212]
[109.53953552 12.40442371]
[103.06427765 26.83985329]
[104.40251160 41.78004074]
[105.74074554 56.72022247]
[107.80290222 58.61907578]
[109.23715973 61.44918823]
[109.68502808 64.97548676]
[108.87968445 68.83760834]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[110.31623077 186.93322754]
[111.20904541 201.90663147]
[112.10186005 216.88003540]
[112.99467468 231.85343933]
[114.11032104 246.81188965]
[115.44855499 261.75207520]
[116.78678894 276.69226074]
[118.12502289 291.63244629]
[119.46325684 306.57263184]
[120.80149841 321.51281738]
[129.73913574 334.56768799]
[123.16815948 347.93447876]
[124.50639343 362.87466431]
[133.88554382 371.72872925]
[134.69258118 384.19998169]
[127.03915405 393.56756592]
[128.15480042 408.52603149]
[129.27044678 423.48449707]
[130.60868835 438.42468262]
[132.16920471 453.34326172]
[133.72973633 468.26187134]
[135.29025269 483.18048096]
[136.85078430 498.09909058]
[140.85600281 506.30859375]
[138.32177734 513.25115967]
[139.66001892 528.19134521]
[140.99824524 543.13153076]
[149.93588257 556.18640137]
[143.36491394 569.55322266]
[144.70314026 584.49340820]
[146.04138184 599.43359375]
[147.37960815 614.37377930]
[162.36805725 615.57971191]
[176.93707275 619.30151367]
[190.66748047 625.43212891]
[203.16419983 633.79510498]
[214.06770325 644.14990234]
[223.06425476 656.19854736]
[229.89503479 669.59436035]
[234.36347961 683.95202637]
[236.34103394 698.85827637]
[235.77079773 713.88433838]
[232.66917419 728.59790039]
[227.12541199 742.57556152]
[219.29901123 755.41516113]
[209.41516113 766.74731445]
[197.75822449 776.24591064]
[184.66362000 783.63775635]
[170.50807190 788.71008301]
[155.69888306 791.31695557]
[140.66213989 791.38342285]
[125.83048248 788.90759277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 190]
[16 189]
[17 188]
[18 187]
[20 185]
[21 184]
[22 183]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[30 176]
[31 175]
[32 174]
[34 171]
[35 170]
[37 168]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[45 162]
[46 161]
[47 160]
[48 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[57 152]
[58 151]
[59 146]
[60 145]
[61 144]
[63 142]
[64 141]
[67 137]
[68 136]
[69 133]
[70 132]
[71 131]
[72 130]
[76 127]
[77 126]
[78 125]
[79 124]
[80 120]
[81 119]
[82 118]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
