%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[27.03893661 714.78601074]
[14.21264267 706.80712891]
[4.15484905 695.53692627]
[-2.31910443 681.88903809]
[-4.68440247 666.96984863]
[-2.74930167 651.98876953]
[3.32932830 638.16027832]
[13.05872059 626.60540771]
[25.65015602 618.26080322]
[40.08290482 613.80297852]
[39.85957718 598.80462646]
[39.63624954 583.80627441]
[39.41292191 568.80792236]
[39.18959427 553.80963135]
[38.96626663 538.81127930]
[28.13296127 528.65374756]
[27.69281960 513.44647217]
[38.42041016 502.15240479]
[38.19708252 487.15405273]
[28.39854431 472.59536743]
[37.50067139 456.58807373]
[37.05406570 441.59472656]
[30.02247238 454.84451294]
[18.72715759 464.71447754]
[4.65421295 469.90600586]
[-10.34482479 469.73614502]
[-24.29657364 464.22717285]
[-35.36544037 454.10391235]
[-42.09513092 440.69827271]
[-43.60022736 425.77398682]
[-39.68272018 411.29458618]
[-30.85801697 399.16506958]
[-18.28716278 390.98135376]
[-3.62406778 387.82006836]
[11.20208359 390.09716797]
[24.24065781 397.51306152]
[33.77620697 409.09207153]
[38.55449677 423.31311035]
[41.43976974 408.59323120]
[44.32504272 393.87335205]
[47.21031570 379.15344238]
[50.09558868 364.43356323]
[52.98086166 349.71365356]
[55.64665604 334.95245361]
[58.09238434 320.15316772]
[52.53378677 306.33465576]
[62.41764450 293.98071289]
[64.86337280 279.18145752]
[67.30909729 264.38217163]
[54.57272720 254.43746948]
[48.55477905 239.33978271]
[50.98575211 223.17477417]
[61.29578018 210.36857605]
[76.74464417 204.47583008]
[78.96976471 189.64178467]
[81.19487762 174.80773926]
[83.41999817 159.97369385]
[74.38783264 148.18576050]
[76.43309784 133.11022949]
[88.85861969 123.71638489]
[91.08373260 108.88234711]
[92.97702789 94.00231171]
[94.53755188 79.08370209]
[96.09807587 64.16510010]
[97.65859985 49.24649429]
[99.10801697 34.31668472]
[100.44625092 19.37650108]
[101.78448486 4.43631554]
[103.12271881 -10.50386906]
[100.92488861 -15.23849106]
[100.77767944 -19.87870979]
[102.30171967 -23.65922928]
[104.86891937 -26.07622337]
[99.04469299 -40.78638840]
[108.41300964 -52.36585617]
[110.41702271 -67.23138428]
[112.42103577 -82.09690857]
[106.59680939 -96.80707550]
[115.96512604 -108.38654327]
[117.96913910 -123.25206757]
[116.01429749 -132.17488098]
[120.11524963 -138.32336426]
[122.34036255 -153.15740967]
[124.23365784 -168.03744507]
[125.79418182 -182.95605469]
[127.35470581 -197.87466431]
[128.91522217 -212.79325867]
[130.47575378 -227.71186829]
[132.03627014 -242.63047791]
[132.37124634 -257.62673950]
[131.47842407 -272.60012817]
[130.58561707 -287.57354736]
[129.69279480 -302.54693604]
[114.96846771 -305.91900635]
[101.79126740 -313.30398560]
[91.22940826 -324.10324097]
[84.13909912 -337.44131470]
[81.09511566 -352.23693848]
[82.34422302 -367.29074097]
[87.78516388 -381.38232422]
[96.97686005 -393.36935425]
[109.17418671 -402.28015137]
[123.38835907 -407.39230347]
[138.46708679 -408.29138184]
[153.18803406 -404.90454102]
[166.35780334 -397.50631714]
[176.90881348 -386.69647217]
[183.98571777 -373.35128784]
[187.01483154 -358.55258179]
[185.75061035 -343.50006104]
[180.29551697 -329.41397095]
[171.09178162 -317.43615723]
[158.88549805 -308.53762817]
[144.66619873 -303.43975830]
[145.55902100 -288.46636963]
[146.45184326 -273.49295044]
[147.34465027 -258.51956177]
[155.05021667 -271.38906860]
[167.80560303 -279.28210449]
[182.76119995 -280.43539429]
[196.57589722 -274.59124756]
[206.16346741 -263.05529785]
[209.38201904 -248.40466309]
[205.51249695 -233.91235352]
[195.41940308 -222.81599426]
[181.35752869 -217.59452820]
[166.46833801 -219.41445923]
[154.07812500 -227.86918640]
[146.95487976 -241.06994629]
[145.39434814 -226.15135193]
[143.83383179 -211.23274231]
[142.27330017 -196.31413269]
[140.71278381 -181.39553833]
[139.15226746 -166.47692871]
[141.07659912 -163.52239990]
[141.66548157 -159.48899841]
[140.42742920 -155.01457214]
[137.17440796 -150.93229675]
[134.94929504 -136.09825134]
[132.83467102 -121.24805450]
[130.83065796 -106.38253021]
[136.79821777 -92.73564148]
[127.28656006 -80.09289551]
[125.28254700 -65.22737122]
[123.27853394 -50.36183929]
[129.24609375 -36.71495438]
[119.73444366 -24.07220840]
[118.06290436 -9.16563511]
[116.72467041 5.77454996]
[115.38643646 20.71473503]
[114.04820251 35.65491867]
[116.58242035 42.59750748]
[112.57720184 50.80701828]
[111.01667786 65.72562408]
[109.45615387 80.64422607]
[107.89562988 95.56282806]
[109.87499237 98.87258911]
[110.38585663 103.03874969]
[109.07845306 107.38590240]
[105.91777802 111.10746002]
[103.69266510 125.94150543]
[112.81517792 138.56756592]
[110.34727478 153.57969666]
[98.25404358 162.19882202]
[96.02892303 177.03285217]
[93.80380249 191.86689758]
[91.57868958 206.70094299]
[102.95853424 214.83494568]
[109.69145203 227.02033997]
[110.51341248 240.85156250]
[105.32090759 253.62603760]
[95.18009186 262.87225342]
[82.10836792 266.82791138]
[79.66264343 281.62716675]
[77.21691132 296.42645264]
[82.60057831 311.30349731]
[72.89165497 322.59890747]
[70.44593048 337.39816284]
[72.41261292 343.71035767]
[71.09421539 349.23837280]
[67.70075226 352.59893799]
[64.81548309 367.31881714]
[61.93020630 382.03872681]
[59.04493332 396.75860596]
[56.15966034 411.47851562]
[53.27439117 426.19839478]
[52.04741287 441.14813232]
[52.49401855 456.14147949]
[61.32953262 465.53808594]
[61.39284515 478.03527832]
[53.19541931 486.93072510]
[53.41874695 501.92907715]
[64.47784424 512.89874268]
[64.49067688 528.11236572]
[53.96460342 538.58795166]
[54.18793106 553.58630371]
[54.41125870 568.58459473]
[54.63458633 583.58294678]
[54.85791397 598.58129883]
[55.08124161 613.57965088]
[69.64031982 617.60577393]
[82.47462463 625.57177734]
[92.54373169 636.83190918]
[99.03139496 650.47326660]
[101.41167450 665.39007568]
[99.49163055 680.37304688]
[93.42689514 694.20764160]
[83.70911407 705.77227783]
[71.12606812 714.12957764]
[56.69780731 718.60192871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[18 192]
[19 191]
[21 188]
[22 187]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 178]
[45 177]
[47 175]
[48 174]
[49 173]
[54 167]
[55 166]
[56 165]
[57 164]
[60 161]
[61 160]
[62 156]
[63 155]
[64 154]
[65 153]
[66 151]
[67 150]
[68 149]
[69 148]
[73 147]
[75 145]
[76 144]
[77 143]
[79 141]
[80 140]
[82 139]
[83 138]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
