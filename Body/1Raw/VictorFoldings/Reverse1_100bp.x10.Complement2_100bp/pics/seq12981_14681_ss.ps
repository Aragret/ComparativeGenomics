%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[132.37886047 651.87438965]
[119.57469940 644.01892090]
[107.90547180 634.55932617]
[97.57084656 623.65740967]
[88.74766541 611.49987793]
[81.58689880 598.29461670]
[76.21107483 584.26770020]
[72.71218872 569.65899658]
[71.15010834 554.71862793]
[71.55155945 539.70220947]
[73.90967560 524.86663818]
[78.18411255 510.46575928]
[84.30171204 496.74606323]
[92.15781403 483.94229126]
[101.61797333 472.27352905]
[112.52032471 461.93942261]
[124.67831421 453.11682129]
[137.88389587 445.95666504]
[151.91110229 440.58151245]
[166.51992798 437.08331299]
[164.95941162 422.16473389]
[163.39888000 407.24612427]
[161.83836365 392.32751465]
[160.27783203 377.40890503]
[158.71731567 362.49029541]
[143.82839966 351.83969116]
[141.41130066 333.37158203]
[153.46406555 318.75497437]
[151.46005249 303.88943481]
[149.45603943 289.02392578]
[140.08772278 277.44445801]
[145.91194153 262.73428345]
[143.90792847 247.86875916]
[141.90391541 233.00323486]
[139.89990234 218.13771057]
[135.92781067 203.67318726]
[130.05885315 189.86900330]
[124.18988800 176.06481934]
[118.32093048 162.26065063]
[112.45196533 148.45646667]
[98.29811096 150.00184631]
[84.28209686 147.49766541]
[71.53903961 141.14674377]
[61.10097885 131.46342468]
[53.81327820 119.23194885]
[50.26614761 105.44291687]
[50.74686813 91.21306610]
[55.21650314 77.69485474]
[63.31306458 65.98309326]
[74.38082886 57.02629471]
[68.71804810 43.13626480]
[63.05525970 29.24623871]
[57.18629837 15.44206238]
[51.11246490 1.72679567]
[35.98874664 -8.77818775]
[38.53707886 -26.14116287]
[32.25971985 -39.76448059]
[25.98235703 -53.38779449]
[19.70499611 -67.01110840]
[13.02480221 -80.44149017]
[5.94769669 -93.66701508]
[-7.38531351 -102.18414307]
[-6.56813812 -117.05631256]
[-13.64524364 -130.28184509]
[-27.65782356 -124.87561798]
[-42.22856903 -121.23240662]
[-57.13658905 -119.40742493]
[-72.15588379 -119.42834473]
[-87.05876160 -121.29484558]
[-101.61930084 -124.97863770]
[-115.61676788 -130.42387390]
[-128.83895874 -137.54800415]
[-141.08543396 -146.24301147]
[-152.17054749 -156.37712097]
[-161.92623901 -167.79666138]
[-170.20462036 -180.32855225]
[-176.88020325 -193.78277588]
[-181.85176086 -207.95539856]
[-185.04394531 -222.63156128]
[-186.40835571 -237.58876038]
[-185.92433167 -252.60026550]
[-183.59916687 -267.43850708]
[-179.46815491 -281.87854004]
[-173.59388733 -295.70141602]
[-166.06544495 -308.69766235]
[-156.99693298 -320.67019653]
[-146.52583313 -331.43756104]
[-134.81089783 -340.83648682]
[-122.02970886 -348.72448730]
[-108.37602997 -354.98202515]
[-94.05684662 -359.51422119]
[-79.28923798 -362.25231934]
[-64.29707336 -363.15487671]
[-49.30762863 -362.20819092]
[-34.54814529 -359.42660522]
[-20.24237061 -354.85229492]
[-6.60717487 -348.55456543]
[6.15073347 -340.62896729]
[17.83794975 -331.19558716]
[28.27729607 -320.39746094]
[37.31051636 -308.39825439]
[44.80067062 -295.37991333]
[50.63420868 -281.53979492]
[54.72269440 -267.08764648]
[57.00414658 -252.24264526]
[57.44398499 -237.22976685]
[56.03553391 -222.27664185]
[52.80015182 -207.60995483]
[47.78688049 -193.45202637]
[41.07172394 -180.01751709]
[32.75648117 -167.51005554]
[22.96720886 -156.11929321]
[11.85231113 -146.01786804]
[-0.41971594 -137.35894775]
[6.65738964 -124.13341522]
[19.48419762 -116.56227112]
[19.17322350 -100.74411774]
[26.25032997 -87.51859283]
[28.89104271 -86.57797241]
[31.31827545 -84.53465271]
[33.11015701 -81.46470642]
[33.88012695 -77.59538269]
[33.32831192 -73.28847504]
[39.60567474 -59.66515732]
[45.88303375 -46.04183960]
[52.16039658 -32.41852570]
[63.39609909 -27.93683434]
[68.73736572 -16.63839912]
[64.82772827 -4.34703827]
[70.90156555 9.36822796]
[74.95506287 11.89373970]
[77.46508026 16.99244690]
[76.94528961 23.58345222]
[82.60807037 37.47348022]
[88.27085876 51.36350632]
[103.86511993 50.11872101]
[119.08148193 53.75090790]
[132.43220520 61.90494919]
[142.61199951 73.78360748]
[148.62553406 88.22547913]
[149.88485718 103.81857300]
[146.26687622 119.03831482]
[138.12528992 132.39665222]
[126.25614166 142.58750916]
[132.12510681 156.39169312]
[137.99406433 170.19586182]
[143.86302185 184.00004578]
[149.73197937 197.80421448]
[150.98843384 182.85693359]
[156.74435425 169.00524902]
[166.45112610 157.56939697]
[179.18356323 149.63938904]
[193.72810364 145.97106934]
[208.69842529 146.91406250]
[222.66767883 152.37849426]
[234.30439758 161.84352112]
[242.49943542 174.40701294]
[246.47169495 188.87149048]
[245.84257507 203.85829163]
[240.67204285 217.93896484]
[231.45289612 229.77145386]
[219.06387329 238.22792053]
[204.68579102 242.50238037]
[189.68910217 242.18740845]
[175.50318909 237.31303406]
[163.48014832 228.34382629]
[154.76542664 216.13369751]
[156.76943970 230.99922180]
[158.77346802 245.86474609]
[160.77748108 260.73028564]
[170.28912354 273.37301636]
[164.32156372 287.01989746]
[166.32557678 301.88543701]
[168.32958984 316.75097656]
[179.00595093 321.98086548]
[185.76289368 331.61645508]
[187.01654053 343.19760132]
[182.57046509 353.83468628]
[173.63592529 360.92977905]
[175.19644165 375.84838867]
[176.75697327 390.76699829]
[178.31748962 405.68557739]
[179.87800598 420.60418701]
[181.43853760 435.52279663]
[196.45504761 435.92211914]
[211.29095459 438.27810669]
[225.69241333 442.55047607]
[239.41297913 448.66613770]
[252.21788025 456.52038574]
[263.88800049 465.97888184]
[274.22366333 476.87976074]
[283.04800415 489.03649902]
[290.21002197 502.24105835]
[295.58718872 516.26751709]
[299.08746338 530.87585449]
[300.65097046 545.81604004]
[300.25094604 560.83251953]
[297.89425659 575.66833496]
[293.62118530 590.06958008]
[287.50488281 603.78985596]
[279.64999390 616.59442139]
[270.19094849 628.26409912]
[259.28958130 638.59924316]
[247.13243103 647.42297363]
[233.92753601 654.58435059]
[219.90083313 659.96087646]
[205.29234314 663.46044922]
[190.35203552 665.02325439]
[175.33557129 664.62249756]
[160.49987793 662.26507568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[28 174]
[29 173]
[30 172]
[32 170]
[33 169]
[34 168]
[35 167]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[50 135]
[51 134]
[52 133]
[53 130]
[54 129]
[56 126]
[57 125]
[58 124]
[59 123]
[60 118]
[61 117]
[63 115]
[64 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
