%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[-11.10459423 591.82843018]
[-5.61625147 605.84497070]
[-3.06210184 620.67944336]
[-3.54673672 635.72436523]
[-7.05031013 650.36364746]
[-13.42935371 663.99792480]
[-22.42264938 676.06878662]
[-33.66192627 686.08197021]
[-46.68694305 693.62738037]
[-60.96433640 698.39611816]
[-75.90945435 700.19293213]
[-90.91030121 698.94415283]
[-105.35260010 694.70092773]
[-118.64495850 687.63708496]
[-130.24305725 678.04180908]
[-139.67195129 666.30804443]
[-146.54554749 652.91632080]
[-150.58236694 638.41497803]
[-151.61711121 623.39782715]
[-149.60740662 608.47985840]
[-144.63554382 594.27191162]
[-136.90512085 581.35583496]
[-126.73270416 570.26049805]
[-114.53483582 561.44024658]
[-100.81100464 555.25628662]
[-86.12320709 551.96179199]
[-71.07289124 551.69177246]
[-56.27636337 554.45721436]
[-50.61357880 540.56719971]
[-44.95079041 526.67712402]
[-39.28800583 512.78710938]
[-52.05485153 520.66162109]
[-67.04531097 521.19647217]
[-80.34091949 514.25189209]
[-88.46622467 501.64321899]
[-89.29730225 486.66625977]
[-82.61689758 473.23599243]
[-70.17127228 464.86303711]
[-55.21366501 463.73608398]
[-41.65396500 470.14968872]
[-33.03664780 482.42739868]
[-31.61410904 497.35891724]
[-23.95351219 484.46261597]
[-16.29291534 471.56628418]
[-8.63231754 458.66995239]
[-0.97172004 445.77362061]
[6.68887758 432.87728882]
[14.34947491 419.98095703]
[22.01007271 407.08465576]
[27.56929779 393.15283203]
[30.89155769 378.52539062]
[24.80528259 362.06561279]
[37.42771530 348.65832520]
[40.53182602 333.98300171]
[43.63593674 319.30770874]
[46.74004745 304.63241577]
[49.84415436 289.95709229]
[52.94826508 275.28179932]
[56.05237579 260.60650635]
[49.71907806 250.30038452]
[52.18506241 238.04875183]
[62.66303635 230.52711487]
[65.98529816 215.89965820]
[69.30755615 201.27220154]
[64.58130646 187.14733887]
[75.18296051 175.40359497]
[78.50521851 160.77612305]
[81.82747650 146.14866638]
[77.10122681 132.02380371]
[87.70288086 120.28005981]
[91.02513885 105.65260315]
[93.58097076 90.87194824]
[95.36344147 75.97823334]
[97.14590454 61.08451080]
[98.92836761 46.19079590]
[91.29064178 29.43530083]
[102.34896851 15.80884361]
[103.90949249 0.89023846]
[101.68984985 -7.97040653]
[105.60591888 -14.23827839]
[107.38838196 -29.13199615]
[109.17084503 -44.02571487]
[103.12825775 -58.64753723]
[112.32313538 -70.36519623]
[114.10559845 -85.25891113]
[115.88806152 -100.15263367]
[116.33467102 -115.14598083]
[107.78968811 -128.46115112]
[114.75572968 -141.62638855]
[106.21074677 -154.94157410]
[113.17678833 -168.10681152]
[112.28397369 -183.08021545]
[108.64932251 -191.46037292]
[111.49102020 -198.28288269]
[110.82122803 -213.26791382]
[110.15144348 -228.25296021]
[109.48165894 -243.23799133]
[95.29127502 -248.76545715]
[84.58055115 -259.59136963]
[79.20517731 -273.84005737]
[80.09648132 -289.04287720]
[87.10003662 -302.56582642]
[99.00242615 -312.06597900]
[113.74150085 -315.89736938]
[128.76361084 -313.39620972]
[141.46611023 -304.99581909]
[149.64819336 -292.15161133]
[151.89227295 -277.08895874]
[147.80953979 -262.41751099]
[138.10736084 -250.67919922]
[124.46669769 -243.90777588]
[125.13648224 -228.92274475]
[125.80626678 -213.93769836]
[126.47605896 -198.95266724]
[127.25737762 -183.97302246]
[128.15019226 -168.99961853]
[136.63131714 -156.75544739]
[129.72914124 -142.51921082]
[138.21025085 -130.27503967]
[131.30807495 -116.03879547]
[138.67239380 -129.10658264]
[150.92759705 -137.75584412]
[165.70739746 -140.31657410]
[180.15806580 -136.29432678]
[191.48937988 -126.46573639]
[197.51344299 -112.72853851]
[197.06712341 -97.73517609]
[190.23657227 -84.38063812]
[178.34068298 -75.24347687]
[163.67636108 -72.08792877]
[149.07504272 -75.52328491]
[137.35603333 -84.88623047]
[130.78178406 -98.37016296]
[128.99931335 -83.47644806]
[127.21685028 -68.58273315]
[133.38693237 -55.02620697]
[124.06456757 -42.24324799]
[122.28209686 -27.34952927]
[120.49963379 -12.45581245]
[118.82809448 2.45076156]
[117.26757050 17.36936569]
[124.63869476 26.96066856]
[123.46069336 39.40237427]
[113.82209015 47.97326279]
[112.03961945 62.86697769]
[110.25715637 77.76069641]
[108.47469330 92.65441132]
[120.21208191 83.31451416]
[135.20974731 83.57865143]
[146.61097717 93.32606506]
[149.20326233 108.10037231]
[141.80145264 121.14694977]
[127.78956604 126.50108337]
[113.57363129 121.71494293]
[105.65260315 108.97486115]
[102.33033752 123.60231781]
[106.81896210 138.77343750]
[96.45494080 149.47093201]
[93.13267517 164.09838867]
[89.81041718 178.72584534]
[94.29904175 193.89697266]
[83.93501282 204.59445190]
[80.61275482 219.22192383]
[77.29049683 233.84938049]
[83.14362335 251.30854797]
[70.72767639 263.71060181]
[67.62356567 278.38589478]
[64.51945496 293.06121826]
[61.41534805 307.73651123]
[58.31123734 322.41180420]
[55.20712662 337.08712769]
[52.10301971 351.76242065]
[58.47160339 362.97866821]
[55.58406448 375.13784790]
[45.51901627 381.84765625]
[42.19675827 396.47509766]
[51.76239395 384.92092896]
[64.05902100 376.33065796]
[78.19894409 371.32440186]
[93.16138458 370.26358032]
[107.86619568 373.22476196]
[121.25181580 379.99420166]
[132.35192871 390.08316040]
[140.36521912 402.76336670]
[144.71319580 417.11938477]
[145.08195496 432.11483765]
[141.44490051 446.66720581]
[134.06457520 459.72595215]
[123.47379303 470.34835815]
[110.43708801 477.76754761]
[95.89561462 481.44796753]
[80.89911652 481.12387085]
[66.53020477 476.81869507]
[53.82619476 468.84323120]
[43.70418930 457.77322388]
[36.89491272 444.40783691]
[33.88992691 429.71191406]
[34.90639877 414.74523926]
[27.24580193 427.64157104]
[19.58520508 440.53790283]
[11.92460728 453.43423462]
[4.26400948 466.33053589]
[-3.39658809 479.22686768]
[-11.05718517 492.12319946]
[-18.71778297 505.01953125]
[-25.39797783 518.44989014]
[-31.06076431 532.33990479]
[-36.72354889 546.22998047]
[-42.38633728 560.11999512]
[-29.87393379 568.48803711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 209]
[29 208]
[30 207]
[31 206]
[42 205]
[43 204]
[44 203]
[45 202]
[46 201]
[47 200]
[48 199]
[49 198]
[50 176]
[51 175]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[58 167]
[59 166]
[62 164]
[63 163]
[64 162]
[66 160]
[67 159]
[68 158]
[70 156]
[71 155]
[72 147]
[73 146]
[74 145]
[75 144]
[77 141]
[78 140]
[80 139]
[81 138]
[82 137]
[84 135]
[85 134]
[86 133]
[87 120]
[89 118]
[91 116]
[92 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
