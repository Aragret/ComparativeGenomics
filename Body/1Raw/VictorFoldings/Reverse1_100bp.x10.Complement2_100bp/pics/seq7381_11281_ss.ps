%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[118.75231171 822.75830078]
[103.98574829 820.10424805]
[89.37118530 816.71160889]
[74.94554138 812.58898926]
[60.74525833 807.74670410]
[46.80620956 802.19708252]
[33.16360092 795.95410156]
[19.85190010 789.03356934]
[6.90473223 781.45288086]
[-5.64519787 773.23126221]
[-17.76618767 764.38952637]
[-29.42761612 754.94989014]
[-40.60002899 744.93627930]
[-51.25520325 734.37390137]
[-61.36621857 723.28955078]
[-70.90753937 711.71118164]
[-79.85505676 699.66802979]
[-88.18618011 687.19055176]
[-95.87984467 674.31024170]
[-102.91663361 661.05957031]
[-109.27877045 647.47216797]
[-114.95017242 633.58221436]
[-119.91651917 619.42486572]
[-124.16526794 605.03582764]
[-127.68567657 590.45153809]
[-130.46885681 575.70874023]
[-132.50779724 560.84472656]
[-133.79731750 545.89709473]
[-134.33416748 530.90350342]
[-134.11700439 515.90191650]
[-133.14636230 500.93014526]
[-131.42471313 486.02609253]
[-128.95637512 471.22732544]
[-125.74761200 456.57128906]
[-121.80651093 442.09500122]
[-117.14303589 427.83499146]
[-111.76897430 413.82733154]
[-105.69788361 400.10736084]
[-98.94511414 386.70977783]
[-91.52771759 373.66839600]
[-83.46443176 361.01614380]
[-74.77563477 348.78503418]
[-65.48326111 337.00595093]
[-55.61078644 325.70861816]
[-45.18315887 314.92156982]
[-34.22671127 304.67208862]
[-22.76912308 294.98605347]
[-10.83933830 285.88793945]
[1.53250766 277.40072632]
[14.31516266 269.54583740]
[27.47633743 262.34313965]
[40.98278427 255.81080627]
[54.80038452 249.96534729]
[68.89423370 244.82151794]
[83.22872925 240.39233398]
[97.76766205 236.68898010]
[112.47430420 233.72079468]
[110.24919128 218.88674927]
[108.02407074 204.05270386]
[105.79895782 189.21865845]
[103.57383728 174.38461304]
[101.34872437 159.55056763]
[91.80904388 148.11187744]
[97.41361237 133.31661987]
[95.18849182 118.48257446]
[83.59905243 109.78596497]
[81.44966125 95.45675659]
[89.97746277 83.74253845]
[87.75234222 68.90849304]
[85.08654785 54.14727783]
[81.98243713 39.47197723]
[78.87832642 24.79667473]
[75.66505432 10.14488697]
[72.34279633 -4.48257351]
[69.02053833 -19.11003304]
[65.69828033 -33.73749542]
[50.72617722 -32.47958374]
[35.72472000 -33.31770325]
[20.98591614 -36.23554611]
[6.79666042 -41.17630768]
[-6.56685114 -48.04381561]
[-18.84449196 -56.70439529]
[-29.79727554 -66.98946381]
[-39.21200180 -78.69882202]
[-46.90541077 -91.60454559]
[-52.72774887 -105.45541382]
[-56.56568146 -119.98181152]
[-58.34450150 -134.90100098]
[-58.02958298 -149.92254639]
[-55.62705994 -164.75405884]
[-51.18369293 -179.10685730]
[-44.78597641 -192.70153809]
[-36.55844498 -205.27348328]
[-26.66124916 -216.57798767]
[-15.28703785 -226.39497375]
[-2.65721631 -234.53338623]
[10.98237324 -240.83479309]
[25.36623192 -245.17654419]
[40.21437454 -247.47410583]
[55.23777390 -247.68278503]
[70.14399719 -245.79849243]
[84.64289856 -241.85792542]
[98.45223999 -235.93775940]
[111.30322266 -228.15327454]
[122.94570160 -218.65597534]
[133.15306091 -207.63072205]
[141.72657776 -195.29212952]
[148.49940491 -181.88038635]
[153.33969116 -167.65653992]
[156.15322876 -152.89746094]
[156.88522339 -137.89045715]
[155.52145386 -122.92762756]
[152.08845520 -108.30023193]
[146.65306091 -94.29299927]
[139.32106018 -81.17858887]
[130.23518372 -69.21225739]
[119.57228088 -58.62695694]
[107.53991699 -49.62871933]
[94.37229919 -42.39270020]
[80.32573700 -37.05975342]
[83.64799500 -22.43229294]
[86.97025299 -7.80483294]
[90.29251862 6.82262707]
[94.83940887 12.64908028]
[93.55363464 21.69256401]
[96.65774536 36.36786652]
[99.76185608 51.04316711]
[102.03504181 52.68351746]
[103.79544067 55.32314301]
[104.65917206 58.77124023]
[104.31847382 62.70169067]
[102.58638763 66.68338013]
[104.81150818 81.51742554]
[116.40094757 90.21403503]
[118.55033875 104.54324341]
[110.02253723 116.25746155]
[112.24765778 131.09150696]
[121.94648743 143.59123230]
[116.18276215 157.32545471]
[118.40788269 172.15950012]
[120.63300323 186.99354553]
[122.85811615 201.82759094]
[125.08323669 216.66163635]
[127.30834961 231.49566650]
[142.23861694 230.01829529]
[157.22425842 229.29295349]
[172.22741699 229.32147217]
[187.21018982 230.10377502]
[202.13473511 231.63789368]
[216.96333313 233.91995239]
[231.65855408 236.94418335]
[246.18327332 240.70294189]
[260.50079346 245.18673706]
[274.57492065 250.38424683]
[288.37014771 256.28234863]
[301.85159302 262.86611938]
[314.98519897 270.11892700]
[327.73782349 278.02249146]
[340.07720947 286.55682373]
[351.97222900 295.70034790]
[363.39282227 305.42999268]
[374.31011963 315.72116089]
[384.69653320 326.54785156]
[394.52587891 337.88275146]
[403.77328491 349.69717407]
[412.41540527 361.96133423]
[420.43038940 374.64422607]
[427.79800415 387.71377563]
[434.49966431 401.13702393]
[440.51840210 414.88003540]
[445.83901978 428.90808105]
[450.44812012 443.18576050]
[454.33398438 457.67697144]
[457.48687744 472.34512329]
[459.89877319 487.15316772]
[461.56359863 502.06369019]
[462.47714233 517.03906250]
[462.63714600 532.04138184]
[462.04312134 547.03277588]
[460.69662476 561.97540283]
[458.60104370 576.83154297]
[455.76168823 591.56359863]
[452.18569946 606.13439941]
[447.88214111 620.50708008]
[442.86184692 634.64544678]
[437.13754272 648.51367188]
[430.72366333 662.07672119]
[423.63641357 675.30047607]
[415.89367676 688.15136719]
[407.51507568 700.59698486]
[398.52169800 712.60595703]
[388.93630981 724.14788818]
[378.78311157 735.19360352]
[368.08776855 745.71520996]
[356.87725830 755.68621826]
[345.17993164 765.08129883]
[333.02532959 773.87683105]
[320.44412231 782.05053711]
[307.46817017 789.58172607]
[294.13018799 796.45153809]
[280.46386719 802.64245605]
[266.50375366 808.13891602]
[252.28512573 812.92700195]
[237.84387207 816.99462891]
[223.21647644 820.33154297]
[208.43991089 822.92926025]
[193.55146790 824.78131104]
[178.58879089 825.88293457]
[163.58966064 826.23138428]
[148.59194946 825.82574463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[64 137]
[65 136]
[68 133]
[69 132]
[70 127]
[71 126]
[72 125]
[73 123]
[74 122]
[75 121]
[76 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
