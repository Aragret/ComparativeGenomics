%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[33.32803726 561.60766602]
[38.22529221 575.85418701]
[39.82909012 590.83337402]
[38.05897522 605.79382324]
[33.00374222 619.98510742]
[24.91695976 632.69537354]
[14.20425606 643.28717041]
[1.40297437 651.22912598]
[-12.84477711 656.12292480]
[-27.82433701 657.72308350]
[-42.78433609 655.94934082]
[-56.97438812 650.89068604]
[-69.68272400 642.80084229]
[-80.27190399 632.08557129]
[-88.21077728 619.28234863]
[-93.10112762 605.03338623]
[-94.69766235 590.05346680]
[-92.92030334 575.09387207]
[-87.85819244 560.90509033]
[-79.76525116 548.19866943]
[-69.04741669 537.61212158]
[-56.24228668 529.67633057]
[-41.99216461 524.78942871]
[-27.01183319 523.19653320]
[-12.05269432 524.97753906]
[-7.01577806 510.84851074]
[-1.97886181 496.71948242]
[3.05805445 482.59042358]
[8.09497070 468.46139526]
[13.13188648 454.33236694]
[18.16880226 440.20333862]
[22.88893700 425.96536255]
[27.28993607 411.62551880]
[31.69093323 397.28567505]
[36.09193039 382.94583130]
[39.74002075 368.39620972]
[42.62528992 353.67630005]
[45.51056290 338.95642090]
[48.39583588 324.23651123]
[43.25113297 310.25863647]
[53.49843216 298.20443726]
[56.38370514 283.48455811]
[59.26897430 268.76467896]
[57.47077942 261.59609985]
[62.30833817 253.84782410]
[65.41245270 239.17253113]
[68.51656342 224.49722290]
[71.62066650 209.82191467]
[69.81260681 205.40151978]
[70.76222229 199.79837036]
[75.04185486 194.75889587]
[78.58152771 180.18252563]
[81.57630157 165.48451233]
[84.02203369 150.68524170]
[86.46775818 135.88597107]
[88.91348267 121.08670807]
[91.35921478 106.28743744]
[92.14053345 91.30780029]
[91.24771881 76.33438873]
[90.35490417 61.36098480]
[89.35063934 46.39464188]
[88.23499298 31.43618774]
[87.11934662 16.47773361]
[78.37706757 3.29125905]
[85.14632416 -9.97623539]
[84.03067780 -24.93468857]
[70.99866486 -33.14886856]
[65.36808014 -47.29630280]
[69.10349274 -61.87405014]
[80.56935883 -71.34357452]
[79.45370483 -86.30203247]
[64.70143127 -89.50366211]
[51.46241379 -96.72520447]
[40.80548096 -107.37390137]
[33.58824921 -120.58071136]
[30.38812828 -135.27122498]
[31.45610809 -150.25306702]
[36.69711304 -164.31268311]
[45.67838669 -176.31361389]
[57.66522217 -185.28842163]
[71.68105316 -190.51658630]
[70.56540680 -205.47503662]
[69.44976044 -220.43348694]
[68.33410645 -235.39193726]
[67.21846008 -250.35040283]
[56.63495255 -239.72074890]
[41.63592148 -239.55023193]
[30.81349564 -249.93652344]
[30.36724854 -264.92990112]
[40.55281448 -275.94143677]
[55.53543472 -276.66326904]
[66.73197174 -266.68270874]
[66.95529938 -281.68106079]
[67.17862701 -296.67941284]
[67.40195465 -311.67773438]
[58.06251144 -327.54772949]
[67.64320374 -342.25067139]
[67.64320374 -357.25067139]
[67.64320374 -372.25067139]
[53.86933899 -378.82666016]
[44.31941223 -390.73303223]
[40.88957214 -405.60577393]
[44.26081467 -420.49194336]
[53.76378250 -432.43582153]
[67.51165009 -439.06597900]
[82.77476501 -439.06597900]
[96.52262878 -432.43582153]
[106.02559662 -420.49194336]
[109.39684296 -405.60577393]
[105.96700287 -390.73303223]
[96.41707611 -378.82666016]
[82.64320374 -372.25067139]
[82.64320374 -357.25067139]
[82.64320374 -342.25067139]
[90.97216034 -333.47827148]
[91.09492493 -320.98153687]
[82.40029144 -311.45440674]
[82.17696381 -296.45608521]
[81.95363617 -281.45773315]
[81.73030853 -266.45938110]
[82.17691803 -251.46604919]
[83.29256439 -236.50759888]
[84.40821075 -221.54913330]
[85.52385712 -206.59068298]
[86.63951111 -191.63223267]
[101.27582550 -188.54103088]
[114.46138000 -181.44366455]
[125.12351990 -170.90779114]
[132.39215088 -157.78118896]
[135.67074585 -143.12353516]
[134.68522644 -128.12084961]
[129.50697327 -113.98954010]
[120.54757690 -101.87779236]
[108.52628326 -92.77225494]
[94.41216278 -87.41767883]
[95.52780914 -72.45922852]
[108.27153778 -64.79532623]
[114.12810516 -50.93297958]
[110.65846252 -36.10682297]
[98.98912811 -26.05033684]
[100.10478210 -11.09188366]
[108.76725769 1.02466261]
[102.07779694 15.36208534]
[103.19345093 30.32053947]
[104.30909729 45.27899170]
[107.94138336 51.71547318]
[105.32830811 60.46817017]
[106.22112274 75.44157410]
[107.11393738 90.41497803]
[113.74791718 76.96171570]
[124.74436188 66.75984192]
[138.65649414 61.15158463]
[153.65394592 60.87481689]
[167.76353455 65.96594238]
[179.12889099 75.75514221]
[186.25473022 88.95447540]
[188.20352173 103.82734680]
[184.71885681 118.41696930]
[176.25920105 130.80383301]
[163.93757629 139.35821533]
[149.37510681 142.95466614]
[134.48773193 141.12001038]
[121.23413849 134.09559631]
[111.35807037 122.80563354]
[106.15848541 108.73316193]
[103.71275330 123.53243256]
[101.26702881 138.33171082]
[98.82130432 153.13098145]
[96.37557220 167.93025208]
[109.90379333 161.45048523]
[123.47044373 167.84939575]
[127.07469177 182.40992737]
[118.05963135 194.39862061]
[103.07081604 194.97782898]
[93.15790558 183.72219849]
[89.61823273 198.29856873]
[86.29597473 212.92602539]
[83.19186401 227.60133362]
[80.08775330 242.27664185]
[76.98364258 256.95193481]
[73.98886871 271.64993286]
[71.10359192 286.36984253]
[68.21832275 301.08972168]
[73.15665436 316.12048340]
[63.11572647 327.12179565]
[60.23045731 341.84167480]
[57.34518433 356.56158447]
[54.45991135 371.28146362]
[66.85945892 362.84042358]
[81.79594421 364.21929932]
[92.44061279 374.78771973]
[93.92685699 389.71389771]
[85.57519531 402.17382812]
[71.20388794 406.47097778]
[57.38330460 400.64074707]
[50.43177795 387.34680176]
[46.03078079 401.68667603]
[41.62978363 416.02651978]
[37.22878265 430.36636353]
[38.39925003 435.45330811]
[37.58302689 440.02355957]
[35.30963135 443.40686035]
[32.29783249 445.24026489]
[27.26091576 459.36929321]
[22.22400093 473.49832153]
[17.18708420 487.62734985]
[12.15016747 501.75637817]
[7.11325169 515.88543701]
[2.07633543 530.01446533]
[14.78859234 538.09814453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 209]
[26 208]
[27 207]
[28 206]
[29 205]
[30 204]
[31 203]
[32 199]
[33 198]
[34 197]
[35 196]
[36 188]
[37 187]
[38 186]
[39 185]
[41 183]
[42 182]
[43 181]
[45 180]
[46 179]
[47 178]
[48 177]
[51 176]
[52 175]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 149]
[59 148]
[60 147]
[61 145]
[62 144]
[63 143]
[65 141]
[66 140]
[70 136]
[71 135]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[92 120]
[93 119]
[94 118]
[95 117]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
