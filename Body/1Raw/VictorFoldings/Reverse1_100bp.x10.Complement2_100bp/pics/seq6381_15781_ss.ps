%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[60.61394119 558.85516357]
[55.31257629 544.77038574]
[52.86119080 529.92193604]
[53.35400009 514.88049316]
[56.77206802 500.22436523]
[62.98400879 486.51678467]
[71.75106049 474.28463745]
[82.73622894 463.99813843]
[95.51728058 456.05264282]
[109.60294342 450.75354004]
[107.15721893 435.95428467]
[104.71148682 421.15499878]
[102.26576233 406.35574341]
[99.82003784 391.55645752]
[97.37430573 376.75720215]
[94.92858124 361.95791626]
[85.28075409 354.66094971]
[83.12206268 342.35144043]
[90.14695740 331.53414917]
[87.92183685 316.70010376]
[85.69672394 301.86605835]
[81.59577179 295.71755981]
[83.55061340 286.79476929]
[81.54660034 271.92922974]
[75.72179413 285.75210571]
[65.10474396 296.34823608]
[51.27042007 302.14578247]
[36.27106476 302.28469849]
[22.33173943 296.74435425]
[11.52026463 286.34667969]
[5.44045639 272.63406372]
[4.99421835 257.64068604]
[10.24774742 243.59075928]
[20.42171288 232.56849670]
[34.00687027 226.20896912]
[48.98793793 225.45559692]
[63.14256668 230.42012024]
[74.37100220 240.36608887]
[81.00707245 253.81622314]
[82.12271881 238.85777283]
[83.23836517 223.89932251]
[84.35401917 208.94085693]
[85.46966553 193.98240662]
[86.58531189 179.02395630]
[87.70095825 164.06550598]
[88.81661224 149.10705566]
[82.04734802 135.83955383]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[94.69516754 62.78147125]
[92.08209991 54.02877808]
[95.71438599 47.59229660]
[96.83003235 32.63384247]
[89.02416992 45.44276428]
[77.96464539 55.57621765]
[64.52365875 62.23503876]
[49.76121902 64.89408112]
[34.84156418 63.34364319]
[20.94131279 57.70600128]
[9.15669823 48.42576218]
[0.41710436 36.23480225]
[-4.58822823 22.09455299]
[-5.46455765 7.12017345]
[-2.14277315 -7.50739479]
[5.11515522 -20.63455963]
[15.73683739 -31.22606087]
[28.88460350 -38.44660568]
[43.52156448 -41.72674942]
[58.49338913 -40.80781174]
[72.61933899 -35.76226425]
[84.78537750 -26.98801422]
[94.03205109 -15.17703915]
[99.63011169 -1.26080191]
[101.13794708 13.66667271]
[106.59330750 -0.30612472]
[112.04866028 -14.27892208]
[117.50402069 -28.25172043]
[122.95937347 -42.22451782]
[128.41473389 -56.19731522]
[133.87008667 -70.17011261]
[139.32543945 -84.14291382]
[144.78080750 -98.11570740]
[150.23616028 -112.08850861]
[153.55842590 -126.71596527]
[154.67407227 -141.67442322]
[140.91404724 -150.84249878]
[133.69644165 -165.61415100]
[134.90612793 -181.91609192]
[144.11851501 -195.30593872]
[158.74116516 -202.18275452]
[159.63397217 -217.15617371]
[160.52679443 -232.12957764]
[161.41960144 -247.10298157]
[162.31242371 -262.07638550]
[163.20524597 -277.04977417]
[164.09805298 -292.02319336]
[150.00761414 -297.52908325]
[138.30950928 -307.12121582]
[130.14979553 -319.85992432]
[126.32787323 -334.49713135]
[127.21818542 -349.59887695]
[132.73350525 -363.68563843]
[142.33349609 -375.37728882]
[155.07765198 -383.52847290]
[169.71743774 -387.34057617]
[184.81857300 -386.44015503]
[198.90161133 -380.91540527]
[210.58685303 -371.30758667]
[218.72949219 -358.55795288]
[222.53179932 -343.91564941]
[221.62124634 -328.81509399]
[216.08705139 -314.73574829]
[206.47140503 -303.05694580]
[193.71633911 -294.92285156]
[179.07145691 -291.13037109]
[178.17864990 -276.15698242]
[177.28582764 -261.18356323]
[176.39302063 -246.21015930]
[175.50019836 -231.23675537]
[174.60737610 -216.26335144]
[173.71456909 -201.28994751]
[185.58552551 -194.53735352]
[193.42660522 -183.27474976]
[195.66079712 -169.66749573]
[191.79586792 -156.36183167]
[182.53128052 -145.97030640]
[169.63252258 -140.55877686]
[168.51687622 -125.60031891]
[176.32273865 -138.40924072]
[187.38226318 -148.54269409]
[200.82325745 -155.20150757]
[215.58567810 -157.86056519]
[230.50534058 -156.31011963]
[244.40559387 -150.67248535]
[256.19021606 -141.39224243]
[264.92980957 -129.20127869]
[269.93511963 -115.06102753]
[270.81146240 -100.08664703]
[267.48968506 -85.45908356]
[260.23175049 -72.33191681]
[249.61006165 -61.74041748]
[236.46229553 -54.51987457]
[221.82534790 -51.23972702]
[206.85351562 -52.15866470]
[192.72756958 -57.20421219]
[180.56152344 -65.97846222]
[171.31486511 -77.78943634]
[165.71679688 -91.70567322]
[164.20895386 -106.63314819]
[158.75360107 -92.66035461]
[153.29824829 -78.68755341]
[147.84288025 -64.71475983]
[142.38752747 -50.74195862]
[136.93217468 -36.76916122]
[131.47682190 -22.79636383]
[126.02146149 -8.82356548]
[120.56610107 5.14923239]
[115.11074829 19.12203026]
[111.78848267 33.74948883]
[110.67283630 48.70794296]
[109.66857910 63.67428970]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[112.43754578 138.10615540]
[103.77506256 150.22270203]
[102.65941620 165.18115234]
[101.54376984 180.13960266]
[100.42811584 195.09805298]
[99.31246948 210.05651855]
[98.19682312 225.01496887]
[97.08116913 239.97341919]
[95.96552277 254.93186951]
[96.41213226 269.92523193]
[98.41614532 284.79074097]
[100.53076935 299.64096069]
[102.75588226 314.47500610]
[104.98100281 329.30902100]
[116.78303528 343.44387817]
[109.72785187 359.51220703]
[112.17357635 374.31146240]
[114.61930847 389.11074829]
[117.06503296 403.91000366]
[119.51075745 418.70928955]
[121.95648956 433.50854492]
[124.40221405 448.30783081]
[139.44384766 448.79333496]
[154.10165405 452.20428467]
[167.81227112 458.40957642]
[180.04866028 467.17068481]
[190.34049988 478.15084839]
[198.29220581 490.92803955]
[203.59811401 505.01113892]
[206.05432129 519.85882568]
[205.56637573 534.90032959]
[202.15304565 549.55761719]
[195.94554138 563.26721191]
[187.18246460 575.50219727]
[176.20062256 585.79223633]
[163.42213440 593.74188232]
[149.33819580 599.04553223]
[134.49012756 601.49932861]
[119.44865417 601.00891113]
[104.79193878 597.59326172]
[91.08335114 591.38354492]
[78.84979248 582.61846924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[19 182]
[20 181]
[21 180]
[23 179]
[24 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[48 168]
[49 167]
[50 165]
[51 164]
[52 163]
[54 162]
[55 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[85 151]
[86 130]
[87 129]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
