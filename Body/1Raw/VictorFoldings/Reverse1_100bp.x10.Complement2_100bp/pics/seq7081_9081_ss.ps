%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[77.97586060 612.42291260]
[69.44180298 624.78515625]
[59.36712265 635.92767334]
[47.92419815 645.65979004]
[35.30883789 653.81506348]
[21.73690796 660.25378418]
[7.44064283 664.86596680]
[-7.33533192 667.57250977]
[-22.33817863 668.32727051]
[-37.31118011 667.11718750]
[-51.99812698 663.96301270]
[-66.14770508 658.91882324]
[-79.51780701 652.07073975]
[-91.87963867 643.53613281]
[-103.02167511 633.46093750]
[-112.75327301 622.01751709]
[-120.90789795 609.40179443]
[-127.34601593 595.82952881]
[-131.95747375 581.53308105]
[-134.66336060 566.75695801]
[-135.41735840 551.75408936]
[-134.20657349 536.78112793]
[-131.05174255 522.09429932]
[-126.00682068 507.94497681]
[-119.15815735 494.57522583]
[-110.62292480 482.21377563]
[-100.54718018 471.07223511]
[-89.10332489 461.34118652]
[-76.48719025 453.18716431]
[-62.91464996 446.74966431]
[-48.61794662 442.13891602]
[-33.84171295 439.43371582]
[-18.83879471 438.68045044]
[-3.86590862 439.89193726]
[10.82073879 443.04745483]
[15.85765457 428.91842651]
[20.89457130 414.78939819]
[25.93148613 400.66036987]
[30.96840286 386.53134155]
[36.00531769 372.40231323]
[40.08498764 357.96777344]
[43.18909454 343.29244995]
[46.29320526 328.61715698]
[49.39731598 313.94186401]
[52.50142670 299.26654053]
[55.60553741 284.59124756]
[47.29101562 272.28662109]
[50.22996902 257.35955811]
[63.19258881 248.72193909]
[66.29669952 234.04663086]
[69.40081024 219.37133789]
[72.50492096 204.69602966]
[66.17425537 188.32868958]
[78.59568024 174.73495483]
[81.48094940 160.01506042]
[84.25656128 145.27409363]
[78.90431976 131.37435913]
[88.97100830 119.16894531]
[91.63680267 104.40772247]
[89.69918060 99.53334808]
[90.63050079 93.92032623]
[94.60799408 89.24951935]
[97.71210480 74.57421875]
[100.81621552 59.89891434]
[103.92032623 45.22360992]
[107.02443695 30.54830933]
[110.12854767 15.87300682]
[112.90415192 1.13204396]
[115.34988403 -13.66722679]
[117.57499695 -28.50127029]
[119.57901001 -43.36679840]
[121.58303070 -58.23232651]
[123.58704376 -73.09785461]
[111.54441071 -82.52771759]
[105.87612152 -96.62620544]
[108.01155853 -111.56964111]
[117.27808380 -123.35893250]
[131.10832214 -128.88977051]
[133.11233521 -143.75531006]
[135.11634827 -158.62083435]
[137.12036133 -173.48635864]
[137.12036133 -188.48635864]
[135.11634827 -203.35188293]
[133.11233521 -218.21742249]
[130.99771118 -233.06761169]
[128.77259827 -247.90165710]
[126.54747772 -262.73568726]
[124.32235718 -277.56973267]
[122.09723663 -292.40377808]
[107.10363007 -294.09317017]
[93.05851746 -299.60653687]
[80.91951752 -308.56796265]
[71.51428986 -320.36645508]
[65.48410034 -334.19754028]
[63.24009323 -349.11822510]
[64.93527222 -364.11117554]
[70.45406342 -378.15417480]
[79.42017365 -390.28970337]
[91.22228241 -399.69036865]
[105.05570221 -405.71524048]
[119.97725677 -407.95346069]
[134.96955872 -406.25250244]
[149.01040649 -400.72830200]
[161.14248657 -391.75750732]
[170.53860474 -379.95175171]
[176.55810547 -366.11599731]
[178.79058838 -351.19360352]
[177.08383179 -336.20196533]
[171.55419922 -322.16323853]
[162.57872009 -310.03463745]
[150.76934814 -300.64306641]
[136.93128967 -294.62890625]
[139.15640259 -279.79486084]
[141.38151550 -264.96081543]
[143.60662842 -250.12677002]
[145.83175659 -235.29272461]
[149.93269348 -229.14424133]
[147.97785950 -220.22143555]
[149.98187256 -205.35589600]
[151.98588562 -190.49037170]
[157.15562439 -204.57135010]
[166.37408447 -216.40435791]
[178.76261902 -224.86154175]
[193.14045715 -229.13682556]
[208.13716125 -228.82270813]
[222.32336426 -223.94914246]
[234.34692383 -214.98063660]
[243.06182861 -202.77201843]
[247.63742065 -188.48692322]
[247.63758850 -173.48692322]
[243.06233215 -159.20172119]
[234.34771729 -146.99288940]
[222.32437134 -138.02410889]
[208.13827515 -133.15020752]
[193.14157104 -132.83573914]
[178.76364136 -137.11068726]
[166.37490845 -145.56759644]
[157.15617371 -157.40037537]
[151.98588562 -171.48234558]
[149.98187256 -156.61682129]
[147.97785950 -141.75129700]
[145.97384644 -126.88576508]
[157.84576416 -117.89002228]
[163.65960693 -104.06775665]
[161.76168823 -89.09230042]
[152.56239319 -76.99810791]
[138.45257568 -71.09384155]
[136.44856262 -56.22831345]
[134.44453430 -41.36278534]
[132.44052124 -26.49725723]
[134.57235718 -22.22357559]
[134.04211426 -16.56531906]
[130.14915466 -11.22149944]
[127.70342255 3.57777143]
[129.44848633 6.64160633]
[129.79626465 10.70289993]
[128.29408264 15.09570885]
[124.80384827 18.97711754]
[121.69973755 33.65242004]
[118.59562683 48.32772064]
[115.49151611 63.00302505]
[112.38740540 77.67832947]
[109.28329468 92.35363007]
[106.39802551 107.07351685]
[103.73223114 121.83473969]
[108.89379883 136.79029846]
[99.01777649 147.93989563]
[100.57224274 156.94108582]
[96.20084381 162.90032959]
[93.31556702 177.62022400]
[99.85044098 188.74040222]
[97.14425659 200.94123840]
[87.18022156 207.80014038]
[84.07611084 222.47544861]
[80.97200012 237.15074158]
[77.86788940 251.82604980]
[86.22271729 264.97271729]
[82.86565399 279.81134033]
[70.28083801 287.69537354]
[67.17672729 302.37066650]
[64.07261658 317.04595947]
[60.96850967 331.72128296]
[57.86439896 346.39657593]
[54.76028824 361.07186890]
[66.30779266 351.49819946]
[81.18486786 349.58175659]
[94.78166962 355.91632080]
[102.88510132 368.53909302]
[102.98421478 383.53875732]
[95.04830170 396.26751709]
[81.53639221 402.78121948]
[66.63529968 401.06152344]
[54.96228409 391.64129639]
[50.13434982 377.43923950]
[45.09743118 391.56826782]
[40.06051636 405.69729614]
[35.02360153 419.82632446]
[29.98668480 433.95535278]
[24.94976807 448.08438110]
[38.32051468 454.93115234]
[50.68315887 463.46459961]
[61.82616043 473.53875732]
[71.55884552 484.98123169]
[79.71466827 497.59619141]
[86.15408325 511.16781616]
[90.76689911 525.46386719]
[93.47418976 540.23968506]
[94.22961426 555.24249268]
[93.02026367 570.21557617]
[89.86682892 584.90264893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[46 179]
[49 176]
[50 175]
[51 174]
[52 173]
[54 170]
[55 169]
[56 167]
[58 165]
[59 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[68 154]
[69 153]
[70 150]
[71 149]
[72 148]
[73 147]
[78 142]
[79 141]
[80 140]
[81 139]
[82 120]
[83 119]
[84 118]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
