%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[94.25539398 519.38836670]
[89.88165283 505.01831055]
[87.38146973 490.20693970]
[86.79590607 475.19741821]
[88.13458252 460.23626709]
[91.37551117 445.56912231]
[96.46547699 431.43688965]
[103.32089233 418.07156372]
[111.82918549 405.69265747]
[121.85065460 394.50344849]
[133.22071838 384.68765259]
[145.75268555 376.40646362]
[159.24076843 369.79586792]
[154.41476440 355.59338379]
[149.58877563 341.39093018]
[144.46040344 336.06915283]
[144.79835510 326.94097900]
[140.18435669 312.66824341]
[135.57034302 298.39550781]
[129.64717102 312.17648315]
[116.81427765 319.94290161]
[101.85803223 318.79803467]
[90.35673523 309.16891479]
[86.60009003 294.64694214]
[91.98922729 280.64846802]
[104.51413727 272.39456177]
[119.50333405 272.96377563]
[131.36688232 282.14471436]
[128.48161316 267.42480469]
[125.59633636 252.70492554]
[122.71106720 237.98503113]
[119.71629333 223.28701782]
[116.61218262 208.61172485]
[113.50807190 193.93641663]
[110.29479980 179.28463745]
[106.97253418 164.65716553]
[103.65027618 150.02970886]
[100.32801819 135.40225220]
[89.96399689 124.70475769]
[94.45261383 109.53363800]
[84.37169647 120.64107513]
[69.39324188 119.83734131]
[60.55881500 107.71492767]
[64.38082123 93.21002960]
[78.04182434 87.01510620]
[91.47042084 93.69553375]
[89.24530029 78.86149597]
[87.02018738 64.02745056]
[84.79506683 49.19340515]
[69.96811676 46.12960815]
[57.10813904 38.19279861]
[47.75711441 26.35732079]
[43.02850342 12.06360435]
[43.47470093 -2.95712757]
[49.02256012 -16.89254189]
[58.98455429 -28.06786346]
[72.14392853 -35.14714050]
[69.91880798 -49.98118591]
[67.69369507 -64.81523132]
[65.46857452 -79.64927673]
[63.24345779 -94.48331451]
[58.46842957 -80.26364136]
[49.92797470 -67.93235779]
[38.29563141 -58.46195221]
[24.48877144 -52.59930420]
[9.59626293 -50.80677032]
[-5.20740986 -53.22571182]
[-18.75476646 -59.66536713]
[-29.97740555 -69.61787415]
[-37.99026489 -82.29833221]
[-42.16141510 -96.70671844]
[-42.16190338 -111.70671844]
[-37.99168777 -126.11537170]
[-29.97965240 -138.79635620]
[-18.75765991 -148.74958801]
[-5.21072149 -155.19012451]
[9.59279346 -157.61003113]
[24.48541832 -155.81845093]
[38.29265976 -149.95671082]
[49.92562103 -140.48706055]
[58.46687317 -128.15632629]
[63.24345779 -113.93354797]
[65.46857452 -128.76759338]
[67.69369507 -143.60163879]
[69.91880798 -158.43568420]
[72.14392853 -173.26972961]
[74.36904144 -188.10377502]
[76.59416199 -202.93782043]
[78.81927490 -217.77185059]
[81.04439545 -232.60589600]
[79.22261810 -241.55682373]
[83.41465759 -247.64358521]
[85.86038208 -262.44284058]
[88.30610657 -277.24212646]
[90.75183868 -292.04138184]
[92.20125580 -306.97119141]
[92.64785767 -321.96453857]
[92.98283386 -336.96081543]
[93.20616150 -351.95913696]
[93.42948914 -366.95748901]
[79.95417786 -374.21520996]
[71.40482330 -386.91036987]
[69.74601746 -402.12573242]
[75.35892487 -416.36486816]
[86.95375824 -426.35580444]
[101.86609650 -429.80264282]
[116.66920471 -425.91333008]
[127.96142578 -415.58163452]
[133.14790344 -401.18164062]
[131.03680420 -386.02243042]
[122.11325836 -373.58743286]
[108.42783356 -366.73416138]
[108.20450592 -351.73580933]
[107.98117828 -336.73748779]
[111.02474213 -330.00262451]
[107.64121246 -321.51794434]
[107.19460297 -306.52459717]
[116.85685730 -317.99807739]
[131.15650940 -322.52798462]
[145.66264343 -318.71066284]
[155.88040161 -307.72897339]
[158.64367676 -292.98568726]
[153.09623718 -279.04919434]
[140.95703125 -270.23785400]
[125.98752594 -269.28195190]
[112.82617188 -276.47769165]
[105.55110931 -289.59567261]
[103.10537720 -274.79638672]
[100.65965271 -259.99713135]
[98.21392822 -245.19784546]
[95.87844086 -230.38078308]
[93.65332031 -215.54673767]
[91.42820740 -200.71269226]
[89.20308685 -185.87864685]
[86.97796631 -171.04460144]
[84.75285339 -156.21057129]
[82.52773285 -141.37652588]
[80.30261993 -126.54248047]
[78.07749939 -111.70843506]
[78.07749939 -96.70843506]
[80.30261993 -81.87438965]
[82.52773285 -67.04034424]
[84.75285339 -52.20630264]
[86.97796631 -37.37225723]
[101.63525391 -34.46549988]
[114.43766022 -26.70485306]
[123.83000183 -15.01047993]
[128.66363525 -0.78172743]
[128.33691406 14.27029324]
[122.86995697 28.32847977]
[112.90460968 39.68910599]
[99.62911224 46.96828842]
[101.85422516 61.80233002]
[104.07934570 76.63637543]
[106.30446625 91.47042084]
[109.08007050 106.21138000]
[119.68172455 117.95512390]
[114.95547485 132.07998657]
[118.27774048 146.70745850]
[121.59999847 161.33491516]
[124.92225647 175.96237183]
[129.87463379 183.63777161]
[128.18336487 190.83230591]
[131.28747559 205.50761414]
[134.39158630 220.18290710]
[139.22915649 227.93119812]
[137.43095398 235.09976196]
[140.31622314 249.81964111]
[143.20150757 264.53955078]
[146.08677673 279.25942993]
[149.84307861 293.78149414]
[154.45707703 308.05422974]
[159.07109070 322.32696533]
[163.79122925 336.56494141]
[168.61721802 350.76739502]
[173.44322205 364.96984863]
[188.16647339 361.99423218]
[203.14935303 360.92587280]
[218.14585876 361.78231812]
[232.90969849 364.54946899]
[247.19845581 369.18194580]
[260.77749634 375.60360718]
[273.42382812 383.70907593]
[284.92980957 393.36520386]
[295.10650635 404.41342163]
[303.78674316 416.67236328]
[310.82806396 429.94067383]
[316.11480713 444.00051880]
[319.56015015 458.62097168]
[321.10754395 473.56198120]
[320.73153687 488.57821655]
[318.43835449 503.42306519]
[314.26562500 517.85278320]
[308.28186035 531.63043213]
[300.58535767 544.52972412]
[291.30245972 556.33886719]
[280.58560181 566.86395264]
[268.61077881 575.93212891]
[255.57464600 583.39453125]
[241.69123840 589.12860107]
[227.18855286 593.04016113]
[212.30471802 595.06494141]
[197.28416443 595.16979980]
[182.37350464 593.35290527]
[167.81762695 589.64422607]
[153.85554504 584.10449219]
[140.71649170 576.82482910]
[128.61627197 567.92462158]
[117.75355530 557.55017090]
[108.30671692 545.87176514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 176]
[14 175]
[15 174]
[17 173]
[18 172]
[19 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 165]
[33 164]
[34 163]
[35 161]
[36 160]
[37 159]
[38 158]
[40 156]
[46 155]
[47 154]
[48 153]
[49 152]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 117]
[97 116]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
