%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[100.88145447 465.58993530]
[101.85921478 450.31567383]
[109.83316803 437.25143433]
[122.97097015 429.39926147]
[122.07815552 414.42584229]
[121.07389069 399.45950317]
[119.95824432 384.50103760]
[118.84259796 369.54260254]
[117.72694397 354.58413696]
[116.61129761 339.62570190]
[114.93975830 324.71911621]
[112.71463776 309.88507080]
[110.48952484 295.05102539]
[108.26440430 280.21697998]
[106.03929138 265.38293457]
[103.81417084 250.54890442]
[94.27449799 239.11019897]
[99.87905884 224.31494141]
[88.99993134 234.64183044]
[74.12274170 232.72627258]
[66.21440887 219.98036194]
[71.10466003 205.79991150]
[85.18857574 200.63819885]
[98.08310699 208.29890442]
[96.96746063 193.34045410]
[93.33517456 186.90396118]
[95.94824982 178.15127563]
[95.05543518 163.17787170]
[94.16261292 148.20446777]
[91.24855042 144.42063904]
[90.68051910 138.76605225]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[91.08715820 52.68004227]
[90.64054871 37.68669510]
[90.19394684 22.69334412]
[89.74733734 7.69999361]
[89.30073547 -7.29335642]
[88.29647064 -22.25970078]
[86.73594666 -37.17830658]
[85.17543030 -52.09690857]
[83.61490631 -67.01551819]
[82.05438232 -81.93412018]
[68.70639038 -84.64057922]
[56.67580032 -90.98889923]
[46.93215942 -100.45677948]
[40.25768280 -112.27092743]
[37.18447113 -125.47024536]
[37.95209885 -138.98402405]
[42.48896790 -151.71875000]
[50.41886902 -162.64665222]
[61.09215546 -170.88859558]
[73.63896942 -175.78483582]
[72.52331543 -190.74328613]
[71.40766907 -205.70173645]
[70.29202271 -220.66020203]
[66.53300476 -228.98532104]
[69.27280426 -235.84938049]
[68.37998962 -250.82278442]
[65.86142731 -254.35983276]
[64.71473694 -258.13470459]
[64.84622192 -261.68692017]
[66.02226257 -264.63369751]
[67.90679169 -266.70895386]
[67.90679169 -281.70895386]
[67.90679169 -296.70895386]
[67.90679169 -311.70895386]
[67.90679169 -326.70895386]
[65.60321808 -330.38964844]
[64.68324280 -334.22607422]
[65.02593231 -337.76412964]
[66.37528229 -340.63571167]
[68.37998962 -342.59512329]
[69.27280426 -357.56851196]
[70.16562653 -372.54193115]
[71.05844116 -387.51531982]
[56.13240433 -391.83145142]
[42.54298019 -399.34985352]
[30.96679115 -409.69271851]
[21.97942352 -422.34155273]
[16.02682686 -436.66345215]
[13.40318108 -451.94256592]
[14.23635674 -467.41589355]
[18.48169136 -482.31149292]
[25.92436600 -495.88696289]
[36.19027710 -507.46633911]
[48.76484680 -516.47387695]
[63.01879501 -522.46258545]
[78.23965454 -525.13653564]
[78.90943909 -540.12158203]
[79.57922363 -555.10656738]
[80.24900818 -570.09161377]
[77.50591278 -578.80444336]
[81.04196930 -585.29431152]
[81.93478394 -600.26770020]
[68.01457977 -606.26800537]
[56.98821640 -616.66967773]
[50.18719101 -630.21673584]
[48.43275452 -645.27319336]
[51.93676758 -660.02099609]
[60.27609634 -672.67926025]
[72.44373322 -681.71942139]
[86.97037506 -686.04986572]
[102.10186005 -685.14758301]
[116.01097870 -679.12164307]
[127.01815033 -668.69964600]
[133.79420471 -655.14013672]
[135.52088928 -640.08044434]
[131.98970032 -625.33911133]
[123.62705994 -612.69622803]
[111.44278717 -603.67852783]
[96.90818787 -599.37487793]
[96.01537323 -584.40148926]
[95.23404694 -569.42187500]
[94.56426239 -554.43682861]
[93.89447784 -539.45178223]
[93.22469330 -524.46673584]
[107.25128937 -520.79052734]
[120.20888519 -514.26849365]
[131.52708435 -505.18499756]
[140.70706177 -493.93704224]
[147.34355164 -481.01724243]
[151.14271545 -466.99200439]
[151.93524170 -452.47686768]
[149.68376160 -438.10937500]
[144.48468018 -424.52114868]
[136.56407166 -412.31002808]
[126.26777649 -402.01391602]
[114.04634857 -394.08691406]
[100.43534851 -388.87939453]
[86.03184509 -386.62252808]
[85.13903046 -371.64910889]
[84.24621582 -356.67568970]
[83.35340118 -341.70230103]
[82.90679169 -326.70895386]
[82.90679169 -311.70895386]
[82.90679169 -296.70895386]
[82.90679169 -281.70895386]
[82.90679169 -266.70895386]
[83.35340118 -251.71559143]
[84.24621582 -236.74218750]
[85.25047302 -221.77584839]
[86.36611938 -206.81739807]
[87.48177338 -191.85893250]
[88.59741974 -176.90048218]
[104.52381134 -172.74786377]
[118.08718872 -163.37904358]
[127.63825226 -149.91188049]
[132.00828552 -133.96388245]
[130.65217590 -117.45793152]
[123.71630096 -102.39041138]
[112.02296448 -90.58976746]
[96.97298431 -83.49464417]
[98.53350830 -68.57603455]
[100.09403229 -53.65743256]
[101.65455627 -38.73882675]
[103.21508026 -23.82022285]
[114.54447937 -33.65102768]
[129.32128906 -31.07308769]
[136.65260315 -17.98676300]
[131.13403320 -4.03880644]
[116.83368683 0.48886740]
[104.29408264 -7.73996210]
[104.74069214 7.25338793]
[105.18729401 22.24673843]
[105.63390350 37.24008942]
[106.08050537 52.23343658]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[109.13602448 147.31164551]
[110.02883911 162.28504944]
[110.92165375 177.25845337]
[111.92591095 192.22480774]
[113.04156494 207.18325806]
[114.71310425 222.08982849]
[124.41193390 234.58955383]
[118.64821625 248.32377625]
[120.87332916 263.15783691]
[123.09844971 277.99188232]
[125.32356262 292.82589722]
[127.54868317 307.65994263]
[129.77380371 322.49398804]
[140.65293884 312.16711426]
[155.53012085 314.08267212]
[163.43844604 326.82858276]
[158.54820251 341.00903320]
[144.46427917 346.17074585]
[131.56974792 338.51004028]
[132.68539429 353.46850586]
[133.80105591 368.42694092]
[134.91670227 383.38540649]
[136.03234863 398.34384155]
[139.79136658 406.66897583]
[137.05155945 413.53302002]
[137.94438171 428.50643921]
[151.92216492 434.74182129]
[161.39205933 446.76593018]
[164.17794800 461.81576538]
[159.63963318 476.43295288]
[148.82002258 487.25860596]
[134.20533752 491.80502319]
[119.15396881 489.02749634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 200]
[7 199]
[8 198]
[9 197]
[10 196]
[11 190]
[12 189]
[13 188]
[14 187]
[15 186]
[16 185]
[18 183]
[24 182]
[25 181]
[27 180]
[28 179]
[29 178]
[32 177]
[33 176]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[57 149]
[58 148]
[59 147]
[60 146]
[62 145]
[63 144]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[77 138]
[78 137]
[79 136]
[80 135]
[93 121]
[94 120]
[95 119]
[96 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
