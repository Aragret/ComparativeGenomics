%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[91.96749115 375.67245483]
[85.44660950 389.19027710]
[77.84558868 402.13156128]
[69.21502686 414.41024780]
[59.61233902 425.94461060]
[49.10144424 436.65786743]
[37.75228500 446.47872925]
[25.64039612 455.34185791]
[12.84637451 463.18823242]
[-0.54463232 469.96569824]
[-14.44351006 475.62908936]
[-28.75776100 480.14071655]
[-43.39212799 483.47061157]
[-58.24921799 485.59655762]
[-73.23015594 486.50445557]
[-88.23524475 486.18823242]
[-103.16463470 484.64999390]
[-117.91896820 481.89996338]
[-132.40003967 477.95648193]
[-146.51150513 472.84576416]
[-160.15943909 466.60183716]
[-173.25302124 459.26623535]
[-185.70510864 450.88778687]
[-197.43283081 441.52224731]
[-208.35815430 431.23196411]
[-218.40835571 420.08538818]
[-227.51655579 408.15670776]
[-235.62214661 395.52529907]
[-242.67118835 382.27526855]
[-248.61676025 368.49472046]
[-253.41931152 354.27542114]
[-257.04684448 339.71200562]
[-259.47528076 324.90133667]
[-260.68838501 309.94201660]
[-260.67813110 294.93359375]
[-259.44458008 279.97595215]
[-256.99594116 265.16864014]
[-253.34849548 250.61015320]
[-248.52653503 236.39743042]
[-242.56214905 222.62504578]
[-235.49501038 209.38462830]
[-227.37217712 196.76432800]
[-218.24768066 184.84809875]
[-208.18226624 173.71525574]
[-197.24288940 163.43989563]
[-185.50238037 154.09039307]
[-173.03886414 145.72895813]
[-159.93527222 138.41125488]
[-146.27882385 132.18597412]
[-132.16040039 127.09453583]
[-117.67394257 123.17083740]
[-102.91587067 120.44097900]
[-87.98439789 118.92313385]
[-72.97888947 118.62740326]
[-57.99920273 119.55575562]
[-43.14503098 121.70200348]
[-28.51522636 125.05187988]
[-14.20715141 129.58308411]
[-0.31602368 135.26545715]
[13.06571293 142.06118774]
[25.84900284 149.92503357]
[37.94877625 158.80470276]
[47.77935410 147.47509766]
[47.23762894 135.39068604]
[55.33492661 125.87136078]
[68.14585114 124.37368774]
[78.14402008 113.19171143]
[88.14219666 102.00973511]
[97.97277832 90.68014526]
[107.63358307 79.20544434]
[117.29439545 67.73074341]
[126.95520782 56.25604248]
[136.61601257 44.78134155]
[146.27682495 33.30664062]
[155.93763733 21.83194160]
[165.07644653 9.93730831]
[173.67500305 -2.35352945]
[181.99694824 -14.83332348]
[190.03811646 -27.49584770]
[198.07929993 -40.15837479]
[206.12046814 -52.82089615]
[214.16163635 -65.48342133]
[222.20281982 -78.14595032]
[230.24398804 -90.80847168]
[218.22805786 -99.79958344]
[206.93563843 -109.68412781]
[196.43302917 -120.40409851]
[186.78182983 -131.89659119]
[178.03871155 -144.09414673]
[170.25495911 -156.92521667]
[163.47627258 -170.31445312]
[157.74240112 -184.18333435]
[153.08703613 -198.45043945]
[149.53744507 -213.03204346]
[147.11450195 -227.84257507]
[145.83241272 -242.79513550]
[145.69869995 -257.80197144]
[146.71414185 -272.77499390]
[148.87278748 -287.62637329]
[152.16197205 -302.26889038]
[156.56239319 -316.61669922]
[162.04820251 -330.58554077]
[168.58723450 -344.09344482]
[176.14111328 -357.06115723]
[184.66549683 -369.41259766]
[194.11036682 -381.07522583]
[204.42028809 -391.98065186]
[215.53477478 -402.06484985]
[227.38858032 -411.26864624]
[239.91217041 -419.53802490]
[253.03201294 -426.82446289]
[266.67114258 -433.08520508]
[280.74951172 -438.28350830]
[295.18450928 -442.38888550]
[309.89138794 -445.37719727]
[324.78387451 -447.23092651]
[339.77459717 -447.93920898]
[354.77551270 -447.49786377]
[369.69863892 -445.90951538]
[384.45642090 -443.18347168]
[398.96218872 -439.33572388]
[413.13085938 -434.38882446]
[426.87927246 -428.37185669]
[440.12673950 -421.32009888]
[452.79553223 -413.27496338]
[464.81127930 -404.28359985]
[476.10351562 -394.39886475]
[486.60592651 -383.67868042]
[496.25689697 -372.18600464]
[504.99978638 -359.98828125]
[512.78326416 -347.15707397]
[519.56170654 -333.76770020]
[525.29534912 -319.89871216]
[529.95043945 -305.63153076]
[533.49975586 -291.04986572]
[535.92242432 -276.23925781]
[537.20422363 -261.28668213]
[537.33764648 -246.27986145]
[536.32189941 -231.30685425]
[534.16296387 -216.45552063]
[530.87353516 -201.81304932]
[526.47283936 -187.46533203]
[520.98675537 -173.49659729]
[514.44744873 -159.98880005]
[506.89334106 -147.02122498]
[498.36874390 -134.66996765]
[488.92364502 -123.00750732]
[478.61349487 -112.10228729]
[467.49884033 -102.01830292]
[455.64483643 -92.81472778]
[443.12112427 -84.54557800]
[430.00112915 -77.25938416]
[416.36187744 -70.99890137]
[402.28341675 -65.80086517]
[387.84835815 -61.69578171]
[373.14138794 -58.70774841]
[358.24887085 -56.85429382]
[343.25814819 -56.14629745]
[328.25723267 -56.58791351]
[313.33413696 -58.17654800]
[298.57641602 -60.90288162]
[284.07070923 -64.75091553]
[269.90216064 -69.69805908]
[256.15383911 -75.71529388]
[242.90650940 -82.76730347]
[234.86534119 -70.10477448]
[226.82415771 -57.44224930]
[218.78298950 -44.77972412]
[210.74182129 -32.11719894]
[202.70065308 -19.45467567]
[194.65946960 -6.79215002]
[195.06665039 -3.28978729]
[193.79765320 0.58380300]
[190.69648743 4.03866243]
[185.96583557 6.24503469]
[177.36727905 18.53587341]
[192.28828430 16.99843597]
[204.01266479 26.35465813]
[205.82415771 41.24487305]
[196.68507385 53.13928604]
[181.83068848 55.22423935]
[169.77024841 46.30537796]
[167.41233826 31.49275208]
[157.75152588 42.96745300]
[148.09071350 54.44215012]
[138.42990112 65.91685486]
[128.76910400 77.39155579]
[119.10828400 88.86624908]
[109.44747925 100.34095001]
[108.70120239 105.53296661]
[105.09906769 109.93727875]
[99.32417297 112.00790405]
[89.32599640 123.18988037]
[79.32782745 134.37185669]
[75.98121643 152.47935486]
[59.10894775 157.30567932]
[49.27836990 168.63528442]
[59.77511215 179.36239624]
[69.36255646 190.90942383]
[77.97690582 203.19949341]
[85.56083679 216.15081787]
[92.06385803 229.67721558]
[97.44271851 243.68865967]
[101.66159821 258.09191895]
[104.69243622 272.79113770]
[106.51506042 287.68847656]
[107.11734009 302.68481445]
[106.49526215 317.68032837]
[104.65297699 332.57525635]
[101.60272980 347.27044678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 197]
[63 196]
[66 194]
[67 193]
[68 192]
[69 189]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[75 183]
[76 176]
[77 175]
[78 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
