%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[153.39166260 562.11492920]
[157.85256958 547.69262695]
[166.04011536 535.00927734]
[177.34672546 525.00610352]
[190.93338013 518.42541504]
[188.26757812 503.66421509]
[185.60179138 488.90301514]
[182.93598938 474.14178467]
[180.27020264 459.38055420]
[177.60440063 444.61935425]
[174.39112854 429.96755981]
[170.63482666 415.44549561]
[166.66273499 400.98098755]
[162.47572327 386.57720947]
[158.28871155 372.17340088]
[148.88679504 383.86117554]
[133.88705444 383.95040894]
[124.34674835 372.37533569]
[127.29863739 357.66864014]
[140.56669617 350.67160034]
[154.36909485 356.54089355]
[151.26498413 341.86560059]
[148.16088867 327.19027710]
[145.05677795 312.51498413]
[141.95266724 297.83969116]
[130.27600098 292.39126587]
[123.77236176 281.04293823]
[125.01053619 267.82638550]
[133.76156616 257.58752441]
[130.87629700 242.86764526]
[127.44522858 228.26531982]
[123.47313690 213.80079651]
[119.50103760 199.33627319]
[115.52893829 184.87174988]
[111.55684662 170.40722656]
[107.58474731 155.94270325]
[96.75339508 145.71865845]
[100.56011200 130.36224365]
[96.58801270 115.89772034]
[84.35319519 104.42228699]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[80.39710999 59.43269348]
[69.11524963 48.34079361]
[72.99239349 33.95965576]
[68.80538177 19.55587578]
[64.61837006 5.15209341]
[60.43136215 -9.25168896]
[56.24435043 -23.65546989]
[51.95723724 -9.28116512]
[41.92207718 1.86762762]
[28.07650375 7.63824987]
[13.09387875 6.91648531]
[-0.13288711 -0.15830487]
[-9.04991341 -12.22008991]
[-11.93546104 -26.93992615]
[-8.23237610 -41.47564697]
[1.34433341 -53.02062988]
[14.94555473 -59.34572220]
[29.94510651 -59.22964478]
[43.44680786 -52.69480896]
[52.84425354 -41.00185013]
[51.28373337 -55.92045593]
[49.72320938 -70.83905792]
[48.16268539 -85.75766754]
[46.60216141 -100.67626953]
[37.47114944 -113.59661102]
[43.84238434 -127.05976868]
[42.28186035 -141.97837830]
[40.49939346 -156.87208557]
[38.49538040 -171.73760986]
[36.49136734 -186.60314941]
[34.48735428 -201.46867371]
[32.48334122 -216.33419800]
[30.47932625 -231.19972229]
[24.40486908 -217.48474121]
[13.33198357 -207.36589050]
[-0.87335116 -202.54837036]
[-15.81728840 -203.84402466]
[-28.98151207 -211.03453064]
[-38.14761734 -222.90812683]
[-41.77095795 -237.46392822]
[-39.24093628 -252.24902344]
[-30.98390388 -264.77185059]
[-18.39131737 -272.92211914]
[-3.58524656 -275.32635498]
[10.93922329 -271.57937622]
[22.73446465 -262.31265259]
[29.81323814 -249.08616638]
[30.14821434 -264.08242798]
[29.92488670 -279.08078003]
[29.70155907 -294.07910156]
[29.47823143 -309.07745361]
[18.41913033 -320.04711914]
[18.40629959 -335.26074219]
[28.93237495 -345.73632812]
[28.70904732 -360.73464966]
[28.48571777 -375.73300171]
[28.26239014 -390.73132324]
[14.57696152 -397.58462524]
[5.65341711 -410.01962280]
[3.54232383 -425.17883301]
[8.72879505 -439.57879639]
[20.02101898 -449.91049194]
[34.82412338 -453.79980469]
[49.73646164 -450.35296631]
[61.33129120 -440.36206055]
[66.94420624 -426.12289429]
[65.28539276 -410.90753174]
[56.73604202 -398.21237183]
[43.26072693 -390.95465088]
[43.48405457 -375.95632935]
[43.70738220 -360.95797729]
[43.93070984 -345.95965576]
[54.76401520 -335.80212402]
[55.20415878 -320.59484863]
[44.47656631 -309.30078125]
[44.69989777 -294.30242920]
[44.92322540 -279.30410767]
[45.14655304 -264.30575562]
[57.30783463 -273.08660889]
[71.79573059 -269.20062256]
[77.93030548 -255.51240540]
[71.18936920 -242.11241150]
[56.54210281 -238.87861633]
[44.78664398 -248.19335938]
[45.34485626 -233.20375061]
[47.34886932 -218.33821106]
[49.35288239 -203.47268677]
[51.35689545 -188.60716248]
[53.36090851 -173.74162292]
[55.36492157 -158.87609863]
[58.55234528 -155.31950378]
[59.53937531 -149.72282410]
[57.20046616 -143.53889465]
[58.76099014 -128.62028503]
[67.78038025 -116.76702881]
[61.52076721 -102.23679352]
[63.08129120 -87.31818390]
[64.64181519 -72.39958191]
[66.20233917 -57.48097992]
[67.76286316 -42.56237411]
[70.64813232 -27.84248161]
[74.83514404 -13.43869972]
[79.02215576 0.96508217]
[83.20916748 15.36886406]
[87.39617920 29.77264595]
[98.37855530 39.83429337]
[94.80088806 55.24568176]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[113.02512360 90.26731110]
[116.19271851 101.47479248]
[111.05253601 111.92562103]
[115.02463531 126.39014435]
[126.14009857 137.64878845]
[122.04927063 151.97059631]
[126.02136993 166.43511963]
[129.99346924 180.89964294]
[133.96556091 195.36416626]
[137.93765259 209.82870483]
[141.90975952 224.29322815]
[151.48464966 212.74673462]
[166.48403931 212.88084412]
[175.85095215 224.59667969]
[172.68043518 239.25778198]
[159.30967712 246.05651855]
[145.59617615 239.98236084]
[148.48146057 254.70225525]
[163.17578125 264.19415283]
[166.39549255 281.04492188]
[156.62796021 294.73556519]
[159.73207092 309.41088867]
[162.83618164 324.08618164]
[165.94029236 338.76147461]
[169.04440308 353.43679810]
[172.69248962 367.98638916]
[176.87950134 382.39019775]
[181.06651306 396.79397583]
[185.56689453 401.63732910]
[186.76576233 407.19247437]
[185.15689087 411.68920898]
[188.91319275 426.21127319]
[198.65893555 414.80859375]
[213.65466309 415.16601562]
[222.84611511 427.02001953]
[219.45765686 441.63229370]
[205.98716736 448.23120117]
[192.36561584 441.95355225]
[195.03141785 456.71478271]
[197.69720459 471.47598267]
[200.36300659 486.23721313]
[203.02880859 500.99841309]
[205.69459534 515.75964355]
[220.72480774 517.17230225]
[234.81610107 522.58868408]
[246.92283630 531.60699463]
[256.14660645 543.55792236]
[261.80294800 557.55462646]
[263.47210693 572.55853271]
[261.03024292 587.45617676]
[254.65853882 601.14208984]
[244.82983398 612.60064697]
[232.27348328 620.98162842]
[217.92123413 625.66302490]
[202.83811951 626.29748535]
[188.14343262 622.83795166]
[174.92759705 615.54107666]
[164.17131042 604.94836426]
[156.67277527 591.84588623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 183]
[12 182]
[13 179]
[14 178]
[15 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[29 169]
[30 168]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[38 155]
[39 154]
[41 151]
[42 150]
[43 149]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[68 136]
[69 135]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[89 126]
[90 120]
[91 119]
[92 118]
[93 117]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
