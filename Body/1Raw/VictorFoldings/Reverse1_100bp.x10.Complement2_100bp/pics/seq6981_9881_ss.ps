%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[59.41598129 716.15270996]
[44.36136246 717.51275635]
[29.57503128 714.37335205]
[16.37178040 707.01367188]
[5.92563391 696.08801270]
[-0.83454442 682.56799316]
[-3.30764389 667.65576172]
[-1.27375841 652.67724609]
[5.08626032 638.96441650]
[15.20688438 627.73657227]
[28.18819427 619.99212646]
[42.87590027 616.41961670]
[43.76871490 601.44622803]
[44.66153336 586.47283936]
[45.55434799 571.49938965]
[46.44716263 556.52600098]
[37.75859451 541.27886963]
[48.02607346 525.99291992]
[40.86479187 512.93280029]
[49.21058655 499.49191284]
[49.88037109 484.50686646]
[50.55015564 469.52182007]
[51.21994019 454.53680420]
[51.88972855 439.55175781]
[52.55951309 424.56671143]
[38.44614792 421.06808472]
[25.28555107 414.87368774]
[13.58724403 406.22116089]
[3.80455256 395.44338989]
[-3.68295503 382.95565796]
[-8.58419800 369.23965454]
[-10.70789814 354.82485962]
[-9.97004318 340.26818848]
[-6.39721107 326.13241577]
[-0.12561476 312.96435547]
[8.60408878 301.27383423]
[19.45603371 291.51388550]
[32.01206207 284.06323242]
[45.78784180 279.21151733]
[60.25155640 277.14810181]
[61.14437103 262.17468262]
[62.03718567 247.20127869]
[62.93000412 232.22787476]
[54.06501007 244.32795715]
[40.86883545 251.45964050]
[25.88945770 252.24592590]
[12.01915836 246.53498840]
[1.93607581 235.42951965]
[-2.41290569 221.07382202]
[-0.18806566 206.23973083]
[8.18101406 193.79150391]
[21.07839584 186.13267517]
[36.01379776 184.74206543]
[50.10342407 189.88816833]
[60.62679291 200.57734680]
[65.55214691 214.74697876]
[69.09181976 200.17059326]
[72.63149261 185.59422302]
[76.17116547 171.01785278]
[79.71083832 156.44146729]
[83.25051117 141.86509705]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[104.07086182 40.24041367]
[106.95613861 25.52052116]
[98.40650177 12.49971199]
[101.54226685 -2.38724899]
[114.00830841 -10.45777702]
[109.06997681 -25.48852730]
[119.11090088 -36.48984909]
[121.99617767 -51.20974350]
[109.05895233 -59.07444763]
[99.61082458 -70.86871338]
[94.77704620 -85.15699768]
[95.12275696 -100.20858765]
[100.58692169 -114.20732117]
[110.49208069 -125.47063446]
[123.62824249 -132.65188599]
[138.40069580 -134.90126038]
[141.28598022 -149.62115479]
[144.17124939 -164.34104919]
[139.23292542 -179.37179565]
[149.27384949 -190.37312317]
[144.33551025 -205.40386963]
[154.37643433 -216.40519714]
[148.00607300 -233.68234253]
[160.04725647 -246.44857788]
[162.71305847 -261.20980835]
[165.37886047 -275.97100830]
[168.04464722 -290.73223877]
[170.71044922 -305.49343872]
[173.37623596 -320.25466919]
[176.04203796 -335.01586914]
[162.10339355 -340.70864868]
[149.65315247 -349.17538452]
[139.23559570 -360.04589844]
[131.30612183 -372.84500122]
[126.21138763 -387.01318359]
[124.17411041 -401.93106079]
[125.28334808 -416.94650269]
[129.49061584 -431.40307617]
[136.61196899 -444.66882324]
[146.33612061 -456.16381836]
[158.23796082 -465.38552856]
[171.79718018 -471.93081665]
[186.42105103 -475.51361084]
[201.47026062 -475.97723389]
[216.28692627 -473.30142212]
[230.22334290 -467.60314941]
[242.67024231 -459.13153076]
[253.08352661 -448.25692749]
[261.00796509 -435.45471191]
[266.09710693 -421.28451538]
[268.12850952 -406.36581421]
[267.01336670 -391.35083008]
[262.80041504 -376.89590454]
[255.67384338 -363.63296509]
[245.94517517 -352.14181519]
[234.03971863 -342.92477417]
[220.47792053 -336.38479614]
[205.85264587 -332.80776978]
[190.80325317 -332.35009766]
[188.13745117 -317.58886719]
[185.47166443 -302.82766724]
[182.80586243 -288.06643677]
[180.14007568 -273.30520630]
[177.47427368 -258.54400635]
[174.80848694 -243.78279114]
[181.44581604 -233.66981506]
[179.34570312 -221.35017395]
[169.09632874 -213.51991272]
[174.24102783 -199.54203796]
[163.99372864 -187.48785400]
[169.13844299 -173.50996399]
[158.89114380 -161.45578003]
[156.00587463 -146.73588562]
[153.12059021 -132.01599121]
[165.95072937 -124.35617828]
[175.40379333 -112.74717712]
[180.32386780 -98.57793427]
[180.09890747 -83.55226135]
[174.73677063 -69.48394775]
[164.86659241 -58.07781601]
[151.66503906 -50.72314835]
[136.71606445 -48.32447052]
[133.83079529 -33.60457611]
[138.97549438 -19.62669182]
[128.72819519 -7.57250452]
[137.22499084 4.60698748]
[134.50860596 19.57615280]
[121.67603302 28.40579414]
[118.79075623 43.12568665]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[102.93094635 136.73545837]
[101.36702728 142.19908142]
[97.82688904 145.40476990]
[94.28721619 159.98114014]
[90.74754333 174.55752563]
[87.20787048 189.13389587]
[83.66819763 203.71026611]
[80.12852478 218.28665161]
[77.90341187 233.12069702]
[77.01058960 248.09410095]
[76.11777496 263.06750488]
[75.22496033 278.04092407]
[90.16941833 282.12554932]
[103.93715668 289.21746826]
[115.93084717 299.00634766]
[125.63067627 311.06494141]
[132.61686707 324.86764526]
[136.58789062 339.81344604]
[137.37338257 355.25219727]
[134.94157410 370.51272583]
[129.40043640 384.93209839]
[120.99302673 397.88446045]
[110.08671570 408.80810547]
[97.15720367 417.22991943]
[82.76772308 422.78582764]
[67.54454803 425.23651123]
[66.87476349 440.22152710]
[66.20497894 455.20657349]
[65.53519440 470.19161987]
[64.86540985 485.17666626]
[64.19562531 500.16168213]
[71.30899811 514.29357910]
[63.01111221 526.66265869]
[71.12326813 536.69042969]
[70.25690460 549.15771484]
[61.42057037 557.41882324]
[60.52775192 572.39221191]
[59.63493729 587.36560059]
[58.74212265 602.33905029]
[57.84930420 617.31243896]
[72.00842285 622.60498047]
[83.97746277 631.83715820]
[92.69216156 644.18811035]
[97.37760925 658.55950928]
[97.61717224 673.67358398]
[93.38955688 688.18627930]
[85.07067871 700.80718994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[18 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[40 175]
[41 174]
[42 173]
[43 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 163]
[63 162]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[72 152]
[74 150]
[75 149]
[83 141]
[84 140]
[85 139]
[87 137]
[89 135]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
