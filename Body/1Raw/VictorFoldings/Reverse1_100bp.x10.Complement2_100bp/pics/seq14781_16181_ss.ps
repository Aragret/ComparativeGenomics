%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACCUCCUAGUCCGUCCGCGGUUCCUCACUCGGCUUCAAAGUAGUACGCCUCUACAACCUACCCCACCCCUCCAGCUACUUACUCACCAAUUAAUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[73.12859344 619.83081055]
[58.09418869 620.28515625]
[43.22029877 618.04748535]
[28.98505592 613.18969727]
[15.84607029 605.86804199]
[4.22570181 596.31781006]
[-5.50250196 584.84600830]
[-13.02581978 571.82147217]
[-18.10240746 557.66278076]
[-20.56907463 542.82513428]
[-20.34652710 527.78552246]
[-17.44191933 513.02740479]
[-11.94862366 499.02511597]
[-4.04322433 486.22885132]
[6.02015066 475.04992676]
[17.91800690 465.84771729]
[31.26787567 458.91799927]
[45.64061737 454.48358154]
[60.57420349 452.68698120]
[61.46701813 437.71359253]
[62.35983276 422.74017334]
[63.25265121 407.76678467]
[61.19830704 404.90112305]
[60.42991257 400.89804077]
[61.46693039 396.37277222]
[64.53442383 392.14932251]
[66.09494781 377.23074341]
[67.65547180 362.31213379]
[69.21599579 347.39352417]
[70.77651978 332.47491455]
[72.33704376 317.55630493]
[73.89756775 302.63769531]
[71.46699524 295.65814209]
[75.59399414 287.50918579]
[77.37645721 272.61547852]
[78.93698120 257.69686890]
[80.27521515 242.75668335]
[81.61344910 227.81649780]
[82.95168304 212.87631226]
[84.28991699 197.93612671]
[85.62815094 182.99594116]
[86.96638489 168.05575562]
[80.39540863 154.68894958]
[89.33304596 141.63409424]
[90.67127991 126.69390869]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[95.02529144 57.42491913]
[95.91811371 42.45151138]
[96.81092834 27.47810555]
[88.84896851 17.33068848]
[89.90085602 4.87768507]
[98.85920715 -3.25094032]
[99.97485352 -18.20939445]
[101.09049988 -33.16784668]
[102.09476471 -48.13418961]
[102.98757935 -63.10759735]
[103.88039398 -78.08100128]
[104.77320862 -93.05440521]
[102.16014099 -101.80710602]
[105.79242706 -108.24358368]
[103.27043152 -114.35514069]
[104.09039307 -119.97872162]
[107.17050934 -123.62864685]
[108.73102570 -138.54725647]
[110.29154968 -153.46585083]
[111.85207367 -168.38446045]
[110.51383972 -183.32464600]
[106.32682800 -197.72842407]
[102.13981628 -212.13220215]
[97.95280457 -226.53599548]
[93.76579285 -240.93977356]
[89.57878113 -255.34355164]
[85.39177704 -269.74734497]
[70.48820496 -267.80206299]
[55.46235657 -268.15475464]
[40.66646194 -270.79705811]
[26.44735336 -275.66711426]
[13.13834953 -282.65072632]
[1.05143154 -291.58419800]
[-9.53006554 -302.25811768]
[-18.35809708 -314.42224121]
[-25.22571945 -327.79147339]
[-29.97194862 -342.05239868]
[-32.48552322 -356.87069702]
[-32.70752335 -371.89904785]
[-30.63274384 -386.78515625]
[-26.30982018 -401.18002319]
[-19.84008980 -414.74627686]
[-11.37521267 -427.16586304]
[-1.11361504 -438.14767456]
[10.70415497 -447.43426514]
[23.80107117 -454.80795288]
[37.87012482 -460.09588623]
[52.58151627 -463.17407227]
[67.59039307 -463.97042847]
[82.54491425 -462.46624756]
[97.09453583 -458.69674683]
[110.89819336 -452.75036621]
[123.63230133 -444.76644897]
[134.99836731 -434.93215942]
[144.72993469 -423.47805786]
[152.59889221 -410.67257690]
[158.42079163 -396.81597900]
[162.05914307 -382.23300171]
[163.42866516 -367.26553345]
[162.49725342 -352.26443481]
[159.28672791 -337.58135986]
[153.87237549 -323.56048584]
[146.38110352 -310.53045654]
[136.98851013 -298.79675293]
[125.91477966 -288.63442993]
[113.41948700 -280.28170776]
[99.79555511 -273.93435669]
[103.98256683 -259.53057861]
[108.16957855 -245.12678528]
[112.35659027 -230.72300720]
[116.54360199 -216.31921387]
[120.73061371 -201.91543579]
[124.91762543 -187.51165771]
[127.52735138 -202.28288269]
[133.31626892 -216.12081909]
[142.00190735 -228.35028076]
[153.16049194 -238.37455750]
[166.24755859 -245.70454407]
[180.62455750 -249.98258972]
[195.59002686 -250.99996948]
[210.41374207 -248.70704651]
[224.37242126 -243.21566772]
[236.78500366 -234.79380798]
[247.04585266 -223.85237122]
[254.65431213 -210.92521667]
[259.23913574 -196.64308167]
[260.57662964 -181.70283508]
[258.60156250 -166.83343506]
[253.41026306 -152.76039124]
[245.25604248 -140.17036438]
[234.53675842 -129.67765808]
[221.77543640 -121.79421997]
[207.59472656 -116.90470886]
[192.68652344 -115.24768829]
[177.77825928 -116.90401459]
[163.59732056 -121.79286194]
[150.83561707 -129.67570496]
[140.11584473 -140.16792297]
[131.96104431 -152.75756836]
[126.77068329 -166.82392883]
[125.21015930 -151.90533447]
[123.64963531 -136.98672485]
[122.08911133 -122.06812286]
[120.75087738 -107.12793732]
[119.74662018 -92.16159058]
[118.85379791 -77.18818665]
[117.96098328 -62.21478271]
[117.06816864 -47.24137497]
[119.80796814 -40.37731934]
[116.04895782 -32.05220032]
[114.93331146 -17.09374428]
[113.81765747 -2.13529158]
[122.27825928 13.23953056]
[111.78433228 28.37092209]
[110.89151764 43.34432602]
[109.99870300 58.31773376]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[109.37303925 118.70159912]
[108.63690186 124.33676910]
[105.61146545 128.03215027]
[104.27323151 142.97232056]
[110.74848938 157.40776062]
[101.90657043 169.39399719]
[100.56833649 184.33416748]
[99.23010254 199.27435303]
[97.89186859 214.21453857]
[96.55363464 229.15472412]
[95.21540070 244.09490967]
[93.87716675 259.03509521]
[96.30788422 265.18353271]
[95.40428925 270.79428101]
[92.27017975 274.39794922]
[90.48770905 289.29165649]
[88.81616974 304.19824219]
[87.25564575 319.11682129]
[85.69512177 334.03543091]
[84.13459778 348.95404053]
[82.57407379 363.87265015]
[81.01355743 378.79125977]
[79.45303345 393.70986938]
[78.22605896 408.65957642]
[77.33323669 423.63299561]
[76.44042206 438.60641479]
[75.54760742 453.57980347]
[90.16188812 457.13824463]
[103.90584564 463.24917603]
[116.33766174 471.71615601]
[127.05770874 482.26699829]
[135.72137451 494.56256104]
[142.05017090 508.20758057]
[145.84063721 522.76342773]
[146.97093201 537.76214600]
[145.40472412 552.72161865]
[141.19236755 567.16101074]
[134.46925354 580.61614990]
[125.45152283 592.65441895]
[114.42904663 602.88891602]
[101.75614929 610.99060059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 196]
[20 195]
[21 194]
[22 193]
[26 192]
[27 191]
[28 190]
[29 189]
[30 188]
[31 187]
[32 186]
[34 185]
[35 184]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[44 173]
[45 172]
[46 169]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[55 161]
[56 160]
[57 159]
[58 157]
[59 156]
[60 155]
[61 154]
[63 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
