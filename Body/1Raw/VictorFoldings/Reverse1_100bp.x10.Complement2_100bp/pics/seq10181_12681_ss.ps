%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[84.66667938 634.81359863]
[69.66089630 634.53210449]
[54.72798538 633.02844238]
[39.96732712 630.31256104]
[25.47715187 626.40264893]
[11.35389328 621.32464600]
[-2.30846167 615.11230469]
[-15.41899109 607.80706787]
[-27.89044380 599.45745850]
[-39.63982391 590.11907959]
[-50.58894348 579.85412598]
[-60.66493225 568.73083496]
[-69.80073547 556.82330322]
[-77.93555450 544.21069336]
[-85.01525879 530.97698975]
[-90.99272919 517.21026611]
[-95.82817841 503.00216675]
[-99.48944092 488.44714355]
[-101.95214081 473.64215088]
[-103.19989777 458.68569946]
[-103.22440338 443.67727661]
[-102.02548981 428.71682739]
[-99.61113739 413.90386963]
[-95.99742126 399.33700562]
[-91.20838928 385.11312866]
[-85.27590179 371.32696533]
[-78.23944855 358.07025146]
[-70.14585114 345.43115234]
[-61.04897690 333.49383545]
[-51.00936127 322.33770752]
[-40.09381866 312.03704834]
[-28.37499237 302.66036987]
[-15.93086815 294.27011108]
[-2.84426141 286.92208862]
[10.79773712 280.66519165]
[24.90434074 275.54107666]
[39.38166809 271.58383179]
[54.13338089 268.81982422]
[69.06130219 267.26739502]
[84.06608582 266.93692017]
[84.95890045 251.96351624]
[85.85171509 236.99011230]
[86.74453735 222.01670837]
[75.05417633 209.92645264]
[75.73860931 192.78450012]
[88.86232758 181.21784973]
[89.53211212 166.23280334]
[90.20189667 151.24777222]
[90.87168121 136.26272583]
[83.71039581 123.20266724]
[92.05619049 109.76174927]
[92.39116669 94.76548767]
[92.39116669 79.76548767]
[92.39116669 64.76548767]
[92.39116669 49.76548767]
[92.39116669 34.76548767]
[92.39116669 19.76548767]
[90.08759308 16.08479118]
[89.16762543 12.24836445]
[89.51030731 8.71028996]
[90.85965729 5.83872986]
[92.86436462 3.87932229]
[93.75718689 -11.09408379]
[85.13568878 -27.36526489]
[95.36334991 -41.62576675]
[96.03313446 -56.61080551]
[96.70291901 -71.59584808]
[97.37270355 -86.58088684]
[98.04248810 -101.56592560]
[98.15415955 -116.56550598]
[97.70755005 -131.55885315]
[97.26094818 -146.55220032]
[96.81433868 -161.54556274]
[96.36773682 -176.53890991]
[95.92112732 -191.53225708]
[80.94929504 -192.65567017]
[66.17691803 -195.33793640]
[51.76584625 -199.54965210]
[37.87397003 -205.24470520]
[24.65350342 -212.36067200]
[12.24929333 -220.81958008]
[0.79724836 -230.52877808]
[-9.57715702 -241.38186646]
[-18.76025391 -253.25991821]
[-26.65143013 -266.03283691]
[-33.16422272 -279.56060791]
[-38.22727585 -293.69509888]
[-41.78511429 -308.28137207]
[-43.79875565 -323.15963745]
[-44.24613953 -338.16690063]
[-43.12236404 -353.13870239]
[-40.43974304 -367.91101074]
[-36.22766495 -382.32199097]
[-30.53228378 -396.21371460]
[-23.41599846 -409.43402100]
[-14.95677948 -421.83801270]
[-5.24731112 -433.28982544]
[5.60602474 -443.66397095]
[17.48431206 -452.84677124]
[30.25740814 -460.73764038]
[43.78536224 -467.25009155]
[57.91995239 -472.31280518]
[72.50631714 -475.87030029]
[87.38463593 -477.88357544]
[102.39189911 -478.33059692]
[117.36367035 -477.20645142]
[132.13592529 -474.52346802]
[146.54678345 -470.31103516]
[160.43838501 -464.61532593]
[173.65850830 -457.49871826]
[186.06231689 -449.03921509]
[197.51388550 -439.32946777]
[207.88775635 -428.47586060]
[217.07028198 -416.59735107]
[224.96083069 -403.82406616]
[231.47297668 -390.29595947]
[236.53533936 -376.16125488]
[240.09246826 -361.57479858]
[242.10539246 -346.69641113]
[242.55204773 -331.68914795]
[241.42753601 -316.71740723]
[238.74420166 -301.94522095]
[234.53141785 -287.53445435]
[228.83537292 -273.64300537]
[221.71844482 -260.42303467]
[213.25862122 -248.01945496]
[203.54859924 -236.56811523]
[192.69474792 -226.19450378]
[180.81602478 -217.01226807]
[168.04254150 -209.12202454]
[154.51426697 -202.61021423]
[140.37942505 -197.54820251]
[125.79289246 -193.99142456]
[110.91447449 -191.97886658]
[111.36108398 -176.98551941]
[111.80768585 -161.99215698]
[112.25429535 -146.99880981]
[112.70089722 -132.00546265]
[113.14750671 -117.01211548]
[125.17670441 -125.97304535]
[139.72085571 -122.30319977]
[146.05854797 -108.70783997]
[139.51786804 -95.20896912]
[124.92036438 -91.75744629]
[113.02752686 -100.89613342]
[112.35774231 -85.91109467]
[111.68795776 -70.92605591]
[111.01817322 -55.94102097]
[110.34838867 -40.95598221]
[118.27732849 -31.82042122]
[117.84195709 -19.33065796]
[108.73059082 -10.20126724]
[107.83777618 4.77213812]
[107.39116669 19.76548767]
[107.39116669 34.76548767]
[107.39116669 49.76548767]
[107.39116669 64.76548767]
[107.39116669 79.76548767]
[107.39116669 94.76548767]
[109.70411682 97.85136414]
[110.64563751 101.94177246]
[109.79757690 106.40134430]
[107.04122925 110.43153381]
[114.15460205 124.56343079]
[105.85671997 136.93251038]
[105.18693542 151.91755676]
[104.51715088 166.90260315]
[103.84736633 181.88763428]
[114.02041626 190.71507263]
[117.20544434 203.60173035]
[112.45719147 215.78927612]
[101.71794128 222.90953064]
[100.82512665 237.88293457]
[99.93230438 252.85633850]
[99.03948975 267.82974243]
[113.89868927 269.94091797]
[128.53636169 273.25622559]
[142.85510254 277.75363159]
[156.75961304 283.40316772]
[170.15734863 290.16729736]
[182.95918274 298.00094604]
[195.07987976 306.85198975]
[206.43881226 316.66156006]
[216.96037292 327.36434937]
[226.57452393 338.88912964]
[235.21731567 351.15924072]
[242.83120728 364.09295654]
[249.36553955 377.60427856]
[254.77682495 391.60321045]
[259.02905273 405.99667358]
[262.09393311 420.68881226]
[263.95101929 435.58190918]
[264.58804321 450.57681274]
[264.00067139 465.57373047]
[262.19290161 480.47286987]
[259.17669678 495.17510986]
[254.97213745 509.58255005]
[249.60723877 523.59936523]
[243.11767578 537.13220215]
[235.54664612 550.09106445]
[226.94453430 562.38970947]
[217.36857605 573.94628906]
[206.88252258 584.68383789]
[195.55613708 594.53094482]
[183.46479797 603.42211914]
[170.68898010 611.29809570]
[157.31370544 618.10656738]
[143.42797852 623.80212402]
[129.12422180 628.34686279]
[114.49760437 631.71063232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 175]
[41 174]
[42 173]
[43 172]
[46 168]
[47 167]
[48 166]
[49 165]
[51 163]
[52 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 154]
[62 153]
[63 152]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
