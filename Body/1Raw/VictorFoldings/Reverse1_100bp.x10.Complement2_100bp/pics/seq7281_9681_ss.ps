%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[30.01820755 585.98187256]
[18.88524055 575.79760742]
[10.76832294 563.07843018]
[6.22088003 548.69152832]
[5.55296373 533.61779785]
[8.81011391 518.88507080]
[15.77025223 505.49783325]
[25.95882607 494.36877441]
[38.68115997 486.25677490]
[53.06982422 481.71490479]
[52.40003967 466.72985840]
[51.73025513 451.74481201]
[51.06047058 436.75976562]
[50.05620956 421.79342651]
[48.71797562 406.85324097]
[47.37974167 391.91305542]
[46.04150772 376.97286987]
[39.36069870 390.40295410]
[27.84702873 400.01727295]
[13.44075012 404.19567871]
[-1.43042815 402.23403931]
[-14.26044941 394.46292114]
[-22.88722992 382.19186401]
[-25.85700607 367.48876953]
[-22.66931725 352.83139038]
[-13.86134624 340.68975830]
[-0.91739023 333.10992432]
[13.98126602 331.36920166]
[28.32393837 335.76098633]
[39.69363403 345.54516602]
[46.17475510 359.07452393]
[47.73527527 344.15594482]
[45.30470276 337.17639160]
[49.43170547 329.02740479]
[51.21416855 314.13369751]
[52.99663544 299.23999023]
[41.84986115 309.27737427]
[26.94459534 310.96054077]
[13.84013462 303.66171265]
[7.42411947 290.10314941]
[10.08956337 275.34185791]
[20.84232330 264.88345337]
[35.67188644 262.62866211]
[49.04718781 269.41845703]
[55.97977448 282.72155762]
[59.51944733 268.14517212]
[63.05912018 253.56880188]
[66.59879303 238.99243164]
[70.13846588 224.41606140]
[73.13323975 209.71804810]
[75.57896423 194.91877747]
[78.02469635 180.11950684]
[76.01386261 173.00765991]
[80.61857605 165.11878967]
[83.28437042 150.35757446]
[85.95017242 135.59635925]
[88.61596680 120.83513641]
[91.28176117 106.07392120]
[92.95330048 91.16734314]
[84.84114838 81.13959503]
[85.70751190 68.67230988]
[94.54384613 60.41120911]
[95.43666077 45.43780518]
[96.32947540 30.46439743]
[97.22229004 15.49099159]
[97.33396149 0.49140757]
[96.66417694 -14.49363136]
[85.28336334 -25.12918472]
[84.81757355 -40.33568573]
[95.02708435 -51.12000275]
[94.35729980 -66.10504150]
[93.68751526 -81.09008026]
[93.01773071 -96.07511902]
[92.34794617 -111.06015778]
[91.67816162 -126.04519653]
[82.70372772 -135.30923462]
[82.45436096 -147.80409241]
[90.51843262 -156.82058716]
[90.07183075 -171.81393433]
[89.62522125 -186.80728149]
[89.17861938 -201.80064392]
[88.73200989 -216.79399109]
[75.78195953 -228.55474854]
[75.35282135 -245.70498657]
[87.22189331 -257.61984253]
[78.87609863 -271.06076050]
[86.03737640 -284.12084961]
[85.36759186 -299.10586548]
[84.69780731 -314.09091187]
[84.02802277 -329.07595825]
[69.18884277 -331.64749146]
[55.24956131 -337.34927368]
[42.86215210 -345.91470337]
[32.60599518 -356.94308472]
[24.96078682 -369.91864014]
[20.28411102 -384.23443604]
[18.79470062 -399.22097778]
[20.56222153 -414.17724609]
[25.50399971 -428.40371704]
[33.38890457 -441.23501587]
[43.84813690 -452.07101440]
[56.39250946 -460.40484619]
[70.43528748 -465.84674072]
[85.31967926 -468.14218140]
[100.34950256 -467.18380737]
[114.82178497 -463.01644897]
[128.05964661 -455.83499146]
[139.44390869 -445.97534180]
[148.44212341 -433.89868164]
[154.63342285 -420.16979980]
[157.72822571 -405.43087769]
[157.58178711 -390.37124634]
[154.20095825 -375.69525146]
[147.74385071 -362.08938599]
[138.51249695 -350.18997192]
[126.93865204 -340.55355835]
[113.56365204 -333.63088989]
[99.01306152 -329.74572754]
[99.68284607 -314.76071167]
[100.35263062 -299.77566528]
[101.02241516 -284.79061890]
[109.32030487 -272.42153931]
[102.20693207 -258.28964233]
[112.83898163 -251.01028442]
[117.40525055 -238.75340271]
[114.02871704 -225.91558838]
[103.72536469 -217.24060059]
[104.17196655 -202.24723816]
[104.61857605 -187.25389099]
[105.06517792 -172.26054382]
[105.51178741 -157.26719666]
[115.52599335 -142.85600281]
[106.66320038 -126.71498108]
[107.33298492 -111.72994232]
[108.00276947 -96.74490356]
[108.67255402 -81.75986481]
[109.34233856 -66.77482605]
[110.01212311 -51.78978729]
[121.14305115 -41.95932388]
[122.03578186 -26.77190399]
[111.64921570 -15.16341591]
[112.31900024 -0.17837757]
[122.37646484 -11.30705357]
[137.21650696 -13.49179840]
[150.05445862 -5.73377609]
[155.02098083 8.42014980]
[149.84545898 22.49899483]
[136.89404297 30.06610107]
[122.08798218 27.66188812]
[112.19569397 16.38380814]
[111.30287933 31.35721397]
[110.41006470 46.33061981]
[109.51725006 61.30402374]
[118.20581818 76.55117798]
[107.93833923 91.83712769]
[117.77034760 80.50877380]
[132.13584900 76.19227600]
[146.58355713 80.22513580]
[156.63667297 91.35774231]
[159.18013000 106.14053345]
[153.42581177 119.99288940]
[141.15676880 128.62252808]
[126.17469025 129.35543823]
[113.12192535 121.96453857]
[106.04297638 108.73971558]
[103.37718201 123.50093079]
[100.71138763 138.26214600]
[98.04559326 153.02336121]
[95.37979889 167.78457642]
[92.82396698 182.56523132]
[90.37823486 197.36450195]
[87.93251038 212.16377258]
[101.46072388 205.68402100]
[115.02737427 212.08293152]
[118.63162994 226.64346313]
[109.61656189 238.63215637]
[94.62774658 239.21136475]
[84.71483612 227.95573425]
[81.17516327 242.53210449]
[77.63549042 257.10848999]
[74.09582520 271.68484497]
[70.55615234 286.26123047]
[67.89035034 301.02246094]
[66.10788727 315.91616821]
[64.32542419 330.80987549]
[62.65388107 345.71646118]
[61.09335709 360.63507080]
[60.98168945 375.63464355]
[62.31992340 390.57482910]
[63.65816116 405.51501465]
[64.99639130 420.45520020]
[68.00067139 424.72384644]
[68.97019958 429.26403809]
[68.14228821 433.25524902]
[66.04550934 436.08999634]
[66.71529388 451.07504272]
[67.38507843 466.06005859]
[68.05486298 481.04510498]
[82.79135895 484.28518677]
[96.18667603 491.22982788]
[107.32750702 501.40548706]
[115.45423889 514.11840820]
[120.01279449 528.50183105]
[120.69235229 543.57501221]
[117.44657898 558.31024170]
[110.49678040 571.70288086]
[100.31680298 582.83978271]
[87.60073853 590.96160889]
[73.21558380 595.51458740]
[58.14214706 596.18835449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[13 195]
[14 191]
[15 190]
[16 189]
[17 188]
[31 187]
[32 186]
[34 185]
[35 184]
[36 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[50 172]
[51 171]
[52 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[59 155]
[62 153]
[63 152]
[64 151]
[65 150]
[66 142]
[67 141]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[85 123]
[87 121]
[88 120]
[89 119]
[90 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
