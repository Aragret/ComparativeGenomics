%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[68.85557556 594.21624756]
[54.52812576 598.97296143]
[39.44856262 599.68670654]
[24.73589134 596.30438232]
[11.48188972 589.07708740]
[0.67009103 578.54107666]
[-6.89719677 565.47821045]
[-10.65843010 550.85784912]
[-10.33450127 535.76483154]
[-5.94944811 521.31933594]
[2.17132998 508.59313965]
[13.42521763 498.53070068]
[26.97710037 491.87869263]
[41.82133865 489.13076782]
[43.15957260 474.19058228]
[44.49780655 459.25039673]
[45.83604050 444.31021118]
[47.17427826 429.37002563]
[48.40125275 414.42028809]
[49.51689911 399.46185303]
[50.63254929 384.50338745]
[51.74819946 369.54492188]
[50.02323914 367.33526611]
[49.06962585 364.30917358]
[49.20270538 360.75701904]
[50.62697983 357.07791138]
[53.40164566 353.73797607]
[55.40565872 338.87243652]
[57.40967178 324.00689697]
[59.41368866 309.14138794]
[53.44612503 295.49450684]
[62.95777893 282.85174561]
[56.99021530 269.20486450]
[66.50186920 256.56210327]
[68.50588226 241.69659424]
[70.50989532 226.83105469]
[72.51390839 211.96553040]
[70.67839813 208.95501709]
[70.20986176 204.90586853]
[71.58058167 200.47029114]
[74.95370483 196.48667908]
[77.61949921 181.72546387]
[80.28530121 166.96424866]
[82.95109558 152.20303345]
[85.61688995 137.44181824]
[88.28268433 122.68059540]
[90.94847870 107.91938019]
[93.39421082 93.12010956]
[95.61932373 78.28606415]
[86.81130219 90.42767334]
[74.85193634 99.48159790]
[60.77583313 104.66458893]
[45.80071640 105.52825165]
[31.22208595 101.99787903]
[18.30113602 94.37889099]
[8.15565968 83.33039093]
[1.66334200 69.80818939]
[-0.61416727 54.98210144]
[1.52015948 40.13472366]
[7.88168192 26.55050468]
[17.92006493 15.40461349]
[30.76688576 7.66128302]
[45.31076813 3.99038863]
[60.29352188 4.70949936]
[74.41898346 9.75640488]
[86.46517181 18.69449615]
[95.38995361 30.75054169]
[100.42125702 44.88156891]
[101.12417603 59.86161041]
[107.40153503 46.23829269]
[113.67889404 32.61497498]
[119.95626068 18.99166107]
[126.23361969 5.36834431]
[132.51098633 -8.25497246]
[138.78834534 -21.87828827]
[137.53640747 -37.64988327]
[149.88983154 -45.97107315]
[156.16719055 -59.59438705]
[162.44454956 -73.21770477]
[168.72190857 -86.84101868]
[168.17008972 -91.14792633]
[168.94006348 -95.01725769]
[170.73194885 -98.08719635]
[173.15917969 -100.13051605]
[175.79989624 -101.07114410]
[182.87699890 -114.29666901]
[189.95410156 -127.52219391]
[197.03120422 -140.74772644]
[204.10832214 -153.97325134]
[211.18542480 -167.19877625]
[218.16387939 -180.47662354]
[225.04328918 -193.80606079]
[231.92269897 -207.13548279]
[238.80210876 -220.46492004]
[245.18070984 -234.04112244]
[251.04968262 -247.84529114]
[256.91864014 -261.64947510]
[262.78759766 -275.45364380]
[268.65655518 -289.25781250]
[255.88342285 -297.17913818]
[244.46923828 -306.95751953]
[234.68156433 -318.36376953]
[226.74984741 -331.13046265]
[220.86003113 -344.95834351]
[217.15014648 -359.52325439]
[215.70718384 -374.48382568]
[216.56497192 -389.48931885]
[219.70338440 -404.18798828]
[225.04887390 -418.23526001]
[232.47610474 -431.30187988]
[241.81100464 -443.08154297]
[252.83473206 -453.29809570]
[265.28887939 -461.71203613]
[278.88150024 -468.12619019]
[293.29394531 -472.39013672]
[308.18841553 -474.40396118]
[323.21572876 -474.12042236]
[338.02362061 -471.54620361]
[352.26498413 -466.74163818]
[365.60598755 -459.81933594]
[377.73388672 -450.94158936]
[388.36437988 -440.31646729]
[397.24829102 -428.19308472]
[404.17736816 -414.85559082]
[408.98916626 -400.61666870]
[411.57089233 -385.81008911]
[411.86203003 -370.78292847]
[409.85577393 -355.88745117]
[405.59912109 -341.47280884]
[399.19189453 -327.87695312]
[390.78424072 -315.41851807]
[380.57330322 -304.38961792]
[368.79837036 -295.04876709]
[355.73553467 -287.61489868]
[341.69094849 -282.26226807]
[326.99389648 -279.11639404]
[311.98883057 -278.25100708]
[297.02755737 -279.68637085]
[282.46072388 -283.38885498]
[276.59176636 -269.58468628]
[270.72280884 -255.78051758]
[264.85385132 -241.97633362]
[258.98489380 -228.17216492]
[273.66012573 -231.27656555]
[285.33364868 -221.85693359]
[285.40011597 -206.85708618]
[273.81060791 -197.33433533]
[259.10839844 -200.30850220]
[252.13154602 -213.58549500]
[245.25213623 -200.25607300]
[238.37271118 -186.92663574]
[231.49330139 -173.59721375]
[231.21903992 -166.21165466]
[224.41094971 -160.12167358]
[217.33384705 -146.89614868]
[210.25674438 -133.67062378]
[203.17962646 -120.44509125]
[196.10252380 -107.21956635]
[189.02542114 -93.99403381]
[182.34523010 -80.56365967]
[176.06787109 -66.94034576]
[169.79051208 -53.31702805]
[163.51315308 -39.69371033]
[165.21408081 -24.89654732]
[152.41165161 -15.60092735]
[146.13429260 -1.97761130]
[139.85693359 11.64570522]
[133.57957458 25.26902008]
[127.30221558 38.89233780]
[121.02485657 52.51565170]
[114.74748993 66.13896942]
[110.45336914 80.51118469]
[108.22824860 95.34522247]
[110.31015015 100.15975189]
[109.54635620 105.79801178]
[105.70969391 110.58517456]
[103.04389954 125.34638977]
[100.37810516 140.10760498]
[97.71231079 154.86882019]
[95.04651642 169.63005066]
[92.38072205 184.39126587]
[89.71492767 199.15248108]
[87.37944031 213.96954346]
[85.37542725 228.83506775]
[83.37141418 243.70060730]
[81.36739349 258.56613159]
[87.19161987 273.27630615]
[77.82330322 284.85577393]
[83.64752960 299.56591797]
[74.27921295 311.14538574]
[72.27519989 326.01092529]
[70.27118683 340.87646484]
[68.26717377 355.74197388]
[66.70664978 370.66058350]
[65.59100342 385.61904907]
[64.47535706 400.57748413]
[63.35970688 415.53594971]
[65.84217072 424.32656860]
[62.11445999 430.70825195]
[60.77622604 445.64843750]
[59.43799210 460.58862305]
[58.09975815 475.52880859]
[56.76152420 490.46899414]
[70.88109589 495.81130981]
[83.03506470 504.76583862]
[92.32151031 516.66815186]
[98.05132294 530.63494873]
[99.79930878 545.62982178]
[97.43576050 560.54010010]
[91.13607025 574.25933838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[19 197]
[20 196]
[21 195]
[22 194]
[27 193]
[28 192]
[29 191]
[30 190]
[32 188]
[34 186]
[35 185]
[36 184]
[37 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 173]
[49 172]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[77 163]
[78 162]
[79 161]
[80 160]
[85 159]
[86 158]
[87 157]
[88 156]
[89 155]
[90 154]
[91 152]
[92 151]
[93 150]
[94 149]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
