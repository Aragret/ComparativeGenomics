%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[191.58682251 836.97753906]
[176.99623108 833.48724365]
[162.56690979 829.38079834]
[148.32487488 824.66564941]
[134.29579163 819.35034180]
[120.50492859 813.44439697]
[106.97714996 806.95843506]
[93.73683167 799.90423584]
[80.80783844 792.29443359]
[68.21346283 784.14276123]
[55.97639847 775.46392822]
[44.11870193 766.27355957]
[32.66174316 756.58819580]
[21.62616539 746.42529297]
[11.03185558 735.80322266]
[0.89790612 724.74108887]
[-8.75742054 713.25878906]
[-17.91672516 701.37707520]
[-26.56350327 689.11737061]
[-34.68217087 676.50164795]
[-42.25809860 663.55279541]
[-49.27763367 650.29406738]
[-55.72812653 636.74932861]
[-61.59794998 622.94305420]
[-66.87653351 608.90008545]
[-71.55435944 594.64575195]
[-75.62299347 580.20574951]
[-79.07511139 565.60607910]
[-81.90449524 550.87304688]
[-84.10604095 536.03314209]
[-85.67577362 521.11328125]
[-86.61087799 506.14016724]
[-86.90966034 491.14086914]
[-86.57158661 476.14239502]
[-85.59725952 461.17181396]
[-83.98844147 446.25604248]
[-81.74803162 431.42202759]
[-78.88006592 416.69644165]
[-75.38970947 402.10583496]
[-71.28325653 387.67654419]
[-66.56810760 373.43450928]
[-61.25275803 359.40542603]
[-55.34678650 345.61456299]
[-48.86083221 332.08679199]
[-41.80658722 318.84649658]
[-34.19676590 305.91751099]
[-26.04507637 293.32315063]
[-17.36621094 281.08612061]
[-8.17581177 269.22842407]
[1.50956178 257.77148438]
[11.67245579 246.73591614]
[22.29455566 236.14163208]
[33.35671997 226.00769043]
[44.83901215 216.35238647]
[56.72074127 207.19309998]
[68.98049927 198.54634094]
[81.59618378 190.42768860]
[94.54507446 182.85179138]
[107.80382538 175.83227539]
[121.34854889 169.38180542]
[115.47958374 155.57762146]
[109.61062622 141.77345276]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[69.93418121 68.22701263]
[72.07492828 53.48704910]
[66.20596313 39.68287277]
[60.33700180 25.87869644]
[54.46804428 12.07452011]
[39.90122986 15.77700615]
[24.93994141 17.21237564]
[9.93489170 16.34697914]
[-4.76218033 13.20110703]
[-18.80675316 7.84849977]
[-31.86960220 0.41463149]
[-43.64451599 -8.92623806]
[-53.85547638 -19.95514488]
[-62.26311493 -32.41355515]
[-68.67035675 -46.00942612]
[-72.92699432 -60.42405319]
[-74.93325806 -75.31953430]
[-74.64210510 -90.34669495]
[-72.06037903 -105.15328979]
[-67.24858093 -119.39221191]
[-60.31951141 -132.72969055]
[-51.43560028 -144.85308838]
[-40.80510330 -155.47819519]
[-28.67720604 -164.35595703]
[-15.33620834 -171.27825928]
[-1.09484231 -176.08282471]
[13.71305561 -178.65704346]
[28.74036598 -178.94056702]
[43.63482666 -176.92675781]
[58.04729080 -172.66279602]
[71.63990784 -166.24865723]
[84.09405518 -157.83470154]
[95.11777496 -147.61814880]
[104.45267487 -135.83850098]
[111.87991333 -122.77187347]
[117.22539520 -108.72458649]
[120.36380768 -94.02592468]
[121.22158813 -79.02043915]
[119.77863312 -64.05987549]
[116.06875610 -49.49494553]
[110.17892456 -35.66706085]
[102.24721527 -22.90037346]
[92.45954132 -11.49414730]
[81.04535675 -1.71576345]
[68.27221680 6.20555925]
[74.14118195 20.00973511]
[80.01013947 33.81391144]
[85.87910461 47.61808777]
[97.97929382 56.30339813]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[123.41480255 135.90449524]
[129.28376770 149.70866394]
[135.15272522 163.51284790]
[149.19564819 158.23419189]
[163.44996643 153.55630493]
[177.88996887 149.48759460]
[192.48963928 146.03540039]
[207.22267151 143.20594788]
[222.06251526 141.00433350]
[236.98242188 139.43452454]
[251.95552063 138.49935913]
[266.95480347 138.20050049]
[281.95327759 138.53849792]
[296.92385864 139.51275635]
[311.83963013 141.12150574]
[326.67367554 143.36184692]
[341.39926147 146.22973633]
[355.98986816 149.72001648]
[370.41921997 153.82640076]
[384.66125488 158.54148865]
[398.69036865 163.85676575]
[412.48126221 169.76268005]
[426.00903320 176.24856567]
[439.24938965 183.30274963]
[452.17840576 190.91250610]
[464.77279663 199.06413269]
[477.00988770 207.74293518]
[488.86761475 216.93327332]
[500.32461548 226.61860657]
[511.36022949 236.78143311]
[521.95458984 247.40348816]
[532.08856201 258.46560669]
[541.74389648 269.94784546]
[550.90325928 281.82952881]
[559.55004883 294.08926392]
[567.66876221 306.70489502]
[575.24475098 319.65374756]
[582.26434326 332.91247559]
[588.71484375 346.45715332]
[594.58471680 360.26339722]
[599.86334229 374.30636597]
[604.54125977 388.56066895]
[608.60992432 403.00067139]
[612.06207275 417.60034180]
[614.89154053 432.33340454]
[617.09307861 447.17324829]
[618.66290283 462.09313965]
[619.59802246 477.06625366]
[619.89685059 492.06552124]
[619.55883789 507.06399536]
[618.58459473 522.03460693]
[616.97576904 536.95037842]
[614.73541260 551.78442383]
[611.86749268 566.51000977]
[608.37719727 581.10058594]
[604.27081299 595.52990723]
[599.55572510 609.77197266]
[594.24041748 623.80108643]
[588.33447266 637.59191895]
[581.84857178 651.11968994]
[574.79437256 664.36004639]
[567.18457031 677.28906250]
[559.03289795 689.88342285]
[550.35406494 702.12054443]
[541.16375732 713.97821045]
[531.47839355 725.43518066]
[521.31555176 736.47082520]
[510.69348145 747.06512451]
[499.63134766 757.19909668]
[488.14907837 766.85443115]
[476.26736450 776.01373291]
[464.00765991 784.66058350]
[451.39199829 792.77923584]
[438.44311523 800.35516357]
[425.18438721 807.37475586]
[411.63970947 813.82525635]
[397.83343506 819.69512939]
[383.79049683 824.97369385]
[369.53616333 829.65155029]
[355.09613037 833.72021484]
[340.49645996 837.17236328]
[325.76342773 840.00177002]
[310.92358398 842.20330811]
[296.00366211 843.77307129]
[281.03054810 844.70825195]
[266.03128052 845.00701904]
[251.03280640 844.66900635]
[236.06221008 843.69470215]
[221.14645386 842.08587646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[66 118]
[67 117]
[69 115]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
