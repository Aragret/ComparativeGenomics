%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[104.78308868 556.43304443]
[101.09619904 541.78442383]
[101.68703461 526.69042969]
[106.50771332 512.37481689]
[115.16742706 499.99795532]
[126.96417999 490.56326294]
[140.94166565 484.83557129]
[139.38114929 469.91696167]
[137.82061768 454.99835205]
[136.26010132 440.07974243]
[134.69956970 425.16116333]
[133.13905334 410.24255371]
[131.57853699 395.32394409]
[129.68524170 380.44390869]
[127.46012115 365.60986328]
[125.23500061 350.77581787]
[123.00988770 335.94177246]
[118.90893555 329.79327393]
[120.86377716 320.87048340]
[118.85976410 306.00494385]
[116.85575104 291.13940430]
[114.85173798 276.27389526]
[102.88816833 267.47567749]
[100.64404297 252.42846680]
[109.95353699 239.93962097]
[98.49440002 226.64845276]
[105.62987518 209.67298889]
[103.40475464 194.83894348]
[101.17963409 180.00489807]
[98.57674408 177.62640381]
[96.99658203 173.86898804]
[97.07469177 169.22709656]
[99.20178223 164.46026611]
[97.64125824 149.54167175]
[96.08074188 134.62306213]
[87.06134033 122.76979828]
[93.32096100 108.23956299]
[91.20633698 93.38936615]
[88.54054260 78.62815094]
[85.87474060 63.86693192]
[83.20894623 49.10571671]
[70.99129486 35.32854080]
[77.56494141 19.05727577]
[74.67967224 4.33738470]
[71.79439545 -10.38250637]
[67.60738373 -24.78628922]
[62.15203094 -38.75908661]
[56.69667053 -52.73188400]
[41.52650833 -53.10855484]
[27.69357681 -59.24801636]
[17.29316139 -70.18625641]
[11.88755417 -84.23499298]
[12.27142239 -99.24224091]
[18.35513878 -112.92192078]
[29.18318748 -123.20213318]
[23.72783089 -137.17492676]
[18.27247429 -151.14772034]
[6.04603386 -161.18887329]
[8.62469482 -175.85856628]
[3.16933799 -189.83135986]
[-2.28601909 -203.80416870]
[-7.84524488 -217.73596191]
[-13.50803185 -231.62599182]
[-14.98688412 -216.69906616]
[-20.94839668 -202.93460083]
[-30.82435799 -191.64454651]
[-43.67345428 -183.90498352]
[-58.27098846 -180.45361328]
[-73.22561646 -181.61938477]
[-87.11196136 -187.29119873]
[-98.60646820 -196.92843628]
[-106.61354828 -209.61254883]
[-110.37001801 -224.13456726]
[-109.51783752 -239.11033630]
[-104.13822937 -253.11247253]
[-94.74394226 -264.80636597]
[-82.23038483 -273.07745361]
[-67.79026031 -277.13735962]
[-52.79992294 -276.59915161]
[-38.68814468 -271.51409912]
[-26.79997444 -262.36691284]
[-18.26802254 -250.02836609]
[-20.05048752 -264.92208862]
[-21.83295441 -279.81579590]
[-23.61541939 -294.70953369]
[-25.39788628 -309.60324097]
[-27.18035126 -324.49694824]
[-36.50271988 -337.27990723]
[-30.33263588 -350.83642578]
[-45.29586411 -352.67089844]
[-59.38502502 -358.03363037]
[-71.78099060 -366.61288452]
[-81.76307678 -377.90985107]
[-88.75094604 -391.26773071]
[-92.33831787 -405.90994263]
[-92.31663513 -420.98516846]
[-88.68716431 -435.61700439]
[-81.66090393 -448.95474243]
[-71.64636230 -460.22293091]
[-59.22577286 -468.76651001]
[-45.12124634 -474.08868408]
[-30.15280342 -475.88009644]
[-15.19069004 -474.03659058]
[-1.10478377 -468.66528320]
[11.28597927 -460.07852173]
[21.26121712 -448.77551270]
[28.24098015 -435.41339111]
[31.81947708 -420.76901245]
[31.78865814 -405.69378662]
[28.15031242 -391.06417847]
[21.11597061 -377.73071289]
[11.09460163 -366.46856689]
[-1.33116806 -357.93255615]
[-15.43891907 -352.61889648]
[-6.24404621 -340.90124512]
[-12.28663445 -326.27941895]
[-10.50416851 -311.38571167]
[-8.72170258 -296.49197388]
[-6.93923712 -281.59826660]
[-5.15677118 -266.70455933]
[-3.37430525 -251.81083679]
[0.38199547 -237.28877258]
[6.04478216 -223.39874268]
[11.48082352 -218.39163208]
[11.68677902 -209.25952148]
[17.14213562 -195.28672791]
[22.59749222 -181.31391907]
[34.43373108 -172.27220154]
[32.24526978 -156.60308838]
[37.70063019 -142.63027954]
[43.15598679 -128.65748596]
[58.08512115 -128.43357849]
[71.82838440 -122.49488068]
[82.27915955 -111.71777344]
[87.82256317 -97.72283173]
[87.58490753 -82.63121033]
[81.57127380 -68.74311066]
[70.66947174 -58.18724060]
[76.12482452 -44.21444321]
[81.58018494 -30.24164581]
[84.56778717 -44.94110870]
[93.56828308 -56.94073486]
[106.84381866 -63.92358780]
[121.83109283 -64.54138947]
[135.63629150 -58.67484283]
[145.59385681 -47.45669556]
[149.78114319 -33.05298996]
[147.38963318 -18.24485970]
[138.88110352 -5.89152288]
[125.89842224 1.62178707]
[110.94832611 2.84436655]
[96.91745758 -2.45984530]
[86.51428986 -13.26777935]
[89.39955902 1.45211232]
[92.28483582 16.17200279]
[102.14563751 23.17850304]
[104.66987610 35.41827393]
[97.97016907 46.43991852]
[100.63596344 61.20113754]
[103.30175781 75.96235657]
[105.96755219 90.72357178]
[116.53439331 80.07735443]
[131.46202087 81.54910278]
[139.74633789 94.05390930]
[135.28045654 108.37368011]
[121.35646820 113.95242310]
[108.23956299 106.67903900]
[117.37057495 119.59938049]
[110.99934387 133.06254578]
[112.55986786 147.98114014]
[114.12039185 162.89974976]
[116.01367950 177.77978516]
[118.23880005 192.61383057]
[120.46391296 207.44787598]
[130.35343933 215.72798157]
[131.90135193 228.12908936]
[124.81906128 237.93560791]
[137.10334778 247.51341248]
[138.92393494 262.61770630]
[129.71726990 274.26986694]
[131.72128296 289.13540649]
[133.72529602 304.00094604]
[135.72930908 318.86645508]
[137.84393311 333.71664429]
[140.06904602 348.55068970]
[142.29415894 363.38473511]
[144.51928711 378.21878052]
[147.77230835 382.30105591]
[149.01036072 386.77548218]
[148.42146301 390.80889893]
[146.49713135 393.76342773]
[148.05766296 408.68203735]
[149.61817932 423.60061646]
[151.17871094 438.51922607]
[152.73922729 453.43783569]
[154.29974365 468.35644531]
[155.86027527 483.27505493]
[170.72048950 485.98626709]
[184.21430969 492.77548218]
[195.24784851 503.09234619]
[202.92665100 516.10052490]
[206.62826538 530.74548340]
[206.05258179 545.84002686]
[201.24629211 560.16052246]
[192.59901428 572.54602051]
[180.81173706 581.99255371]
[166.84001160 587.73431396]
[151.81646729 589.30578613]
[136.95898438 586.57965088]
[123.47199249 579.77691650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 187]
[15 186]
[16 185]
[17 184]
[19 183]
[20 182]
[21 181]
[22 180]
[25 177]
[27 174]
[28 173]
[29 172]
[33 171]
[34 170]
[35 169]
[37 167]
[38 161]
[39 160]
[40 159]
[41 158]
[43 155]
[44 154]
[45 153]
[46 140]
[47 139]
[48 138]
[55 131]
[56 130]
[57 129]
[59 127]
[60 126]
[61 125]
[62 123]
[63 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
