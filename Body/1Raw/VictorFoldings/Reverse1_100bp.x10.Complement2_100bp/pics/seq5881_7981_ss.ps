%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[47.13530731 463.09838867]
[46.24249268 448.12496948]
[45.34967422 433.15155029]
[44.45685959 418.17816162]
[43.56404495 403.20474243]
[42.67122650 388.23135376]
[41.77841187 373.25793457]
[40.88559723 358.28454590]
[34.56424332 371.88748169]
[24.21610641 382.74639893]
[10.93324471 389.71530151]
[-3.88256598 392.05874634]
[-18.66777992 389.52944946]
[-31.86207771 382.39428711]
[-42.07303238 371.40628052]
[-48.22306061 357.72500610]
[-49.66313171 342.79428101]
[-46.24127197 328.18978882]
[-38.31860352 315.45278931]
[-26.73121834 305.92742920]
[-12.70196247 300.61895752]
[2.28862238 300.08755493]
[16.65854454 304.38934326]
[28.89131165 313.07031250]
[37.69596863 325.21438599]
[42.14337158 339.54010010]
[45.02864456 324.82022095]
[47.91391754 310.10031128]
[50.79918671 295.38043213]
[38.82191086 288.06713867]
[30.04167557 277.08142090]
[25.52909279 263.73016357]
[25.84553719 249.61059570]
[30.97338295 236.41923523]
[40.31567001 225.74803162]
[52.76553726 218.89222717]
[66.83733368 216.69322205]
[69.94144440 202.01791382]
[73.04555511 187.34262085]
[76.14966583 172.66731262]
[79.25377655 157.99201965]
[77.56250763 150.79747009]
[82.51489258 143.12207031]
[85.83715057 128.49461365]
[89.15940857 113.86715698]
[83.37414551 105.77905273]
[82.89549255 95.84640503]
[87.87622833 87.23949432]
[96.72660065 82.70545197]
[100.48290253 68.18339539]
[104.23920441 53.66133499]
[107.99550629 39.13927841]
[108.77682495 24.15963936]
[106.55171204 9.32559586]
[104.32659149 -5.50844765]
[102.10147095 -20.34249115]
[99.87635803 -35.17653656]
[97.65123749 -50.01057816]
[95.42612457 -64.84461975]
[92.10386658 -79.47208405]
[87.70286560 -93.81192780]
[83.30186462 -108.15177917]
[78.90087128 -122.49162292]
[74.49987030 -136.83146667]
[70.09886932 -151.17132568]
[65.69787598 -165.51116943]
[60.55591583 -179.60231018]
[54.68695450 -193.40647888]
[48.81799316 -207.21066284]
[42.94903183 -221.01483154]
[28.43882561 -217.11611938]
[13.52722549 -215.27484131]
[-1.49551129 -215.52685547]
[-16.33696175 -217.86724854]
[-30.70823288 -222.25048828]
[-44.32958603 -228.59121704]
[-56.93587112 -236.76603699]
[-68.28170776 -246.61581421]
[-78.14624786 -257.94882202]
[-86.33747101 -270.54446411]
[-92.69593811 -284.15753174]
[-97.09787750 -298.52310181]
[-99.45759583 -313.36148071]
[-99.72917175 -328.38388062]
[-97.90731049 -343.29785156]
[-94.02748108 -357.81314087]
[-88.16520691 -371.64712524]
[-80.43459320 -384.53060913]
[-70.98612213 -396.21273804]
[-60.00370789 -406.46618652]
[-47.70112991 -415.09130859]
[-34.31785965 -421.92022705]
[-20.11440468 -426.82003784]
[-5.36724329 -429.69531250]
[9.63656807 -430.49017334]
[24.60497665 -429.18905640]
[39.24662018 -425.81735229]
[53.27648926 -420.44064331]
[66.42149353 -413.16360474]
[78.42575836 -404.12792969]
[89.05561829 -393.50942993]
[98.10415649 -381.51486206]
[105.39524841 -368.37765503]
[110.78696442 -354.35354614]
[114.17435455 -339.71551514]
[115.49148560 -324.74850464]
[114.71271515 -309.74386597]
[111.85320282 -294.99362183]
[106.96861267 -280.78494263]
[100.15402222 -267.39437866]
[91.54207611 -255.08256531]
[81.30041504 -244.08917236]
[69.62839508 -234.62820435]
[56.75320816 -226.88380432]
[62.62216949 -213.07962036]
[68.49113464 -199.27545166]
[74.36009216 -185.47126770]
[79.88964081 -199.41487122]
[93.02807617 -206.65237427]
[107.76868439 -203.87489319]
[117.37226105 -192.35224915]
[117.44817352 -177.35244751]
[107.96172333 -165.73318481]
[93.24998474 -162.80664062]
[80.03771973 -169.91217041]
[84.43872070 -155.57231140]
[88.83972168 -141.23246765]
[93.24071503 -126.89262390]
[97.64171600 -112.55277252]
[102.04270935 -98.21292877]
[106.44371033 -83.87307739]
[111.35008240 -98.04797363]
[122.62160492 -107.94508362]
[137.31192017 -110.97734070]
[151.58102417 -106.35211182]
[161.69900513 -95.27842712]
[165.02104187 -80.65091705]
[160.67875671 -66.29317474]
[149.80723572 -55.95829010]
[135.24824524 -52.34776688]
[120.80748749 -56.40539169]
[110.26016998 -67.06974030]
[112.48528290 -52.23569489]
[114.71040344 -37.40165329]
[116.93551636 -22.56760788]
[119.16063690 -7.73356485]
[121.38574982 7.10047865]
[123.61087036 21.93452263]
[128.16888428 7.64381075]
[135.65393066 -5.35519171]
[145.72549438 -16.47111702]
[157.92536926 -25.19826317]
[171.69854736 -31.13960648]
[186.41844177 -34.02485275]
[201.41540527 -33.72274399]
[216.00715637 -30.24702263]
[229.52987671 -23.75581169]
[241.36839294 -14.54441833]
[250.98410034 -3.03189874]
[257.93957520 10.25800323]
[261.91836548 24.72068787]
[262.73947144 39.69819641]
[260.36553955 54.50915527]
[254.90457153 68.47975922]
[246.60501099 80.97444916]
[235.84442139 91.42478943]
[223.11233521 99.35536194]
[208.98799133 104.40538788]
[194.11393738 106.34511566]
[179.16683960 105.08629608]
[164.82672119 100.68621063]
[151.74592590 93.34501648]
[140.51957703 83.39670563]
[131.65837097 71.29385376]
[125.56544495 57.58705902]
[122.51756287 42.89557648]
[118.76126099 57.41763687]
[115.00495911 71.93969727]
[111.24865723 86.46175385]
[117.10450745 104.15359497]
[103.78687286 117.18941498]
[100.46460724 131.81687927]
[97.14234924 146.44433594]
[93.92907715 161.09613037]
[90.82496643 175.77142334]
[87.72085571 190.44673157]
[84.61674500 205.12202454]
[81.51263428 219.79733276]
[94.83036041 228.80546570]
[103.65039825 242.20239258]
[106.64688873 257.92044067]
[103.39004517 273.54721069]
[94.40753174 286.69595337]
[81.09921265 295.36993408]
[65.51908112 298.26568604]
[62.63380814 312.98559570]
[59.74853516 327.70547485]
[56.86326218 342.42538452]
[55.85900116 357.39172363]
[56.75181580 372.36511230]
[57.64463425 387.33853149]
[58.53744888 402.31192017]
[59.43026352 417.28533936]
[60.32308197 432.25875854]
[61.21589661 447.23214722]
[62.10871124 462.20556641]
[73.10527039 473.88696289]
[70.68608093 489.74658203]
[56.70693588 497.61825562]
[41.89144516 491.46350098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[26 198]
[27 197]
[28 196]
[29 195]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[43 183]
[44 182]
[45 181]
[49 179]
[50 178]
[51 177]
[52 176]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[67 117]
[68 116]
[69 115]
[70 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
