%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[154.98170471 641.18048096]
[160.10482788 626.89349365]
[170.04600525 615.42456055]
[183.46078491 608.32464600]
[181.67831421 593.43096924]
[179.89584351 578.53723145]
[178.11338806 563.64349365]
[168.91851807 551.92584229]
[174.96110535 537.30401611]
[173.17863464 522.41033936]
[171.39616394 507.51660156]
[159.56491089 498.54122925]
[157.54507446 483.46228027]
[167.03947449 471.11343384]
[165.25700378 456.21972656]
[163.47453308 441.32598877]
[161.24942017 426.49194336]
[158.58363342 411.73074341]
[155.91783142 396.96951294]
[153.25202942 382.20831299]
[150.03875732 367.55651855]
[139.36082458 357.17233276]
[143.39575195 341.87429810]
[139.63946533 327.35223389]
[135.88316345 312.83020020]
[132.12686157 298.30813599]
[121.44892120 287.92395020]
[125.48385620 272.62591553]
[121.72755432 258.10385132]
[118.89133453 256.00906372]
[116.92884064 252.43643188]
[116.52361298 247.81159973]
[118.14324951 242.84934998]
[115.03913879 228.17404175]
[111.93502808 213.49874878]
[108.83091736 198.82344055]
[105.72680664 184.14814758]
[102.62269592 169.47283936]
[99.51858521 154.79753113]
[96.41447449 140.12223816]
[93.31036377 125.44692993]
[89.30564117 139.90245056]
[81.26862335 152.56761169]
[69.89459991 162.34675598]
[56.16753387 168.39387512]
[41.27495956 170.18585205]
[26.50522614 167.56764221]
[13.13606834 160.76576233]
[2.32405019 150.36863708]
[-4.99548006 137.27571106]
[-8.18930912 122.61967468]
[-6.98114061 107.66841125]
[-1.47549188 93.71535492]
[7.85134315 81.96758270]
[20.19249916 73.44139862]
[34.48034286 68.87439728]
[49.47883606 68.66167450]
[63.89045334 72.82163239]
[76.46845245 80.99439240]
[86.12470245 92.47292328]
[92.02295685 106.26082611]
[89.43434906 98.62724304]
[93.26820374 91.08850861]
[94.60643768 76.14832306]
[95.94467163 61.20813751]
[97.28290558 46.26795578]
[98.62113953 31.32776833]
[84.99913025 21.95584869]
[78.00226593 7.07837057]
[79.45452881 -9.20376110]
[88.86524200 -22.45496178]
[103.58865356 -29.11331177]
[104.70430756 -44.07176590]
[98.01484680 -58.40918732]
[106.67732239 -70.52573395]
[107.79297638 -85.48418427]
[108.90862274 -100.44264221]
[110.02426910 -115.40109253]
[103.33480835 -129.73851013]
[111.99729156 -141.85505676]
[101.96096039 -153.76765442]
[103.30547333 -168.92175293]
[114.72415924 -178.41645813]
[115.83980560 -193.37490845]
[116.95545197 -208.33335876]
[118.07110596 -223.29180908]
[119.18675232 -238.25027466]
[120.30239868 -253.20872498]
[121.19521332 -268.18212891]
[121.86499786 -283.16717529]
[113.75284576 -293.19491577]
[114.61920929 -305.66220093]
[123.45554352 -313.92330933]
[124.34835815 -328.89669800]
[115.72686768 -345.16787720]
[125.95452881 -359.42840576]
[126.62431335 -374.41342163]
[126.95928955 -389.40969849]
[126.95928955 -404.40969849]
[113.18541718 -410.98565674]
[103.63549042 -422.89202881]
[100.20565033 -437.76477051]
[103.57689667 -452.65093994]
[113.07986450 -464.59481812]
[126.82772827 -471.22497559]
[142.09085083 -471.22497559]
[155.83871460 -464.59481812]
[165.34167480 -452.65093994]
[168.71292114 -437.76477051]
[165.28308105 -422.89202881]
[155.73315430 -410.98565674]
[141.95928955 -404.40969849]
[141.95928955 -389.40969849]
[144.18055725 -386.67138672]
[145.18585205 -382.72113037]
[144.42002869 -378.14218140]
[141.60934448 -373.74365234]
[140.93955994 -358.75860596]
[148.86849976 -349.62304688]
[148.43313599 -337.13327026]
[139.32176208 -328.00390625]
[138.42895508 -313.03048706]
[147.11752319 -297.78332520]
[136.85003662 -282.49737549]
[136.18025208 -267.51232910]
[138.68486023 -263.44589233]
[138.66152954 -257.76290894]
[135.26084900 -252.09307861]
[134.14520264 -237.13461304]
[133.02955627 -222.17616272]
[131.91390991 -207.21771240]
[130.79826355 -192.25926208]
[129.68261719 -177.30081177]
[139.56649780 -166.21730042]
[138.64816284 -151.03140259]
[126.95574951 -140.73941040]
[133.72500610 -127.47192383]
[124.98272705 -114.28544617]
[123.86707306 -99.32698822]
[122.75142670 -84.36853790]
[121.63578033 -69.41008759]
[128.40504456 -56.14258957]
[119.66275787 -42.95611572]
[118.54711151 -27.99766159]
[130.31620789 -21.06907654]
[137.98873901 -9.69097996]
[140.02009583 3.94803357]
[135.95748901 17.19467163]
[126.53922272 27.44711113]
[113.56132507 32.66600418]
[112.22309113 47.60618973]
[110.88484955 62.54637146]
[109.54661560 77.48655701]
[108.20838165 92.42674255]
[106.98140717 107.37648010]
[107.98567200 122.34281921]
[111.08978271 137.01812744]
[114.19389343 151.69342041]
[117.29799652 166.36872864]
[120.40210724 181.04403687]
[123.50621796 195.71932983]
[126.61032867 210.39463806]
[129.71444702 225.06993103]
[132.81855774 239.74523926]
[136.24961853 254.34756470]
[140.00590515 268.86962891]
[150.95251465 280.29251099]
[146.64891052 294.55181885]
[150.40521240 309.07388306]
[154.16151428 323.59594727]
[157.91781616 338.11801147]
[168.86442566 349.54089355]
[164.56082153 363.80020142]
[174.30656433 352.39755249]
[189.30230713 352.75497437]
[198.49374390 364.60897827]
[195.10530090 379.22125244]
[181.63479614 385.82015991]
[168.01325989 379.54251099]
[170.67904663 394.30371094]
[173.34484863 409.06494141]
[176.01063538 423.82617188]
[178.93167114 427.03887939]
[180.51881409 430.65072632]
[180.81036377 434.19338989]
[179.99282837 437.25903320]
[178.36825562 439.54351807]
[180.15072632 454.43725586]
[181.93318176 469.33096313]
[194.07351685 479.09060669]
[195.66902161 494.22033691]
[186.28988647 505.73413086]
[188.07235718 520.62786865]
[189.85481262 535.52154541]
[199.17718506 548.30450439]
[193.00709534 561.86102295]
[194.78956604 576.75476074]
[196.57203674 591.64849854]
[198.35449219 606.54217529]
[213.06584167 610.27593994]
[225.43269348 619.07513428]
[233.78254700 631.74969482]
[236.98614502 646.58551025]
[234.61024475 661.57617188]
[226.97615051 674.69427490]
[215.11633301 684.16577148]
[200.63470459 688.70965576]
[185.48980713 687.71142578]
[171.72984314 681.30609131]
[161.21577454 670.35992432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[9 194]
[10 193]
[11 192]
[14 189]
[15 188]
[16 187]
[17 182]
[18 181]
[19 180]
[20 179]
[21 173]
[23 171]
[24 170]
[25 169]
[26 168]
[28 166]
[29 165]
[33 164]
[34 163]
[35 162]
[36 161]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[61 155]
[63 154]
[64 153]
[65 152]
[66 151]
[67 150]
[72 144]
[73 143]
[75 141]
[76 140]
[77 139]
[78 138]
[80 136]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 125]
[90 124]
[93 122]
[94 121]
[96 118]
[97 117]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
