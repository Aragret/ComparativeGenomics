%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[49.28381729 901.90136719]
[34.28203201 901.76232910]
[19.30083275 900.96447754]
[4.36913443 899.50939941]
[-10.48423767 897.39984131]
[-25.23061371 894.63989258]
[-39.84152985 891.23492432]
[-54.28878021 887.19140625]
[-68.54447937 882.51727295]
[-82.58111572 877.22143555]
[-96.37158203 871.31414795]
[-109.88927460 864.80682373]
[-123.10808563 857.71203613]
[-136.00250244 850.04351807]
[-148.54765320 841.81597900]
[-160.71929932 833.04534912]
[-172.49394226 823.74853516]
[-183.84887695 813.94354248]
[-194.76217651 803.64923096]
[-205.21276855 792.88549805]
[-215.18049622 781.67309570]
[-224.64608765 770.03369141]
[-233.59130859 757.98980713]
[-241.99887085 745.56457520]
[-249.85255432 732.78210449]
[-257.13717651 719.66693115]
[-263.83871460 706.24450684]
[-269.94421387 692.54058838]
[-275.44189453 678.58178711]
[-280.32110596 664.39495850]
[-284.57250977 650.00750732]
[-288.18780518 635.44720459]
[-291.16009521 620.74218750]
[-293.48358154 605.92077637]
[-295.15380859 591.01159668]
[-296.16757202 576.04345703]
[-296.52288818 561.04522705]
[-296.21905518 546.04589844]
[-295.25668335 531.07434082]
[-293.63763428 516.15954590]
[-291.36505127 501.33023071]
[-288.44326782 486.61508179]
[-284.87792969 472.04244995]
[-280.67596436 457.64050293]
[-275.84545898 443.43701172]
[-270.39575195 429.45941162]
[-264.33734131 415.73464966]
[-257.68191528 402.28927612]
[-250.44233704 389.14920044]
[-242.63258362 376.33981323]
[-234.26771545 363.88583374]
[-225.36390686 351.81127930]
[-215.93830872 340.13946533]
[-206.00914001 328.89291382]
[-195.59555054 318.09338379]
[-184.71765137 307.76168823]
[-173.39643860 297.91772461]
[-161.65377808 288.58056641]
[-149.51229858 279.76821899]
[-136.99548340 271.49768066]
[-124.12745667 263.78488159]
[-110.93307495 256.64477539]
[-97.43780518 250.09111023]
[-83.66769409 244.13653564]
[-69.64932251 238.79255676]
[-55.40975189 234.06947327]
[-40.97646713 229.97642517]
[-26.37732506 226.52128601]
[-11.64050961 223.71073914]
[3.20553374 221.55021667]
[18.13214874 220.04386902]
[33.11052322 219.19462585]
[48.11174011 219.00410461]
[63.10684967 219.47270203]
[78.06690979 220.59948730]
[79.84937286 205.70576477]
[81.63183594 190.81204224]
[75.46175385 177.25552368]
[84.78412628 164.47256470]
[86.56658936 149.57884216]
[88.34905243 134.68513489]
[90.13152313 119.79141235]
[91.91398621 104.89769745]
[89.68966675 100.14729309]
[90.28524780 94.48879242]
[93.97767639 89.58951569]
[96.20278931 74.75547028]
[98.42790985 59.92142868]
[100.65302277 45.08738708]
[102.76764679 30.23718834]
[104.77165985 15.37165928]
[106.77567291 0.50613153]
[92.42656708 -3.98954415]
[79.04370880 -10.84571552]
[67.01215363 -19.86511803]
[56.67806625 -30.78824425]
[48.33878326 -43.30081177]
[42.23424530 -57.04281616]
[38.54008865 -71.61886597]
[37.36260223 -86.60958099]
[38.73566818 -101.58364868]
[42.61977386 -116.11023712]
[48.90317154 -129.77137756]
[57.40507126 -142.17402649]
[67.88085938 -152.96133423]
[80.02912903 -161.82290649]
[93.50034332 -168.50381470]
[107.90691376 -172.81179810]
[122.83432770 -174.62292480]
[137.85310364 -173.88510132]
[152.53111267 -170.61952209]
[166.44604492 -164.92016602]
[179.19754028 -156.95101929]
[190.41871643 -146.94134521]
[199.78669739 -135.17918396]
[207.03198242 -122.00290680]
[211.94607544 -107.79165649]
[214.38760376 -92.95430756]
[214.28631592 -77.91776276]
[211.64514160 -63.11464691]
[206.54005432 -48.97088242]
[199.11793518 -35.89340973]
[189.59234619 -24.25849724]
[178.23736572 -14.40090179]
[165.37966919 -6.60424614]
[151.38922119 -1.09285641]
[136.66856384 1.97469389]
[121.64120483 2.51014519]
[119.63719177 17.37567329]
[117.63317871 32.24120331]
[119.85486603 39.29002380]
[115.48706818 47.31250381]
[113.26195526 62.14654541]
[111.03683472 76.98059082]
[108.81171417 91.81463623]
[106.80770111 106.68016052]
[105.02523804 121.57388306]
[103.24277496 136.46759033]
[101.46030426 151.36131287]
[99.67784119 166.25503540]
[105.72042847 180.87684631]
[96.52555847 192.59451294]
[94.74308777 207.48823547]
[92.96062469 222.38194275]
[107.76407623 224.81723022]
[122.44628143 227.90039062]
[136.97888184 231.62548828]
[151.33383179 235.98532104]
[165.48344421 240.97148132]
[179.40036011 246.57432556]
[193.05776978 252.78306580]
[206.42926025 259.58569336]
[219.48905945 266.96911621]
[232.21194458 274.91903687]
[244.57334900 283.42010498]
[256.54940796 292.45596313]
[268.11703491 302.00912476]
[279.25387573 312.06118774]
[289.93844604 322.59271240]
[300.15008545 333.58337402]
[309.86914062 345.01199341]
[319.07681274 356.85647583]
[327.75534058 369.09396362]
[335.88796997 381.70083618]
[343.45901489 394.65274048]
[350.45382690 407.92474365]
[356.85891724 421.49114990]
[362.66195679 435.32580566]
[367.85171509 449.40200806]
[372.41818237 463.69256592]
[376.35250854 478.16992188]
[379.64715576 492.80612183]
[382.29574585 507.57290649]
[384.29315186 522.44177246]
[385.63552856 537.38403320]
[386.32025146 552.37078857]
[386.34606934 567.37322998]
[385.71286011 582.36230469]
[384.42190552 597.30908203]
[382.47567749 612.18469238]
[379.87789917 626.96051025]
[376.63360596 641.60797119]
[372.74908447 656.09875488]
[368.23181152 670.40496826]
[363.09051514 684.49890137]
[357.33511353 698.35345459]
[350.97668457 711.94183350]
[344.02758789 725.23779297]
[336.50112915 738.21569824]
[328.41192627 750.85046387]
[319.77554321 763.11773682]
[310.60867310 774.99377441]
[300.92898560 786.45574951]
[290.75518799 797.48150635]
[280.10693359 808.04968262]
[269.00473022 818.14001465]
[257.47003174 827.73291016]
[245.52511597 836.80993652]
[233.19302368 845.35345459]
[220.49755859 853.34710693]
[207.46324158 860.77539062]
[194.11521912 867.62396240]
[180.47926331 873.87963867]
[166.58168030 879.53033447]
[152.44932556 884.56512451]
[138.10945129 888.97430420]
[123.58974457 892.74938965]
[108.91823578 895.88305664]
[94.12324524 898.36920166]
[79.23332977 900.20312500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 144]
[76 143]
[77 142]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 130]
[91 129]
[92 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
