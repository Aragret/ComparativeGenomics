%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[61.47471237 686.36468506]
[47.70451736 692.35961914]
[33.31210709 696.65100098]
[18.50735474 699.17620850]
[3.50616479 699.89843750]
[-11.47270393 698.80718994]
[-26.21081543 695.91833496]
[-40.49324417 691.27404785]
[-54.11171341 684.94201660]
[-66.86762238 677.01458740]
[-78.57495117 667.60736084]
[-89.06297302 656.85754395]
[-98.17874146 644.92187500]
[-105.78932953 631.97442627]
[-111.78373718 618.20397949]
[-116.07456207 603.81140137]
[-118.59922791 589.00659180]
[-119.32091522 574.00537109]
[-118.22910309 559.02655029]
[-115.33970642 544.28851318]
[-110.69487000 530.00628662]
[-104.36231995 516.38806152]
[-96.43441010 503.63244629]
[-87.02674866 491.92544556]
[-76.27653503 481.43783569]
[-64.34053040 472.32250977]
[-51.39279938 464.71240234]
[-37.62215805 458.71850586]
[-23.22942352 454.42822266]
[-8.42448425 451.90411377]
[6.57675982 451.18298340]
[21.55554771 452.27536011]
[24.44082069 437.55548096]
[27.32609367 422.83557129]
[30.21136475 408.11569214]
[33.09663773 393.39581299]
[35.65246964 378.61514282]
[37.87758636 363.78109741]
[32.11386871 350.04687500]
[41.81269836 337.54714966]
[44.03781509 322.71310425]
[46.26293182 307.87905884]
[48.48804855 293.04501343]
[46.69756317 290.00750732]
[46.28936768 285.95184326]
[47.72597504 281.53713989]
[51.15803528 277.60421753]
[54.04330826 262.88430786]
[52.16963577 258.49133301]
[53.03572083 252.87466431]
[57.23984909 247.77203369]
[60.56210709 233.14457703]
[63.88436890 218.51710510]
[54.19560242 209.33180237]
[50.27929306 196.45520020]
[53.26071167 183.21961975]
[62.46543884 173.10569763]
[75.56829834 168.82716370]
[79.10797119 154.25079346]
[82.64764404 139.67440796]
[86.18731689 125.09803772]
[75.50717926 114.85945129]
[71.35965729 100.65761566]
[74.85097504 86.28038025]
[85.04992676 75.56238556]
[99.23630524 71.36228943]
[102.77597809 56.78591537]
[106.31565094 42.20954132]
[109.85532379 27.63316536]
[104.26277924 10.08879280]
[116.86199951 -2.12704206]
[120.18425751 -16.75450134]
[123.50652313 -31.38196182]
[126.82878113 -46.00942230]
[130.15104675 -60.63688278]
[117.90325165 -71.74469757]
[112.95674896 -87.42359161]
[116.57131195 -103.36573029]
[127.66802979 -115.24085999]
[143.14901733 -119.87245941]
[146.25312805 -134.54776001]
[144.96734619 -143.59124756]
[149.51423645 -149.41769409]
[152.83650208 -164.04515076]
[156.15875244 -178.67262268]
[158.60447693 -193.47189331]
[160.16500854 -208.39048767]
[161.72552490 -223.30909729]
[163.28605652 -238.22770691]
[161.15896606 -242.99452209]
[161.08084106 -247.63641357]
[162.66101074 -251.39382935]
[165.26390076 -253.77232361]
[167.48902893 -268.60638428]
[169.71414185 -283.44042969]
[171.93925476 -298.27447510]
[174.16436768 -313.10848999]
[160.13459778 -318.59603882]
[147.67794800 -327.06832886]
[137.41926575 -338.10043335]
[129.87310791 -351.13894653]
[125.41799927 -365.52990723]
[124.27739716 -380.55145264]
[126.50851440 -395.45010376]
[131.99943542 -409.47857666]
[140.47474670 -421.93316650]
[151.50933838 -432.18914795]
[164.54969788 -439.73214722]
[178.94172668 -444.18377686]
[193.96354675 -445.32073975]
[208.86166382 -443.08602905]
[222.88877869 -437.59170532]
[235.34132385 -429.11337280]
[245.59465027 -418.07629395]
[253.13449097 -405.03411865]
[257.58264160 -390.64099121]
[258.71594238 -375.61889648]
[256.47760010 -360.72134399]
[250.97988892 -346.69552612]
[242.49855042 -334.24505615]
[231.45899963 -323.99438477]
[218.41497803 -316.45773315]
[204.02078247 -312.01306152]
[188.99841309 -310.88339233]
[186.77330017 -296.04934692]
[184.54818726 -281.21530151]
[182.32305908 -266.38125610]
[180.09794617 -251.54721069]
[178.20465088 -236.66717529]
[176.64413452 -221.74856567]
[175.08361816 -206.82997131]
[173.52308655 -191.91136169]
[184.51918030 -202.11361694]
[199.39773560 -204.01850891]
[212.60942078 -196.91558838]
[219.22659302 -183.45404053]
[216.78121948 -168.65470886]
[206.18534851 -158.03738403]
[191.39100647 -155.56204224]
[177.91609192 -162.15194702]
[170.78620911 -175.35035706]
[167.46395874 -160.72290039]
[164.14169312 -146.09542847]
[160.92842102 -131.44364929]
[157.82431030 -116.76834869]
[168.56224060 -108.32951355]
[174.64585876 -96.02835846]
[174.83682251 -82.24022675]
[169.04087830 -69.65510559]
[158.33731079 -60.75286865]
[144.77850342 -57.31462479]
[141.45623779 -42.68716431]
[138.13398743 -28.05970383]
[134.81172180 -13.43224239]
[131.48945618 1.19521749]
[137.66860962 11.59447861]
[135.02049255 23.80804634]
[124.43170166 31.17283821]
[120.89202881 45.74921417]
[117.35235596 60.32558823]
[113.81268311 74.90196228]
[124.49282074 85.14054871]
[128.64033508 99.34238434]
[125.14902496 113.71961975]
[114.95007324 124.43761444]
[100.76369476 128.63771057]
[97.22402191 143.21408081]
[93.68434906 157.79046631]
[90.14467621 172.36683655]
[101.27049255 185.10702515]
[102.59709167 201.80256653]
[93.79914093 215.85809326]
[78.51182556 221.83937073]
[75.18956757 236.46682739]
[71.86730957 251.09428406]
[68.76319885 265.76959229]
[65.87792969 280.48947144]
[63.32209396 295.27014160]
[61.09697723 310.10418701]
[58.87186050 324.93823242]
[56.64674377 339.77227783]
[62.25130463 354.56750488]
[52.71163177 366.00622559]
[50.48651505 380.84027100]
[52.39863205 385.69729614]
[52.26939774 390.33807373]
[50.52303314 394.02117920]
[47.81652832 396.28106689]
[44.93125534 411.00097656]
[42.04598236 425.72085571]
[39.16071320 440.44073486]
[36.27544022 455.16064453]
[50.55821609 459.80386353]
[64.17715454 466.13488770]
[76.93365479 474.06137085]
[88.64168549 483.46771240]
[99.13051605 494.21676636]
[108.24717712 506.15173340]
[115.85873413 519.09863281]
[121.85417175 532.86859131]
[126.14607239 547.26086426]
[128.67184448 562.06549072]
[129.39465332 577.06665039]
[128.30395508 592.04559326]
[125.41567230 606.78381348]
[120.77189636 621.06640625]
[114.44036865 634.68511963]
[106.51341248 647.44128418]
[97.10662842 659.14898682]
[86.35719299 669.63739014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 184]
[38 183]
[40 181]
[41 180]
[42 179]
[43 178]
[47 177]
[48 176]
[51 175]
[52 174]
[53 173]
[58 169]
[59 168]
[60 167]
[61 166]
[66 161]
[67 160]
[68 159]
[69 158]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[80 145]
[81 144]
[83 143]
[84 142]
[85 141]
[86 132]
[87 131]
[88 130]
[89 129]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
