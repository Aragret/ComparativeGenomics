%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[110.33069611 521.86859131]
[104.06999207 535.69494629]
[93.23465729 546.32318115]
[79.29010010 552.31604004]
[64.12219238 552.86285400]
[49.78227615 547.88983154]
[38.20970535 538.06945801]
[30.96957397 524.72979736]
[29.04105186 509.67507935]
[32.68495560 494.94122314]
[41.40847778 482.52090454]
[54.03182983 474.09384155]
[68.84781647 470.79974365]
[71.07292938 455.96569824]
[73.29804993 441.13165283]
[75.52316284 426.29760742]
[77.74828339 411.46356201]
[71.98456573 397.72933960]
[81.68339539 385.22961426]
[83.46585846 370.33590698]
[84.80409241 355.39572144]
[75.08631134 344.16625977]
[76.23064423 328.99572754]
[88.07499695 318.87896729]
[89.41323090 303.93878174]
[90.08302307 288.95373535]
[90.08302307 273.95373535]
[90.08302307 258.95373535]
[90.08302307 243.95375061]
[90.08302307 228.95375061]
[81.75406647 220.18135071]
[81.63130188 207.68460083]
[90.32593536 198.15747070]
[90.54926300 183.15913391]
[90.77259064 168.16079712]
[90.99591827 153.16246033]
[87.95235443 146.42758179]
[91.33588409 137.94291687]
[91.78248596 122.94956970]
[92.22909546 107.95622253]
[80.59716034 117.42713165]
[65.66178131 116.03630066]
[55.97861481 104.58045959]
[57.09462357 89.62203217]
[68.37050629 79.72988892]
[83.34691620 80.57069397]
[93.44437408 91.66191101]
[95.22683716 76.76818848]
[97.00930786 61.87447357]
[98.79177094 46.98075485]
[100.57424164 32.08703995]
[102.35670471 17.19332123]
[104.13916779 2.29960418]
[105.92163849 -12.59411335]
[107.70410156 -27.48783112]
[94.98197174 -32.04338837]
[83.50039673 -39.15680313]
[73.76631165 -48.51075745]
[66.20881653 -59.68907928]
[61.16024780 -72.19525909]
[58.84159470 -85.47449493]
[59.35280228 -98.93833923]
[62.66846466 -111.99073029]
[68.63909912 -124.05440521]
[76.99785614 -134.59642029]
[87.37245178 -143.15171814]
[99.30175781 -149.34361267]
[112.25627899 -152.90037537]
[125.66168976 -153.66719055]
[128.10742188 -168.46646118]
[130.55314636 -183.26573181]
[132.99887085 -198.06500244]
[135.33435059 -212.88206482]
[137.55947876 -227.71611023]
[139.78459167 -242.55015564]
[134.18002319 -257.34539795]
[143.71969604 -268.78411865]
[145.94482422 -283.61813354]
[135.95549011 -291.13354492]
[130.14305115 -302.11917114]
[129.55632019 -314.46157837]
[134.24534607 -325.81561279]
[143.26354980 -334.04998779]
[154.85812378 -337.64736938]
[157.52392578 -352.40856934]
[160.18971252 -367.16979980]
[162.85551453 -381.93099976]
[156.22862244 -399.11141968]
[168.07841492 -412.05551147]
[170.52413940 -426.85476685]
[172.96986389 -441.65405273]
[171.28155518 -450.63110352]
[175.56375122 -456.65475464]
[178.22953796 -471.41598511]
[180.89533997 -486.17721558]
[182.34475708 -501.10702515]
[182.56808472 -516.10534668]
[182.79141235 -531.10369873]
[183.01473999 -546.10205078]
[169.17851257 -552.46429443]
[159.13114929 -563.90850830]
[154.61340332 -578.45190430]
[156.40802002 -593.57470703]
[164.20405579 -606.65686035]
[176.65080261 -615.43170166]
[191.59179688 -618.37902832]
[206.43840027 -614.98815918]
[218.61837769 -605.84661865]
[226.02145386 -592.53814697]
[227.36500549 -577.36865234]
[222.41624451 -562.96618652]
[212.03260803 -551.82623291]
[198.01307678 -545.87872314]
[197.78974915 -530.88037109]
[197.56642151 -515.88201904]
[197.34309387 -500.88369751]
[205.98451233 -513.14440918]
[219.29161072 -520.06695557]
[234.29156494 -520.10467529]
[247.63334656 -513.24920654]
[256.33633423 -501.03210449]
[258.45632935 -486.18267822]
[253.51963806 -472.01831055]
[242.62918091 -461.70336914]
[228.21789551 -457.54226685]
[213.50531006 -460.46453857]
[201.77824402 -469.81741333]
[195.65655518 -483.51141357]
[192.99076843 -468.75018311]
[190.32496643 -453.98898315]
[187.76913452 -439.20831299]
[185.32341003 -424.40905762]
[182.87768555 -409.60977173]
[189.66485596 -399.59674072]
[187.74839783 -387.24722290]
[177.61672974 -379.26522827]
[174.95092773 -364.50399780]
[172.28514099 -349.74279785]
[169.61933899 -334.98156738]
[182.41406250 -322.80917358]
[185.36659241 -305.23837280]
[177.10858154 -289.27325439]
[160.77886963 -281.39303589]
[158.55374146 -266.55899048]
[164.31745911 -252.82476807]
[154.61863708 -240.32504272]
[152.39352417 -225.49099731]
[150.16839600 -210.65695190]
[152.28489685 -203.57583618]
[147.79814148 -195.61926270]
[145.35241699 -180.81999207]
[142.90669250 -166.02072144]
[140.46095276 -151.22145081]
[155.65031433 -144.63200378]
[168.64131165 -134.35023499]
[178.55613708 -121.06414032]
[184.72306824 -105.66489410]
[186.72203064 -89.18715668]
[184.41314697 -72.73950958]
[177.94656372 -57.42992020]
[167.75270081 -44.29104996]
[154.51356506 -34.21064377]
[139.11712646 -27.87152672]
[122.59781647 -25.70536423]
[120.81535339 -10.81164742]
[119.03289032 4.08206987]
[117.25041962 18.97578812]
[115.46795654 33.86950302]
[113.68548584 48.76322174]
[111.90302277 63.65694046]
[110.12055969 78.55065918]
[108.33808899 93.44437408]
[107.22244263 108.40282440]
[106.77584076 123.39617920]
[106.32923126 138.38952637]
[105.99425507 153.38578796]
[105.77092743 168.38412476]
[105.54759979 183.38246155]
[105.32427216 198.38079834]
[114.66371155 214.25077820]
[105.08302307 228.95375061]
[105.08302307 243.95375061]
[105.08302307 258.95373535]
[105.08302307 273.95373535]
[105.08302307 288.95373535]
[116.42781067 279.14071655]
[131.39797974 280.08624268]
[141.41793823 291.24868774]
[140.74778748 306.23373413]
[129.77143860 316.45721436]
[114.77662659 316.06268311]
[104.35341644 305.27700806]
[103.01518250 320.21719360]
[112.87304688 332.27789307]
[111.30305481 347.41030884]
[99.74427795 356.73394775]
[98.40604401 371.67413330]
[100.37205505 375.54565430]
[100.94609070 379.44888306]
[100.28912354 382.94226074]
[98.68896484 385.68197632]
[96.51744080 387.45474243]
[102.12200165 402.24996948]
[92.58232880 413.68869019]
[90.35720825 428.52273560]
[88.13209534 443.35678101]
[85.90697479 458.19082642]
[83.68185425 473.02487183]
[96.87929535 480.52099609]
[106.47459412 492.28085327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[19 202]
[20 197]
[21 196]
[24 193]
[25 192]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[33 179]
[34 178]
[35 177]
[36 176]
[38 175]
[39 174]
[40 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[69 153]
[70 152]
[71 151]
[72 150]
[73 148]
[74 147]
[75 146]
[77 144]
[78 143]
[84 139]
[85 138]
[86 137]
[87 136]
[89 133]
[90 132]
[91 131]
[93 130]
[94 129]
[95 128]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
