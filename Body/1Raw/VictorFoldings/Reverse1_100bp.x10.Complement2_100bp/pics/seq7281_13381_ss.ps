%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[114.99638367 440.19839478]
[127.96956635 432.46060181]
[124.21326447 417.93856812]
[120.45696259 403.41650391]
[116.48487091 388.95196533]
[112.29785919 374.54818726]
[108.11084747 360.14440918]
[97.66427612 354.04559326]
[94.05812073 342.07983398]
[99.74781799 330.50442505]
[88.91645813 320.28036499]
[92.72317505 304.92395020]
[88.75108337 290.45944214]
[84.77898407 275.99490356]
[80.80689240 261.53039551]
[76.83479309 247.06585693]
[74.00724792 261.79693604]
[68.11991882 275.59329224]
[59.44064713 287.82727051]
[48.36427307 297.94232178]
[35.39469910 305.47824097]
[21.12195778 310.09222412]
[6.19536114 311.57437134]
[-8.70602894 309.85720825]
[-22.90429878 305.01892090]
[-35.75352478 297.27957153]
[-46.66914749 286.99127197]
[-55.15458298 274.62207031]
[-60.82379913 260.73464966]
[-63.41888428 245.96084595]
[-62.82178116 230.97273254]
[-59.05965424 216.45219421]
[-52.30364990 203.05978394]
[-42.86112595 191.40480042]
[-31.16165543 182.01744080]
[-17.73748207 175.32479858]
[-3.19931793 171.63131714]
[11.79144669 171.10502625]
[26.55283356 173.76989746]
[40.41329575 179.50466919]
[52.74227905 188.04844666]
[62.97888947 199.01255798]
[70.65744019 211.89820862]
[75.42952728 226.12339783]
[77.43354034 211.25787354]
[79.43755341 196.39234924]
[81.44156647 181.52682495]
[83.44558716 166.66128540]
[85.44960022 151.79576111]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[98.70233154 47.63799286]
[97.92100525 32.65835571]
[94.59874725 18.03089523]
[91.27648926 3.40343475]
[87.95423126 -11.22402573]
[84.63196564 -25.85148621]
[81.30970764 -40.47894669]
[77.98744965 -55.10640717]
[74.66519165 -69.73386383]
[70.47817993 -84.13764954]
[65.44126129 -98.26667786]
[60.40434647 -112.39570618]
[55.36743164 -126.52473450]
[53.48635864 -111.64315033]
[47.71099472 -97.79955292]
[38.45826340 -85.99333191]
[26.39613152 -77.07677460]
[12.39537144 -71.69358063]
[-2.53328824 -70.23237610]
[-17.31213570 -72.79863739]
[-30.87427139 -79.20710754]
[-42.24063492 -88.99514771]
[-50.59067535 -101.45616150]
[-55.32160187 -115.69056702]
[-56.09188080 -130.67077637]
[-52.84590530 -145.31535339]
[-45.81800842 -158.56709290]
[-35.51553345 -169.46934509]
[-22.68223190 -177.23506165]
[-8.24454689 -181.30363464]
[6.75525188 -181.38133240]
[21.23431587 -177.46257019]
[34.14738846 -169.83023071]
[44.56226349 -159.03530884]
[51.72749710 -145.85600281]
[51.28089142 -160.84936523]
[50.83428574 -175.84271240]
[50.38768005 -190.83605957]
[49.94107437 -205.82940674]
[46.55754471 -214.31407166]
[49.60111237 -221.04895020]
[49.37778473 -236.04728699]
[35.13471603 -241.29129028]
[23.75039291 -251.32928467]
[16.76444244 -264.80374146]
[15.12166214 -279.89233398]
[19.04422188 -294.55447388]
[28.00162888 -306.80718994]
[40.78246689 -314.99343872]
[55.65823364 -318.00607300]
[70.61710358 -315.43768311]
[83.63600922 -307.63558960]
[92.95425415 -295.65499878]
[97.31162262 -281.11614990]
[96.11881256 -265.98535156]
[89.53714752 -252.30886841]
[78.45674133 -241.93635559]
[64.37612152 -236.27061462]
[64.59944916 -221.27227783]
[64.93442535 -206.27601624]
[65.38102722 -191.28266907]
[65.82763672 -176.28932190]
[66.27424622 -161.29595947]
[66.72084808 -146.30261230]
[69.49645996 -131.56164551]
[74.53337860 -117.43262482]
[79.57028961 -103.30359650]
[84.60720825 -89.17456818]
[90.11744690 -103.12580872]
[102.71340942 -111.27085114]
[117.69711304 -110.57180023]
[129.47999573 -101.28936768]
[133.66735840 -86.88568878]
[128.69738770 -72.73296356]
[116.42378998 -64.10982513]
[101.42428589 -64.23248291]
[89.29264832 -73.05612946]
[92.61490631 -58.42866516]
[95.93717194 -43.80120468]
[99.25942993 -29.17374611]
[102.58168793 -14.54628468]
[105.90394592 0.08117517]
[109.22620392 14.70863533]
[112.54846954 29.33609581]
[116.09062195 14.76032257]
[123.10119629 1.49941051]
[133.15150452 -9.63573074]
[145.62695312 -17.96418381]
[159.76466370 -22.97665977]
[174.70013428 -24.36664391]
[189.52001953 -22.04913902]
[203.31809998 -16.16585922]
[215.25061035 -7.07657194]
[224.58787537 4.66291046]
[230.75892639 18.33471489]
[233.38638306 33.10280228]
[232.30958557 48.06410599]
[227.59437561 62.30372620]
[219.52909851 74.95091248]
[208.60694885 85.23227692]
[195.49580383 92.51911926]
[180.99743652 96.36584473]
[165.99841309 96.53721619]
[151.41593933 93.02276611]
[138.14173889 86.03739166]
[126.98751831 76.00826263]
[118.63537598 63.54865646]
[113.59604645 49.42045975]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[100.31512451 153.79977417]
[98.31111145 168.66529846]
[96.30709839 183.53083801]
[94.30308533 198.39636230]
[92.29907227 213.26188660]
[90.29505920 228.12742615]
[91.29931641 243.09376526]
[95.27141571 257.55828857]
[99.24350739 272.02279663]
[103.21560669 286.48733521]
[107.18770599 300.95187378]
[118.30316925 312.21051025]
[114.21234131 326.53231812]
[127.61041260 339.16455078]
[122.51462555 355.95739746]
[126.70163727 370.36117554]
[130.88865662 384.76495361]
[135.38903809 389.60830688]
[136.58790588 395.16348267]
[134.97901917 399.66018677]
[138.73532104 414.18225098]
[142.49162292 428.70431519]
[157.58961487 429.18115234]
[171.94126892 433.89355469]
[184.38314819 442.45956421]
[193.90664673 454.18472290]
[199.73974609 468.11856079]
[201.40957642 483.13150024]
[198.78077698 498.00653076]
[192.06645203 511.53775024]
[181.81091309 522.62829590]
[168.84550476 530.37908936]
[154.22128296 534.16186523]
[139.12377930 533.66986084]
[124.77687836 528.94299316]
[112.34360504 520.36450195]
[102.83188629 508.62979126]
[97.01278687 494.69009399]
[95.35803986 479.67547607]
[98.00177765 464.80313110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 187]
[6 186]
[7 185]
[10 183]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 166]
[54 165]
[55 164]
[56 163]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 123]
[66 122]
[67 121]
[68 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
