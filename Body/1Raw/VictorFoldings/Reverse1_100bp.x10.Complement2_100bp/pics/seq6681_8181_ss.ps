%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[88.86125946 527.45806885]
[81.11145020 513.00567627]
[89.98149872 499.21240234]
[90.20482635 484.21405029]
[82.65787506 471.37298584]
[90.59977722 457.68954468]
[83.05282593 444.84848022]
[90.99473572 431.16503906]
[91.21806335 416.16671753]
[83.67111206 403.32565308]
[91.61301422 389.64221191]
[91.83634186 374.64385986]
[92.05966949 359.64553833]
[92.28299713 344.64718628]
[92.50632477 329.64886475]
[89.46276093 322.91397095]
[92.84629059 314.42932129]
[93.29289246 299.43597412]
[93.73950195 284.44262695]
[86.38456726 271.49063110]
[94.52931976 257.92694092]
[94.97592926 242.93357849]
[95.42253113 227.94023132]
[95.86914062 212.94688416]
[96.31575012 197.95353699]
[96.76235199 182.96017456]
[96.53902435 167.96183777]
[95.64620972 152.98843384]
[94.75339508 138.01502991]
[93.86058044 123.04162598]
[92.96775818 108.06822205]
[90.19215393 93.32725525]
[85.57814026 79.05452728]
[80.96413422 64.78179169]
[76.35012054 50.50905609]
[65.24288177 43.95222473]
[61.69369888 31.96944237]
[67.08227539 21.13940048]
[62.68127823 6.79955387]
[58.28027725 -7.54029369]
[53.87928009 -21.88014030]
[49.47828293 -36.21998596]
[44.57191086 -22.04509735]
[33.30039215 -12.14798450]
[18.61007309 -9.11572838]
[4.34097099 -13.74095535]
[-5.77700663 -24.81464195]
[-9.09904480 -39.44215393]
[-4.75677109 -53.79989243]
[6.11475515 -64.13478088]
[20.67374229 -67.74530029]
[35.11450958 -63.68767929]
[45.66182709 -53.02333069]
[43.43671036 -67.85737610]
[33.73788071 -80.35710144]
[39.50159836 -94.09132385]
[37.27648163 -108.92536926]
[35.05136490 -123.75941467]
[32.82624435 -138.59346008]
[23.12741661 -151.09318542]
[28.89113426 -164.82740784]
[26.66601753 -179.66145325]
[24.44090080 -194.49549866]
[10.83403778 -201.71765137]
[4.16681147 -215.40710449]
[6.80763626 -230.22230530]
[17.53743172 -240.51840210]
[15.31231403 -255.35244751]
[13.08719730 -270.18649292]
[2.20806670 -259.85958862]
[-12.66911983 -261.77514648]
[-20.57745361 -274.52105713]
[-15.68720531 -288.70153809]
[-1.60328400 -293.86322021]
[11.29124641 -286.20251465]
[10.17559814 -301.16098022]
[9.05994987 -316.11944580]
[7.61053085 -331.04925537]
[5.82806492 -345.94296265]
[4.04559898 -360.83666992]
[2.26313305 -375.73040771]
[0.48066714 -390.62411499]
[-14.54010582 -391.19232178]
[-29.28703690 -394.10342407]
[-43.39696884 -399.28573608]
[-56.52243042 -406.61163330]
[-68.34020233 -415.90069580]
[-78.55924988 -426.92419434]
[-86.92792511 -439.41067505]
[-93.24015045 -453.05258179]
[-97.34046936 -467.51406860]
[-99.12790680 -482.43893433]
[-98.55845642 -497.45965576]
[-95.64613342 -512.20635986]
[-90.46266174 -526.31585693]
[-83.13568878 -539.44067383]
[-73.84564209 -551.25769043]
[-62.82130051 -561.47583008]
[-50.33414841 -569.84350586]
[-36.69169235 -576.15460205]
[-22.22989273 -580.25372314]
[-7.30488253 -582.03991699]
[7.71579695 -581.46923828]
[22.46224594 -578.55566406]
[36.57132339 -573.37103271]
[49.69557571 -566.04296875]
[61.51181030 -556.75195312]
[71.72904205 -545.72680664]
[80.09565735 -533.23895264]
[86.40563202 -519.59594727]
[90.50356293 -505.13381958]
[92.28854370 -490.20867920]
[91.71661377 -475.18804932]
[88.80185699 -460.44183350]
[83.61605835 -446.33319092]
[76.28691101 -433.20953369]
[66.99491882 -421.39407349]
[55.96889114 -411.17773438]
[43.48035812 -402.81216431]
[29.83686066 -396.50332642]
[15.37438488 -392.40658569]
[17.15685081 -377.51284790]
[18.93931580 -362.61914062]
[20.72178268 -347.72543335]
[22.50424767 -332.83169556]
[25.03517151 -330.37677002]
[26.50276184 -326.57397461]
[26.28647614 -321.93646240]
[24.01840210 -317.23507690]
[25.13405228 -302.27664185]
[26.24970055 -287.31817627]
[27.92124176 -272.41159058]
[30.14635849 -257.57754517]
[32.37147522 -242.74351501]
[45.64992142 -236.04867554]
[52.52130127 -222.66032410]
[50.16398621 -207.61717224]
[39.27494431 -196.72061157]
[41.50006104 -181.88656616]
[43.72517776 -167.05252075]
[53.26485443 -155.61381531]
[47.66028976 -140.81857300]
[49.88540649 -125.98452759]
[52.11052322 -111.15048218]
[54.33563995 -96.31644440]
[63.87531662 -84.87773895]
[58.27075195 -70.08248901]
[60.49586868 -55.24844742]
[63.81813049 -40.62098694]
[68.21912384 -26.28113937]
[72.62012482 -11.94129181]
[77.02112579 2.39855552]
[81.42211914 16.73840332]
[94.89501190 27.98331451]
[90.62285614 45.89505005]
[95.23686218 60.16778183]
[99.85087585 74.44051361]
[104.46488190 88.71324921]
[107.17836761 73.96072388]
[114.47749329 60.85642242]
[125.59197235 50.78327179]
[139.34886169 44.80431747]
[154.29637146 43.55053329]
[168.85705566 47.15422821]
[181.49427795 55.23510361]
[190.87442017 66.94036102]
[196.00755310 81.03472137]
[196.35197449 96.03076935]
[191.87135315 110.34593201]
[183.03851318 122.46949768]
[170.78561401 131.12205505]
[156.40574646 135.39044189]
[141.41642761 134.82424927]
[127.39954376 129.48320007]
[115.83431244 119.93095398]
[107.94116974 107.17540741]
[108.83398438 122.14881134]
[109.72679901 137.12222290]
[110.61961365 152.09562683]
[111.51242828 167.06903076]
[122.25302124 156.59812927]
[137.25292969 156.65095520]
[147.91952515 167.19721985]
[148.14248657 182.19555664]
[137.79411316 193.05424500]
[122.80239868 193.55291748]
[111.75569916 183.40678406]
[111.30909729 198.40013123]
[110.86248779 213.39349365]
[110.41588593 228.38684082]
[109.96927643 243.38018799]
[109.52267456 258.37353516]
[116.84565735 272.39794922]
[108.73284912 284.88922119]
[108.28624725 299.88256836]
[107.83963776 314.87591553]
[107.50466156 329.87219238]
[107.28133392 344.87051392]
[107.05800629 359.86886597]
[106.83467865 374.86718750]
[106.61135101 389.86553955]
[114.14233398 403.77935791]
[106.21640015 416.39004517]
[105.99307251 431.38836670]
[113.52404785 445.30221558]
[105.59811401 457.91287231]
[113.12909698 471.82672119]
[105.20316315 484.43737793]
[104.97983551 499.43572998]
[113.43527222 513.48693848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[6 206]
[8 204]
[9 203]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[17 196]
[18 195]
[19 194]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 158]
[33 157]
[34 156]
[35 155]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[53 148]
[54 147]
[56 145]
[57 144]
[58 143]
[59 142]
[61 140]
[62 139]
[63 138]
[67 134]
[68 133]
[69 132]
[75 131]
[76 130]
[77 129]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
