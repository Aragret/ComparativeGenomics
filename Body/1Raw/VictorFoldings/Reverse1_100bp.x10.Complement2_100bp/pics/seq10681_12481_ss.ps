%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[69.56658173 592.42388916]
[70.52554321 607.65686035]
[64.77224731 621.79412842]
[53.44901657 632.02874756]
[38.80408859 636.32861328]
[23.74522018 633.83996582]
[11.26236343 625.05694580]
[3.83399868 611.72344971]
[2.93503237 596.48681641]
[8.74395466 582.37231445]
[20.10740089 572.18237305]
[34.76914978 567.94024658]
[37.21487808 553.14099121]
[39.66060257 538.34167480]
[42.10633087 523.54241943]
[44.55205917 508.74316406]
[37.49687195 492.67483521]
[49.29890823 478.54000854]
[51.52402496 463.70596313]
[53.74914169 448.87191772]
[47.98542404 435.13769531]
[57.68425369 422.63796997]
[50.39061356 406.67645264]
[61.98089981 392.36746216]
[63.98491287 377.50195312]
[65.98892212 362.63641357]
[67.99293518 347.77090454]
[65.77124786 340.72207642]
[70.13904572 332.69958496]
[72.36416626 317.86553955]
[73.81358337 302.93572998]
[74.48336792 287.95071411]
[75.15315247 272.96566772]
[75.82293701 257.98062134]
[76.49272156 242.99559021]
[77.16250610 228.01054382]
[77.83229065 213.02551270]
[78.50208282 198.04046631]
[75.99747467 193.97401428]
[76.02079773 188.29101562]
[79.42147827 182.62120056]
[80.53713226 167.66275024]
[81.65277863 152.70428467]
[71.92712402 164.12408447]
[57.82799149 169.24409485]
[43.04086685 166.72596741]
[31.43106651 157.22795105]
[26.03336334 143.23277283]
[28.25870514 128.39877319]
[37.52539062 116.60349274]
[51.41113663 110.93020630]
[66.28623199 112.86190033]
[78.26237488 121.89362335]
[84.20888519 135.66363525]
[87.53115082 121.03617859]
[90.85340881 106.40871429]
[94.06668091 91.75692749]
[97.17079163 77.08162689]
[90.80220795 65.86539459]
[93.68974304 53.70620346]
[103.75479126 46.99640274]
[107.07704926 32.36894226]
[110.39930725 17.74148369]
[113.50341797 3.06618047]
[116.38869476 -11.65371132]
[119.27396393 -26.37360191]
[114.33563232 -41.40435410]
[124.37655640 -52.40567398]
[127.26183319 -67.12556458]
[130.14710999 -81.84545898]
[133.03237915 -96.56535339]
[135.91764832 -111.28524017]
[124.45764160 -121.41517639]
[119.63856506 -135.82604980]
[122.65966034 -150.61589050]
[132.61148071 -161.83271790]
[146.74638367 -166.53056335]
[149.63165283 -181.25045776]
[152.51693726 -195.97035217]
[141.05693054 -206.10028076]
[136.23783875 -220.51115417]
[139.25894165 -235.30099487]
[149.21075439 -246.51783752]
[163.34567261 -251.21568298]
[166.23094177 -265.93557739]
[161.29261780 -280.96633911]
[171.33354187 -291.96765137]
[174.21881104 -306.68753052]
[177.10408020 -321.40744019]
[179.98934937 -336.12731934]
[182.87463379 -350.84719849]
[185.75990295 -365.56710815]
[180.82156372 -380.59786987]
[190.86248779 -391.59918213]
[193.74777222 -406.31906128]
[179.73991394 -411.79809570]
[166.93559265 -419.69046021]
[155.74641418 -429.74243164]
[146.53208923 -441.63088989]
[139.58877563 -454.97369385]
[135.13970947 -469.34191895]
[133.32789612 -484.27365112]
[134.21157837 -499.28894043]
[137.76234436 -513.90509033]
[143.86605835 -527.65228271]
[152.32650757 -540.08850098]
[162.87171936 -550.81408691]
[175.16271973 -559.48425293]
[188.80439758 -565.82019043]
[203.35823059 -569.61828613]
[218.35638428 -570.75646973]
[233.31671143 -569.19812012]
[247.75830078 -564.99334717]
[261.21691895 -558.27728271]
[273.25994873 -549.26586914]
[283.50021362 -538.24877930]
[291.60858154 -525.58013916]
[297.32434082 -511.66723633]
[300.46380615 -496.95724487]
[300.92605591 -481.92309570]
[298.69619751 -467.04800415]
[293.84591675 -452.81024170]
[286.53115845 -439.66738892]
[276.98703003 -428.04202271]
[265.52035522 -418.30780029]
[252.49974060 -410.77761841]
[238.34373474 -405.69360352]
[223.50740051 -403.21914673]
[208.46765137 -403.43380737]
[205.58238220 -388.71389771]
[210.72709656 -374.73602295]
[200.47979736 -362.68182373]
[197.59451294 -347.96194458]
[194.70924377 -333.24203491]
[191.82397461 -318.52215576]
[188.93870544 -303.80227661]
[186.05342102 -289.08236694]
[191.19813538 -275.10449219]
[180.95083618 -263.05029297]
[178.06556702 -248.33041382]
[189.38099670 -238.64399719]
[194.36181641 -224.50018311]
[191.57591248 -209.66424561]
[181.67304993 -198.13903809]
[167.23683167 -193.08508301]
[164.35154724 -178.36518860]
[161.46627808 -163.64529419]
[172.78170776 -153.95887756]
[177.76252747 -139.81507874]
[174.97662354 -124.97913361]
[165.07377625 -113.45393372]
[150.63754272 -108.39997101]
[147.75227356 -93.68007660]
[144.86698914 -78.96018219]
[141.98171997 -64.24029541]
[139.09645081 -49.52040100]
[144.24114990 -35.54251862]
[133.99385071 -23.48832893]
[131.10858154 -8.76843834]
[128.22331238 5.95145321]
[130.09698486 10.34444618]
[129.23089600 15.96111107]
[125.02677155 21.06374168]
[121.70451355 35.69120407]
[118.38225555 50.31866455]
[124.46852875 66.77843475]
[111.84609222 80.18573761]
[108.74198151 94.86103821]
[110.28752899 102.77203369]
[105.48086548 109.73097229]
[102.15860748 124.35843658]
[98.83634949 138.98590088]
[96.61122894 153.81994629]
[95.49558258 168.77839661]
[94.37993622 183.73684692]
[93.48712158 198.71025085]
[92.81732941 213.69529724]
[92.14754486 228.68032837]
[91.47776031 243.66537476]
[90.80797577 258.65042114]
[90.13819122 273.63543701]
[89.46840668 288.62048340]
[88.79862213 303.60552979]
[99.80883026 293.41851807]
[114.78461456 292.56643677]
[126.87923431 301.43887329]
[130.56320190 315.97946167]
[124.15225983 329.54040527]
[110.57740021 335.92187500]
[96.04486084 332.20632935]
[87.19821167 320.09066772]
[84.97309113 334.92471313]
[82.85846710 349.77490234]
[80.85445404 364.64044189]
[78.85044098 379.50595093]
[76.84642792 394.37149048]
[84.03160095 405.08297729]
[82.05641174 417.42324829]
[72.51829529 424.86306763]
[78.12286377 439.65832520]
[68.58318329 451.09704590]
[66.35807037 465.93106079]
[64.13294983 480.76510620]
[71.15785217 491.58239746]
[68.99915314 503.89190674]
[59.35132980 511.18890381]
[56.90560150 525.98815918]
[54.45987320 540.78741455]
[52.01414871 555.58673096]
[49.56842041 570.38598633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[18 203]
[19 202]
[20 201]
[22 199]
[24 196]
[25 195]
[26 194]
[27 193]
[29 192]
[30 191]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[41 175]
[42 174]
[43 173]
[54 172]
[55 171]
[56 170]
[57 168]
[58 167]
[61 165]
[62 164]
[63 163]
[64 160]
[65 159]
[66 158]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[77 147]
[78 146]
[79 145]
[84 140]
[85 139]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[94 130]
[95 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
