%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[111.07993317 669.25415039]
[100.96887207 658.15649414]
[92.03244019 646.09289551]
[84.36232758 633.18707275]
[78.03724670 619.57147217]
[73.12210846 605.38580322]
[69.66734314 590.77569580]
[67.70840454 575.89105225]
[67.26539612 560.88452148]
[68.34286499 545.91021729]
[70.92975616 531.12176514]
[74.99951935 516.67089844]
[80.51039124 502.70587158]
[87.40582275 489.37005615]
[95.61505890 476.80026245]
[105.05385590 465.12548828]
[115.62535095 454.46554565]
[127.22107697 444.92980957]
[139.72203064 436.61614990]
[152.99993896 429.60986328]
[166.91854858 423.98281860]
[162.73153687 409.57904053]
[158.54452515 395.17526245]
[154.35751343 380.77148438]
[150.17050171 366.36770630]
[145.98348999 351.96392822]
[136.58157349 363.65167236]
[121.58183289 363.74090576]
[112.04153442 352.16583252]
[114.99341583 337.45913696]
[128.26147461 330.46209717]
[142.06388855 336.33139038]
[138.95977783 321.65609741]
[135.85566711 306.98080444]
[132.75155640 292.30548096]
[129.64744568 277.63018799]
[115.17282867 269.06723022]
[111.29353333 252.35595703]
[120.88582611 237.72697449]
[117.56356812 223.09951782]
[114.24131012 208.47206116]
[110.91905212 193.84460449]
[107.59679413 179.21713257]
[97.23276520 168.51965332]
[101.72138977 153.34852600]
[98.39913177 138.72106934]
[89.50952911 150.80308533]
[74.70173645 153.19668579]
[62.45833206 144.53071594]
[59.79288864 129.76943970]
[68.23229980 117.36877441]
[82.94207764 114.43239594]
[95.49526215 122.64160919]
[93.49124908 107.77607727]
[89.37898254 100.84342194]
[91.56977081 92.67449188]
[89.78730774 77.78077698]
[88.00483704 62.88706207]
[78.68247223 50.10409927]
[84.85255432 36.54757690]
[83.07009125 21.65386009]
[70.27178955 6.07932949]
[78.64615631 -11.34929466]
[76.42104340 -26.18333817]
[74.19592285 -41.01738358]
[56.01238632 -47.28186035]
[43.58687592 -61.85412979]
[40.30289841 -80.63797760]
[46.98952103 -98.40853119]
[61.71409225 -110.26561737]
[58.60998154 -124.94091797]
[55.50587082 -139.61622620]
[52.40176010 -154.29151917]
[41.97613144 -166.19180298]
[46.91215515 -180.24473572]
[43.80804443 -194.92004395]
[40.70393372 -209.59535217]
[37.59982300 -224.27064514]
[27.17419243 -236.17092896]
[32.11021805 -250.22386169]
[29.00610733 -264.89916992]
[25.90199661 -279.57446289]
[22.79788589 -294.24978638]
[7.74958372 -294.06314087]
[-7.04592180 -296.81619263]
[-21.01993179 -302.40307617]
[-33.63531876 -310.60906982]
[-44.40718842 -321.11874390]
[-52.92148972 -333.52810669]
[-58.85096359 -347.36022949]
[-61.96769333 -362.08343506]
[-62.15187836 -377.13177490]
[-59.39644241 -391.92681885]
[-53.80729294 -405.89993286]
[-45.59926605 -418.51397705]
[-35.08785629 -429.28414917]
[-22.67709160 -437.79644775]
[-8.84401131 -443.72369385]
[5.87968016 -446.83801270]
[20.92804146 -447.01977539]
[35.72265625 -444.26193237]
[49.69485474 -438.67053223]
[62.30758667 -430.46047974]
[73.07604980 -419.94732666]
[81.58634186 -407.53518677]
[87.51132965 -393.70114136]
[90.62329865 -378.97692871]
[90.80261230 -363.92855835]
[88.04238129 -349.13436890]
[82.44871521 -335.16308594]
[74.23660278 -322.55166626]
[63.72170639 -311.78491211]
[51.30818939 -303.27664185]
[37.47319031 -297.35388184]
[40.57729721 -282.67858887]
[43.68140793 -268.00326538]
[46.78551865 -253.32797241]
[56.98912430 -242.47737122]
[52.27512741 -227.37475586]
[55.37923813 -212.69946289]
[58.48334503 -198.02415466]
[61.58745575 -183.34884644]
[71.79106140 -172.49824524]
[67.07706451 -157.39562988]
[70.18117523 -142.72033691]
[73.28528595 -128.04502869]
[76.38939667 -113.36972809]
[87.31465149 -111.72477722]
[97.24446106 -106.82027435]
[105.22908020 -99.10724640]
[110.49934387 -89.30620575]
[112.54072571 -78.33983612]
[111.14352417 -67.24613190]
[106.42431641 -57.08016968]
[98.81637573 -48.81374359]
[89.02996826 -43.24250031]
[91.25508118 -28.40845490]
[93.48020172 -13.57441139]
[102.21049500 -8.26451969]
[106.67057800 1.17242825]
[105.16949463 11.72358799]
[97.96380615 19.87139320]
[99.74626923 34.76511002]
[108.94114685 46.48277283]
[102.89855194 61.10459518]
[104.68102264 75.99831390]
[106.46348572 90.89202881]
[108.35678101 105.77206421]
[110.36079407 120.63759613]
[113.02658844 135.39880371]
[116.34884644 150.02627563]
[126.95050049 161.77001953]
[122.22425079 175.89488220]
[125.54650879 190.52233887]
[128.86877441 205.14979553]
[132.19102478 219.77725220]
[135.51329041 234.40472412]
[147.66073608 240.22312927]
[154.14454651 251.80635071]
[152.79313660 264.81619263]
[144.32273865 274.52609253]
[147.42684937 289.20138550]
[150.53096008 303.87667847]
[153.63507080 318.55197144]
[156.73918152 333.22729492]
[160.38726807 347.77691650]
[164.57427979 362.18069458]
[168.76129150 376.58447266]
[172.94830322 390.98825073]
[177.13531494 405.39202881]
[181.32232666 419.79580688]
[196.08850098 417.08450317]
[211.05320740 415.88101196]
[226.06289673 416.19766235]
[240.96354675 418.03121948]
[255.60223389 421.36285400]
[269.82873535 426.15838623]
[283.49710083 432.36859131]
[296.46707153 439.92977905]
[308.60549927 448.76434326]
[319.78787231 458.78161621]
[329.89941406 469.87878418]
[338.83639526 481.94201660]
[346.50704956 494.84753418]
[352.83273315 508.46282959]
[357.74850464 522.64825439]
[361.20391846 537.25823975]
[363.16351318 552.14282227]
[363.60717773 567.14929199]
[362.53036499 582.12365723]
[359.94412231 596.91223145]
[355.87500000 611.36328125]
[350.36474609 625.32855225]
[343.46987915 638.66467285]
[335.26119995 651.23480225]
[325.82293701 662.90997314]
[315.25189209 673.57037354]
[303.65658569 683.10662842]
[291.15600586 691.42089844]
[277.87841797 698.42773438]
[263.96005249 704.05535889]
[249.54376221 708.24603271]
[234.77746582 710.95666504]
[219.81269836 712.15954590]
[204.80302429 711.84222412]
[189.90246582 710.00799561]
[175.26391602 706.67572021]
[161.03761292 701.87957764]
[147.36952209 695.66876221]
[134.39991760 688.10699463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[32 165]
[33 164]
[34 163]
[35 162]
[36 161]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[45 151]
[46 150]
[53 149]
[54 148]
[56 147]
[57 146]
[58 145]
[60 143]
[61 142]
[63 138]
[64 137]
[65 136]
[70 127]
[71 126]
[72 125]
[73 124]
[75 122]
[76 121]
[77 120]
[78 119]
[80 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
