%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[17.46203804 643.07702637]
[21.96323204 657.55163574]
[21.23925209 672.69268799]
[15.37752533 686.67181396]
[5.08588123 697.80096436]
[-8.39291286 704.73626709]
[-23.43122673 706.64013672]
[-38.21311188 703.28283691]
[-50.95358276 695.06964111]
[-60.11416626 682.99243164]
[-64.58867645 668.50952148]
[-63.83679581 653.36981201]
[-57.94931793 639.40155029]
[-47.63718033 628.29138184]
[-34.14562988 621.38092041]
[-19.10383224 619.50476074]
[-15.78157234 604.87725830]
[-20.50782204 590.75244141]
[-9.90616894 579.00866699]
[-6.58390903 564.38122559]
[-3.26164961 549.75378418]
[0.06060985 535.12628174]
[3.38286948 520.49884033]
[6.70512867 505.87136841]
[4.96308231 501.42453003]
[5.99601412 495.83615112]
[10.35020256 490.86096191]
[14.10650253 476.33889771]
[17.86280441 461.81683350]
[21.61910439 447.29476929]
[17.31550026 433.03546143]
[28.26210785 421.61257935]
[23.95850372 407.35324097]
[34.90511322 395.93035889]
[38.55319977 381.38073730]
[42.09287262 366.80438232]
[45.30614471 352.15258789]
[48.19141769 337.43267822]
[51.07669067 322.71279907]
[53.96196365 307.99291992]
[56.84723663 293.27301025]
[48.23322296 283.69030762]
[46.68826294 270.70202637]
[52.99888611 259.02355957]
[65.05836487 253.02494812]
[68.16247559 238.34963989]
[71.26658630 223.67434692]
[69.45852661 219.25393677]
[70.40814209 213.65078735]
[74.68777466 208.61131287]
[78.22744751 194.03494263]
[81.76712036 179.45857239]
[85.30679321 164.88218689]
[88.84646606 150.30581665]
[90.96109009 135.45561218]
[91.63087463 120.47058105]
[92.30065918 105.48554230]
[89.72917938 100.91372681]
[89.90224457 95.22660828]
[93.22005463 90.06626892]
[94.33570862 75.10781860]
[95.45135498 60.14936447]
[96.34416962 45.17596054]
[97.01395416 30.19091988]
[97.68373871 15.20588112]
[90.57036591 1.07398474]
[98.86825562 -11.29510403]
[99.53804016 -26.28014374]
[100.20782471 -41.26518250]
[100.87760925 -56.25022125]
[98.13451385 -64.96304321]
[101.67056274 -71.45288849]
[94.76837921 -85.68912506]
[103.24950409 -97.93330383]
[104.14231873 -112.90670776]
[101.52925110 -121.65940094]
[105.16153717 -128.09588623]
[106.27718353 -143.05433655]
[99.58772278 -157.39175415]
[108.25020599 -169.50830078]
[109.36585236 -184.46676636]
[110.48149872 -199.42521667]
[103.79203796 -213.76263428]
[112.45452118 -225.87918091]
[102.41819000 -237.79176331]
[103.76270294 -252.94587708]
[115.18138885 -262.44058228]
[116.29703522 -277.39901733]
[117.41268158 -292.35748291]
[114.93021393 -301.14810181]
[118.65792847 -307.52978516]
[119.99616241 -322.46997070]
[117.56543732 -328.61840820]
[118.46903229 -334.22915649]
[121.60314941 -337.83282471]
[123.38562012 -352.72653198]
[125.16808319 -367.62026978]
[126.95054626 -382.51397705]
[128.73301697 -397.40768433]
[130.51548767 -412.30142212]
[116.77774048 -418.63619995]
[105.67131042 -428.90762329]
[98.28427887 -442.10940552]
[95.34036255 -456.94818115]
[97.12796783 -471.97015381]
[103.47196198 -485.70364380]
[113.75083923 -496.80319214]
[126.95756531 -504.18136597]
[141.79827881 -507.11532593]
[156.81906128 -505.31765747]
[170.54829407 -498.96447754]
[181.64096069 -488.67816162]
[189.01028442 -475.46649170]
[191.93431091 -460.62380981]
[190.12657166 -445.60424805]
[183.76417542 -431.87927246]
[173.47044373 -420.79348755]
[160.25382996 -413.43301392]
[145.40919495 -410.51895142]
[143.62673950 -395.62521362]
[141.84426880 -380.73150635]
[140.06179810 -365.83779907]
[138.27932739 -350.94406128]
[136.49687195 -336.05035400]
[134.93634033 -321.13174438]
[133.59811401 -306.19155884]
[132.37113953 -291.24182129]
[131.25549316 -276.28338623]
[130.13983154 -261.32492065]
[140.02372742 -250.24140930]
[139.10539246 -235.05552673]
[127.41297150 -224.76353455]
[134.18223572 -211.49603271]
[125.43995667 -198.30957031]
[124.32430267 -183.35110474]
[123.20865631 -168.39265442]
[129.97792053 -155.12516785]
[121.23563385 -141.93869019]
[120.11998749 -126.98023224]
[119.11573029 -112.01389313]
[118.22290802 -97.04048157]
[125.18895721 -83.87524414]
[116.64396667 -70.56007385]
[115.86264801 -55.58043671]
[115.19286346 -40.59539795]
[114.52307892 -25.61035728]
[113.85329437 -10.62531948]
[121.01457214 2.43474722]
[112.66877747 15.87566662]
[111.99899292 30.86070442]
[111.32920837 45.84574509]
[113.83381653 49.91219330]
[113.81049347 55.59519196]
[110.40980530 61.26501465]
[109.29415894 76.22346497]
[108.17851257 91.18192291]
[107.28569794 106.15532684]
[106.61591339 121.14036560]
[105.94612885 136.12539673]
[114.36130524 123.70829010]
[127.05624390 115.71838379]
[141.89161682 113.50212860]
[156.36740112 117.43299103]
[168.04417419 126.84856415]
[174.95419312 140.16215515]
[175.93299866 155.13018799]
[170.81564331 169.23028564]
[160.46450806 180.08633423]
[146.62391663 185.86889648]
[131.62626648 185.60351562]
[117.99891663 179.33491516]
[108.03832245 168.11944580]
[103.42283630 153.84548950]
[99.88316345 168.42185974]
[96.34349060 182.99824524]
[92.80381775 197.57461548]
[89.26414490 212.15098572]
[85.94188690 226.77844238]
[82.83777618 241.45375061]
[79.73366547 256.12905884]
[89.54270172 270.61361694]
[85.91264343 287.38076782]
[71.56713104 296.15829468]
[68.68185425 310.87817383]
[65.79658508 325.59808350]
[62.91130829 340.31796265]
[60.02603531 355.03784180]
[61.71937180 359.97543335]
[61.38304520 364.60577393]
[59.47396088 368.20724487]
[56.66924667 370.34405518]
[53.12957382 384.92041016]
[54.14552307 393.99816895]
[49.42716980 399.68667603]
[53.46210098 414.98471069]
[42.78416824 425.36886597]
[46.81909561 440.66690063]
[36.14116287 451.05108643]
[32.38486099 465.57315063]
[28.62856293 480.09518433]
[24.87226105 494.61724854]
[21.33258820 509.19363403]
[18.01033020 523.82110596]
[14.68807030 538.44854736]
[11.36581039 553.07598877]
[8.04355145 567.70349121]
[4.72129154 582.33093262]
[9.20991135 597.50207520]
[-1.15411210 608.19952393]
[-4.47637177 622.82702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 210]
[17 209]
[19 207]
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[27 201]
[28 200]
[29 199]
[30 198]
[32 196]
[34 194]
[35 192]
[36 191]
[37 187]
[38 186]
[39 185]
[40 184]
[41 183]
[45 180]
[46 179]
[47 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 159]
[56 158]
[57 157]
[60 156]
[61 155]
[62 154]
[63 151]
[64 150]
[65 149]
[67 147]
[68 146]
[69 145]
[70 144]
[72 143]
[74 141]
[75 140]
[77 139]
[78 138]
[80 136]
[81 135]
[82 134]
[84 132]
[87 129]
[88 128]
[89 127]
[91 126]
[92 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
