%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[28.08107758 499.53466797]
[20.94460106 512.74090576]
[12.60281563 525.22088623]
[3.12903237 536.86480713]
[-7.39349270 547.57049561]
[-18.87228394 557.24371338]
[-31.20646477 565.79956055]
[-44.28763962 573.16284180]
[-58.00084305 579.26873779]
[-72.22557068 584.06372070]
[-86.83679962 587.50555420]
[-101.70613098 589.56408691]
[-116.70288849 590.22113037]
[-131.69528198 589.47094727]
[-146.55154419 587.32019043]
[-161.14111328 583.78765869]
[-175.33580017 578.90441895]
[-189.01081848 572.71343994]
[-202.04602051 565.26910400]
[-214.32682800 556.63684082]
[-225.74533081 546.89251709]
[-236.20117188 536.12170410]
[-245.60246277 524.41912842]
[-253.86659241 511.88763428]
[-260.92092896 498.63732910]
[-266.70346069 484.78466797]
[-271.16339111 470.45135498]
[-274.26153564 455.76339722]
[-275.97061157 440.84985352]
[-276.27566528 425.84182739]
[-275.17398071 410.87115479]
[-272.67523193 396.06942749]
[-268.80142212 381.56674194]
[-263.58654785 367.49053955]
[-257.07644653 353.96453857]
[-249.32835388 341.10757446]
[-240.41035461 329.03265381]
[-230.40080261 317.84588623]
[-219.38769531 307.64559937]
[-207.46778870 298.52145386]
[-194.74584961 290.55358887]
[-181.33367920 283.81204224]
[-167.34915161 278.35610962]
[-152.91516113 274.23364258]
[-138.15856934 271.48095703]
[-123.20904541 270.12222290]
[-108.19797516 270.16934204]
[-93.25727844 271.62194824]
[-78.51825714 274.46725464]
[-64.11044312 278.68023682]
[-50.16045380 284.22390747]
[-36.79088211 291.04953003]
[-28.74971008 278.38699341]
[-20.70853806 265.72448730]
[-20.41730881 250.83271790]
[-6.48775339 243.33085632]
[1.55341947 230.66831970]
[9.59459209 218.00579834]
[7.26624441 206.13545227]
[13.86184692 195.52027893]
[26.30886650 192.13877869]
[34.53767395 179.59738159]
[42.76648331 167.05598450]
[42.41149521 163.54794312]
[43.73802185 159.69367981]
[46.89028168 156.28536987]
[51.65325165 154.14967346]
[60.43385696 141.98822021]
[69.21446228 129.82676697]
[77.99506378 117.66530609]
[86.77566528 105.50385284]
[88.38666534 91.61514282]
[101.06288147 85.71554565]
[109.84348297 73.55408478]
[118.62408447 61.39263153]
[127.40468597 49.23117828]
[136.18528748 37.06972122]
[121.18695068 36.84668732]
[111.88966370 25.07551575]
[115.14704895 10.43347263]
[128.55787659 3.71412802]
[142.23619080 9.87073326]
[146.09915161 24.36324310]
[155.75994873 12.88854408]
[165.42076111 1.41384351]
[174.55957031 -10.48078918]
[183.15812683 -22.77162743]
[191.75669861 -35.06246567]
[200.35525513 -47.35330200]
[208.95382690 -59.64414215]
[210.52473450 -75.38716125]
[224.16035461 -81.38043976]
[232.75891113 -93.67127991]
[231.28654480 -106.48513794]
[238.70135498 -116.54518890]
[250.58929443 -118.78198242]
[259.36990356 -130.94343567]
[268.15051270 -143.10488892]
[256.99810791 -153.15830994]
[246.99806213 -164.35859680]
[238.26762390 -176.57443237]
[230.90914917 -189.66259766]
[225.00892639 -203.46965027]
[220.63612366 -217.83369446]
[217.84199524 -232.58631897]
[216.65933228 -247.55458069]
[217.10195923 -262.56295776]
[219.16473389 -277.43548584]
[222.82342529 -291.99780273]
[228.03517151 -306.07916260]
[234.73886108 -319.51449585]
[242.85588074 -332.14624023]
[252.29107666 -343.82632446]
[262.93380737 -354.41781616]
[274.65933228 -363.79647827]
[287.33013916 -371.85241699]
[300.79766846 -378.49111938]
[314.90405273 -383.63482666]
[329.48385620 -387.22314453]
[344.36618042 -389.21405029]
[359.37652588 -389.58422852]
[374.33889771 -388.32928467]
[389.07785034 -385.46395874]
[403.42062378 -381.02182007]
[417.19900513 -375.05499268]
[430.25149536 -367.63339233]
[442.42501831 -358.84408569]
[453.57687378 -348.79006958]
[463.57632446 -337.58923340]
[472.30609131 -325.37292480]
[479.66387939 -312.28436279]
[485.56335449 -298.47698975]
[489.93539429 -284.11270142]
[492.72869873 -269.35992432]
[493.91058350 -254.39161682]
[493.46713257 -239.38327026]
[491.40356445 -224.51084900]
[487.74407959 -209.94873047]
[482.53158569 -195.86763000]
[475.82717896 -182.43267822]
[467.70947266 -169.80136108]
[458.27365112 -158.12178040]
[447.63034058 -147.53088379]
[435.90432739 -138.15283203]
[423.23309326 -130.09759521]
[409.76519775 -123.45959473]
[395.65853882 -118.31667328]
[381.07852173 -114.72911835]
[366.19610596 -112.73900604]
[351.18572998 -112.36965179]
[336.22344971 -113.62540436]
[321.48464966 -116.49153137]
[307.14212036 -120.93442535]
[293.36404419 -126.90200043]
[280.31195068 -134.32429504]
[271.53134155 -122.16283417]
[262.75076294 -110.00138092]
[261.91171265 -92.47245789]
[245.04975891 -85.07271576]
[236.45118713 -72.78187561]
[235.49530029 -57.91797638]
[221.24465942 -51.04557800]
[212.64610291 -38.75473785]
[204.04753113 -26.46390152]
[195.44897461 -14.17306328]
[186.85040283 -1.88222539]
[201.77140808 -3.41966271]
[213.49578857 5.93656015]
[215.30729675 20.82677269]
[206.16819763 32.72118759]
[191.31381226 34.80614090]
[179.25338745 25.88727951]
[176.89546204 11.07465363]
[167.23464966 22.54935455]
[157.57383728 34.02405548]
[148.34674072 45.85032272]
[139.56614685 58.01177979]
[130.78553772 70.17323303]
[122.00493622 82.33469391]
[113.22433472 94.49614716]
[111.61333466 108.38485718]
[98.93711853 114.28445435]
[90.15651703 126.44591522]
[81.37591553 138.60736084]
[72.59531403 150.76882935]
[63.81470871 162.93028259]
[55.30788040 175.28479004]
[47.07907486 187.82618713]
[38.85026550 200.36758423]
[38.22677612 218.77119446]
[22.25711823 226.04698181]
[14.21594429 238.70950317]
[6.17477131 251.37202454]
[5.30838394 267.16949463]
[-8.04601288 273.76565552]
[-16.08718681 286.42819214]
[-24.12835884 299.09069824]
[-12.26534271 308.28869629]
[-1.31577802 318.55718994]
[8.62410736 329.80587769]
[17.46695900 341.93594360]
[25.13506508 354.84075928]
[31.56103516 368.40695190]
[36.68839645 382.51525879]
[40.47209167 397.04174805]
[42.87886429 411.85867310]
[43.88756561 426.83590698]
[43.48932648 441.84176636]
[41.68765640 456.74438477]
[38.49837875 471.41284180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 197]
[53 196]
[54 195]
[56 193]
[57 192]
[58 191]
[61 189]
[62 188]
[63 187]
[67 186]
[68 185]
[69 184]
[70 183]
[71 182]
[73 180]
[74 179]
[75 178]
[76 177]
[77 176]
[83 175]
[84 174]
[85 173]
[86 166]
[87 165]
[88 164]
[89 163]
[90 162]
[92 160]
[93 159]
[96 157]
[97 156]
[98 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
