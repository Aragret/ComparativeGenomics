%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[118.46610260 432.09042358]
[119.14096069 417.09069824]
[121.43364716 402.25186157]
[125.31727600 387.74792480]
[130.74632263 373.74890137]
[137.65711975 360.41894531]
[145.96865845 347.91430664]
[155.58349609 336.38165283]
[166.38887024 325.95614624]
[178.25813293 316.76007080]
[170.40637207 303.97921753]
[162.55461121 291.19836426]
[154.70286560 278.41754150]
[146.85110474 265.63668823]
[147.69552612 280.61291504]
[143.69487000 295.06954956]
[135.27131653 307.48098755]
[123.31385040 316.53741455]
[109.08435059 321.28308105]
[94.08449554 321.21716309]
[79.89725494 316.34661865]
[68.01984406 307.18542480]
[59.70571518 294.70043945]
[55.83227921 280.20916748]
[56.80830383 265.24096680]
[62.53078842 251.37542725]
[72.39582825 240.07582092]
[85.36234283 232.53463745]
[100.06194305 229.54769897]
[114.94334412 231.43023682]
[128.43608093 237.98356628]
[139.11633301 248.51626587]
[134.71533203 234.17642212]
[130.31433105 219.83656311]
[125.91333771 205.49671936]
[110.73249817 198.25926208]
[105.37776947 181.96073914]
[113.62667847 166.53430176]
[109.01266479 152.26156616]
[104.39865875 137.98884583]
[99.78464508 123.71610260]
[95.17063904 109.44337463]
[89.92391968 95.39089966]
[84.05496216 81.58672333]
[78.18599701 67.78254700]
[72.31703949 53.97837067]
[66.44807434 40.17419434]
[60.57911682 26.37001610]
[48.05913544 16.69734192]
[50.19987869 1.95738053]
[44.33092117 -11.84679604]
[31.81093788 -21.51947021]
[33.95168304 -36.25942993]
[28.08272362 -50.06361008]
[22.21376228 -63.86778641]
[7.95857430 -59.17138672]
[-6.63960600 -55.68431473]
[-21.47838020 -53.43102646]
[-36.45366287 -52.42732620]
[-51.46041489 -52.68025589]
[-66.39337158 -54.18804169]
[-81.14778137 -56.94010544]
[-95.62016296 -60.91714478]
[-109.70898438 -66.09126282]
[-123.31543732 -72.42616272]
[-136.34407043 -79.87741852]
[-148.70350647 -88.39275360]
[-160.30703735 -97.91244507]
[-171.07328796 -108.36971283]
[-180.92672729 -119.69120789]
[-189.79824829 -131.79751587]
[-197.62561035 -144.60372925]
[-204.35391235 -158.02000427]
[-209.93595886 -171.95223999]
[-214.33261108 -186.30271912]
[-217.51301575 -200.97076416]
[-219.45486450 -215.85348511]
[-220.14453125 -230.84652710]
[-219.57719421 -245.84468079]
[-217.75682068 -260.74276733]
[-214.69618225 -275.43624878]
[-210.41674805 -289.82211304]
[-204.94854736 -303.79943848]
[-198.32991028 -317.27014160]
[-190.60726929 -330.13977051]
[-181.83480835 -342.31805420]
[-172.07406616 -353.71957397]
[-161.39347839 -364.26431274]
[-149.86799622 -373.87835693]
[-137.57844543 -382.49423218]
[-124.61102295 -390.05151367]
[-111.05670166 -396.49719238]
[-97.01055145 -401.78607178]
[-82.57109833 -405.88104248]
[-67.83963013 -408.75338745]
[-52.91947174 -410.38293457]
[-37.91528320 -410.75830078]
[-22.93230820 -409.87680054]
[-8.07564640 -407.74462891]
[6.55049515 -404.37677002]
[20.84352112 -399.79681396]
[34.70317459 -394.03689575]
[48.03224182 -387.13745117]
[60.73722458 -379.14682007]
[72.72900391 -370.12109375]
[83.92346954 -360.12356567]
[94.24208832 -349.22436523]
[103.61249542 -337.49993896]
[111.96895599 -325.03253174]
[119.25285339 -311.90960693]
[125.41309357 -298.22320557]
[130.40647888 -284.06930542]
[134.19796753 -269.54721069]
[136.76097107 -254.75878906]
[138.07751465 -239.80775452]
[138.13836670 -224.79899597]
[136.94309998 -209.83778381]
[134.50007629 -195.02906799]
[130.82646179 -180.47671509]
[125.94800568 -166.28279114]
[119.89893341 -152.54687500]
[112.72167969 -139.36532593]
[104.46658325 -126.83057404]
[95.19155121 -115.03055573]
[84.96163940 -104.04804993]
[73.84860229 -93.96009064]
[61.93040085 -84.83742523]
[49.29062653 -76.74405670]
[36.01794052 -69.73674774]
[41.88690186 -55.93256760]
[47.75586319 -42.12839127]
[59.85605621 -33.44308472]
[58.13509750 -17.71575737]
[64.00405884 -3.91158032]
[76.10425568 4.77372646]
[74.38329315 20.50105476]
[80.25225067 34.30523300]
[86.12121582 48.10940933]
[91.99017334 61.91358566]
[97.85913849 75.71776581]
[103.72809601 89.52194214]
[110.32897186 76.05240631]
[124.47565460 71.06526947]
[138.06427002 77.41738892]
[143.31065369 91.46998596]
[137.20942688 105.17308807]
[123.25566101 110.67694855]
[109.44337463 104.82936096]
[114.05738068 119.10209656]
[118.67138672 133.37483215]
[123.28540039 147.64756775]
[127.89940643 161.92030334]
[140.51751709 166.63177490]
[148.00886536 177.59033203]
[147.82351685 190.66885376]
[140.25318909 201.09571838]
[144.65417480 215.43557739]
[149.05517578 229.77542114]
[153.45617676 244.11526489]
[159.63194275 257.78494263]
[167.48370361 270.56576538]
[175.33546448 283.34661865]
[183.18721008 296.12747192]
[191.03897095 308.90829468]
[204.60694885 302.47735596]
[218.79069519 297.55105591]
[233.42395020 294.18722534]
[248.33511353 292.42526245]
[263.34936523 292.28582764]
[278.29067993 293.77056885]
[292.98385620 296.86209106]
[307.25665283 301.52410889]
[320.94171143 307.70199585]
[333.87860107 315.32330322]
[345.91561890 324.29867554]
[356.91165161 334.52288818]
[366.73776245 345.87606812]
[375.27877808 358.22509766]
[382.43450928 371.42520142]
[388.12109375 385.32159424]
[392.27188110 399.75137329]
[394.83813477 414.54534912]
[395.78982544 429.53005981]
[395.11578369 444.52981567]
[392.82388306 459.36877441]
[388.94104004 473.87292480]
[383.51275635 487.87225342]
[376.60266113 501.20257568]
[368.29177856 513.70764160]
[358.67758179 525.24084473]
[347.87277222 535.66693115]
[336.00399780 544.86364746]
[323.21047974 552.72320557]
[309.64215088 559.15344238]
[295.45812988 564.07891846]
[280.82470703 567.44201660]
[265.91345215 569.20318604]
[250.89918518 569.34179688]
[235.95794678 567.85620117]
[221.26492310 564.76391602]
[206.99238586 560.10113525]
[193.30764771 553.92248535]
[180.37117004 546.30053711]
[168.33464050 537.32446289]
[157.33915710 527.09967041]
[147.51365662 515.74597168]
[138.97331238 503.39648438]
[131.81828308 490.19601440]
[126.13243866 476.29928589]
[121.98245239 461.86929321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[32 159]
[33 158]
[34 157]
[35 156]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[50 134]
[51 133]
[53 131]
[54 130]
[55 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
