%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[303.92868042 582.23657227]
[314.34341431 571.39776611]
[326.32556152 562.32165527]
[319.24844360 549.09613037]
[312.17135620 535.87060547]
[305.09423828 522.64508057]
[291.27929688 523.91613770]
[277.98138428 519.81280518]
[267.21795654 510.92303467]
[260.63507080 498.56356812]
[259.25576782 484.58489990]
[263.32113647 471.09426880]
[272.24902344 460.13803101]
[265.36962891 446.80859375]
[258.49020386 433.47915649]
[251.61079407 420.14971924]
[244.73138428 406.82031250]
[237.85197449 393.49087524]
[226.42735291 389.51535034]
[220.58691406 378.46667480]
[223.94381714 366.01300049]
[217.26361084 352.58264160]
[210.58341980 339.15225220]
[203.90322876 325.72189331]
[190.24620056 325.77554321]
[177.83885193 319.91159058]
[169.12684631 309.22280884]
[165.85455322 295.75912476]
[168.71595764 282.13458252]
[177.20845032 271.01971436]
[170.72895813 257.49136353]
[164.24946594 243.96301270]
[157.76997375 230.43467712]
[151.18994141 216.95494080]
[144.50975037 203.52456665]
[137.82954407 190.09419250]
[122.70348358 181.19648743]
[123.99799347 162.82788086]
[117.11858368 149.49845886]
[110.23916626 136.16902161]
[103.35975647 122.83959198]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[82.91921234 82.50029755]
[76.23901367 69.06992340]
[71.88800812 66.18621063]
[69.33364105 62.30954361]
[68.65330505 58.29056549]
[69.57552338 54.88735199]
[63.50168610 41.17208481]
[57.42785263 27.45681953]
[51.35401917 13.74155235]
[47.13611221 10.66643524]
[44.75740051 6.67957687]
[44.25719452 2.63422871]
[45.33045197 -0.72441006]
[39.87509537 -14.69720745]
[34.41973877 -28.67000580]
[28.86051369 -42.60180283]
[23.19772720 -56.49183273]
[19.67508316 -59.03052139]
[17.37486076 -62.23575211]
[16.35649490 -65.64138031]
[16.52192879 -68.80986023]
[17.63858032 -71.38108826]
[12.81258202 -85.58354950]
[7.98658466 -99.78600311]
[5.15193987 -85.05627441]
[-2.75042462 -72.30666351]
[-14.68081665 -63.21459198]
[-29.06958771 -58.97628403]
[-44.02364731 -60.14935684]
[-57.57553101 -66.57947540]
[-67.94226074 -77.42064667]
[-73.75990295 -91.24652863]
[-74.26306152 -106.23808289]
[-69.38552856 -120.42292023]
[-59.76902771 -131.93478394]
[-46.67877579 -139.25907898]
[-31.83702278 -141.43217468]
[-17.19645500 -138.16816711]
[-4.68329000 -129.89648438]
[4.05716181 -117.70326233]
[2.49663877 -132.62187195]
[0.93611580 -147.54048157]
[-8.19489861 -160.46081543]
[-1.82366335 -173.92396545]
[-3.38418627 -188.84257507]
[-4.94470930 -203.76118469]
[-6.50523233 -218.67977905]
[-8.06575489 -233.59838867]
[-22.89833260 -236.51147461]
[-36.21250153 -243.66859436]
[-46.82438278 -254.43331909]
[-53.79036713 -267.84848022]
[-56.49104691 -282.72119141]
[-54.68628311 -297.72900391]
[-48.53654861 -311.53741455]
[-38.58867645 -322.91857910]
[-25.72722244 -330.86053467]
[-11.09582138 -334.65704346]
[4.00451422 -333.97055054]
[18.23107147 -328.86209106]
[30.31883621 -319.78588867]
[39.19297409 -307.54901123]
[44.06439590 -293.23953247]
[44.49994659 -278.12988281]
[40.46089172 -263.56356812]
[32.30638504 -250.83583069]
[20.76151657 -241.07839966]
[6.85284948 -235.15892029]
[8.41337204 -220.24031067]
[9.97389507 -205.32170105]
[11.53441811 -190.40309143]
[13.09494114 -175.48449707]
[22.11433601 -163.63124084]
[15.85472012 -149.10099792]
[17.41524315 -134.18238831]
[18.97576714 -119.26378632]
[22.18904114 -104.61199951]
[27.01503754 -90.40954590]
[31.84103584 -76.20709229]
[37.08775330 -62.15461731]
[42.75054169 -48.26459122]
[48.18658066 -43.25746918]
[48.39253616 -34.12536240]
[53.84789276 -20.15256500]
[59.30325317 -6.17976713]
[65.06928253 7.66771841]
[71.14311981 21.38298607]
[77.21694946 35.09825134]
[83.29078674 48.81351852]
[89.66939545 62.38972473]
[96.34958649 75.82009888]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[116.68918610 115.96018219]
[123.56859589 129.28961182]
[130.44801331 142.61903381]
[137.32742310 155.94847107]
[149.35510254 160.60653687]
[154.81057739 171.85028076]
[151.25993347 183.41398621]
[157.94012451 196.84437561]
[164.62031555 210.27474976]
[171.24406433 216.56472778]
[171.29830933 223.95518494]
[177.77781677 237.48352051]
[184.25730896 251.01187134]
[190.73680115 264.54022217]
[207.23469543 265.64093018]
[220.84831238 274.85855103]
[227.91510010 289.59890747]
[226.59167480 305.79779053]
[217.33360291 319.04168701]
[224.01379395 332.47207642]
[230.69398499 345.90243530]
[237.37419128 359.33282471]
[252.95188904 369.15200806]
[251.18139648 386.61145020]
[258.06082153 399.94088745]
[264.94021606 413.27032471]
[271.81964111 426.59973145]
[278.69903564 439.92916870]
[285.57846069 453.25860596]
[301.83874512 452.67807007]
[316.67129517 459.22326660]
[327.12707520 471.53735352]
[331.15151978 487.12219238]
[327.98803711 502.84500122]
[318.31976318 515.56799316]
[325.39688110 528.79351807]
[332.47396851 542.01904297]
[339.55108643 555.24456787]
[353.74987793 550.31097412]
[368.54568481 547.65942383]
[383.57412720 547.35516357]
[398.46511841 549.40576172]
[412.85192871 553.76074219]
[426.38034058 560.31274414]
[438.71713257 568.90051270]
[449.55853271 579.31256104]
[458.63754272 591.29248047]
[465.73062134 604.54522705]
[470.66305542 618.74438477]
[473.31341553 633.54040527]
[473.61639404 648.56890869]
[471.56454468 663.45971680]
[467.20840454 677.84619141]
[460.65527344 691.37402344]
[452.06646729 703.71014404]
[441.65353394 714.55065918]
[429.67288208 723.62866211]
[416.41958618 730.72064209]
[402.21997070 735.65191650]
[387.42373657 738.30108643]
[372.39523315 738.60278320]
[357.50457764 736.54974365]
[343.11846924 732.19244385]
[329.59115601 725.63812256]
[317.25579834 717.04833984]
[306.41610718 706.63452148]
[297.33905029 694.65313721]
[290.24816895 681.39923096]
[285.31808472 667.19921875]
[282.67016602 652.40277100]
[282.36965942 637.37420654]
[284.42398071 622.48376465]
[288.78247070 608.09802246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 175]
[4 174]
[5 173]
[6 172]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[21 159]
[22 158]
[23 157]
[24 156]
[30 151]
[31 150]
[32 149]
[33 148]
[34 146]
[35 145]
[36 144]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[44 136]
[45 135]
[46 134]
[50 133]
[51 132]
[52 131]
[53 130]
[57 129]
[58 128]
[59 127]
[60 125]
[61 124]
[66 123]
[67 122]
[68 121]
[84 120]
[85 119]
[86 118]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
