%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[67.06841278 689.46215820]
[73.11475372 673.62304688]
[73.11475372 658.62304688]
[73.11475372 643.62304688]
[73.00308990 628.62347412]
[72.77976227 613.62512207]
[72.55643463 598.62677002]
[72.33310699 583.62847900]
[70.07131195 580.92352295]
[69.00730896 576.98870850]
[69.70488739 572.39886475]
[72.44976044 567.95892334]
[72.89636230 552.96557617]
[73.34297180 537.97222900]
[73.78957367 522.97888184]
[74.23618317 507.98553467]
[74.68279266 492.99218750]
[75.12939453 477.99884033]
[75.01773071 462.99926758]
[74.34794617 448.01422119]
[73.67816162 433.02917480]
[73.00836945 418.04412842]
[70.66705322 415.40774536]
[69.48636627 411.50634766]
[70.04697418 406.89776611]
[72.65843201 402.37808228]
[72.65843201 387.37808228]
[70.77390289 385.30282593]
[69.59786224 382.35604858]
[69.46637726 378.80386353]
[70.61306763 375.02899170]
[73.13163757 371.49191284]
[74.02445221 356.51852417]
[74.91726685 341.54510498]
[75.81008148 326.57171631]
[76.70289612 311.59829712]
[77.48422241 296.61865234]
[78.15400696 281.63363647]
[78.82379150 266.64859009]
[69.90917969 251.53248596]
[79.94793701 236.09536743]
[80.39453888 221.10200500]
[67.85330200 229.33106995]
[53.55337524 224.80204773]
[48.03613281 210.85356140]
[55.36867905 197.76792908]
[70.14573669 195.19139099]
[81.47354889 205.02174377]
[75.10231018 191.55859375]
[84.23332214 178.63825989]
[85.79384613 163.71965027]
[87.35437012 148.80104065]
[88.91489410 133.88243103]
[76.85568237 127.11530304]
[68.27874756 116.26841736]
[64.47457886 102.97380066]
[66.01553345 89.23174286]
[72.66976929 77.10987091]
[83.43609619 68.43203735]
[96.69461823 64.50389099]
[98.47708893 49.61017609]
[100.25955200 34.71645737]
[87.32727814 28.54734612]
[76.94799805 18.70062637]
[70.12735748 6.14861441]
[67.52057648 -7.87516356]
[69.36948395 -21.99719238]
[75.48018646 -34.83849335]
[85.24326324 -45.14927292]
[97.69458008 -51.93056870]
[111.61044312 -54.53100586]
[113.61445618 -69.39653778]
[115.61846924 -84.26206207]
[117.62248230 -99.12759399]
[119.62649536 -113.99311829]
[121.63050842 -128.85864258]
[115.80628967 -143.56881714]
[125.17459869 -155.14828491]
[127.17861176 -170.01380920]
[129.18263245 -184.87933350]
[123.35840607 -199.58950806]
[132.72671509 -211.16896057]
[126.90249634 -225.87913513]
[136.27081299 -237.45860291]
[138.27482605 -252.32412720]
[140.27883911 -267.18966675]
[142.06129456 -282.08337402]
[143.62182617 -297.00198364]
[145.18234253 -311.92059326]
[146.63175964 -326.85040283]
[147.85874939 -341.80010986]
[148.97439575 -356.75857544]
[150.09004211 -371.71704102]
[151.20568848 -386.67547607]
[142.82740784 -403.07321167]
[153.26625061 -417.17987061]
[153.82446289 -432.16949463]
[154.04779053 -447.16781616]
[154.27111816 -462.16616821]
[154.49444580 -477.16448975]
[141.01911926 -484.42221069]
[132.46977234 -497.11737061]
[130.81095886 -512.33270264]
[136.42387390 -526.57189941]
[148.01870728 -536.56280518]
[162.93104553 -540.00964355]
[177.73414612 -536.12036133]
[189.02636719 -525.78863525]
[194.21284485 -511.38867188]
[192.10174561 -496.22943115]
[183.17820740 -483.79446411]
[169.49278259 -476.94116211]
[169.26945496 -461.94284058]
[169.04612732 -446.94448853]
[168.82279968 -431.94613647]
[171.00305176 -429.17507935]
[171.94941711 -425.21029663]
[171.11550903 -420.64328003]
[168.23965454 -416.28704834]
[176.03169250 -407.03445435]
[175.41043091 -394.55255127]
[166.16413879 -385.55984497]
[165.04849243 -370.60137939]
[163.93284607 -355.64291382]
[162.81719971 -340.68447876]
[165.45449829 -333.78039551]
[161.57194519 -325.51214600]
[164.10617065 -318.56958008]
[160.10095215 -310.36004639]
[158.54043579 -295.44146729]
[156.97990417 -280.52285767]
[159.23803711 -276.31454468]
[158.87649536 -270.64300537]
[155.14436340 -265.18563843]
[153.14035034 -250.32011414]
[151.13633728 -235.45458984]
[157.10389709 -221.80769348]
[147.59223938 -209.16494751]
[153.55981445 -195.51806641]
[144.04815674 -182.87532043]
[142.04414368 -168.00979614]
[140.04013062 -153.14427185]
[146.00769043 -139.49737549]
[136.49603271 -126.85463715]
[134.49201965 -111.98910522]
[132.48800659 -97.12358093]
[130.48399353 -82.25804901]
[128.47998047 -67.39251709]
[126.47596741 -52.52699280]
[140.50996399 -45.39004517]
[151.27003479 -33.85939026]
[157.44175720 -19.31662750]
[158.26202393 -3.51289439]
[153.61329651 11.64198017]
[144.04006958 24.31027985]
[130.68515015 32.94924164]
[115.15326691 36.49892426]
[113.37080383 51.39263916]
[111.58834076 66.28635406]
[125.11066437 74.69478607]
[133.62319946 88.15181732]
[135.42762756 103.97265625]
[130.16395569 119.00092316]
[118.88231659 130.23834229]
[103.83349609 135.44296265]
[102.27297211 150.36157227]
[100.71245575 165.28016663]
[99.15193176 180.19877625]
[105.41154480 194.72901917]
[96.39215088 206.58227539]
[95.38788605 221.54861450]
[94.94128418 236.54196167]
[103.20183563 246.44783020]
[102.52118683 258.92663574]
[93.80883026 267.31838989]
[93.13904572 282.30340576]
[92.46926117 297.28845215]
[95.21235657 306.00128174]
[91.67630768 312.49111938]
[90.78348541 327.46453857]
[89.89067078 342.43792725]
[88.99785614 357.41134644]
[88.10504150 372.38473511]
[87.65843201 387.37808228]
[87.65843201 402.37808228]
[87.99340820 417.37435913]
[88.66320038 432.35940552]
[89.33298492 447.34442139]
[90.00276947 462.32946777]
[101.89721680 453.19042969]
[116.49439240 456.64334106]
[123.03379059 470.14282227]
[116.69481659 483.73757935]
[102.15032959 487.40606689]
[90.12274170 478.44543457]
[89.67613983 493.43878174]
[89.22953033 508.43215942]
[88.78292847 523.42547607]
[88.33631897 538.41882324]
[87.88971710 553.41217041]
[87.44310760 568.40551758]
[87.33144379 583.40515137]
[87.55477142 598.40344238]
[87.77809906 613.40179443]
[88.00142670 628.40014648]
[91.25825500 636.93426514]
[88.11475372 643.62304688]
[88.11475372 658.62304688]
[88.11475372 673.62304688]
[94.16109467 689.46215820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 205]
[6 204]
[7 203]
[8 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 189]
[20 188]
[21 187]
[22 186]
[26 185]
[27 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[37 177]
[38 176]
[39 175]
[41 172]
[42 171]
[48 170]
[50 168]
[51 167]
[52 166]
[53 165]
[60 159]
[61 158]
[62 157]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[78 142]
[79 141]
[80 140]
[82 138]
[84 136]
[85 135]
[86 134]
[87 131]
[88 130]
[89 129]
[90 127]
[91 125]
[92 124]
[93 123]
[94 122]
[96 119]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
