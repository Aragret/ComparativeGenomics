%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[79.66085052 474.63439941]
[70.65459442 462.61065674]
[63.33135605 449.49374390]
[57.82183456 435.51773071]
[54.22435379 420.93206787]
[52.60311508 405.99703979]
[52.98705292 390.97918701]
[55.36931229 376.14651489]
[59.70737839 361.76370239]
[65.92383575 348.08749390]
[73.90774536 335.36190796]
[83.51662445 323.81405640]
[94.57898712 313.65002441]
[106.89741516 305.05120850]
[120.25207520 298.17105103]
[134.40463257 293.13235474]
[131.30052185 278.45703125]
[128.19641113 263.78173828]
[125.09230804 249.10643005]
[121.98819733 234.43113708]
[111.78459167 223.58052063]
[116.49858856 208.47790527]
[113.39447784 193.80261230]
[100.97853088 181.40054321]
[106.83166504 163.94137573]
[103.50939941 149.31391907]
[90.80860138 141.61813354]
[87.23097992 126.83113098]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.01129150 75.29619598]
[81.39728546 61.02346039]
[76.78327942 46.75072479]
[72.16926575 32.47799301]
[67.55525970 18.20525932]
[62.94124603 3.93252540]
[58.29864883 -0.77468467]
[56.93492126 -6.29168320]
[58.40920258 -10.83432007]
[54.22219086 -25.23810196]
[49.29059601 -39.40423584]
[43.62781143 -53.29426193]
[37.96502304 -67.18428802]
[32.30223846 -81.07431793]
[26.63945007 -94.96434784]
[12.39691257 -90.24000549]
[-2.12937164 -86.47751617]
[-16.87452507 -83.69367981]
[-31.77268982 -81.90093231]
[-46.75732803 -81.10727692]
[-61.76151276 -81.31626892]
[-76.71823120 -82.52696228]
[-91.56069183 -84.73395538]
[-106.22258759 -87.92739105]
[-120.63844299 -92.09300232]
[-134.74386597 -97.21219635]
[-148.47587585 -103.26209259]
[-161.77313232 -110.21568298]
[-174.57623291 -118.04190826]
[-186.82800293 -126.70581055]
[-198.47373962 -136.16870117]
[-209.46141052 -146.38830566]
[-219.74194336 -157.31898499]
[-229.26943970 -168.91192627]
[-238.00131226 -181.11535645]
[-245.89860535 -193.87474060]
[-252.92601013 -207.13313293]
[-259.05215454 -220.83128357]
[-264.24969482 -234.90805054]
[-268.49539185 -249.30052185]
[-271.77029419 -263.94442749]
[-274.05975342 -278.77438354]
[-275.35357666 -293.72415161]
[-275.64599609 -308.72692871]
[-274.93566895 -323.71575928]
[-273.22576904 -338.62365723]
[-270.52395630 -353.38406372]
[-266.84228516 -367.93103027]
[-262.19720459 -382.19961548]
[-256.60943604 -396.12606812]
[-250.10397339 -409.64822388]
[-242.70985413 -422.70565796]
[-234.46011353 -435.24002075]
[-225.39157104 -447.19540405]
[-215.54475403 -458.51837158]
[-204.96363831 -469.15835571]
[-193.69546509 -479.06781006]
[-181.79058838 -488.20254517]
[-169.30215454 -496.52166748]
[-156.28593445 -503.98812866]
[-142.80009460 -510.56848145]
[-128.90484619 -516.23339844]
[-114.66224670 -520.95758057]
[-100.13591766 -524.71984863]
[-85.39073181 -527.50354004]
[-70.49253845 -529.29608154]
[-55.50789261 -530.08953857]
[-40.50371170 -529.88037109]
[-25.54700470 -528.66949463]
[-10.70457840 -526.46228027]
[3.95727873 -523.26867676]
[18.37308311 -519.10290527]
[32.47845078 -513.98352051]
[46.21037674 -507.93344116]
[59.50754166 -500.97970581]
[72.31054688 -493.15332031]
[84.56221771 -484.48925781]
[96.20782471 -475.02621460]
[107.19536591 -464.80645752]
[117.47576904 -453.87567139]
[127.00310516 -442.28259277]
[135.73483276 -430.07907104]
[143.63195801 -417.31958008]
[150.65919495 -404.06109619]
[156.78518677 -390.36285400]
[161.98252869 -376.28604126]
[166.22804260 -361.89352417]
[169.50276184 -347.24957275]
[171.79205322 -332.41958618]
[173.08569336 -317.46978760]
[173.37789917 -302.46701050]
[172.66738892 -287.47821045]
[170.95730591 -272.57031250]
[168.25531006 -257.80993652]
[164.57345581 -243.26301575]
[159.92819214 -228.99449158]
[154.34025574 -215.06809998]
[147.83462524 -201.54605103]
[140.44033813 -188.48870850]
[132.19042969 -175.95443726]
[123.12174988 -163.99917603]
[113.27479553 -152.67633057]
[102.69353485 -142.03648376]
[91.42524719 -132.12715149]
[79.52024078 -122.99259186]
[67.03170776 -114.67359924]
[54.01540375 -107.20732880]
[40.52947617 -100.62712860]
[46.19226456 -86.73710632]
[51.85504913 -72.84707642]
[57.51783752 -58.95705032]
[63.18062210 -45.06702423]
[68.91715240 -58.92675781]
[82.16188812 -65.96784973]
[96.85951233 -62.97120667]
[106.29047394 -51.30685806]
[106.14305115 -36.30758286]
[96.48465729 -24.83084679]
[81.73097992 -22.12366295]
[68.62596893 -29.42511368]
[72.81298065 -15.02133083]
[77.21398163 -0.68148381]
[81.82798767 13.59124947]
[86.44200134 27.86398315]
[91.05600739 42.13671494]
[95.67002106 56.40945053]
[100.28402710 70.68218231]
[108.06027222 57.85525894]
[122.59547424 54.15011597]
[135.56318665 61.68922424]
[139.53494263 76.15384674]
[132.23551941 89.25798035]
[117.84636688 93.49499512]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[123.10639191 118.68293762]
[126.26726532 133.56459045]
[118.13686371 145.99166870]
[121.45912170 160.61912537]
[131.93710327 168.14074707]
[134.40307617 180.39239502]
[128.06977844 190.69850159]
[131.17388916 205.37380981]
[141.59951782 217.27409363]
[136.66349792 231.32702637]
[139.76760864 246.00231934]
[142.87171936 260.67761230]
[145.97583008 275.35293579]
[149.07994080 290.02822876]
[164.06062317 288.90469360]
[179.05740356 289.78796387]
[193.80262756 292.66229248]
[208.03315735 297.47640991]
[221.49502563 304.14434814]
[233.94799805 312.54711914]
[245.16983032 322.53482056]
[254.96026611 333.92916870]
[263.14456177 346.52679443]
[269.57669067 360.10293579]
[274.14181519 374.41528320]
[276.75851440 389.20837402]
[277.38009644 404.21829224]
[275.99539185 419.17709351]
[272.62921143 433.81787109]
[267.34155273 447.87930298]
[260.22683716 461.11050415]
[251.41197205 473.27526855]
[241.05432129 484.15655518]
[229.33871460 493.56018066]
[216.47422791 501.31829834]
[202.69044495 507.29244995]
[188.23333740 511.37606812]
[173.36093140 513.49621582]
[158.33863831 513.61511230]
[143.43455505 511.73056030]
[128.91464233 507.87628174]
[115.03803253 502.12100220]
[102.05237579 494.56744385]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[22 175]
[23 174]
[25 171]
[26 170]
[29 167]
[31 165]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[40 152]
[41 151]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
