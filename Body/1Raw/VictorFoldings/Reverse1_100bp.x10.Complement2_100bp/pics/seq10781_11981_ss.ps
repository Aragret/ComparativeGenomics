%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[155.14111328 423.82962036]
[157.87443542 409.05657959]
[162.59394836 394.79336548]
[169.21176147 381.30563354]
[177.60455322 368.84472656]
[187.61601257 357.64273071]
[199.05958557 347.90835571]
[211.72212219 339.82293701]
[205.44476318 326.19961548]
[199.16740417 312.57629395]
[192.89004517 298.95297241]
[186.61268616 285.32965088]
[179.93247986 271.89929199]
[172.85537720 258.67376709]
[165.77827454 245.44822693]
[152.95146179 237.87707520]
[153.26243591 222.05892944]
[146.18533325 208.83340454]
[139.10823059 195.60787964]
[132.03112793 182.38235474]
[124.95401764 169.15681458]
[117.87691498 155.93128967]
[110.79980469 142.70576477]
[105.42694855 156.71049500]
[91.78160858 162.93984985]
[77.68047333 157.82536316]
[71.20130157 144.29687500]
[76.05566406 130.10408020]
[89.46275330 123.37728119]
[103.74166107 127.96927643]
[97.87270355 114.16510010]
[86.81798553 105.60444641]
[88.32312012 91.70386505]
[82.45416260 77.89968872]
[76.58519745 64.09551239]
[70.71623993 50.29133224]
[64.84727478 36.48715591]
[58.97831726 22.68297768]
[53.10935593 8.87880135]
[47.13779449 -4.88130140]
[41.06396103 -18.59656906]
[34.08550644 -31.87441444]
[26.23375130 -44.65525818]
[18.38199615 -57.43610001]
[10.53024101 -70.21694183]
[2.67848516 -82.99778748]
[-5.17327023 -95.77862549]
[-13.02502632 -108.55947113]
[-28.37289619 -109.88198853]
[-39.86479568 -119.87145996]
[-43.23115921 -134.53881836]
[-37.38524628 -148.21228027]
[-45.23700333 -160.99311829]
[-53.08876038 -173.77397156]
[-60.94051361 -186.55480957]
[-68.79226685 -199.33564758]
[-75.95076752 -205.00959778]
[-76.66414642 -212.36575317]
[-84.32474518 -225.26206970]
[-91.98534393 -238.15840149]
[-99.64593506 -251.05473328]
[-113.35972595 -244.93521118]
[-127.69123077 -240.44917297]
[-142.44664001 -237.65730286]
[-157.42639160 -236.59733582]
[-172.42790222 -237.28361511]
[-187.24830627 -239.70686340]
[-201.68717957 -243.83430481]
[-215.54922485 -249.61013794]
[-228.64698792 -256.95620728]
[-240.80334473 -265.77322388]
[-251.85389709 -275.94189453]
[-261.64916992 -287.32473755]
[-270.05673218 -299.76779175]
[-276.96286011 -313.10278320]
[-282.27413940 -327.14935303]
[-285.91879272 -341.71759033]
[-287.84747314 -356.61041260]
[-288.03411865 -371.62646484]
[-286.47622681 -386.56265259]
[-283.19485474 -401.21697998]
[-278.23434448 -415.39123535]
[-271.66183472 -428.89376831]
[-263.56616211 -441.54196167]
[-254.05685425 -453.16476440]
[-243.26248169 -463.60498047]
[-231.32905579 -472.72143555]
[-218.41792297 -480.39080811]
[-204.70373535 -486.50942993]
[-190.37193298 -490.99450684]
[-175.61633301 -493.78540039]
[-160.63650513 -494.84436035]
[-145.63504028 -494.15707397]
[-130.81480408 -491.73281860]
[-116.37621307 -487.60443115]
[-102.51454926 -481.82766724]
[-89.41726685 -474.48071289]
[-77.26149750 -465.66290283]
[-66.21163177 -455.49349976]
[-56.41710663 -444.11001587]
[-48.01038361 -431.66641235]
[-41.10514832 -418.33093262]
[-35.79479218 -404.28399658]
[-32.15112686 -389.71554565]
[-30.22343445 -374.82257080]
[-30.03778076 -359.80651855]
[-31.59667778 -344.87042236]
[-34.87904358 -330.21633911]
[-39.84048462 -316.04238892]
[-46.41390610 -302.54028320]
[-54.51041031 -289.89263916]
[-64.02050018 -278.27047729]
[-74.81556702 -267.83096313]
[-86.74961090 -258.71533203]
[-79.08901215 -245.81900024]
[-71.42841339 -232.92266846]
[-63.76781845 -220.02635193]
[-56.01142883 -207.18740845]
[-48.15967178 -194.40655518]
[-40.30791473 -181.62571716]
[-32.45616150 -168.84487915]
[-24.60440445 -156.06404114]
[-9.76508713 -155.09829712]
[1.79687726 -145.46580505]
[5.51333809 -130.69958496]
[-0.24418332 -116.41122437]
[7.60757208 -103.63038635]
[15.45932770 -90.84954071]
[23.31108284 -78.06869507]
[31.16283798 -65.28785706]
[39.01459503 -52.50701141]
[46.86634827 -39.72616959]
[48.65069199 -54.61966324]
[58.12148285 -66.25169373]
[72.34410095 -71.01794434]
[86.91150665 -67.44154358]
[97.30983734 -56.63068390]
[100.31705475 -41.93521881]
[95.00133514 -27.90870285]
[83.00981903 -18.89740372]
[68.05820465 -17.69357109]
[54.77922440 -24.67040253]
[60.85306168 -10.95513535]
[66.43576813 -6.11208677]
[66.91353607 3.00984073]
[72.78249359 16.81401825]
[78.65145111 30.61819458]
[84.52041626 44.42237091]
[90.38937378 58.22654724]
[96.25833893 72.03072357]
[102.12729645 85.83489990]
[113.18201447 94.39555359]
[111.67687988 108.29613495]
[117.54583740 122.10031128]
[124.02533722 135.62866211]
[131.10244751 148.85418701]
[138.17955017 162.07971191]
[145.25665283 175.30523682]
[152.33375549 188.53077698]
[159.41085815 201.75630188]
[166.48796082 214.98182678]
[179.82098389 223.49894714]
[179.00379944 238.37112427]
[186.08090210 251.59664917]
[193.15802002 264.82217407]
[196.92565918 266.98062134]
[199.54684448 269.92913818]
[200.91400146 273.21035767]
[201.07908630 276.37884521]
[200.23599243 279.05230713]
[206.51335144 292.67559814]
[212.79072571 306.29891968]
[219.06808472 319.92224121]
[225.34544373 333.54556274]
[239.71893311 329.17330933]
[254.55390930 326.79904175]
[269.57400513 326.46697998]
[284.49942017 328.18331909]
[299.05209351 331.91607666]
[312.96090698 337.59573364]
[325.96676636 345.11645508]
[337.82736206 354.33816528]
[348.32177734 365.08905029]
[357.25445557 377.16882324]
[364.45901489 390.35244751]
[369.80123901 404.39434814]
[373.18157959 419.03286743]
[374.53710938 433.99536133]
[373.84252930 449.00308228]
[371.11080933 463.77642822]
[366.39282227 478.04016113]
[359.77648926 491.52859497]
[351.38504028 503.99041748]
[341.37478638 515.19348145]
[329.93228149 524.92913818]
[317.27059937 533.01593018]
[303.62570190 539.30322266]
[289.25173950 543.67395020]
[274.41650391 546.04656982]
[259.39636230 546.37701416]
[244.47114563 544.65905762]
[229.91886902 540.92474365]
[216.01066589 535.24359131]
[203.00563049 527.72143555]
[191.14601135 518.49841309]
[180.65278625 507.74642944]
[171.72140503 495.66567993]
[164.51828003 482.48126221]
[159.17758179 468.43881226]
[155.79881287 453.79989624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 165]
[14 164]
[15 163]
[17 161]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[30 154]
[31 153]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 143]
[41 142]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[58 117]
[59 116]
[60 115]
[61 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
