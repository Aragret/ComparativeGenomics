%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[52.34038162 547.73962402]
[41.95149231 536.77386475]
[35.07405853 523.32482910]
[32.26560974 508.48266602]
[33.75381088 493.45062256]
[39.41802216 479.44729614]
[48.79906845 467.60784912]
[61.13647079 458.89202881]
[75.43009186 454.00643921]
[74.76030731 439.02139282]
[74.09052277 424.03637695]
[73.42073822 409.05133057]
[69.98170471 402.50955200]
[72.85421753 393.83853149]
[72.40760803 378.84518433]
[64.29479980 366.35391235]
[71.61779022 352.32949829]
[71.17118073 337.33615112]
[70.72457886 322.34280396]
[70.27796936 307.34945679]
[61.79314804 319.71908569]
[48.30318451 326.27810669]
[33.33432770 325.31204224]
[20.79939842 317.07336426]
[13.97499943 303.71569824]
[14.64501095 288.73065186]
[22.63429451 276.03533936]
[35.85446930 268.94824219]
[50.84981537 269.32189941]
[63.70058060 277.05868530]
[71.04738617 290.13534546]
[72.82985687 275.24163818]
[74.61231995 260.34790039]
[76.17284393 245.42930603]
[77.51107788 230.48912048]
[78.84931183 215.54893494]
[76.52877808 211.37471008]
[76.80583954 205.69841003]
[80.45630646 200.18609619]
[82.23876953 185.29237366]
[84.02123260 170.39866638]
[85.80370331 155.50494385]
[87.58616638 140.61122131]
[72.95320129 132.73905945]
[62.46107483 119.85457611]
[57.71611404 103.93037415]
[59.44476700 87.40444946]
[67.38237762 72.80687714]
[80.31371307 62.37254715]
[96.25899506 57.69894028]
[97.59722900 42.75875473]
[98.93546295 27.81856918]
[86.76043701 36.58034515]
[71.93431854 34.30300903]
[62.95018768 22.29112625]
[64.95455933 7.42564535]
[76.79924011 -1.77780926]
[91.69905090 -0.04708165]
[101.11844635 11.62547874]
[103.78424072 -3.13573813]
[106.45003510 -17.89695549]
[97.54753876 -28.00438118]
[96.11273193 -41.20103836]
[102.44668579 -52.64495087]
[114.04093170 -58.26659775]
[116.92620850 -72.98648834]
[119.81147766 -87.70638275]
[122.69675446 -102.42627716]
[114.14711761 -115.44708252]
[117.28288269 -130.33404541]
[129.74891663 -138.40457153]
[132.63420105 -153.12446594]
[135.51947021 -167.84436035]
[133.74159241 -174.21229553]
[135.22399902 -179.69859314]
[138.71600342 -182.95664978]
[142.03826904 -197.58410645]
[145.36053467 -212.21156311]
[134.87254333 -201.48765564]
[120.95972443 -195.88108826]
[105.96664429 -196.33665466]
[92.41989136 -202.77757263]
[82.60233307 -214.11845398]
[78.16840363 -228.44815063]
[79.86528778 -243.35185242]
[87.40704346 -256.31805420]
[99.52274323 -265.16168213]
[114.17068481 -268.39245605]
[128.88243103 -265.46591187]
[141.17878723 -256.87524414]
[148.98760986 -244.06813049]
[150.99285889 -229.20112610]
[157.06669617 -242.91639709]
[163.14051819 -256.63165283]
[169.21435547 -270.34692383]
[175.28819275 -284.06219482]
[181.15715027 -297.86636353]
[186.81994629 -311.75640869]
[192.48272705 -325.64642334]
[179.62138367 -333.42666626]
[168.13555908 -343.12319946]
[158.30810547 -354.49719238]
[150.38104248 -367.26855469]
[144.54956055 -381.12280273]
[140.95729065 -395.71878052]
[139.69267273 -410.69699097]
[140.78686523 -425.68862915]
[144.21290588 -440.32449341]
[149.88644409 -454.24417114]
[157.66775513 -467.10488892]
[167.36520386 -478.58990479]
[178.74002075 -488.41641235]
[191.51203918 -496.34243774]
[205.36677551 -502.17276001]
[219.96304321 -505.76385498]
[234.94136047 -507.02722168]
[249.93292236 -505.93179321]
[264.56851196 -502.50454712]
[278.48770142 -496.82986450]
[291.34777832 -489.04748535]
[302.83200073 -479.34909058]
[312.65756226 -467.97348022]
[320.58251953 -455.20077515]
[326.41171265 -441.34555054]
[330.00158691 -426.74902344]
[331.26373291 -411.77056885]
[330.16708374 -396.77911377]
[326.73861694 -382.14382935]
[321.06277466 -368.22506714]
[313.27935791 -355.36566162]
[303.57998657 -343.88223267]
[292.20355225 -334.05758667]
[279.43023682 -326.13369751]
[265.57452393 -320.30563354]
[250.97767639 -316.71697998]
[235.99914551 -315.45608521]
[221.00776672 -316.55395508]
[206.37275696 -319.98364258]
[200.70996094 -306.09359741]
[195.04718018 -292.20358276]
[196.04086304 -287.53222656]
[194.11058044 -282.18704224]
[189.00346375 -277.98837280]
[182.92962646 -264.27310181]
[176.85578918 -250.55783081]
[170.78195190 -236.84255981]
[164.70812988 -223.12728882]
[159.98799133 -208.88931274]
[156.66572571 -194.26184082]
[153.34347534 -179.63438416]
[150.23936462 -164.95907593]
[147.35408020 -150.23919678]
[144.46881104 -135.51930237]
[152.96560669 -123.33980560]
[150.24922180 -108.37064362]
[137.41664124 -99.54100037]
[134.53137207 -84.82110596]
[131.64610291 -70.10121918]
[128.76081848 -55.38132858]
[138.73110962 -41.83761597]
[135.76263428 -24.94078064]
[121.21125793 -15.23116016]
[118.54545593 -0.46994275]
[115.87966156 14.29127407]
[113.87564850 29.15680313]
[112.53741455 44.09698868]
[111.19918060 59.03717422]
[123.26528168 64.47393036]
[133.07179260 73.36108398]
[139.66625977 84.83548737]
[142.40823364 97.78270721]
[141.03140259 110.94528198]
[135.66946411 123.04482269]
[126.84322357 132.90617371]
[115.40988159 139.57159424]
[102.47988129 142.39369202]
[100.69741821 157.28741455]
[98.91495514 172.18112183]
[97.13248444 187.07484436]
[95.35002136 201.96856689]
[93.78949738 216.88716125]
[92.45126343 231.82734680]
[91.11302948 246.76753235]
[93.54374695 252.91595459]
[92.64015198 258.52670288]
[89.50603485 262.13037109]
[87.72357178 277.02407837]
[85.94110870 291.91781616]
[85.27132416 306.90283203]
[85.71792603 321.89620972]
[86.16453552 336.88955688]
[86.61113739 351.88290405]
[94.75588989 365.44659424]
[87.40096283 378.39859009]
[87.84756470 393.39193726]
[88.40577698 408.38153076]
[89.07556152 423.36657715]
[89.74534607 438.35162354]
[90.41513062 453.33666992]
[105.08763123 456.92755127]
[118.15341949 464.50790405]
[128.55331421 475.46322632]
[135.44425964 488.90536499]
[138.26762390 503.74468994]
[136.79452515 518.77819824]
[131.14437866 532.78723145]
[121.77523041 544.63610840]
[109.44659424 553.36425781]
[95.15788269 558.26422119]
[80.06743622 558.93872070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 199]
[10 198]
[11 197]
[12 196]
[14 195]
[15 194]
[17 192]
[18 191]
[19 190]
[20 189]
[31 188]
[32 187]
[33 186]
[34 183]
[35 182]
[36 181]
[39 180]
[40 179]
[41 178]
[42 177]
[43 176]
[50 167]
[51 166]
[52 165]
[59 164]
[60 163]
[61 162]
[65 159]
[66 158]
[67 157]
[68 156]
[71 153]
[72 152]
[73 151]
[76 150]
[77 149]
[78 148]
[92 147]
[93 146]
[94 145]
[95 144]
[96 143]
[97 140]
[98 139]
[99 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
