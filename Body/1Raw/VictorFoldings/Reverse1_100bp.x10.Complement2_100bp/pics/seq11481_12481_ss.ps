%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[5.62218904 618.29608154]
[12.34883308 604.48858643]
[25.08701515 595.90753174]
[23.97136497 580.94903564]
[22.85571671 565.99060059]
[21.74006844 551.03216553]
[20.62442017 536.07373047]
[14.62573814 549.82202148]
[4.71930885 561.08532715]
[-8.15065002 568.79016113]
[-22.75745583 572.20208740]
[-37.70888138 570.99591064]
[-51.57985306 565.28662109]
[-63.04827881 555.61834717]
[-71.02105713 542.91265869]
[-74.73827362 528.38049316]
[-73.84563446 513.40710449]
[-68.42821503 499.41955566]
[-59.00236893 487.75106812]
[-46.46650696 479.51382446]
[-32.01546860 475.49295044]
[-17.02663803 476.07165527]
[-2.92865038 481.19482422]
[8.93476200 490.37411499]
[17.43285370 502.73464966]
[21.75579834 517.09936523]
[24.64106941 502.37948608]
[27.52634239 487.65960693]
[30.41161537 472.93969727]
[33.29688644 458.21981812]
[28.15218353 444.24191284]
[38.39948273 432.18774414]
[41.28475571 417.46783447]
[26.82647133 410.21307373]
[14.97963619 399.17773438]
[6.70457745 385.24572754]
[2.67510009 369.53604126]
[3.22362351 353.31314087]
[8.31377411 337.88500977]
[17.54268265 324.49777222]
[30.17286301 314.23504639]
[45.19113922 307.93017578]
[61.38991547 306.09869385]
[63.83563995 291.29940796]
[66.28137207 276.50015259]
[68.50648499 261.66610718]
[70.51049805 246.80058289]
[68.28881073 239.75175476]
[72.65660858 231.72927856]
[74.88172150 216.89523315]
[77.10684204 202.06118774]
[79.33196259 187.22714233]
[70.29979706 175.43920898]
[72.34506226 160.36367798]
[84.77058411 150.96983337]
[86.99569702 136.13578796]
[89.22081757 121.30175018]
[91.44593048 106.46770477]
[91.44593048 91.46770477]
[89.22081757 76.63365936]
[79.52198792 64.13393402]
[85.28570557 50.39971161]
[83.06058502 35.56566620]
[80.83547211 20.73162270]
[78.49998474 5.91455460]
[76.05425262 -8.88471603]
[73.60852814 -23.68398666]
[59.32917404 -29.16553116]
[49.77385712 -40.98046494]
[47.43090820 -55.89277649]
[52.83063889 -69.88201904]
[64.42945099 -79.22723389]
[61.98372269 -94.02650452]
[59.53799820 -108.82577515]
[47.52682114 -122.78332520]
[54.34199142 -138.95491028]
[44.27529907 -151.16033936]
[49.62754440 -165.06007385]
[46.96174622 -179.82128906]
[36.83008194 -187.80328369]
[34.91362381 -200.15281677]
[41.70079803 -210.16584778]
[39.25506973 -224.96511841]
[36.80934143 -239.76438904]
[34.36361313 -254.56365967]
[31.91788673 -269.36294556]
[29.47216034 -284.16220093]
[27.02643204 -298.96148682]
[12.00189495 -300.27069092]
[-2.22475481 -305.27603149]
[-14.75921631 -313.66281128]
[-24.81356430 -324.90383911]
[-31.75577164 -338.29251099]
[-35.14944839 -352.98721313]
[-34.78126526 -368.06417847]
[-30.67436028 -382.57568359]
[-23.08690453 -395.60955811]
[-12.49584866 -406.34640503]
[0.43304443 -414.11138916]
[14.88705349 -418.41629028]
[29.95758820 -418.99060059]
[44.69729996 -415.79815674]
[58.17964172 -409.03967285]
[69.55709839 -399.13995361]
[78.11447144 -386.72131348]
[83.31385040 -372.56445312]
[84.82837677 -357.55920410]
[82.56286621 -342.64886475]
[76.65972137 -328.77069092]
[67.49001312 -316.79708862]
[55.63016891 -307.48071289]
[41.82570267 -301.40719604]
[44.27143097 -286.60794067]
[46.71715927 -271.80865479]
[49.16288376 -257.00939941]
[51.60861206 -242.21011353]
[54.05434036 -227.41084290]
[56.50006866 -212.61157227]
[68.34984589 -199.66748047]
[61.72296524 -182.48709106]
[64.38876343 -167.72587585]
[74.26477814 -156.57627869]
[69.10321045 -141.62071228]
[78.85860443 -134.46817017]
[81.20033264 -122.19217682]
[74.33726501 -111.27150726]
[76.78299713 -96.47223663]
[79.22872162 -81.67296600]
[93.21749878 -76.55635071]
[102.83093262 -65.04817963]
[105.41033936 -50.17494965]
[100.16432953 -35.91394806]
[88.40779877 -26.12971497]
[90.85352325 -11.33044338]
[93.29925537 3.46882701]
[97.49128723 9.55558586]
[95.66951752 18.50650597]
[97.89463043 33.34054947]
[100.11975098 48.17459106]
[109.65942383 59.61329269]
[104.05486298 74.40854645]
[106.27997589 89.24258423]
[111.05500793 75.02291107]
[119.59545898 62.69162750]
[131.22779846 53.22122192]
[145.03466797 47.35857773]
[159.92716980 45.56604004]
[174.73085022 47.98498535]
[188.27819824 54.42463684]
[199.50083923 64.37714386]
[207.51370239 77.05760193]
[211.68484497 91.46598816]
[211.68533325 106.46598816]
[207.51512146 120.87464142]
[199.50308228 133.55561829]
[188.28109741 143.50885010]
[174.73416138 149.94938660]
[159.93063354 152.36929321]
[145.03800964 150.57772827]
[131.23077393 144.71597290]
[119.59781647 135.24632263]
[111.05655670 122.91559601]
[106.27997589 108.69282532]
[104.05486298 123.52686310]
[101.82974243 138.36091614]
[99.60462189 153.19494629]
[108.72714233 165.82101440]
[106.25923920 180.83314514]
[94.16600037 189.45227051]
[91.94088745 204.28630066]
[89.71576691 219.12034607]
[87.49065399 233.95439148]
[85.37602997 248.80459595]
[83.37201691 263.67010498]
[85.52576447 269.92095947]
[84.37254333 275.48574829]
[81.08064270 278.94589233]
[78.63491058 293.74514771]
[76.18918610 308.54443359]
[88.87216949 314.19052124]
[99.82158661 322.70941162]
[108.40033722 333.59939575]
[114.11067963 346.22097778]
[116.62316895 359.83438110]
[115.79560089 373.64303589]
[111.68111420 386.83999634]
[104.52474213 398.65533447]
[94.74887848 408.40081787]
[82.92831421 415.51019287]
[69.75645447 419.57189941]
[56.00464630 420.35311890]
[53.11937332 435.07299805]
[58.05770493 450.10375977]
[48.01678085 461.10507202]
[45.13150787 475.82498169]
[42.24623489 490.54486084]
[39.36096191 505.26477051]
[36.47568893 519.98468018]
[35.58287430 534.95806885]
[36.69852066 549.91650391]
[37.81417084 564.87493896]
[38.92982101 579.83343506]
[40.04546738 594.79187012]
[53.91563797 601.38836670]
[62.61608505 614.04528809]
[63.80643082 629.35797119]
[57.16647720 643.20739746]
[44.48234177 651.86816406]
[29.16599083 653.01049805]
[15.33744526 646.32714844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[32 192]
[33 191]
[43 179]
[44 178]
[45 177]
[46 174]
[47 173]
[49 172]
[50 171]
[51 170]
[52 169]
[55 166]
[56 165]
[57 164]
[58 163]
[59 142]
[60 141]
[62 139]
[63 138]
[64 137]
[65 135]
[66 134]
[67 133]
[72 128]
[73 127]
[74 126]
[76 123]
[78 121]
[79 120]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
