%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[193.18283081 411.13793945]
[203.80787659 400.49761963]
[216.07839966 391.80609131]
[203.60244751 383.66976929]
[204.61943054 367.88128662]
[198.13993835 354.35293579]
[191.66044617 340.82458496]
[185.18095398 327.29623413]
[171.09107971 322.60461426]
[164.32723999 308.97723389]
[169.34379578 294.23031616]
[162.86428833 280.70196533]
[156.87144470 294.45281982]
[142.96156311 300.06665039]
[129.10285950 294.32763672]
[123.23423767 280.52331543]
[128.71749878 266.56143188]
[142.41159058 260.44000244]
[156.47120667 265.66500854]
[151.22448730 251.61253357]
[145.97776794 237.56007385]
[140.73104858 223.50759888]
[135.48432922 209.45512390]
[121.36602020 199.03207397]
[124.56447601 180.89781189]
[110.29254150 170.68611145]
[113.22065735 152.50624084]
[107.55786896 138.61621094]
[101.89508057 124.72618866]
[96.23229980 110.83615875]
[92.61010742 125.39225006]
[82.26651764 136.25549316]
[67.90530396 140.58625793]
[53.28045654 137.25250244]
[42.21488190 127.12566376]
[37.60108948 112.85285950]
[40.64511108 98.16497803]
[50.55125427 86.90139008]
[64.73007202 82.00637817]
[79.47525024 84.75947571]
[90.93193817 94.44031525]
[87.39226532 79.86393738]
[83.85259247 65.28756714]
[68.81143188 63.55878067]
[55.29464340 56.80093002]
[44.92499924 45.84690475]
[38.94002533 32.03205490]
[38.04435730 17.03141022]
[42.32683563 2.65661097]
[51.25209045 -9.36291122]
[63.72740555 -17.58798218]
[60.18773270 -32.16435623]
[56.64805984 -46.74073410]
[53.10839081 -61.31710815]
[49.56871796 -75.89348602]
[46.02904510 -90.46985626]
[39.74996948 -76.84733582]
[27.16034126 -68.69249725]
[12.16119766 -68.53221893]
[-0.59981513 -76.41616821]
[-7.16855907 -89.90139771]
[-5.50963688 -104.80938721]
[3.86291599 -116.52071381]
[18.04491234 -121.40650940]
[32.64190674 -117.95285034]
[43.13098145 -107.22966003]
[41.57046127 -122.14826965]
[40.00993729 -137.06687927]
[38.44941330 -151.98547363]
[36.88888931 -166.90408325]
[35.32836914 -181.82269287]
[25.81843758 -190.53613281]
[24.82580376 -202.99398804]
[32.33891296 -212.47448730]
[31.00067902 -227.41467285]
[29.66244507 -242.35485840]
[28.32421112 -257.29504395]
[26.87479210 -272.22485352]
[25.31426811 -287.14346313]
[23.75374603 -302.06207275]
[22.19322205 -316.98065186]
[20.63269997 -331.89926147]
[18.29721260 -346.71633911]
[15.19310284 -361.39163208]
[12.08899212 -376.06695557]
[-2.97398233 -376.30047607]
[-17.60720634 -379.88049316]
[-31.07668495 -386.62741089]
[-42.70679092 -396.20281982]
[-51.91416931 -408.12640381]
[-58.23697281 -421.80007935]
[-61.35806274 -436.53802490]
[-61.12088013 -451.60095215]
[-57.53732300 -466.23330688]
[-50.78713989 -479.70114136]
[-41.20891953 -491.32891846]
[-29.28310013 -500.53341675]
[-15.60787582 -506.85290527]
[-0.86919075 -509.97042847]
[14.19366932 -509.72958374]
[28.82515717 -506.14248657]
[42.29136276 -499.38903809]
[53.91682816 -489.80801392]
[63.11842728 -477.87994385]
[69.43460846 -464.20318604]
[72.54855347 -449.46374512]
[72.30406952 -434.40097046]
[68.71341705 -419.77032471]
[61.95671082 -406.30575562]
[52.37285614 -394.68261719]
[40.44257736 -385.48391724]
[26.76429558 -379.17105103]
[29.86840439 -364.49575806]
[32.97251511 -349.82043457]
[41.08087540 -362.44006348]
[55.36611176 -367.01519775]
[69.29720306 -361.45422363]
[76.50504303 -348.29946899]
[73.69430542 -333.56518555]
[62.15002060 -323.98760986]
[47.15008163 -323.94555664]
[35.55130386 -333.45977783]
[37.11182785 -318.54119873]
[38.67235184 -303.62258911]
[40.23287201 -288.70397949]
[41.79339600 -273.78536987]
[45.61570740 -267.45989990]
[43.26439667 -258.63327026]
[44.60263062 -243.69308472]
[45.94086456 -228.75289917]
[47.27909851 -213.81271362]
[58.13331985 -200.02313232]
[50.24697113 -183.38320923]
[51.80749512 -168.46459961]
[53.36801910 -153.54600525]
[54.92854309 -138.62739563]
[56.48906326 -123.70879364]
[58.04958725 -108.79018402]
[60.60541916 -94.00952911]
[64.14509583 -79.43315887]
[67.68476105 -64.85678101]
[71.22443390 -50.28040695]
[74.76410675 -35.70402908]
[78.30377960 -21.12765503]
[93.16194916 -19.54014397]
[106.60566711 -12.95262051]
[117.00388336 -2.14282370]
[123.08766937 11.59795284]
[124.10512543 26.61910057]
[119.91417694 41.10896683]
[111.00211334 53.31335449]
[98.42897034 61.74789047]
[101.96864319 76.32426453]
[105.50831604 90.90064240]
[110.12232208 105.17337799]
[115.78511047 119.06340027]
[121.44789886 132.95343018]
[127.11067963 146.84346008]
[138.67483521 152.55601501]
[143.10542297 164.24162292]
[138.53727722 175.44245911]
[150.01509094 181.32655334]
[154.27120972 193.07682800]
[149.53680420 204.20840454]
[154.78352356 218.26087952]
[160.03024292 232.31335449]
[165.27696228 246.36581421]
[170.52368164 260.41830444]
[176.39263916 274.22247314]
[182.87213135 287.75082397]
[197.50695801 293.08557129]
[203.88537598 306.89755249]
[198.70928955 320.81674194]
[205.18878174 334.34509277]
[211.66828918 347.87344360]
[218.14778137 361.40179443]
[231.08718872 370.50576782]
[229.60675049 385.32659912]
[244.07020569 381.21368408]
[259.02072144 379.60440063]
[274.02816772 380.54510498]
[288.66070557 384.00872803]
[302.49737549 389.89556885]
[315.14001465 398.03628540]
[326.22491455 408.19665527]
[335.43310547 420.08435059]
[342.49969482 433.35733032]
[347.22131348 447.63366699]
[349.46212769 462.50265503]
[349.15768433 477.53646851]
[346.31671143 492.30255127]
[341.02099609 506.37603760]
[333.42285156 519.35198975]
[323.74090576 530.85717773]
[312.25378418 540.56042480]
[299.29190063 548.18261719]
[285.22827148 553.50445557]
[270.46749878 556.37286377]
[255.43428040 556.70520020]
[240.56115723 554.49194336]
[226.27606201 549.79687500]
[212.99000549 542.75494385]
[201.08525085 533.56878662]
[190.90432739 522.50280762]
[182.74014282 509.87527466]
[176.82762146 496.04956055]
[173.33686829 481.42346191]
[172.36831665 466.41781616]
[173.94982910 451.46432495]
[178.03590393 436.99325562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[5 176]
[6 175]
[7 174]
[8 173]
[11 170]
[12 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[25 161]
[27 158]
[28 157]
[29 156]
[30 155]
[41 154]
[42 153]
[43 152]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[74 131]
[75 130]
[76 129]
[77 128]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
