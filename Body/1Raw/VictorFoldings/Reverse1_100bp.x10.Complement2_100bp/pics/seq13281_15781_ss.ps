%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[61.68125534 607.80694580]
[50.41270447 597.86706543]
[40.67350769 586.42468262]
[32.66193390 573.71264648]
[26.54109573 559.98980713]
[22.43560219 545.53558350]
[20.42903709 530.64416504]
[20.56224823 515.61871338]
[22.83252907 500.76522827]
[27.19365501 486.38604736]
[33.55684280 472.77389526]
[41.79254150 460.20590210]
[51.73308563 448.93798828]
[63.17609787 439.19949341]
[75.88861847 431.18869019]
[89.61182404 425.06869507]
[104.06634521 420.96411133]
[102.06232452 406.09857178]
[100.05831146 391.23306274]
[98.05429840 376.36752319]
[89.02979279 388.34912109]
[74.44384003 391.84909058]
[60.96494293 385.26736450]
[54.75547028 371.61297607]
[58.65430832 357.12854004]
[70.87896729 348.43612671]
[85.84049225 349.50982666]
[96.69950104 359.86038208]
[96.25289917 344.86703491]
[95.80628967 329.87368774]
[95.35968781 314.88034058]
[94.91307831 299.88699341]
[91.57182312 293.29473877]
[94.57312012 284.66744995]
[94.34979248 269.66909790]
[94.12646484 254.67077637]
[93.90312958 239.67243958]
[85.97720337 227.06176758]
[93.50817871 213.14793396]
[93.28485107 198.14959717]
[90.54264832 194.23942566]
[90.22766876 188.56512451]
[93.28485107 182.70294189]
[93.50817871 167.70460510]
[93.73150635 152.70626831]
[93.61984253 137.70668030]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.72236633 92.75363159]
[90.16184235 77.83502960]
[88.60131836 62.91642380]
[87.04080200 47.99781799]
[75.88168335 33.35009766]
[83.64732361 17.61282730]
[81.86486053 2.71910930]
[80.08238983 -12.17460823]
[78.29992676 -27.06832504]
[76.51746368 -41.96204376]
[74.73499298 -56.85575867]
[64.96865845 -61.15022659]
[57.91976547 -69.05087280]
[54.81019592 -79.08750916]
[56.13701248 -89.42929840]
[61.59432983 -98.21867371]
[70.14047241 -103.90501404]
[66.38145447 -112.23013306]
[69.12125397 -119.09419250]
[68.22843933 -134.06759644]
[67.33562469 -149.04100037]
[63.70097733 -157.42117310]
[66.54267120 -164.24366760]
[65.87288666 -179.22871399]
[65.20310211 -194.21374512]
[64.53331757 -209.19879150]
[63.86352921 -224.18382263]
[52.48272324 -234.81938171]
[52.01693344 -250.02587891]
[62.22644424 -260.81021118]
[61.55665970 -275.79522705]
[60.88687134 -290.78027344]
[49.59887314 -294.90692139]
[40.39004898 -302.57604980]
[34.32410812 -312.87136841]
[32.09144974 -324.57513428]
[33.93066788 -336.31216431]
[39.60327911 -346.71121216]
[48.42435074 -354.56542969]
[59.34513855 -358.97229004]
[59.34513855 -373.97229004]
[59.34513855 -388.97229004]
[59.34513855 -403.97229004]
[59.34513855 -418.97229004]
[44.65655518 -422.31790161]
[31.08093834 -428.84863281]
[19.29923820 -438.23690796]
[9.90242290 -450.01177979]
[3.36183000 -463.58264160]
[0.00553299 -478.26876831]
[0.00188278 -493.33355713]
[3.35106230 -508.02133179]
[9.88507843 -521.59539795]
[19.27618790 -533.37481689]
[31.05333519 -542.76873779]
[44.62578583 -549.30609131]
[59.31274796 -552.65881348]
[74.37753296 -552.65881348]
[89.06449890 -549.30609131]
[102.63694763 -542.76873779]
[114.41409302 -533.37481689]
[123.80519867 -521.59539795]
[130.33921814 -508.02133179]
[133.68840027 -493.33355713]
[133.68475342 -478.26876831]
[130.32844543 -463.58264160]
[123.78785706 -450.01177979]
[114.39103699 -438.23690796]
[102.60934448 -428.84863281]
[89.03372955 -422.31790161]
[74.34513855 -418.97229004]
[74.34513855 -403.97229004]
[74.34513855 -388.97229004]
[74.34513855 -373.97229004]
[74.34513855 -358.97229004]
[90.43814850 -350.64248657]
[100.12026215 -335.22433472]
[100.63777924 -316.94039917]
[91.76103973 -300.85018921]
[75.87191010 -291.45007324]
[76.54169464 -276.46502686]
[77.21147919 -261.47998047]
[88.34240723 -251.64952087]
[89.23513794 -236.46209717]
[78.84857178 -224.85360718]
[79.51835632 -209.86857605]
[80.18814087 -194.88352966]
[80.85792542 -179.89849854]
[81.52770996 -164.91345215]
[82.30902863 -149.93382263]
[83.20184326 -134.96041870]
[84.09466553 -119.98700714]
[85.09892273 -105.02066040]
[100.75370026 -93.42573547]
[102.86656189 -73.75241852]
[89.62871552 -58.63822556]
[91.41117859 -43.74450684]
[93.19364166 -28.85079193]
[94.97611237 -13.95707417]
[96.75857544 0.93664330]
[98.54104614 15.83036041]
[107.85341644 23.55086708]
[109.46031189 35.94448090]
[101.95940399 46.43729782]
[103.51992798 61.35589981]
[105.08045197 76.27450562]
[106.64097595 91.19310760]
[117.97037506 81.36230469]
[132.74719238 83.94024658]
[140.07849121 97.02657318]
[134.55993652 110.97452545]
[120.25958252 115.50220490]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[108.61318970 137.26007080]
[111.35806274 141.69998169]
[112.05564117 146.28982544]
[110.99163055 150.22465515]
[108.72984314 152.92959595]
[108.50651550 167.92793274]
[108.28318787 182.92626953]
[108.28318787 197.92626953]
[108.50651550 212.92460632]
[116.44842529 226.60804749]
[108.90147400 239.44911194]
[109.12480164 254.44744873]
[109.34812927 269.44577026]
[109.57145691 284.44412231]
[109.90643311 299.44036865]
[110.35303497 314.43371582]
[110.79964447 329.42706299]
[111.24624634 344.42044067]
[111.69285583 359.41378784]
[112.91983032 374.36352539]
[114.92384338 389.22903442]
[116.92785645 404.09457397]
[118.93186951 418.96008301]
[133.95730591 419.09051514]
[148.81123352 421.35803223]
[163.19123840 425.71649170]
[176.80456543 432.07714844]
[189.37406921 440.31051636]
[200.64385986 450.24896240]
[210.38447571 461.69018555]
[218.39761353 474.40121460]
[224.52015686 488.12329102]
[228.62744141 502.57702637]
[230.63584900 517.46820068]
[230.50448608 532.49365234]
[228.23605347 547.34741211]
[223.87670898 561.72717285]
[217.51519775 575.34008789]
[209.28105164 587.90911865]
[199.34190369 599.17828369]
[187.90010071 608.91815186]
[175.18856812 616.93054199]
[161.46612549 623.05218506]
[147.01211548 627.15863037]
[132.12081909 629.16607666]
[117.09539795 629.03381348]
[102.24175262 626.76446533]
[87.86228180 622.40423584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 185]
[18 184]
[19 183]
[20 182]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[34 176]
[35 175]
[36 174]
[37 173]
[39 171]
[40 170]
[43 169]
[44 168]
[45 167]
[46 163]
[47 162]
[48 161]
[49 155]
[50 154]
[51 153]
[52 152]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[65 141]
[67 140]
[68 139]
[69 138]
[71 137]
[72 136]
[73 135]
[74 134]
[75 133]
[78 130]
[79 129]
[80 128]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
