%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[163.32492065 631.75262451]
[158.49168396 617.53375244]
[155.37413025 602.84307861]
[154.01600647 587.88671875]
[154.43638611 572.87475586]
[156.62937927 558.01782227]
[160.56419373 543.52459717]
[166.18557739 529.59851074]
[173.41462708 516.43505859]
[182.14985657 504.21896362]
[192.26863098 493.12182617]
[203.62892151 483.29937744]
[216.07121277 474.88952637]
[229.42085266 468.01031494]
[224.17413330 453.95785522]
[218.92741394 439.90539551]
[213.68069458 425.85290527]
[208.43397522 411.80044556]
[199.92739868 424.15512085]
[184.97584534 425.35974121]
[174.60104370 414.52627563]
[176.45092773 399.64077759]
[189.16181946 391.67626953]
[203.36253357 396.50274658]
[199.17552185 382.09896851]
[194.98851013 367.69519043]
[190.80149841 353.29141235]
[179.81912231 343.22976685]
[183.39678955 327.81835938]
[179.20977783 313.41458130]
[174.80877686 299.07473755]
[170.19476318 284.80200195]
[165.58076477 270.52926636]
[160.96675110 256.25653076]
[156.35273743 241.98379517]
[151.73872375 227.71107483]
[146.17950439 213.77926636]
[139.70001221 200.25093079]
[133.22052002 186.72257996]
[126.74102020 173.19422913]
[120.26152039 159.66589355]
[113.78202820 146.13754272]
[107.30252838 132.60919189]
[100.82303619 119.08084869]
[87.19206238 114.16732025]
[80.93307495 101.09937286]
[85.64862061 87.39864349]
[79.16912079 73.87030029]
[66.22972107 64.76631927]
[67.71015930 49.94546890]
[61.23066330 36.41712570]
[54.75116730 22.88877869]
[52.86513519 37.76973724]
[44.78205872 50.40555573]
[32.06265640 58.35645294]
[17.16284561 60.08724213]
[2.95954537 55.26373291]
[-7.80480909 44.81726456]
[-13.05179024 30.76489067]
[-11.76828671 15.81990433]
[-4.20212460 2.86794758]
[8.18578911 -5.59015989]
[23.00354385 -7.92128992]
[37.39006042 -3.67533779]
[48.56827164 6.32890844]
[44.59617615 -8.13561535]
[40.62408066 -22.60013962]
[27.39963722 -26.48665047]
[17.89786148 -36.32203293]
[14.52369404 -49.46298218]
[18.05488396 -62.45046997]
[27.46586990 -71.92018127]
[23.70956993 -86.44224548]
[19.95326996 -100.96430206]
[16.19696808 -115.48635864]
[13.04507542 -118.47292328]
[11.19369507 -121.95672607]
[10.63945484 -125.46788788]
[11.22671700 -128.58586121]
[12.67687702 -130.98484802]
[-0.15570566 -139.81449890]
[-2.87209201 -154.78366089]
[5.62470531 -166.96315002]
[2.73943257 -181.68304443]
[-0.14584000 -196.40293884]
[-3.03111267 -211.12281799]
[-5.91638517 -225.84271240]
[-20.97324371 -226.70402527]
[-35.34261322 -231.28355408]
[-48.12122345 -239.29341125]
[-58.50580215 -250.23011780]
[-65.84355927 -263.40615845]
[-69.67324829 -277.99328613]
[-69.75412750 -293.07452393]
[-66.08110809 -307.70190430]
[-58.88507843 -320.95587158]
[-48.61839676 -332.00332642]
[-35.92642593 -340.14978027]
[-21.60699844 -344.88314819]
[-6.56024408 -345.90588379]
[8.26798534 -343.15371704]
[21.94557381 -336.79965210]
[33.61273956 -327.24307251]
[42.53607178 -315.08474731]
[48.15464020 -301.08892822]
[50.11526489 -286.13546753]
[48.29468918 -271.16427612]
[42.80736542 -257.11648560]
[33.99822617 -244.87516785]
[22.42102242 -235.20980835]
[8.80350590 -228.72798157]
[11.68877888 -214.00810242]
[14.57405090 -199.28820801]
[17.45932388 -184.56831360]
[20.34459686 -169.84841919]
[32.81063843 -161.77789307]
[35.94640350 -146.89093018]
[27.39676857 -133.87011719]
[30.71902847 -119.24266052]
[34.47533035 -104.72060394]
[38.23162842 -90.19853973]
[41.98793030 -75.67648315]
[57.44654846 -70.15302277]
[66.65908813 -56.36567688]
[65.83016205 -39.63803101]
[55.08860397 -26.57223511]
[59.06069946 -12.10771179]
[63.03279495 2.35681224]
[68.27951050 16.40928268]
[74.75901031 29.93762970]
[81.23850250 43.46597290]
[93.71444702 51.60231781]
[92.69747162 67.39080048]
[99.17696381 80.91915131]
[112.80793762 85.83267975]
[119.06692505 98.90062714]
[114.35137939 112.60135651]
[120.83087921 126.12969971]
[127.31037140 139.65805054]
[133.78987122 153.18638611]
[140.26936340 166.71473694]
[146.74885559 180.24308777]
[153.22834778 193.77142334]
[159.70785522 207.29977417]
[163.03195190 192.67272949]
[173.66148376 182.08911133]
[188.30278015 178.82836914]
[202.41908264 183.90087891]
[211.63627625 195.73487854]
[213.09832764 210.66345215]
[206.35221863 224.06083679]
[193.48828125 231.77569580]
[178.49255371 231.41751099]
[166.01145935 223.09706116]
[170.62547302 237.36979675]
[175.23948669 251.64253235]
[179.85348511 265.91525269]
[184.46749878 280.18798828]
[189.08151245 294.46072388]
[193.72410583 299.16793823]
[195.08782959 304.68493652]
[193.61355591 309.22756958]
[197.80056763 323.63134766]
[209.08242798 334.72326660]
[205.20527649 349.10440063]
[209.39228821 363.50817871]
[213.57929993 377.91195679]
[217.76631165 392.31573486]
[222.48645020 406.55371094]
[227.73316956 420.60620117]
[232.97988892 434.65866089]
[238.22660828 448.71115112]
[243.47332764 462.76361084]
[258.06481934 459.21054077]
[272.97415161 457.40820312]
[287.99200439 457.38195801]
[302.90753174 459.13214111]
[317.51138306 462.63418579]
[331.59851074 467.83892822]
[344.97113037 474.67327881]
[357.44158936 483.04135132]
[368.83474731 492.82562256]
[378.99072266 503.88876343]
[387.76687622 516.07543945]
[395.04003906 529.21459961]
[400.70812988 543.12176514]
[404.69152832 557.60168457]
[406.93435669 572.45117188]
[407.40512085 587.46166992]
[406.09719849 602.42242432]
[403.02893066 617.12353516]
[398.24343872 631.35852051]
[391.80786133 644.92761230]
[383.81259155 657.64025879]
[374.36981201 669.31805420]
[363.61212158 679.79699707]
[351.69055176 688.93005371]
[338.77243042 696.58892822]
[325.03912354 702.66619873]
[310.68344116 707.07641602]
[295.90689087 709.75781250]
[280.91690063 710.67260742]
[265.92395020 709.80810547]
[251.13847351 707.17633057]
[236.76805115 702.81427002]
[223.01443481 696.78314209]
[210.07069397 689.16760254]
[198.11854553 680.07464600]
[187.32575989 669.63183594]
[177.84387207 657.98583984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 173]
[15 172]
[16 171]
[17 170]
[18 169]
[24 168]
[25 167]
[26 166]
[27 165]
[29 163]
[30 162]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 144]
[38 143]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[47 134]
[48 133]
[50 131]
[51 130]
[52 129]
[65 128]
[66 127]
[67 126]
[72 122]
[73 121]
[74 120]
[75 119]
[80 118]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
