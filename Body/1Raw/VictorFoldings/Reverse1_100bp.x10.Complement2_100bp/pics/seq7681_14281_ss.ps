%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[66.41986847 636.81140137]
[51.47811127 635.15600586]
[36.99542236 631.12518311]
[23.34693146 624.82318115]
[10.88617134 616.41333008]
[-0.06409539 606.11346436]
[-9.22023106 594.19030762]
[-16.34506989 580.95275879]
[-21.25406075 566.74365234]
[-23.82005119 551.93109131]
[-23.97657204 536.89874268]
[-21.71957016 522.03594971]
[-17.10750961 507.72775269]
[-10.25985336 494.34472656]
[-1.35396993 482.23352051]
[9.37945557 471.70782471]
[21.66240120 463.04034424]
[35.17670822 456.45553589]
[49.57232666 452.12399292]
[64.47637177 450.15789795]
[64.92298126 435.16452026]
[65.36958313 420.17117310]
[58.01465225 407.21917725]
[66.15940857 393.65548706]
[58.80447388 380.70349121]
[66.94922638 367.13983154]
[67.39583588 352.14645386]
[65.57392883 350.01602173]
[64.48614502 347.03552246]
[64.46047974 343.48098755]
[65.71905518 339.74194336]
[68.34181213 336.28143311]
[69.68004608 321.34124756]
[58.85097504 313.53271484]
[53.24945068 301.29476929]
[54.43585587 287.77951050]
[62.20683289 276.52648926]
[74.62061310 270.53576660]
[76.18113708 255.61717224]
[77.74166107 240.69856262]
[79.30218506 225.77996826]
[80.86270905 210.86135864]
[74.49147034 197.39819336]
[83.62248993 184.47785950]
[71.48799896 175.83958435]
[65.26519012 162.19653320]
[66.71638489 147.17121887]
[75.55152893 134.80848694]
[89.47929382 128.48674011]
[91.03981781 113.56813049]
[83.81634521 98.42885590]
[93.81699371 84.96173096]
[87.34173584 70.52630615]
[96.18365479 58.54006958]
[97.52188873 43.59988785]
[98.86012268 28.65970039]
[100.19835663 13.71951580]
[101.53659058 -1.22066903]
[102.87482452 -16.16085434]
[102.87482452 -31.16085434]
[101.53659058 -46.10103989]
[100.19835663 -61.04122543]
[98.86012268 -75.98140717]
[97.52188873 -90.92159271]
[93.63934326 -99.18982697]
[96.27664185 -106.09391022]
[95.16099548 -121.05236816]
[94.04534912 -136.01081848]
[92.92970276 -150.96926880]
[91.81404877 -165.92773438]
[89.24310303 -169.42689514]
[88.04033661 -173.18428040]
[88.11891937 -176.73803711]
[89.25096130 -179.70199585]
[91.10437775 -181.80508423]
[90.88105011 -196.80342102]
[76.15554810 -199.96023560]
[62.50836945 -206.31184387]
[50.62260437 -215.53677368]
[41.09237289 -227.16984558]
[34.39316177 -240.62557983]
[30.85806656 -255.22770691]
[30.66126251 -270.24313354]
[33.80940247 -284.91879272]
[40.14145279 -298.51928711]
[49.33692932 -310.36389160]
[60.93212128 -319.86053467]
[74.34345245 -326.53543091]
[88.89688873 -330.05673218]
[88.67356110 -345.05505371]
[88.45023346 -360.05340576]
[88.22690582 -375.05172729]
[80.28500366 -388.73516846]
[87.83195496 -401.57623291]
[87.60862732 -416.57458496]
[87.38529968 -431.57290649]
[72.98559570 -436.25555420]
[60.88806152 -445.36206055]
[52.40494919 -457.90463257]
[48.45644379 -472.52270508]
[49.47084427 -487.63061523]
[55.33812332 -501.58963013]
[65.42183685 -512.88555908]
[78.62818146 -520.29302979]
[93.52463531 -523.00866699]
[108.49533844 -520.73779297]
[121.91637421 -513.72674561]
[132.33193970 -502.73608398]
[138.61222839 -488.95794678]
[140.07600403 -473.88693237]
[136.56448364 -459.15777588]
[128.45857239 -446.36819458]
[116.63753510 -436.90554810]
[102.38363647 -431.79623413]
[102.60696411 -416.79791260]
[102.83029175 -401.79956055]
[110.75622559 -389.18890381]
[103.22524261 -375.27505493]
[103.44857025 -360.27673340]
[103.67189789 -345.27838135]
[103.89522552 -330.28005981]
[118.54705048 -327.19363403]
[132.15118408 -320.92098999]
[144.02397156 -311.77377319]
[153.56803894 -300.20822144]
[160.30221558 -286.80227661]
[163.88591003 -272.22686768]
[164.13626099 -257.21224976]
[161.03749084 -242.51133728]
[154.74188232 -228.86210632]
[145.56222534 -216.95043945]
[133.95639038 -207.37571716]
[120.50437927 -200.62060547]
[105.87939453 -197.02674866]
[106.10272217 -182.02841187]
[106.77250671 -167.04338074]
[107.88815308 -152.08491516]
[109.00379944 -137.12646484]
[110.11945343 -122.16801453]
[111.23509979 -107.20956421]
[112.46207428 -92.25982666]
[113.80030823 -77.31964111]
[115.13854218 -62.37945938]
[116.47677612 -47.43927383]
[117.81501007 -32.49908829]
[124.78698730 -45.78033829]
[136.77923584 -54.79066086]
[151.47624207 -57.79030609]
[166.04025269 -54.20008850]
[177.65917969 -44.71322250]
[184.08958435 -31.16147614]
[184.08987427 -16.16147614]
[177.65997314 -2.60948849]
[166.04139709 6.87781000]
[151.47752380 10.46857166]
[136.78039551 7.46947527]
[124.78781128 -1.54039979]
[117.81501007 -14.82261944]
[116.47677612 0.11756513]
[115.13854218 15.05774975]
[113.80030823 29.99793434]
[112.46207428 44.93812180]
[111.12384033 59.87830353]
[117.69481659 73.24510956]
[108.75717926 86.29996490]
[115.67284393 95.67092133]
[114.54747009 107.26293182]
[105.95842743 115.12865448]
[104.39790344 130.04725647]
[116.71595764 139.11437988]
[122.80149841 153.03785706]
[121.11193085 168.03825378]
[112.20051575 180.09820557]
[98.54109192 186.03837585]
[104.80070496 200.56861877]
[95.78131104 212.42187500]
[94.22078705 227.34048462]
[92.66026306 242.25909424]
[91.09974670 257.17770386]
[89.53922272 272.09631348]
[102.26739502 283.23583984]
[105.81264496 299.60449219]
[98.97138977 314.70944214]
[84.62023163 322.67947388]
[83.28199768 337.61965942]
[82.38918304 352.59307861]
[81.94258118 367.58642578]
[89.26556396 381.61083984]
[81.15275574 394.10211182]
[88.47574615 408.12652588]
[80.36293793 420.61779785]
[79.91632843 435.61114502]
[79.46972656 450.60449219]
[94.23032379 453.45422363]
[108.34259796 458.63491821]
[121.44100952 466.01245117]
[133.18627930 475.39566040]
[143.27418518 486.54153442]
[151.44340515 499.16137695]
[157.48234558 512.92828369]
[161.23458862 527.48559570]
[162.60293579 542.45635986]
[161.55195618 557.45275879]
[158.10885620 572.08636475]
[152.36282349 585.97802734]
[144.46270752 598.76806641]
[134.61312866 610.12506104]
[123.06921387 619.75494385]
[110.12998199 627.40820312]
[96.13059235 632.88659668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 193]
[21 192]
[22 191]
[24 189]
[26 187]
[27 186]
[32 185]
[33 184]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[44 174]
[49 169]
[50 168]
[52 165]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[66 140]
[67 139]
[68 138]
[69 137]
[70 136]
[75 135]
[76 134]
[89 121]
[90 120]
[91 119]
[92 118]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
