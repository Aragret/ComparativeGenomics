%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[167.24269104 702.43896484]
[156.72479248 691.73394775]
[147.05720520 680.25524902]
[138.29667664 668.07019043]
[130.49461365 655.25024414]
[123.69681549 641.87072754]
[117.94316101 628.01000977]
[113.26741791 613.74957275]
[109.69702148 599.17309570]
[107.25293732 584.36602783]
[105.94950104 569.41528320]
[105.79436493 554.40869141]
[106.78842926 539.43420410]
[108.92587280 524.57977295]
[112.19414520 509.93255615]
[116.57407379 495.57849121]
[122.03993988 481.60183716]
[128.55969238 468.08459473]
[136.09503174 455.10610962]
[144.60177612 442.74252319]
[154.02998352 431.06640625]
[164.32434082 420.14630127]
[175.42440796 410.04623413]
[187.26507568 400.82553101]
[199.77684021 392.53826904]
[212.88627625 385.23309326]
[206.60890198 371.60980225]
[200.33154297 357.98648071]
[194.05418396 344.36315918]
[187.77682495 330.73983765]
[181.49946594 317.11651611]
[169.14604187 308.79534912]
[170.39797974 293.02374268]
[164.12062073 279.40042114]
[157.84326172 265.77709961]
[153.75260925 263.31222534]
[151.16694641 258.25146484]
[151.58856201 251.65344238]
[145.71960449 237.84925842]
[141.70414734 235.26368713]
[139.27032471 230.12817383]
[139.88819885 223.54563904]
[134.43283081 209.57283020]
[128.97747803 195.60003662]
[123.52211761 181.62724304]
[118.06676483 167.65444946]
[112.61140442 153.68164062]
[107.15605164 139.70884705]
[101.70069122 125.73604584]
[96.24533844 111.76325226]
[94.65115356 126.67829895]
[88.78672028 140.48440552]
[79.15937805 151.98719788]
[66.60198212 160.19157410]
[52.20087433 164.38777161]
[37.20189667 164.21278381]
[22.90260506 159.68174744]
[10.54003811 151.18663025]
[1.18367684 139.46235657]
[-4.35705805 125.52320099]
[-5.60283804 110.57501984]
[-2.44589067 95.91099548]
[4.84067631 82.79970551]
[15.62650299 72.37541199]
[28.97850609 65.53990936]
[43.74160385 62.88455582]
[58.63864136 64.63905334]
[72.38087463 70.65161896]
[83.77946472 80.40211487]
[91.84688568 93.04380798]
[90.50865173 78.10362244]
[89.17041779 63.16343689]
[87.83218384 48.22325134]
[86.49394989 33.28306580]
[84.37932587 18.43286896]
[81.49405670 3.71297741]
[78.60877991 -11.00691414]
[75.72351074 -25.72680473]
[65.47621155 -37.78099442]
[70.62091827 -51.75887680]
[67.73564148 -66.47876740]
[57.48834229 -78.53295898]
[62.63304901 -92.51084137]
[59.74777603 -107.23073578]
[49.34061432 -96.42837524]
[34.39273453 -97.67771149]
[25.92315292 -110.05778503]
[30.17533302 -124.44245911]
[44.01472473 -130.22789001]
[57.23846436 -123.15061188]
[55.45599747 -138.04432678]
[53.67353058 -152.93804932]
[38.82889175 -155.85212708]
[25.61228943 -163.21260071]
[15.31855106 -174.29837036]
[8.95615196 -188.02334595]
[7.14841557 -203.04290771]
[10.07244587 -217.88558960]
[17.44177628 -231.09725952]
[28.53443336 -241.38356018]
[42.26367188 -247.73677063]
[57.28444290 -249.53443909]
[72.12516785 -246.60046387]
[85.33189392 -239.22229004]
[95.61076355 -228.12274170]
[101.95476532 -214.38923645]
[103.74237061 -199.36726379]
[100.79845428 -184.52851868]
[93.41142273 -171.32673645]
[82.30499268 -161.05531311]
[68.56724548 -154.72050476]
[70.34971619 -139.82679749]
[72.13217926 -124.93307495]
[74.46766663 -110.11600494]
[77.35293579 -95.39611816]
[87.39386749 -84.39479065]
[82.45553589 -69.36404419]
[85.34080505 -54.64414978]
[95.38172913 -43.64282990]
[90.44339752 -28.61207771]
[93.32867432 -13.89218616]
[96.21394348 0.82770473]
[99.09922028 15.54759598]
[107.39456940 3.05010962]
[121.74633789 -1.31185281]
[135.59309387 4.45593929]
[142.60427856 17.71652985]
[139.57447815 32.40735245]
[127.88887787 41.81196594]
[112.88997650 41.63070297]
[101.43413544 31.94483185]
[102.77236938 46.88501740]
[104.11060333 61.82520294]
[105.44883728 76.76538849]
[106.78707123 91.70557404]
[110.21813202 106.30789185]
[115.67349243 120.28069305]
[121.12884521 134.25349426]
[126.58420563 148.22628784]
[132.03956604 162.19908142]
[137.49491882 176.17189026]
[142.95027161 190.14468384]
[148.40563965 204.11747742]
[153.86099243 218.09027100]
[159.52377319 231.98030090]
[165.39273071 245.78448486]
[171.46656799 259.49975586]
[177.74392700 273.12307739]
[184.02128601 286.74636841]
[196.82371521 296.04199219]
[195.12278748 310.83917236]
[201.40014648 324.46249390]
[207.67750549 338.08578491]
[213.95486450 351.70910645]
[220.23222351 365.33242798]
[226.50958252 378.95574951]
[240.58032227 373.73681641]
[255.00927734 369.61032104]
[269.71176147 366.60043335]
[284.60153198 364.72488403]
[299.59118652 363.99462891]
[314.59274292 364.41397095]
[329.51818848 365.98046875]
[344.27990723 368.68487549]
[358.79132080 372.51138306]
[372.96722412 377.43750000]
[386.72442627 383.43429565]
[399.98223877 390.46664429]
[412.66281128 398.49322510]
[424.69171143 407.46694946]
[435.99841309 417.33514404]
[446.51654053 428.03991699]
[456.18432617 439.51843262]
[464.94509888 451.70330811]
[472.74740601 464.52310181]
[479.54544067 477.90252686]
[485.29937744 491.76309204]
[489.97537231 506.02343750]
[493.54605103 520.59991455]
[495.99041748 535.40692139]
[497.29412842 550.35760498]
[497.44955444 565.36425781]
[496.45578003 580.33874512]
[494.31860352 595.19317627]
[491.05062866 609.84045410]
[486.67095947 624.19464111]
[481.20535278 638.17138672]
[474.68588257 651.68872070]
[467.15075684 664.66735840]
[458.64425659 677.03112793]
[449.21627808 688.70739746]
[438.92211914 699.62774658]
[427.82226562 709.72796631]
[415.98175049 718.94891357]
[403.47015381 727.23638916]
[390.36087036 734.54180908]
[376.73080444 740.82232666]
[362.65997314 746.04095459]
[348.23095703 750.16717529]
[333.52838135 753.17675781]
[318.63858032 755.05206299]
[303.64892578 755.78204346]
[288.64736938 755.36236572]
[273.72195435 753.79565430]
[258.96026611 751.09094238]
[244.44894409 747.26416016]
[230.27314758 742.33776855]
[216.51603699 736.34069824]
[203.25837708 729.30810547]
[190.57797241 721.28131104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[33 149]
[34 148]
[35 147]
[38 146]
[39 145]
[42 144]
[43 143]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[50 136]
[70 135]
[71 134]
[72 133]
[73 132]
[74 131]
[75 123]
[76 122]
[77 121]
[78 120]
[80 118]
[81 117]
[83 115]
[84 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
