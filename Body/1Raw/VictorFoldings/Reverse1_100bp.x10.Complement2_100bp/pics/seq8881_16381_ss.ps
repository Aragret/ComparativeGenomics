%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[190.42658997 374.33132935]
[196.22636414 360.47097778]
[203.89874268 347.55276489]
[213.29438782 335.82809448]
[224.23040771 325.52517700]
[236.49392700 316.84463501]
[229.61451721 303.51519775]
[222.73509216 290.18576050]
[215.85568237 276.85632324]
[208.97627258 263.52691650]
[202.09686279 250.19747925]
[194.34046936 237.35853577]
[185.74189758 225.06770325]
[172.10629272 219.07441711]
[170.53536987 203.33139038]
[161.93681335 191.04055786]
[152.97612000 179.01118469]
[143.66123962 167.25392151]
[129.69306946 162.08288574]
[127.18789673 146.46127319]
[117.87301636 134.70402527]
[108.55812836 122.94676971]
[99.24324799 111.18952179]
[97.60345459 126.09961700]
[86.85057831 136.55790710]
[71.90068817 137.78297424]
[59.58867645 129.21476746]
[55.54342270 114.77052307]
[61.61436844 101.05397797]
[75.02595520 94.33614349]
[89.64814758 97.68932343]
[81.60697937 85.02680206]
[65.09226227 76.88150787]
[65.03675842 59.33261108]
[56.80794907 46.79121017]
[42.76824570 39.49756241]
[42.25533295 24.61178970]
[34.02652740 12.07038975]
[25.79771805 -0.47101009]
[17.56891060 -13.01241016]
[9.24696732 -25.49220467]
[0.83234847 -37.90969849]
[-14.43192196 -41.01449966]
[-22.78865051 -53.72747803]
[-19.73462868 -68.26049042]
[-28.14924622 -80.67798615]
[-36.56386566 -93.09548187]
[-44.97848511 -105.51297760]
[-53.39310455 -117.93047333]
[-66.48725128 -110.59445953]
[-80.15636444 -104.39533997]
[-94.30197144 -99.37778473]
[-108.82212830 -95.57794952]
[-123.61222839 -93.02320862]
[-138.56570435 -91.73197174]
[-153.57482910 -91.71353149]
[-168.53143311 -92.96804047]
[-183.32775879 -95.48644257]
[-197.85720825 -99.25060272]
[-212.01509094 -104.23339844]
[-225.69940186 -110.39891815]
[-238.81152344 -117.70275116]
[-251.25700378 -126.09226227]
[-262.94616699 -135.50701904]
[-273.79476929 -145.87916565]
[-283.72467041 -157.13397217]
[-292.66430664 -169.19036865]
[-300.54928589 -181.96147156]
[-307.32278442 -195.35525513]
[-312.93600464 -209.27523804]
[-317.34848022 -223.62109375]
[-320.52847290 -238.28948975]
[-322.45300293 -253.17471313]
[-323.10821533 -268.16952515]
[-322.48944092 -283.16589355]
[-320.60107422 -298.05575562]
[-317.45678711 -312.73184204]
[-313.07919312 -327.08837891]
[-307.49981689 -341.02194214]
[-300.75888062 -354.43215942]
[-292.90496826 -367.22238159]
[-283.99465942 -379.30047607]
[-274.09213257 -390.57940674]
[-263.26876831 -400.97787476]
[-251.60253906 -410.42102051]
[-239.17749023 -418.84075928]
[-226.08314514 -426.17642212]
[-212.41386414 -432.37518311]
[-198.26814270 -437.39236450]
[-183.74787903 -441.19183350]
[-168.95771790 -443.74618530]
[-154.00419617 -445.03704834]
[-138.99508667 -445.05511475]
[-124.03851318 -443.80020142]
[-109.24224854 -441.28143311]
[-94.71289062 -437.51687622]
[-80.55513763 -432.53372192]
[-66.87099457 -426.36785889]
[-53.75905609 -419.06369019]
[-41.31379318 -410.67385864]
[-29.62488174 -401.25878906]
[-18.77653885 -390.88638306]
[-8.84692860 -379.63128662]
[0.09240527 -367.57467651]
[7.97705317 -354.80337524]
[14.75020504 -341.40939331]
[20.36305809 -327.48928833]
[24.77517509 -313.14331055]
[27.95476151 -298.47482300]
[29.87890816 -283.58956909]
[30.53375435 -268.59472656]
[29.91458130 -253.59837341]
[28.02584839 -238.70857239]
[24.88116455 -224.03257751]
[20.50318909 -209.67613220]
[14.92346382 -195.74270630]
[8.18219376 -182.33267212]
[0.32794899 -169.54264832]
[-8.58267879 -157.46479797]
[-18.48548698 -146.18612671]
[-29.30912590 -135.78791809]
[-40.97560883 -126.34509277]
[-32.56098938 -113.92759705]
[-24.14636993 -101.51010132]
[-15.73175144 -89.09260559]
[-7.31713295 -76.67510986]
[7.31280327 -74.12548828]
[16.02331543 -61.65225220]
[13.24984360 -46.32431793]
[21.66446304 -33.90682220]
[28.01900864 -30.13302803]
[30.11031151 -21.24121857]
[38.33911896 -8.69981766]
[46.56792831 3.84158230]
[54.79673386 16.38298225]
[68.24785614 22.77958679]
[69.34934998 38.56240082]
[77.57815552 51.10380173]
[89.35437012 53.86919022]
[96.31256866 64.25028992]
[94.26950073 76.98562622]
[102.31067657 89.64814758]
[111.00050354 101.87463379]
[120.31538391 113.63188934]
[129.63026428 125.38913727]
[138.94514465 137.14639282]
[153.57957458 143.15838623]
[155.41848755 157.93904114]
[164.73336792 169.69630432]
[168.82463074 171.15078735]
[171.92811584 173.58654785]
[173.85662842 176.57255554]
[174.58219910 179.66127014]
[174.22764587 182.44198608]
[182.82621765 194.73283386]
[197.07685852 201.60522461]
[198.03274536 216.46913147]
[206.63130188 228.75996399]
[207.52600098 213.78668213]
[216.28765869 201.61155701]
[230.20137024 196.00721741]
[244.95582581 198.71020508]
[255.97918701 208.88298035]
[259.85577393 223.37339783]
[255.38433838 237.69143677]
[243.95043945 247.40051270]
[229.09698486 249.49214172]
[215.42628479 243.31806946]
[222.30569458 256.64749146]
[229.18511963 269.97692871]
[236.06452942 283.30633545]
[242.94393921 296.63577271]
[249.82334900 309.96520996]
[264.00338745 304.99807739]
[278.73675537 302.05282593]
[293.73660278 301.18679810]
[308.71102905 302.41683960]
[323.36849976 305.71905518]
[337.42373657 311.02911377]
[350.60311890 318.24368286]
[362.65011597 327.22232056]
[373.33026123 337.79022217]
[382.43560791 349.74176025]
[389.78894043 362.84420776]
[395.24716187 376.84255981]
[398.70397949 391.46435547]
[400.09210205 406.42492676]
[399.38455200 421.43313599]
[396.59506226 436.19674683]
[391.77795410 450.42846680]
[385.02697754 463.85122681]
[376.47354126 476.20376587]
[366.28417969 487.24560547]
[354.65716553 496.76187134]
[341.81887817 504.56729126]
[328.01919556 510.50991821]
[313.52673340 514.47412109]
[298.62359619 516.38269043]
[283.59988403 516.19848633]
[268.74801636 513.92510986]
[254.35711670 509.60678101]
[240.70727539 503.32757568]
[228.06420898 495.20974731]
[216.67402649 485.41128540]
[206.75843811 474.12292480]
[198.51043701 461.56439209]
[192.09059143 447.98016357]
[187.62385559 433.63461304]
[185.19718933 418.80703735]
[184.85780334 403.78601074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 158]
[13 157]
[15 155]
[16 154]
[17 149]
[18 148]
[20 146]
[21 145]
[22 144]
[23 143]
[31 142]
[32 141]
[34 138]
[35 137]
[37 135]
[38 134]
[39 133]
[40 132]
[41 130]
[42 129]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
