%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[206.43960571 581.63739014]
[219.38497925 573.87078857]
[215.41288757 559.40625000]
[211.44079590 544.94171143]
[200.60943604 534.71771240]
[204.41615295 519.36126709]
[200.33648682 504.92672729]
[196.14947510 490.52294922]
[191.96246338 476.11917114]
[178.82612610 469.19296265]
[174.37471008 454.64514160]
[181.72859192 440.91348267]
[177.54158020 426.50970459]
[173.35456848 412.10592651]
[169.16755676 397.70214844]
[164.98054504 383.29837036]
[160.79353333 368.89459229]
[155.90791321 363.34909058]
[156.65312195 354.24511719]
[152.68103027 339.78057861]
[148.70893860 325.31607056]
[135.67716980 318.19506836]
[131.44284058 303.58258057]
[139.00035095 289.96194458]
[135.02825928 275.49740601]
[131.05615234 261.03289795]
[127.08406067 246.56835938]
[123.11196899 232.10383606]
[109.69965363 229.52955627]
[98.65193176 221.38851929]
[92.15861511 209.22357178]
[91.53718567 195.38189697]
[96.96586609 182.56216431]
[107.43773651 173.28839111]
[103.68143463 158.76632690]
[99.92513275 144.24427795]
[92.38835907 157.21334839]
[78.32166290 162.42181396]
[64.15615082 157.48841858]
[56.36811066 144.66865540]
[58.51812363 129.82353210]
[69.62323761 119.74005890]
[84.60633850 119.02825165]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[78.84874725 61.71030045]
[84.61246490 47.97608185]
[82.38735199 33.14203644]
[79.28324127 18.46673393]
[75.31114197 4.00221062]
[71.33905029 -10.46231365]
[67.36695099 -24.92683792]
[63.39485550 -39.39136124]
[59.42276001 -53.85588455]
[54.92211151 -39.54700089]
[44.72207642 -28.54885292]
[30.79211998 -22.98501015]
[15.82190037 -23.92976379]
[2.70193386 -31.20069695]
[-6.03452158 -43.39390564]
[-8.70059299 -58.15507507]
[-4.78150320 -72.63404846]
[4.96603203 -84.03517151]
[18.65991783 -90.15705872]
[33.65607834 -89.81767273]
[47.05899048 -83.08254242]
[56.28130341 -71.25096130]
[54.94306946 -86.19114685]
[46.00543213 -99.24600220]
[52.57640839 -112.61280823]
[43.63877106 -125.66766357]
[50.20974350 -139.03446960]
[48.87150955 -153.97465515]
[47.53327560 -168.91484070]
[46.19504166 -183.85502625]
[44.85680771 -198.79521179]
[43.51857376 -213.73539734]
[42.18033981 -228.67558289]
[34.44681168 -215.82286072]
[21.37116623 -208.47251892]
[6.37134600 -208.54592896]
[-6.63173246 -216.02389526]
[-14.23909473 -228.95169067]
[-14.46219635 -243.95002747]
[-7.24271679 -257.09838867]
[5.53218746 -264.95980835]
[20.52318764 -265.47930908]
[33.81167221 -258.52114868]
[41.92378998 -245.90496826]
[42.81660843 -260.87838745]
[43.70942307 -275.85177612]
[44.60223770 -290.82519531]
[35.98074341 -307.09637451]
[46.20840454 -321.35687256]
[46.87818909 -336.34191895]
[47.54797363 -351.32693481]
[48.21775818 -366.31198120]
[34.57709503 -373.08340454]
[24.87491989 -384.82171631]
[20.79219055 -399.49316406]
[23.03626823 -414.55581665]
[31.21834946 -427.40002441]
[43.92084122 -435.80041504]
[58.94296265 -438.30157471]
[73.68203735 -434.47018433]
[85.58442688 -424.97003174]
[92.58797455 -411.44708252]
[93.47927856 -396.24426270]
[88.10391235 -381.99557495]
[77.39318085 -371.16967773]
[63.20279694 -365.64221191]
[62.53301239 -350.65716553]
[61.86322784 -335.67211914]
[61.19344330 -320.68707275]
[69.12238312 -311.55151367]
[68.68701172 -299.06176758]
[59.57564545 -289.93237305]
[58.68283081 -274.95895386]
[57.79001236 -259.98556519]
[56.89719772 -245.01216125]
[57.12052536 -230.01382446]
[58.45875931 -215.07363892]
[59.79699326 -200.13345337]
[61.13522720 -185.19326782]
[62.47346115 -170.25308228]
[63.81169510 -155.31289673]
[65.14993286 -140.37271118]
[73.99184418 -128.38647461]
[67.51659393 -113.95104218]
[76.35851288 -101.96481323]
[69.88325500 -87.52938080]
[71.22148895 -72.58919525]
[73.88728333 -57.82798004]
[77.85938263 -43.36345673]
[81.83147430 -28.89893341]
[85.80357361 -14.43440914]
[89.77566528 0.03011450]
[93.74776459 14.49463844]
[100.28038788 0.99186718]
[113.44726562 -6.19377232]
[128.33746338 -4.38221502]
[139.39732361 5.75087404]
[142.50178528 20.42610359]
[136.49296570 34.16997528]
[123.61199188 41.85636139]
[108.66316223 40.61843491]
[97.22139740 30.91691971]
[99.44651031 45.75096512]
[108.98619080 57.18966293]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[114.44719696 140.48797607]
[118.20349884 155.01002502]
[121.95979309 169.53208923]
[137.93788147 173.78564453]
[149.52424622 185.44975281]
[153.62376404 201.27412415]
[149.20915222 216.91596985]
[137.57649231 228.13174438]
[141.54858398 242.59626770]
[145.52067566 257.06079102]
[149.49278259 271.52532959]
[153.46487427 285.98983765]
[166.91864014 293.84057617]
[170.74084473 308.56625366]
[163.17346191 321.34396362]
[167.14555359 335.80850220]
[171.11764526 350.27301025]
[175.19731140 364.70758057]
[179.38432312 379.11135864]
[183.57133484 393.51513672]
[187.75834656 407.91891479]
[191.94535828 422.32269287]
[196.13237000 436.72647095]
[209.70152283 444.37603760]
[213.74256897 459.04318237]
[206.36624146 471.93215942]
[210.55325317 486.33593750]
[214.74026489 500.73971558]
[220.14071655 508.10671997]
[218.88067627 515.38916016]
[229.99613953 526.64782715]
[225.90531921 540.96966553]
[229.87741089 555.43414307]
[233.84950256 569.89868164]
[248.94580078 569.96478271]
[263.46414185 574.10241699]
[276.32717896 582.00463867]
[286.58038330 593.08502197]
[293.46289062 606.52130127]
[296.46398926 621.31640625]
[295.36093140 636.37249756]
[290.23565674 650.57232666]
[281.46841431 662.86206055]
[269.70983887 672.32983398]
[255.83247375 678.27301025]
[240.86611938 680.25061035]
[225.92138672 678.11578369]
[212.10725403 672.02709961]
[200.44883728 662.43627930]
[191.81124878 650.05505371]
[186.83547974 635.80218506]
[185.89076233 620.73535156]
[189.04718018 605.97253418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 191]
[3 190]
[4 189]
[6 187]
[7 185]
[8 184]
[9 183]
[12 180]
[13 179]
[14 178]
[15 177]
[16 176]
[17 175]
[19 174]
[20 173]
[21 172]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[34 160]
[35 159]
[36 158]
[44 157]
[45 156]
[47 154]
[48 153]
[50 151]
[51 150]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
[70 135]
[71 134]
[73 132]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
