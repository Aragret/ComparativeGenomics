%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[-43.18724442 637.81939697]
[-45.37489700 652.68530273]
[-49.65599823 667.08850098]
[-55.94339752 680.73583984]
[-64.10908508 693.34942627]
[-73.98682404 704.67242432]
[-85.37551117 714.47442627]
[-98.04328918 722.55578613]
[-111.73225403 728.75195312]
[-126.16372681 732.93688965]
[-141.04388428 735.02526855]
[-156.06980896 734.97473145]
[-170.93556213 732.78613281]
[-185.33853149 728.50415039]
[-198.98545837 722.21588135]
[-211.59852600 714.04943848]
[-222.92095947 704.17095947]
[-232.72221375 692.78167725]
[-240.80278015 680.11340332]
[-246.99813843 666.42407227]
[-251.18215942 651.99230957]
[-253.26965332 637.11206055]
[-253.21812439 622.08612061]
[-251.02864075 607.22052002]
[-246.74574280 592.81781006]
[-240.45666504 579.17126465]
[-232.28941345 566.55871582]
[-222.41027832 555.23687744]
[-211.02037048 545.43634033]
[-198.35159302 537.35656738]
[-184.66186523 531.16204834]
[-170.22987366 526.97894287]
[-155.34945679 524.89233398]
[-140.32354736 524.94482422]
[-125.45804596 527.13519287]
[-111.05561829 531.41900635]
[-104.77825928 517.79565430]
[-98.50090027 504.17236328]
[-92.22353363 490.54904175]
[-85.94617462 476.92572021]
[-79.66881561 463.30239868]
[-89.58205414 453.36929321]
[-95.52193451 440.62188721]
[-96.75646973 426.58279419]
[-93.11705780 412.93667603]
[-85.02115631 401.32791138]
[-73.42453766 393.16265869]
[-59.70845413 389.43838501]
[-45.51515198 390.62210083]
[-39.03565598 377.09375000]
[-32.55615997 363.56542969]
[-26.07666397 350.03707886]
[-19.59716797 336.50872803]
[-19.54291725 329.11825562]
[-12.91917038 322.82830811]
[-6.23897600 309.39791870]
[-6.07469797 302.00909424]
[0.64196217 295.81842041]
[-0.39654732 280.96008301]
[12.80817795 272.24539185]
[19.68758965 258.91595459]
[26.56700325 245.58651733]
[33.44641495 232.25709534]
[39.92591095 218.72874451]
[45.99974442 205.01347351]
[52.07357788 191.29821777]
[58.14741135 177.58294678]
[64.22124481 163.86767578]
[70.29508209 150.15242004]
[67.48852539 132.82929993]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[93.78050232 73.60311127]
[98.95295715 62.22640610]
[110.12068939 57.57793045]
[116.19452667 43.86266327]
[116.80804443 34.74885941]
[122.46224213 29.98946571]
[128.73960876 16.36614990]
[135.01696777 2.74283361]
[141.29432678 -10.88048267]
[145.58845520 -25.25269508]
[147.81356812 -40.08673859]
[150.03868103 -54.92078400]
[152.15330505 -69.77098083]
[142.84381104 -82.25981903]
[145.08793640 -97.30702972]
[157.05151367 -106.10524750]
[159.05552673 -120.97077179]
[161.05953979 -135.83630371]
[163.06355286 -150.70182800]
[165.06756592 -165.56735229]
[166.73910522 -180.47393799]
[168.07734680 -195.41412354]
[169.41557312 -210.35430908]
[170.75381470 -225.29447937]
[172.09204102 -240.23466492]
[158.17178345 -246.15763855]
[146.76445007 -256.09384155]
[138.98764038 -269.06982422]
[135.60321045 -283.81433105]
[136.94276428 -298.88287354]
[142.87506104 -312.79916382]
[152.81889343 -324.19982910]
[165.80009460 -331.96795654]
[180.54687500 -335.34249878]
[195.61451721 -333.99285889]
[209.52682495 -328.05123901]
[220.92082214 -318.09976196]
[228.68025208 -305.11337280]
[232.04490662 -290.36431885]
[230.68516541 -275.29757690]
[224.73422241 -261.38925171]
[214.77511597 -250.00192261]
[201.78352356 -242.25120544]
[187.03222656 -238.89643860]
[185.69400024 -223.95625305]
[184.35575867 -209.01606750]
[183.01753235 -194.07588196]
[181.67929077 -179.13569641]
[183.64739990 -176.21014404]
[184.29626465 -172.18595886]
[183.12498474 -167.69358826]
[179.93309021 -163.56333923]
[177.92907715 -148.69781494]
[175.92506409 -133.83229065]
[173.92105103 -118.96675873]
[171.91703796 -104.10123444]
[181.12370300 -92.44907379]
[179.30311584 -77.34476471]
[167.01882935 -67.76696777]
[169.24052429 -60.71814346]
[164.87272644 -52.69566727]
[162.64761353 -37.86162186]
[160.42250061 -23.02757835]
[169.23051453 -35.16918945]
[181.18988037 -44.22311401]
[195.26599121 -49.40610123]
[210.24110413 -50.26976395]
[224.81973267 -46.73939514]
[237.74067688 -39.12039948]
[247.88615417 -28.07190323]
[254.37847900 -14.54970646]
[256.65597534 0.27638420]
[254.52165222 15.12376308]
[248.16014099 28.70798302]
[238.12174988 39.85387421]
[225.27493286 47.59720230]
[210.73104858 51.26809692]
[195.74829102 50.54898834]
[181.62283325 45.50208282]
[169.57664490 36.56399155]
[160.65187073 24.50794601]
[155.62055969 10.37691593]
[154.91764832 -4.60312176]
[148.64028931 9.02019405]
[142.36291504 22.64351082]
[136.08555603 36.26682663]
[129.90979004 49.93649673]
[123.83596039 63.65176392]
[126.64251709 80.97487640]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[100.35054016 140.20106506]
[95.17807770 151.57777405]
[84.01034546 156.22624207]
[77.93651581 169.94151306]
[71.86267853 183.65678406]
[65.78884888 197.37205505]
[59.71501160 211.08731079]
[53.64117813 224.80258179]
[54.25705338 229.10079956]
[53.54478073 232.98115540]
[51.79880142 236.07743835]
[49.40225983 238.15667725]
[46.77584457 239.13650513]
[39.89643097 252.46592712]
[33.01702118 265.79534912]
[26.13760757 279.12478638]
[26.68405533 294.93655396]
[13.97139168 302.69784546]
[7.19140005 316.07812500]
[0.51120532 329.50848389]
[-6.06882238 342.98822021]
[-12.54831791 356.51657104]
[-19.02781487 370.04492188]
[-25.50730896 383.57327271]
[-31.98680496 397.10159302]
[-21.17091751 408.99801636]
[-15.76135159 424.09793091]
[-16.55860329 440.07916260]
[-23.41105080 454.49609375]
[-35.24269867 465.15380859]
[-50.22203445 470.44235229]
[-66.04550171 469.57977295]
[-72.32286072 483.20309448]
[-78.60021973 496.82638550]
[-84.87757874 510.44970703]
[-91.15494537 524.07305908]
[-97.43230438 537.69635010]
[-84.81822205 545.86126709]
[-73.49457550 555.73828125]
[-63.69190216 567.12634277]
[-55.60977173 579.79364014]
[-49.41272354 593.48223877]
[-45.22692108 607.91345215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 204]
[37 203]
[38 202]
[39 201]
[40 200]
[41 199]
[49 192]
[50 191]
[51 190]
[52 189]
[53 188]
[55 187]
[56 186]
[58 185]
[60 183]
[61 182]
[62 181]
[63 180]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[71 167]
[72 166]
[74 164]
[77 162]
[78 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 137]
[85 136]
[86 135]
[87 133]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
