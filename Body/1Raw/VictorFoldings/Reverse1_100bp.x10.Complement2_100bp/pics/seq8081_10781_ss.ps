%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[64.45259857 395.05895996]
[65.52750397 410.04769897]
[64.40848541 425.03320312]
[61.11939240 439.69607544]
[55.73033142 453.72375488]
[48.35617065 466.81726074]
[39.15409470 478.69747925]
[28.32024002 489.11120605]
[16.08553696 497.83645630]
[2.71076679 504.68722534]
[-11.51898766 509.51754761]
[-26.30041695 512.22442627]
[-41.31845474 512.75018311]
[-56.25298691 511.08358765]
[-70.78569031 507.26019287]
[-84.60679626 501.36148071]
[-97.42170715 493.51315308]
[-108.95726776 483.88253784]
[-118.96759796 472.67492676]
[-127.23933411 460.12915039]
[-133.59616089 446.51266479]
[-137.90257263 432.11569214]
[-140.06680298 417.24511719]
[-140.04269409 402.21789551]
[-137.83076477 387.35433960]
[-133.47816467 372.97128296]
[-127.07768250 359.37527466]
[-118.76573181 346.85610962]
[-108.71948242 335.68063354]
[-97.15307617 326.08709717]
[-84.31304932 318.27996826]
[-70.47309113 312.42559814]
[-55.92819595 308.64886475]
[-40.98838806 307.03021240]
[-25.97211647 307.60412598]
[-11.19944859 310.35842896]
[3.01473188 315.23440552]
[9.89414501 301.90496826]
[16.77355766 288.57553101]
[23.65296936 275.24609375]
[22.61445999 260.38775635]
[35.81918335 251.67306519]
[42.69859695 238.34362793]
[49.37879181 224.91325378]
[55.85828781 211.38490295]
[62.33778381 197.85656738]
[68.41162109 184.14129639]
[74.07440186 170.25126648]
[78.68841553 155.97853088]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[83.85837555 101.95625305]
[86.69087219 90.65943146]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[103.86430359 55.11072540]
[107.62060547 40.58866501]
[111.37689972 26.06660652]
[98.50234222 19.30133629]
[87.46649170 9.84012508]
[78.82303619 -1.83792460]
[73.00465393 -15.14259434]
[70.30135345 -29.40238762]
[70.84598541 -43.89841461]
[74.60778809 -57.90064240]
[81.39403534 -70.70464325]
[90.85993195 -81.66705322]
[102.52616119 -90.23789215]
[115.80310059 -95.98815155]
[130.02066040 -98.63125610]
[144.46209717 -98.03737640]
[148.43420410 -112.50189972]
[152.40629578 -126.96642303]
[156.37838745 -141.43095398]
[155.07907104 -147.91348267]
[156.96540833 -153.27433777]
[160.69007874 -156.26362610]
[165.09107971 -170.60348511]
[161.74327087 -186.06642151]
[172.87422180 -195.96343994]
[177.27522278 -210.30329895]
[181.67622375 -224.64314270]
[186.07722473 -238.98298645]
[190.47822571 -253.32283020]
[194.87921143 -267.66268921]
[199.28021240 -282.00253296]
[203.25231934 -296.46704102]
[206.79199219 -311.04342651]
[210.33164978 -325.61981201]
[213.87132263 -340.19616699]
[217.41099548 -354.77255249]
[204.41438293 -366.60137939]
[199.22538757 -383.29824829]
[203.18737793 -400.23654175]
[215.12103271 -412.77056885]
[231.67341614 -417.50946045]
[234.77752686 -432.18475342]
[237.88163757 -446.86004639]
[240.98574829 -461.53536987]
[227.40830994 -468.08645630]
[215.79364014 -477.69699097]
[206.81698608 -489.80828857]
[201.00024414 -503.71615601]
[198.68159485 -518.61206055]
[199.99584961 -533.62988281]
[204.86657715 -547.89660645]
[213.01062012 -560.58276367]
[223.95448303 -570.95074463]
[237.06192017 -578.39782715]
[251.57086182 -582.49102783]
[266.63778687 -582.99230957]
[281.38671875 -579.87261963]
[294.96017456 -573.31335449]
[306.56900024 -563.69573975]
[315.53833008 -551.57904053]
[321.34661865 -537.66760254]
[323.65625000 -522.77032471]
[322.33288574 -507.75326538]
[317.45349121 -493.48950195]
[309.30175781 -480.80828857]
[298.35162354 -470.44692993]
[285.23968506 -463.00781250]
[270.72827148 -458.92343140]
[255.66104126 -458.43124390]
[252.55693054 -443.75595093]
[249.45281982 -429.08065796]
[246.34870911 -414.40533447]
[256.60018921 -407.02120972]
[263.32223511 -396.26876831]
[265.48629761 -383.72665405]
[262.73602295 -371.25207520]
[255.44551086 -360.70581055]
[244.66874695 -353.67471313]
[231.98738098 -351.23287964]
[228.44770813 -336.65649414]
[224.90803528 -322.08013916]
[221.36836243 -307.50375366]
[217.82868958 -292.92736816]
[219.17027283 -290.46603394]
[219.61773682 -287.32495117]
[218.90725708 -283.84204102]
[216.90217590 -280.44436646]
[213.62005615 -277.60153198]
[209.21907043 -263.26168823]
[204.81806946 -248.92182922]
[200.41706848 -234.58198547]
[196.01606750 -220.24214172]
[191.61506653 -205.90229797]
[187.21408081 -191.56245422]
[190.87667847 -177.12518311]
[179.43092346 -166.20248413]
[175.02992249 -151.86264038]
[170.84291077 -137.45884705]
[166.87081909 -122.99433136]
[162.89872742 -108.52980804]
[158.92663574 -94.06527710]
[172.50151062 -86.59606934]
[183.90603638 -76.09494019]
[192.47729492 -63.16662979]
[197.71569824 -48.55712509]
[199.31413269 -33.11061859]
[197.17593384 -17.72072792]
[191.42071533 -3.27879071]
[182.37774658 9.37774849]
[170.56700134 19.51390457]
[156.66941833 26.53983116]
[141.48747253 30.04514885]
[125.89896393 29.82290840]
[122.14266205 44.34496689]
[118.38636017 58.86702728]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[115.77153015 103.95446014]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[93.26478577 159.51820374]
[104.72227478 149.83699036]
[119.46754456 147.08433533]
[133.64620972 151.97978210]
[143.55201721 163.24366760]
[146.59559631 177.93164062]
[141.98136902 192.20429993]
[130.91548157 202.33081055]
[116.29053497 205.66412354]
[101.92945862 201.33291626]
[91.58618927 190.46937561]
[87.96443176 175.91406250]
[82.30164337 189.80407715]
[83.04521942 194.08206177]
[82.44879913 197.98190308]
[80.79578400 201.12879944]
[78.46221161 203.27845764]
[75.86612701 204.33605957]
[69.38663483 217.86441040]
[62.90713882 231.39274597]
[63.03371048 238.00300598]
[60.22465897 242.94328308]
[56.02802658 245.22303772]
[49.14861298 258.55245972]
[49.69506073 274.36422729]
[36.98239899 282.12551880]
[30.10298538 295.45495605]
[23.22357368 308.78436279]
[16.34416199 322.11380005]
[28.55312920 330.87503052]
[39.35628128 341.32058716]
[48.52334976 353.22784424]
[55.85893631 366.34298706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 206]
[38 205]
[39 204]
[40 203]
[42 201]
[43 200]
[44 197]
[45 196]
[46 195]
[47 190]
[48 189]
[49 178]
[50 177]
[51 176]
[52 175]
[55 173]
[56 172]
[57 171]
[58 170]
[59 169]
[72 157]
[73 156]
[74 155]
[75 154]
[78 153]
[79 152]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
[87 144]
[88 139]
[89 138]
[90 137]
[91 136]
[92 135]
[97 128]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
