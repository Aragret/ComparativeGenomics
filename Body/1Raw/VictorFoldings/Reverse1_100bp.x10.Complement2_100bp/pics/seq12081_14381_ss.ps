%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[3.40371895 588.30218506]
[3.40371895 573.30218506]
[3.40371895 558.30218506]
[3.40371895 543.30218506]
[3.40371895 528.30218506]
[3.40371895 513.30218506]
[-3.60089922 526.56628418]
[-14.31761837 537.06158447]
[-27.72498894 543.78784180]
[-42.54510498 546.10388184]
[-57.36540604 543.78906250]
[-70.77332306 537.06390381]
[-81.49088287 526.56939697]
[-88.49657440 513.30590820]
[-91.12265015 498.53756714]
[-89.11881256 483.67202759]
[-82.67604828 470.12615967]
[-72.40844727 459.19104004]
[-59.29465103 451.90899658]
[-44.58457947 448.97406006]
[-29.68030739 450.66598511]
[-16.00241089 456.82351685]
[-4.85458231 466.85974121]
[2.70063901 479.81808472]
[5.94320869 494.46456909]
[9.91530514 480.00006104]
[13.88740158 465.53552246]
[17.85949707 451.07101440]
[21.83159447 436.60647583]
[17.74076653 422.28466797]
[28.85623169 411.02603149]
[32.82832718 396.56149292]
[28.73749924 382.23968506]
[39.85296631 370.98104858]
[43.82506180 356.51651001]
[47.79715729 342.05200195]
[51.76925278 327.58746338]
[54.65452576 312.86758423]
[56.43699265 297.97387695]
[58.21945953 283.08013916]
[60.00192261 268.18643188]
[46.77653503 275.26379395]
[32.93769073 269.47705078]
[28.68687248 255.09197998]
[37.15762329 242.71270752]
[52.10562134 241.46478271]
[62.51123810 252.26655579]
[65.39650726 237.54666138]
[68.28178406 222.82676697]
[71.16705322 208.10688782]
[74.05233002 193.38699341]
[76.93759918 178.66709900]
[71.79289246 164.68920898]
[82.04019165 152.63502502]
[84.92546844 137.91513062]
[87.81073761 123.19524384]
[90.69601440 108.47534943]
[93.25184631 93.69470215]
[95.47695923 78.86065674]
[88.45206451 68.04337311]
[90.61075592 55.73387146]
[100.25858307 48.43688583]
[102.70430756 33.63761520]
[105.15003967 18.83834267]
[107.59576416 4.03907204]
[100.71382904 -13.04075336]
[112.36957550 -26.15983963]
[114.59469604 -40.99388123]
[116.81980896 -55.82792664]
[118.93443298 -70.67812347]
[120.93844604 -85.54365540]
[122.94245911 -100.40917969]
[124.94647217 -115.27471161]
[126.95048523 -130.14024353]
[128.95449829 -145.00576782]
[130.95851135 -159.87129211]
[132.96252441 -174.73681641]
[134.96653748 -189.60235596]
[136.97055054 -204.46788025]
[124.92792511 -213.89773560]
[119.25963593 -227.99623108]
[121.39507294 -242.93966675]
[130.66160583 -254.72895813]
[144.49183655 -260.25979614]
[146.49584961 -275.12533569]
[139.31066895 -285.83682251]
[141.28585815 -298.17709351]
[150.82397461 -305.61691284]
[153.04908752 -320.45095825]
[155.27421570 -335.28500366]
[156.83473206 -350.20361328]
[157.72755432 -365.17700195]
[158.62036133 -380.15042114]
[159.51318359 -395.12384033]
[160.40599060 -410.09722900]
[161.29881287 -425.07064819]
[162.19163513 -440.04403687]
[147.97233582 -445.14190674]
[135.76605225 -454.04043579]
[126.56232452 -466.01824951]
[121.10723114 -480.10433960]
[119.84300232 -495.15686035]
[122.87211609 -509.95556641]
[129.94902039 -523.30072021]
[140.50003052 -534.11059570]
[153.66979980 -541.50885010]
[168.39074707 -544.89569092]
[183.46948242 -543.99658203]
[197.68363953 -538.88439941]
[209.88096619 -529.97363281]
[219.07266235 -517.98657227]
[224.51361084 -503.89501953]
[225.76271057 -488.84121704]
[222.71873474 -474.04559326]
[215.62843323 -460.70751953]
[205.06657410 -449.90826416]
[191.88937378 -442.52328491]
[177.16503906 -439.15121460]
[176.27221680 -424.17782593]
[175.37940979 -409.20440674]
[174.48658752 -394.23101807]
[173.59376526 -379.25759888]
[172.70095825 -364.28421021]
[171.80813599 -349.31079102]
[183.71690369 -358.43118286]
[198.60424805 -356.59628296]
[207.94203186 -344.85720825]
[206.38114929 -329.93865967]
[194.81575012 -320.38662720]
[179.87100220 -321.67294312]
[170.10826111 -333.05987549]
[167.88313293 -318.22583008]
[165.65802002 -303.39178467]
[172.95166016 -287.43029785]
[161.36137390 -273.12130737]
[159.35736084 -258.25579834]
[171.22927856 -249.26004028]
[177.04312134 -235.43777466]
[175.14520264 -220.46232605]
[165.94590759 -208.36813354]
[151.83609009 -202.46386719]
[149.83207703 -187.59834290]
[147.82806396 -172.73280334]
[145.82405090 -157.86727905]
[143.82002258 -143.00175476]
[141.81600952 -128.13623047]
[139.81199646 -113.27069855]
[137.80798340 -98.40516663]
[135.80397034 -83.53964233]
[133.79995728 -68.67411041]
[136.02165222 -61.62528992]
[131.65385437 -53.60280991]
[129.42874146 -38.76876450]
[127.20362091 -23.93472290]
[134.13911438 -14.02384853]
[132.40673828 -1.64715135]
[122.39503479 6.48479939]
[119.94931030 21.28407097]
[117.50357819 36.08333969]
[115.05785370 50.88261032]
[122.11304474 66.95094299]
[110.31100464 81.08576965]
[108.08588409 95.91981506]
[109.91548920 99.31465912]
[110.23980713 103.49947357]
[108.73959351 107.78390503]
[105.41590118 111.36062622]
[102.53063202 126.08051300]
[99.64535522 140.80041504]
[96.76008606 155.52029419]
[101.69841766 170.55105591]
[91.65749359 181.55236816]
[88.77221680 196.27226257]
[85.88694763 210.99215698]
[83.00167084 225.71205139]
[80.11640167 240.43193054]
[77.23112488 255.15182495]
[74.89563751 269.96890259]
[73.11317444 284.86260986]
[71.33071136 299.75631714]
[69.54824066 314.65005493]
[79.77411652 303.67593384]
[94.08780670 299.19058228]
[108.74774170 302.36645508]
[119.92185211 312.37341309]
[124.68925476 326.59564209]
[121.80376434 341.31549072]
[112.01963043 352.68524170]
[97.89440918 357.73281860]
[83.12040710 355.13885498]
[71.55949402 345.58135986]
[66.23377991 331.55957031]
[62.26168060 346.02410889]
[58.28958511 360.48861694]
[54.31748962 374.95315552]
[58.12420654 390.30957031]
[47.29285049 400.53359985]
[43.32075500 414.99810791]
[47.12747192 430.35452271]
[36.29611588 440.57858276]
[32.32402039 455.04309082]
[28.35192490 469.50762939]
[24.37982941 483.97213745]
[20.40773201 498.43667603]
[18.40371895 513.30218506]
[18.40371895 528.30218506]
[18.40371895 543.30218506]
[18.40371895 558.30218506]
[18.40371895 573.30218506]
[18.40371895 588.30218506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[31 198]
[32 197]
[34 195]
[35 194]
[36 193]
[37 192]
[38 181]
[39 180]
[40 179]
[41 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[57 167]
[58 163]
[59 162]
[62 160]
[63 159]
[64 158]
[65 157]
[67 154]
[68 153]
[69 152]
[70 150]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[84 136]
[85 135]
[88 133]
[89 132]
[90 131]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
