%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[197.21243286 626.14996338]
[182.32453918 623.64941406]
[168.66384888 617.22375488]
[157.24411011 607.34997559]
[148.91271973 594.76068115]
[144.28793335 580.39007568]
[143.71293640 565.30456543]
[147.23040771 550.62365723]
[154.57931519 537.43670654]
[165.21430969 526.72222900]
[178.34623718 519.27545166]
[193.00059509 515.64880371]
[193.44720459 500.65545654]
[193.89381409 485.66210938]
[194.34042358 470.66876221]
[194.78701782 455.67541504]
[195.23362732 440.68206787]
[195.68023682 425.68872070]
[196.12684631 410.69537354]
[188.77191162 397.74337769]
[196.91665649 384.17968750]
[197.36326599 369.18634033]
[194.91754150 354.38705444]
[189.67082214 340.33459473]
[184.42410278 326.28213501]
[179.17738342 312.22964478]
[173.82620239 298.21661377]
[168.37084961 284.24383545]
[162.91548157 270.27102661]
[157.25270081 256.38101196]
[151.38374329 242.57682800]
[145.51478577 228.77264404]
[139.64581299 214.96847534]
[125.44651794 216.92474365]
[111.21325684 215.13325500]
[97.91913605 209.71017456]
[86.47469330 201.02014160]
[77.66553497 189.65179443]
[72.09841156 176.37786865]
[70.15942383 162.10272217]
[71.98725891 147.80067444]
[77.46330261 134.44956970]
[86.21927643 122.96381378]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.45957184 49.86085129]
[65.79678345 35.97082138]
[49.55107880 29.48265457]
[43.15021515 13.56587696]
[50.10193634 -1.74791968]
[44.23297501 -15.55209637]
[38.26141357 -29.31220055]
[32.18758011 -43.02746582]
[26.11374474 -56.74273300]
[19.93797684 -70.41240692]
[13.66061497 -84.03572083]
[7.38325453 -97.65903473]
[1.10589409 -111.28234863]
[-10.70179939 -116.47283936]
[-15.64976311 -127.94896698]
[-11.58631420 -139.34260559]
[-17.66014862 -153.05786133]
[-23.99642563 -159.63732910]
[-23.72062111 -167.02284241]
[-29.58958244 -180.82702637]
[-35.45854187 -194.63119507]
[-41.32750320 -208.43537903]
[-47.19646454 -222.23954773]
[-61.73393250 -218.43431091]
[-76.67053986 -216.78637695]
[-91.68790436 -217.33088684]
[-106.46594238 -220.05622864]
[-120.68965149 -224.90432739]
[-134.05584717 -231.77182007]
[-146.27964783 -240.51234436]
[-157.10047913 -250.93959045]
[-166.28770447 -262.83129883]
[-173.64550781 -275.93399048]
[-179.01704407 -289.96838379]
[-182.28781128 -304.63534546]
[-183.38810730 -319.62225342]
[-182.29447937 -334.60964966]
[-179.03022766 -349.27807617]
[-173.66494751 -363.31484985]
[-166.31298828 -376.42083740]
[-157.13104248 -388.31661987]
[-146.31484985 -398.74868774]
[-134.09495544 -407.49462891]
[-120.73180389 -414.36807251]
[-106.51025391 -419.22250366]
[-91.73343658 -421.95443726]
[-76.71630859 -422.50561523]
[-61.77896881 -420.86434937]
[-47.23981094 -417.06555176]
[-33.40873337 -411.19027710]
[-20.58054543 -403.36367798]
[-9.02868366 -393.75262451]
[1.00062490 -382.56195068]
[9.29360485 -370.03024292]
[15.67349052 -356.42453003]
[20.00429344 -342.03488159]
[22.19370461 -327.16799927]
[22.19505501 -312.14077759]
[20.00831413 -297.27346802]
[15.68009663 -282.88305664]
[9.30265522 -269.27621460]
[1.01192689 -256.74298096]
[-9.01537132 -245.55053711]
[-20.56550598 -235.93740845]
[-33.39228821 -228.10850525]
[-27.52332687 -214.30433655]
[-21.65436554 -200.50015259]
[-15.78540421 -186.69598389]
[-9.91644382 -172.89179993]
[-3.94488096 -159.13169861]
[2.12895298 -145.41642761]
[16.84262848 -135.85220337]
[14.72920990 -117.55971527]
[21.00657082 -103.93639374]
[27.28393173 -90.31307983]
[33.56129074 -76.68976593]
[39.21549225 -71.93036652]
[39.82901001 -62.81656647]
[45.90284348 -49.10129929]
[51.97668076 -35.38603210]
[57.55939102 -30.54298401]
[58.03715134 -21.42105675]
[63.90611267 -7.61688042]
[76.41273499 -4.51624107]
[84.97779083 5.36919546]
[86.30496979 18.57711220]
[79.68681335 30.30803680]
[85.34960175 44.19806290]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[127.19205475 106.81680298]
[142.65042114 109.63131714]
[156.67845154 116.67694092]
[168.14529419 127.37656403]
[176.12918091 140.85888672]
[179.99143982 156.02935791]
[179.42764282 171.65907288]
[174.49156189 186.48428345]
[165.59013367 199.30859375]
[153.44999695 209.09951782]
[159.31895447 222.90368652]
[165.18791199 236.70787048]
[171.05686951 250.51203918]
[176.10092163 254.78628540]
[177.95141602 260.15963745]
[176.88829041 264.81567383]
[182.34364319 278.78848267]
[187.79899597 292.76126099]
[193.83517456 299.61709595]
[193.22985840 306.98294067]
[198.47657776 321.03540039]
[203.72329712 335.08786011]
[208.97001648 349.14035034]
[210.47387695 334.21591187]
[215.21754456 319.98574829]
[222.96954346 307.14416504]
[233.35165405 296.31771851]
[245.85728455 288.03466797]
[259.87628174 282.69915771]
[274.72460938 280.57150269]
[289.67782593 281.75555420]
[304.00625610 286.19351196]
[317.01086426 293.66882324]
[328.05706787 303.81680298]
[336.60592651 316.14227295]
[342.24032593 330.04382324]
[344.68533325 344.84323120]
[343.82165527 359.81832886]
[339.69143677 374.23849487]
[332.49621582 387.40014648]
[322.58703613 398.66107178]
[310.44738770 407.47180176]
[296.66961670 413.40249634]
[281.92596436 416.16372681]
[266.93579102 415.62081909]
[252.43051147 411.80023193]
[239.11785889 404.88839722]
[227.64741516 395.22256470]
[218.57881165 383.27432251]
[212.35661316 369.63293457]
[211.91001892 384.62628174]
[219.23300171 398.65072632]
[211.12019348 411.14196777]
[210.67358398 426.13531494]
[210.22697449 441.12866211]
[209.78038025 456.12200928]
[209.33377075 471.11538696]
[208.88716125 486.10873413]
[208.44055176 501.10208130]
[207.99395752 516.09539795]
[222.40646362 520.58782959]
[235.07186890 528.80310059]
[245.05029297 540.13153076]
[251.60125732 553.73254395]
[254.23866272 568.59680176]
[252.76678467 583.62133789]
[247.29484558 597.69116211]
[238.22889709 609.76226807]
[226.24169922 618.93884277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[21 192]
[22 191]
[23 164]
[24 163]
[25 162]
[26 161]
[27 159]
[28 158]
[29 157]
[30 154]
[31 153]
[32 152]
[33 151]
[44 141]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[53 131]
[54 130]
[55 128]
[56 127]
[57 126]
[58 124]
[59 123]
[60 122]
[61 121]
[64 119]
[65 118]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
