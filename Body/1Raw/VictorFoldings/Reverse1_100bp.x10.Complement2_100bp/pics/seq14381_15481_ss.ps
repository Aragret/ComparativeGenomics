%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[47.33202362 487.00070190]
[45.98880768 501.98709106]
[41.83341217 516.44836426]
[35.01604843 529.86181641]
[25.78316498 541.74249268]
[14.46852303 551.66094971]
[1.48113823 559.25860596]
[-12.70950222 564.26080322]
[-27.59041595 566.48675537]
[-42.62366486 565.85601807]
[-57.26581192 562.39129639]
[-70.98754883 556.21795654]
[-83.29284668 547.55908203]
[-93.73686981 536.72766113]
[-101.94207764 524.11535645]
[-107.61185455 510.17797852]
[-110.54125214 495.41943359]
[-110.62435913 480.37316895]
[-107.85818481 465.58316040]
[-102.34271240 451.58401489]
[-94.27733612 438.88180542]
[-83.95359802 427.93569946]
[-71.74471283 419.14141846]
[-58.09201050 412.81683350]
[-43.48903275 409.19061279]
[-28.46366501 408.39382935]
[-13.55906963 410.45526123]
[-8.73307228 396.25280762]
[-3.90707445 382.05035400]
[-7.13819981 367.51043701]
[4.62768459 356.93334961]
[-2.62884760 346.28570557]
[-2.42471242 333.20745850]
[5.38959122 322.47680664]
[18.14238167 318.14309692]
[23.17929840 304.01406860]
[28.21621513 289.88504028]
[33.25313187 275.75601196]
[29.16591072 258.68963623]
[43.29211426 246.87727356]
[48.11811066 232.67481995]
[52.94410706 218.47236633]
[57.77010727 204.26989746]
[54.53897858 189.72999573]
[66.30486298 179.15290833]
[61.96400452 162.14927673]
[75.91277313 150.12789917]
[80.52677917 135.85516357]
[85.14079285 121.58242798]
[89.75479889 107.30970001]
[94.04891968 92.93748474]
[98.02101898 78.47296143]
[101.99311829 64.00843811]
[105.85742188 49.51474380]
[109.61372375 34.99268341]
[113.37002563 20.47062492]
[117.12631989 5.94856548]
[119.90193176 -8.79239750]
[113.85934448 -23.41421890]
[123.05422211 -35.13188171]
[124.83668518 -50.02559662]
[126.61914825 -64.91931915]
[128.40161133 -79.81303406]
[130.18408203 -94.70674896]
[131.96655273 -109.60046387]
[133.74900818 -124.49418640]
[135.53147888 -139.38790894]
[133.97096252 -154.30650330]
[129.14495850 -168.50895691]
[124.31896210 -182.71141052]
[119.49296570 -196.91387939]
[114.66696930 -211.11633301]
[109.84096527 -225.31878662]
[104.11695099 -232.43731689]
[105.05056000 -239.76876831]
[100.43654633 -254.04148865]
[95.82254028 -268.31423950]
[91.20852661 -282.58697510]
[86.59452057 -296.85971069]
[71.66088104 -295.02038574]
[56.64904785 -296.04080200]
[42.10167694 -299.88406372]
[28.54465103 -306.41119385]
[16.46804810 -315.38626099]
[6.30843067 -326.48486328]
[-1.56693888 -339.30575562]
[-6.87337065 -353.38546753]
[-9.41903973 -368.21502686]
[-9.11192226 -383.25836182]
[-5.96312094 -397.97167969]
[-0.08646176 -411.82308960]
[8.30561733 -424.31185913]
[18.90974617 -434.98654175]
[31.34259605 -443.46127319]
[45.15472412 -449.42965698]
[59.84683228 -452.67596436]
[74.88780975 -453.08282471]
[89.73393250 -450.63555908]
[103.84851837 -445.42260742]
[116.72135162 -437.63241577]
[127.88706970 -427.54663086]
[136.94204712 -415.52981567]
[143.55894470 -402.01638794]
[147.49856567 -387.49481201]
[148.61851501 -372.49008179]
[146.87828064 -357.54455566]
[142.34078979 -343.19857788]
[135.17005920 -329.97067261]
[125.62531281 -318.33908081]
[114.05158234 -308.72421265]
[100.86725616 -301.47369385]
[105.48126221 -287.20095825]
[110.09526825 -272.92825317]
[114.70928192 -258.65551758]
[119.32328796 -244.38276672]
[124.04342651 -230.14477539]
[128.86941528 -215.94232178]
[133.69541931 -201.73986816]
[138.52142334 -187.53741455]
[143.34741211 -173.33496094]
[148.17341614 -159.13250732]
[150.15603638 -174.00090027]
[154.96299744 -188.20980835]
[162.41458130 -201.22802734]
[172.23220825 -212.56884766]
[184.04882812 -221.80828857]
[197.42268372 -228.60093689]
[211.85377502 -232.69284058]
[226.80258179 -233.93101501]
[241.71025085 -232.26916504]
[256.01940918 -227.76942444]
[269.19512939 -220.60003662]
[280.74484253 -211.02900696]
[290.23672485 -199.41418457]
[297.31591797 -186.18977356]
[301.71774292 -171.85018921]
[303.27767944 -156.93151855]
[301.93740845 -141.99151611]
[297.74697876 -127.58872986]
[290.86309814 -114.26160431]
[281.54312134 -102.50839233]
[270.13549805 -92.76849365]
[257.06665039 -85.40603638]
[242.82522583 -80.69628906]
[227.94363403 -78.81530762]
[212.97822571 -79.83342743]
[198.48849487 -83.71258545]
[185.01615906 -90.30774689]
[173.06489563 -99.37235260]
[163.08148193 -110.56752014]
[155.43919373 -123.47470093]
[150.42520142 -137.60543823]
[148.64273071 -122.71171570]
[146.86026001 -107.81800079]
[145.07780457 -92.92428589]
[143.29533386 -78.03056335]
[141.51286316 -63.13684845]
[139.73040771 -48.24313354]
[137.94793701 -33.34941483]
[144.11801147 -19.79289055]
[134.79565430 -7.00993109]
[145.44299316 -17.57563782]
[160.08975220 -20.81172752]
[174.19749451 -15.71546268]
[183.39474487 -3.86597514]
[184.83168030 11.06504154]
[178.06300354 24.45104980]
[165.18611145 32.14424896]
[150.19100952 31.76081657]
[137.72410583 23.41956520]
[131.64837646 9.70486641]
[127.89208221 24.22692490]
[124.13578033 38.74898529]
[120.37947845 53.27104568]
[121.74781036 60.53392792]
[116.45764160 67.98052979]
[112.48554230 82.44505310]
[108.51345062 96.90958405]
[109.92667389 100.49777985]
[109.75141144 104.69148254]
[107.75270081 108.76728821]
[104.02753448 111.92370605]
[99.41352081 126.19644165]
[94.79951477 140.46917725]
[90.18550873 154.74191284]
[95.35265350 166.55982971]
[91.21580505 178.35263062]
[80.50731659 183.97891235]
[83.39325714 199.53468323]
[71.97256470 209.09590149]
[67.14656067 223.29835510]
[62.32056427 237.50080872]
[57.49456787 251.70326233]
[62.48519135 263.59680176]
[58.17322159 275.32672119]
[47.38216019 280.79293823]
[42.34524536 294.92196655]
[37.30832672 309.05099487]
[32.27141190 323.18002319]
[40.05736160 338.84521484]
[34.21973419 354.97708130]
[18.83013916 361.75933838]
[21.71607780 377.31512451]
[10.29538155 386.87634277]
[5.46938372 401.07879639]
[0.64338589 415.28125000]
[13.71830368 422.72726440]
[25.14760017 432.51336670]
[34.51811218 444.28576660]
[41.49110413 457.61895752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 206]
[28 205]
[29 204]
[31 202]
[35 199]
[36 198]
[37 197]
[38 196]
[40 193]
[41 192]
[42 191]
[43 190]
[45 188]
[47 185]
[48 184]
[49 183]
[50 182]
[51 178]
[52 177]
[53 176]
[54 174]
[55 173]
[56 172]
[57 171]
[58 161]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[73 116]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
