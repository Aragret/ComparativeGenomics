%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[128.70129395 406.71514893]
[127.80847168 391.74172974]
[126.91565704 376.76834106]
[126.02284241 361.79492188]
[125.13002777 346.82153320]
[124.23721313 331.84811401]
[123.34439087 316.87472534]
[120.43032837 313.09091187]
[119.86229706 307.43630981]
[122.65466309 301.44345093]
[122.20806122 286.45010376]
[121.76145172 271.45675659]
[121.31484985 256.46340942]
[120.86824036 241.47006226]
[119.08577728 226.57635498]
[108.88217163 215.72573853]
[113.59616852 200.62312317]
[110.49205780 185.94783020]
[100.28845215 175.09721375]
[105.00244904 159.99461365]
[92.41763306 152.11058044]
[89.06056976 137.27195740]
[97.41539764 124.12529755]
[94.31128693 109.44998932]
[84.06610870 120.40610504]
[69.10128784 119.37945557]
[60.44832230 107.12685394]
[64.48586273 92.68045807]
[78.23758698 86.68962097]
[91.56523132 93.56924438]
[89.56121826 78.70371246]
[87.55720520 63.83818436]
[85.55318451 48.97265625]
[80.72718811 34.77020264]
[73.25945282 21.76124954]
[65.79170990 8.75229740]
[58.32396698 -4.25665522]
[50.85622406 -17.26560783]
[47.91311264 -2.55717134]
[36.96519852 7.69676352]
[22.09578514 9.67173290]
[8.85079384 2.63112283]
[2.17027974 -10.79909420]
[4.54590940 -25.60977936]
[15.09163284 -36.27691269]
[29.87415504 -38.82191849]
[43.38080597 -32.29476547]
[37.51184464 -46.09894180]
[31.64288521 -59.90311813]
[25.67132187 -73.66322327]
[19.59748840 -87.37848663]
[3.16580701 -93.38008118]
[-3.70612097 -109.09922791]
[2.78656888 -124.61321259]
[-3.49079204 -138.23652649]
[-9.76815224 -151.85984802]
[-16.04551315 -165.48316956]
[-22.47904587 -171.96755981]
[-22.31323242 -179.35635376]
[-28.38706589 -193.07162476]
[-42.64305496 -188.36698914]
[-57.29153442 -185.08235168]
[-72.19142914 -183.24935913]
[-87.19924164 -182.88565063]
[-102.17044067 -183.99473572]
[-116.96083832 -186.56593323]
[-131.42797852 -190.57447815]
[-145.43255615 -195.98178101]
[-158.83967590 -202.73573303]
[-171.52021790 -210.77131653]
[-183.35206604 -220.01112366]
[-194.22126770 -230.36618042]
[-204.02314758 -241.73675537]
[-212.66329956 -254.01333618]
[-220.05851746 -267.07769775]
[-226.13757324 -280.80401611]
[-230.84193420 -295.06011963]
[-234.12626648 -309.70864868]
[-235.95896912 -324.60858154]
[-236.32237244 -339.61639404]
[-235.21298218 -354.58758545]
[-232.64149475 -369.37792969]
[-228.63265991 -383.84500122]
[-223.22508240 -397.84945679]
[-216.47085571 -411.25643921]
[-208.43502808 -423.93682861]
[-199.19497681 -435.76849365]
[-188.83970642 -446.63748169]
[-177.46893311 -456.43914795]
[-165.19216919 -465.07904053]
[-152.12765503 -472.47399902]
[-138.40121460 -478.55276489]
[-124.14504242 -483.25683594]
[-109.49642944 -486.54089355]
[-94.59646606 -488.37329102]
[-79.58863068 -488.73638916]
[-64.61748505 -487.62670898]
[-49.82719040 -485.05493164]
[-35.36020660 -481.04580688]
[-21.35585022 -475.63793945]
[-7.94900227 -468.88345337]
[4.73122263 -460.84738159]
[16.56270218 -451.60708618]
[27.43149185 -441.25158691]
[37.23291397 -429.88061523]
[45.87257767 -417.60369873]
[53.26726913 -404.53903198]
[59.34577942 -390.81246948]
[64.04956055 -376.55621338]
[67.33331299 -361.90753174]
[69.16542053 -347.00750732]
[69.52822876 -331.99969482]
[68.41824341 -317.02856445]
[65.84615326 -302.23831177]
[61.83673859 -287.77139282]
[56.42860794 -273.76715088]
[49.67384338 -260.36044312]
[41.63750458 -247.68038940]
[32.39698410 -235.84909058]
[22.04127312 -224.98049927]
[10.67011070 -215.17930603]
[-1.60699320 -206.53988647]
[-14.67179966 -199.14546204]
[-8.59796524 -185.43019104]
[-2.42219710 -171.76052856]
[3.85516357 -158.13720703]
[10.13252449 -144.51388550]
[16.40988541 -130.89057922]
[29.00327682 -128.16368103]
[37.85886383 -118.53763580]
[39.57870483 -105.37509155]
[33.31275558 -93.45232391]
[39.38658905 -79.73705292]
[44.96929932 -74.89400482]
[45.44706345 -65.77207947]
[51.31602097 -51.96790314]
[57.18498230 -38.16372299]
[63.86517715 -24.73334885]
[71.33291626 -11.72439671]
[78.80065918 1.28455615]
[86.26840210 14.29350853]
[93.73614502 27.30246162]
[92.78648376 12.33255291]
[95.14645386 -2.48063445]
[100.70092010 -16.41433334]
[109.17885590 -28.78868675]
[120.16660309 -38.99992371]
[133.12805176 -46.54981232]
[147.43078613 -51.06998062]
[162.37693787 -52.33987808]
[177.23724365 -50.29754639]
[191.28665161 -45.04262924]
[203.83964539 -36.83153152]
[214.28375244 -26.06488609]
[222.10937500 -13.26802540]
[226.93469238 0.93466580]
[228.52423096 15.85020542]
[226.80047607 30.75083160]
[221.84751892 44.90951157]
[213.90701294 57.63540649]
[203.36640930 68.30759430]
[190.74000549 76.40536499]
[176.64385986 81.53359222]
[161.76576233 83.44207001]
[146.83164978 82.03768158]
[132.57019043 77.38894653]
[119.67723846 69.72267914]
[108.78185272 59.41294861]
[100.41871643 46.96864319]
[102.42272949 61.83417130]
[104.42674255 76.69969940]
[106.43075562 91.56523132]
[108.98658752 106.34587860]
[112.09069824 121.02118683]
[125.05332184 129.65878296]
[127.99227142 144.58584595]
[119.67774963 156.89050293]
[130.10337830 168.79078674]
[125.16735840 182.84371948]
[128.27146912 197.51901245]
[138.69709778 209.41931152]
[133.76107788 223.47224426]
[139.10542297 209.45660400]
[149.94200134 199.08506775]
[164.17842102 194.36021423]
[179.06587219 196.19433594]
[191.72979736 204.23330688]
[199.72502136 216.92489624]
[201.50775146 231.81857300]
[196.73381042 246.03862000]
[186.32495117 256.83932495]
[172.29096985 262.13528442]
[157.34159851 260.90393066]
[144.36332703 253.38298035]
[135.86158752 241.02345276]
[136.30819702 256.01681519]
[136.75480652 271.01016235]
[137.20141602 286.00350952]
[137.64801025 300.99685669]
[138.31779480 315.98190308]
[139.21061707 330.95529175]
[140.10343933 345.92871094]
[140.99624634 360.90209961]
[141.88906860 375.87551880]
[142.78187561 390.84893799]
[143.67469788 405.82232666]
[154.67124939 417.50375366]
[152.25205994 433.36334229]
[138.27291870 441.23501587]
[123.45742798 435.08029175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[7 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 195]
[15 182]
[17 180]
[18 179]
[20 177]
[23 174]
[24 173]
[30 172]
[31 171]
[32 170]
[33 169]
[34 142]
[35 141]
[36 140]
[37 139]
[38 138]
[47 137]
[48 136]
[49 135]
[50 133]
[51 132]
[54 128]
[55 127]
[56 126]
[57 125]
[59 124]
[60 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
