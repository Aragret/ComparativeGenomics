%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[262.56054688 476.21853638]
[274.91903687 467.63574219]
[268.84518433 453.92047119]
[262.77136230 440.20520020]
[256.69750977 426.48995972]
[250.62368774 412.77468872]
[235.91000366 403.21044922]
[238.02342224 384.91796875]
[231.74606323 371.29464722]
[219.39263916 362.97344971]
[220.64457703 347.20184326]
[213.86459351 333.82159424]
[206.59135437 320.70288086]
[199.31813049 307.58419800]
[192.04490662 294.46551514]
[184.77166748 281.34680176]
[177.49844360 268.22811890]
[170.22520447 255.10942078]
[155.88107300 251.26475525]
[148.31811523 238.06413269]
[152.44801331 223.04475403]
[145.17478943 209.92607117]
[137.90155029 196.80737305]
[130.62832642 183.68867493]
[123.35509491 170.56999207]
[116.08186340 157.45129395]
[108.80863953 144.33259583]
[107.81167603 159.29942322]
[100.49502563 172.39395142]
[88.27142334 181.08782959]
[73.50104523 183.70240784]
[59.03582764 179.73284912]
[47.66877365 169.94560242]
[41.59468460 156.23045349]
[41.98637009 141.23556519]
[48.76820374 127.85622406]
[60.63071823 118.67577362]
[75.28344727 115.46680450]
[89.89718628 118.84893036]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[70.24931335 69.61985779]
[65.55738831 55.14780045]
[72.35082245 41.94231415]
[67.52482605 27.73985863]
[62.59322739 13.57372379]
[57.55631256 -0.55530584]
[53.57880402 -3.93561935]
[51.50321198 -8.08835506]
[51.30527115 -12.15970230]
[52.62536240 -15.42921352]
[48.22436142 -29.76906013]
[43.82336426 -44.10890579]
[39.42236710 -58.44875336]
[37.03467560 -43.64001083]
[31.56072617 -29.67448425]
[23.24954987 -17.18751717]
[12.47924805 -6.74718189]
[-0.26020187 1.17155588]
[-14.38924026 6.20844650]
[-29.26509094 8.13434601]
[-44.21099854 6.86163712]
[-58.54703140 2.44822049]
[-71.62098694 -4.90512276]
[-82.83808899 -14.86386490]
[-91.68804169 -26.97494888]
[-97.76822662 -40.68740082]
[-100.80203247 -55.37739944]
[-100.65144348 -70.37664032]
[-97.32331848 -85.00276947]
[-90.96904755 -98.59038544]
[-81.87772369 -110.52134705]
[-70.46293640 -120.25286865]
[-57.24398041 -127.34223938]
[-42.82223129 -131.46693420]
[-27.85378075 -132.43931580]
[-13.01959705 -130.21514893]
[1.00546694 -124.89559937]
[13.58336258 -116.72267914]
[24.14188004 -106.06821442]
[32.20067596 -93.41689301]
[37.39419174 -79.34008789]
[38.95471191 -94.25868988]
[40.51523590 -109.17729187]
[42.07575989 -124.09590149]
[43.63628387 -139.01449585]
[45.19680405 -153.93310547]
[46.75732803 -168.85171509]
[37.08012390 -181.05784607]
[38.87524033 -196.16519165]
[50.57155228 -205.31570435]
[52.13207626 -220.23431396]
[37.83853149 -224.97863770]
[24.89928627 -232.68513489]
[13.91953087 -242.99333191]
[5.41280794 -255.42111206]
[-0.22300684 -269.38720703]
[-2.72431660 -284.23837280]
[-1.97413051 -299.28002930]
[1.99246383 -313.80862427]
[8.98994160 -327.14465332]
[18.69101906 -338.66433716]
[30.64195633 -347.82888794]
[44.28379059 -354.20968628]
[58.97846603 -357.50827026]
[74.03868103 -357.57034302]
[88.76005554 -354.39303589]
[102.45403290 -348.12493896]
[114.48012543 -339.05923462]
[124.27584839 -327.61990356]
[131.38304138 -314.34204102]
[135.46928406 -299.84661865]
[136.34344482 -284.81167603]
[133.96467590 -269.94036865]
[128.44418335 -255.92829895]
[120.04022217 -243.43080139]
[109.14582062 -233.03242493]
[96.27055359 -225.21952820]
[82.01661682 -220.35751343]
[67.05068207 -218.67378235]
[65.49015808 -203.75518799]
[75.03967285 -192.38230896]
[73.66960144 -177.23048401]
[61.67593384 -167.29118347]
[60.11540985 -152.37258911]
[58.55488586 -137.45397949]
[56.99436569 -122.53537750]
[55.43384171 -107.61676788]
[53.87331772 -92.69816589]
[52.31279373 -77.77956390]
[53.76221466 -62.84975433]
[58.16321182 -48.50990677]
[62.56420898 -34.17005920]
[66.96520996 -19.83021164]
[71.68534088 -5.59222221]
[76.72225952 8.53680706]
[81.92929840 13.78166485]
[81.72727966 22.91386032]
[86.55327606 37.11631775]
[99.98579407 43.44902039]
[105.08235931 57.78358078]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[121.92733002 137.05937195]
[129.20056152 150.17805481]
[136.47378540 163.29675293]
[143.74702454 176.41545105]
[151.02024841 189.53414917]
[158.29347229 202.65283203]
[165.56671143 215.77153015]
[180.49311829 220.22576904]
[187.68232727 233.63359070]
[183.34390259 247.83619690]
[190.61714172 260.95489502]
[197.89036560 274.07357788]
[205.16358948 287.19226074]
[212.43682861 300.31097412]
[219.71005249 313.42965698]
[226.98327637 326.54833984]
[233.56304932 313.06848145]
[248.17048645 309.65927124]
[260.03753662 318.83386230]
[260.41625977 333.82907104]
[249.02746582 343.59100342]
[234.26789856 340.92449951]
[247.07031250 350.22012329]
[245.36938477 365.01727295]
[251.64674377 378.64059448]
[263.45443726 383.83108521]
[268.40240479 395.30722046]
[264.33895874 406.70083618]
[270.41278076 420.41610718]
[276.48663330 434.13137817]
[282.56045532 447.84664917]
[288.63427734 461.56192017]
[303.29553223 458.17898560]
[318.33206177 457.63208008]
[333.20034790 459.94104004]
[347.36285400 465.02236938]
[360.30764771 472.69235229]
[371.56677246 482.67376709]
[380.73321533 494.60577393]
[387.47564697 508.05703735]
[391.55029297 522.54125977]
[392.80987549 537.53497314]
[391.20886230 552.49603271]
[386.80511475 566.88360596]
[379.75784302 580.17767334]
[370.32177734 591.89764404]
[358.83807373 601.61981201]
[345.72180176 608.99279785]
[331.44714355 613.74993896]
[316.53012085 615.71942139]
[301.50997925 614.82995605]
[286.92962646 611.11370850]
[273.31622314 604.70501709]
[261.16180420 595.83557129]
[250.90580750 584.82598877]
[242.91893005 572.07427979]
[237.48994446 558.04138184]
[234.81506348 543.23455811]
[234.99098206 528.18908691]
[238.01138306 513.44891357]
[243.76702881 499.54678345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[8 174]
[9 173]
[11 171]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[40 149]
[41 148]
[43 146]
[44 145]
[47 142]
[48 141]
[49 139]
[50 138]
[54 137]
[55 136]
[56 135]
[57 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
