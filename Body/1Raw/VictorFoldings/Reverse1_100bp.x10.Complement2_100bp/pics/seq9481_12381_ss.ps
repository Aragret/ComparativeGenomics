%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[92.79605865 669.93243408]
[84.88532257 657.11181641]
[80.02627563 642.85217285]
[78.46264648 627.86877441]
[80.27285767 612.91314697]
[85.36611176 598.73547363]
[93.48694611 586.04687500]
[104.22800446 575.48388672]
[117.05052948 567.57623291]
[131.31135559 562.72064209]
[129.75082397 547.80206299]
[128.19030762 532.88348389]
[126.62978363 517.96484375]
[124.95824432 503.05828857]
[123.17577362 488.16455078]
[121.39331055 473.27084351]
[119.61083984 458.37713623]
[104.60480499 452.38284302]
[94.61178589 439.56509399]
[92.43392944 423.36404419]
[98.75950623 408.18896484]
[111.94944000 398.21813965]
[109.94542694 383.35263062]
[107.94141388 368.48709106]
[91.78734589 362.53021240]
[80.81898499 349.14334106]
[78.12777710 331.95724487]
[84.54425812 315.69259644]
[98.38466644 304.86315918]
[95.93893433 290.06390381]
[88.66405487 303.18167114]
[75.50276947 310.37753296]
[60.53325272 309.42178345]
[48.39396286 300.61056519]
[42.84640121 286.67413330]
[45.60953140 271.93081665]
[55.82717514 260.94903564]
[70.33327484 257.13156128]
[84.63297272 261.66134644]
[94.29544067 273.13497925]
[93.84883118 258.14160156]
[93.40222931 243.14826965]
[92.95561981 228.15490723]
[90.15550232 224.28601074]
[89.75608063 218.61701965]
[92.72564697 212.70997620]
[92.72564697 197.70997620]
[92.72564697 182.70997620]
[92.72564697 167.70997620]
[92.72564697 152.70997620]
[92.72564697 137.70997620]
[92.72564697 122.70996857]
[92.61397552 107.71038818]
[90.83151245 92.81667328]
[87.50925446 78.18920898]
[84.18698883 63.56174850]
[80.86473083 48.93428802]
[77.54247284 34.30682755]
[74.22021484 19.67936897]
[59.63991165 15.05746555]
[49.39829636 3.83222103]
[46.17190552 -10.91419506]
[50.72940826 -25.20003128]
[61.75141907 -35.21905518]
[58.42915726 -49.84651566]
[53.47677612 -57.52191544]
[55.16804123 -64.71645355]
[52.06393051 -79.39175415]
[48.95982361 -94.06705475]
[45.85571289 -108.74236298]
[42.75160217 -123.41766357]
[38.62391281 -128.58232117]
[37.84154510 -134.21125793]
[39.78041458 -138.57586670]
[37.11462021 -153.33708191]
[34.44882202 -168.09829712]
[31.78302765 -182.85952759]
[21.71633339 -195.06494141]
[27.06857872 -208.96467590]
[17.00188446 -221.17010498]
[22.35412979 -235.06983948]
[19.68833351 -249.83105469]
[12.60956287 -236.60641479]
[-0.44312698 -229.21539307]
[-15.42521763 -229.94816589]
[-27.69434547 -238.57766724]
[-33.44878769 -252.42997742]
[-30.90546799 -267.21279907]
[-20.85246086 -278.34548950]
[-6.40480137 -282.37850952]
[7.96074724 -278.06213379]
[17.79297066 -266.73364258]
[9.44717789 -280.17456055]
[16.60845947 -293.23461914]
[15.93867397 -308.21966553]
[15.26888847 -323.20471191]
[0.87600416 -328.02230835]
[-10.80214310 -337.71691895]
[-18.18618011 -350.97738647]
[-20.27747726 -366.01037598]
[-16.79320145 -380.78280640]
[-8.20457458 -393.29678345]
[4.32686281 -401.85992432]
[19.10633659 -405.31414795]
[34.13504410 -403.19226074]
[47.38047791 -395.78128052]
[57.05130005 -384.08343506]
[61.83961105 -369.68075562]
[61.09783173 -354.52114868]
[54.92628098 -340.65475464]
[44.15961075 -329.95693970]
[30.25392723 -323.87448120]
[30.92371178 -308.88943481]
[31.59349823 -293.90441895]
[39.89138412 -281.53530884]
[32.77801132 -267.40341187]
[34.44955063 -252.49685669]
[37.11534500 -237.73562622]
[46.99136353 -226.58602905]
[41.82979584 -211.63047791]
[51.70581436 -200.48088074]
[46.54424667 -185.52531433]
[49.21004105 -170.76409912]
[51.87583542 -156.00288391]
[54.54163361 -141.24166870]
[57.42690277 -126.52177429]
[60.53101349 -111.84647369]
[63.63512421 -97.17116547]
[66.73923492 -82.49586487]
[69.84334564 -67.82056427]
[73.05661774 -53.16877747]
[76.37887573 -38.54131699]
[90.64739990 -34.26639938]
[100.92876434 -23.35083771]
[104.38887024 -8.65750504]
[100.00099182 5.89046097]
[88.84767151 16.35710907]
[92.16993713 30.98456955]
[95.49219513 45.61203003]
[98.81445312 60.23949051]
[102.13671112 74.86695099]
[105.45896912 89.49440765]
[110.02733612 75.20700073]
[119.65670776 63.70590591]
[132.91864014 56.69724655]
[147.84577942 55.22071457]
[162.22380066 59.49534607]
[173.91979980 68.88702393]
[181.19874573 82.00254822]
[182.98085022 96.89630890]
[179.00173950 111.35890961]
[169.85169983 123.24489594]
[156.88809204 130.79107666]
[142.03398132 132.87799072]
[127.49287415 129.19607544]
[115.42188263 120.29152679]
[107.61231232 107.48706055]
[110.86914825 116.02115631]
[107.72564697 122.70996857]
[107.72564697 137.70997620]
[107.72564697 152.70997620]
[107.72564697 167.70997620]
[107.72564697 182.70997620]
[107.72564697 197.70997620]
[107.72564697 212.70997620]
[107.94897461 227.70831299]
[108.39557648 242.70166016]
[108.84218597 257.69500732]
[109.28878784 272.68835449]
[110.73820496 287.61816406]
[113.18393707 302.41744995]
[125.64855957 305.79571533]
[135.87252808 313.60888672]
[142.35845947 324.66815186]
[144.17327881 337.31274414]
[141.08239746 349.65917969]
[133.57923889 359.88186646]
[122.80694580 366.48306274]
[124.81095886 381.34860229]
[126.81497192 396.21414185]
[140.01296997 400.84832764]
[149.87962341 410.66998291]
[154.52967834 423.72201538]
[153.10935974 437.43814087]
[145.95254517 449.14746094]
[134.50456238 456.59466553]
[136.28703308 471.48837280]
[138.06948853 486.38211060]
[139.85195923 501.27581787]
[143.97895813 509.42477417]
[141.54838562 516.40435791]
[143.10891724 531.32293701]
[144.66943359 546.24151611]
[146.22994995 561.16015625]
[161.18690491 562.95947266]
[175.36827087 568.04241943]
[188.06274414 576.15405273]
[198.63356018 586.88745117]
[206.55050659 599.70422363]
[211.41647339 613.96148682]
[212.98736572 628.94415283]
[211.18440247 643.90063477]
[206.09800720 658.08081055]
[197.98332214 670.77331543]
[187.24739075 681.34149170]
[174.42869568 689.25537109]
[160.17022705 694.11785889]
[145.18719482 695.68511963]
[130.23112488 693.87854004]
[116.05221558 688.78869629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[12 192]
[13 191]
[14 189]
[15 188]
[16 187]
[17 186]
[22 180]
[23 179]
[24 178]
[29 171]
[30 170]
[40 169]
[41 168]
[42 167]
[43 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 157]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[64 132]
[65 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[74 125]
[75 124]
[76 123]
[77 122]
[79 120]
[81 118]
[82 117]
[92 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
