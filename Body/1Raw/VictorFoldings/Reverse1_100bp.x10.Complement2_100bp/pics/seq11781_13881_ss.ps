%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[-4.80686903 494.53646851]
[1.51538885 508.25527954]
[3.71515059 523.19976807]
[1.61409163 538.15844727]
[-4.61746502 551.91870117]
[-14.47435474 563.36505127]
[-27.15752220 571.56951904]
[-41.63880157 575.86712646]
[-56.74426270 575.90936279]
[-71.24936676 571.69293213]
[-83.97825623 563.55950928]
[-93.89905548 552.16851807]
[-100.20752716 538.44342041]
[-102.39227295 523.49670410]
[-100.27619171 508.54013062]
[-94.03081512 494.78616333]
[-84.16242981 483.34973145]
[-71.47102356 475.15798950]
[-56.98543549 470.87493896]
[-41.87994003 470.84783936]
[-37.69292831 456.44406128]
[-38.84440613 449.14367676]
[-33.33487320 441.85787964]
[-28.93387413 427.51803589]
[-24.53287506 413.17816162]
[-20.13187790 398.83831787]
[-15.73087883 384.49847412]
[-22.80533409 377.06054688]
[-26.18040657 367.28073120]
[-25.18373299 356.90194702]
[-19.92843628 347.80328369]
[-11.30474377 341.66006470]
[-0.82980698 339.63534546]
[4.20710945 325.50631714]
[9.24402523 311.37728882]
[14.28094196 297.24826050]
[11.26665211 282.66186523]
[23.18870926 272.26113892]
[28.22562599 258.13211060]
[25.21133614 243.54570007]
[37.13339233 233.14495850]
[42.17031097 219.01593018]
[47.20722580 204.88690186]
[52.24414062 190.75787354]
[57.28105927 176.62884521]
[54.26676941 162.04243469]
[66.18882751 151.64170837]
[53.46578979 159.58679199]
[38.46604919 159.49848938]
[25.83743858 151.40415955]
[19.49306870 137.81192017]
[21.39881325 122.93347168]
[30.96415710 111.37906647]
[45.22517014 106.72896576]
[59.76292801 110.42404938]
[70.07274628 121.31935120]
[72.95999146 136.03910828]
[79.83940125 122.70968628]
[86.71881104 109.38025665]
[85.49601746 92.65060425]
[99.70967865 83.74285126]
[106.38987732 70.31247711]
[113.07006836 56.88210297]
[114.08992767 47.80478668]
[119.95100403 43.30261230]
[126.83042145 29.97318268]
[133.70983887 16.64375305]
[140.58924866 3.31432366]
[145.83596802 -10.73814774]
[149.26702881 -25.34046936]
[152.58927917 -39.96792984]
[155.91154480 -54.59539032]
[159.23381042 -69.22284698]
[162.55606079 -83.85031128]
[165.87832642 -98.47776794]
[159.67742920 -109.78758240]
[162.74568176 -121.90242767]
[172.90951538 -128.46163940]
[176.44918823 -143.03800964]
[179.98886108 -157.61437988]
[178.97291565 -166.69213867]
[183.69126892 -172.38063049]
[187.44757080 -186.90269470]
[191.20387268 -201.42475891]
[194.19863892 -216.12275696]
[196.42375183 -230.95680237]
[198.64888000 -245.79084778]
[196.82710266 -254.74176025]
[201.01913452 -260.82852173]
[203.46485901 -275.62780762]
[205.91058350 -290.42706299]
[208.35632324 -305.22634888]
[194.10876465 -310.02255249]
[180.81515503 -317.04223633]
[168.81980896 -326.10357666]
[158.43344116 -336.97183228]
[149.92507935 -349.36553955]
[143.51510620 -362.96365356]
[139.36958313 -377.41394043]
[137.59584045 -392.34210205]
[138.23986816 -407.36148071]
[141.28495789 -422.08300781]
[146.65225220 -436.12536621]
[154.20271301 -449.12487793]
[163.74076843 -460.74475098]
[175.01936340 -470.68405151]
[187.74633789 -478.68530273]
[201.59205627 -484.54125977]
[216.19787598 -488.10025024]
[231.18545532 -489.27008057]
[246.16659546 -488.02044678]
[260.75323486 -484.38369751]
[274.56756592 -478.45407104]
[287.25177002 -470.38513184]
[298.47723389 -460.38592529]
[307.95327759 -448.71539307]
[315.43438721 -435.67587280]
[320.72680664 -421.60510254]
[323.69342041 -406.86755371]
[324.25744629 -391.84497070]
[322.40423584 -376.92645264]
[318.18179321 -362.49847412]
[311.69949341 -348.93469238]
[303.12521362 -336.58648682]
[292.68112183 -325.77368164]
[280.63766479 -316.77636719]
[267.30685425 -309.82760620]
[253.03396606 -305.10733032]
[238.18869019 -302.73788452]
[223.15559387 -302.78060913]
[220.70985413 -287.98132324]
[218.26412964 -273.18206787]
[215.81840515 -258.38278198]
[213.48292542 -243.56571960]
[211.25779724 -228.73168945]
[209.03268433 -213.89764404]
[221.04295349 -222.88392639]
[236.02610779 -222.17337036]
[247.13206482 -212.09082031]
[249.28332520 -197.24589539]
[241.49635315 -184.42547607]
[227.33125305 -179.49089050]
[213.26412964 -184.69818115]
[205.72592163 -197.66845703]
[201.96961975 -183.14639282]
[198.21331787 -168.62432861]
[194.56523132 -154.07470703]
[191.02555847 -139.49833679]
[187.48588562 -124.92195892]
[193.32643127 -108.37339783]
[180.50578308 -95.15550995]
[177.18351746 -80.52805328]
[173.86126709 -65.90058899]
[170.53900146 -51.27313232]
[167.21675110 -36.64567184]
[163.89448547 -22.01821136]
[165.47845459 -14.79928780]
[160.41233826 -7.19847488]
[170.56307983 -18.24213791]
[183.84680176 -25.20938683]
[198.70297241 -27.28171539]
[213.38626099 -24.21566963]
[226.17173767 -16.37144470]
[235.55734253 -4.67057371]
[240.44047546 9.51233864]
[240.24746704 24.51109695]
[235.00100708 38.56366348]
[225.31742859 50.01915359]
[212.33435059 57.53178787]
[197.57701111 60.21899414]
[182.77909851 57.76507950]
[169.67904663 50.45832825]
[159.81584167 39.15712738]
[154.34819031 25.18913078]
[153.91867065 10.19373608]
[147.03926086 23.52316475]
[140.15985107 36.85259628]
[133.28044128 50.18202209]
[126.50044250 63.56229782]
[119.82025146 76.99267578]
[113.14005280 90.42304993]
[116.17401123 101.66744232]
[110.90979767 112.05634308]
[100.04824066 116.25966644]
[93.16883087 129.58909607]
[86.28942108 142.91851807]
[80.31785583 156.67863464]
[82.97187042 172.27563477]
[71.41008759 181.66575623]
[66.37316895 195.79479980]
[61.33625412 209.92382812]
[56.29933929 224.05285645]
[51.26242065 238.18188477]
[53.91643906 253.77890015]
[42.35465622 263.16900635]
[37.31773758 277.29803467]
[39.97175598 292.89505005]
[28.40997124 302.28518677]
[23.37305450 316.41421509]
[18.33613968 330.54324341]
[13.29922295 344.67227173]
[22.86074257 362.34304810]
[16.44303131 381.05981445]
[-1.39103198 388.89947510]
[-5.79202986 403.23931885]
[-10.19302845 417.57916260]
[-14.59402657 431.91900635]
[-18.99502373 446.25888062]
[-23.28914833 460.63107300]
[-27.47616005 475.03485107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 210]
[21 209]
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[33 201]
[34 200]
[35 199]
[36 198]
[38 196]
[39 195]
[41 193]
[42 192]
[43 191]
[44 190]
[45 189]
[47 187]
[57 186]
[58 185]
[59 184]
[61 181]
[62 180]
[63 179]
[65 178]
[66 177]
[67 176]
[68 175]
[69 158]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[78 149]
[79 148]
[80 147]
[82 146]
[83 145]
[84 144]
[85 136]
[86 135]
[87 134]
[89 133]
[90 132]
[91 131]
[92 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
