%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[9.98669147 653.88916016]
[-4.65310669 657.22204590]
[-19.56423950 658.97998047]
[-34.57775116 659.14294434]
[-49.52352905 657.70910645]
[-64.23222351 654.69476318]
[-78.53717041 650.13397217]
[-92.27629852 644.07855225]
[-105.29391479 636.59698486]
[-117.44252777 627.77410889]
[-128.58448792 617.70983887]
[-138.59353638 606.51831055]
[-147.35627747 594.32623291]
[-154.77342224 581.27178955]
[-160.76091003 567.50292969]
[-165.25091553 553.17559814]
[-168.19256592 538.45220947]
[-169.55250549 523.49951172]
[-169.31535339 508.48696899]
[-167.48379517 493.58471680]
[-164.07855225 478.96157837]
[-159.13824463 464.78323364]
[-152.71884155 451.21032715]
[-144.89306641 438.39669800]
[-135.74958801 426.48748779]
[-125.39203644 415.61767578]
[-113.93774414 405.91040039]
[-101.51651001 397.47564697]
[-88.26907349 390.40899658]
[-74.34553528 384.79052734]
[-59.90366745 380.68386841]
[-45.10710144 378.13558960]
[-30.12349319 377.17456055]
[-15.12261963 377.81167603]
[-12.89750290 362.97763062]
[-10.67238522 348.14358521]
[-8.44726849 333.30953979]
[-17.12704849 345.54315186]
[-28.75070381 355.02423096]
[-42.47911453 361.06829834]
[-57.32121277 363.23904419]
[-72.20553589 361.37976074]
[-86.05757141 355.62466431]
[-97.87732697 346.38922119]
[-106.81152344 334.34014893]
[-112.21520233 320.34729004]
[-113.69825745 305.42077637]
[-111.15363312 290.63818359]
[-104.76501465 277.06668091]
[-94.99362183 265.68600464]
[-82.54484558 257.31774902]
[-68.31737518 252.56597900]
[-53.33831024 251.77377319]
[-38.68899918 254.99832153]
[-25.42698669 262.00680542]
[-14.50966930 272.29330444]
[-6.72517920 285.11523438]
[-2.63548422 299.54696655]
[-2.53597188 314.54779053]
[4.14422274 301.11740112]
[10.82441711 287.68701172]
[17.50461197 274.25665283]
[24.18480682 260.82626343]
[30.86500168 247.39590454]
[37.54519653 233.96551514]
[44.22539139 220.53514099]
[50.90558624 207.10476685]
[57.58578110 193.67439270]
[57.75005722 186.28556824]
[64.46672058 180.09490967]
[70.33567810 166.29072571]
[75.16167450 152.08827209]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[110.45946503 43.26297379]
[115.07347107 28.99024200]
[113.97887421 23.88642693]
[114.86305237 19.32884598]
[117.18656921 15.97977066]
[120.22532654 14.19139862]
[125.47204590 0.13892698]
[130.71876526 -13.91354465]
[127.25067139 -31.99817276]
[141.21223450 -42.63027573]
[146.24914551 -56.75930405]
[142.51219177 -74.79029083]
[156.31390381 -85.62908173]
[156.11189270 -94.76127625]
[161.31892395 -100.00613403]
[166.35585022 -114.13516235]
[171.39276123 -128.26419067]
[175.57977295 -142.66798401]
[178.90203857 -157.29544067]
[182.22428894 -171.92289734]
[185.54655457 -186.55035400]
[172.01361084 -193.18032837]
[160.37481689 -202.75294495]
[151.25784302 -214.75199890]
[145.15432739 -228.53038025]
[142.39343262 -243.34504700]
[143.12406921 -258.39706421]
[147.30682373 -272.87466431]
[154.71612549 -285.99713135]
[164.95239258 -297.05676270]
[177.46360779 -305.45712280]
[191.57504272 -310.74523926]
[206.52571106 -312.63586426]
[221.50930786 -311.02703857]
[235.71781921 -306.00558472]
[248.38497925 -297.84228516]
[258.82766724 -286.97732544]
[266.48272705 -273.99670410]
[270.93731689 -259.60040283]
[271.95123291 -244.56481934]
[269.46975708 -229.70080566]
[263.62677002 -215.80995178]
[254.73730469 -203.64137268]
[243.28080750 -193.85130310]
[229.87510681 -186.96771240]
[215.24314880 -183.36181641]
[200.17401123 -183.22810364]
[196.85174561 -168.60063171]
[193.52949524 -153.97317505]
[190.20722961 -139.34571838]
[202.33776855 -148.16899109]
[217.33724976 -148.29237366]
[229.61126709 -139.66981506]
[234.58190918 -125.51732635]
[230.39523315 -111.11344147]
[218.61279297 -101.83045197]
[203.62911987 -101.13068390]
[191.03277588 -109.27513123]
[185.52178955 -123.22727966]
[180.48487854 -109.09825134]
[175.44795227 -94.96922302]
[170.51637268 -80.80308533]
[175.58010864 -69.81740570]
[171.67572021 -57.94561005]
[160.37818909 -51.72238922]
[155.34126282 -37.59335709]
[160.24087524 -26.53350449]
[156.16017151 -14.72115517]
[144.77124023 -8.66682625]
[139.52452087 5.38564539]
[134.27780151 19.43811607]
[129.34620667 33.60425186]
[124.73220062 47.87698364]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[94.49250793 151.59246826]
[89.36413574 156.91426086]
[84.53813171 171.11672974]
[96.81365204 162.49629211]
[111.74569702 161.07012939]
[125.43107605 167.21101379]
[134.29246521 179.31372070]
[136.01350403 194.21466064]
[130.14433289 208.01875305]
[118.21913910 217.11763000]
[103.35512543 219.13288879]
[89.43772125 213.53771973]
[80.10490417 201.79470825]
[77.79615021 186.97431946]
[71.01615906 200.35458374]
[64.33596039 213.78495789]
[57.65576553 227.21534729]
[50.97557068 240.64572144]
[44.29537582 254.07609558]
[37.61518097 267.50646973]
[30.93498802 280.93685913]
[24.25479317 294.36721802]
[17.57459831 307.79760742]
[10.89440441 321.22796631]
[6.38677549 335.53466797]
[4.16165829 350.36871338]
[1.93654120 365.20275879]
[-0.28857592 380.03680420]
[14.23903084 383.82897949]
[28.28124237 389.14392090]
[41.67894745 395.92132568]
[54.28034210 404.08450317]
[65.94264221 413.54086304]
[76.53369904 424.18328857]
[85.93351746 435.89123535]
[94.03558350 448.53198242]
[100.74810028 461.96231079]
[105.99500275 476.03009033]
[109.71684265 490.57586670]
[111.87145233 505.43487549]
[112.43441772 520.43872070]
[111.39935303 535.41741943]
[108.77799225 550.20117188]
[104.60003662 564.62255859]
[98.91281891 578.51818848]
[91.78079224 591.73052979]
[83.28475952 604.10992432]
[73.52098846 615.51611328]
[62.60011673 625.81982422]
[50.64587402 634.90435791]
[37.79372025 642.66668701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 187]
[35 186]
[36 185]
[37 184]
[59 183]
[60 182]
[61 181]
[62 180]
[63 179]
[64 178]
[65 177]
[66 176]
[67 175]
[68 174]
[70 173]
[71 162]
[72 161]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[79 153]
[80 152]
[81 151]
[85 150]
[86 149]
[87 148]
[89 145]
[90 144]
[92 141]
[94 140]
[95 139]
[96 138]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
