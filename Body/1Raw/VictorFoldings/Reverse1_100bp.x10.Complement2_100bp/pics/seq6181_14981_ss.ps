%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[93.91432953 618.37628174]
[82.51154327 608.55474854]
[73.24417877 596.69714355]
[66.46846008 583.25933838]
[62.44482422 568.75769043]
[61.32792664 553.74975586]
[63.16069794 538.81231689]
[67.87269592 524.51953125]
[75.28279877 511.42080688]
[85.10617828 500.01962280]
[96.96526337 490.75418091]
[110.40421295 483.98062134]
[124.90646362 479.95932007]
[123.79081726 465.00088501]
[115.12833405 452.88433838]
[121.81779480 438.54690552]
[120.70214844 423.58847046]
[119.58650208 408.63000488]
[118.47084808 393.67153931]
[116.46683502 378.80603027]
[113.58156586 364.08612061]
[110.69629669 349.36624146]
[107.81101990 334.64636230]
[104.92575073 319.92645264]
[96.63040161 332.42395020]
[82.27862549 336.78591919]
[68.43187714 331.01812744]
[61.42068863 317.75753784]
[64.45048523 303.06671143]
[76.13608551 293.66207886]
[91.13499451 293.84335327]
[102.59082794 303.52923584]
[101.25259399 288.58905029]
[90.39837646 274.79943848]
[98.28472137 258.15951538]
[96.72419739 243.24092102]
[95.16367340 228.32231140]
[93.60314941 213.40371704]
[92.04263306 198.48510742]
[83.39582062 210.74205017]
[69.23353577 215.68469238]
[54.83795929 211.46955872]
[45.57828522 199.66876221]
[44.90814590 184.68374634]
[53.07748032 172.10353088]
[67.03933716 166.62022400]
[81.58628082 170.27896118]
[91.29311371 181.71621704]
[91.51644135 166.71788025]
[91.73976898 151.71954346]
[91.96309662 136.72120667]
[92.18642426 121.72286987]
[92.40975189 106.72453308]
[89.37137604 99.25855255]
[92.74971008 91.50498962]
[93.19631958 76.51164246]
[93.64292908 61.51829147]
[94.08953094 46.52494431]
[94.53614044 31.53159332]
[87.21315002 17.50716972]
[95.32595825 5.01590919]
[95.77256775 -9.97744083]
[83.54548645 -22.48815346]
[84.13790894 -39.63352966]
[96.69512177 -50.82080841]
[96.91844940 -65.81914520]
[97.14177704 -80.81748199]
[97.36510468 -95.81581879]
[83.08377838 -104.14862823]
[74.99974823 -118.46449280]
[75.23699188 -134.80953979]
[83.63605499 -148.72398376]
[97.82346344 -156.45895386]
[97.82346344 -171.45895386]
[97.82346344 -186.45895386]
[97.82346344 -201.45895386]
[97.82346344 -216.45895386]
[97.37685394 -231.45231628]
[96.48403931 -246.42572021]
[95.59122467 -261.39910889]
[85.09729767 -276.53051758]
[93.55789948 -291.90533447]
[92.44225311 -306.86380005]
[77.88423920 -311.02188110]
[65.65019226 -319.89318848]
[57.20534897 -332.39138794]
[53.55295563 -346.99719238]
[55.11510849 -361.94314575]
[61.68407059 -375.42733765]
[72.44965363 -385.83074951]
[86.09910583 -391.91168213]
[84.98345947 -406.87014771]
[83.86781311 -421.82858276]
[82.75216675 -436.78704834]
[68.09927368 -440.60430908]
[55.48115921 -448.97460938]
[46.26654053 -460.98999023]
[41.45495224 -475.34713745]
[41.56831741 -490.48864746]
[46.59434128 -504.77215576]
[55.98783112 -516.64819336]
[68.72985840 -524.82861328]
[83.43826294 -528.42608643]
[98.51758575 -527.05029297]
[112.33213806 -520.85052490]
[123.38340759 -510.49929810]
[130.47265625 -497.11941528]
[132.83087158 -482.16223145]
[130.20227051 -467.25018311]
[122.87197876 -454.00082397]
[111.63513184 -443.85134888]
[97.71061707 -437.90267944]
[98.82626343 -422.94424438]
[99.94191742 -407.98577881]
[101.05756378 -393.02734375]
[115.45805359 -389.03845215]
[127.64778900 -380.34710693]
[136.14433289 -367.98657227]
[139.90629578 -353.43771362]
[138.46095276 -338.45169067]
[131.96354675 -324.83905029]
[121.18083191 -314.25106812]
[107.40070343 -307.97943115]
[108.51634979 -293.02099609]
[117.47470093 -284.89236450]
[118.52658844 -272.43936157]
[110.56462860 -262.29193115]
[111.45745087 -247.31852722]
[112.35026550 -232.34512329]
[114.35497284 -230.38571167]
[115.70432281 -227.51416016]
[116.04701233 -223.97608948]
[115.12703705 -220.13966370]
[112.82346344 -216.45895386]
[112.82346344 -201.45895386]
[112.82346344 -186.45895386]
[112.82346344 -171.45895386]
[112.82346344 -156.45895386]
[125.07529449 -150.42491150]
[133.57283020 -139.64898682]
[136.61299133 -126.19883728]
[133.54687500 -112.68672180]
[124.91723633 -101.76218414]
[112.36344147 -95.59249115]
[112.14011383 -80.59415436]
[111.91678619 -65.59581757]
[111.69345856 -50.59748077]
[121.87338257 -42.69820023]
[125.70201874 -30.19125748]
[121.56734467 -17.57718086]
[110.76591492 -9.53083515]
[110.31930542 5.46251488]
[117.67424011 18.41451263]
[109.52948761 31.97819901]
[109.08287811 46.97154999]
[108.63627625 61.96489716]
[108.18966675 76.95825195]
[107.74306488 91.95159912]
[107.40808868 106.94786072]
[107.18476105 121.94619751]
[106.96143341 136.94453430]
[106.73810577 151.94287109]
[106.51477814 166.94120789]
[106.29145050 181.93954468]
[106.96123505 196.92459106]
[108.52175903 211.84318542]
[110.08228302 226.76179504]
[111.64279938 241.68040466]
[113.20332336 256.59899902]
[122.71325684 265.31243896]
[123.70588684 277.77032471]
[116.19277954 287.25079346]
[117.53101349 302.19097900]
[119.64563751 317.04119873]
[122.53091431 331.76107788]
[125.41618347 346.48095703]
[128.30145264 361.20086670]
[131.18673706 375.92074585]
[138.70555115 362.94125366]
[152.37039185 356.75482178]
[167.08462524 359.66885376]
[177.36018372 370.59646606]
[179.36454773 385.46194458]
[172.35014343 398.72082520]
[158.93316650 405.42788696]
[144.11781311 403.08154297]
[133.42930603 392.55590820]
[134.54495239 407.51434326]
[135.66059875 422.47280884]
[136.77624512 437.43127441]
[145.51852417 450.61773682]
[138.74926758 463.88522339]
[139.86491394 478.84368896]
[154.80325317 480.66921997]
[169.09831238 485.37426758]
[182.20063782 492.77801514]
[193.60659790 502.59585571]
[202.87779236 514.45043945]
[209.65786743 527.88610840]
[213.68620300 542.38641357]
[214.80795288 557.39398193]
[212.98002625 572.33203125]
[208.27264404 586.62634277]
[200.86679077 599.72741699]
[191.04708862 611.13183594]
[179.19100952 620.40112305]
[165.75425720 627.17901611]
[151.25331116 631.20495605]
[136.24552917 632.32427979]
[121.30779266 630.49395752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 193]
[14 192]
[16 190]
[17 189]
[18 188]
[19 187]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[32 173]
[33 172]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[61 152]
[62 151]
[65 147]
[66 146]
[67 145]
[68 144]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 129]
[79 128]
[80 127]
[82 124]
[83 123]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
