%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[77.99379730 539.33880615]
[73.28012085 553.63446045]
[65.78494263 566.68847656]
[55.81517792 577.96624756]
[43.77908325 587.00604248]
[30.16952896 593.43756104]
[15.54381847 596.99755859]
[0.50086504 597.54022217]
[-14.34333134 595.04327393]
[-28.38091087 589.60900879]
[-41.03704071 581.45989990]
[-51.79346466 570.92974854]
[-60.20970917 558.44970703]
[-65.94113922 544.53082275]
[-68.75305176 529.74304199]
[-68.53030396 514.69195557]
[-65.28202057 499.99389648]
[-59.14120865 486.25070190]
[-50.35933304 474.02517700]
[-39.29600906 463.81793213]
[-26.40427017 456.04696655]
[-12.21202660 451.03048706]
[2.69955945 448.97390747]
[17.71986771 449.96145630]
[21.69196320 435.49691772]
[25.66405869 421.03240967]
[29.63615608 406.56787109]
[33.60825348 392.10336304]
[37.58034897 377.63882446]
[41.55244446 363.17431641]
[33.89431000 354.71740723]
[31.24208450 343.49771118]
[34.36724091 332.27597046]
[42.60483551 323.87103271]
[53.99105072 320.45187378]
[58.39205170 306.11203003]
[62.79304886 291.77218628]
[67.19404602 277.43234253]
[70.40731812 262.78054810]
[72.41133118 247.91502380]
[74.41534424 233.04948425]
[76.41935730 218.18395996]
[67.21269226 206.53179932]
[69.03327942 191.42749023]
[81.31756592 181.84970093]
[83.32157898 166.98417664]
[85.32559204 152.11863708]
[87.32960510 137.25311279]
[89.33361816 122.38758850]
[91.33763123 107.52205658]
[80.94950104 118.34272003]
[66.57061768 122.61446381]
[51.95959091 119.22065735]
[40.93570709 109.04844666]
[36.38058090 94.75680542]
[39.48491287 80.08155060]
[49.43724060 68.85875702]
[63.63604355 64.02202606]
[78.36978912 66.83567047]
[89.78712463 76.56421661]
[94.90348816 90.66375732]
[99.09049988 76.25997925]
[103.17016602 61.82542419]
[107.14226532 47.36090088]
[110.68193817 32.78452301]
[113.78604126 18.10922241]
[109.07204437 3.00661278]
[119.27565002 -7.84399605]
[122.37976074 -22.51929855]
[125.48387146 -37.19459915]
[128.58798218 -51.86990356]
[131.69209290 -66.54520416]
[134.68685913 -81.24320984]
[137.57214355 -95.96310425]
[140.45741272 -110.68299103]
[143.34268188 -125.40288544]
[128.91619873 -129.54507446]
[114.89919281 -134.91212463]
[101.39546204 -141.46427917]
[88.50498199 -149.15303040]
[76.32318878 -157.92144775]
[64.94026947 -167.70463562]
[54.44050598 -178.43014526]
[44.90163803 -190.01855469]
[36.39428329 -202.38409424]
[28.98143578 -215.43518066]
[22.71796989 -229.07521057]
[17.65026665 -243.20320129]
[13.81584072 -257.71453857]
[11.24308395 -272.50177002]
[9.95104313 -287.45541382]
[9.94928551 -302.46481323]
[11.23782444 -317.41876221]
[13.80711842 -332.20660400]
[17.63814545 -346.71884155]
[22.70254135 -360.84799194]
[28.96281052 -374.48950195]
[36.37260437 -387.54232788]
[44.87705994 -399.90985107]
[54.41321564 -411.50051880]
[64.91046906 -422.22845459]
[76.29109192 -432.01431274]
[88.47083282 -440.78558350]
[101.35951233 -448.47735596]
[114.86170959 -455.03268433]
[128.87745667 -460.40301514]
[143.30297852 -464.54858398]
[158.03146362 -467.43872070]
[172.95388794 -469.05200195]
[187.95976257 -469.37649536]
[202.93797302 -468.40982056]
[217.77764893 -466.15908813]
[232.36889648 -462.64099121]
[246.60369873 -457.88159180]
[260.37664795 -451.91610718]
[273.58578491 -444.78869629]
[286.13333130 -436.55215454]
[297.92636108 -427.26742554]
[308.87756348 -417.00329590]
[318.90585327 -405.83572388]
[327.93701172 -393.84738159]
[335.90414429 -381.12707520]
[342.74829102 -367.76898193]
[348.41873169 -353.87194824]
[352.87353516 -339.53890991]
[356.07971191 -324.87594604]
[358.01348877 -309.99166870]
[358.66058350 -294.99624634]
[358.01620483 -280.00070190]
[356.08511353 -265.11608887]
[352.88159180 -250.45256042]
[348.42935181 -236.11871338]
[342.76141357 -222.22065735]
[335.91967773 -208.86131287]
[327.95483398 -196.13957214]
[318.92584229 -184.14962769]
[308.89956665 -172.98023987]
[297.95022583 -162.71412659]
[286.15887451 -153.42727661]
[273.61282349 -145.18846130]
[260.40496826 -138.05867004]
[246.63307190 -132.09069824]
[232.39913940 -127.32872772]
[217.80851746 -123.80800629]
[202.96925354 -121.55461121]
[187.99122620 -120.58522034]
[172.98529053 -120.90701294]
[158.06257629 -122.51760864]
[155.17730713 -107.79772186]
[152.29203796 -93.07782745]
[149.40675354 -78.35794067]
[151.20495605 -71.18937683]
[146.36740112 -63.44109726]
[143.26329041 -48.76579285]
[140.15917969 -34.09049225]
[137.05506897 -19.41518784]
[133.95095825 -4.73988581]
[138.88697815 9.31304741]
[128.46134949 21.21333122]
[125.35723877 35.88863373]
[126.77151489 38.30895233]
[127.31229401 41.43532181]
[126.70584106 44.93783569]
[124.80279541 48.39369583]
[121.60678864 51.33299637]
[117.63468933 65.79752350]
[118.89472961 73.07997131]
[113.49427795 80.44699097]
[109.30726624 94.85076904]
[106.20316315 109.52606964]
[104.19914246 124.39160156]
[102.19512939 139.25712585]
[100.19111633 154.12265015]
[98.18710327 168.98818970]
[96.18309021 183.85371399]
[105.49258423 196.34255981]
[103.24845886 211.38977051]
[91.28488922 220.18797302]
[89.28087616 235.05351257]
[87.27686310 249.91903687]
[85.27285004 264.78457642]
[95.30998993 253.63755798]
[109.34542084 248.34541321]
[124.24357605 250.09039307]
[136.67617798 258.48266602]
[143.86573792 271.64739990]
[144.20611572 286.64355469]
[137.62124634 300.12091064]
[125.58221436 309.06863403]
[110.77857208 311.48776245]
[96.51749420 306.83789062]
[85.98493195 296.15774536]
[81.53388977 281.83334351]
[77.13289642 296.17318726]
[72.73189545 310.51303101]
[68.33090210 324.85287476]
[77.83915710 341.23907471]
[72.44321442 359.06591797]
[56.01696777 367.14639282]
[52.04487228 381.61093140]
[48.07277679 396.07543945]
[44.10068130 410.53997803]
[40.12858200 425.00448608]
[36.15648651 439.46902466]
[32.18439102 453.93353271]
[45.60252380 460.75546265]
[57.37253189 470.13906860]
[67.01243591 481.70007324]
[74.12748718 494.96508789]
[78.42633820 509.39093018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 205]
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[30 199]
[35 196]
[36 195]
[37 194]
[38 193]
[39 181]
[40 180]
[41 179]
[42 178]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[61 169]
[62 168]
[63 166]
[64 165]
[65 160]
[66 159]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[73 151]
[74 150]
[75 149]
[76 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
