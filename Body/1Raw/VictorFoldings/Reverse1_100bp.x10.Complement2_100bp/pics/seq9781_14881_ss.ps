%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[152.69540405 555.04565430]
[153.17080688 540.02465820]
[155.87977600 525.24224854]
[160.76177979 511.02874756]
[167.70776367 497.70166016]
[176.56254578 485.55874634]
[187.12831116 474.87124634]
[199.16900635 465.87796021]
[212.41564941 458.77978516]
[207.37873840 444.65075684]
[195.81695557 435.26065063]
[198.47096252 419.66363525]
[193.43405151 405.53460693]
[188.39714050 391.40557861]
[183.36021423 377.27655029]
[178.00903320 363.26351929]
[172.34625244 349.37347412]
[166.68345642 335.48345947]
[161.02067566 321.59344482]
[155.35789490 307.70339966]
[149.69509888 293.81338501]
[143.72354126 280.05328369]
[137.44618225 266.42996216]
[131.16882324 252.80664062]
[129.38566589 267.70028687]
[121.76898193 280.62258911]
[109.60227966 289.39593506]
[94.93588257 292.54183960]
[80.24133301 289.53018188]
[67.99491119 280.86846924]
[60.26036453 268.01635742]
[58.34109497 253.13964844]
[62.56053543 238.74533081]
[72.20763397 227.25910950]
[85.65669250 220.61659241]
[100.64129639 219.93717957]
[114.63628387 225.33535767]
[125.28416443 235.90281677]
[121.74449158 221.32644653]
[118.20481873 206.75007629]
[114.66514587 192.17369080]
[111.12547302 177.59732056]
[107.58580017 163.02095032]
[97.06365967 152.47894287]
[101.32590485 137.24267578]
[97.78623199 122.66630554]
[87.18966675 118.82969666]
[79.73001862 110.38219452]
[77.23395538 99.39235687]
[80.31269836 88.55132294]
[88.21234131 80.51377106]
[85.10823059 65.83846283]
[80.98054504 60.67380524]
[80.19817352 55.04486847]
[82.13704681 50.68025970]
[79.47125244 35.91904068]
[76.80545807 21.15782547]
[74.13966370 6.39660788]
[71.25438690 -8.32328320]
[68.15027618 -22.99858665]
[65.04616547 -37.67388916]
[54.62053680 -49.57417297]
[59.55656052 -63.62710571]
[49.13092804 -75.52738953]
[54.06695175 -89.58032227]
[50.96284485 -104.25562286]
[47.85873413 -118.93093109]
[35.23629761 -132.33822632]
[41.32257462 -148.79800415]
[38.00031662 -163.42546082]
[33.92064667 -177.86001587]
[29.09465027 -192.06246948]
[24.26865387 -206.26492310]
[19.44265556 -220.46737671]
[14.61665821 -234.66984558]
[9.79065990 -248.87229919]
[4.96466255 -263.07473755]
[-9.89809132 -260.77917480]
[-24.93366432 -261.09954834]
[-39.68514633 -264.02615356]
[-53.70425034 -269.47003174]
[-66.56495667 -277.26574707]
[-77.87643433 -287.17642212]
[-87.29495239 -298.90087891]
[-94.53428650 -312.08279419]
[-99.37444305 -326.32162476]
[-101.66833496 -341.18463135]
[-101.34625244 -356.22018433]
[-98.41798401 -370.97131348]
[-92.97251129 -384.98980713]
[-85.17532349 -397.84963989]
[-75.26336670 -409.16000366]
[-63.53785324 -418.57717896]
[-50.35510635 -425.81503296]
[-36.11573792 -430.65356445]
[-21.25246239 -432.94577026]
[-6.21696138 -432.62197876]
[8.53385448 -429.69204712]
[22.55172348 -424.24496460]
[35.41065979 -416.44631958]
[46.71989441 -406.53308105]
[56.13575363 -394.80651855]
[63.37209702 -381.62292480]
[68.20902252 -367.38302612]
[70.49954224 -352.51947021]
[70.17404938 -337.48400879]
[67.24243164 -322.73355103]
[61.79378510 -308.71627808]
[53.99367905 -295.85824585]
[44.07915497 -284.55010986]
[32.35150528 -275.13558960]
[19.16711807 -267.90075684]
[23.99311638 -253.69828796]
[28.81911278 -239.49583435]
[33.64511108 -225.29338074]
[38.47110748 -211.09092712]
[43.29710770 -196.88847351]
[48.12310410 -182.68601990]
[54.67441177 -196.17973328]
[68.31475830 -202.41999817]
[82.80796051 -198.55384827]
[91.52792358 -186.34884644]
[90.48799133 -171.38493347]
[80.16361237 -160.50341797]
[65.27495575 -158.67919922]
[52.62777710 -166.74772644]
[55.95003510 -152.12025452]
[66.01508331 -145.41046143]
[68.90261841 -133.25126648]
[62.53403473 -122.03504181]
[65.63814545 -107.35973358]
[68.74225616 -92.68443298]
[78.94586182 -81.83382416]
[74.23186493 -66.73121643]
[84.43547058 -55.88060760]
[79.72147369 -40.77799988]
[82.82557678 -26.10269547]
[85.92968750 -11.42739391]
[89.37281036 -8.11771679]
[90.77336884 -2.60995340]
[88.90087891 3.73081255]
[91.56667328 18.49202919]
[94.23246765 33.25324631]
[96.89826202 48.01446533]
[99.78353882 62.73435593]
[102.88764954 77.40966034]
[118.40065765 86.58069611]
[122.39205170 104.15426636]
[112.36260986 119.12663269]
[115.90228271 133.70300293]
[126.67760468 145.28759766]
[122.16217804 159.48127747]
[125.70185089 174.05764771]
[129.24151611 188.63401794]
[132.78118896 203.21040344]
[136.32086182 217.78677368]
[139.86053467 232.36314392]
[144.79212952 246.52928162]
[151.06948853 260.15258789]
[157.34684753 273.77590942]
[161.61007690 276.78790283]
[164.04788208 280.73889160]
[164.60826111 284.77633667]
[163.58512878 288.15060425]
[169.24790955 302.04061890]
[174.91070557 315.93063354]
[180.57348633 329.82067871]
[186.23626709 343.71069336]
[191.89906311 357.60073853]
[196.02354431 360.80007935]
[198.28248596 364.85598755]
[198.66203308 368.91442871]
[197.48924255 372.23962402]
[202.52616882 386.36865234]
[207.56307983 400.49768066]
[212.59999084 414.62670898]
[224.52204895 425.02743530]
[221.50776672 439.61383057]
[226.54467773 453.74288940]
[241.29425049 450.86056519]
[256.30868530 450.20886230]
[271.25253296 451.80230713]
[285.79193115 455.60534668]
[299.60211182 461.53295898]
[312.37451172 469.45278931]
[323.82382202 479.18783569]
[333.69421387 490.52066040]
[341.76522827 503.19805908]
[347.85650635 516.93682861]
[351.83203125 531.43005371]
[353.60293579 546.35388184]
[353.12966919 561.37500000]
[350.42279053 576.15777588]
[345.54281616 590.37200928]
[338.59872437 603.70007324]
[329.74566650 615.84423828]
[319.18142700 626.53320312]
[307.14202881 635.52819824]
[293.89639282 642.62829590]
[279.74044800 647.67480469]
[264.99047852 650.55499268]
[249.97595215 651.20458984]
[235.03233337 649.60900879]
[220.49345398 645.80389404]
[206.68412781 639.87426758]
[193.91285706 631.95263672]
[182.46495056 622.21594238]
[172.59616089 610.88177490]
[164.52696228 598.20318604]
[158.43762207 584.46356201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 179]
[10 178]
[12 176]
[13 175]
[14 174]
[15 173]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[22 160]
[23 159]
[24 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[45 150]
[46 149]
[51 146]
[52 145]
[55 144]
[56 143]
[57 142]
[58 141]
[59 138]
[60 137]
[61 136]
[63 134]
[65 132]
[66 131]
[67 130]
[69 127]
[70 126]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
