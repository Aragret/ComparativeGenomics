%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[107.93473816 711.82952881]
[96.26286316 702.38903809]
[85.55661774 691.86614990]
[75.91598511 680.35900879]
[67.43096924 667.97515869]
[60.18078613 654.83020020]
[54.23314667 641.04681396]
[49.64357376 626.75378418]
[46.45492172 612.08447266]
[44.69696426 597.17590332]
[44.38611603 582.16729736]
[45.52527618 567.19873047]
[48.10380936 552.40997314]
[52.09764481 537.93914795]
[57.46948242 523.92138672]
[64.16917419 510.48745728]
[72.13416290 497.76290894]
[81.29008484 485.86648560]
[91.55143738 474.90930176]
[102.82242584 464.99362183]
[114.99780273 456.21206665]
[127.96389008 448.64663696]
[141.59962463 442.36791992]
[155.77769470 437.43460083]
[152.23802185 422.85821533]
[148.69834900 408.28182983]
[145.15867615 393.70547485]
[134.63653564 383.16345215]
[138.89878845 367.92718506]
[135.35911560 353.35083008]
[124.83696747 342.80880737]
[129.09921265 327.57254028]
[125.55953979 312.99618530]
[112.77984619 300.96926880]
[118.11055756 283.34359741]
[114.35425568 268.82153320]
[110.59795380 254.29946899]
[106.84165192 239.77740479]
[103.08535004 225.25535583]
[99.32905579 210.73329163]
[95.18811035 225.15039062]
[85.90543365 236.93309021]
[72.85806274 244.33349609]
[57.98148727 246.25379944]
[43.48256683 242.40914917]
[31.51212883 233.36987305]
[23.84591293 220.47688293]
[21.62116051 205.64279175]
[25.16789818 191.06813049]
[33.95998764 178.91497803]
[46.69317627 170.98617554]
[61.47857285 168.45791626]
[76.12284851 171.70526123]
[88.45361328 180.24645996]
[96.64095306 192.81272888]
[95.97116852 177.82769775]
[95.30138397 162.84265137]
[94.63159943 147.85762024]
[93.96181488 132.87257385]
[80.31425476 127.00994873]
[70.55473328 115.81272125]
[66.61080170 101.49239349]
[69.26140594 86.87731171]
[77.98304749 74.85403442]
[91.05314636 67.79721069]
[90.38336182 52.81216812]
[89.71357727 37.82712936]
[89.04379272 22.84209061]
[88.37400818 7.85705233]
[87.48119354 -7.11635351]
[86.36553955 -22.07480621]
[85.24989319 -37.03326035]
[76.00360870 -46.02598190]
[75.38233185 -58.50788116]
[83.17438507 -67.76048279]
[82.28156281 -82.73388672]
[73.73657990 -96.04905701]
[80.70262146 -109.21429443]
[79.80980682 -124.18770599]
[78.91699219 -139.16110229]
[68.17639923 -128.69021606]
[53.17649078 -128.74302673]
[42.50989914 -139.28930664]
[42.28693008 -154.28764343]
[52.63531113 -165.14633179]
[67.62702179 -165.64500427]
[78.67372131 -155.49887085]
[79.12032318 -170.49221802]
[79.56693268 -185.48556519]
[80.01353455 -200.47891235]
[80.46014404 -215.47227478]
[65.79279327 -218.84199524]
[52.06479263 -225.00869751]
[39.80381775 -233.73536682]
[29.48113823 -244.68655396]
[21.49353981 -257.44134521]
[16.14803696 -271.50946045]
[13.65010166 -286.35015869]
[14.09574509 -301.39300537]
[17.46784019 -316.05981445]
[23.63676834 -329.78683472]
[32.36541748 -342.04638672]
[43.31827927 -352.36727905]
[56.07435226 -360.35281372]
[70.14333344 -365.69604492]
[84.98444366 -368.19158936]
[100.02722931 -367.74349976]
[114.69348907 -364.36904907]
[128.41949463 -358.19787598]
[140.67764282 -349.46725464]
[150.99678040 -338.51272583]
[158.98023987 -325.75534058]
[164.32119751 -311.68551636]
[166.81433105 -296.84399414]
[166.36381531 -281.80126953]
[162.98696899 -267.13555908]
[156.81359863 -253.41056824]
[148.08097839 -241.15382385]
[137.12478638 -230.83647156]
[124.36611938 -222.85505676]
[110.29541016 -217.51638794]
[95.45349121 -215.02566528]
[95.00688934 -200.03231812]
[94.56027985 -185.03895569]
[94.11367798 -170.04560852]
[93.66706848 -155.05226135]
[93.89039612 -140.05392456]
[94.78321075 -125.08052063]
[95.67603302 -110.10711670]
[104.15715027 -97.86293793]
[97.25497437 -83.62670135]
[98.14778900 -68.65329742]
[108.58663177 -54.54664993]
[100.20834351 -38.14891052]
[101.32399750 -23.19045639]
[102.43964386 -8.23200226]
[105.40972137 -4.49199247]
[106.06188202 1.15351140]
[103.35904694 7.18726683]
[104.02883148 22.17230606]
[104.69861603 37.15734482]
[105.36840057 52.14238358]
[106.03818512 67.12741852]
[119.68574524 72.99005127]
[129.44526672 84.18727875]
[133.38920593 98.50760651]
[130.73858643 113.12268829]
[122.01695251 125.14596558]
[108.94685364 132.20278931]
[109.61663818 147.18783569]
[110.28642273 162.17286682]
[110.95620728 177.15791321]
[111.62599182 192.14294434]
[113.85111237 206.97698975]
[117.60741425 221.49905396]
[121.36371613 236.02110291]
[125.12001038 250.54316711]
[128.87631226 265.06521606]
[132.63261414 279.58728027]
[143.32989502 286.79360962]
[146.15956116 298.96640015]
[140.13592529 309.45651245]
[143.67559814 324.03286743]
[154.45091248 335.61749268]
[149.93548584 349.81115723]
[153.47515869 364.38751221]
[164.25048828 375.97210693]
[159.73506165 390.16580200]
[163.27473450 404.74215698]
[166.81440735 419.31854248]
[170.35408020 433.89492798]
[185.21568298 431.77636719]
[200.21237183 431.10208130]
[215.20413208 431.87835693]
[230.05099487 434.09793091]
[244.61430359 437.74008179]
[258.75811768 442.77081299]
[272.35034180 449.14315796]
[285.26409912 456.79760742]
[297.37878418 465.66268921]
[308.58129883 475.65563965]
[318.76705933 486.68313599]
[327.84094238 498.64224243]
[335.71823120 511.42129517]
[342.32537842 524.90093994]
[347.60067749 538.95538330]
[351.49487305 553.45330811]
[353.97164917 568.25946045]
[355.00784302 583.23547363]
[354.59375000 598.24163818]
[352.73330688 613.13775635]
[349.44384766 627.78472900]
[344.75607300 642.04589844]
[338.71377563 655.78802490]
[331.37335205 668.88281250]
[322.80337524 681.20806885]
[313.08383179 692.64855957]
[302.30545044 703.09759521]
[290.56893921 712.45758057]
[277.98382568 720.64111328]
[264.66760254 727.57183838]
[250.74465942 733.18493652]
[236.34495544 737.42803955]
[221.60296631 740.26159668]
[206.65629578 741.65905762]
[191.64454651 741.60742188]
[176.70785522 740.10717773]
[161.98568726 737.17236328]
[147.61550903 732.83026123]
[133.73149109 727.12152100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 171]
[25 170]
[26 169]
[27 168]
[29 166]
[30 165]
[32 163]
[33 162]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 136]
[71 135]
[72 134]
[75 132]
[76 131]
[78 129]
[79 128]
[80 127]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
