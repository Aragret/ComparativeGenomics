%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[119.34635162 696.94573975]
[109.93466187 708.77416992]
[97.45367432 717.30157471]
[83.01320648 721.76971436]
[67.89727783 721.78125000]
[53.44999313 717.33520508]
[40.95599365 708.82690430]
[31.52623940 697.01287842]
[25.99921799 682.94360352]
[24.86638451 667.87023926]
[28.22847366 653.13293457]
[35.78652954 640.04217529]
[46.86849213 629.76202393]
[60.48896790 623.20660400]
[75.43682861 620.95867920]
[77.66194153 606.12463379]
[79.88706207 591.29058838]
[82.11217499 576.45654297]
[84.33729553 561.62249756]
[86.56240845 546.78851318]
[88.78752899 531.95446777]
[91.01264954 517.12042236]
[85.24892426 503.38616943]
[94.94775391 490.88644409]
[95.72908020 475.90679932]
[95.05929565 460.92178345]
[94.38951111 445.93673706]
[82.49505615 455.07577515]
[67.89788055 451.62286377]
[61.35848236 438.12338257]
[67.69745636 424.52862549]
[82.24195099 420.86013794]
[94.26953125 429.82073975]
[94.71614075 414.82739258]
[95.16274261 399.83404541]
[95.60935211 384.84069824]
[96.05595398 369.84735107]
[96.27928162 354.84902954]
[96.27928162 339.84902954]
[96.27928162 324.84902954]
[94.05801392 322.11071777]
[93.05271149 318.16046143]
[93.81855011 313.58151245]
[96.62921906 309.18298340]
[97.29900360 294.19793701]
[90.13772583 281.13787842]
[98.48352051 267.69696045]
[99.15330505 252.71191406]
[99.26496887 237.71232605]
[98.81836700 222.71897888]
[98.37175751 207.72563171]
[90.25894928 195.23435974]
[97.58193970 181.20994568]
[97.13533020 166.21659851]
[96.35401154 151.23695374]
[95.23835754 136.27850342]
[94.12271118 121.32004547]
[93.00706482 106.36159515]
[89.91053009 102.12774658]
[89.40657043 96.46035767]
[92.08766174 90.94232178]
[83.74186707 77.50140381]
[90.90315247 64.44133759]
[90.23336029 49.45629883]
[89.56357574 34.47126007]
[86.05410004 26.03791237]
[88.99705505 19.25847244]
[88.55045319 4.26512289]
[77.32925415 -6.53869486]
[77.08992004 -21.75044632]
[87.45885468 -32.38156128]
[87.01225281 -47.37491226]
[86.56564331 -62.36826324]
[86.11904144 -77.36161041]
[85.56082916 -92.35121918]
[77.21503448 -105.79214478]
[84.37631989 -118.85221100]
[83.70653534 -133.83724976]
[75.36074066 -147.27816772]
[82.52201843 -160.33822632]
[81.62920380 -175.31163025]
[80.51355743 -190.27009583]
[71.77127838 -203.45657349]
[78.54053497 -216.72406006]
[77.42488861 -231.68251038]
[68.68260956 -244.86898804]
[75.45186615 -258.13647461]
[74.33621979 -273.09494019]
[73.22056580 -288.05337524]
[72.10491943 -303.01184082]
[70.98927307 -317.97030640]
[69.87361908 -332.92874146]
[68.75797272 -347.88720703]
[67.64232635 -362.84564209]
[66.52667236 -377.80410767]
[51.99673462 -382.19104004]
[40.03511810 -391.53366089]
[32.25954056 -404.56842041]
[29.72158432 -419.53247070]
[32.76448441 -434.40206909]
[40.97671509 -447.16622925]
[53.24764252 -456.09869385]
[67.91771698 -459.99142456]
[83.00293732 -458.31793213]
[96.46315002 -451.30459595]
[106.47797394 -439.89987183]
[111.69298553 -425.64614868]
[111.40289307 -410.47116089]
[105.64693451 -396.42718506]
[95.20355225 -385.41354370]
[81.48513031 -378.91976929]
[82.60077667 -363.96130371]
[83.71642303 -349.00283813]
[84.83207703 -334.04440308]
[85.94772339 -319.08593750]
[87.06336975 -304.12750244]
[88.17902374 -289.16903687]
[89.29467010 -274.21057129]
[90.41031647 -259.25213623]
[99.07279968 -247.13558960]
[92.38333893 -232.79815674]
[93.49898529 -217.83970642]
[102.16146851 -205.72315979]
[95.47200775 -191.38574219]
[96.58765411 -176.42729187]
[99.55773926 -172.68727112]
[100.20989227 -167.04177856]
[97.50705719 -161.00801086]
[105.80494690 -148.63893127]
[98.69157410 -134.50703430]
[99.36135864 -119.52199554]
[107.65924072 -107.15290070]
[100.54586792 -93.02101135]
[103.98490143 -86.47923279]
[101.11238861 -77.80821991]
[101.55899811 -62.81486893]
[102.00559998 -47.82151794]
[102.45220947 -32.82816696]
[113.43553925 -22.83307076]
[114.10205078 -7.63404369]
[103.54380035 3.81851673]
[103.99040985 18.81186676]
[104.54861450 33.80147552]
[105.21839905 48.78651428]
[105.88819122 63.77155304]
[114.18607330 76.14064026]
[107.07270050 90.27253723]
[107.96551514 105.24594879]
[109.08116150 120.20439911]
[110.19681549 135.16285706]
[111.31246185 150.12130737]
[114.25285339 154.43421936]
[115.15467834 158.98834229]
[114.26743317 162.96676636]
[112.12867737 165.76998901]
[112.57528687 180.76333618]
[120.72003937 194.32702637]
[113.36510468 207.27902222]
[113.81171417 222.27236938]
[114.25832367 237.26571655]
[126.28752136 228.30477905]
[140.83166504 231.97463989]
[147.16935730 245.56999207]
[140.62867737 259.06887817]
[126.03118134 262.52038574]
[114.13834381 253.38169861]
[113.46855927 268.36672974]
[120.58193207 282.49862671]
[112.28404236 294.86770630]
[111.61425781 309.85275269]
[111.27928162 324.84902954]
[111.27928162 339.84902954]
[111.27928162 354.84902954]
[114.24884796 360.75607300]
[113.84941864 366.42504883]
[111.04930878 370.29394531]
[110.60269928 385.28732300]
[110.15608978 400.28067017]
[109.70948792 415.27401733]
[109.26287842 430.26736450]
[109.37454987 445.26693726]
[110.04433441 460.25198364]
[110.71411896 475.23703003]
[117.98794556 462.11865234]
[129.91943359 453.02801514]
[144.49792480 449.49707031]
[159.26667786 452.12078857]
[171.73689270 460.45706177]
[179.80714417 473.10107422]
[182.11743164 487.92208862]
[178.27844238 502.42251587]
[168.93710327 514.15875244]
[155.66758728 521.15307617]
[140.70606995 522.22674561]
[126.57380676 517.19891357]
[115.65233612 506.91683960]
[109.78179932 493.11157227]
[115.38636780 507.90679932]
[105.84668732 519.34552002]
[103.62157440 534.17956543]
[101.39645386 549.01361084]
[99.17134094 563.84765625]
[96.94622040 578.68170166]
[94.72110748 593.51574707]
[92.49598694 608.34979248]
[90.27086639 623.18383789]
[103.90134430 629.71844482]
[114.99900818 639.98168945]
[122.57705688 653.06085205]
[125.96166229 667.79296875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[24 197]
[25 183]
[26 182]
[27 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 173]
[39 172]
[40 171]
[44 170]
[45 169]
[47 167]
[48 166]
[49 160]
[50 159]
[51 158]
[53 156]
[54 155]
[55 151]
[56 150]
[57 149]
[58 148]
[61 147]
[63 145]
[64 144]
[65 143]
[67 142]
[68 141]
[71 138]
[72 137]
[73 136]
[74 135]
[75 133]
[77 131]
[78 130]
[80 128]
[81 125]
[82 124]
[84 122]
[85 121]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
