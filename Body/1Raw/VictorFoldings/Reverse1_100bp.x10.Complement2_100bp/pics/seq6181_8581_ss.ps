%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[28.02363396 564.25872803]
[17.85165024 575.29370117]
[6.83508444 585.48559570]
[-4.95641136 594.77001953]
[-17.44828606 603.08825684]
[-30.56156349 610.38775635]
[-44.21333313 616.62225342]
[-58.31728363 621.75244141]
[-72.78424072 625.74584961]
[-87.52275085 628.57714844]
[-102.43961334 630.22857666]
[-117.44053650 630.68963623]
[-132.43066406 629.95739746]
[-147.31521606 628.03649902]
[-162.00010681 624.93902588]
[-176.39248657 620.68469238]
[-190.40135193 615.30029297]
[-203.93814087 608.81988525]
[-216.91726685 601.28448486]
[-229.25666809 592.74169922]
[-240.87832642 583.24554443]
[-251.70878601 572.85601807]
[-261.67953491 561.63891602]
[-270.72756958 549.66503906]
[-278.79565430 537.01019287]
[-285.83282471 523.75427246]
[-291.79452515 509.98120117]
[-296.64312744 495.77798462]
[-300.34793091 481.23443604]
[-302.88552856 466.44253540]
[-304.23986816 451.49575806]
[-304.40240479 436.48864746]
[-303.37210083 421.51605225]
[-301.15548706 406.67263794]
[-297.76654053 392.05227661]
[-293.22671509 377.74737549]
[-287.56469727 363.84838867]
[-280.81631470 350.44320679]
[-273.02420044 337.61654663]
[-264.23764038 325.44952393]
[-254.51216125 314.01907349]
[-243.90928650 303.39743042]
[-232.49601746 293.65179443]
[-220.34454346 284.84375000]
[-207.53166199 277.02899170]
[-194.13841248 270.25692749]
[-180.24945068 264.57040405]
[-165.95259094 260.00531006]
[-151.33824158 256.59054565]
[-136.49876404 254.34770203]
[-121.52802277 253.29095459]
[-106.52063751 253.42698669]
[-91.57150269 254.75492859]
[-76.77513123 257.26641846]
[-62.22507095 260.94552612]
[-48.01331329 265.76901245]
[-34.22971344 271.70639038]
[-20.96141815 278.72012329]
[-12.92024422 266.05758667]
[-4.87907124 253.39506531]
[-4.58784199 238.50331116]
[9.34171295 231.00143433]
[17.38288689 218.33891296]
[25.42405891 205.67639160]
[33.46523285 193.01385498]
[41.50640488 180.35133362]
[41.30062866 162.80355835]
[57.69223785 154.41328430]
[65.54399872 141.63244629]
[73.39575195 128.85160828]
[81.24750519 116.07076263]
[89.09925842 103.28992462]
[75.00747681 108.43010712]
[60.35070038 105.23965454]
[49.67050171 94.70716858]
[46.27625275 80.09624481]
[51.21969986 65.93424225]
[62.96906281 56.60940933]
[77.88367462 55.01114655]
[91.34207153 61.63469696]
[99.17403412 74.42768097]
[98.95266724 89.42629242]
[108.44156647 77.80902863]
[117.93045807 66.19176483]
[127.41935730 54.57450104]
[136.90826416 42.95724106]
[146.39715576 31.33997536]
[149.13462830 15.75739670]
[163.17823792 10.79488850]
[172.66712952 -0.82237434]
[182.15603638 -12.43963814]
[190.47798157 -24.91943169]
[197.55508423 -38.14495850]
[204.63218689 -51.37048721]
[211.70928955 -64.59601593]
[218.78640747 -77.82154083]
[225.86351013 -91.04706573]
[213.59147644 -99.70599365]
[202.47657776 -109.80741119]
[192.68730164 -121.19818878]
[184.37207031 -133.70564270]
[177.65690613 -147.14015198]
[172.64364624 -161.29808044]
[169.40824890 -175.96476746]
[167.99980164 -190.91789246]
[168.43963623 -205.93075562]
[170.72109985 -220.77578735]
[174.80958557 -235.22790527]
[180.64311218 -249.06803894]
[188.13327026 -262.08639526]
[197.16648865 -274.08557129]
[207.60583496 -284.88369751]
[219.29306030 -294.31707764]
[232.05096436 -302.24270630]
[245.68615723 -308.54040527]
[259.99194336 -313.11471558]
[274.75143433 -315.89630127]
[289.74087524 -316.84301758]
[304.73303223 -315.94046021]
[319.50064087 -313.20233154]
[333.81982422 -308.67016602]
[347.47351074 -302.41262817]
[360.25469971 -294.52459717]
[371.96963501 -285.12567139]
[382.44073486 -274.35833740]
[391.50924683 -262.38577271]
[399.03768921 -249.38955688]
[404.91195679 -235.56665039]
[409.04296875 -221.12663269]
[411.36810303 -206.28839111]
[411.85214233 -191.27688599]
[410.48773193 -176.31967163]
[407.29556274 -161.64352417]
[402.32397461 -147.47090149]
[395.64840698 -134.01666260]
[387.37002563 -121.48478699]
[377.61434937 -110.06523895]
[366.52923584 -99.93114471]
[354.28274536 -91.23612213]
[341.06054688 -84.11199188]
[327.06307983 -78.66676331]
[312.50256348 -74.98297119]
[297.59967041 -73.11647034]
[282.58038330 -73.09555054]
[267.67236328 -74.92053223]
[253.10160828 -78.56374359]
[239.08903503 -83.96996307]
[232.01193237 -70.74443817]
[224.93482971 -57.51890945]
[217.85771179 -44.29338074]
[210.78060913 -31.06785393]
[203.70350647 -17.84232521]
[216.65684509 -25.40611458]
[231.55764771 -27.12834167]
[245.89486694 -22.71878242]
[257.25241089 -12.92052174]
[263.71636963 0.61525893]
[264.19741821 15.60754299]
[258.61453247 29.52986717]
[247.90846252 40.03607559]
[233.88342285 45.35569000]
[218.90286255 44.59225464]
[205.49127197 37.87443161]
[195.90873718 26.33428383]
[191.77008057 11.91653347]
[193.77330017 -2.95073938]
[184.28439331 8.66652393]
[174.79550171 20.28378677]
[172.73674011 35.03542328]
[158.01441956 40.82887268]
[148.52552795 52.44613647]
[139.03662109 64.06340027]
[129.54772949 75.68066406]
[120.05883026 87.29792786]
[110.56993103 98.91519165]
[101.88010406 111.14167786]
[94.02835083 123.92251587]
[86.17658997 136.70336914]
[78.32483673 149.48420715]
[70.47308350 162.26504517]
[72.70552826 174.96855164]
[65.90266418 185.45210266]
[54.16893005 188.39251709]
[46.12775803 201.05503845]
[38.08658218 213.71755981]
[30.04541016 226.38008118]
[22.00423813 239.04261780]
[21.13784981 254.84007263]
[7.78345346 261.43624878]
[-0.25771934 274.09875488]
[-8.29889202 286.76129150]
[3.69131041 295.78765869]
[14.92645931 305.73809814]
[25.33552170 316.54974365]
[34.85268402 328.15420532]
[43.41778183 340.47814941]
[50.97665405 353.44360352]
[57.48151779 366.96865845]
[62.89124298 380.96777344]
[67.17163086 395.35241699]
[70.29561615 410.03167725]
[72.24344635 424.91275024]
[73.00280762 439.90151978]
[72.56890106 454.90325928]
[70.94446564 469.82308960]
[68.13977814 484.56668091]
[64.17256165 499.04083252]
[59.06790924 513.15405273]
[52.85808563 526.81707764]
[45.58235931 539.94354248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 191]
[59 190]
[60 189]
[62 187]
[63 186]
[64 185]
[65 184]
[66 183]
[68 180]
[69 179]
[70 178]
[71 177]
[72 176]
[82 175]
[83 174]
[84 173]
[85 172]
[86 171]
[87 170]
[89 168]
[90 167]
[91 166]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
