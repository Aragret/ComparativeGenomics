%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[189.32554626 419.33535767]
[189.98608398 404.33840942]
[192.06921387 389.47216797]
[195.55604553 374.87124634]
[200.41500854 360.66787720]
[206.60209656 346.99072266]
[214.06127930 333.96362305]
[222.72502136 321.70455933]
[232.51483154 310.32458496]
[243.34205627 299.92669678]
[234.02717590 288.16943359]
[224.71229553 276.41220093]
[215.39739990 264.65493774]
[206.08251953 252.89768982]
[191.30348206 251.44325256]
[181.68937683 239.65243530]
[183.31512451 224.16065979]
[174.00024414 212.40341187]
[164.68536377 200.64616394]
[154.54713440 202.25469971]
[144.57809448 199.48818970]
[136.59498596 192.78125000]
[132.08142090 183.29277039]
[131.91235352 172.70605469]
[136.18528748 162.93028259]
[127.40468597 150.76882935]
[118.62408447 138.60736084]
[109.84348297 126.44591522]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[77.99506378 82.33469391]
[69.21446228 70.17323303]
[60.43385696 58.01177979]
[51.38385773 46.04944229]
[42.06897354 34.29219055]
[32.75408936 22.53494072]
[23.43920898 10.77768898]
[14.12432575 -0.97956222]
[4.80944252 -12.73681355]
[-4.50544024 -24.49406433]
[-13.82032299 -36.25131607]
[-23.13520622 -48.00856781]
[-20.12836266 -33.31302643]
[-21.14270782 -18.34736443]
[-26.10502052 -4.19195938]
[-34.65706253 8.13129425]
[-46.18145370 17.73277092]
[-59.84624481 23.91933060]
[-74.66495514 26.24436378]
[-89.56781769 24.54001999]
[-103.47897339 18.92934036]
[-115.39416504 9.81736183]
[-124.45323181 -2.13811111]
[-130.00218201 -16.07400322]
[-131.64044189 -30.98427200]
[-129.24974060 -45.79253006]
[-123.00266266 -59.42975998]
[-113.35018921 -70.91147614]
[-100.98914337 -79.40879822]
[-86.81188202 -84.30831146]
[-71.84186554 -85.25630188]
[-57.15980148 -82.18433380]
[-43.82559586 -75.31418610]
[-32.80111694 -65.14091492]
[-38.04783249 -79.19338989]
[-49.43677139 -85.24771881]
[-53.51747513 -97.06006622]
[-48.61786270 -108.11991882]
[-53.65477753 -122.24894714]
[-58.69169235 -136.37797546]
[-63.72861099 -150.50700378]
[-68.76552582 -164.63603210]
[-73.80244446 -178.76506042]
[-88.56380463 -175.93617249]
[-103.58399963 -175.39385986]
[-118.51094055 -177.15084839]
[-132.99470520 -181.16592407]
[-146.69578552 -187.34498596]
[-159.29299927 -195.54319763]
[-170.49107361 -205.56835938]
[-180.02746582 -217.18547058]
[-187.67866516 -230.12222290]
[-193.26530457 -244.07536316]
[-196.65641785 -258.71780396]
[-197.77253723 -273.70626831]
[-196.58746338 -288.68948364]
[-193.12901306 -303.31613159]
[-187.47822571 -317.24340820]
[-179.76757812 -330.14483643]
[-170.17782593 -341.71795654]
[-158.93376160 -351.69146729]
[-146.29895020 -359.83163452]
[-132.56958008 -365.94760132]
[-118.06748962 -369.89596558]
[-103.13262939 -371.58425903]
[-88.11508942 -370.97283936]
[-73.36689758 -368.07604980]
[-59.23377991 -362.96182251]
[-46.04703522 -355.75000000]
[-34.11577988 -346.60968018]
[-23.71969986 -335.75509644]
[-15.10249424 -323.44070435]
[-8.46616173 -309.95516968]
[-3.96626759 -295.61462402]
[-1.70829630 -280.75521851]
[-1.74517775 -265.72528076]
[-4.07604742 -250.87712097]
[-8.64626598 -236.55883789]
[-15.34870148 -223.10603333]
[-24.02623940 -210.83409119]
[-34.47546387 -200.03065491]
[-46.45143509 -190.94898987]
[-59.67341232 -183.80198669]
[-54.63649750 -169.67295837]
[-49.59957886 -155.54393005]
[-44.56266403 -141.41490173]
[-39.52574921 -127.28586578]
[-34.48883057 -113.15683746]
[-20.52726364 -102.52473450]
[-23.99536324 -84.44010925]
[-18.74864388 -70.38763428]
[-11.37795448 -57.32345200]
[-2.06307173 -45.56620026]
[7.25181103 -33.80894852]
[16.56669426 -22.05169678]
[25.88157654 -10.29444504]
[35.19646072 1.46280622]
[44.51134109 13.22005749]
[53.82622528 24.97730827]
[63.14110947 36.73456192]
[66.58264160 37.50149918]
[69.82368469 39.97348022]
[72.06690216 44.03811646]
[72.59531403 49.23117828]
[81.37591553 61.39263153]
[90.15651703 73.55408478]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[122.00493622 117.66530609]
[130.78553772 129.82676697]
[139.56614685 141.98822021]
[148.34674072 154.14967346]
[168.32354736 156.29597473]
[180.09967041 172.19648743]
[176.44261169 191.33128357]
[185.75749207 203.08853149]
[195.07237244 214.84577942]
[210.52529907 216.80668640]
[219.80442810 228.86289978]
[217.83978271 243.58280945]
[227.15466309 255.34005737]
[236.46954346 267.09732056]
[245.78442383 278.85455322]
[255.09930420 290.61181641]
[267.69812012 282.45001221]
[281.01568604 275.52279663]
[294.93145752 269.89285278]
[309.31939697 265.61120605]
[324.04916382 262.71661377]
[338.98736572 261.23532104]
[353.99877930 261.18069458]
[368.94738770 262.55328369]
[383.69781494 265.34060669]
[398.11651611 269.51745605]
[412.07287598 275.04595947]
[425.44052124 281.87612915]
[438.09838867 289.94601440]
[449.93182373 299.18261719]
[460.83364868 309.50222778]
[470.70520020 320.81140137]
[479.45700073 333.00775146]
[487.00982666 345.98077393]
[493.29528809 359.61300659]
[498.25643921 373.78097534]
[501.84835815 388.35641479]
[504.03851318 403.20727539]
[504.80706787 418.19906616]
[504.14706421 433.19604492]
[502.06448364 448.06234741]
[498.57818604 462.66339111]
[493.71975708 476.86694336]
[487.53314209 490.54431152]
[480.07443237 503.57168579]
[471.41116333 515.83105469]
[461.62176514 527.21142578]
[450.79492188 537.60968018]
[439.02865601 546.93170166]
[426.42956543 555.09301758]
[413.11172485 562.01977539]
[399.19573975 567.64923096]
[384.80767822 571.93035889]
[370.07778931 574.82440186]
[355.13952637 576.30517578]
[340.12811279 576.35919189]
[325.17956543 574.98608398]
[310.42922974 572.19824219]
[296.01068115 568.02087402]
[282.05453491 562.49182129]
[268.68713379 555.66119385]
[256.02957153 547.59082031]
[244.19647217 538.35382080]
[233.29499817 528.03381348]
[223.42387390 516.72424316]
[214.67250061 504.52758789]
[207.12014771 491.55429077]
[200.83518982 477.92184448]
[195.87455750 463.75366211]
[192.28317261 449.17813110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[17 149]
[18 148]
[19 147]
[25 144]
[26 143]
[27 142]
[28 141]
[29 140]
[31 138]
[32 137]
[33 136]
[34 135]
[35 131]
[36 130]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
[65 122]
[66 121]
[69 119]
[70 118]
[71 117]
[72 116]
[73 115]
[74 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
