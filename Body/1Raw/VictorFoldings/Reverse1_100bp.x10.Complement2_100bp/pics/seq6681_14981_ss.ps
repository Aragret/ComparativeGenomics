%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[110.98769379 539.57403564]
[105.47978973 525.60028076]
[101.76674652 511.04635620]
[99.90712738 496.14181519]
[99.93024445 481.12173462]
[101.83575439 466.22302246]
[105.59358215 451.68060303]
[111.14448547 437.72384644]
[118.40090179 424.57287598]
[127.24839020 412.43511963]
[137.54740906 401.50201416]
[149.13554382 391.94592285]
[161.83001709 383.91763306]
[175.43063354 377.54373169]
[170.81661987 363.27099609]
[166.20262146 348.99826050]
[161.58860779 334.72552490]
[156.97459412 320.45278931]
[145.69752502 310.72259521]
[148.81474304 295.21151733]
[144.20072937 280.93878174]
[139.58671570 266.66604614]
[134.97271729 252.39332581]
[130.35870361 238.12059021]
[127.40282440 236.19831848]
[125.23117065 232.74882507]
[124.55138397 228.15631104]
[125.87278748 223.10646057]
[115.04143524 212.88243103]
[118.84815216 197.52601624]
[114.87605286 183.06149292]
[110.90395355 168.59696960]
[106.93186188 154.13244629]
[102.95976257 139.66790771]
[98.98767090 125.20339203]
[95.01557159 110.73886871]
[91.08973694 125.21601105]
[81.98351288 137.13560486]
[69.04776764 144.72946167]
[54.20143890 146.87104797]
[39.64688492 143.24269104]
[27.54319000 134.38262939]
[19.68586731 121.60521698]
[17.24050331 106.80588531]
[20.56985283 92.18003845]
[29.18002510 79.89733124]
[41.79375458 71.77982330]
[56.53987122 69.03171539]
[71.23087311 72.06066132]
[83.68743134 80.41733551]
[92.06096649 92.86031342]
[91.16814423 77.88690948]
[82.05677795 68.75752258]
[81.62140656 56.26775742]
[89.55034637 47.13219452]
[88.88056183 32.14715576]
[88.21077728 17.16211891]
[87.54099274 2.17707944]
[86.87120819 -12.80795956]
[70.78099060 -15.34154415]
[55.56303406 -21.13420677]
[41.86963272 -29.93531227]
[30.28727722 -41.36531448]
[21.31148911 -54.93213272]
[15.32564926 -70.05233002]
[12.58460808 -86.07622528]
[13.20384693 -102.31575775]
[17.15460587 -118.07408905]
[24.26521492 -132.67547607]
[34.22855377 -145.49423218]
[46.61531448 -155.98161316]
[60.89250183 -163.68917847]
[76.44635773 -168.28808594]
[75.10812378 -183.22827148]
[73.76988983 -198.16845703]
[64.39074707 -207.02252197]
[63.58370209 -219.49377441]
[71.23712921 -228.86135864]
[70.12148285 -243.81982422]
[69.00582886 -258.77825928]
[54.15147018 -261.31472778]
[40.34423065 -267.32907104]
[28.38496971 -276.46774292]
[18.96622849 -288.19604492]
[12.63212013 -301.82955933]
[9.74689674 -316.57391357]
[10.47401142 -331.57125854]
[14.76686287 -345.94995117]
[22.37175179 -358.87548828]
[32.84287643 -369.59872437]
[45.56845474 -377.49932861]
[59.80648422 -382.12176514]
[58.69083405 -397.08023071]
[57.57518768 -412.03866577]
[56.45953751 -426.99713135]
[41.92959595 -431.38406372]
[29.96798134 -440.72665405]
[22.19240379 -453.76141357]
[19.65444756 -468.72549438]
[22.69734764 -483.59509277]
[30.90957832 -496.35925293]
[43.18050385 -505.29171753]
[57.85058212 -509.18441772]
[72.93580627 -507.51095581]
[86.39601898 -500.49758911]
[96.41083527 -489.09286499]
[101.62584686 -474.83917236]
[101.33575439 -459.66418457]
[95.57979584 -445.62020874]
[85.13641357 -434.60656738]
[71.41799164 -428.11276245]
[72.53363800 -413.15432739]
[73.64929199 -398.19586182]
[74.76493835 -383.23742676]
[89.53113556 -380.77819824]
[103.28791046 -374.85272217]
[115.23387909 -365.80145264]
[124.67201996 -354.14703369]
[131.05032349 -340.56420898]
[133.99412537 -325.84066772]
[133.32801819 -310.83145142]
[129.08639526 -296.40917969]
[121.51165009 -283.41342163]
[111.04034424 -272.60180664]
[98.27804565 -264.60580444]
[83.96428680 -259.89392090]
[85.07993317 -244.93547058]
[86.19557953 -229.97700500]
[96.84329224 -216.02734375]
[88.71007538 -199.50668335]
[90.04830933 -184.56649780]
[91.38654327 -169.62631226]
[105.10124207 -168.34469604]
[118.38265228 -164.67835999]
[130.81930542 -158.73954773]
[142.02569580 -150.71089172]
[151.65417480 -140.83988953]
[159.40577698 -129.43113708]
[165.03948975 -116.83706665]
[168.37974548 -103.44698334]
[169.32186890 -89.67504120]
[167.83541870 -75.94744110]
[163.96511841 -62.68925476]
[157.82949829 -50.31122208]
[149.61734009 -39.19707489]
[139.58177185 -29.69161034]
[128.03254700 -22.09000206]
[115.32644653 -16.62863159]
[101.85624695 -13.47774410]
[102.52603149 1.50729442]
[103.19581604 16.49233246]
[103.86560059 31.47737122]
[104.53538513 46.46240997]
[114.76304626 60.72291183]
[106.14155579 76.99409485]
[107.03437042 91.96749878]
[109.48009491 106.76676941]
[113.45219421 121.23129272]
[117.42428589 135.69581604]
[121.39638519 150.16033936]
[125.36848450 164.62486267]
[129.34057617 179.08938599]
[133.31266785 193.55390930]
[144.42813110 204.81256104]
[140.33731079 219.13436890]
[144.63143921 233.50657654]
[149.24543762 247.77931213]
[153.85945129 262.05206299]
[158.47346497 276.32479858]
[163.08747864 290.59750366]
[174.69458008 301.34860229]
[171.24732971 315.83880615]
[175.86134338 330.11154175]
[180.47534180 344.38424683]
[185.08935547 358.65698242]
[189.70336914 372.92971802]
[204.46136475 370.13601685]
[219.45314026 369.21405029]
[234.44224548 370.17837524]
[249.19227600 373.01379395]
[263.47064209 377.67556763]
[277.05209351 384.09017944]
[289.72247314 392.15643311]
[301.28192139 401.74716187]
[311.54815674 412.71109009]
[320.35928345 424.87527466]
[327.57626343 438.04791260]
[333.08535767 452.02120972]
[336.79962158 466.57482910]
[338.66049194 481.47918701]
[338.63864136 496.49926758]
[336.73437500 511.39816284]
[332.97778320 525.94091797]
[327.42807007 539.89813232]
[320.17276001 553.04968262]
[311.32626343 565.18817139]
[301.02816772 576.12219238]
[289.44085693 585.67926025]
[276.74703979 593.70861816]
[263.14697266 600.08361816]
[248.85511780 604.70385742]
[234.09689331 607.49627686]
[219.10504150 608.41699219]
[204.11601257 607.45141602]
[189.36621094 604.61474609]
[175.08825684 599.95178223]
[161.50733948 593.53607178]
[148.83763123 585.46868896]
[137.27897644 575.87701416]
[127.01366425 564.91223145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[28 165]
[30 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[51 156]
[52 155]
[55 153]
[56 152]
[57 151]
[58 150]
[59 149]
[73 132]
[74 131]
[75 130]
[78 128]
[79 127]
[80 126]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
