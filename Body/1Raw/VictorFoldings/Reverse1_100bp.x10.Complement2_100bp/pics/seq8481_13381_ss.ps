%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[91.40740204 444.59405518]
[92.48777771 429.47424316]
[98.67711639 415.63705444]
[109.22801971 404.75338745]
[122.86640930 398.13748169]
[121.30588531 383.21887207]
[119.74536896 368.30029297]
[118.18484497 353.38168335]
[116.62432098 338.46307373]
[102.55093384 333.52288818]
[91.97460175 322.91860962]
[87.03099060 308.71572876]
[88.75122833 293.71371460]
[96.84733582 280.89419556]
[109.75877380 272.82846069]
[108.19824982 257.90985107]
[99.17885590 246.05659485]
[105.43847656 231.52635193]
[103.87795258 216.60775757]
[102.31742859 201.68914795]
[100.64588928 186.78257751]
[98.86341858 171.88885498]
[97.08095551 156.99513245]
[94.55003357 154.54019165]
[93.08244324 150.73739624]
[93.29872894 146.09988403]
[95.56680298 141.39851379]
[86.90431976 129.28196716]
[93.59378052 114.94454193]
[85.24273682 106.82658386]
[84.46299744 95.20619965]
[91.65460968 86.04530334]
[90.76178741 71.07189941]
[89.86897278 56.09849548]
[88.97615814 41.12509155]
[88.08334351 26.15168381]
[87.19052887 11.17827797]
[86.29771423 -3.79512763]
[85.40489197 -18.76853371]
[76.29352570 -27.89792252]
[75.85815430 -40.38768768]
[83.78709412 -49.52324677]
[83.11730957 -64.50828552]
[82.44752502 -79.49332428]
[79.12526703 -94.12078857]
[73.25630951 -107.92496490]
[67.38734436 -121.72914124]
[61.51838303 -135.53330994]
[55.64942169 -149.33749390]
[49.78046417 -163.14166260]
[34.60581207 -163.06649780]
[20.59621620 -168.79138184]
[9.87473965 -179.41511536]
[4.05324602 -193.29667664]
[3.99012136 -208.30870056]
[9.66384602 -222.16345215]
[20.18101501 -232.76148987]
[14.31205368 -246.56567383]
[8.44309330 -260.36984253]
[4.27143764 -263.50741577]
[1.95234954 -267.52926636]
[1.51242733 -271.58160400]
[2.63557267 -274.92388916]
[-2.61114550 -288.97634888]
[-7.85786390 -303.02883911]
[-13.10458183 -317.08129883]
[-16.55007935 -319.72375488]
[-18.75384903 -322.99603271]
[-19.67036438 -326.43048096]
[-19.41066742 -329.59262085]
[-18.21795464 -332.12948608]
[-22.61895370 -346.46932983]
[-27.01995087 -360.80917358]
[-31.42094994 -375.14901733]
[-35.82194901 -389.48886108]
[-40.22294617 -403.82870483]
[-55.10558701 -401.71838379]
[-70.13512421 -401.96234131]
[-84.94144440 -404.55453491]
[-99.15991974 -409.43115234]
[-112.44041443 -416.47210693]
[-124.45587921 -425.50399780]
[-134.91043091 -436.30441284]
[-143.54660034 -448.60736084]
[-150.15173340 -462.10992432]
[-154.56317139 -476.47952271]
[-156.67225647 -491.36233521]
[-156.42707825 -506.39187622]
[-153.83366394 -521.19793701]
[-148.95585632 -535.41601562]
[-141.91381836 -548.69592285]
[-132.88093567 -560.71069336]
[-122.07965851 -571.16430664]
[-109.77598572 -579.79949951]
[-96.27289581 -586.40350342]
[-81.90291595 -590.81378174]
[-67.01992798 -592.92163086]
[-51.99043274 -592.67517090]
[-37.18454361 -590.08056641]
[-22.96687126 -585.20159912]
[-9.68754005 -578.15844727]
[2.32643604 -569.12457275]
[12.77920246 -558.32244873]
[21.41334915 -546.01806641]
[28.01625443 -532.51440430]
[32.42531204 -518.14404297]
[34.53195190 -503.26089478]
[34.28428650 -488.23144531]
[31.68842316 -473.42575073]
[26.80828285 -459.20849609]
[19.76404572 -445.92974854]
[10.72918224 -433.91650391]
[-0.07381780 -423.46463013]
[-12.37891960 -414.83151245]
[-25.88309860 -408.22970581]
[-21.48210144 -393.88986206]
[-17.08110237 -379.55001831]
[-12.68010426 -365.21017456]
[-8.27910614 -350.87033081]
[-3.87810826 -336.53048706]
[0.94788927 -322.32803345]
[6.19460726 -308.27554321]
[11.44132519 -294.22308350]
[16.68804359 -280.17059326]
[22.24727058 -266.23880005]
[28.11623001 -252.43463135]
[33.98519135 -238.63046265]
[48.91437531 -238.85115051]
[62.82836533 -233.32426453]
[73.59538269 -222.86309814]
[79.55300903 -209.03941345]
[79.76478577 -193.94740295]
[74.16732025 -179.88641357]
[63.58464050 -169.01063538]
[69.45359802 -155.20645142]
[75.32256317 -141.40228271]
[81.19152069 -127.59809875]
[87.06048584 -113.79392242]
[92.92944336 -99.98974609]
[93.79489136 -114.96475983]
[98.17185211 -129.31196594]
[105.81278229 -142.21995544]
[116.28555298 -152.95872498]
[128.99787903 -160.92092896]
[143.23080444 -165.65629578]
[158.17939758 -166.89698792]
[172.99826050 -164.57286072]
[186.84928894 -158.81533813]
[198.94914246 -149.95005798]
[208.61354065 -138.47836304]
[215.29588318 -125.04905701]
[218.61825562 -110.42163086]
[218.39279175 -95.42332458]
[214.63220215 -80.90237427]
[207.54920959 -67.68000031]
[197.54434204 -56.50400925]
[185.18347168 -48.00644302]
[171.16563416 -42.66788483]
[156.28361511 -40.79025650]
[141.37905884 -42.47974777]
[127.29489899 -47.64080429]
[114.82766724 -55.98155212]
[104.68243408 -67.03027344]
[97.43256378 -80.16310883]
[98.10234833 -65.17807007]
[98.77213287 -50.19303131]
[108.99979401 -35.93252945]
[100.37830353 -19.66134834]
[101.27111816 -4.68794346]
[102.16393280 10.28546238]
[103.05674744 25.25886726]
[103.94956207 40.23227310]
[104.84237671 55.20568085]
[105.73519897 70.17908478]
[106.62801361 85.15248871]
[116.22325897 98.91139984]
[108.55223083 113.82889557]
[117.29450989 127.01537323]
[110.52525330 140.28286743]
[111.97467041 155.21267700]
[113.75714111 170.10638428]
[115.53960419 185.00010681]
[119.66660309 193.14907837]
[117.23603058 200.12863159]
[118.79655457 215.04722595]
[120.35707855 229.96583557]
[129.48809814 242.88616943]
[123.11685944 256.34933472]
[124.67738342 271.26794434]
[138.97846985 276.48718262]
[149.55220032 287.35379028]
[154.33973694 301.67507935]
[152.44229126 316.59353638]
[144.28933716 329.15695190]
[131.54292297 336.90255737]
[133.10343933 351.82113647]
[134.66397095 366.73974609]
[136.22448730 381.65835571]
[137.78501892 396.57696533]
[152.49728394 400.22729492]
[165.07206726 408.69198608]
[173.99090576 420.94882202]
[178.17680359 435.51776123]
[177.12428284 450.63952637]
[170.96046448 464.48809814]
[160.42964172 475.39120483]
[146.80345154 482.03222656]
[131.72735596 483.60922241]
[117.02184296 479.93176270]
[104.46267700 471.44393921]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[15 189]
[16 188]
[18 186]
[19 185]
[20 184]
[21 182]
[22 181]
[23 180]
[27 179]
[29 177]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[38 169]
[39 168]
[42 166]
[43 165]
[44 164]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[57 127]
[58 126]
[59 125]
[63 124]
[64 123]
[65 122]
[66 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
