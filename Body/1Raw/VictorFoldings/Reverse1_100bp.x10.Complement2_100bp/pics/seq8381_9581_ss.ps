%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[78.43976593 629.56903076]
[70.37501526 642.38458252]
[58.58445740 651.88519287]
[44.34705353 657.04028320]
[29.20717430 657.29071045]
[14.80707359 652.60925293]
[2.70876956 643.50378418]
[-5.77540445 630.96197510]
[-9.72514820 616.34423828]
[-8.71202374 601.23620605]
[-2.84592748 587.27673340]
[7.23683071 575.97998047]
[20.44254875 568.57135010]
[35.33876801 565.85449219]
[37.56388855 551.02044678]
[39.78900528 536.18640137]
[41.68229675 521.30633545]
[43.24282074 506.38775635]
[44.80334091 491.46914673]
[32.49921417 500.04867554]
[17.70864677 497.55084229]
[8.90434837 485.40652466]
[11.12982082 470.57254028]
[23.11021233 461.54647827]
[37.98261261 463.49884033]
[47.22717285 475.31033325]
[50.11244583 460.59045410]
[52.99771881 445.87057495]
[55.88299179 431.15066528]
[58.76826477 416.43078613]
[50.27146530 404.25128174]
[52.98785400 389.28213501]
[65.82043457 380.45248413]
[68.70570374 365.73257446]
[71.59098053 351.01269531]
[74.47624969 336.29281616]
[61.99357986 328.10061646]
[53.57555771 315.71987915]
[50.53071594 301.01974487]
[53.35353470 286.23397827]
[61.64445114 273.62149048]
[74.16607666 265.12139893]
[89.02780151 262.05468750]
[91.91307831 247.33477783]
[94.79834747 232.61489868]
[96.69164276 217.73486328]
[97.58445740 202.76145935]
[98.47727203 187.78804016]
[99.37008667 172.81463623]
[100.26290131 157.84123230]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[80.27864838 30.08685493]
[76.73897552 15.51047897]
[73.19930267 0.93410343]
[69.65962982 -13.64227200]
[56.64360428 -26.66781044]
[62.23711395 -43.30149841]
[58.48081207 -57.82355881]
[54.72451401 -72.34561920]
[50.96821213 -86.86767578]
[47.38145447 -72.30281830]
[39.31528473 -59.65620041]
[27.62094688 -50.26245499]
[13.53256989 -45.11292648]
[-1.46306479 -44.75105286]
[-15.78343201 -49.21503067]
[-27.91726875 -58.03376007]
[-36.58406448 -70.27658081]
[-40.86919022 -84.65148163]
[-40.32042694 -99.64144135]
[-34.99568558 -113.66452789]
[-25.45689774 -125.24086761]
[-12.71071815 -133.14877319]
[1.89771962 -136.55369568]
[16.82675362 -135.09631348]
[30.50088692 -128.93043518]
[41.47705460 -118.70675659]
[48.59697723 -105.50401306]
[48.59697723 -120.50401306]
[48.59697723 -135.50401306]
[48.59697723 -150.50401306]
[48.59697723 -165.50401306]
[48.48531342 -180.50360107]
[48.26198578 -195.50193787]
[38.45417404 -211.08680725]
[47.59285736 -226.06851196]
[47.14625168 -241.06185913]
[39.00149918 -254.62554932]
[46.35643005 -267.57754517]
[45.90982437 -282.57089233]
[31.68663597 -287.93460083]
[20.60214043 -298.33663940]
[14.34664726 -312.19076538]
[13.87407207 -327.38436890]
[19.25647926 -341.60049438]
[29.67308998 -352.67129517]
[43.53544998 -358.90856934]
[58.72964478 -359.36114502]
[72.93867493 -353.96005249]
[83.99576569 -343.52886963]
[90.21479034 -329.65832520]
[90.64738464 -314.46353149]
[85.22760010 -300.26162720]
[74.78189850 -289.21826172]
[60.90317535 -283.01751709]
[61.34978104 -268.02413940]
[69.46259308 -255.53289795]
[62.13960266 -241.50846863]
[62.58620834 -226.51512146]
[71.17266083 -217.99458313]
[71.66744232 -205.50703430]
[63.26032257 -195.72526550]
[63.48365021 -180.72692871]
[66.72638702 -174.08566284]
[63.59697723 -165.50401306]
[63.59697723 -150.50401306]
[63.59697723 -135.50401306]
[63.59697723 -120.50401306]
[63.59697723 -105.50401306]
[65.49027252 -90.62397766]
[69.24657440 -76.10192108]
[73.00287628 -61.57986069]
[76.75917053 -47.05780029]
[87.01953125 -40.65064621]
[90.26781464 -28.58282280]
[84.23600006 -17.18194389]
[87.77567291 -2.60556889]
[91.31534576 11.97080612]
[94.85501862 26.54718208]
[104.76944733 15.29089069]
[119.75820923 15.87152481]
[128.77214050 27.86106300]
[125.16651154 42.42126465]
[111.59925842 48.81888962]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[119.47922516 126.34544373]
[129.35464478 115.05491638]
[142.60783386 108.02974701]
[157.49510193 106.19422150]
[172.05778503 109.78983307]
[184.37989807 118.34351349]
[192.84025574 130.72988892]
[196.32575989 145.31930542]
[194.37783813 160.19229126]
[187.25276184 173.39202881]
[175.88795471 183.18188477]
[161.77865601 188.27383423]
[146.78118896 187.99792480]
[132.86874390 182.39047241]
[121.87171173 172.18922424]
[115.23631287 158.73405457]
[114.34349060 173.70745850]
[113.45067596 188.68086243]
[112.55786133 203.65426636]
[111.66504669 218.62767029]
[121.66462708 207.44696045]
[136.09280396 203.34481812]
[150.47886658 207.59234619]
[160.36511230 218.87338257]
[162.68820190 233.69239807]
[156.72828674 247.45755005]
[144.33212280 255.90356445]
[129.34077454 256.41333008]
[116.39950562 248.82891846]
[109.51824188 235.50016785]
[106.63296509 250.22006226]
[103.74769592 264.93994141]
[116.35193634 273.39031982]
[124.73802948 285.98858643]
[127.65398407 300.79772949]
[124.68600464 315.55505371]
[116.31689453 328.01791382]
[103.84783173 336.30453491]
[89.19614410 339.17807007]
[86.31087494 353.89797974]
[83.42559814 368.61785889]
[80.54032898 383.33773804]
[89.08996582 396.35855103]
[85.95419312 411.24551392]
[73.48815155 419.31604004]
[70.60288239 434.03594971]
[67.71760559 448.75582886]
[64.83233643 463.47573853]
[61.94706345 478.19561768]
[59.72194672 493.02966309]
[58.16142273 507.94827271]
[56.60090256 522.86688232]
[58.72799301 527.63366699]
[58.80610657 532.27557373]
[57.22594070 536.03302002]
[54.62304688 538.41149902]
[52.39793015 553.24554443]
[50.17281342 568.07958984]
[63.61632156 575.04742432]
[74.06716156 586.00457764]
[80.39170837 599.76239014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 201]
[18 200]
[19 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[33 191]
[34 190]
[35 189]
[36 188]
[43 181]
[44 180]
[45 179]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[51 149]
[52 148]
[53 147]
[55 145]
[56 144]
[57 143]
[58 142]
[59 136]
[60 135]
[61 134]
[62 133]
[64 130]
[65 129]
[66 128]
[67 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 120]
[91 119]
[93 116]
[94 115]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
