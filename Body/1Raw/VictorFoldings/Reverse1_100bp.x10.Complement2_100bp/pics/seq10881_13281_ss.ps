%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[95.41061401 572.78448486]
[86.37836456 584.77508545]
[76.23101807 595.83789062]
[65.06330872 605.86975098]
[52.97951508 614.77691650]
[40.09245682 622.47619629]
[26.52246284 628.89575195]
[12.39623547 633.97564697]
[-2.15432954 637.66845703]
[-16.99337387 639.93963623]
[-31.98234558 640.76800537]
[-46.98129654 640.14587402]
[-61.85017395 638.07904053]
[-76.45015717 634.58673096]
[-90.64492035 629.70166016]
[-104.30193329 623.46936035]
[-117.29367828 615.94799805]
[-129.49885559 607.20794678]
[-140.80349731 597.33062744]
[-151.10205078 586.40838623]
[-160.29837036 574.54321289]
[-168.30657959 561.84582520]
[-175.05192566 548.43475342]
[-180.47140503 534.43530273]
[-184.51441956 519.97814941]
[-187.14323425 505.19827271]
[-188.33329773 490.23367310]
[-188.07348633 475.22406006]
[-186.36624146 460.30963135]
[-183.22749329 445.62957764]
[-178.68655396 431.32098389]
[-172.78581238 417.51748657]
[-165.58038330 404.34793091]
[-157.13752747 391.93527222]
[-147.53607178 380.39544678]
[-136.86567688 369.83618164]
[-125.22597504 360.35604858]
[-112.72563934 352.04360962]
[-99.48137665 344.97640991]
[-85.61685181 339.22048950]
[-71.26152802 334.82958984]
[-56.54942703 331.84469604]
[-41.61791992 330.29367065]
[-26.60642624 330.19097900]
[-11.65510273 331.53762817]
[3.09644914 334.32101440]
[17.51049614 338.51513672]
[31.45245361 344.08087158]
[38.33186722 330.75143433]
[45.21127701 317.42202759]
[52.09069061 304.09259033]
[58.97010422 290.76315308]
[63.79610062 276.56069946]
[66.46189880 261.79946899]
[69.12769318 247.03826904]
[71.68352509 232.25761414]
[74.12924957 217.45834351]
[76.57498169 202.65907288]
[79.02070618 187.85980225]
[71.96551514 171.79147339]
[83.76755524 157.65663147]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[99.84407043 54.94497299]
[100.84832764 39.97863007]
[100.40171814 24.98527908]
[99.95511627 9.99192905]
[99.50850677 -5.00142145]
[84.86935425 -12.68822002]
[76.15415192 -26.62883759]
[75.66130829 -42.96817780]
[83.43068695 -57.24377060]
[97.25855255 -65.60453796]
[96.58876801 -80.58957672]
[95.91898346 -95.57461548]
[95.24919891 -110.55965424]
[94.57941437 -125.54469299]
[91.34905243 -131.31326294]
[91.49494171 -136.99443054]
[94.11950684 -140.98449707]
[93.89617920 -155.98283386]
[93.67285156 -170.98118591]
[93.44952393 -185.97952271]
[93.22619629 -200.97785950]
[93.00286865 -215.97619629]
[92.22154999 -230.95582581]
[90.88331604 -245.89601135]
[89.54508209 -260.83621216]
[74.79378510 -264.19097900]
[61.80219269 -271.94168091]
[51.84308243 -283.32901001]
[45.89214706 -297.23733521]
[44.53240204 -312.30407715]
[47.89705658 -327.05313110]
[55.65647888 -340.03952026]
[67.05048370 -349.99099731]
[80.96279144 -355.93261719]
[96.03042603 -357.28225708]
[110.77721405 -353.90771484]
[123.75840759 -346.13958740]
[133.70225525 -334.73892212]
[139.63453674 -320.82263184]
[140.97409058 -305.75408936]
[137.58967590 -291.00958252]
[129.81285095 -278.03359985]
[118.40552521 -268.09738159]
[104.48526764 -262.17443848]
[105.82350159 -247.23425293]
[107.16173553 -232.29406738]
[118.63624573 -241.95509338]
[133.37303162 -239.15744019]
[140.50869751 -225.96340942]
[134.78308105 -212.09916687]
[120.41690826 -207.78491211]
[108.00120544 -216.19952393]
[108.22453308 -201.20118713]
[108.44786072 -186.20285034]
[108.67118835 -171.20451355]
[108.89451599 -156.20616150]
[109.11784363 -141.20782471]
[109.56445312 -126.21447754]
[110.23423767 -111.22943878]
[110.90402222 -96.24440002]
[111.57380676 -81.25936127]
[112.24359131 -66.27432251]
[124.75263977 -60.79336929]
[133.72286987 -50.40762329]
[137.36058044 -37.10663986]
[134.90086365 -23.47109604]
[126.76763916 -12.17211819]
[114.50186157 -5.44802713]
[114.94846344 9.54532242]
[115.39507294 24.53867340]
[115.84167480 39.53202438]
[123.31001282 26.52341080]
[135.37551880 17.61142921]
[150.00495911 14.29790592]
[164.73301697 17.14122581]
[177.07774353 25.66224098]
[184.95884705 38.42501068]
[187.04821777 53.27878189]
[182.99375916 67.72043610]
[173.47871399 79.31629944]
[160.10655212 86.11226654]
[145.13069153 86.96309662]
[131.07485962 81.72540283]
[120.30768585 71.28184509]
[114.64334106 57.39070129]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[98.60160065 159.88175964]
[105.62649536 170.69903564]
[103.46780396 183.00854492]
[93.81997681 190.30552673]
[91.37425232 205.10479736]
[88.92852020 219.90406799]
[86.48279572 234.70333862]
[88.17110443 243.68038940]
[83.88890839 249.70405579]
[81.22311401 264.46527100]
[78.55731964 279.22650146]
[87.65339661 267.29916382]
[99.70714569 258.37127686]
[113.76794434 253.14691162]
[128.72691345 252.03810120]
[143.40431213 255.13229370]
[156.64262390 262.18545532]
[167.39781189 272.64135742]
[174.82170105 285.67538452]
[178.32879639 300.25964355]
[177.64251709 315.24392700]
[172.81697083 329.44653320]
[164.23274231 341.74737549]
[152.56681824 351.17639160]
[138.73921204 356.98992920]
[123.84042358 358.72952271]
[109.04544067 356.25796509]
[95.52105713 349.77020264]
[84.33386230 339.77789307]
[76.36611938 327.06903076]
[72.24620819 312.64590454]
[72.29953003 297.64257812]
[65.42012024 310.97198486]
[58.54070663 324.30142212]
[51.66129684 337.63085938]
[44.78188324 350.96029663]
[57.39538193 359.10000610]
[69.16438293 368.41912842]
[79.97901154 378.83062744]
[89.73828125 390.23730469]
[98.35107422 402.53265381]
[105.73697662 415.60183716]
[111.82701874 429.32287598]
[116.56434631 443.56765747]
[119.90472412 458.20312500]
[121.81695557 473.09268188]
[122.28319550 488.09729004]
[121.29909515 503.07684326]
[118.87382507 517.89147949]
[115.03005219 532.40289307]
[109.80364227 546.47558594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 170]
[54 169]
[55 168]
[56 166]
[57 165]
[58 164]
[59 163]
[61 160]
[62 159]
[63 158]
[64 157]
[67 155]
[68 154]
[69 153]
[70 139]
[71 138]
[72 137]
[73 136]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
