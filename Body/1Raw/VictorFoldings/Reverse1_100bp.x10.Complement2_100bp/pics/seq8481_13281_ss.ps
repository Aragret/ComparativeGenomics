%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[89.16715240 580.56726074]
[76.94773102 571.84265137]
[65.72492218 561.86871338]
[55.62587357 550.75823975]
[46.76502609 538.63732910]
[39.24277878 525.64318848]
[33.14436340 511.92306519]
[28.53888130 497.63244629]
[25.47851372 482.93325806]
[23.99793816 467.99203491]
[24.11392975 452.97808838]
[25.82517624 438.06152344]
[29.11228561 423.41137695]
[33.93801498 409.19363403]
[40.24768066 395.56936646]
[47.96979523 382.69299316]
[57.01685715 370.71038818]
[67.28635406 359.75732422]
[78.66193390 349.95791626]
[91.01469421 341.42321777]
[104.20466614 334.24987793]
[118.08240509 328.51922607]
[132.49066162 324.29617310]
[129.82487488 309.53494263]
[127.15907288 294.77374268]
[114.81457520 286.51849365]
[111.90080261 271.58651733]
[120.64334869 258.69442749]
[117.97755432 243.93321228]
[115.31175995 229.17199707]
[112.64596558 214.41078186]
[108.36376953 208.38710022]
[110.05207825 199.41004944]
[107.60634613 184.61077881]
[105.16062164 169.81150818]
[102.71489716 155.01223755]
[100.15906525 140.23158264]
[97.49326324 125.47037506]
[94.60799408 110.75048065]
[91.28573608 96.12302399]
[87.74606323 81.54664612]
[84.20639038 66.97026825]
[80.66671753 52.39389420]
[77.12704468 37.81752014]
[73.58737183 23.24114418]
[70.48029327 20.20798874]
[68.68098450 16.69700241]
[68.17908478 13.17798424]
[68.81270599 10.06910324]
[70.29842377 7.69196510]
[67.63262177 -7.06925249]
[57.56592941 -19.27467155]
[62.91817474 -33.17441177]
[60.25238037 -47.93562698]
[44.76609421 -48.37833405]
[29.71364212 -52.02108765]
[15.74870968 -58.70328140]
[3.47725677 -68.13236237]
[-6.56877708 -79.89665222]
[-13.95453262 -93.48330688]
[-18.36105347 -108.30067444]
[-19.59906197 -123.70407104]
[-17.61708260 -139.02381897]
[-12.50358486 -153.59434509]
[-4.48303080 -166.78314209]
[6.09397125 -178.01818848]
[18.76599884 -186.81277466]
[32.98093796 -192.78657532]
[30.09566498 -207.50646973]
[27.21039200 -222.22636414]
[24.32511902 -236.94625854]
[14.07782078 -249.00044250]
[19.22252464 -262.97833252]
[16.33725357 -277.69821167]
[13.45198059 -292.41812134]
[-1.53682220 -291.43621826]
[-16.52812576 -292.37915039]
[-31.27576065 -295.23144531]
[-45.53755569 -299.94628906]
[-59.07931900 -306.44619751]
[-71.67868805 -314.62448120]
[-83.12876129 -324.34683228]
[-93.24151611 -335.45361328]
[-101.85090637 -347.76242065]
[-108.81555176 -361.07113647]
[-114.02108002 -375.16122437]
[-117.38201141 -389.80133057]
[-118.84317017 -404.75100708]
[-118.38054657 -419.76483154]
[-116.00174713 -434.59619141]
[-111.74583435 -449.00158691]
[-105.68268585 -462.74447632]
[-97.91187286 -475.59915161]
[-88.56098938 -487.35455322]
[-77.78359222 -497.81762695]
[-65.75666046 -506.81658936]
[-52.67768097 -514.20361328]
[-38.76142120 -519.85748291]
[-24.23640251 -523.68530273]
[-9.34113598 -525.62420654]
[5.67978239 -525.64239502]
[20.57969666 -523.73950195]
[35.11393738 -519.94689941]
[49.04383469 -514.32672119]
[62.14065552 -506.97134399]
[74.18933105 -498.00152588]
[84.99201202 -487.56454468]
[94.37131500 -475.83181763]
[102.17321014 -462.99597168]
[108.26959991 -449.26779175]
[112.56036377 -434.87274170]
[114.97504425 -420.04718018]
[115.47399902 -405.03454590]
[114.04902649 -390.08135986]
[110.72352600 -375.43316650]
[105.55210876 -361.33050537]
[98.61968994 -348.00497437]
[90.04011536 -335.67535400]
[79.95426178 -324.54415894]
[68.52774811 -314.79412842]
[55.94821167 -306.58538818]
[42.42221451 -300.05270386]
[28.17187119 -295.30337524]
[31.05714417 -280.58349609]
[33.94241714 -265.86361694]
[43.98334122 -254.86227417]
[39.04500961 -239.83152771]
[41.93028259 -225.11163330]
[44.81555557 -210.39173889]
[47.70082855 -195.67185974]
[62.24120712 -195.60247803]
[76.49187469 -192.68862915]
[89.90161133 -187.04100037]
[101.95133972 -178.87611389]
[112.17421722 -168.50794983]
[120.17372131 -156.33589172]
[125.63901520 -142.82936096]
[128.35705566 -128.50967407]
[128.22087097 -113.92999268]
[125.23376465 -99.65385437]
[119.50930786 -86.23348236]
[111.26696777 -74.18836212]
[100.82373810 -63.98517227]
[88.58190918 -56.01968765]
[75.01359558 -50.60142136]
[77.67938995 -35.84020615]
[87.55541229 -24.69060707]
[82.39384460 -9.73504734]
[85.05963898 5.02616930]
[88.16374969 19.70147133]
[91.70342255 34.27784729]
[95.24309540 48.85422134]
[98.78276825 63.43059921]
[102.32243347 78.00697327]
[105.86210632 92.58335114]
[109.60752869 96.25565338]
[111.02880859 101.76503754]
[109.28329468 107.64636993]
[113.41098785 112.81102753]
[114.19335175 118.43996429]
[112.25448608 122.80458069]
[114.92028046 137.56579590]
[119.52500153 145.45466614]
[117.51416779 152.56651306]
[119.95989227 167.36578369]
[122.40561676 182.16505432]
[124.85134888 196.96432495]
[127.40718079 211.74497986]
[130.07296753 226.50619507]
[132.73876953 241.26741028]
[135.40457153 256.02862549]
[148.10426331 265.04837036]
[150.59748840 280.05630493]
[141.92028809 292.10794067]
[144.58609009 306.86917114]
[147.25187683 321.63037109]
[162.22714233 320.54693604]
[177.23271179 321.06140137]
[192.09860229 323.16799927]
[206.65632629 326.84283447]
[220.74098206 332.04425049]
[234.19294739 338.71334839]
[246.85980225 346.77453613]
[258.59802246 356.13647461]
[269.27462769 366.69311523]
[278.76864624 378.32479858]
[286.97244263 390.89974976]
[293.79312134 404.27548218]
[299.15338135 418.30044556]
[302.99249268 432.81573486]
[305.26696777 447.65686035]
[305.95098877 462.65567017]
[305.03683472 477.64221191]
[302.53485107 492.44668579]
[298.47341919 506.90133667]
[292.89852905 520.84234619]
[285.87335205 534.11181641]
[277.47750854 546.55938721]
[267.80612183 558.04400635]
[256.96875000 568.43554688]
[245.08821106 577.61621094]
[232.29911804 585.48205566]
[218.74636841 591.94384766]
[204.58355713 596.92852783]
[189.97113037 600.37945557]
[175.07467651 602.25762939]
[160.06295776 602.54174805]
[145.10609436 601.22863770]
[130.37356567 598.33306885]
[116.03226471 593.88787842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 176]
[24 175]
[25 174]
[28 171]
[29 170]
[30 169]
[31 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 162]
[38 161]
[39 158]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[50 149]
[51 148]
[53 146]
[54 145]
[68 130]
[69 129]
[70 128]
[71 127]
[73 125]
[74 124]
[75 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
