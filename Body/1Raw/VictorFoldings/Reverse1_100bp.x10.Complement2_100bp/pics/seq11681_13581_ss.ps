%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[10.57300377 618.67340088]
[-4.46832895 618.00109863]
[-19.04109383 614.21588135]
[-32.50823212 607.48309326]
[-44.28102112 598.09722900]
[-53.84479904 586.46844482]
[-60.78148270 573.10522461]
[-64.78782654 558.59167480]
[-65.68869781 543.56231689]
[-63.44470978 528.67413330]
[-58.15395737 514.57794189]
[-50.04773331 501.89007568]
[-39.48040771 491.16506958]
[-26.91393280 482.87185669]
[-12.89766598 477.37295532]
[1.95566297 474.90875244]
[2.62544823 459.92370605]
[3.29523325 444.93865967]
[3.96501851 429.95364380]
[4.41162443 414.96029663]
[4.63495207 399.96194458]
[4.85827971 384.96362305]
[-2.06040764 398.27270508]
[-12.14872265 409.37341309]
[-24.73754501 417.52947998]
[-38.99190140 422.19995117]
[-53.96635437 423.07504272]
[-68.66770172 420.09671021]
[-82.12084961 413.46252441]
[-93.43350983 403.61245728]
[-101.85534668 391.19985962]
[-106.82777405 377.04800415]
[-108.02098083 362.09552002]
[-105.35583496 347.33419800]
[-99.00910187 333.74304199]
[-89.40174103 322.22357178]
[-77.17097473 313.53976440]
[-63.12801743 308.26763916]
[-48.20429230 306.75686646]
[-33.38964081 309.10760498]
[-19.66666031 315.16400146]
[-7.94554806 324.52432251]
[0.99627542 336.56771851]
[6.56573200 350.49542236]
[8.39338303 365.38879395]
[13.43029976 351.25976562]
[18.46721649 337.13073730]
[23.50413132 323.00170898]
[28.54104805 308.87268066]
[33.57796478 294.74365234]
[38.29809952 280.50567627]
[42.69909668 266.16583252]
[47.10009384 251.82597351]
[51.50109100 237.48612976]
[55.90209198 223.14628601]
[60.30308914 208.80642700]
[59.11037827 206.26959229]
[58.85067749 203.10743713]
[59.76719666 199.67300415]
[61.97096634 196.40069580]
[65.41646576 193.75825500]
[70.66317749 179.70578003]
[75.90989685 165.65332031]
[80.31089783 151.31346130]
[83.85057068 136.73709106]
[87.28163147 122.13476562]
[90.60388947 107.50730896]
[93.70800018 92.83200836]
[96.59326935 78.11211395]
[99.47854614 63.39222336]
[102.36381531 48.67233276]
[105.24909210 33.95244217]
[108.13436127 19.23254967]
[110.35948181 4.39850616]
[111.92000580 -10.52009869]
[113.48052979 -25.43870354]
[115.04104614 -40.35730743]
[105.36384583 -52.56343460]
[107.15895844 -67.67079163]
[118.85527039 -76.82130432]
[120.41579437 -91.73990631]
[121.97631836 -106.65850830]
[123.53684235 -121.57711792]
[125.09736633 -136.49572754]
[122.87773132 -145.35636902]
[126.79379272 -151.62423706]
[128.57626343 -166.51795959]
[129.91448975 -181.45814514]
[130.80731201 -196.43154907]
[131.70011902 -211.40495300]
[132.59294128 -226.37835693]
[133.48576355 -241.35176086]
[133.82073975 -256.34802246]
[133.59741211 -271.34637451]
[130.34057617 -279.88046265]
[133.48406982 -286.56927490]
[133.48406982 -301.56927490]
[133.48406982 -316.56927490]
[133.48406982 -331.56927490]
[119.71020508 -338.14523315]
[110.16027832 -350.05160522]
[106.73043823 -364.92437744]
[110.10168457 -379.81051636]
[119.60465240 -391.75439453]
[133.35252380 -398.38455200]
[148.61563110 -398.38455200]
[162.36349487 -391.75439453]
[171.86647034 -379.81051636]
[175.23771667 -364.92437744]
[171.80787659 -350.05160522]
[162.25794983 -338.14523315]
[148.48406982 -331.56927490]
[148.48406982 -316.56927490]
[148.48406982 -301.56927490]
[148.48406982 -286.56927490]
[148.59574890 -271.56970215]
[148.81907654 -256.57135010]
[160.98034668 -265.35220337]
[175.46824646 -261.46621704]
[181.60281372 -247.77799988]
[174.86189270 -234.37800598]
[160.21461487 -231.14421082]
[148.45916748 -240.45895386]
[147.56634521 -225.48553467]
[146.67353821 -210.51213074]
[145.78071594 -195.53872681]
[144.88789368 -180.56532288]
[146.64556885 -178.38157654]
[147.64413452 -175.37002563]
[147.56394958 -171.81629944]
[146.19461060 -168.11636353]
[143.46997070 -164.73548889]
[141.68751526 -149.84176636]
[140.01597595 -134.93519592]
[138.45544434 -120.01659393]
[136.89492798 -105.09799194]
[135.33439636 -90.17938232]
[133.77388000 -75.26078033]
[143.32339478 -63.88790131]
[141.95332336 -48.73608398]
[129.95965576 -38.79678345]
[128.39912415 -23.87817955]
[126.83860779 -8.95957565]
[125.27808380 5.95902920]
[137.58221436 -2.62050676]
[152.37278748 -0.12268570]
[161.17707825 12.02162647]
[158.95159912 26.85561752]
[146.97120667 35.88170242]
[132.09881592 33.92932892]
[122.85425568 22.11782265]
[119.96897888 36.83771515]
[117.08370972 51.55760574]
[114.19843292 66.27749634]
[111.31316376 80.99739075]
[108.42789459 95.71727753]
[110.29273224 100.61996460]
[109.27794647 106.21849060]
[105.23134613 110.82956696]
[101.90908813 125.45703125]
[103.06008148 134.51864624]
[98.42694092 140.27676392]
[94.88727570 154.85313416]
[107.14781952 146.21144104]
[122.14749146 146.31140137]
[134.29176331 155.11575317]
[139.05114746 169.34066772]
[134.65048218 183.68061829]
[122.73113251 192.78715515]
[107.73870850 193.26376343]
[95.26501465 184.93269348]
[89.96237183 170.90003967]
[84.71565247 184.95249939]
[79.46893311 199.00497437]
[74.64293671 213.20742798]
[70.24193573 227.54727173]
[65.84094238 241.88713074]
[61.43994141 256.22695923]
[57.03894424 270.56683350]
[52.63794708 284.90667725]
[53.80841064 289.99362183]
[52.99219131 294.56387329]
[50.71879196 297.94714355]
[47.70699310 299.78057861]
[42.67007828 313.90960693]
[37.63315964 328.03863525]
[32.59624481 342.16766357]
[27.55932808 356.29669189]
[22.52241325 370.42572021]
[19.85661697 385.18695068]
[19.63328934 400.18527222]
[19.40996170 415.18362427]
[22.29124832 421.13421631]
[21.80746460 426.79663086]
[18.95005798 430.62341309]
[18.28027153 445.60845947]
[17.61048698 460.59350586]
[16.94070244 475.57855225]
[31.51495552 479.35806274]
[44.98474121 486.08551025]
[56.76121902 495.46679688]
[66.32957458 507.09176636]
[73.27151489 520.45227051]
[77.28356934 534.96423340]
[78.19035339 549.99328613]
[75.95221710 564.88232422]
[70.66701508 578.98059082]
[62.56578064 591.67163086]
[52.00267410 602.40081787]
[39.43946457 610.69897461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 198]
[17 197]
[18 196]
[19 195]
[20 192]
[21 191]
[22 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[51 180]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[61 174]
[62 173]
[63 172]
[64 163]
[65 162]
[66 160]
[67 159]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[73 151]
[74 144]
[75 143]
[76 142]
[77 141]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[86 133]
[87 132]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 117]
[94 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
