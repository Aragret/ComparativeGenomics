%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[25.90861893 627.54309082]
[10.85724258 630.32067871]
[-3.75743055 625.77423096]
[-14.57705498 614.94860840]
[-19.11536026 600.33142090]
[-16.32947922 585.28155518]
[-6.85958385 573.25744629]
[7.11821127 567.02209473]
[8.01102734 552.04864502]
[8.90384293 537.07525635]
[9.79665852 522.10186768]
[7.74231672 519.23620605]
[6.97391987 515.23309326]
[8.01093960 510.70785522]
[11.07843494 506.48440552]
[12.63895798 491.56579590]
[14.19948101 476.64721680]
[15.76000404 461.72860718]
[17.32052803 446.80999756]
[4.20197678 454.08349609]
[-9.72148991 448.50341797]
[-14.18601036 434.18322754]
[-5.90050697 421.67919922]
[9.02725506 420.20886230]
[19.59253883 430.85452271]
[22.25833511 416.09332275]
[24.92412949 401.33209229]
[17.01594162 394.78750610]
[12.50264072 385.47808838]
[12.25892830 375.05438232]
[16.39578629 365.39569092]
[24.22837067 358.27127075]
[34.38848877 355.01614380]
[37.71074677 340.38867188]
[41.03300858 325.76123047]
[44.35526657 311.13375854]
[47.67752457 296.50628662]
[50.99978638 281.87884521]
[54.32204437 267.25137329]
[57.64430618 252.62391663]
[60.96656418 237.99645996]
[52.83616257 225.56938171]
[55.99703217 210.68772888]
[69.08681488 202.24407959]
[72.40907288 187.61660767]
[75.73133850 172.98915100]
[71.00508881 158.86428833]
[81.60674286 147.12054443]
[84.92900085 132.49308777]
[70.52898407 120.35669708]
[64.27588654 102.59294128]
[67.89829254 84.11239624]
[80.39482880 70.02379608]
[98.31098938 64.22175598]
[100.75671387 49.42248154]
[103.20243835 34.62321091]
[105.64817047 19.82394218]
[95.26392365 10.75982380]
[90.75022888 -2.14928269]
[93.18509674 -15.49622917]
[101.82734680 -25.81396866]
[114.33758545 -30.47615051]
[117.00337982 -45.23736572]
[119.66918182 -59.99858475]
[122.33497620 -74.75980377]
[125.00077057 -89.52101898]
[127.66656494 -104.28223419]
[130.33236694 -119.04345703]
[132.99815369 -133.80467224]
[133.22148132 -148.80300903]
[123.52265167 -161.30273438]
[129.28637695 -175.03695679]
[127.06125641 -189.87100220]
[124.83613586 -204.70504761]
[122.50064850 -219.52210999]
[120.05492401 -234.32138062]
[104.83129883 -241.69277954]
[97.07808685 -256.53826904]
[99.67523193 -272.91558838]
[111.40355682 -284.40139771]
[108.73776245 -299.16262817]
[106.07196808 -313.92385864]
[103.40617371 -328.68505859]
[100.74037933 -343.44628906]
[96.76828766 -348.73153687]
[96.15386200 -354.38128662]
[98.22182465 -358.68621826]
[95.99670410 -373.52026367]
[93.77159119 -388.35430908]
[78.77797699 -390.04370117]
[64.73286438 -395.55706787]
[52.59386444 -404.51849365]
[43.18863678 -416.31698608]
[37.15844727 -430.14807129]
[34.91444397 -445.06875610]
[36.60962296 -460.06170654]
[42.12841034 -474.10470581]
[51.09452057 -486.24023438]
[62.89662933 -495.64089966]
[76.73005676 -501.66574097]
[91.65160370 -503.90399170]
[106.64390564 -502.20303345]
[120.68476105 -496.67883301]
[132.81683350 -487.70803833]
[142.21295166 -475.90228271]
[148.23245239 -462.06652832]
[150.46493530 -447.14413452]
[148.75817871 -432.15246582]
[143.22854614 -418.11376953]
[134.25306702 -405.98513794]
[122.44370270 -396.59359741]
[108.60562897 -390.57943726]
[110.83074951 -375.74539185]
[113.05587006 -360.91134644]
[115.50159454 -346.11206055]
[118.16738892 -331.35086060]
[120.83318329 -316.58963013]
[123.49897766 -301.82843018]
[126.16477966 -287.06719971]
[138.67501831 -282.40502930]
[147.31726074 -272.08728027]
[149.75213623 -258.74032593]
[145.23844910 -245.83123779]
[134.85418701 -236.76712036]
[137.29992676 -221.96784973]
[141.49195862 -215.88108826]
[139.67018127 -206.93016052]
[141.89529419 -192.09611511]
[144.12042236 -177.26206970]
[153.66009521 -165.82337952]
[148.05552673 -151.02812195]
[152.71160889 -165.28718567]
[160.85496521 -177.88424683]
[171.94548035 -187.98376465]
[185.24757385 -194.91587830]
[199.87896729 -198.22082520]
[214.86918640 -197.67938232]
[229.22399902 -193.32746887]
[241.99131775 -185.45373535]
[252.32431030 -174.58039856]
[259.53762817 -161.42868042]
[263.15286255 -146.87084961]
[262.93017578 -131.87251282]
[258.88439941 -117.42842102]
[251.28384399 -104.49662018]
[240.63261414 -93.93482208]
[227.63719177 -86.44356537]
[213.15951538 -82.51969910]
[198.15982056 -82.42349243]
[183.63299561 -86.16131592]
[170.54255676 -93.48526764]
[159.75672913 -103.90956879]
[151.99090576 -116.74280548]
[147.75936890 -131.13887024]
[145.09358215 -116.37765503]
[142.42778015 -101.61643982]
[139.76199341 -86.85522461]
[137.09619141 -72.09400940]
[134.43038940 -57.33279037]
[131.76460266 -42.57157135]
[129.09880066 -27.81035423]
[140.82713318 -16.32454109]
[143.42427063 0.05277829]
[135.67106628 14.89828205]
[120.44744110 22.26966858]
[118.00170898 37.06893921]
[115.55598450 51.86820984]
[113.11026001 66.66748047]
[122.62053680 72.22866821]
[129.99079895 80.41716003]
[134.52377319 90.45829010]
[135.79063416 101.40211487]
[133.67152405 112.21328735]
[128.36689758 121.86902618]
[120.37863922 129.45584106]
[110.46244812 134.25599670]
[99.55645752 135.81533813]
[96.23419952 150.44281006]
[100.72281647 165.61392212]
[90.35879517 176.31141663]
[87.03653717 190.93887329]
[83.71427917 205.56632996]
[91.87244415 218.83592224]
[88.29483032 233.62292480]
[75.59402466 241.31871033]
[72.27176666 255.94616699]
[68.94950867 270.57363892]
[65.62724304 285.20108032]
[62.30498505 299.82855225]
[58.98272705 314.45602417]
[55.66046524 329.08346558]
[52.33820724 343.71093750]
[49.01594925 358.33840942]
[60.60955811 374.74777222]
[56.46144867 394.09451294]
[39.68534851 403.99789429]
[37.01955032 418.75909424]
[34.35375595 433.52032471]
[32.23913193 448.37051392]
[30.67860985 463.28912354]
[29.11808586 478.20773315]
[27.55756378 493.12634277]
[25.99703979 508.04495239]
[24.77006531 522.99468994]
[23.87724876 537.96807861]
[22.98443222 552.94146729]
[22.09161758 567.91491699]
[35.22941589 575.76708984]
[43.20337296 588.83129883]
[44.18112946 604.10559082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[25 198]
[26 197]
[27 196]
[33 193]
[34 192]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[44 182]
[45 181]
[46 180]
[48 178]
[49 177]
[54 168]
[55 167]
[56 166]
[57 165]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 131]
[72 129]
[73 128]
[74 127]
[75 125]
[76 124]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
