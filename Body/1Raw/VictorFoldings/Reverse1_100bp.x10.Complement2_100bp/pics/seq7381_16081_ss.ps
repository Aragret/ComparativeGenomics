%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-112.74643707 457.60678101]
[-105.26985168 470.63809204]
[-99.63739014 484.56607056]
[-95.95399475 499.13131714]
[-94.28827667 514.06250000]
[-94.67126465 529.08135986]
[-97.09583282 543.90820312]
[-101.51679993 558.26678467]
[-107.85182190 571.88958740]
[-115.98286438 584.52288818]
[-125.75846863 595.93127441]
[-136.99650574 605.90228271]
[-149.48762512 614.25006104]
[-162.99913025 620.81915283]
[-177.27929688 625.48718262]
[-192.06208801 628.16717529]
[-207.07214355 628.80926514]
[-222.02980042 627.40136719]
[-236.65643311 623.96984863]
[-250.67953491 618.57849121]
[-263.83786011 611.32788086]
[-275.88632202 602.35296631]
[-286.60040283 591.82098389]
[-295.78054810 579.92822266]
[-303.25573730 566.89611816]
[-308.88668823 552.96752930]
[-312.56848145 538.40185547]
[-314.23260498 523.47052002]
[-313.84799194 508.45169067]
[-311.42181396 493.62509155]
[-306.99929810 479.26699829]
[-300.66278076 465.64486694]
[-292.53036499 453.01245117]
[-282.75354004 441.60513306]
[-271.51443481 431.63537598]
[-259.02239990 423.28894043]
[-245.51019287 416.72128296]
[-231.22952271 412.05480957]
[-216.44642639 409.37637329]
[-201.43630981 408.73596191]
[-186.47880554 410.14544678]
[-171.85255432 413.57858276]
[-157.83003235 418.97143555]
[-144.67247009 426.22351074]
[-135.71177673 414.19412231]
[-134.31375122 399.36526489]
[-119.86482239 392.92022705]
[-110.90412140 380.89083862]
[-101.94342804 368.86145020]
[-92.98273468 356.83209229]
[-84.02203369 344.80270386]
[-87.16370392 328.28094482]
[-77.18759918 314.32412720]
[-59.86963654 311.85284424]
[-51.08903122 299.69137573]
[-42.30842972 287.52993774]
[-33.52782440 275.36846924]
[-24.74722290 263.20703125]
[-15.96661949 251.04556274]
[-7.18601608 238.88410950]
[1.59458721 226.72265625]
[10.37519073 214.56118774]
[10.17719841 211.04080200]
[11.67450428 207.24961853]
[14.97581100 203.98545837]
[19.82939529 202.06457520]
[29.14427757 190.30732727]
[38.45915985 178.55007935]
[47.77404404 166.79281616]
[56.46386719 154.56634521]
[64.50504303 141.90380859]
[72.54621124 129.24128723]
[80.58738708 116.57876587]
[88.62856293 103.91623688]
[96.48031616 91.13539886]
[104.14091492 78.23906708]
[109.17782593 64.11003876]
[111.40294647 49.27599716]
[113.62805939 34.44195175]
[115.85317993 19.60790825]
[118.07830048 4.77386427]
[108.95578003 -7.85219669]
[111.42368317 -22.86432838]
[123.51692200 -31.48344612]
[125.74203491 -46.31748962]
[127.96715546 -61.15153122]
[130.19227600 -75.98558044]
[130.97358704 -90.96521759]
[122.62779999 -104.40613556]
[129.78907776 -117.46620178]
[129.11929321 -132.45123291]
[128.44950867 -147.43627930]
[127.77972412 -162.42131042]
[113.07299042 -165.82934570]
[99.83165741 -173.07981873]
[89.03829956 -183.63473511]
[81.49388123 -196.71083069]
[77.75822449 -211.33776855]
[78.10855865 -226.43014526]
[82.51887512 -240.86799622]
[90.66190338 -253.57995605]
[101.93337250 -263.62268066]
[115.49687195 -270.25097656]
[130.34590149 -272.97293091]
[145.37855530 -271.58657837]
[159.47930908 -266.19482422]
[171.60180664 -257.19772339]
[180.84646606 -245.26293945]
[186.52726746 -231.27613831]
[188.22268677 -216.27519226]
[185.80688477 -201.37329102]
[179.45913696 -187.67626953]
[169.65048218 -176.20051575]
[157.10879517 -167.79760742]
[142.76477051 -163.09109497]
[143.43455505 -148.10606384]
[144.10433960 -133.12101746]
[144.77412415 -118.13598633]
[153.07200623 -105.76689911]
[145.95863342 -91.63500214]
[153.23245239 -104.75336456]
[165.16394043 -113.84399414]
[179.74243164 -117.37496185]
[194.51118469 -114.75123596]
[206.98141479 -106.41495514]
[215.05165100 -93.77094269]
[217.36193848 -78.94992065]
[213.52294922 -64.44950867]
[204.18161011 -52.71326447]
[190.91210938 -45.71895981]
[175.95057678 -44.64525604]
[161.81831360 -49.67309189]
[150.89685059 -59.95518875]
[145.02632141 -73.76045990]
[142.80119324 -58.92641449]
[140.57608032 -44.09237289]
[138.35096741 -29.25832748]
[147.38313293 -17.47038651]
[145.33786011 -2.39485884]
[132.91233826 6.99898148]
[130.68722534 21.83302498]
[128.46211243 36.66706848]
[126.23699188 51.50111389]
[124.01187134 66.33515930]
[132.56370544 54.01176071]
[143.61236572 43.86646271]
[156.61877441 36.39427185]
[170.94828796 31.95977783]
[185.90177917 30.77934647]
[200.74960327 32.91057587]
[214.76730347 38.24947357]
[227.27095032 46.53554916]
[237.65043640 57.36450195]
[245.39933777 70.20796204]
[250.13955688 84.43927765]
[251.63981628 99.36406708]
[249.82691956 114.25410461]
[244.78932190 128.38288879]
[236.77279663 141.06103516]
[226.16851807 151.66996765]
[213.49388123 159.69201660]
[199.36729431 164.73580933]
[184.47804260 166.55520630]
[169.55261230 165.06147766]
[155.31922913 160.32746887]
[142.47236633 152.58419800]
[131.63888550 142.20944214]
[123.34733582 129.70942688]
[118.00231171 115.69405365]
[115.86459351 100.84716034]
[117.03723907 85.89966583]
[109.37664032 98.79598999]
[109.48690796 104.04020691]
[106.65108490 108.97290039]
[101.29108429 111.95741272]
[93.24990845 124.61993408]
[85.20874023 137.28245544]
[77.16756439 149.94499207]
[69.12639618 162.60751343]
[83.74674225 159.25410461]
[97.15889740 165.97082520]
[103.23098755 179.68685913]
[99.18694305 194.13143921]
[86.87564087 202.70068359]
[71.92565155 201.47685242]
[61.17190170 191.01947021]
[59.53129578 176.10771179]
[50.21641159 187.86495972]
[40.90152740 199.62220764]
[31.58664703 211.37945557]
[22.53664589 223.34179688]
[13.75604343 235.50325012]
[4.97543955 247.66470337]
[-3.80516338 259.82617188]
[-12.58576679 271.98760986]
[-21.36636925 284.14907837]
[-30.14697266 296.31054688]
[-38.92757797 308.47198486]
[-47.70817947 320.63345337]
[-44.04517365 333.59481812]
[-48.45164871 346.11651611]
[-59.10756302 353.70162964]
[-71.99266052 353.76339722]
[-80.95335388 365.79278564]
[-89.91404724 377.82214355]
[-98.87474823 389.85153198]
[-107.83544159 401.88092041]
[-109.87438965 417.57019043]
[-123.68240356 423.15481567]
[-132.64309692 435.18420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[45 209]
[47 207]
[48 206]
[49 205]
[50 204]
[51 203]
[54 199]
[55 198]
[56 197]
[57 196]
[58 195]
[59 194]
[60 193]
[61 192]
[62 191]
[66 190]
[67 189]
[68 188]
[69 187]
[70 179]
[71 178]
[72 177]
[73 176]
[74 175]
[75 172]
[76 171]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[84 137]
[85 136]
[86 135]
[87 134]
[88 120]
[90 118]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
