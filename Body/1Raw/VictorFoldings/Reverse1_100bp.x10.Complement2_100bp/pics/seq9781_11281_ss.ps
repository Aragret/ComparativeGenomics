%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[213.32380676 345.40673828]
[223.65875244 334.49392700]
[235.53849792 325.28674316]
[228.26525879 312.16806030]
[220.99203491 299.04934692]
[213.71881104 285.93066406]
[206.44557190 272.81198120]
[199.17234802 259.69326782]
[191.51174927 246.79695129]
[183.47058105 234.13442993]
[175.42939758 221.47189331]
[167.38822937 208.80937195]
[159.34706116 196.14685059]
[151.30587769 183.48432922]
[142.98393250 171.00453186]
[134.38537598 158.71369934]
[125.78681183 146.42285156]
[116.91591644 134.32710266]
[107.77711487 122.43247223]
[98.63831329 110.53783417]
[88.72365570 99.28173828]
[78.07765198 88.71469116]
[67.43164062 78.14764404]
[56.78563309 67.58059692]
[46.13962555 57.01354980]
[35.33746719 46.60617828]
[19.97312737 42.83157730]
[15.96198273 28.48723984]
[5.00607347 18.24184799]
[-5.94983578 7.99645615]
[-16.90574455 -2.24893522]
[-27.86165428 -12.49432659]
[-38.81756210 -22.73971939]
[-50.14715576 -32.57030106]
[-61.83473969 -41.97245026]
[-73.52231598 -51.37460327]
[-89.12484741 -53.99600220]
[-94.19176483 -68.00227356]
[-105.87934113 -77.40441895]
[-117.56692505 -86.80657196]
[-127.95832062 -75.97567749]
[-139.25415039 -66.09167480]
[-151.36845398 -57.22978973]
[-164.20903015 -49.45746613]
[-177.67814636 -42.83386230]
[-191.67330933 -37.40938568]
[-206.08798218 -33.22531891]
[-220.81248474 -30.31350517]
[-235.73472595 -28.69610977]
[-250.74114990 -28.38543892]
[-265.71755981 -29.38385963]
[-280.54992676 -31.68377113]
[-295.12542725 -35.26766968]
[-309.33309937 -40.10828018]
[-323.06481934 -46.16876221]
[-336.21606445 -53.40298843]
[-348.68676758 -61.75590134]
[-360.38198853 -71.16393280]
[-371.21273804 -81.55548096]
[-381.09658813 -92.85144806]
[-389.95828247 -104.96588135]
[-397.73043823 -117.80656433]
[-404.35385132 -131.27577209]
[-409.77813721 -145.27101135]
[-413.96200562 -159.68574524]
[-416.87359619 -174.41027832]
[-418.49078369 -189.33255005]
[-418.80123901 -204.33897400]
[-417.80261230 -219.31536865]
[-415.50250244 -234.14772034]
[-411.91839600 -248.72315979]
[-407.07757568 -262.93075562]
[-401.01690674 -276.66238403]
[-393.78250122 -289.81353760]
[-385.42941284 -302.28411865]
[-376.02120972 -313.97921753]
[-365.62951660 -324.80981445]
[-354.33340454 -334.69351196]
[-342.21887207 -343.55505371]
[-329.37805176 -351.32699585]
[-315.90875244 -357.95022583]
[-301.91345215 -363.37432861]
[-287.49865723 -367.55798340]
[-272.77407837 -370.46939087]
[-257.85177612 -372.08636475]
[-242.84535217 -372.39660645]
[-227.86898804 -371.39776611]
[-213.03665161 -369.09744263]
[-198.46125793 -365.51312256]
[-184.25372314 -360.67211914]
[-170.52218628 -354.61126709]
[-157.37113953 -347.37667847]
[-144.90068054 -339.02340698]
[-133.20571899 -329.61505127]
[-122.37525940 -319.22320557]
[-112.49173737 -307.92694092]
[-103.63036346 -295.81225586]
[-95.85858154 -282.97137451]
[-89.23554230 -269.50195312]
[-83.81165314 -255.50657654]
[-79.62818909 -241.09172058]
[-76.71699524 -226.36711121]
[-75.10022736 -211.44479370]
[-74.79019165 -196.43835449]
[-75.78923798 -181.46200562]
[-78.08977509 -166.62969971]
[-81.67428589 -152.05436707]
[-86.51549530 -137.84689331]
[-92.57655334 -124.11544037]
[-99.81133270 -110.96449280]
[-108.16477203 -98.49415588]
[-96.47719574 -89.09200287]
[-84.78961182 -79.68984985]
[-70.02305603 -77.74095917]
[-64.12017059 -63.06218338]
[-52.43258667 -53.66003036]
[-40.74500656 -44.25788116]
[-39.74103928 -59.22424316]
[-27.50156975 -67.89576721]
[-13.04907322 -63.88012695]
[-7.03739595 -50.13750458]
[-13.89812183 -36.79844666]
[-28.57217216 -33.69562912]
[-17.61626244 -23.45023537]
[-6.66035366 -13.20484447]
[4.29555607 -2.95945311]
[15.25146484 7.28593874]
[26.20737457 17.53133011]
[40.78807449 20.57311249]
[45.58285904 35.65026855]
[50.30134583 36.38845444]
[54.60620499 40.09860229]
[56.70667267 46.36754227]
[67.35268402 56.93458939]
[77.99868774 67.50163269]
[88.64469910 78.06868744]
[99.29071045 88.63573456]
[97.51011658 73.74179077]
[103.96853638 60.20336914]
[116.66474915 52.21549606]
[131.66470337 52.25329971]
[144.32049561 60.30506897]
[150.71058655 73.87586975]
[148.85494995 88.76065063]
[139.32855225 100.34719086]
[125.08328247 105.04528046]
[110.53294373 101.39903259]
[119.67174530 113.29367065]
[128.81054688 125.18830109]
[133.63499451 127.18123627]
[136.88734436 130.49417114]
[138.32803345 134.30723572]
[138.07765198 137.82429504]
[146.67620850 150.11512756]
[155.27478027 162.40596008]
[160.00541687 164.61233521]
[163.10659790 168.06719971]
[164.37557983 171.94078064]
[163.96841431 175.44314575]
[172.00958252 188.10568237]
[180.05075073 200.76820374]
[188.09191895 213.43072510]
[196.13310242 226.09324646]
[204.17427063 238.75578308]
[208.09201050 240.62800598]
[210.92524719 243.37341309]
[212.53265381 246.54385376]
[212.93295288 249.69129944]
[212.29104614 252.42004395]
[219.56427002 265.53872681]
[226.83749390 278.65744019]
[234.11073303 291.77612305]
[241.38395691 304.89483643]
[248.65718079 318.01351929]
[262.75976562 312.81567383]
[277.49053955 309.83160400]
[292.50421143 309.13122559]
[307.44879150 310.73104858]
[321.97402954 314.59347534]
[335.73937988 320.62802124]
[348.42214966 328.69317627]
[359.72509766 338.59994507]
[369.38323975 350.11605835]
[377.17013550 362.97158813]
[382.90332031 376.86517334]
[386.44833374 391.47109985]
[387.72210693 406.44699097]
[386.69479370 421.44183350]
[383.39044189 436.10409546]
[377.88653564 450.09005737]
[370.31210327 463.07189941]
[360.84466553 474.74530029]
[349.70617676 484.83660889]
[337.15774536 493.10928345]
[323.49349976 499.36938477]
[309.03375244 503.47015381]
[294.11749268 505.31552124]
[279.09432983 504.86215210]
[264.31646729 502.12075806]
[250.13032532 497.15551758]
[236.86842346 490.08288574]
[224.84162903 481.06863403]
[214.33190918 470.32403564]
[205.58558655 458.10101318]
[198.80769348 444.68606567]
[194.15713501 430.39367676]
[191.74291992 415.55886841]
[191.62162781 400.52935791]
[193.79611206 385.65750122]
[198.21539307 371.29190063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 164]
[10 163]
[11 162]
[12 161]
[13 160]
[14 159]
[15 155]
[16 154]
[17 153]
[18 149]
[19 148]
[20 147]
[21 137]
[22 136]
[23 135]
[24 134]
[25 133]
[26 130]
[28 128]
[29 127]
[30 126]
[31 125]
[32 124]
[33 123]
[34 117]
[35 116]
[36 115]
[38 113]
[39 112]
[40 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
