%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[46.70821381 675.57806396]
[44.12755966 660.65765381]
[46.53385162 645.70812988]
[53.66606903 632.35107422]
[64.75056458 622.03540039]
[78.58496857 615.88012695]
[77.24673462 600.93994141]
[75.90850067 585.99975586]
[74.57026672 571.05957031]
[73.23203278 556.11938477]
[71.89379883 541.17919922]
[70.55556488 526.23901367]
[69.21733093 511.29882812]
[58.36310577 497.50921631]
[66.24945831 480.86929321]
[64.68893433 465.95071411]
[63.12841034 451.03210449]
[57.10176849 464.76815796]
[46.57183075 475.45089722]
[32.92399597 481.67474365]
[17.95386505 482.62091064]
[3.63102198 478.16488647]
[-8.16012001 468.89294434]
[-15.86823368 456.02496338]
[-18.47918320 441.25393677]
[-15.64945221 426.52328491]
[-7.75134230 413.77102661]
[4.17601538 404.67498779]
[18.56337166 400.43188477]
[33.51782227 401.59994507]
[47.07184982 408.02554321]
[57.44219208 418.86325073]
[63.26496506 432.68951416]
[65.04743195 417.79580688]
[66.82989502 402.90209961]
[68.61235809 388.00836182]
[70.06178284 373.07855225]
[71.17742920 358.12011719]
[72.29307556 343.16165161]
[64.63964844 333.79406738]
[65.44669342 321.32281494]
[74.82584381 312.46875000]
[76.16407776 297.52856445]
[77.50231171 282.58837891]
[63.94490051 276.30490112]
[53.33540344 265.74234009]
[46.96792984 252.16184998]
[45.62847519 237.19430542]
[49.49792480 222.64448547]
[58.12791061 210.27340698]
[70.49267578 201.58523560]
[85.11098480 197.64434814]
[86.44921875 182.70416260]
[87.78745270 167.76397705]
[89.12568665 152.82379150]
[90.46392059 137.88360596]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[85.37319183 78.91819763]
[93.48600006 66.42693329]
[93.93260193 51.43358231]
[94.37921143 36.44023514]
[94.82581329 21.44688416]
[87.50283051 7.42246103]
[95.61563873 -5.06880045]
[96.06224060 -20.06215096]
[83.10391998 -28.18798637]
[75.99965668 -41.62026978]
[76.56887054 -56.70477676]
[84.55861664 -69.39414215]
[97.73840332 -76.33380127]
[98.18500519 -91.32714844]
[87.62676239 -102.77970886]
[88.29326630 -117.97873688]
[99.27660370 -127.97383118]
[99.72320557 -142.96717834]
[100.16981506 -157.96054077]
[100.61641693 -172.95388794]
[101.06302643 -187.94723511]
[89.43109131 -178.47631836]
[74.49571228 -179.86715698]
[64.81254578 -191.32299805]
[65.92855072 -206.28141785]
[77.20443726 -216.17356873]
[92.18084717 -215.33276367]
[102.27830505 -204.24154663]
[104.06076813 -219.13526917]
[105.84323883 -234.02897644]
[107.62570190 -248.92269897]
[109.40817261 -263.81640625]
[111.19063568 -278.71014404]
[98.62972260 -290.03796387]
[95.32856750 -306.45758057]
[102.39395905 -321.45898438]
[116.86218262 -329.21447754]
[118.42270660 -344.13308716]
[119.87212372 -359.06289673]
[121.21035767 -374.00308228]
[122.54859924 -388.94326782]
[108.81320953 -395.35534668]
[98.10144043 -406.08074951]
[91.70677185 -419.82424927]
[90.40140533 -434.92630005]
[94.34295654 -449.56323242]
[103.05547333 -461.96759033]
[115.48687744 -470.64144897]
[130.13601685 -474.53744507]
[145.23391724 -473.18508911]
[158.95745850 -466.74768066]
[169.64945984 -456.00256348]
[176.01878357 -442.24731445]
[177.29631042 -427.14288330]
[173.32778931 -412.51321411]
[164.59243774 -400.12493896]
[152.14506531 -391.47399902]
[137.48878479 -387.60501099]
[136.15054321 -372.66482544]
[134.81231689 -357.72463989]
[137.34652710 -350.78207397]
[133.34130859 -342.57257080]
[131.78079224 -327.65396118]
[142.49240112 -319.68505859]
[147.91110229 -307.36508179]
[146.52360535 -293.86898804]
[138.58595276 -282.73291016]
[126.08435059 -276.92767334]
[124.30188751 -262.03396606]
[122.51942444 -247.14022827]
[120.73695374 -232.24652100]
[118.95449066 -217.35279846]
[117.17201996 -202.45907593]
[116.05637360 -187.50062561]
[115.60977173 -172.50727844]
[115.16316223 -157.51393127]
[114.71655273 -142.52058411]
[114.26995087 -127.52722931]
[124.63889313 -116.89611053]
[124.39955902 -101.68436432]
[113.17835999 -90.88054657]
[112.73175049 -75.88719177]
[125.47511292 -68.17536163]
[132.69541931 -55.03293991]
[132.36576843 -39.94129562]
[124.47459412 -26.95568275]
[111.05559540 -19.61554527]
[110.60898590 -4.62219429]
[117.96392059 8.32980347]
[109.81916809 21.89348984]
[109.37255859 36.88684082]
[108.92595673 51.88018799]
[108.47934723 66.87354279]
[115.83428192 79.82553864]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[108.86026764 128.21881104]
[109.21453094 132.84782410]
[107.86081696 136.69262695]
[105.40410614 139.22184753]
[104.06587219 154.16203308]
[102.72763824 169.10221863]
[101.38940430 184.04240417]
[100.05117035 198.98258972]
[113.73639679 205.45869446]
[124.36027527 216.20602417]
[130.65429688 229.91389465]
[131.87635803 244.91976929]
[127.89819336 259.41101074]
[119.21856689 271.64367676]
[106.90077972 280.15258789]
[92.44249725 283.92660522]
[91.10426331 298.86679077]
[89.76602936 313.80697632]
[97.89924622 330.32763672]
[87.25153351 344.27731323]
[86.13587952 359.23574829]
[85.02023315 374.19421387]
[87.28830719 378.89559937]
[87.50459290 383.53311157]
[86.03700256 387.33587646]
[83.50608063 389.79083252]
[81.72360992 404.68457031]
[79.94114685 419.57827759]
[78.15868378 434.47198486]
[78.04701233 449.47158813]
[79.60753632 464.39016724]
[81.16806030 479.30877686]
[90.67799377 488.02221680]
[91.67062378 500.48010254]
[84.15751648 509.96057129]
[85.49575043 524.90075684]
[86.83398438 539.84094238]
[88.17221832 554.78112793]
[89.51045227 569.72131348]
[90.84868622 584.66149902]
[92.18692017 599.60168457]
[93.52515411 614.54187012]
[108.23325348 618.14056396]
[120.97458649 626.32208252]
[130.36708069 638.19891357]
[135.39189148 652.48284912]
[135.50396729 667.62438965]
[130.69116211 681.98107910]
[121.47553253 693.99572754]
[108.85671234 702.36492920]
[94.20349884 706.18096924]
[79.10536194 705.02984619]
[65.20004272 699.03649902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 199]
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[15 189]
[16 188]
[17 187]
[33 186]
[34 185]
[35 184]
[36 183]
[37 179]
[38 178]
[39 177]
[42 175]
[43 174]
[44 173]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 157]
[58 156]
[59 154]
[61 152]
[62 151]
[63 150]
[64 149]
[66 147]
[67 146]
[72 141]
[73 140]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[96 122]
[97 121]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
