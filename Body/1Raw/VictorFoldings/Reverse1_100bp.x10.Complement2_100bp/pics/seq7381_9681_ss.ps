%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[68.14926147 523.61151123]
[57.25592041 533.93566895]
[45.55731201 543.33752441]
[33.13128281 551.75457764]
[20.06052780 559.13073730]
[6.43203354 565.41699219]
[-7.66350412 570.57147217]
[-22.13228035 574.55987549]
[-36.87800598 577.35565186]
[-51.80254745 578.94024658]
[-66.80658722 579.30297852]
[-81.79026794 578.44158936]
[-96.65388489 576.36175537]
[-111.29851532 573.07727051]
[-125.62669373 568.61010742]
[-139.54307556 562.98986816]
[-152.95504761 556.25396729]
[-165.77334595 548.44732666]
[-177.91268921 539.62182617]
[-189.29225159 529.83624268]
[-199.83634949 519.15563965]
[-209.47477722 507.65112305]
[-218.14340210 495.39929199]
[-225.78453064 482.48162842]
[-232.34732056 468.98413086]
[-237.78810120 454.99658203]
[-242.07064819 440.61215210]
[-245.16647339 425.92648315]
[-247.05496216 411.03735352]
[-247.72355652 396.04382324]
[-247.16781616 381.04568481]
[-245.39141846 366.14276123]
[-242.40620422 351.43420410]
[-238.23204041 337.01794434]
[-232.89668274 322.98986816]
[-226.43565369 309.44335938]
[-218.89195251 296.46856689]
[-210.31578064 284.15182495]
[-200.76420593 272.57510376]
[-190.30079651 261.81546021]
[-178.99517822 251.94450378]
[-166.92260742 243.02789307]
[-154.16342163 235.12500000]
[-140.80252075 228.28839111]
[-126.92882538 222.56358337]
[-112.63467407 217.98866272]
[-98.01517487 214.59408569]
[-83.16763306 212.40243530]
[-68.19085693 211.42829895]
[-53.18451309 211.67816162]
[-38.24847031 213.15034485]
[-23.48212051 215.83508301]
[-8.98373985 219.71447754]
[5.15018940 224.76272583]
[18.82560539 230.94624329]
[26.09883499 217.82754517]
[33.37206650 204.70884705]
[25.58480644 192.01144409]
[25.19611931 177.02128601]
[32.41049576 163.76159668]
[45.37837601 155.84132385]
[60.66927338 155.47299194]
[67.94250488 142.35429382]
[75.21573639 129.23559570]
[82.48896027 116.11690521]
[89.76219177 102.99820709]
[95.73375702 89.23810577]
[100.34776306 74.96537018]
[104.96177673 60.69263840]
[99.79462433 48.87471390]
[103.93148041 37.08190918]
[114.63996124 31.45563507]
[119.46595764 17.25317955]
[119.26393890 8.12098312]
[124.47097778 2.87612510]
[129.50788879 -11.25290394]
[134.54481506 -25.38193321]
[139.58172607 -39.51096344]
[144.61863708 -53.63999176]
[130.93936157 -59.81495667]
[117.80892181 -67.08437347]
[105.31470490 -75.39985657]
[93.53985596 -84.70606995]
[82.56273651 -94.94109344]
[72.45639038 -106.03679657]
[63.28809357 -117.91934967]
[55.11884308 -130.50967407]
[48.00300980 -143.72396851]
[41.98795319 -157.47430420]
[37.11369705 -171.66918945]
[33.41268539 -186.21412659]
[30.90954399 -201.01234436]
[29.62093163 -215.96534729]
[29.55542564 -230.97361755]
[30.71345901 -245.93730164]
[33.08732986 -260.75680542]
[36.66123199 -275.33349609]
[41.41139221 -289.57037354]
[47.30619049 -303.37271118]
[54.30640030 -316.64862061]
[62.36543274 -329.30975342]
[71.42965698 -341.27191162]
[81.43875885 -352.45541382]
[92.32611847 -362.78585815]
[104.01927948 -372.19448853]
[116.44043732 -380.61874390]
[129.50691223 -388.00250244]
[143.13177490 -394.29663086]
[157.22431946 -399.45925903]
[171.69078064 -403.45602417]
[186.43489075 -406.26034546]
[201.35852051 -407.85354614]
[216.36233521 -408.22500610]
[231.34652710 -407.37228394]
[246.21133423 -405.30105591]
[260.85784912 -402.02505493]
[275.18862915 -397.56613159]
[289.10827637 -391.95394897]
[302.52413940 -385.22586060]
[315.34695435 -377.42663574]
[327.49139404 -368.60815430]
[338.87661743 -358.82916260]
[349.42691040 -348.15466309]
[359.07199097 -336.65573120]
[367.74771118 -324.40890503]
[375.39630127 -311.49569702]
[381.96691895 -298.00198364]
[387.41577148 -284.01760864]
[391.70666504 -269.63565063]
[394.81097412 -254.95176697]
[396.70809937 -240.06373596]
[397.38537598 -225.07058716]
[396.83831787 -210.07214355]
[395.07055664 -195.16819763]
[392.09384155 -180.45791626]
[387.92800903 -166.03923035]
[382.60079956 -152.00807190]
[376.14761353 -138.45782471]
[368.61141968 -125.47866058]
[360.04235840 -113.15695953]
[350.49749756 -101.57472229]
[340.04031372 -90.80902863]
[328.74041748 -80.93151855]
[316.67303467 -72.00792694]
[303.91839600 -64.09764099]
[290.56146240 -57.25330353]
[276.69110107 -51.52046204]
[262.39959717 -46.93727112]
[247.78205872 -43.53422546]
[232.93579102 -41.33398056]
[217.95957947 -40.35117340]
[202.95309448 -40.59234619]
[188.01618958 -42.05588913]
[173.24829102 -44.73207092]
[158.74766541 -48.60307693]
[153.71075439 -34.47404861]
[148.67384338 -20.34501839]
[143.63691711 -6.21598816]
[138.60000610 7.91304159]
[133.66841125 22.07917595]
[128.84240723 36.28163147]
[133.18327332 53.28527451]
[119.23450470 65.30664825]
[114.62049866 79.57938385]
[110.00648499 93.85211182]
[121.40939331 84.10666656]
[135.76692200 79.76369476]
[150.65957642 81.55505371]
[163.57766724 89.17887115]
[172.34429932 101.35041046]
[175.48211670 116.01853943]
[172.46235657 130.71142578]
[163.79388428 142.95306396]
[150.93751526 150.68052673]
[136.05975342 152.59158325]
[121.66776276 148.36421204]
[110.18685913 138.71076965]
[103.55176544 125.25805664]
[102.88088989 110.27143860]
[95.60765839 123.39012909]
[88.33442688 136.50881958]
[81.06119537 149.62751770]
[73.78797150 162.74621582]
[81.57637024 175.91011047]
[81.72900391 191.10462952]
[74.30502319 204.24809265]
[61.38541031 211.85990906]
[46.49076080 211.98208618]
[39.21752930 225.10076904]
[31.94429970 238.21946716]
[44.43370438 246.54219055]
[56.20316315 255.85522461]
[67.17436218 266.09658813]
[77.27427673 277.19815063]
[86.43569946 289.08599854]
[94.59765625 301.68106079]
[101.70583344 314.89947510]
[107.71293640 328.65328979]
[112.57897186 342.85098267]
[116.27156067 357.39807129]
[118.76613617 372.19772339]
[120.04608917 387.15145874]
[120.10291290 402.15979004]
[118.93621063 417.12280273]
[116.55376434 431.94091797]
[112.97142029 446.51553345]
[108.21302032 460.74966431]
[102.31023407 474.54858398]
[95.30234528 487.82043457]
[87.23597717 500.47692871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 190]
[56 189]
[57 188]
[62 183]
[63 182]
[64 181]
[65 180]
[66 179]
[67 165]
[68 164]
[69 163]
[72 161]
[73 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
