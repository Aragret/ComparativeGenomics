%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[53.41860962 629.63183594]
[41.29542542 638.48199463]
[28.43749619 646.22613525]
[14.94545174 652.80352783]
[0.92488617 658.16278076]
[-13.51446724 662.26190186]
[-28.25959778 665.06878662]
[-43.19510651 666.56152344]
[-58.20409393 666.72839355]
[-73.16909790 665.56811523]
[-87.97299957 663.08972168]
[-102.49992371 659.31268311]
[-116.63617706 654.26654053]
[-130.27113342 647.99072266]
[-143.29806519 640.53442383]
[-155.61503601 631.95593262]
[-167.12562561 622.32244873]
[-177.73976135 611.70935059]
[-187.37435913 600.19970703]
[-195.95402527 587.88360596]
[-203.41160583 574.85742188]
[-209.68872070 561.22302246]
[-214.73626709 547.08728027]
[-218.51473999 532.56072998]
[-220.99453735 517.75708008]
[-222.15628052 502.79217529]
[-221.99087524 487.78317261]
[-220.49958801 472.84753418]
[-217.69412231 458.10211182]
[-213.59642029 443.66235352]
[-208.23855591 429.64126587]
[-201.66246033 416.14859009]
[-193.91960144 403.28991699]
[-185.07057190 391.16586304]
[-175.18464661 379.87133789]
[-164.33918762 369.49475098]
[-152.61907959 360.11730957]
[-140.11604309 351.81237793]
[-126.92793274 344.64498901]
[-113.15797424 338.67123413]
[-98.91393280 333.93783569]
[-84.30729675 330.48187256]
[-69.45236969 328.33038330]
[-54.46543121 327.50021362]
[-39.46376419 327.99783325]
[-24.56478500 329.81936646]
[-9.88509750 332.95056152]
[4.46040630 337.36691284]
[10.12319279 323.47689819]
[15.78597927 309.58688354]
[21.44876671 295.69683838]
[27.11155319 281.80682373]
[23.79046440 264.57495117]
[38.43002701 253.40513611]
[43.88538361 239.43234253]
[49.34074020 225.45953369]
[54.79609680 211.48674011]
[59.93805695 197.39559937]
[64.76405334 183.19314575]
[69.59004974 168.99069214]
[65.24919128 151.98704529]
[79.19795990 139.96566772]
[83.81196594 125.69293976]
[88.42597961 111.42020416]
[84.49179840 95.11380768]
[97.06285858 84.00774384]
[101.46385956 69.66789246]
[98.11605072 54.20494843]
[109.24700928 44.30792999]
[113.64801025 29.96808243]
[118.04900360 15.62823486]
[122.45000458 1.28838813]
[119.10218811 -14.17455864]
[130.23315430 -24.07157898]
[134.63415527 -38.41142654]
[138.71382141 -52.84597778]
[142.47012329 -67.36803436]
[146.22642517 -81.89009857]
[149.98271179 -96.41215515]
[153.73901367 -110.93421173]
[157.49531555 -125.45627594]
[161.25161743 -139.97833252]
[147.14857483 -145.12222290]
[133.60781860 -151.60324097]
[120.75581360 -159.36090088]
[108.71252441 -168.32275391]
[97.59041595 -178.40512085]
[87.49333954 -189.51388550]
[78.51555634 -201.54530334]
[70.74089813 -214.38703918]
[64.24195862 -227.91918945]
[59.07941818 -242.01542664]
[55.30147934 -256.54409790]
[52.94341278 -271.36959839]
[52.02723694 -286.35345459]
[52.56150818 -301.35580444]
[54.54123688 -316.23651123]
[57.94794083 -330.85671997]
[62.74980545 -345.07983398]
[68.90200043 -358.77313232]
[76.34708405 -371.80871582]
[85.01554108 -384.06488037]
[94.82643127 -395.42715454]
[105.68815613 -405.78952026]
[117.49929810 -415.05517578]
[130.14956665 -423.13763428]
[143.52087402 -429.96142578]
[157.48834229 -435.46279907]
[171.92156982 -439.59045410]
[186.68579102 -442.30578613]
[201.64317322 -443.58346558]
[216.65403748 -443.41159058]
[231.57823181 -441.79174805]
[246.27641296 -438.73904419]
[260.61132812 -434.28198242]
[274.44918823 -428.46218872]
[287.66070557 -421.33404541]
[300.12258911 -412.96401978]
[311.71847534 -403.43032837]
[322.34005737 -392.82199097]
[331.88821411 -381.23800659]
[340.27374268 -368.78656006]
[347.41836548 -355.58392334]
[353.25540161 -341.75335693]
[357.73031616 -327.42401123]
[360.80136108 -312.72964478]
[362.43981934 -297.80746460]
[362.63043213 -282.79684448]
[361.37139893 -267.83789062]
[358.67446899 -253.07028198]
[354.56481934 -238.63191223]
[349.08084106 -224.65759277]
[342.27374268 -211.27780151]
[334.20709229 -198.61744690]
[324.95614624 -186.79476929]
[314.60736084 -175.92013550]
[303.25729370 -166.09507751]
[291.01196289 -157.41134644]
[277.98565674 -149.95001221]
[264.30007935 -143.78074646]
[250.08293152 -138.96115112]
[235.46699524 -135.53622437]
[220.58874512 -133.53794861]
[205.58708191 -132.98497009]
[190.60209656 -133.88246155]
[175.77368164 -136.22203064]
[172.01737976 -121.69997406]
[168.26107788 -107.17791748]
[164.50477600 -92.65585327]
[160.74847412 -78.13379669]
[156.99217224 -63.61173630]
[153.23587036 -49.08967590]
[154.70063782 -45.88237381]
[154.68469238 -41.80624771]
[152.79660034 -37.56497574]
[148.97399902 -34.01042557]
[144.57299805 -19.67057991]
[148.23559570 -5.23331499]
[136.78985596 5.68938637]
[132.38885498 20.02923393]
[127.98785400 34.36907959]
[123.58685303 48.70892715]
[127.24945831 63.14619446]
[115.80371094 74.06889343]
[111.40270996 88.40874481]
[116.22944641 99.00798035]
[112.72956848 110.11618042]
[102.69870758 116.03421021]
[98.08470154 130.30694580]
[93.47069550 144.57968140]
[98.63784027 156.39761353]
[94.50099182 168.19041443]
[83.79251099 173.81668091]
[78.96650696 188.01913452]
[74.14051056 202.22160339]
[75.15900421 207.34114075]
[74.20706940 211.88505554]
[71.83394623 215.19917297]
[68.76889801 216.94209290]
[63.31353760 230.91490173]
[57.85818100 244.88769531]
[52.40282440 258.86050415]
[56.85739517 270.96502686]
[52.02595901 282.49069214]
[41.00157928 287.46960449]
[35.33879471 301.35961914]
[29.67600632 315.24966431]
[24.01321983 329.13967896]
[18.35043335 343.02972412]
[31.69464111 349.90209961]
[44.37924194 357.92697144]
[56.30495834 367.04150391]
[67.37845612 377.17440796]
[77.51306152 388.24630737]
[86.62946320 400.17062378]
[94.65631104 412.85397339]
[101.53078461 426.19708252]
[107.19908142 440.09558105]
[111.61682892 454.44067383]
[114.74945831 469.12005615]
[116.57244873 484.01885986]
[117.07154083 499.02047729]
[116.24282074 514.00750732]
[114.09277344 528.86260986]
[110.63823700 543.46960449]
[105.90623474 557.71411133]
[99.93380737 571.48461914]
[92.76770020 584.67346191]
[84.46400452 597.17730713]
[75.08769226 608.89831543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[54 182]
[55 181]
[56 180]
[57 179]
[58 175]
[59 174]
[60 173]
[62 170]
[63 169]
[64 168]
[66 165]
[67 164]
[69 162]
[70 161]
[71 160]
[72 159]
[74 157]
[75 156]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
