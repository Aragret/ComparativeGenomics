%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[13.55628300 585.75128174]
[5.69907808 598.54150391]
[-3.30475092 610.55212402]
[-13.37838554 621.68078613]
[-24.43587875 631.83245850]
[-36.38288879 640.92053223]
[-49.11748886 648.86755371]
[-62.53102493 655.60559082]
[-76.50905609 661.07727051]
[-90.93233490 665.23590088]
[-105.67778778 668.04589844]
[-120.61961365 669.48339844]
[-135.63034058 669.53607178]
[-150.58189392 668.20349121]
[-165.34671021 665.49700928]
[-179.79881287 661.43975830]
[-193.81489563 656.06634521]
[-207.27540588 649.42254639]
[-220.06546021 641.56512451]
[-232.07595825 632.56109619]
[-243.20442200 622.48730469]
[-253.35591125 611.42962646]
[-262.44381714 599.48248291]
[-270.39059448 586.74774170]
[-277.12844849 573.33410645]
[-282.59988403 559.35595703]
[-286.75823975 544.93261719]
[-289.56802368 530.18713379]
[-291.00524902 515.24523926]
[-291.05767822 500.23452759]
[-289.72485352 485.28298950]
[-287.01812744 470.51824951]
[-282.96063232 456.06619263]
[-277.58697510 442.05020142]
[-270.94296265 428.58981323]
[-263.08532715 415.79989624]
[-254.08111572 403.78952026]
[-244.00711060 392.66122437]
[-232.94927979 382.50991821]
[-221.00195312 373.42221069]
[-208.26708984 365.47564697]
[-194.85333252 358.73803711]
[-180.87512207 353.26681519]
[-166.45170593 349.10870361]
[-151.70616150 346.29919434]
[-136.76428223 344.86221313]
[-121.75355530 344.81002808]
[-106.80204773 346.14309692]
[-92.03732300 348.85006714]
[-77.58535767 352.90780640]
[-63.56944275 358.28170776]
[-50.10916519 364.92590332]
[-42.25741196 352.14508057]
[-34.40565491 339.36422729]
[-26.55389977 326.58340454]
[-25.73107719 319.23867798]
[-18.48889732 313.67193604]
[-10.44772434 301.00939941]
[-2.50104022 288.28738403]
[5.35071516 275.50653076]
[13.20247078 262.72567749]
[20.86306763 249.82936096]
[28.33080864 236.82040405]
[35.79854965 223.81146240]
[43.26629257 210.80250549]
[42.89227676 195.91259766]
[56.47296524 187.79621887]
[62.95246124 174.26788330]
[68.40781403 160.29507446]
[73.86317444 146.32228088]
[79.31853485 132.34948730]
[84.77388763 118.37668610]
[90.22924805 104.40388489]
[93.66030884 89.80156708]
[87.18505096 75.36613464]
[96.02696991 63.37990570]
[97.36520386 48.43972015]
[98.70343781 33.49953461]
[99.70769501 18.53318977]
[100.37747955 3.54815078]
[101.04726410 -11.43688774]
[101.71704865 -26.42192650]
[99.01421356 -32.45568085]
[99.66637421 -38.10118484]
[102.63645172 -41.84119797]
[103.75210571 -56.79964828]
[104.86775208 -71.75810242]
[105.98339844 -86.71655273]
[99.29393768 -101.05397797]
[107.95642090 -113.17052460]
[101.26696014 -127.50794983]
[109.92944336 -139.62449646]
[111.04508972 -154.58294678]
[112.16073608 -169.54139709]
[113.27639008 -184.49984741]
[114.39203644 -199.45831299]
[115.50768280 -214.41676331]
[116.62332916 -229.37521362]
[117.73898315 -244.33366394]
[103.81446838 -250.28233337]
[92.57761383 -260.43179321]
[85.24732208 -273.68118286]
[82.61872101 -288.59320068]
[84.97694397 -303.55041504]
[92.06618500 -316.93029785]
[103.11746216 -327.28152466]
[116.93200684 -333.48129272]
[132.01133728 -334.85705566]
[146.71974182 -331.25961304]
[159.46176147 -323.07919312]
[168.85525513 -311.20312500]
[173.88128662 -296.91964722]
[173.99464417 -281.77810669]
[169.18305969 -267.42098999]
[159.96844482 -255.40559387]
[147.35032654 -247.03529358]
[132.69743347 -243.21801758]
[131.58178711 -228.25956726]
[130.46614075 -213.30111694]
[129.35049438 -198.34266663]
[128.23483276 -183.38420105]
[127.11919403 -168.42575073]
[126.00354004 -153.46730042]
[124.88789368 -138.50885010]
[131.65715027 -125.24134827]
[122.91487122 -112.05487823]
[129.68412781 -98.78738403]
[120.94185638 -85.60090637]
[119.82620239 -70.64245605]
[118.71055603 -55.68400192]
[117.59490967 -40.72554779]
[116.70208740 -25.75214195]
[116.03230286 -10.76710320]
[115.36251831 4.21793604]
[114.69273376 19.20297432]
[116.78951263 22.03773308]
[117.61742401 26.02892494]
[116.64789581 30.56911278]
[113.64362335 34.83776855]
[112.30538940 49.77795410]
[110.96715546 64.71813965]
[117.53813171 78.08494568]
[108.60049438 91.13980103]
[116.67021942 78.49545288]
[128.06948853 68.74574280]
[141.81213379 62.73412323]
[156.70928955 60.98065567]
[171.47219849 63.63703156]
[184.82373047 70.47344971]
[195.60884094 80.89849091]
[202.89450073 94.01028442]
[206.05044556 108.67452240]
[204.80363464 123.62261963]
[199.26193237 137.56140137]
[189.90476990 149.28501892]
[177.54161072 157.77928162]
[163.24200439 162.30934143]
[148.24301147 162.48329163]
[133.84219360 158.28608704]
[121.28536987 150.08085632]
[111.65882111 138.57739258]
[105.79534149 124.77088928]
[104.20204163 109.85924530]
[98.74668884 123.83204651]
[93.29132843 137.80484009]
[87.83597565 151.77763367]
[82.38061523 165.75044250]
[76.92525482 179.72323608]
[89.57344818 171.65953064]
[104.55428314 170.90153503]
[117.95181274 177.64738464]
[126.26393890 190.13371277]
[127.31790924 205.09663391]
[120.83821106 218.62487793]
[108.51861572 227.18220520]
[93.57945251 228.53172302]
[79.92576599 222.32069397]
[71.12660217 210.17266846]
[69.48191833 195.26396179]
[69.32178497 211.08436584]
[56.27524567 218.27024841]
[48.80750275 231.27920532]
[41.33975983 244.28814697]
[33.87202072 257.29711914]
[33.50659180 263.89846802]
[30.33788109 268.61611938]
[25.98331261 270.57745361]
[18.13155746 283.35827637]
[10.27980232 296.13912964]
[8.45416927 305.08926392]
[2.21480012 309.05059814]
[-5.82637262 321.71310425]
[-13.77305698 334.43515015]
[-21.62481308 347.21600342]
[-29.47656822 359.99682617]
[-37.32832336 372.77767944]
[-25.31752396 381.78131104]
[-14.18871975 391.85476685]
[-4.03686142 402.91207886]
[5.05143881 414.85894775]
[12.99864006 427.59341431]
[19.73693848 441.00683594]
[25.20884323 454.98477173]
[29.36767197 469.40795898]
[32.17793655 484.15338135]
[33.61566925 499.09518433]
[33.66859436 514.10589600]
[32.33626556 529.05749512]
[29.63004684 543.82232666]
[25.57303047 558.27453613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 196]
[53 195]
[54 194]
[55 193]
[57 192]
[58 191]
[59 189]
[60 188]
[61 187]
[62 184]
[63 183]
[64 182]
[65 181]
[67 179]
[68 168]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 143]
[76 141]
[77 140]
[78 139]
[79 135]
[80 134]
[81 133]
[82 132]
[85 131]
[86 130]
[87 129]
[88 128]
[90 126]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
