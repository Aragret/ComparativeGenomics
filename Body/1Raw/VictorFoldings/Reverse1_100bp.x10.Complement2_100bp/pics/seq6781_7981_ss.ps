%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[102.30073547 606.37377930]
[90.49843597 615.95367432]
[75.92704773 620.28302002]
[60.80859756 618.70159912]
[47.44853973 611.45056152]
[37.88418961 599.63568115]
[33.57403946 585.05859375]
[35.17535019 569.94226074]
[42.44394302 556.59173584]
[54.27140427 547.04290771]
[68.85413361 542.75195312]
[70.41465759 527.83337402]
[71.97518158 512.91473389]
[73.53569794 497.99612427]
[75.09622192 483.07754517]
[60.04835510 477.14157104]
[47.26424026 467.20718384]
[37.77922440 454.06900024]
[32.36426926 438.78146362]
[31.46326637 422.57431030]
[35.15668869 406.75357056]
[43.15444565 392.59634399]
[54.81866455 381.24774170]
[69.21456146 373.62814331]
[85.18534088 370.35879517]
[86.30099487 355.40032959]
[87.41664124 340.44186401]
[88.53228760 325.48342896]
[89.64794159 310.52496338]
[90.76358795 295.56652832]
[82.30298615 280.19168091]
[92.79691315 265.06030273]
[93.68972778 250.08689880]
[94.58255005 235.11349487]
[84.53472900 224.17835999]
[85.22686768 208.98048401]
[96.76476288 198.51554871]
[96.76476288 183.51554871]
[95.87194824 168.54214478]
[94.97913361 153.56874084]
[91.44307709 147.07888794]
[94.18618011 138.36607361]
[93.51638794 123.38103485]
[92.84660339 108.39599609]
[80.95215607 117.53503418]
[66.35498047 114.08213043]
[59.81557846 100.58264160]
[66.15455627 86.98788452]
[80.69905090 83.31941223]
[92.72663116 92.28002167]
[93.17323303 77.28667450]
[93.61984253 62.29332352]
[94.06644440 47.29997253]
[86.74346161 33.27555084]
[94.85626984 20.78428841]
[95.30287170 5.79093790]
[95.74948120 -9.20241165]
[95.30287170 -24.19576263]
[93.96463776 -39.13594818]
[92.62640381 -54.07613373]
[91.28816986 -69.01631927]
[80.86409760 -58.23027802]
[65.86926270 -57.83646774]
[54.89340210 -68.06047821]
[54.22397614 -83.04553223]
[64.24446869 -94.20751190]
[79.21467590 -95.15232849]
[90.55857086 -85.33959198]
[90.55857086 -100.33959198]
[77.96442413 -112.48071289]
[78.04610443 -129.63612366]
[90.26465607 -141.19232178]
[90.04132843 -156.19065857]
[89.81800079 -171.18899536]
[89.59467316 -186.18733215]
[78.53557587 -197.15701294]
[78.52274323 -212.37065125]
[89.04882050 -222.84620667]
[88.82549286 -237.84454346]
[88.60216522 -252.84288025]
[88.37883759 -267.84121704]
[80.43692780 -281.52465820]
[87.98387909 -294.36572266]
[87.76055145 -309.36407471]
[87.53722382 -324.36239624]
[87.31389618 -339.36074829]
[87.09056854 -354.35906982]
[72.23332214 -356.67645264]
[57.98147583 -361.47152710]
[44.74508286 -368.60638428]
[32.90497971 -377.87567139]
[22.80183411 -389.01275635]
[14.72633076 -401.69717407]
[8.91081810 -415.56396484]
[5.52262068 -430.21414185]
[4.65922308 -445.22622681]
[6.34546661 -460.16827393]
[10.53283596 -474.61035156]
[17.10085106 -488.13696289]
[25.86053658 -500.35891724]
[36.55986023 -510.92453003]
[48.89098358 -519.52984619]
[62.49910736 -525.92724609]
[76.99270630 -529.93273926]
[91.95477295 -531.43096924]
[106.95481110 -530.37884521]
[121.56124115 -526.80670166]
[135.35380554 -520.81732178]
[147.93566895 -512.58294678]
[158.94483948 -502.34054565]
[168.06452942 -490.38482666]
[175.03236389 -477.05978394]
[179.64787292 -462.74877930]
[181.77825928 -447.86355591]
[181.36219788 -432.83242798]
[178.41169739 -418.08786011]
[173.01162720 -404.05404663]
[165.31736755 -391.13482666]
[155.55029297 -379.70187378]
[143.99142456 -370.08416748]
[130.97332764 -362.55838013]
[116.87056732 -357.34109497]
[102.08890533 -354.58239746]
[102.31223297 -339.58407593]
[102.53556061 -324.58572388]
[102.75888824 -309.58740234]
[102.98221588 -294.58905029]
[110.90814972 -281.97839355]
[103.37717438 -268.06454468]
[103.60050201 -253.06620789]
[103.82382965 -238.06787109]
[104.04715729 -223.06953430]
[114.88045502 -212.91201782]
[115.32060242 -197.70475769]
[104.59300995 -186.41065979]
[104.81633759 -171.41232300]
[105.03966522 -156.41398621]
[105.26299286 -141.41564941]
[115.67359924 -133.82296753]
[119.87291718 -121.43555450]
[116.11564636 -108.70396423]
[105.55857086 -100.33959198]
[105.55857086 -85.33959198]
[106.22835541 -70.35455322]
[107.56658936 -55.41436768]
[108.90482330 -40.47418213]
[110.24305725 -25.53399658]
[119.07139587 -37.66084290]
[133.30569458 -42.39208221]
[147.63691711 -37.96308136]
[156.71987915 -26.02574348]
[157.16683960 -11.03240299]
[148.81111145 1.42479372]
[134.76916504 6.69962168]
[120.27830505 2.82470059]
[110.74282837 -8.75580597]
[110.29621887 6.23754406]
[109.84961700 21.23089409]
[117.20455170 34.18289185]
[109.05979919 47.74657822]
[108.61318970 62.73992920]
[108.16658020 77.73327637]
[107.71997833 92.72663116]
[107.83164215 107.72621155]
[108.50142670 122.71125031]
[109.17121887 137.69628906]
[109.95253754 152.67593384]
[110.84535217 167.64933777]
[111.73816681 182.62274170]
[120.92366028 170.76411438]
[135.29251099 166.45878601]
[149.48551941 171.31251526]
[158.20901489 183.51499939]
[158.20938110 198.51499939]
[149.48645020 210.71789551]
[135.29368591 215.57229614]
[120.92462158 211.26765442]
[111.73816681 199.40837097]
[121.95075226 211.17021179]
[120.83200836 226.34265137]
[109.55595398 236.00630188]
[108.66313934 250.97972107]
[107.77031708 265.95312500]
[115.73227692 276.10052490]
[114.68038940 288.55352783]
[105.72203827 296.68215942]
[104.60639191 311.64062500]
[103.49074554 326.59906006]
[102.37509155 341.55752563]
[101.25944519 356.51599121]
[100.14379883 371.47442627]
[113.27992249 375.96649170]
[124.94570160 383.47454834]
[134.46179199 393.55575562]
[141.27540588 405.61755371]
[144.99240112 418.95251465]
[145.40008545 432.77993774]
[142.47938538 446.29138184]
[136.40567017 458.69805908]
[127.53823090 469.27682495]
[116.39906311 477.41241455]
[103.64209747 482.63308716]
[90.01483154 484.63806152]
[88.45430756 499.55667114]
[86.89378357 514.47528076]
[85.33325958 529.39385986]
[83.77273560 544.31250000]
[97.15182495 551.52832031]
[106.74723053 563.31799316]
[111.09571838 577.88366699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[32 183]
[33 182]
[34 181]
[37 178]
[38 169]
[39 168]
[40 167]
[42 166]
[43 165]
[44 164]
[50 163]
[51 162]
[52 161]
[53 160]
[55 158]
[56 157]
[57 156]
[58 147]
[59 146]
[60 145]
[61 144]
[68 143]
[69 142]
[72 138]
[73 137]
[74 136]
[75 135]
[78 132]
[79 131]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
