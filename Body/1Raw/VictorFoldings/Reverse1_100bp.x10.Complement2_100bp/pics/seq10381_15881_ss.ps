%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[168.70735168 930.06909180]
[153.99114990 927.15197754]
[139.42063904 923.57763672]
[125.02516174 919.35314941]
[110.83370972 914.48706055]
[96.87486267 908.98913574]
[83.17673492 902.87054443]
[69.76691437 896.14355469]
[56.67239761 888.82165527]
[43.91956329 880.91967773]
[31.53409004 872.45355225]
[19.54092216 863.44018555]
[7.96421432 853.89788818]
[-3.17272258 843.84576416]
[-13.84745884 833.30413818]
[-24.03849602 822.29418945]
[-33.72531509 810.83813477]
[-42.88840103 798.95898438]
[-51.50930405 786.68072510]
[-59.57066727 774.02801514]
[-67.05624390 761.02642822]
[-73.95097351 747.70202637]
[-80.24096680 734.08178711]
[-85.91355133 720.19299316]
[-90.95729828 706.06372070]
[-95.36206818 691.72235107]
[-99.11897278 677.19787598]
[-102.22045898 662.51940918]
[-104.66027069 647.71655273]
[-106.43350220 632.81921387]
[-107.53658295 617.85729980]
[-107.96727753 602.86090088]
[-107.72473907 587.86035156]
[-106.80944061 572.88574219]
[-105.22322845 557.96734619]
[-102.96930695 543.13507080]
[-100.05220032 528.41888428]
[-96.47779083 513.84832764]
[-92.25328064 499.45288086]
[-87.38716888 485.26144409]
[-81.88926697 471.30261230]
[-75.77062988 457.60449219]
[-69.04359436 444.19467163]
[-61.72170258 431.10018921]
[-53.81970215 418.34735107]
[-45.35350037 405.96191406]
[-36.34015274 393.96875000]
[-26.79781151 382.39205933]
[-16.74569130 371.25515747]
[-6.20403576 360.58044434]
[4.80592442 350.38940430]
[16.26201630 340.70260620]
[28.14117050 331.53955078]
[40.41946411 322.91867065]
[53.07216644 314.85733032]
[66.07379913 307.37176514]
[79.39818573 300.47708130]
[93.01847839 294.18710327]
[106.90725708 288.51455688]
[121.03654480 283.47082520]
[135.37789917 279.06610107]
[131.62159729 264.54403687]
[127.86529541 250.02197266]
[124.10899353 235.49990845]
[120.35269165 220.97785950]
[109.67475891 210.59368896]
[113.70969391 195.29563904]
[109.95339203 180.77359009]
[106.19709015 166.25152588]
[102.44078827 151.72946167]
[92.69504547 163.13212585]
[77.69931030 162.77471924]
[68.50786591 150.92070007]
[71.89631653 136.30844116]
[85.36681366 129.70951843]
[98.98835754 135.98718262]
[96.32256317 121.22595978]
[93.65676880 106.46473694]
[90.83221436 103.83904266]
[89.17874146 99.98107910]
[89.22074127 95.44178009]
[91.21697235 90.98589325]
[89.21295166 76.12036133]
[79.44780731 67.69393158]
[78.08470154 55.27114105]
[85.31221008 45.57115936]
[83.52973938 30.67744064]
[81.74727631 15.78372383]
[72.42491150 3.00076389]
[78.59499359 -10.55576038]
[63.65832520 -12.69081879]
[49.78359222 -18.61991310]
[37.91679001 -27.93878555]
[28.86701775 -40.01206589]
[23.25130463 -54.01657104]
[21.45253944 -68.99745178]
[23.59336472 -83.93328857]
[29.52781487 -97.80573273]
[38.85127258 -109.66893768]
[50.92804337 -118.71405029]
[64.93471527 -124.32435608]
[79.91629028 -126.11733246]
[94.85130310 -123.97074127]
[108.72145844 -118.03093719]
[120.58105469 -108.70290375]
[129.62150574 -96.62263489]
[135.22639465 -82.61380005]
[137.01359558 -67.63153076]
[134.86123657 -52.69735336]
[128.91607666 -38.82949448]
[119.58346558 -26.97349358]
[107.49971008 -17.93771362]
[93.48870850 -12.33822632]
[102.68357849 -0.62056512]
[96.64099121 14.00125790]
[98.42346191 28.89497566]
[100.20592499 43.78869247]
[111.46590424 57.24899673]
[104.07848358 74.11634827]
[106.08249664 88.98188019]
[108.41798401 103.79894257]
[111.08377838 118.56016541]
[113.74957275 133.32138062]
[116.96285248 147.97315979]
[120.71914673 162.49522400]
[124.47544861 177.01728821]
[128.23175049 191.53933716]
[139.17835999 202.96223450]
[134.87475586 217.22155762]
[138.63105774 231.74360657]
[142.38735962 246.26567078]
[146.14366150 260.78771973]
[149.89996338 275.30978394]
[164.57838440 272.20822144]
[179.38119507 269.76831055]
[194.27854919 267.99499512]
[209.24047852 266.89184570]
[224.23681641 266.46105957]
[239.23739624 266.70352173]
[254.21199036 267.61874390]
[269.13043213 269.20486450]
[283.96270752 271.45870972]
[298.67892456 274.37573242]
[313.24945068 277.95004272]
[327.64495850 282.17446899]
[341.83642578 287.04049683]
[355.79528809 292.53833008]
[369.49343872 298.65689087]
[382.90328979 305.38385010]
[395.99783325 312.70565796]
[408.75070190 320.60760498]
[421.13619995 329.07373047]
[433.12939453 338.08700562]
[444.70614624 347.62927246]
[455.84313965 357.68133545]
[466.51791382 368.22293091]
[476.70898438 379.23281860]
[486.39584351 390.68887329]
[495.55895996 402.56796265]
[504.17993164 414.84622192]
[512.24133301 427.49887085]
[519.72698975 440.50045776]
[526.62176514 453.82479858]
[532.91180420 467.44506836]
[538.58441162 481.33380127]
[543.62823486 495.46307373]
[548.03302002 509.80438232]
[551.79003906 524.32891846]
[554.89154053 539.00732422]
[557.33142090 553.81011963]
[559.10473633 568.70751953]
[560.20782471 583.66943359]
[560.63861084 598.66577148]
[560.39611816 613.66638184]
[559.48089600 628.64093018]
[557.89471436 643.55938721]
[555.64086914 658.39166260]
[552.72381592 673.10791016]
[549.14947510 687.67840576]
[544.92498779 702.07391357]
[540.05895996 716.26538086]
[534.56109619 730.22418213]
[528.44250488 743.92236328]
[521.71551514 757.33215332]
[514.39367676 770.42669678]
[506.49172974 783.17956543]
[498.02557373 795.56506348]
[489.01226807 807.55822754]
[479.46997070 819.13494873]
[469.41787720 830.27191162]
[458.87628174 840.94665527]
[447.86636353 851.13775635]
[436.41030884 860.82458496]
[424.53118896 869.98767090]
[412.25292969 878.60858154]
[399.60025024 886.66998291]
[386.59863281 894.15557861]
[373.27429199 901.05035400]
[359.65402222 907.34039307]
[345.76525879 913.01300049]
[331.63598633 918.05676270]
[317.29464722 922.46154785]
[302.77014160 926.21850586]
[288.09170532 929.32000732]
[273.28887939 931.75982666]
[258.39151001 933.53308105]
[243.42958069 934.63623047]
[228.43322754 935.06695557]
[213.43266296 934.82440186]
[198.45806885 933.90911865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[67 127]
[68 126]
[69 125]
[70 124]
[76 123]
[77 122]
[78 121]
[82 120]
[83 119]
[86 117]
[87 116]
[88 115]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
