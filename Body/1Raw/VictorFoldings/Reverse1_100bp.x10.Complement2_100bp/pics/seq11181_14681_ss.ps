%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[22.56340218 665.28009033]
[7.50476837 667.17797852]
[-7.22163916 663.50408936]
[-19.62419510 654.75531006]
[-28.02555466 642.11486816]
[-31.28950500 627.29217529]
[-28.97462082 612.29199219]
[-21.39397430 599.14294434]
[-9.57278252 589.62329102]
[4.89023352 585.02050781]
[5.78304911 570.04705811]
[6.67586517 555.07366943]
[7.56868124 540.10028076]
[8.46149731 525.12689209]
[1.49545515 511.96163940]
[10.04043865 498.64645386]
[10.93325424 483.67303467]
[11.82606983 468.69964600]
[9.77172852 465.83398438]
[9.00333118 461.83090210]
[10.04035091 457.30566406]
[13.10784626 453.08221436]
[14.66836929 438.16360474]
[16.22889328 423.24499512]
[3.11034203 430.51849365]
[-10.81312466 424.93841553]
[-15.27764511 410.61822510]
[-6.99214172 398.11419678]
[7.93562078 396.64385986]
[18.50090408 407.28952026]
[21.16670036 392.52832031]
[19.22782898 388.16369629]
[20.01019669 382.53475952]
[24.13788795 377.37008667]
[27.24199677 362.69479370]
[30.34610748 348.01950073]
[33.45021820 333.34420776]
[23.67778206 326.77276611]
[16.67301559 317.26312256]
[13.27518559 305.91528320]
[13.90464306 294.05172729]
[18.51096153 283.06332397]
[26.57611847 274.24615479]
[37.17265320 268.64871216]
[49.07027817 266.94732666]
[52.82658005 252.42527771]
[56.58288193 237.90322876]
[60.33918381 223.38116455]
[48.36624908 214.46051025]
[40.70006561 201.60067749]
[38.53559113 186.74539185]
[42.23347092 172.15383911]
[51.26039124 160.05720520]
[64.26575470 152.31747437]
[79.28366852 150.14077759]
[83.03996277 135.61871338]
[78.73635864 121.35939789]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[98.24282074 67.64484406]
[98.31287384 63.70027924]
[99.53064728 60.36075211]
[101.55609894 57.91859436]
[103.98760986 56.52363586]
[108.60161591 42.25090408]
[113.21562958 27.97817039]
[117.82963562 13.70543671]
[122.44364929 -0.56729656]
[126.63066101 -14.97107887]
[130.38696289 -29.49313736]
[134.14326477 -44.01519775]
[137.89956665 -58.53725815]
[132.03816223 -70.02667236]
[135.46575928 -82.04479980]
[145.82037354 -88.29848480]
[149.79246521 -102.76300812]
[142.23495483 -116.38364410]
[146.46926880 -130.99613953]
[159.50105286 -138.11714172]
[163.47314453 -152.58166504]
[167.44523621 -167.04618835]
[154.03646851 -175.26469421]
[143.49310303 -186.91459656]
[136.66180420 -201.04823303]
[134.08764648 -216.51899719]
[135.97076416 -232.07434082]
[142.15075684 -246.45726013]
[152.12030029 -258.50775146]
[165.06680298 -267.25643921]
[179.93867493 -272.00259399]
[195.53065491 -272.37011719]
[199.28695679 -286.89218140]
[203.04325867 -301.41424561]
[206.58293152 -315.99060059]
[209.90519714 -330.61807251]
[213.11846924 -345.26986694]
[216.22257996 -359.94515991]
[219.32669067 -374.62045288]
[205.74925232 -381.17153931]
[194.13458252 -390.78210449]
[185.15792847 -402.89340210]
[179.34118652 -416.80126953]
[177.02253723 -431.69714355]
[178.33679199 -446.71502686]
[183.20751953 -460.98175049]
[191.35156250 -473.66787720]
[202.29542542 -484.03585815]
[215.40286255 -491.48294067]
[229.91180420 -495.57611084]
[244.97871399 -496.07742310]
[259.72766113 -492.95776367]
[273.30111694 -486.39843750]
[284.90994263 -476.78082275]
[293.87927246 -464.66412354]
[299.68756104 -450.75271606]
[301.99719238 -435.85543823]
[300.67382812 -420.83837891]
[295.79443359 -406.57458496]
[287.64270020 -393.89340210]
[276.69256592 -383.53204346]
[263.58062744 -376.09292603]
[249.06921387 -372.00854492]
[234.00198364 -371.51635742]
[230.89787292 -356.84106445]
[227.79376221 -342.16574097]
[229.48503113 -334.97122192]
[224.53265381 -327.29580688]
[221.21038818 -312.66836548]
[222.95243835 -308.22152710]
[221.91950989 -302.63314819]
[217.56532288 -297.65792847]
[213.80902100 -283.13586426]
[210.05271912 -268.61383057]
[222.50427246 -261.51412964]
[232.69943237 -251.42185974]
[239.93731689 -239.02200317]
[243.71804810 -225.15844727]
[243.77728271 -210.77661133]
[240.10469055 -196.85891724]
[232.94508362 -184.35774231]
[222.78208923 -174.13018799]
[210.30549622 -166.87937927]
[196.36448669 -163.10606384]
[181.90975952 -163.07408142]
[177.93766785 -148.60955811]
[173.96557617 -134.14503479]
[181.53295898 -121.36731720]
[177.71073914 -106.64165497]
[164.25698853 -98.79090881]
[160.28489685 -84.32638550]
[165.63012695 -67.61125946]
[152.42161560 -54.78095627]
[148.66531372 -40.25889587]
[144.90901184 -25.73683739]
[141.15270996 -11.21477795]
[142.45751953 -8.73372078]
[142.85815430 -5.58632517]
[142.09590149 -2.11438251]
[140.04045105 1.25305283]
[136.71638489 4.04671288]
[132.10237122 18.31944656]
[127.48835754 32.59217834]
[122.87435150 46.86491394]
[118.26034546 61.13764572]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[108.23995972 128.99084473]
[97.56202698 139.37501526]
[93.80572510 153.89707947]
[105.88465118 163.08268738]
[113.50601196 176.15777588]
[115.53533173 191.11422729]
[111.69424438 205.66873169]
[102.59817505 217.61135864]
[89.65798950 225.14109802]
[74.86124420 227.13746643]
[71.10494232 241.65953064]
[67.34864044 256.18157959]
[63.59233856 270.70364380]
[77.19224548 283.18841553]
[82.54711914 300.76727295]
[78.25711823 318.54833984]
[65.59394836 331.62911987]
[48.12551880 336.44830322]
[45.02140808 351.12359619]
[41.91730118 365.79891968]
[38.81319046 380.47421265]
[35.92791748 395.19409180]
[33.26212311 409.95532227]
[31.14749718 424.80551147]
[29.58697510 439.72412109]
[28.02645111 454.64273071]
[26.79947662 469.59246826]
[25.90666008 484.56585693]
[25.01384354 499.53927612]
[31.91602516 513.77551270]
[23.43490219 526.01965332]
[22.54208755 540.99310303]
[21.64927101 555.96649170]
[20.75645447 570.93988037]
[19.86363983 585.91333008]
[33.67722321 592.20214844]
[44.28342438 603.05908203]
[50.24784088 617.01580811]
[50.76383209 632.18475342]
[45.76161957 646.51452637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[16 199]
[17 198]
[18 197]
[22 196]
[23 195]
[24 194]
[30 193]
[31 192]
[34 191]
[35 190]
[36 189]
[37 188]
[45 183]
[46 182]
[47 181]
[48 180]
[55 173]
[56 172]
[58 170]
[60 168]
[61 167]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[71 157]
[72 156]
[73 155]
[74 154]
[77 152]
[78 151]
[81 148]
[82 147]
[83 146]
[93 135]
[94 134]
[95 133]
[96 130]
[97 129]
[98 127]
[99 126]
[100 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
