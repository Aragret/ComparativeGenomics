%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[15.90560246 551.40319824]
[16.98050690 566.39190674]
[15.86148739 581.37744141]
[12.57239246 596.04034424]
[7.18333149 610.06799316]
[-0.19082840 623.16149902]
[-9.39290619 635.04168701]
[-20.22675896 645.45544434]
[-32.46146011 654.18066406]
[-45.83623123 661.03149414]
[-60.06598663 665.86181641]
[-74.84741211 668.56866455]
[-89.86545563 669.09442139]
[-104.79998779 667.42785645]
[-119.33268738 663.60443115]
[-133.15379333 657.70568848]
[-145.96870422 649.85742188]
[-157.50425720 640.22680664]
[-167.51460266 629.01916504]
[-175.78633118 616.47338867]
[-182.14315796 602.85687256]
[-186.44956970 588.45996094]
[-188.61380005 573.58935547]
[-188.58969116 558.56213379]
[-186.37776184 543.69860840]
[-182.02516174 529.31549072]
[-175.62467957 515.71948242]
[-167.31272888 503.20034790]
[-157.26647949 492.02487183]
[-145.70007324 482.43133545]
[-132.86004639 474.62417603]
[-119.02008820 468.76983643]
[-104.47519684 464.99310303]
[-89.53538513 463.37445068]
[-74.51911163 463.94836426]
[-59.74644852 466.70266724]
[-45.53226852 471.57861328]
[-38.65285492 458.24920654]
[-31.77344131 444.91976929]
[-24.89402962 431.59033203]
[-18.01461792 418.26092529]
[-11.13520432 404.93148804]
[-4.25579214 391.60205078]
[2.62362075 378.27261353]
[9.50303364 364.94320679]
[16.38244629 351.61376953]
[22.35400772 337.85366821]
[27.39092445 323.72463989]
[32.42784119 309.59561157]
[29.41355133 295.00918579]
[41.33560944 284.60845947]
[45.73660660 270.26861572]
[49.49290848 255.74656677]
[53.24920654 241.22450256]
[43.83821869 231.75479126]
[40.30702972 218.76730347]
[43.68119812 205.62634277]
[53.18297577 195.79096985]
[66.40741730 191.90444946]
[70.37951660 177.43992615]
[74.35160828 162.97540283]
[78.32370758 148.51087952]
[72.61506653 137.84608459]
[75.80590820 125.76293945]
[86.71299744 118.87831116]
[90.90000916 104.47452545]
[89.94713593 96.47048950]
[95.25807190 89.88832855]
[99.65906525 75.54848480]
[104.06006622 61.20863342]
[98.71753693 49.46894836]
[102.67835236 37.61585999]
[113.30187988 31.83077621]
[117.91589355 17.55804253]
[122.52989960 3.28530931]
[126.93090057 -11.05453777]
[131.11790466 -25.45832062]
[135.30491638 -39.86210251]
[139.49192810 -54.26588440]
[133.97520447 -65.92472839]
[137.75910950 -77.83547211]
[148.29533386 -83.77808380]
[152.69633484 -98.11792755]
[147.35380554 -109.85761261]
[151.31462097 -121.71070099]
[161.93814087 -127.49578857]
[166.55215454 -141.76852417]
[171.16616821 -156.04125977]
[175.78018188 -170.31399536]
[168.83839417 -184.25849915]
[173.72097778 -198.66735840]
[187.05772400 -205.19934082]
[191.67172241 -219.47207642]
[184.19940186 -230.67828369]
[184.54054260 -243.94831848]
[192.34663391 -254.44342041]
[204.58799744 -258.46566772]
[209.41398621 -272.66812134]
[196.16748047 -279.78005981]
[184.27230835 -288.97543335]
[174.05300903 -300.00338745]
[165.78834534 -312.56304932]
[159.70378113 -326.31179810]
[155.96533203 -340.87457275]
[154.67497253 -355.85403442]
[155.86790466 -370.84158325]
[159.51159668 -385.42834473]
[165.50662231 -399.21636963]
[173.68943787 -411.82949829]
[183.83682251 -422.92367554]
[195.67195129 -432.19619751]
[208.87193298 -439.39413452]
[223.07669067 -444.32107544]
[237.89868164 -446.84268188]
[252.93356323 -446.89010620]
[267.77114868 -444.46209717]
[282.00671387 -439.62484741]
[295.25186157 -432.51034546]
[307.14526367 -423.31268311]
[317.36242676 -412.28277588]
[325.62466431 -399.72152710]
[331.70657349 -385.97158813]
[335.44223022 -371.40811157]
[336.72970581 -356.42837524]
[335.53387451 -341.44107056]
[331.88739014 -326.85501099]
[325.88970947 -313.06814575]
[317.70446777 -300.45657349]
[307.55493164 -289.36437988]
[295.71801758 -280.09414673]
[282.51663208 -272.89874268]
[268.31094360 -267.97451782]
[253.48847961 -265.45578003]
[238.45358276 -265.41125488]
[223.61643982 -267.84213257]
[218.79045105 -253.63966370]
[226.86190796 -238.88533020]
[221.66259766 -222.53657532]
[205.94445801 -214.85806274]
[201.33045959 -200.58534241]
[208.31974792 -187.48245239]
[203.84379578 -172.94215393]
[190.05290222 -165.69998169]
[185.43890381 -151.42724609]
[180.82489014 -137.15451050]
[176.21087646 -122.88178253]
[180.80441284 -105.94464874]
[167.03617859 -93.71693420]
[162.63517761 -79.37708282]
[167.48037720 -62.51022339]
[153.89572144 -50.07887268]
[149.70870972 -35.67509079]
[145.52169800 -21.27130890]
[141.33468628 -6.86752653]
[142.80895996 -2.32488990]
[141.44523621 3.19210839]
[136.80262756 7.89931870]
[132.18862915 22.17205238]
[127.57461548 36.44478607]
[132.16815186 53.38191605]
[118.39990997 65.60963440]
[113.99891663 79.94947815]
[109.59791565 94.28932953]
[105.30379486 108.66153717]
[101.11678314 123.06532288]
[105.92034912 140.84191895]
[92.78823090 152.48298645]
[88.81613159 166.94750977]
[84.84403992 181.41203308]
[80.87194061 195.87655640]
[91.61350250 208.94235229]
[92.44242859 225.66999817]
[83.22988129 239.45733643]
[67.77127075 244.98080444]
[64.01496887 259.50286865]
[60.25866699 274.02493286]
[73.69936371 267.36550903]
[87.95576477 272.02975464]
[94.86115265 285.34573364]
[90.45980835 299.68548584]
[77.27302551 306.83453369]
[62.85478592 302.69757080]
[55.46463776 289.64538574]
[58.11865234 305.24240112]
[46.55686951 314.63250732]
[41.51995468 328.76153564]
[36.48303986 342.89056396]
[49.20607376 334.94549561]
[64.20581818 335.03381348]
[76.83442688 343.12814331]
[83.17879486 356.72036743]
[81.27304840 371.59881592]
[71.70771027 383.15322876]
[57.44669342 387.80331421]
[42.90893555 384.10824585]
[32.59912109 373.21292114]
[29.71187401 358.49316406]
[22.83246231 371.82260132]
[15.95304966 385.15203857]
[9.07363701 398.48147583]
[2.19422483 411.81088257]
[-4.68518782 425.14031982]
[-11.56459999 438.46975708]
[-18.44401360 451.79919434]
[-25.32342529 465.12860107]
[-32.20283890 478.45803833]
[-19.99387169 487.21926880]
[-9.19071865 497.66482544]
[-0.02365056 509.57208252]
[7.31193590 522.68719482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[45 198]
[46 197]
[47 187]
[48 186]
[49 185]
[51 183]
[52 176]
[53 175]
[54 174]
[59 170]
[60 169]
[61 168]
[62 167]
[65 165]
[66 164]
[68 163]
[69 162]
[70 161]
[73 159]
[74 158]
[75 157]
[76 154]
[77 153]
[78 152]
[79 151]
[82 149]
[83 148]
[86 146]
[87 145]
[88 144]
[89 143]
[92 140]
[93 139]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
