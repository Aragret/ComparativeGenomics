%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[151.77101135 543.67187500]
[153.03912354 528.68853760]
[156.82136536 514.13507080]
[163.00889587 500.43023682]
[171.42369080 487.96832275]
[181.82363892 477.10791016]
[193.90953064 468.16143799]
[207.33360291 461.38632202]
[202.93260193 447.04647827]
[198.53160095 432.70660400]
[194.13061523 418.36676025]
[189.72961426 404.02691650]
[185.22198486 389.72024536]
[180.60797119 375.44750977]
[175.55940247 370.04992676]
[176.03323364 360.92779541]
[171.63223267 346.58795166]
[167.12460327 332.28128052]
[162.51058960 318.00854492]
[157.89659119 303.73580933]
[153.28257751 289.46307373]
[142.00549316 279.73287964]
[145.12271118 264.22180176]
[140.50871277 249.94906616]
[135.89469910 235.67633057]
[131.28068542 221.40359497]
[126.66667938 207.13085938]
[122.05267334 192.85812378]
[110.77558899 183.12792969]
[113.89281464 167.61685181]
[109.27880096 153.34411621]
[104.66479492 139.07138062]
[100.05078125 124.79865265]
[95.43677521 110.52591705]
[90.74198914 124.77228546]
[79.61907196 134.83612061]
[64.97553253 138.08676147]
[50.63914490 133.67448425]
[40.35741806 122.75267029]
[36.81796646 108.17623901]
[40.94599533 93.75544739]
[51.66244507 83.25984192]
[66.16606140 79.43295288]
[80.66564178 83.27513123]
[91.37056732 93.78126526]
[88.92483521 78.98199463]
[86.47911072 64.18272400]
[76.59525299 51.82877731]
[82.15385437 38.01026535]
[79.70812225 23.21099472]
[69.82426453 10.85704994]
[75.38286591 -2.96146154]
[65.49900818 -15.31540585]
[71.05760193 -29.13391685]
[68.61187744 -43.93318939]
[62.28699875 -30.33186722]
[50.42198944 -21.15463448]
[35.66752625 -18.45170593]
[21.31979370 -22.82692337]
[10.58410931 -33.30285263]
[5.85885286 -47.53914261]
[8.19965935 -62.35536957]
[17.08358765 -74.44155121]
[30.52594376 -81.09761047]
[45.52367020 -80.83655548]
[58.72624207 -73.71671295]
[67.18417358 -61.32864761]
[67.18417358 -76.32865143]
[67.18417358 -91.32865143]
[67.18417358 -106.32865143]
[67.18417358 -121.32865143]
[52.02146912 -124.31378174]
[37.73328018 -130.18939209]
[24.86469460 -138.72935486]
[13.90626144 -149.60597229]
[5.27529383 -162.40251160]
[-0.70002198 -176.62913513]
[-3.79310942 -191.74174500]
[-3.88758945 -207.16270447]
[-0.98166001 -222.30294800]
[4.81190491 -236.58451843]
[13.27013111 -249.46253967]
[24.06842232 -260.44613647]
[36.79302216 -269.11697388]
[50.95686722 -275.14538574]
[66.01821899 -278.30276489]
[65.79489136 -293.30108643]
[65.57156372 -308.29943848]
[65.34823608 -323.29776001]
[65.12490845 -338.29611206]
[64.90158081 -353.29443359]
[64.67825317 -368.29278564]
[64.45492554 -383.29110718]
[64.23159790 -398.28945923]
[56.28968811 -411.97290039]
[63.83663940 -424.81396484]
[63.61331177 -439.81228638]
[63.38998413 -454.81063843]
[49.37046432 -460.75814819]
[38.98681259 -471.89813232]
[34.03806305 -486.30056763]
[35.38161469 -501.47009277]
[42.78469086 -514.77856445]
[54.96466064 -523.92010498]
[69.81127167 -527.31097412]
[84.75226593 -524.36364746]
[97.19901276 -515.58874512]
[104.99504852 -502.50665283]
[106.78965759 -487.38385010]
[102.27191925 -472.84048462]
[92.22454834 -461.39624023]
[78.38832092 -455.03396606]
[78.61164856 -440.03561401]
[78.83497620 -425.03729248]
[86.76091003 -412.42660522]
[79.22993469 -398.51278687]
[79.45326233 -383.51443481]
[79.67658997 -368.51611328]
[79.89991760 -353.51776123]
[80.12324524 -338.51943970]
[80.34657288 -323.52108765]
[80.56990051 -308.52276611]
[80.79322815 -293.52441406]
[81.01655579 -278.52609253]
[95.37776947 -276.03588867]
[109.03778839 -270.93981934]
[121.52796936 -263.41113281]
[132.41954041 -253.70646667]
[141.33824158 -242.15728760]
[147.97723389 -229.15841675]
[152.10769653 -215.15460205]
[153.58659363 -200.62528992]
[152.36175537 -186.06822205]
[148.47361755 -171.98237610]
[142.05398560 -158.85081482]
[133.32145691 -147.12422180]
[122.57405090 -137.20535278]
[110.17904663 -129.43521118]
[96.56037903 -124.08134460]
[82.18417358 -121.32865143]
[82.18417358 -106.32865143]
[82.18417358 -91.32865143]
[82.18417358 -76.32865143]
[82.18417358 -61.32864761]
[83.41114807 -46.37891388]
[85.85687256 -31.57964516]
[95.56579590 -20.28424263]
[90.18213654 -5.40718889]
[99.89105988 5.88821220]
[94.50739288 20.76526642]
[96.95312500 35.56453705]
[106.66204071 46.85993958]
[101.27838135 61.73699188]
[103.72410583 76.53626251]
[106.16983795 91.33553314]
[109.70951080 105.91191101]
[114.32351685 120.18464661]
[118.93753052 134.45738220]
[123.55153656 148.73010254]
[128.16554260 163.00283813]
[139.77264404 173.75392151]
[136.32540894 188.24412537]
[140.93940735 202.51684570]
[145.55342102 216.78958130]
[150.16743469 231.06231689]
[154.78144836 245.33505249]
[159.39544678 259.60778809]
[171.00254822 270.35885620]
[167.55531311 284.84906006]
[172.16931152 299.12179565]
[176.78332520 313.39453125]
[181.39733887 327.66726685]
[187.01473999 334.87020874]
[185.97207642 342.18695068]
[190.37307739 356.52679443]
[194.88070679 370.83349609]
[199.49472046 385.10623169]
[205.11212158 392.30917358]
[204.06945801 399.62591553]
[208.47045898 413.96575928]
[212.87145996 428.30563354]
[217.27244568 442.64547729]
[221.67344666 456.98532104]
[236.58700562 455.06341553]
[251.61085510 455.68972778]
[266.31271362 458.84625244]
[280.26956177 464.44213867]
[293.07986450 472.31640625]
[304.37503052 482.24249268]
[313.83007812 493.93478394]
[321.17297363 507.05691528]
[326.19244385 521.23126221]
[328.74404907 536.05010986]
[328.75439453 551.08697510]
[326.22320557 565.90930176]
[321.22323608 580.09057617]
[313.89843750 593.22277832]
[304.45947266 604.92810059]
[293.17797852 614.86975098]
[280.37854004 622.76159668]
[266.42938232 628.37670898]
[251.73188782 631.55346680]
[236.70892334 632.20043945]
[221.79273987 630.29907227]
[207.41247559 625.90405273]
[193.98191833 619.14184570]
[181.88745117 610.20690918]
[171.47709656 599.35650635]
[163.05035400 586.90264893]
[156.84968567 573.20373535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 177]
[14 176]
[16 175]
[17 174]
[18 172]
[19 171]
[20 170]
[21 169]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[30 160]
[31 159]
[32 158]
[33 157]
[34 156]
[45 155]
[46 154]
[47 153]
[49 151]
[50 150]
[52 148]
[54 146]
[55 145]
[67 144]
[68 143]
[69 142]
[70 141]
[71 140]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
