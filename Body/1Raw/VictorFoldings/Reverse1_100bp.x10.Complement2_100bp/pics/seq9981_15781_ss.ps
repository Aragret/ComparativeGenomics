%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[163.62124634 661.49169922]
[166.60238647 646.71978760]
[172.91036987 633.03381348]
[182.20498657 621.17181396]
[193.98501587 611.77355957]
[207.61515808 605.34582520]
[204.51104736 590.67047119]
[201.40693665 575.99517822]
[198.30284119 561.31988525]
[195.19873047 546.64459229]
[192.09461975 531.96929932]
[188.99050903 517.29400635]
[185.88639832 502.61868286]
[175.68278503 491.76806641]
[180.39678955 476.66546631]
[177.29267883 461.99017334]
[174.07940674 447.33837891]
[170.75714111 432.71090698]
[167.43487549 418.08346558]
[164.11262512 403.45599365]
[160.57295227 388.87960815]
[156.81665039 374.35754395]
[153.06034851 359.83551025]
[149.30404663 345.31344604]
[145.54774475 330.79138184]
[133.71772766 328.06634521]
[124.11206055 320.52551270]
[118.59155273 309.55166626]
[118.25866699 297.19979858]
[123.23792267 285.81228638]
[132.64062500 277.57473755]
[129.31835938 262.94729614]
[116.61756134 255.25149536]
[113.03993988 240.46450806]
[121.19811249 227.19491577]
[117.87584686 212.56745911]
[107.51182556 201.86996460]
[112.00045013 186.69883728]
[108.67818451 172.07138062]
[105.35592651 157.44392395]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[70.24908447 52.06214142]
[67.08821869 37.18049240]
[75.21862030 24.75341606]
[71.89636230 10.12595654]
[68.57409668 -4.50150347]
[65.25183868 -19.12896347]
[60.42519379 -4.92672777]
[50.29922485 6.13965082]
[36.58033371 12.20529366]
[21.58039474 12.24803257]
[7.82716179 6.26066494]
[-2.36170459 -4.74783182]
[-7.26920128 -18.92233276]
[-6.06832838 -33.87418365]
[1.03854549 -47.08374023]
[12.85378742 -56.32495499]
[27.38632202 -60.04052353]
[42.18716049 -57.60430527]
[54.76210403 -49.42684937]
[62.99265671 -36.88465118]
[62.54605103 -51.87800217]
[62.09944534 -66.87135315]
[61.65283966 -81.86470032]
[60.76002502 -96.83811188]
[59.42179108 -111.77828979]
[58.08355713 -126.71847534]
[56.74532318 -141.65866089]
[54.74130630 -156.52418518]
[52.07551193 -171.28541565]
[41.94384766 -179.26739502]
[40.02738953 -191.61692810]
[46.81455994 -201.62995911]
[44.36883545 -216.42922974]
[41.92310715 -231.22850037]
[32.03924942 -243.58245850]
[37.59784698 -257.40097046]
[35.15211868 -272.20022583]
[32.70639038 -286.99951172]
[30.26066399 -301.79876709]
[27.81493759 -316.59805298]
[25.36920929 -331.39730835]
[10.34467220 -332.70654297]
[-3.88197756 -337.71185303]
[-16.41643906 -346.09863281]
[-26.47078705 -357.33969116]
[-33.41299438 -370.72836304]
[-36.80667114 -385.42303467]
[-36.43848801 -400.50003052]
[-32.33158493 -415.01153564]
[-24.74412727 -428.04537964]
[-14.15307140 -438.78225708]
[-1.22417831 -446.54721069]
[13.22983074 -450.85214233]
[28.30036545 -451.42645264]
[43.04007721 -448.23400879]
[56.52241898 -441.47549438]
[67.89987183 -431.57577515]
[76.45725250 -419.15716553]
[81.65662384 -405.00027466]
[83.17115784 -389.99505615]
[80.90564728 -375.08471680]
[75.00249481 -361.20654297]
[65.83279419 -349.23294067]
[53.97294617 -339.91656494]
[40.16847992 -333.84304810]
[42.61420822 -319.04376221]
[45.05993652 -304.24450684]
[47.50566101 -289.44522095]
[49.95138931 -274.64596558]
[52.39711761 -259.84667969]
[62.10604095 -248.55128479]
[56.72237778 -233.67424011]
[59.16810608 -218.87496948]
[61.61383057 -204.07569885]
[73.46361542 -191.13159180]
[66.83673096 -173.95120239]
[69.50252533 -159.18998718]
[78.92275238 -170.86300659]
[93.82264709 -172.59301758]
[105.66688538 -163.38899231]
[107.67054749 -148.52342224]
[98.68583679 -136.51196289]
[83.85961151 -134.23535156]
[71.68550873 -142.99690247]
[73.02374268 -128.05671692]
[74.36197662 -113.11652374]
[75.70021057 -98.17634583]
[77.76236725 -96.27748871]
[79.19661713 -93.44738007]
[79.64449310 -89.92107391]
[78.83914948 -86.05895996]
[76.64618683 -82.31130981]
[77.09279633 -67.31795502]
[77.53939819 -52.32460785]
[77.98600769 -37.33125687]
[79.87930298 -22.45122337]
[83.20156097 -7.82376289]
[86.52381897 6.80369711]
[89.84607697 21.43115807]
[102.54688263 29.12694740]
[106.12449646 43.91394424]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[119.98339081 154.12165833]
[123.30564880 168.74913025]
[126.62790680 183.37658691]
[137.22956848 195.12033081]
[132.50331116 209.24519348]
[135.82557678 223.87265015]
[148.91535950 232.31631470]
[152.07621765 247.19795227]
[143.94581604 259.62503052]
[147.26808167 274.25250244]
[164.13867188 280.89636230]
[173.56124878 296.20303345]
[171.92375183 313.94479370]
[160.06980896 327.03506470]
[163.82611084 341.55712891]
[167.58241272 356.07919312]
[171.33871460 370.60125732]
[175.09501648 385.12332153]
[179.44920349 390.09851074]
[180.48213196 395.68688965]
[178.74008179 400.13372803]
[182.06234741 414.76119995]
[185.38459778 429.38864136]
[188.70686340 444.01611328]
[193.65924072 451.69149780]
[191.96797180 458.88604736]
[195.07208252 473.56134033]
[205.49772644 485.46163940]
[200.56169128 499.51455688]
[203.66580200 514.18988037]
[206.76991272 528.86517334]
[209.87402344 543.54046631]
[212.97813416 558.21575928]
[216.08224487 572.89105225]
[219.18635559 587.56640625]
[222.29046631 602.24169922]
[237.35594177 602.59973145]
[251.93258667 606.42309570]
[265.23431396 613.50549316]
[276.54379272 623.46508789]
[285.25109863 635.76464844]
[290.88662720 649.74096680]
[293.14651489 664.64025879]
[291.90887451 679.65911865]
[287.24041748 693.98748779]
[279.39294434 706.85266113]
[268.78967285 717.56097412]
[256.00234985 725.53479004]
[241.72067261 730.34411621]
[226.71476746 731.72967529]
[211.79391479 729.61663818]
[197.76277161 724.11907959]
[185.37800598 715.53332520]
[175.30754089 704.32250977]
[168.09443665 691.09118652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[15 182]
[16 181]
[17 179]
[18 178]
[19 177]
[20 176]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[31 165]
[32 164]
[35 161]
[36 160]
[38 158]
[39 157]
[40 156]
[41 155]
[42 154]
[43 153]
[45 151]
[46 150]
[47 149]
[50 146]
[51 145]
[52 144]
[53 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 134]
[72 133]
[73 132]
[74 131]
[75 124]
[76 123]
[79 121]
[80 120]
[81 119]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
