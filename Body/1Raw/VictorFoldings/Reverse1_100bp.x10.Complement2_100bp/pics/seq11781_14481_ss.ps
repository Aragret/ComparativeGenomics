%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[167.57467651 539.51843262]
[163.77853394 524.92895508]
[163.58489990 509.85494995]
[167.00503540 495.17276001]
[173.84007263 481.73605347]
[183.69265747 470.32595825]
[195.98995972 461.60586548]
[210.01704407 456.08279419]
[208.01303101 441.21725464]
[206.00901794 426.35171509]
[204.00500488 411.48620605]
[192.54586792 398.19503784]
[199.68133545 381.21954346]
[197.45622253 366.38552856]
[195.23110962 351.55148315]
[193.00598145 336.71743774]
[190.78086853 321.88339233]
[186.48674011 307.51116943]
[180.20938110 293.88784790]
[173.93202209 280.26452637]
[161.57859802 271.94335938]
[162.83053589 256.17175293]
[156.55317688 242.54843140]
[150.27581787 228.92512512]
[143.99845886 215.30180359]
[137.72108459 201.67848206]
[131.44372559 188.05517578]
[125.16636658 174.43185425]
[111.88722992 173.05104065]
[100.93658447 165.22624207]
[95.23695374 152.91430664]
[96.37413025 139.28619385]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[82.12706757 78.16336823]
[77.01994324 73.96469116]
[75.08966064 68.61950684]
[76.08334351 63.94814301]
[70.42055511 50.05811691]
[56.12921524 43.86172485]
[50.58420944 29.69459343]
[56.57959747 16.10816765]
[50.91680908 2.21814108]
[45.25402451 -11.67188549]
[30.43455124 -9.03330898]
[15.39618301 -9.53355026]
[0.79617327 -13.14831448]
[-12.72788620 -19.71723557]
[-24.58591270 -28.95099640]
[-34.26107407 -40.44406128]
[-41.33232880 -53.69249344]
[-45.49272919 -68.11605835]
[-46.56276321 -83.08360291]
[-44.49807739 -97.94072723]
[-39.39133072 -112.03833771]
[-31.46803474 -124.76105499]
[-21.07658386 -135.55404663]
[-8.67294502 -143.94723511]
[-14.33573151 -157.83724976]
[-19.99851799 -171.72727966]
[-25.66130447 -185.61730957]
[-38.03588867 -195.47531128]
[-35.67592239 -210.18177795]
[-41.33870697 -224.07179260]
[-47.00149536 -237.96182251]
[-52.66428375 -251.85185242]
[-67.17361450 -247.96823120]
[-82.05529022 -245.93379211]
[-97.07460785 -245.78060913]
[-111.99468231 -247.51110840]
[-126.58020020 -251.09799194]
[-140.60115051 -256.48468018]
[-153.83636475 -263.58624268]
[-166.07713318 -272.29064941]
[-177.13040161 -282.46063232]
[-186.82183838 -293.93579102]
[-194.99858093 -306.53515625]
[-201.53167725 -320.06002808]
[-206.31811523 -334.29705811]
[-209.28237915 -349.02175903]
[-210.37771606 -364.00186157]
[-209.58686829 -379.00109863]
[-206.92230225 -393.78295898]
[-202.42604065 -408.11428833]
[-196.16899109 -421.76904297]
[-188.24984741 -434.53192139]
[-178.79350281 -446.20156860]
[-167.94909668 -456.59396362]
[-155.88764954 -465.54519653]
[-142.79939270 -472.91412354]
[-128.89076233 -478.58450317]
[-114.38110352 -482.46688843]
[-99.49925232 -484.50009155]
[-84.47992706 -484.65200806]
[-69.55999756 -482.92025757]
[-54.97477722 -479.33212280]
[-40.95428848 -473.94427490]
[-27.71966171 -466.84158325]
[-15.47962379 -458.13616943]
[-4.42721748 -447.96524048]
[5.26324558 -436.48925781]
[13.43893147 -423.88919067]
[19.97089958 -410.36380005]
[24.75612831 -396.12634277]
[27.71915245 -381.40142822]
[28.81323624 -366.42123413]
[28.02112579 -351.42202759]
[25.35531425 -336.64038086]
[20.85784531 -322.30944824]
[14.59965134 -308.65521240]
[6.67943192 -295.89303589]
[-2.77789974 -284.22418213]
[-13.62318707 -273.83267212]
[-25.68538475 -264.88244629]
[-38.77425385 -257.51464844]
[-33.11146927 -243.62461853]
[-27.44868279 -229.73458862]
[-21.78589439 -215.84455872]
[-9.81635284 -206.98005676]
[-11.77127838 -191.28009033]
[-6.10849142 -177.39007568]
[-0.44570503 -163.50004578]
[5.21708155 -149.61001587]
[19.95340347 -152.28144836]
[34.92896271 -151.83026123]
[49.48909378 -148.27375793]
[62.99678802 -141.76501465]
[74.86055756 -132.58633423]
[84.56034088 -121.13703156]
[91.67030334 -107.91596985]
[95.87751007 -93.49990082]
[96.99573517 -78.51828003]
[94.97367859 -63.62578964]
[89.89730072 -49.47370911]
[81.98622131 -36.68146133]
[71.58416748 -25.80948067]
[59.14405060 -17.33467293]
[64.80683899 -3.44464540]
[70.46961975 10.44538116]
[84.25524902 15.96733952]
[90.19599152 29.97313309]
[84.31058502 44.39532852]
[89.97337341 58.28535461]
[95.84233093 72.08953094]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[134.45744324 125.16085052]
[145.68122864 137.59176636]
[147.26803589 154.09764099]
[138.78968811 168.15449524]
[145.06704712 181.77781677]
[151.34440613 195.40112305]
[157.62176514 209.02444458]
[163.89912415 222.64776611]
[170.17648315 236.27107239]
[176.45385742 249.89439392]
[189.25627136 259.19000244]
[187.55534363 273.98718262]
[193.83270264 287.61050415]
[200.11006165 301.23379517]
[200.81365967 286.25030518]
[205.84593201 272.11962891]
[214.77156067 260.06420898]
[226.81835938 251.12695312]
[240.94416809 246.08100891]
[255.92697144 245.36294556]
[270.47061157 249.03483582]
[283.31689453 256.77905273]
[293.35449219 267.92562866]
[299.71508789 281.51028442]
[301.84838867 296.35781860]
[299.56985474 311.18374634]
[293.07659912 324.70550537]
[282.93035889 335.75329590]
[270.00888062 343.37139893]
[255.43002319 346.90075684]
[240.45495605 346.03607178]
[226.37921143 340.85211182]
[214.42047119 331.79736328]
[205.61491394 319.65826416]
[207.84002686 334.49230957]
[210.06513977 349.32635498]
[212.29026794 364.16040039]
[214.51538086 378.99444580]
[224.40490723 387.27453613]
[225.95281982 399.67565918]
[218.87052917 409.48217773]
[220.87454224 424.34771729]
[222.87855530 439.21322632]
[224.88256836 454.07876587]
[239.87144470 455.69024658]
[254.03889465 460.84262085]
[266.56121826 469.23635864]
[276.71038818 480.38345337]
[283.89636230 493.63580322]
[287.70135498 508.22299194]
[287.90411377 523.29687500]
[284.49288940 537.98114014]
[277.66598511 551.42199707]
[267.82031250 562.83807373]
[255.52830505 571.56555176]
[241.50457764 577.09716797]
[226.56446838 579.11126709]
[211.57656860 577.49066162]
[197.41224670 572.32971191]
[184.89501953 563.92840576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 194]
[9 193]
[10 192]
[11 191]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[18 164]
[19 163]
[20 162]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[33 150]
[34 149]
[36 147]
[37 146]
[40 145]
[41 144]
[44 141]
[45 140]
[46 139]
[60 125]
[61 124]
[62 123]
[63 122]
[65 120]
[66 119]
[67 118]
[68 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
