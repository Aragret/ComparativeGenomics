%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[112.55627441 653.96594238]
[98.96136475 647.61450195]
[85.81097412 640.38751221]
[73.16140747 632.31591797]
[61.06683350 623.43426514]
[49.57904434 613.78063965]
[38.74723053 603.39630127]
[28.61778069 592.32580566]
[19.23406792 580.61645508]
[10.63627625 568.31848145]
[2.86122203 555.48455811]
[-4.05780029 542.16949463]
[-10.09116173 528.43048096]
[-15.21302700 514.32629395]
[-19.40146255 499.91729736]
[-22.63853264 485.26519775]
[-24.91037750 470.43276978]
[-26.20726585 455.48352051]
[-26.52364540 440.48144531]
[-25.85816193 425.49078369]
[-24.21366501 410.57577515]
[-21.59719467 395.80023193]
[-18.01995850 381.22747803]
[-13.49727345 366.91986084]
[-8.04850483 352.93869019]
[-1.69698763 339.34384155]
[5.53008080 326.19348145]
[13.60175323 313.54394531]
[22.48346519 301.44943237]
[32.13718033 289.96170044]
[42.52156448 279.12994385]
[53.59214783 269.00057983]
[65.30152893 259.61691284]
[77.59955597 251.01919556]
[90.43357086 243.24421692]
[103.74861908 236.32528687]
[117.48767853 230.29200745]
[131.59191895 225.17021179]
[120.60954285 215.10856628]
[124.18720245 199.69718933]
[120.00019073 185.29339600]
[115.59918976 170.95355225]
[110.98518372 156.68081665]
[106.37117767 142.40808105]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[77.20661926 80.28128052]
[80.43774414 65.74136353]
[75.61174774 51.53890991]
[70.78574371 37.33645248]
[68.83818817 52.20948410]
[63.67294693 66.29210663]
[55.54203796 78.89720154]
[44.84219742 89.40972900]
[32.09548187 97.31677246]
[17.92384338 102.23252106]
[3.01873946 103.91712952]
[-11.89257336 102.28839874]
[-26.08253860 97.42580414]
[-38.85879898 89.56658936]
[-49.59796906 79.09423828]
[-57.77606201 66.51970673]
[-62.99405289 52.45654297]
[-64.99734497 37.59091949]
[-63.68818665 22.64815712]
[-59.13045883 8.35735130]
[-51.54654694 -4.58421898]
[-41.30648041 -15.54510689]
[-28.90989876 -23.99050522]
[-14.96165657 -29.50834465]
[-0.14232063 -31.82939720]
[14.82504082 -30.84041405]
[29.21013832 -26.58964920]
[42.31108856 -19.28450775]
[53.48867035 -9.28142452]
[62.19750214 2.93153000]
[68.01078033 16.75211143]
[68.90360260 1.77870607]
[69.79641724 -13.19469929]
[70.68923187 -28.16810608]
[71.58204651 -43.14151001]
[62.96055222 -59.41269302]
[73.18820953 -73.67319489]
[73.85799408 -88.65823364]
[74.52778625 -103.64327240]
[75.19757080 -118.62831116]
[75.86735535 -133.61335754]
[76.53713989 -148.59838867]
[77.20692444 -163.58343506]
[62.57327271 -167.08381653]
[48.86663055 -173.29063416]
[36.58249283 -181.97949219]
[26.16491508 -192.83631897]
[17.99049187 -205.46862793]
[12.35472012 -219.41978455]
[9.46133041 -234.18544006]
[9.41491699 -249.23185730]
[12.21715832 -264.01507568]
[17.76675415 -278.00073242]
[25.86309052 -290.68322754]
[36.21348953 -301.60412598]
[48.44379044 -310.36862183]
[62.11187744 -316.65985107]
[76.72365570 -320.25045776]
[91.75092316 -321.01062012]
[106.65044403 -318.91284180]
[120.88362122 -314.03295898]
[133.93592834 -306.54736328]
[145.33552551 -296.72671509]
[154.67033386 -284.92593384]
[161.60292053 -271.57168579]
[165.88264465 -257.14669800]
[167.35481262 -242.17242432]
[165.96621704 -227.19015503]
[161.76702881 -212.74151611]
[154.90907288 -199.34878540]
[145.64024353 -187.49613953]
[134.29560852 -177.61201477]
[121.28527832 -170.05374146]
[107.07955170 -165.09452820]
[92.19196320 -162.91363525]
[91.52217865 -147.92860413]
[90.85239410 -132.94355774]
[90.18260956 -117.95852661]
[89.51282501 -102.97348785]
[88.84303284 -87.98844910]
[88.17324829 -73.00341034]
[96.10219574 -63.86785126]
[95.66682434 -51.37808609]
[86.55545044 -42.24869537]
[85.66263580 -27.27528954]
[84.76982117 -12.30188370]
[83.87700653 2.67152190]
[82.98419189 17.64492798]
[84.98820496 32.51045609]
[89.81420135 46.71290970]
[94.64019775 60.91536713]
[106.06089783 70.47658539]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[121.57751465 130.46263123]
[120.64390564 137.79408264]
[125.25791931 152.06681824]
[129.87193298 166.33953857]
[134.51452637 171.04675293]
[135.87825012 176.56375122]
[134.40397644 181.10638428]
[138.59098816 195.51017761]
[149.87284851 206.60206604]
[145.99569702 220.98320007]
[160.64772034 217.74588013]
[175.48011780 215.47377014]
[190.42935181 214.17662048]
[205.43141174 213.85997009]
[220.42207336 214.52519226]
[235.33712769 216.16941833]
[250.11270142 218.78562927]
[264.68554688 222.36260986]
[278.99322510 226.88504028]
[292.97448730 232.33355713]
[306.56945801 238.68484497]
[319.71994019 245.91168213]
[332.36962891 253.98312378]
[344.46429443 262.86462402]
[355.95220947 272.51812744]
[366.78411865 282.90231323]
[376.91372681 293.97271729]
[386.29757690 305.68194580]
[394.89550781 317.97982788]
[402.67071533 330.81369019]
[409.58987427 344.12863159]
[415.62341309 357.86758423]
[420.74545288 371.97171021]
[424.93405151 386.38067627]
[428.17129517 401.03271484]
[430.44329834 415.86511230]
[431.74038696 430.81436157]
[432.05691528 445.81643677]
[431.39163208 460.80709839]
[429.74731445 475.72213745]
[427.13101196 490.49768066]
[423.55395508 505.07049561]
[419.03143311 519.37817383]
[413.58282471 533.35937500]
[407.23147583 546.95434570]
[400.00454712 560.10479736]
[391.93301392 572.75439453]
[383.05145264 584.84899902]
[373.39788818 596.33685303]
[363.01361084 607.16876221]
[351.94314575 617.29827881]
[340.23388672 626.68206787]
[327.93597412 635.27990723]
[315.10205078 643.05505371]
[301.78707886 649.97412109]
[288.04809570 656.00756836]
[273.94390869 661.12951660]
[259.53494263 665.31805420]
[244.88287354 668.55517578]
[230.05044556 670.82714844]
[215.10119629 672.12408447]
[200.09913635 672.44055176]
[185.10847473 671.77520752]
[170.19345093 670.13079834]
[155.41790771 667.51440430]
[140.84510803 663.93725586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 154]
[40 152]
[41 151]
[42 148]
[43 147]
[44 146]
[45 144]
[46 143]
[48 141]
[50 139]
[51 138]
[52 137]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
