%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[156.08251953 374.23684692]
[160.46038818 359.86892700]
[166.60456848 346.16299438]
[174.41815186 333.33526611]
[183.77789307 321.58798218]
[194.53619385 311.10647583]
[206.52337646 302.05603027]
[199.05564880 289.04705811]
[191.58790588 276.03811646]
[184.12016296 263.02917480]
[171.07362366 255.84327698]
[170.91348267 240.02287292]
[163.44573975 227.01393127]
[155.97801208 214.00497437]
[148.51026917 200.99601746]
[141.04252625 187.98706055]
[127.99597931 180.80117798]
[127.83585358 164.98078918]
[120.36811066 151.97183228]
[114.31184387 147.73585510]
[112.88768005 138.71313477]
[105.61444855 125.59443665]
[98.34121704 112.47574615]
[90.77684021 99.52275085]
[82.92508698 86.74190521]
[75.07332611 73.96105957]
[67.22157288 61.18022156]
[59.36981964 48.39937592]
[56.86593628 63.18891907]
[46.22817612 73.76426697]
[31.42415428 76.18108368]
[17.97540855 69.53794861]
[10.89798927 56.31258774]
[12.83159637 41.43773651]
[23.05504417 30.46134567]
[37.75523758 27.47733879]
[51.45024109 33.59945679]
[45.17287827 19.97613907]
[38.89551926 6.35282326]
[27.08782578 1.16233313]
[22.13986015 -10.31379032]
[26.20331001 -21.70742607]
[20.12947655 -35.42269135]
[14.05564213 -49.13795853]
[-1.06807530 -59.64294434]
[1.48025703 -77.00592041]
[-4.79710340 -90.62923431]
[-11.07446384 -104.25254822]
[-17.35182571 -117.87586975]
[-23.62918663 -131.49917603]
[-29.90654564 -145.12249756]
[-43.98237991 -139.91680908]
[-58.41929245 -135.81755066]
[-73.13045502 -132.84938049]
[-88.02738953 -131.03013611]
[-103.02050781 -130.37078857]
[-118.01963043 -130.87525940]
[-132.93455505 -132.54055786]
[-147.67559814 -135.35664368]
[-162.15406799 -139.30657959]
[-176.28291321 -144.36662292]
[-189.97715759 -150.50634766]
[-203.15443420 -157.68879700]
[-215.73548889 -165.87080383]
[-227.64466858 -175.00314331]
[-238.81034851 -185.03089905]
[-249.16537476 -195.89376831]
[-258.64746094 -207.52641296]
[-267.19958496 -219.85885620]
[-274.77032471 -232.81695557]
[-281.31414795 -246.32276917]
[-286.79165649 -260.29507446]
[-291.16995239 -274.64981079]
[-294.42269897 -289.30068970]
[-296.53033447 -304.15957642]
[-297.48013306 -319.13708496]
[-297.26647949 -334.14315796]
[-295.89056396 -349.08758545]
[-293.36071777 -363.88043213]
[-289.69213867 -378.43273926]
[-284.90686035 -392.65698242]
[-279.03372192 -406.46765137]
[-272.10803223 -419.78167725]
[-264.17138672 -432.51895142]
[-255.27159119 -444.60290527]
[-245.46211243 -455.96081543]
[-234.80198669 -466.52444458]
[-223.35531616 -476.23022461]
[-211.19093323 -485.01974487]
[-198.38200378 -492.84020996]
[-185.00555420 -499.64456177]
[-171.14204407 -505.39184570]
[-156.87484741 -510.04754639]
[-142.28977966 -513.58361816]
[-127.47454071 -515.97888184]
[-112.51824188 -517.21881104]
[-97.51083374 -517.29602051]
[-82.54257202 -516.21002197]
[-67.70347595 -513.96734619]
[-53.08279037 -510.58148193]
[-38.76845551 -506.07281494]
[-24.84655190 -500.46844482]
[-11.40081215 -493.80209351]
[1.48789930 -486.11383057]
[13.74206734 -477.44989014]
[25.28799248 -467.86239624]
[36.05623627 -457.40902710]
[45.98203278 -446.15261841]
[55.00569153 -434.16085815]
[63.07294083 -421.50592041]
[70.13526154 -408.26385498]
[76.15018463 -394.51434326]
[81.08152008 -380.34005737]
[84.89962769 -365.82626343]
[87.58153534 -351.06024170]
[89.11112213 -336.13076782]
[89.47917175 -321.12768555]
[88.68348694 -306.14117432]
[86.72885132 -291.26141357]
[83.62700653 -276.57785034]
[79.39662933 -262.17880249]
[74.06314087 -248.15090942]
[67.65863037 -234.57849121]
[60.22161102 -221.54318237]
[51.79681396 -209.12339783]
[42.43490601 -197.39382935]
[32.19219208 -186.42500305]
[21.13027000 -176.28289795]
[9.31567383 -167.02851868]
[-3.18054485 -158.71751404]
[-16.28322983 -151.39985657]
[-10.00586987 -137.77655029]
[-3.72850895 -124.15322876]
[2.54885173 -110.52991486]
[8.82621288 -96.90659332]
[15.10357285 -83.28327942]
[26.33927536 -78.80158997]
[31.68054390 -67.50315857]
[27.77090836 -55.21179199]
[33.84474182 -41.49652863]
[39.91857910 -27.78125954]
[54.63225174 -18.21702194]
[52.51883316 0.07546239]
[58.79619598 13.69877815]
[65.07355499 27.32209396]
[72.15065765 40.54762268]
[80.00241852 53.32846451]
[87.85417175 66.10930634]
[95.70592499 78.89015198]
[103.55768585 91.67098999]
[107.14375305 93.08961487]
[110.08709717 96.08203125]
[111.69887543 100.32575989]
[111.45991516 105.20251465]
[118.73314667 118.32121277]
[126.00637054 131.43991089]
[133.37705994 144.50408936]
[140.84480286 157.51304626]
[154.42549133 165.62942505]
[154.05148315 180.51933289]
[161.51921082 193.52827454]
[168.98695374 206.53723145]
[176.45469666 219.54618835]
[183.92243958 232.55513000]
[197.50312805 240.67150879]
[197.12911987 255.56141663]
[204.59684753 268.57037354]
[212.06459045 281.57931519]
[219.53233337 294.58828735]
[233.39274597 288.80102539]
[247.86920166 284.79660034]
[262.73339844 282.63821411]
[277.75091553 282.35983276]
[292.68490601 283.96594238]
[307.29980469 287.43112183]
[321.36517334 292.70077515]
[334.65911865 299.69177246]
[346.97201538 308.29385376]
[358.10964966 318.37136841]
[367.89636230 329.76538086]
[376.17785645 342.29614258]
[382.82345581 355.76608276]
[387.72836304 369.96273804]
[390.81524658 384.66220093]
[392.03540039 399.63265991]
[391.36959839 414.63800049]
[388.82830811 429.44155884]
[384.45166016 443.80984497]
[378.30862427 457.51629639]
[370.49612427 470.34469604]
[361.13735962 482.09274292]
[350.37994385 492.57516479]
[338.39352417 501.62664795]
[325.36715698 509.10437012]
[311.50625610 514.89050293]
[297.02944946 518.89367676]
[282.16506958 521.05084229]
[267.14752197 521.32788086]
[252.21368408 519.72058105]
[237.59907532 516.25415039]
[223.53416443 510.98330688]
[210.24079895 503.99118042]
[197.92863464 495.38806152]
[186.79183960 485.30963135]
[177.00607300 473.91479492]
[168.72564697 461.38333130]
[162.08119202 447.91281128]
[157.17745972 433.71575928]
[154.09181213 419.01602173]
[152.87292480 404.04547119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 169]
[8 168]
[9 167]
[10 166]
[12 164]
[13 163]
[14 162]
[15 161]
[16 160]
[18 158]
[19 157]
[21 156]
[22 155]
[23 154]
[24 150]
[25 149]
[26 148]
[27 147]
[28 146]
[37 145]
[38 144]
[39 143]
[42 141]
[43 140]
[44 139]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
