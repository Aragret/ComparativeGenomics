%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[54.93015289 624.23333740]
[61.72032547 610.71490479]
[72.35703278 599.95776367]
[85.79821014 593.01586914]
[83.35248566 578.21661377]
[80.90675354 563.41735840]
[78.46102905 548.61810303]
[67.03929901 542.65368652]
[61.04888153 531.02630615]
[62.87596512 517.87817383]
[72.07545471 508.04031372]
[69.85033417 493.20626831]
[66.85556030 478.50827026]
[63.09926224 463.98620605]
[59.34296036 449.46414185]
[55.58666229 434.94210815]
[48.85372543 448.34609985]
[35.58132553 455.33493042]
[20.71974182 453.30187988]
[9.81197453 443.00524902]
[6.92635202 428.28540039]
[13.13914013 414.63253784]
[26.13312340 407.13876343]
[41.06186676 408.59912109]
[52.35792160 418.46990967]
[50.35390472 403.60440063]
[48.34989166 388.73886108]
[46.34587860 373.87332153]
[44.34186554 359.00781250]
[39.54183197 373.21905518]
[31.52189255 385.89505005]
[20.73561287 396.31887817]
[7.79301119 403.90103149]
[-6.57394695 408.21270752]
[-21.55274010 409.01004028]
[-36.29624557 406.24795532]
[-49.97064590 400.08267212]
[-61.80258560 390.86285400]
[-71.12291718 379.10992432]
[-77.40451813 365.48855591]
[-80.29215240 350.76913452]
[-79.62248993 335.78408813]
[-75.43341827 321.38088989]
[-67.96184540 308.37414551]
[-57.63032150 297.49942017]
[-45.02315140 289.37173462]
[-30.85332298 284.45077515]
[-15.92221451 283.01480103]
[-1.07425129 285.14505005]
[12.85084248 290.72103882]
[25.06553650 299.42742920]
[34.87902832 310.77185059]
[41.73631668 324.11267090]
[45.24971771 338.69650269]
[48.57197952 324.06903076]
[51.89423752 309.44155884]
[55.21649551 294.81411743]
[58.53875732 280.18664551]
[61.53353119 265.48864746]
[64.19932556 250.72743225]
[66.86511993 235.96621704]
[69.53091431 221.20500183]
[64.17867279 207.30525208]
[74.24536896 195.09983826]
[76.91116333 180.33862305]
[68.15543365 170.88522339]
[66.41726685 157.92140198]
[72.55331421 146.15026855]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[95.81963348 42.11121750]
[105.86055756 31.10989571]
[108.74582672 16.39000320]
[111.63110352 1.67011273]
[114.40670776 -13.07085037]
[117.07250977 -27.83206749]
[111.91093445 -42.78762817]
[121.78695679 -53.93722534]
[116.62538910 -68.89278412]
[126.50140381 -80.04238129]
[115.11332703 -95.18259430]
[118.35266113 -113.52433777]
[133.70230103 -123.49951172]
[135.92741394 -138.33355713]
[138.15254211 -153.16760254]
[140.37765503 -168.00164795]
[134.77308655 -182.79689026]
[144.31275940 -194.23559570]
[146.53788757 -209.06964111]
[148.76300049 -223.90368652]
[143.15843201 -238.69892883]
[152.69810486 -250.13763428]
[154.92323303 -264.97167969]
[157.14834595 -279.80572510]
[143.31027222 -285.81988525]
[131.50090027 -295.21145630]
[122.52542877 -307.34005737]
[116.99579620 -321.37878418]
[115.28903961 -336.37042236]
[117.52152252 -351.29281616]
[123.54103088 -365.12857056]
[132.93714905 -376.93432617]
[145.06921387 -385.90512085]
[159.11007690 -391.42932129]
[174.10237122 -393.13027954]
[189.02392578 -390.89205933]
[202.85734558 -384.86718750]
[214.65945435 -375.46652222]
[223.62556458 -363.33099365]
[229.14434814 -349.28799438]
[230.83953857 -334.29504395]
[228.59553528 -319.37435913]
[222.56533813 -305.54327393]
[213.16011047 -293.74478149]
[201.02111816 -284.78335571]
[186.97599792 -279.26998901]
[171.98239136 -277.58059692]
[169.75727844 -262.74655151]
[167.53215027 -247.91252136]
[173.29586792 -234.17829895]
[163.59704590 -221.67857361]
[161.37191772 -206.84452820]
[159.14680481 -192.01048279]
[164.91052246 -178.27626038]
[155.21170044 -165.77653503]
[152.98657227 -150.94248962]
[150.76145935 -136.10844421]
[148.53634644 -121.27439880]
[157.14515686 -113.78743744]
[161.11184692 -102.96241760]
[159.34231567 -91.44882965]
[152.16186523 -82.12456512]
[141.26261902 -77.37658691]
[146.61486816 -63.47684860]
[136.54817200 -51.27143097]
[141.90042114 -37.37168884]
[131.83372498 -25.16627121]
[129.16792297 -10.40505505]
[131.07264709 -3.26405954]
[126.35099030 4.55538511]
[123.46572113 19.27527618]
[120.58044434 33.99516678]
[125.72515106 47.97305298]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[109.26564026 157.19493103]
[105.88562012 174.01428223]
[91.67237854 183.00440979]
[89.00658417 197.76562500]
[94.16815186 212.72119141]
[84.29213715 223.87078857]
[81.62634277 238.63200378]
[78.96054077 253.39321899]
[76.29474640 268.15444946]
[78.06140900 273.06625366]
[77.79405975 277.70111084]
[75.93880463 281.33059692]
[73.16621399 283.50891113]
[69.84395599 298.13638306]
[66.52169800 312.76382446]
[63.19943619 327.39129639]
[59.87717819 342.01873779]
[59.20739365 357.00378418]
[61.21140671 371.86932373]
[63.21541977 386.73483276]
[65.21943665 401.60037231]
[67.22344971 416.46591187]
[70.10871887 431.18579102]
[73.86502075 445.70785522]
[77.62132263 460.22991943]
[81.37762451 474.75198364]
[88.91439819 461.78289795]
[102.98109436 456.57443237]
[117.14660645 461.50781250]
[124.93464661 474.32760620]
[122.78463745 489.17269897]
[111.67952728 499.25619507]
[96.69642639 499.96798706]
[84.68437958 490.98117065]
[86.90950012 505.81521606]
[101.16533661 515.95379639]
[103.62941742 532.93151855]
[93.26029968 546.17236328]
[95.70603180 560.97161865]
[98.15175629 575.77087402]
[100.59748077 590.57019043]
[115.55743408 592.81848145]
[129.08952332 599.58148193]
[139.86799622 610.19653320]
[146.83689880 623.62371826]
[149.31349182 638.54760742]
[147.05514526 653.50604248]
[140.28309631 667.03356934]
[129.66081238 677.80493164]
[116.22894287 684.76483154]
[101.30342865 687.23144531]
[86.34649658 684.96307373]
[72.82349396 678.18194580]
[62.05924988 667.55242920]
[55.10834503 654.11596680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 196]
[5 195]
[6 194]
[7 193]
[11 190]
[12 189]
[13 181]
[14 180]
[15 179]
[16 178]
[25 177]
[26 176]
[27 175]
[28 174]
[29 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 164]
[60 163]
[61 162]
[62 161]
[64 159]
[65 158]
[69 155]
[70 154]
[71 153]
[73 151]
[74 150]
[75 149]
[77 147]
[78 146]
[79 145]
[80 143]
[81 142]
[83 140]
[85 138]
[88 133]
[89 132]
[90 131]
[91 130]
[93 128]
[94 127]
[95 126]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
