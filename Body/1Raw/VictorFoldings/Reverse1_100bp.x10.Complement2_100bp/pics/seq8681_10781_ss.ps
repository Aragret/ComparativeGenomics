%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-97.88175964 524.27087402]
[-93.35524750 538.59887695]
[-90.91397858 553.42523193]
[-90.60765839 568.44812012]
[-92.44251251 583.36169434]
[-96.38119507 597.86230469]
[-102.34351349 611.65472412]
[-110.20809174 624.45819092]
[-119.81480408 636.01208496]
[-130.96807861 646.08111572]
[-143.44085693 654.46026611]
[-156.97918701 660.97906494]
[-171.30746460 665.50469971]
[-186.13397217 667.94500732]
[-201.15687561 668.25042725]
[-216.07031250 666.41461182]
[-230.57067871 662.47503662]
[-244.36274719 656.51190186]
[-257.16574097 648.64654541]
[-268.71902466 639.03906250]
[-278.78735352 627.88519287]
[-287.16577148 615.41192627]
[-293.68368530 601.87316895]
[-298.20843506 587.54461670]
[-300.64785767 572.71795654]
[-300.95233154 557.69500732]
[-299.11563110 542.78167725]
[-295.17514038 528.28155518]
[-289.21112061 514.48986816]
[-281.34494019 501.68737793]
[-271.73681641 490.13470459]
[-260.58227539 480.06704712]
[-248.10847473 471.68939209]
[-234.56933594 465.17233276]
[-220.24050903 460.64846802]
[-205.41369629 458.20996094]
[-190.39074707 457.90643311]
[-175.47753906 459.74404907]
[-160.97766113 463.68542480]
[-147.18632507 469.65029907]
[-139.33457947 456.86944580]
[-131.48281860 444.08862305]
[-123.63106537 431.30776978]
[-115.77931213 418.52691650]
[-118.28413391 406.69256592]
[-111.84730530 395.98037720]
[-99.45201111 392.41394043]
[-91.41083527 379.75140381]
[-83.36966705 367.08886719]
[-75.32849121 354.42636108]
[-67.28731537 341.76382446]
[-59.24614716 329.10128784]
[-58.95491791 314.20953369]
[-45.02536011 306.70767212]
[-54.68933868 296.12210083]
[-61.28580856 283.38311768]
[-64.35855865 269.35806274]
[-63.69154739 255.00373840]
[-59.32405090 241.30096436]
[-51.54843140 229.18775940]
[-40.89057922 219.49499512]
[-28.07433128 212.88946533]
[-13.97231674 209.82801819]
[0.45344445 210.52590942]
[14.21718407 214.94177246]
[22.44599152 202.40036011]
[30.67479897 189.85896301]
[38.90360641 177.31756592]
[34.54467010 165.19200134]
[38.01735687 152.58158875]
[48.26984787 144.14968872]
[61.70154190 143.14764404]
[70.11616516 130.73014832]
[78.53078461 118.31264496]
[86.94539642 105.89514923]
[88.14216614 91.96463013]
[100.63710785 85.69023132]
[109.05172729 73.27273560]
[117.46633911 60.85523987]
[125.88095856 48.43774414]
[134.29557800 36.02024841]
[142.71020508 23.60275269]
[151.12481689 11.18525791]
[159.26002502 -1.41705394]
[159.89112854 -17.22566795]
[173.14582825 -24.01992607]
[180.99758911 -36.80076981]
[188.84934998 -49.58161163]
[195.82778931 -62.85945892]
[201.90162659 -76.57472229]
[207.97546387 -90.28999329]
[214.04930115 -104.00525665]
[220.12313843 -117.72052765]
[226.19696045 -131.43579102]
[220.74357605 -146.02682495]
[227.09867859 -159.84953308]
[241.04260254 -164.95858765]
[247.11643982 -178.67385864]
[234.38218689 -186.65005493]
[222.91275024 -196.35740662]
[212.94160461 -207.59828186]
[204.67178345 -220.14381409]
[198.27160645 -233.73861694]
[193.87141418 -248.10591125]
[191.56076050 -262.95318604]
[191.38670349 -277.97817993]
[193.35278320 -292.87500000]
[197.41897583 -307.34036255]
[203.50248718 -321.07980347]
[211.47947693 -333.81353760]
[221.18753052 -345.28237915]
[232.42901611 -355.25283813]
[244.97506714 -363.52188110]
[258.57028198 -369.92120361]
[272.93783569 -374.32052612]
[287.78524780 -376.63024902]
[302.81027222 -376.80337524]
[317.70697021 -374.83636475]
[332.17208862 -370.76928711]
[345.91113281 -364.68493652]
[358.64437866 -356.70715332]
[370.11260986 -346.99838257]
[380.08236694 -335.75628662]
[388.35064697 -323.20971680]
[394.74914551 -309.61413574]
[399.14755249 -295.24627686]
[401.45635986 -280.39871216]
[401.62857056 -265.37371826]
[399.66064453 -250.47712708]
[395.59265137 -236.01226807]
[389.50744629 -222.27360535]
[381.52886963 -209.54083252]
[371.81939697 -198.07319641]
[360.57669067 -188.10414124]
[348.02960205 -179.83663940]
[334.43362427 -173.43899536]
[320.06552124 -169.04145813]
[305.21780396 -166.73358154]
[290.19277954 -166.56230164]
[275.29632568 -168.53115845]
[260.83169556 -172.60002136]
[254.75787354 -158.88475037]
[260.34606934 -145.12585449]
[254.38172913 -131.13009644]
[239.91223145 -125.36195374]
[233.83839417 -111.64669037]
[227.76457214 -97.93142700]
[221.69073486 -84.21615601]
[215.61689758 -70.50089264]
[209.54306030 -56.78562546]
[222.82179260 -63.76240540]
[237.77340698 -62.55871201]
[249.76501465 -53.54753113]
[255.08087158 -39.52106476]
[252.07379150 -24.82557106]
[241.67556763 -14.01460934]
[227.10820007 -10.43807220]
[212.88552856 -15.20418835]
[203.41462708 -26.83612633]
[201.63018799 -41.72985458]
[193.77842712 -28.94901276]
[185.92668152 -16.16817093]
[185.85719299 -1.27372777]
[172.04087830 6.43470144]
[172.50015259 9.93061447]
[171.28897095 13.82266808]
[168.23957825 17.32331657]
[163.54231262 19.59987640]
[155.12770081 32.01737213]
[146.71307373 44.43486786]
[138.29846191 56.85236359]
[129.88383484 69.26985931]
[121.46921539 81.68735504]
[113.05460358 94.10485077]
[111.85783386 108.03536987]
[99.36289215 114.30976868]
[90.94827271 126.72726440]
[82.53366089 139.14476013]
[74.11904144 151.56225586]
[77.73403168 168.67807007]
[68.04266357 182.83407593]
[51.44500732 185.54637146]
[43.21619797 198.08776855]
[34.98739243 210.62916565]
[26.75858498 223.17057800]
[36.98922348 235.11515808]
[43.43787384 249.44337463]
[45.59045792 264.99304199]
[43.28098679 280.50552368]
[36.70432663 294.72744751]
[26.39977837 306.51205444]
[13.20686913 314.91162109]
[-1.80304193 319.25381470]
[-17.41376877 319.19522095]
[-32.36283493 314.74884033]
[-33.22922516 330.54632568]
[-46.58362198 337.14248657]
[-54.62479401 349.80499268]
[-62.66596603 362.46752930]
[-70.70713806 375.13003540]
[-78.74831390 387.79257202]
[-86.78948212 400.45510864]
[-87.13890839 418.86593628]
[-102.99846649 426.37869263]
[-110.85021973 439.15951538]
[-118.70198059 451.94036865]
[-126.55373383 464.72122192]
[-134.40548706 477.50204468]
[-122.85102844 487.10806274]
[-112.78131866 498.26071167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[42 206]
[43 205]
[44 204]
[47 202]
[48 201]
[49 200]
[50 199]
[51 198]
[52 197]
[54 195]
[65 185]
[66 184]
[67 183]
[68 182]
[72 179]
[73 178]
[74 177]
[75 176]
[77 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[83 168]
[84 164]
[86 162]
[87 161]
[88 160]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[94 145]
[97 142]
[98 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
