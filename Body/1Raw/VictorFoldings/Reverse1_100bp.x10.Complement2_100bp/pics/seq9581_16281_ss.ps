%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[72.40293884 597.67205811]
[60.29253387 606.56689453]
[47.03948212 613.64770508]
[32.91360092 618.77020264]
[18.20247078 621.83020020]
[3.20559573 622.76531982]
[-11.77171040 621.55657959]
[-26.42452812 618.22857666]
[-40.45454407 612.84899902]
[-53.57612610 605.52746582]
[-65.52213287 596.41302490]
[-76.04936218 585.69116211]
[-84.94349670 573.58020020]
[-92.02345276 560.32672119]
[-97.14510345 546.20050049]
[-100.20416260 531.48919678]
[-101.13837433 516.49224854]
[-99.92869568 501.51504517]
[-96.59976959 486.86242676]
[-91.21936798 472.83273315]
[-83.89701843 459.71160889]
[-74.78180695 447.76617432]
[-64.05930328 437.23959351]
[-51.94779587 428.34622192]
[-38.69387054 421.26708984]
[-24.56735611 416.14630127]
[-9.85584831 413.08816528]
[5.14114332 412.15487671]
[20.11829948 413.36547852]
[23.44055939 398.73800659]
[26.76281929 384.11056519]
[30.08507729 369.48309326]
[25.35882759 355.35821533]
[35.96047974 343.61447144]
[39.28274155 328.98703003]
[42.49601364 314.33523560]
[32.39807892 303.41876221]
[30.64375114 288.47262573]
[38.11396790 275.20428467]
[52.12657547 268.80484009]
[55.23068619 254.12953186]
[58.33479691 239.45422363]
[56.64352798 232.25968933]
[61.59591293 224.58428955]
[64.91817474 209.95683289]
[68.24043274 195.32936096]
[71.56269073 180.70190430]
[74.77596283 166.05012512]
[77.88007355 151.37481689]
[64.07601166 157.24404907]
[50.80862045 150.24574280]
[47.85812759 135.53878784]
[57.39952469 123.96459961]
[72.39925385 124.05524445]
[81.79968262 135.74229431]
[85.98669434 121.33851624]
[90.17370605 106.93473053]
[94.14580536 92.47020721]
[97.90209961 77.94815063]
[101.65840149 63.42609024]
[105.41470337 48.90402985]
[109.17100525 34.38197327]
[97.59889221 24.49017906]
[91.49401855 10.61150742]
[92.01823425 -4.47972822]
[99.01401520 -17.79212761]
[111.04639435 -26.71016693]
[125.69689941 -29.50802994]
[129.45320129 -44.03009033]
[133.20950317 -58.55215073]
[136.96580505 -73.07421112]
[140.72210693 -87.59626770]
[142.50457764 -102.48998260]
[142.28125000 -117.48831940]
[142.05792236 -132.48666382]
[141.83459473 -147.48500061]
[141.27638245 -162.47460938]
[140.38356018 -177.44801331]
[139.49073792 -192.42141724]
[130.94575500 -205.73658752]
[137.91180420 -218.90182495]
[137.01898193 -233.87524414]
[136.12617493 -248.84864807]
[132.49151611 -257.22882080]
[135.33322144 -264.05130005]
[134.66343689 -279.03634644]
[133.99365234 -294.02139282]
[133.32386780 -309.00643921]
[132.65406799 -323.99145508]
[120.75962067 -314.85241699]
[106.16245270 -318.30532837]
[99.62304688 -331.80480957]
[105.96202087 -345.39956665]
[120.50651550 -349.06805420]
[132.53410339 -340.10745239]
[132.98069763 -355.10079956]
[133.42730713 -370.09414673]
[133.87391663 -385.08749390]
[119.78122711 -390.67068481]
[108.45005798 -400.73947144]
[101.24870300 -414.07800293]
[99.04676056 -429.07556152]
[102.11012268 -443.92117310]
[110.06887054 -456.82208252]
[121.96195221 -466.22052002]
[136.35322571 -470.98153687]
[151.50485229 -470.53021240]
[165.58723450 -464.92105103]
[176.89982605 -454.83139038]
[184.07658386 -441.47964478]
[186.25088501 -426.47802734]
[183.16017151 -411.63809204]
[175.17765808 -398.75186157]
[163.26728821 -389.37536621]
[148.86726379 -384.64089966]
[148.42065430 -369.64752197]
[147.97406006 -354.65417480]
[147.52745056 -339.66082764]
[147.63911438 -324.66125488]
[148.30889893 -309.67620850]
[148.97868347 -294.69116211]
[149.64846802 -279.70614624]
[150.31825256 -264.72109985]
[151.09957886 -249.74145508]
[151.99238586 -234.76805115]
[152.88520813 -219.79464722]
[161.36633301 -207.55047607]
[154.46415710 -193.31423950]
[155.35696411 -178.34083557]
[156.24978638 -163.36741638]
[158.63009644 -160.76618958]
[159.86874390 -156.88278198]
[159.37680054 -152.26637268]
[156.83293152 -147.70832825]
[157.05625916 -132.70999146]
[157.27958679 -117.71164703]
[157.50291443 -102.71331024]
[164.30926514 -116.08019257]
[174.86854553 -126.73391724]
[188.17428589 -133.65902710]
[202.95826721 -136.19549561]
[217.81140137 -134.10153198]
[231.31794739 -127.57673645]
[242.19056702 -117.24300385]
[249.39295959 -104.08528137]
[252.23861694 -89.35768127]
[250.45632935 -74.46394348]
[244.21595764 -60.82364273]
[234.11230469 -49.73688889]
[221.10838318 -42.26039886]
[206.44363403 -39.10678101]
[191.51582336 -40.57662201]
[177.74777222 -46.52982330]
[166.45175171 -56.39896774]
[158.70443726 -69.24338531]
[155.24417114 -83.83996582]
[151.48786926 -69.31790924]
[147.73156738 -54.79584885]
[143.97526550 -40.27378845]
[140.21896362 -25.75172997]
[151.67536926 -16.20100784]
[157.87443542 -2.56719112]
[157.53787231 12.46769238]
[150.67886353 25.92035866]
[138.61015320 35.09822083]
[123.69306183 38.13827133]
[119.93675995 52.66033173]
[116.18046570 67.18238831]
[112.42416382 81.70445251]
[108.66786194 96.22650909]
[110.23758698 101.23149872]
[108.89136505 106.75970459]
[104.57748413 111.12174225]
[100.39048004 125.52552795]
[96.20346832 139.92930603]
[92.55537415 154.47892761]
[89.45127106 169.15423584]
[90.73704529 178.19770813]
[86.19015503 184.02416992]
[82.86788940 198.65162659]
[79.54563141 213.27908325]
[76.22337341 227.90655518]
[73.01010132 242.55833435]
[69.90599060 257.23364258]
[66.80187988 271.90893555]
[77.02304077 283.43429565]
[78.48078918 298.59109497]
[70.82470703 311.54672241]
[57.17131805 317.43936157]
[58.45709610 326.48281860]
[53.91020203 332.30929565]
[50.58794022 346.93673706]
[55.07656097 362.10784912]
[44.71253967 372.80535889]
[41.39027786 387.43280029]
[38.06801987 402.06027222]
[34.74575806 416.68774414]
[48.77643967 422.06552124]
[61.89892960 429.38543701]
[73.84606934 438.49844360]
[84.37462616 449.21899414]
[93.27025604 461.32885742]
[100.35185242 474.58145142]
[105.47525024 488.70703125]
[108.53613281 503.41796875]
[109.47219849 518.41479492]
[108.26437378 533.39215088]
[104.93726349 548.04516602]
[99.55859375 562.07550049]
[92.23787689 575.19757080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 197]
[30 196]
[31 195]
[32 194]
[34 192]
[35 191]
[36 189]
[40 185]
[41 184]
[42 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 177]
[49 176]
[55 175]
[56 174]
[57 173]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 137]
[74 136]
[75 135]
[76 134]
[77 130]
[78 129]
[79 128]
[81 126]
[82 125]
[83 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
