%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[208.48637390 449.93023682]
[207.81658936 434.94522095]
[207.14680481 419.96017456]
[206.47702026 404.97512817]
[193.59228516 394.16668701]
[192.48965454 377.04653931]
[204.33880615 364.17733765]
[203.44599915 349.20391846]
[202.55317688 334.23052979]
[201.32620239 319.28079224]
[199.76568604 304.36218262]
[198.20515442 289.44357300]
[196.64463806 274.52496338]
[195.08412170 259.60638428]
[191.87083435 244.95458984]
[187.04484558 230.75213623]
[182.21884155 216.54966736]
[177.39285278 202.34721375]
[169.82847595 189.39422607]
[159.83029175 178.21224976]
[149.83212280 167.03027344]
[139.83395386 155.84829712]
[129.83578491 144.66632080]
[119.83760834 133.48434448]
[109.83943939 122.30237579]
[99.84126282 111.12039948]
[97.92494965 125.99748230]
[86.13497162 135.27091980]
[71.22516632 133.62843323]
[61.73654938 122.01094818]
[63.10462570 107.07347107]
[74.54570770 97.37286377]
[89.50496674 98.46566010]
[80.54426575 86.43627930]
[71.58357239 74.40690613]
[62.62287521 62.37752533]
[48.17393875 55.93246841]
[46.77591705 41.10361481]
[37.81521988 29.07423782]
[31.90500450 26.11098671]
[28.83878326 21.32608032]
[28.77315712 16.55065155]
[20.17459297 4.25981283]
[21.06672859 19.23325920]
[15.86783218 33.30349350]
[5.45400953 44.09943390]
[-8.41982651 49.80177307]
[-23.41569138 49.44956589]
[-37.00651550 43.10217285]
[-46.90201187 31.82923126]
[-51.43461227 17.53043747]
[-49.84049225 2.61538458]
[-42.38829422 -10.40247631]
[-30.33383942 -19.32940865]
[-15.70851612 -22.66106606]
[-0.97695023 -19.83600807]
[11.37947559 -11.32910252]
[5.30564165 -25.04436874]
[-7.35696459 -34.52956772]
[-5.43591118 -49.29976654]
[-11.50974560 -63.01503372]
[-17.84602165 -69.59450531]
[-17.57021904 -76.98001099]
[-23.43917847 -90.78418732]
[-29.30813980 -104.58836365]
[-35.17710114 -118.39253998]
[-41.04606247 -132.19671631]
[-46.91502380 -146.00090027]
[-52.78398132 -159.80506897]
[-67.26881409 -155.82095337]
[-82.15543365 -153.80308533]
[-97.17819214 -153.78747559]
[-112.06897736 -155.77441406]
[-126.56205750 -159.72842407]
[-140.39877319 -165.57896423]
[-153.33219910 -173.22160339]
[-165.13151550 -182.51995850]
[-175.58616638 -193.30809021]
[-184.50955200 -205.39347839]
[-191.74244690 -218.56042480]
[-197.15576172 -232.57397461]
[-200.65289307 -247.18402100]
[-202.17141724 -262.12985229]
[-201.68424988 -277.14471436]
[-199.20008850 -291.96066284]
[-194.76324463 -306.31329346]
[-188.45292664 -319.94644165]
[-180.38172913 -332.61685181]
[-170.69369507 -344.09838867]
[-159.56172180 -354.18612671]
[-147.18446350 -362.70007324]
[-133.78282166 -369.48825073]
[-119.59596252 -374.42953491]
[-104.87705994 -377.43576050]
[-89.88879395 -378.45324707]
[-74.89864349 -377.46386719]
[-60.17413330 -374.48526001]
[-45.97803116 -369.57055664]
[-32.56369019 -362.80752563]
[-20.17049789 -354.31680298]
[-9.01963139 -344.24993896]
[0.68991154 -332.78659058]
[8.78485298 -320.13134766]
[15.12072754 -306.51004028]
[19.58446693 -292.16574097]
[22.09640694 -277.35449219]
[22.61172104 -262.34057617]
[21.12121391 -247.39192200]
[17.65148163 -232.77534485]
[12.26445103 -218.75167847]
[5.05625534 -205.57118225]
[-3.84446478 -193.46908569]
[-14.27886581 -182.66137695]
[-26.06073380 -173.34091187]
[-38.97980499 -165.67402649]
[-33.11084366 -151.86985779]
[-27.24188423 -138.06567383]
[-21.37292290 -124.26150513]
[-15.50396252 -110.45732880]
[-9.63500214 -96.65314484]
[-3.76604128 -82.84896851]
[2.20552158 -69.08886719]
[8.27935505 -55.37360001]
[20.50752068 -46.86941147]
[19.02090836 -31.11820412]
[25.09474182 -17.40293694]
[32.46543121 -4.33875132]
[41.06399536 7.95208645]
[49.84460068 20.11354256]
[58.80529404 32.14292145]
[72.61330414 37.72755814]
[74.65225220 53.41682816]
[83.61294556 65.44620514]
[92.57364655 77.47558594]
[101.53433990 89.50495911]
[111.02323914 101.12222290]
[121.02140808 112.30419922]
[131.01957703 123.48617554]
[141.01776123 134.66815186]
[151.01593018 145.85012817]
[161.01409912 157.03210449]
[171.01226807 168.21408081]
[181.01043701 179.39604187]
[176.98167419 164.94720459]
[176.10877991 149.97262573]
[178.43148804 135.15354919]
[183.84411621 121.16414642]
[192.10044861 108.64083862]
[202.82484436 98.15335846]
[215.52943420 90.17881012]
[229.63623047 85.07998657]
[244.50349426 83.08885193]
[259.45483398 84.29598236]
[273.81008911 88.64646912]
[286.91619873 95.94238281]
[298.17687988 105.85182190]
[307.07986450 117.92397308]
[313.22015381 131.60961914]
[316.31835938 146.28616333]
[316.23358154 161.28591919]
[312.96963501 175.92651367]
[306.67504883 189.54187012]
[297.63613892 201.51260376]
[286.26416016 211.29409790]
[273.07641602 218.44139099]
[258.67291260 222.62931824]
[243.70886230 223.66735840]
[228.86506653 221.50827026]
[214.81680298 216.25030518]
[202.20317078 208.13264465]
[191.59530640 197.52122498]
[196.42129517 211.72367859]
[201.24729919 225.92613220]
[206.07330322 240.12858582]
[208.90794373 225.39886475]
[216.81030273 212.64924622]
[228.74069214 203.55717468]
[243.12947083 199.31886292]
[258.08352661 200.49194336]
[271.63540649 206.92205811]
[282.00213623 217.76322937]
[287.81979370 231.58911133]
[288.32293701 246.58067322]
[283.44540405 260.76550293]
[273.82891846 272.27737427]
[260.73864746 279.60165405]
[245.89689636 281.77478027]
[231.25633240 278.51074219]
[218.74316406 270.23907471]
[210.00271606 258.04583740]
[211.56324768 272.96444702]
[213.12376404 287.88305664]
[214.68429565 302.80166626]
[216.24481201 317.72027588]
[219.31230164 321.94372559]
[220.34931946 326.46896362]
[219.58093262 330.47204590]
[217.52658081 333.33770752]
[218.41940308 348.31112671]
[219.31222534 363.28451538]
[230.34843445 371.00570679]
[234.85684204 383.49108887]
[231.40228271 396.10647583]
[221.46205139 404.30535889]
[222.13183594 419.29037476]
[222.80163574 434.27542114]
[223.47142029 449.26046753]
[232.74819946 462.78350830]
[225.43212891 477.46026611]
[209.04934692 478.19253540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[7 200]
[8 199]
[9 198]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 174]
[16 173]
[17 172]
[18 171]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[25 137]
[26 136]
[33 135]
[34 134]
[35 133]
[36 132]
[38 130]
[39 129]
[42 128]
[43 127]
[57 126]
[58 125]
[60 123]
[61 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
