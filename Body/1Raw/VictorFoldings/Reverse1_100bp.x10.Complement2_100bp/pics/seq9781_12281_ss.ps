%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[129.28910828 510.97442627]
[123.46278381 524.88500977]
[114.35942078 536.90917969]
[102.55126953 546.29095459]
[88.78059387 552.44073486]
[73.91303253 554.97180176]
[58.88317108 553.72515869]
[44.63580322 548.77911377]
[32.06652832 540.44458008]
[21.96546364 529.24548340]
[14.96756744 515.88586426]
[11.51273441 501.20544434]
[11.81813812 486.12704468]
[15.86458206 471.59857178]
[23.39770126 458.53323364]
[33.94395828 447.75234985]
[46.84040833 439.93362427]
[61.27636719 435.56854248]
[76.34438324 434.93151855]
[79.44848633 420.25619507]
[82.55259705 405.58090210]
[85.65670776 390.90560913]
[88.65148163 376.20761108]
[91.53675842 361.48770142]
[94.42202759 346.76782227]
[97.30730438 332.04791260]
[99.97309875 317.28671265]
[102.41882324 302.48742676]
[104.86455536 287.68817139]
[99.30595398 273.86965942]
[109.18981171 261.51571655]
[103.63121796 247.69720459]
[113.51507568 235.34326172]
[115.96080017 220.54399109]
[117.96481323 205.67845154]
[119.52533722 190.75985718]
[117.85379791 175.85327148]
[113.02780151 161.65081787]
[108.20179749 147.44836426]
[103.37580109 133.24591064]
[98.54980469 119.04345703]
[85.59929657 112.54496002]
[80.93753052 98.82583618]
[87.24774170 85.78253937]
[82.42174530 71.58008575]
[77.59574127 57.37763214]
[72.76974487 43.17517471]
[67.04573059 36.05664825]
[67.97933197 28.72519684]
[63.36532593 14.45246410]
[58.32840729 0.32343489]
[52.87305069 -13.64936256]
[47.41769409 -27.62215996]
[35.19125366 -37.66331482]
[37.76991653 -52.33300018]
[21.62261009 -59.06232452]
[15.45943260 -75.07263947]
[22.63838196 -90.28123474]
[16.97559547 -104.17126465]
[11.31280899 -118.06129456]
[-1.06177402 -127.91929626]
[1.29819167 -142.62574768]
[-4.36459494 -156.51577759]
[-19.16883469 -167.46640015]
[-16.10467148 -184.74580383]
[-21.97363281 -198.54997253]
[-27.84259415 -212.35415649]
[-33.71155548 -226.15832520]
[-39.68311691 -239.91842651]
[-45.75695038 -253.63369751]
[-51.83078384 -267.34896851]
[-66.32513428 -263.37762451]
[-81.24949646 -261.61099243]
[-96.27046967 -262.08856201]
[-111.05246735 -264.79968262]
[-125.26526642 -269.68371582]
[-138.59133911 -276.63162231]
[-150.73298645 -285.48815918]
[-161.41894531 -296.05548096]
[-170.41049194 -308.09747314]
[-177.50675964 -321.34512329]
[-182.54920959 -335.50250244]
[-185.42518616 -350.25332642]
[-186.07044983 -365.26803589]
[-184.47058105 -380.21118164]
[-180.66131592 -394.74896240]
[-174.72776794 -408.55657959]
[-166.80247498 -421.32559204]
[-157.06251526 -432.77072144]
[-145.72544861 -442.63626099]
[-133.04458618 -450.70181274]
[-119.30320740 -456.78720093]
[-104.80829620 -460.75650024]
[-89.88368225 -462.52099609]
[-74.86277771 -462.04129028]
[-60.08115768 -459.32806396]
[-45.86905670 -454.44198608]
[-32.54397202 -447.49218750]
[-20.40359116 -438.63394165]
[-9.71913528 -428.06509399]
[-0.72929978 -416.02182007]
[6.36507940 -402.77316284]
[11.40551186 -388.61505127]
[14.27939129 -373.86383057]
[14.92251492 -358.84902954]
[13.32051563 -343.90609741]
[9.50918198 -329.36886597]
[3.57366061 -315.56207275]
[-4.35344648 -302.79421997]
[-14.09504509 -291.35049438]
[-25.43350410 -281.48657227]
[-38.11552048 -273.42279053]
[-32.04168320 -259.70751953]
[-25.96785164 -245.99226379]
[-20.38513947 -241.14921570]
[-19.90737724 -232.02729797]
[-14.03841686 -218.22311401]
[-8.16945648 -204.41893005]
[-2.30049539 -190.61476135]
[8.79678917 -185.80052185]
[13.79929256 -174.34806824]
[9.52543163 -162.17855835]
[15.18821812 -148.28854370]
[27.15776062 -139.42404175]
[25.20283508 -123.72407532]
[30.86562157 -109.83405304]
[36.52840805 -95.94402313]
[48.98748016 -92.65752411]
[57.40440750 -82.64566040]
[58.53479385 -69.41944885]
[51.74271393 -57.78836060]
[63.57894897 -48.74663544]
[61.39049149 -33.07751846]
[66.84584808 -19.10471916]
[72.30120850 -5.13192225]
[74.81143188 -3.88416553]
[76.97866058 -1.56689298]
[78.39304352 1.69423068]
[78.69776154 5.62763500]
[77.63806152 9.83845520]
[82.25206757 24.11118889]
[86.97219849 38.34917831]
[91.79820251 52.55163193]
[96.62419891 66.75408936]
[101.45019531 80.95654297]
[114.40070343 87.45503998]
[119.06246948 101.17416382]
[112.75225830 114.21746063]
[117.57825470 128.41990662]
[122.40425873 142.62237549]
[127.23025513 156.82482910]
[132.05624390 171.02728271]
[134.02026367 156.15641785]
[138.89819336 141.97171021]
[146.49572754 129.03813171]
[156.51028442 117.87082672]
[168.54296875 108.91458130]
[182.11454773 102.52612305]
[196.68444824 98.95989227]
[211.67236328 98.35794067]
[226.48133850 100.74423981]
[240.52153015 106.02374268]
[253.23371887 113.98616791]
[264.11157227 124.31438446]
[272.72186279 136.59701538]
[278.72161865 150.34483337]
[281.87188721 165.01029968]
[282.04721069 180.00927734]
[279.24057007 194.74436951]
[273.56375122 208.62866211]
[265.24288940 221.10917664]
[254.60937500 231.68879700]
[242.08674622 239.94616699]
[228.17379761 245.55236816]
[213.42463684 248.28413391]
[198.42674255 248.03263855]
[183.77748108 244.80792236]
[170.06030273 238.73838806]
[157.82157898 230.06582642]
[147.54875183 219.13563538]
[139.65100098 206.38316345]
[134.44393921 192.32037354]
[132.88342285 207.23898315]
[134.79156494 211.13935852]
[135.30743408 215.05067444]
[134.59852600 218.53390503]
[132.95774841 221.24949646]
[130.76007080 222.98971558]
[128.31434631 237.78898621]
[133.69801331 252.66603088]
[123.98908234 263.96142578]
[129.37274170 278.83850098]
[119.66382599 290.13388062]
[117.21809387 304.93316650]
[114.77236938 319.73242188]
[116.73905945 326.04461670]
[115.42065430 331.57263184]
[112.02719116 334.93319702]
[109.14192200 349.65307617]
[106.25664520 364.37298584]
[103.37137604 379.09286499]
[104.79165649 388.11621094]
[100.33201599 394.00970459]
[97.22790527 408.68502808]
[94.12379456 423.36032104]
[91.01968384 438.03561401]
[104.53918457 444.71948242]
[115.97119904 454.55612183]
[124.59710693 466.92724609]
[129.87467957 481.05517578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[23 201]
[24 200]
[25 199]
[26 198]
[27 195]
[28 194]
[29 193]
[31 191]
[33 189]
[34 188]
[35 183]
[36 182]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[44 145]
[45 144]
[46 143]
[47 142]
[49 141]
[50 140]
[51 135]
[52 134]
[53 133]
[55 131]
[58 127]
[59 126]
[60 125]
[62 123]
[63 122]
[65 119]
[66 118]
[67 117]
[68 116]
[69 114]
[70 113]
[71 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
