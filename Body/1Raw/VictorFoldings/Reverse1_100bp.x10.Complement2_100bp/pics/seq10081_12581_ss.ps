%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[79.98237610 678.55426025]
[66.84043121 671.30139160]
[54.41249084 662.88342285]
[42.80153275 653.37023926]
[32.10377121 642.84063721]
[22.40785217 631.38177490]
[13.79412174 619.08874512]
[6.33395815 606.06335449]
[0.08917891 592.41351318]
[-4.88846827 578.25238037]
[-8.55773640 563.69726562]
[-10.88821983 548.86877441]
[-11.86060715 533.88977051]
[-11.46684074 518.88446045]
[-9.71018410 503.97708130]
[-6.60519266 489.29122925]
[-2.17759657 474.94857788]
[3.53591514 461.06796265]
[10.48799706 447.76443481]
[18.62104225 435.14822388]
[27.86765480 423.32388306]
[38.15121460 412.38937378]
[49.38650513 402.43530273]
[61.48042679 393.54415894]
[74.33276367 385.78964233]
[87.83701324 379.23596191]
[101.88127136 373.93746948]
[116.34916687 369.93804932]
[113.68336487 355.17684937]
[111.01757050 340.41561890]
[108.35177612 325.65441895]
[105.68598175 310.89318848]
[103.02018738 296.13198853]
[100.35439301 281.37075806]
[97.57878113 266.62979126]
[94.69350433 251.90991211]
[91.80823517 237.19001770]
[88.81346130 222.49200439]
[85.70935059 207.81671143]
[81.78916168 222.29537964]
[73.99781799 235.11314392]
[62.94978714 245.25912476]
[49.51635742 251.93318176]
[34.75694275 254.60896301]
[19.83553886 253.07543945]
[5.92890692 247.45355225]
[-5.86621904 238.18667603]
[-14.61962605 226.00563049]
[-19.64098167 211.87106323]
[-20.53428459 196.89768982]
[-17.22908211 182.26635742]
[-9.98603821 169.13098145]
[0.62363160 158.52745056]
[13.76320457 151.29200745]
[28.39643860 147.99526978]
[43.36929703 148.89723206]
[57.50095367 153.92677307]
[69.67693329 162.68722534]
[78.93698120 174.48770142]
[84.55165100 188.40095520]
[85.88988495 173.46076965]
[87.22811890 158.52058411]
[88.56635284 143.58039856]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[83.79475403 98.66998291]
[93.59378052 85.05545807]
[94.70942688 70.09700012]
[84.67309570 58.18441391]
[86.01760864 43.03030777]
[97.43629456 33.53561020]
[98.55194092 18.57715797]
[88.82628632 29.99694824]
[74.72715759 35.11696243]
[59.94003296 32.59883881]
[48.33023071 23.10081291]
[42.93252563 9.10564137]
[45.15786743 -5.72836828]
[54.42455673 -17.52364349]
[68.31029510 -23.19692612]
[83.18539429 -21.26523590]
[95.16153717 -12.23350906]
[101.10805511 1.53650272]
[104.43031311 -13.09095764]
[107.75257111 -27.71841812]
[111.07482910 -42.34587860]
[104.87393951 -53.65568924]
[107.94219971 -65.77053833]
[118.10602570 -72.32974243]
[121.64569855 -86.90611267]
[125.18537140 -101.48249054]
[128.72503662 -116.05886841]
[132.15609741 -130.66119385]
[135.47836304 -145.28865051]
[121.54154968 -150.92437744]
[108.68932343 -158.72286987]
[97.25458527 -168.48211670]
[87.53352356 -179.94934082]
[79.77793121 -192.82749939]
[74.18870544 -206.78302002]
[70.91061401 -221.45443726]
[70.02857208 -236.46170044]
[71.56542206 -251.41610718]
[75.48136139 -265.93029785]
[81.67494965 -279.62829590]
[89.98576355 -292.15533447]
[100.19853210 -303.18692017]
[112.04872894 -312.43725586]
[125.22938538 -319.66680908]
[139.39910889 -324.68829346]
[154.19085693 -327.37161255]
[169.22149658 -327.64727783]
[184.10169983 -325.50814819]
[198.44602966 -321.00967407]
[211.88293457 -314.26831055]
[224.06434631 -305.45870972]
[234.67477417 -294.80905151]
[243.43936157 -282.59518433]
[250.13107300 -269.13351440]
[254.57659912 -254.77267456]
[256.66079712 -239.88467407]
[256.32965088 -224.85516357]
[253.59173584 -210.07341003]
[248.51800537 -195.92231750]
[241.23986816 -182.76843262]
[231.94583130 -170.95245361]
[220.87664795 -160.78047180]
[208.31903076 -152.51594543]
[194.59825134 -146.37295532]
[180.06971741 -142.51060486]
[165.10974121 -141.02896118]
[150.10581970 -141.96638489]
[146.78356934 -127.33892822]
[148.36752319 -120.12001038]
[143.30142212 -112.51919556]
[139.76174927 -97.94281769]
[136.22207642 -83.36644745]
[132.68240356 -68.79006958]
[138.52293396 -52.24150085]
[125.70229340 -39.02361679]
[122.38002777 -24.39615822]
[119.05776978 -9.76869774]
[115.73551178 4.85876226]
[113.51039886 19.69280624]
[112.39474487 34.65126038]
[122.27864075 45.73477173]
[121.36030579 60.92066193]
[109.66788483 71.21265411]
[108.55223083 86.17110443]
[115.60665894 95.43805695]
[114.65399170 107.04553986]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[103.50653839 144.91864014]
[102.16830444 159.85882568]
[100.83007050 174.79901123]
[99.49183655 189.73919678]
[100.38465118 204.71260071]
[103.48876190 219.38789368]
[108.32632446 227.13618469]
[106.52812958 234.30474854]
[109.41339874 249.02462769]
[112.29866791 263.74453735]
[117.02033234 271.56396484]
[115.11560822 278.70495605]
[117.78140259 293.46618652]
[120.44719696 308.22738647]
[123.11299133 322.98861694]
[125.77879333 337.74984741]
[128.44458008 352.51104736]
[131.11038208 367.27227783]
[146.06327820 365.95843506]
[161.07369995 366.00982666]
[176.01724243 367.42596436]
[190.77011108 370.19512939]
[205.21002197 374.29440308]
[219.21734619 379.68981934]
[232.67599487 386.33660889]
[245.47444153 394.17974854]
[257.50665283 403.15423584]
[268.67291260 413.18566895]
[278.88067627 424.19097900]
[288.04537964 436.07894897]
[296.09106445 448.75103760]
[302.95108032 462.10226440]
[308.56854248 476.02200317]
[312.89694214 490.39489746]
[315.90042114 505.10186768]
[317.55404663 520.02099609]
[317.84411621 535.02868652]
[316.76828003 550.00061035]
[314.33538818 564.81262207]
[310.56567383 579.34210205]
[305.49029541 593.46850586]
[299.15136719 607.07489014]
[291.60137939 620.04840088]
[282.90292358 632.28167725]
[273.12808228 643.67321777]
[262.35781860 654.12866211]
[250.68142700 663.56146240]
[238.19561768 671.89331055]
[225.00389099 679.05523682]
[211.21553040 684.98791504]
[196.94480896 689.64215088]
[182.30998230 692.97937012]
[167.43232727 694.97192383]
[152.43510437 695.60333252]
[137.44259644 694.86834717]
[122.57905579 692.77301025]
[107.96763611 689.33477783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[35 163]
[36 162]
[37 161]
[38 159]
[39 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[67 149]
[68 148]
[71 145]
[72 144]
[83 143]
[84 142]
[85 141]
[86 140]
[89 138]
[90 137]
[91 136]
[92 135]
[93 133]
[94 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
