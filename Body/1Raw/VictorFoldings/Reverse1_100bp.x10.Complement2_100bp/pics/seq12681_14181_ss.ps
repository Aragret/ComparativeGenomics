%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[50.05692291 611.82061768]
[48.76671219 626.94348145]
[42.09712219 640.57727051]
[30.95015335 650.87823486]
[16.83334541 656.45318604]
[1.65588236 656.54821777]
[-12.52961063 651.15039062]
[-23.80466270 640.98980713]
[-30.64441490 627.44055176]
[-32.12384415 612.33508301]
[-28.04287529 597.71624756]
[-18.95342064 585.56115723]
[-6.08475828 577.51367188]
[8.82273293 574.66217041]
[11.48852921 559.90093994]
[14.15432453 545.13970947]
[16.82011986 530.37847900]
[10.18277931 520.26550293]
[12.28289032 507.94589233]
[22.53227234 500.11563110]
[17.38756752 486.13775635]
[27.63486671 474.08355713]
[30.52013969 459.36367798]
[33.40541077 444.64376831]
[26.83176613 428.37249756]
[39.04941940 414.59533691]
[41.71521378 399.83410645]
[44.38100815 385.07290649]
[35.70381927 373.02127075]
[38.19703674 358.01330566]
[50.89673615 348.99359131]
[53.56253052 334.23236084]
[56.22832489 319.47116089]
[58.45344543 304.63711548]
[60.23590851 289.74340820]
[54.06582642 276.18685913]
[63.38819504 263.40390015]
[65.17066193 248.51019287]
[66.95312500 233.61647034]
[53.72773743 240.69384766]
[39.88889313 234.90710449]
[35.63807297 220.52201843]
[44.10882568 208.14274597]
[59.05682373 206.89482117]
[69.46244049 217.69660950]
[72.34770966 202.97671509]
[75.23298645 188.25682068]
[78.11825562 173.53692627]
[72.97354889 159.55903625]
[83.22084808 147.50485229]
[86.10612488 132.78495789]
[88.99139404 118.06507111]
[91.87667084 103.34518433]
[90.39680481 100.68069458]
[89.85372925 97.41885376]
[90.47056580 93.90559387]
[92.33950043 90.56443787]
[95.39675903 87.84669495]
[99.15306091 73.32463074]
[98.27237701 64.23275757]
[103.07489777 58.61514664]
[107.04699707 44.15062332]
[111.01909637 29.68609810]
[114.99118805 15.22157383]
[118.96328735 0.75704998]
[117.64188385 -4.29279900]
[118.32167053 -8.88531399]
[120.49332428 -12.33479977]
[123.44920349 -14.25707626]
[128.06321716 -28.52980995]
[132.67721558 -42.80254364]
[137.29122925 -57.07527542]
[141.79885864 -71.38196564]
[146.19985962 -85.72180939]
[150.60084534 -100.06166077]
[147.25303650 -115.52460480]
[158.38400269 -125.42162323]
[155.03619385 -140.88456726]
[166.16714478 -150.78158569]
[170.56814575 -165.12142944]
[174.96914673 -179.46128845]
[178.72544861 -193.98333740]
[181.82955933 -208.65864563]
[184.93367004 -223.33395386]
[188.03778076 -238.00924683]
[183.32377625 -253.11186218]
[193.52738953 -263.96246338]
[196.63150024 -278.63775635]
[190.26290894 -289.85400391]
[193.15045166 -302.01318359]
[203.21549988 -308.72299194]
[206.53775024 -323.35046387]
[209.86001587 -337.97790527]
[204.00688171 -355.43707275]
[216.42283630 -367.83914185]
[219.52694702 -382.51443481]
[222.63105774 -397.18975830]
[225.73516846 -411.86505127]
[211.97218323 -417.97030640]
[199.77955627 -426.80395508]
[189.69026184 -437.97982788]
[182.14540100 -451.00936890]
[177.47476196 -465.32293701]
[175.88255310 -480.29486084]
[177.43835449 -495.27062988]
[182.07417297 -509.59552002]
[189.58735657 -522.64337158]
[199.64944458 -533.84368896]
[211.82055664 -542.70697021]
[225.56864929 -548.84570312]
[240.29270935 -551.99145508]
[255.34904480 -552.00677490]
[270.07949829 -548.89105225]
[283.84005737 -542.78033447]
[296.02920532 -533.94189453]
[306.11410522 -522.76208496]
[313.65383911 -509.72958374]
[318.31884766 -495.41415405]
[319.90518188 -480.44158936]
[318.34347534 -465.46646118]
[313.70202637 -451.14340210]
[306.18371582 -438.09851074]
[296.11721802 -426.90209961]
[283.94259644 -418.04364014]
[270.19210815 -411.91033936]
[255.46681213 -408.77035522]
[240.41046143 -408.76092529]
[237.30635071 -394.08563232]
[234.20223999 -379.41033936]
[231.09812927 -364.73504639]
[237.43142700 -354.42892456]
[234.96545410 -342.17727661]
[224.48747253 -334.65567017]
[221.16522217 -320.02819824]
[217.84295654 -305.40072632]
[223.92922974 -288.94094849]
[211.30679321 -275.53366089]
[208.20268250 -260.85836792]
[213.13871765 -246.80541992]
[202.71307373 -234.90513611]
[199.60896301 -220.22984314]
[196.50485229 -205.55453491]
[193.40075684 -190.87922668]
[206.53068542 -198.13215637]
[220.98112488 -194.10914612]
[228.47422791 -181.11479187]
[224.71757507 -166.59281921]
[211.86315918 -158.86209106]
[197.27458191 -162.35112000]
[189.30899048 -175.06028748]
[184.90798950 -160.72044373]
[180.50700378 -146.38058472]
[184.16960144 -131.94332886]
[172.72384644 -121.02062225]
[176.38644409 -106.58335876]
[164.94070435 -95.66065979]
[160.53970337 -81.32080841]
[156.13870239 -66.98096466]
[157.18136597 -59.66422653]
[151.56396484 -52.46126556]
[146.94995117 -38.18853378]
[142.33593750 -23.91580009]
[137.72193909 -9.64306641]
[133.42781067 4.72914600]
[129.45571899 19.19367027]
[125.48361969 33.65819550]
[121.51152039 48.12271881]
[117.53942871 62.58724213]
[113.67511749 77.08093262]
[109.91881561 91.60299683]
[106.59655762 106.23045349]
[103.71128845 120.95034790]
[100.82601166 135.67024231]
[97.94074249 150.39012146]
[102.87907410 165.42088318]
[92.83815002 176.42219543]
[89.95287323 191.14208984]
[87.06760406 205.86198425]
[84.18232727 220.58187866]
[81.84683990 235.39894104]
[80.06437683 250.29266357]
[78.28191376 265.18637085]
[84.32450104 279.80819702]
[75.12962341 291.52584839]
[73.34716034 306.41958618]
[75.19702911 310.34793091]
[75.65460205 314.26651001]
[74.89391327 317.73876953]
[73.21289062 320.42965698]
[70.98954010 322.13696289]
[68.32374573 336.89816284]
[65.65795135 351.65939331]
[74.40050507 364.55145264]
[71.48672485 379.48345947]
[59.14222717 387.73870850]
[56.47642899 402.49990845]
[53.81063461 417.26113892]
[60.51034927 428.28277588]
[57.98611069 440.52255249]
[48.12530136 447.52905273]
[45.24003220 462.24893188]
[42.35475922 476.96884155]
[47.29308701 491.99957275]
[37.25216293 503.00091553]
[43.62252426 520.27807617]
[31.58133698 533.04431152]
[28.91554070 547.80548096]
[26.24974632 562.56671143]
[23.58395004 577.32794189]
[36.55235291 585.21368408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[16 207]
[17 206]
[20 204]
[22 202]
[23 201]
[24 200]
[26 197]
[27 196]
[28 195]
[31 192]
[32 191]
[33 190]
[34 185]
[35 184]
[37 182]
[38 181]
[39 180]
[45 179]
[46 178]
[47 177]
[48 176]
[50 174]
[51 173]
[52 172]
[53 171]
[58 170]
[59 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 158]
[74 157]
[75 156]
[77 154]
[79 152]
[80 151]
[81 150]
[82 143]
[83 142]
[84 141]
[85 140]
[87 138]
[88 137]
[91 135]
[92 134]
[93 133]
[95 130]
[96 129]
[97 128]
[98 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
