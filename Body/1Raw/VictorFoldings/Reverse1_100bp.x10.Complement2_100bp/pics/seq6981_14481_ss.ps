%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[71.18419647 428.06707764]
[63.39478302 440.89535522]
[54.61077499 453.06423950]
[44.88771439 464.49673462]
[34.28706741 475.12060547]
[22.87585831 484.86865234]
[10.72623253 493.67926025]
[-2.08499384 501.49670410]
[-15.47682285 508.27157593]
[-29.36458778 513.96105957]
[-43.66048050 518.52917480]
[-58.27412415 521.94696045]
[-73.11311340 524.19293213]
[-88.08364105 525.25286865]
[-103.09105682 525.11999512]
[-118.04047394 523.79516602]
[-132.83737183 521.28680420]
[-147.38819885 517.61077881]
[-161.60096741 512.79028320]
[-175.38581848 506.85580444]
[-188.65559387 499.84484863]
[-201.32640076 491.80178833]
[-213.31811523 482.77743530]
[-224.55493164 472.82888794]
[-234.96582031 462.01898193]
[-244.48493958 450.41613770]
[-253.05209351 438.09362793]
[-260.61315918 425.12942505]
[-267.12030029 411.60546875]
[-272.53237915 397.60729980]
[-276.81518555 383.22335815]
[-279.94161987 368.54461670]
[-281.89193726 353.66387939]
[-282.65383911 338.67523193]
[-282.22244263 323.67343140]
[-280.60052490 308.75332642]
[-277.79830933 294.00924683]
[-273.83352661 279.53442383]
[-268.73123169 265.42034912]
[-262.52371216 251.75628662]
[-255.25019836 238.62861633]
[-246.95666504 226.12031555]
[-237.69555664 214.31048584]
[-227.52543640 203.27380371]
[-216.51057434 193.08001709]
[-204.72064209 183.79360962]
[-192.23016357 175.47326660]
[-179.11811829 168.17160034]
[-165.46739197 161.93478394]
[-151.36430359 156.80224609]
[-136.89802551 152.80642700]
[-122.15998840 149.97259521]
[-107.24340057 148.31867981]
[-92.24256134 147.85511780]
[-77.25231171 148.58483887]
[-62.36742783 150.50325012]
[-47.68201447 153.59820557]
[-33.28892517 157.85015869]
[-19.27915192 163.23219299]
[-5.74127483 169.71031189]
[7.23911524 177.24354553]
[19.57995224 185.78425598]
[29.06884956 174.16699219]
[38.55774689 162.54972839]
[48.04664612 150.93246460]
[57.53554535 139.31520081]
[67.02444458 127.69794464]
[68.82115173 120.52900696]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[114.91628265 65.77916718]
[121.67424774 62.78722763]
[131.50482178 51.45763397]
[141.33540344 40.12804413]
[151.16598511 28.79844856]
[140.44723511 18.29861641]
[130.38200378 7.17075396]
[121.00702667 -4.54452991]
[112.35650635 -16.80448914]
[104.46200562 -29.56438828]
[97.35233307 -42.77766418]
[91.05342865 -56.39611053]
[85.58828735 -70.37002563]
[80.97683716 -84.64842987]
[77.23591614 -99.17920685]
[74.37916565 -113.90935516]
[72.41702271 -128.78511047]
[71.35662842 -143.75219727]
[71.20186615 -158.75599670]
[71.95329285 -173.74177551]
[73.60816956 -188.65484619]
[76.16046143 -203.44078064]
[79.60085297 -218.04563904]
[83.91678619 -232.41612244]
[89.09252167 -246.49980164]
[95.10916138 -260.24526978]
[101.94476318 -273.60241699]
[109.57437134 -286.52243042]
[117.97016144 -298.95822144]
[127.10148621 -310.86441040]
[136.93502808 -322.19750977]
[147.43492126 -332.91622925]
[158.56282043 -342.98138428]
[170.27815247 -352.35632324]
[182.53814697 -361.00680542]
[195.29808044 -368.90124512]
[208.51139832 -376.01083374]
[222.12986755 -382.30969238]
[236.10382080 -387.77474976]
[250.38223267 -392.38613892]
[264.91302490 -396.12698364]
[279.64318848 -398.98367310]
[294.51895142 -400.94577026]
[309.48605347 -402.00607300]
[324.48986816 -402.16076660]
[339.47561646 -401.40927124]
[354.38870239 -399.75433350]
[369.17462158 -397.20196533]
[383.77944946 -393.76150513]
[398.14993286 -389.44549561]
[412.23358154 -384.26971436]
[425.97903442 -378.25299072]
[439.33612061 -371.41732788]
[452.25610352 -363.78765869]
[464.69186401 -355.39181519]
[476.59799194 -346.26043701]
[487.93106079 -336.42684937]
[498.64971924 -325.92691040]
[508.71484375 -314.79895020]
[518.08972168 -303.08358765]
[526.74011230 -290.82354736]
[534.63452148 -278.06356812]
[541.74407959 -264.85021973]
[548.04284668 -251.23171997]
[553.50787354 -237.25776672]
[558.11914062 -222.97932434]
[561.85992432 -208.44850159]
[564.71655273 -193.71832275]
[566.67858887 -178.84255981]
[567.73883057 -163.87545776]
[567.89343262 -148.87164307]
[567.14190674 -133.88587952]
[565.48687744 -118.97283173]
[562.93444824 -104.18691254]
[559.49389648 -89.58209229]
[555.17785645 -75.21164703]
[550.00195312 -61.12801743]
[543.98522949 -47.38259506]
[537.14947510 -34.02553558]
[529.51977539 -21.10557556]
[521.12384033 -8.66986275]
[511.99243164 3.23622918]
[502.15875244 14.56925392]
[491.65878296 25.28786087]
[480.53079224 35.35293579]
[468.81536865 44.72775269]
[456.55529785 53.37810516]
[443.79528809 61.27242661]
[430.58190918 68.38191986]
[416.96337891 74.68062592]
[402.98937988 80.14557648]
[388.71090698 84.75682831]
[374.18008423 88.49754333]
[359.44989014 91.35408783]
[344.57412720 93.31603241]
[329.60699463 94.37621307]
[314.60321045 94.53076935]
[299.61743164 93.77912903]
[284.70440674 92.12404633]
[269.91848755 89.57154846]
[255.31367493 86.13095856]
[240.94325256 81.81481934]
[226.85964966 76.63889313]
[213.11425781 70.62206268]
[199.75723267 63.78627396]
[186.83731079 56.15648270]
[174.40162659 47.76052094]
[162.49557495 38.62902832]
[152.66499329 49.95862198]
[142.83442688 61.28821564]
[133.00384521 72.61781311]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[78.64170837 137.18684387]
[69.15280914 148.80410767]
[59.66390991 160.42137146]
[50.17501068 172.03863525]
[40.68611526 183.65589905]
[31.19721603 195.27316284]
[42.02985001 205.66036987]
[52.00296783 216.87539673]
[61.05351639 228.84735107]
[69.12427521 241.50053406]
[76.16422272 254.75494385]
[82.12883759 268.52676392]
[86.98041534 282.72897339]
[90.68827820 297.27172852]
[93.22898865 312.06311035]
[94.58648682 327.00958252]
[94.75218201 342.01666260]
[93.72502899 356.98947144]
[91.51152802 371.83334351]
[88.12566376 386.45443726]
[83.58885193 400.76028442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 195]
[63 194]
[64 193]
[65 192]
[66 191]
[67 190]
[69 189]
[70 188]
[72 186]
[73 185]
[75 184]
[76 183]
[77 182]
[78 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
