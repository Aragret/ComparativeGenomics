%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[69.36946869 630.87304688]
[73.59803009 615.94323730]
[85.81530762 606.37677002]
[85.14552307 591.39172363]
[84.47573853 576.40667725]
[76.17785645 564.03759766]
[83.29122925 549.90570068]
[82.62144470 534.92065430]
[81.95166016 519.93560791]
[73.23929596 511.54388428]
[72.55865479 499.06509399]
[80.81920624 489.15924072]
[80.37259674 474.16586304]
[79.92599487 459.17251587]
[79.47938538 444.17916870]
[71.36657715 431.68792725]
[78.68956757 417.66348267]
[78.24295807 402.67013550]
[70.15763092 415.30453491]
[57.17290497 422.81430054]
[42.18960190 423.52178955]
[28.55502319 417.26892090]
[19.31517601 405.45260620]
[16.53426170 390.71264648]
[20.83354568 376.34197998]
[31.25255585 365.55105591]
[45.46365738 360.75057983]
[60.29205704 363.01300049]
[72.42504883 371.83288574]
[79.15209961 385.23989868]
[81.15612030 370.37435913]
[83.16013336 355.50881958]
[84.72064972 340.59020996]
[85.83630371 325.63177490]
[86.95195007 310.67330933]
[88.06759644 295.71487427]
[88.84892273 280.73522949]
[89.29552460 265.74188232]
[74.49518585 260.61584473]
[61.98779678 251.15536499]
[53.00495148 238.27693176]
[48.43582916 223.23435974]
[48.73918915 207.49664307]
[53.89734650 192.60459900]
[63.41671753 180.01992798]
[76.37503815 170.98176575]
[91.51068878 166.38473511]
[91.73401642 151.38639832]
[91.95734406 136.38806152]
[92.18067169 121.38972473]
[82.88250732 115.02176666]
[77.77596283 104.97537994]
[78.11151123 93.71064758]
[83.80696869 83.98601532]
[93.46767426 78.18278503]
[94.13745880 63.19775009]
[94.80724335 48.21271133]
[95.47702789 33.22767258]
[96.14681244 18.24263191]
[96.70502472 3.25302219]
[97.15163422 -11.74032784]
[97.03996277 -26.73991203]
[96.37017822 -41.72495270]
[95.70039368 -56.70999146]
[95.03060913 -71.69503021]
[94.36082458 -86.68006897]
[93.69104004 -101.66510773]
[93.02125549 -116.65014648]
[84.67546082 -130.09106445]
[91.83673859 -143.15112305]
[80.94144440 -132.84130859]
[65.94398499 -133.11744690]
[55.43559265 -143.82135010]
[55.43595123 -158.82135010]
[65.94485474 -169.52476501]
[80.94232941 -169.80018616]
[91.83673859 -159.49070740]
[92.50652313 -174.47573853]
[93.17631531 -189.46078491]
[81.40466309 -180.16409302]
[66.49164581 -181.77714539]
[56.98011398 -193.37588501]
[58.31870651 -208.31604004]
[69.74061584 -218.03919983]
[84.70285034 -216.97550964]
[94.63405609 -205.73519897]
[96.63806915 -220.60072327]
[98.64208221 -235.46624756]
[100.64609528 -250.33177185]
[102.65010834 -265.19729614]
[91.60004425 -275.93054199]
[89.01902008 -290.93692017]
[95.69029999 -304.42608643]
[108.86759949 -311.31790161]
[110.87161255 -326.18341064]
[112.87562561 -341.04895020]
[114.54717255 -355.95553589]
[115.88540649 -370.89572144]
[117.22364044 -385.83590698]
[118.56187439 -400.77606201]
[104.82649231 -407.18817139]
[94.11471558 -417.91354370]
[87.72004700 -431.65707397]
[86.41468048 -446.75912476]
[90.35623169 -461.39605713]
[99.06874847 -473.80038452]
[111.50015259 -482.47427368]
[126.14928436 -486.37026978]
[141.24719238 -485.01788330]
[154.97073364 -478.58047485]
[165.66273499 -467.83538818]
[172.03205872 -454.08010864]
[173.30960083 -438.97570801]
[169.34107971 -424.34603882]
[160.60571289 -411.95776367]
[148.15834045 -403.30682373]
[133.50205994 -399.43783569]
[132.16381836 -384.49765015]
[130.82559204 -369.55746460]
[129.48735046 -354.61727905]
[131.45545959 -351.69174194]
[132.10433960 -347.66754150]
[130.93304443 -343.17517090]
[127.74115753 -339.04492188]
[125.73714447 -324.17941284]
[123.73313141 -309.31387329]
[134.61503601 -299.17868042]
[137.47613525 -284.40444946]
[131.01347351 -270.61721802]
[117.51564026 -263.19329834]
[115.51162720 -248.32775879]
[113.50761414 -233.46223450]
[111.50360107 -218.59671021]
[109.49958801 -203.73117065]
[108.16135406 -188.79100037]
[107.49156189 -173.80595398]
[106.82177734 -158.82092285]
[106.82177734 -143.82092285]
[115.11966705 -131.45182800]
[108.00629425 -117.31993103]
[108.67607880 -102.33489227]
[109.34586334 -87.34985352]
[110.01564789 -72.36481476]
[110.68543243 -57.37977600]
[111.35521698 -42.39473724]
[112.02500153 -27.40969658]
[123.91945648 -36.54873276]
[138.51663208 -33.09583282]
[145.05603027 -19.59634209]
[138.71705627 -6.00158548]
[124.17256165 -2.33311129]
[112.14498138 -11.29372215]
[111.69837952 3.69962811]
[114.64133453 10.47906780]
[111.13185120 18.91241646]
[110.46206665 33.89745712]
[109.79228210 48.88249588]
[109.12249756 63.86753464]
[108.45271301 78.85256958]
[121.17482758 91.61616516]
[120.63827515 109.62931824]
[107.17900848 121.61305237]
[106.95568085 136.61138916]
[106.73235321 151.60972595]
[106.50902557 166.60806274]
[120.21861267 171.00555420]
[132.11976624 179.07991028]
[141.25250244 190.16899109]
[146.88325500 203.36796570]
[148.56367493 217.60304260]
[146.16642761 231.71893311]
[139.89474487 244.57255554]
[130.26522827 255.12561035]
[118.06530762 262.52844238]
[104.28887939 266.18847656]
[103.84226990 281.18182373]
[106.31800842 285.77725220]
[106.74115753 290.40048218]
[105.44483185 294.26501465]
[103.02605438 296.83050537]
[101.91040039 311.78897095]
[100.79475403 326.74740601]
[99.67910767 341.70587158]
[101.70253754 345.54769897]
[102.33462524 349.44192505]
[101.72974396 352.94473267]
[100.17054749 355.70797729]
[98.02565765 357.51284790]
[96.02164459 372.37835693]
[94.01763153 387.24389648]
[93.23630524 402.22354126]
[93.68291473 417.21688843]
[101.82766724 430.78057861]
[94.47273254 443.73257446]
[94.91934204 458.72592163]
[95.36594391 473.71926880]
[95.81255341 488.71261597]
[105.85131073 504.14974976]
[96.93669891 519.26586914]
[97.60648346 534.25091553]
[98.27626801 549.23590088]
[106.62206268 562.67681885]
[99.46077728 575.73693848]
[100.13056183 590.72192383]
[100.80034637 605.70697021]
[113.82238770 614.14538574]
[119.36605835 628.63836670]
[115.29970551 643.61315918]
[103.18692780 653.31164551]
[87.68532562 654.00451660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[7 201]
[8 200]
[9 199]
[12 197]
[13 196]
[14 195]
[15 194]
[17 192]
[18 191]
[30 190]
[31 189]
[32 188]
[33 183]
[34 182]
[35 181]
[36 180]
[37 176]
[38 175]
[47 165]
[48 164]
[49 163]
[50 162]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 153]
[61 152]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[70 138]
[77 137]
[78 136]
[79 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[94 126]
[95 125]
[96 124]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
