%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[122.91354370 780.76940918]
[108.20444489 777.81335449]
[93.66245270 774.12207031]
[79.32429504 769.70471191]
[65.22618866 764.57257080]
[51.40375519 758.73858643]
[37.89190292 752.21740723]
[24.72477150 745.02563477]
[11.93561840 737.18133545]
[-0.44325054 728.70434570]
[-12.38056374 719.61608887]
[-23.84616661 709.93957520]
[-34.81109619 699.69915771]
[-45.24765015 688.92077637]
[-55.12947083 677.63159180]
[-64.43159485 665.86016846]
[-73.13052368 653.63629150]
[-81.20427704 640.99072266]
[-88.63246918 627.95550537]
[-95.39632416 614.56347656]
[-101.47876740 600.84857178]
[-106.86443329 586.84533691]
[-111.53971100 572.58923340]
[-115.49279022 558.11614990]
[-118.71369171 543.46282959]
[-121.19427490 528.66607666]
[-122.92826843 513.76348877]
[-123.91130066 498.79251099]
[-124.14088440 483.79110718]
[-123.61644745 468.79708862]
[-122.33930206 453.84835815]
[-120.31267548 438.98269653]
[-117.54169464 424.23760986]
[-114.03336334 409.65039062]
[-109.79653168 395.25787354]
[-104.84190369 381.09640503]
[-99.18199921 367.20175171]
[-92.83112335 353.60903931]
[-85.80530548 340.35260010]
[-78.12229919 327.46591187]
[-69.80151367 314.98150635]
[-60.86396790 302.93096924]
[-51.33223724 291.34469604]
[-41.23040390 280.25198364]
[-30.58397675 269.68081665]
[-19.41985893 259.65795898]
[-7.76624823 250.20867920]
[4.34741688 241.35687256]
[16.89053535 233.12487793]
[29.83142281 225.53350830]
[43.13739014 218.60192871]
[56.77482224 212.34765625]
[70.70927429 206.78649902]
[84.90554047 201.93247986]
[99.32776642 197.79788208]
[113.93951416 194.39314270]
[111.27371979 179.63192749]
[108.60792542 164.87071228]
[105.94213104 150.10949707]
[102.51107025 135.50717163]
[98.32405853 121.10338593]
[83.68283081 113.48746490]
[78.95827484 97.67461395]
[87.02171326 83.27500153]
[82.62071228 68.93515015]
[78.21971130 54.59530640]
[73.81871796 40.25545883]
[70.53660583 37.41261673]
[68.53151703 34.01495361]
[67.82104492 30.53204536]
[68.26850128 27.39096451]
[69.61009216 24.92960930]
[66.07041931 10.35323334]
[62.53074646 -4.22314215]
[58.99107361 -18.79951668]
[55.45140076 -33.37589264]
[51.91172791 -47.95226669]
[46.84561920 -55.55308151]
[48.42958450 -62.77200317]
[45.10732269 -77.39946747]
[41.78506470 -92.02692413]
[38.46280289 -106.65438080]
[23.42462540 -106.15473175]
[8.56368732 -108.51036072]
[-5.58279610 -113.63613129]
[-18.50343895 -121.34674072]
[-29.73116493 -131.36346436]
[-38.86010361 -143.32418823]
[-45.56024551 -156.79655457]
[-49.58938599 -171.29353333]
[-50.80187607 -186.29107666]
[-49.15388107 -201.24703979]
[-44.70497894 -215.62075806]
[-37.61599350 -228.89263916]
[-28.14318466 -240.58290100]
[-16.62899208 -250.26896667]
[-3.48964477 -257.60067749]
[10.79987812 -262.31301880]
[25.72301865 -264.23559570]
[40.74031448 -263.29895020]
[55.30890274 -259.53695679]
[68.90213013 -253.08554077]
[81.02862549 -244.17797852]
[91.25000763 -233.13624573]
[99.19678497 -220.35949707]
[104.58168793 -206.30961609]
[107.21006012 -191.49447632]
[106.98687744 -176.44966125]
[103.92021179 -161.71900940]
[98.12092590 -147.83503723]
[89.79866028 -135.29963684]
[79.25424957 -124.56594849]
[66.86888123 -116.02199554]
[53.09026337 -109.97664642]
[56.41252518 -95.34918213]
[59.73478317 -80.72172546]
[63.05704498 -66.09426117]
[66.48810577 -51.49193954]
[70.02777863 -36.91556549]
[73.56745148 -22.33918953]
[77.10712433 -7.76281452]
[80.64679718 6.81356096]
[84.18647003 21.38993645]
[88.15856171 35.85446167]
[92.55956268 50.19430542]
[96.96055603 64.53415680]
[101.36155701 78.87400055]
[113.18611908 83.43836212]
[120.28382111 93.93960571]
[120.11032867 106.61334229]
[112.72784424 116.91637421]
[116.91485596 131.32015991]
[124.06214905 118.13243103]
[137.96752930 112.50746155]
[152.27365112 117.01690674]
[160.43992615 129.59910583]
[158.73286438 144.50166321]
[147.93290710 154.91130066]
[132.97763062 156.06890869]
[120.70334625 147.44369507]
[123.36914062 162.20491028]
[126.03494263 176.96612549]
[128.70072937 191.72734070]
[143.58039856 189.80610657]
[158.53779602 188.63490295]
[173.53514099 188.21670532]
[188.53457642 188.55256653]
[203.49816895 189.64164734]
[218.38815308 191.48118591]
[233.16690063 194.06654358]
[247.79708862 197.39117432]
[262.24176025 201.44670105]
[276.46438599 206.22286987]
[290.42910767 211.70761108]
[304.10058594 217.88706970]
[317.44433594 224.74565125]
[330.42663574 232.26600647]
[343.01464844 240.42915344]
[355.17663574 249.21447754]
[366.88183594 258.59976196]
[378.10070801 268.56130981]
[388.80487061 279.07397461]
[398.96734619 290.11117554]
[408.56240845 301.64505005]
[417.56582642 313.64645386]
[425.95489502 326.08508301]
[433.70837402 338.92950439]
[440.80670166 352.14724731]
[447.23196411 365.70495605]
[452.96789551 379.56838989]
[458.00003052 393.70251465]
[462.31564331 408.07159424]
[465.90386963 422.63937378]
[468.75558472 437.36904907]
[470.86361694 452.22338867]
[472.22262573 467.16491699]
[472.82922363 482.15582275]
[472.68182373 497.15826416]
[471.78082275 512.13439941]
[470.12850952 527.04632568]
[467.72900391 541.85638428]
[464.58843994 556.52716064]
[460.71472168 571.02160645]
[456.11761475 585.30316162]
[450.80874634 599.33569336]
[444.80154419 613.08374023]
[438.11114502 626.51257324]
[430.75448608 639.58831787]
[422.75012207 652.27789307]
[414.11828613 664.54931641]
[404.88079834 676.37152100]
[395.06097412 687.71459961]
[384.68362427 698.55004883]
[373.77496338 708.85034180]
[362.36254883 718.58953857]
[350.47521973 727.74304199]
[338.14297485 736.28771973]
[325.39697266 744.20196533]
[312.26943970 751.46582031]
[298.79351807 758.06091309]
[285.00326538 763.97052002]
[270.93347168 769.17987061]
[256.61975098 773.67565918]
[242.09819031 777.44659424]
[227.40550232 780.48315430]
[212.57881165 782.77764893]
[197.65556335 784.32427979]
[182.67344666 785.11914062]
[167.67031860 785.16021729]
[152.68408203 784.44744873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 143]
[57 142]
[58 141]
[59 140]
[60 132]
[61 131]
[64 127]
[65 126]
[66 125]
[67 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[79 117]
[80 116]
[81 115]
[82 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
