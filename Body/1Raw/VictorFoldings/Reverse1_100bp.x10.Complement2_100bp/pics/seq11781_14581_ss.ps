%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[225.67938232 608.56573486]
[228.31896973 593.77453613]
[232.99147034 579.49475098]
[239.60594177 566.00415039]
[248.03363037 553.56549072]
[258.11047363 542.42083740]
[269.64035034 532.78717041]
[282.39880371 524.85192871]
[276.32495117 511.13665771]
[270.25112915 497.42138672]
[264.17730713 483.70611572]
[258.10345459 469.99084473]
[240.66027832 464.43646240]
[232.67958069 447.60726929]
[239.65190125 429.99191284]
[233.17240906 416.46356201]
[226.69290161 402.93521118]
[220.21340942 389.40689087]
[216.08651733 387.00317383]
[213.42579651 381.98147583]
[213.74913025 375.37789917]
[207.67529297 361.66262817]
[201.60145569 347.94735718]
[195.52763367 334.23211670]
[189.45379639 320.51684570]
[183.37995911 306.80157471]
[177.30612183 293.08630371]
[165.07795715 284.58212280]
[166.56457520 268.83090210]
[160.49073792 255.11563110]
[154.41690063 241.40037537]
[148.34307861 227.68510437]
[142.26924133 213.96983337]
[136.19540405 200.25457764]
[130.12156677 186.53930664]
[124.04773712 172.82403564]
[117.97389984 159.10876465]
[105.74573517 150.60458374]
[107.23234558 134.85337830]
[101.15851593 121.13810730]
[85.63105011 115.54653931]
[78.83623505 100.50665283]
[84.90357971 85.15884399]
[78.62622070 71.53553009]
[72.34886169 57.91221619]
[65.76883698 44.43247986]
[58.88941956 31.10305023]
[52.17276001 24.91238976]
[52.00848389 17.52355957]
[45.32828903 4.09318399]
[39.54083633 17.93173027]
[25.71607971 23.75205040]
[11.77346802 18.21999931]
[5.69996214 4.50458670]
[10.97474289 -9.53737545]
[24.57617378 -15.86201382]
[38.71203232 -10.84692001]
[33.25667572 -24.81971741]
[27.80131721 -38.79251480]
[22.34596062 -52.76531219]
[16.89060402 -66.73811340]
[2.69309998 -73.14659119]
[-2.64036012 -87.39471436]
[3.55664206 -100.89036560]
[-1.89871490 -114.86316681]
[-7.35407209 -128.83596802]
[-12.80942917 -142.80876160]
[-18.26478577 -156.78155518]
[-23.72014236 -170.75436401]
[-29.17550087 -184.72715759]
[-43.37300491 -191.13563538]
[-48.70646286 -205.38375854]
[-42.50946045 -218.87940979]
[-47.96481705 -232.85220337]
[-53.42017746 -246.82501221]
[-68.14948273 -243.79920959]
[-83.17829895 -243.30636597]
[-98.07419586 -245.36067200]
[-112.40859985 -249.90299988]
[-125.76908875 -256.80267334]
[-137.77124023 -265.86117554]
[-148.06973267 -276.81784058]
[-156.36827087 -289.35748291]
[-162.42807007 -303.11926270]
[-166.07479858 -317.70727539]
[-167.20350647 -332.70172119]
[-165.78173828 -347.67126465]
[-161.85038757 -362.18511963]
[-155.52258301 -375.82574463]
[-146.98037720 -388.20068359]
[-136.46955872 -398.95385742]
[-124.29252625 -407.77584839]
[-110.79965210 -414.41290283]
[-96.37914276 -418.67401123]
[-81.44591522 -420.43655396]
[-66.42961884 -419.64987183]
[-51.76230621 -416.33657837]
[-37.86598587 -410.59197998]
[-25.14048386 -402.58139038]
[-13.95193577 -392.53527832]
[-4.62226009 -380.74267578]
[2.58011079 -367.54290771]
[7.44794989 -353.31576538]
[9.84119987 -338.47055054]
[9.69100285 -323.43438721]
[7.00167847 -308.63995361]
[1.85060585 -294.51287842]
[-5.61400938 -281.45962524]
[-15.17739487 -269.85574341]
[-26.56439400 -260.03515625]
[-39.44737625 -252.28036499]
[-33.99201965 -238.30757141]
[-28.53666496 -224.33476257]
[-14.83477688 -218.60816956]
[-9.10322094 -204.51548767]
[-15.20270252 -190.18251038]
[-9.74734497 -176.20971680]
[-4.29198837 -162.23692322]
[1.16336882 -148.26411438]
[6.61872578 -134.29132080]
[12.07408333 -120.31851959]
[17.52943993 -106.34572601]
[31.23132706 -100.61913300]
[36.96288300 -86.52644348]
[30.86340141 -72.19346619]
[36.31875992 -58.22067261]
[41.77411652 -44.24787140]
[47.22947311 -30.27507591]
[52.68482971 -16.30227661]
[58.75866318 -2.58701086]
[65.43885803 10.84336472]
[72.21884918 24.22363853]
[79.09825897 37.55306625]
[82.32800293 38.96767044]
[85.03303528 42.01691055]
[86.45252991 46.43712997]
[85.97217560 51.63485336]
[92.24953461 65.25817108]
[98.52690125 78.88148499]
[110.85525513 81.82515717]
[119.29230499 91.28400421]
[120.81359100 103.86729431]
[114.87377930 115.06427002]
[120.94761658 128.77954102]
[133.61021423 138.26473999]
[131.68916321 153.03494263]
[137.76300049 166.75019836]
[143.83683777 180.46546936]
[149.91067505 194.18074036]
[155.98449707 207.89599609]
[162.05833435 221.61126709]
[168.13217163 235.32653809]
[174.20600891 249.04180908]
[180.27984619 262.75708008]
[192.94244385 272.24227905]
[191.02139282 287.01248169]
[197.09523010 300.72772217]
[203.16906738 314.44299316]
[209.24288940 328.15826416]
[215.31672668 341.87353516]
[221.39056396 355.58880615]
[227.46440125 369.30407715]
[233.74176025 382.92739868]
[240.22125244 396.45571899]
[246.70074463 409.98406982]
[253.18025208 423.51242065]
[264.94769287 425.20471191]
[274.34094238 432.29467773]
[279.09616089 442.92868042]
[278.13763428 454.41766357]
[271.81872559 463.91702271]
[277.89257812 477.63229370]
[283.96640015 491.34756470]
[290.04022217 505.06283569]
[296.11407471 518.77807617]
[310.56460571 514.66375732]
[325.44714355 512.60070801]
[340.47198486 512.62902832]
[355.34661865 514.74816895]
[369.78155518 518.91693115]
[383.49581909 525.05419922]
[396.22241211 533.04040527]
[407.71365356 542.72015381]
[417.74581909 553.90502930]
[426.12365723 566.37731934]
[432.68411255 579.89422607]
[437.29943848 594.19262695]
[439.87982178 608.99426270]
[440.37503052 624.01098633]
[438.77542114 638.95043945]
[435.11212158 653.52185059]
[429.45645142 667.44158936]
[421.91851807 680.43872070]
[412.64501953 692.26025391]
[401.81649780 702.67608643]
[389.64367676 711.48339844]
[376.36358643 718.51080322]
[362.23464966 723.62152100]
[347.53192139 726.71606445]
[332.54162598 727.73419189]
[317.55548096 726.65612793]
[302.86526489 723.50274658]
[288.75689697 718.33557129]
[275.50500488 711.25506592]
[263.36755371 702.39904785]
[252.58078003 691.94000244]
[243.35466003 680.08148193]
[235.86878967 667.05432129]
[230.26887512 653.11199951]
[226.66390991 638.52606201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[15 166]
[16 165]
[17 164]
[18 163]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[36 147]
[37 146]
[39 144]
[40 143]
[43 139]
[44 138]
[45 137]
[46 133]
[47 132]
[49 131]
[50 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[70 116]
[73 113]
[74 112]
[75 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
