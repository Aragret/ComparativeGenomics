%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[313.49694824 410.36416626]
[305.26812744 397.82275391]
[297.03930664 385.28137207]
[288.81051636 372.73995972]
[282.51284790 368.87197876]
[280.55416870 359.95001221]
[272.51300049 347.28747559]
[264.28417969 334.74609375]
[255.86956787 322.32858276]
[242.32470703 316.13296509]
[240.98834229 300.36828613]
[232.20774841 288.20684814]
[223.06893921 276.31219482]
[213.93014526 264.41757202]
[204.79133606 252.52294922]
[195.65254211 240.62831116]
[186.51373291 228.73367310]
[177.37493896 216.83905029]
[160.62152100 215.36872864]
[149.90411377 201.97274780]
[152.23608398 184.63546753]
[142.92120361 172.87821960]
[133.60630798 161.12097168]
[124.29143524 149.36372375]
[121.49301147 164.10037231]
[109.17197418 172.65560913]
[94.38636780 170.12860107]
[85.60605621 157.96693420]
[87.86080170 143.13735962]
[99.85898590 134.13493347]
[114.72667694 136.11619568]
[106.49787140 123.57479095]
[98.26906586 111.03338623]
[89.94712067 98.55359650]
[81.44029236 86.19908905]
[72.84172821 73.90824890]
[64.24316406 61.61740875]
[55.64459991 49.32657242]
[47.04603577 37.03573227]
[46.15133667 52.00902557]
[37.38968277 64.18414307]
[23.47597504 69.78849030]
[8.72152328 67.08550262]
[-2.30184412 56.91272354]
[-6.17841673 42.42230988]
[-1.70699656 28.10426331]
[9.72689819 18.39519310]
[24.58035088 16.30355835]
[38.25105286 22.47764206]
[31.37164116 9.14821243]
[24.49222946 -4.18121624]
[24.74296761 10.81668758]
[21.44522667 25.44969559]
[14.78551388 38.89023972]
[5.14046478 50.37818909]
[-6.94444466 59.26385117]
[-20.78575516 65.04469299]
[-35.60067368 67.39378357]
[-50.55134201 66.17826843]
[-64.79222870 61.46688461]
[-77.51794434 53.52609634]
[-88.00878906 42.80498505]
[-95.67145538 29.90988541]
[-100.07257080 15.57007599]
[-100.96324921 0.59654242]
[-98.29309845 -14.16388893]
[-92.21315002 -27.87644386]
[-83.06723785 -39.76560974]
[-71.37261200 -49.15900040]
[-57.79066086 -55.52537155]
[-43.08951187 -58.50467300]
[-28.10058784 -57.92840958]
[-13.67157841 -53.82917786]
[-0.61851841 -46.43880463]
[10.32037926 -36.17525101]
[18.52694321 -23.61800957]
[16.74447632 -38.51172638]
[14.96201134 -53.40544510]
[5.63964462 -66.18840790]
[11.80972672 -79.74492645]
[10.02726078 -94.63864899]
[-1.34869838 -109.11859894]
[6.18177605 -124.96974945]
[4.17776251 -139.83528137]
[2.17374897 -154.70080566]
[0.16973527 -169.56632996]
[-1.83427835 -184.43185425]
[-10.85878468 -172.45027161]
[-25.44473839 -168.95028687]
[-38.92363739 -175.53202820]
[-45.13311005 -189.18641663]
[-41.23426819 -203.67085266]
[-29.00961304 -212.36325073]
[-14.04808998 -211.28956604]
[-3.18907547 -200.93899536]
[-3.63568139 -215.93235779]
[-4.08228731 -230.92570496]
[-4.52889347 -245.91905212]
[-18.49244690 -252.08200073]
[-28.39263725 -263.69876099]
[-32.26377106 -278.46279907]
[-29.33723831 -293.44271851]
[-20.19410133 -305.66424561]
[-6.64973402 -312.70080566]
[8.60661697 -313.15524292]
[22.54579163 -306.93734741]
[32.40015793 -295.28170776]
[36.21312332 -280.50253296]
[33.22762299 -265.53424072]
[24.03642845 -253.34880066]
[10.46445656 -246.36566162]
[10.91106224 -231.37231445]
[11.35766888 -216.37895203]
[11.80427456 -201.38560486]
[13.03125000 -186.43586731]
[15.03526306 -171.57034302]
[17.03927803 -156.70481873]
[19.04329109 -141.83929443]
[21.04730415 -126.97376251]
[30.47359467 -119.39276123]
[32.26483154 -107.02444458]
[24.92097855 -96.42111206]
[26.70344353 -81.52739716]
[35.89831543 -69.80973053]
[29.85572815 -55.18791199]
[31.63819504 -40.29419327]
[33.42066193 -25.40047646]
[37.82165909 -11.06062889]
[44.70107269 2.26880026]
[51.58048248 15.59822941]
[59.33687592 28.43717003]
[67.93544006 40.72800827]
[76.53400421 53.01884460]
[85.13256836 65.30968475]
[93.73113251 77.60052490]
[100.14115906 81.27928925]
[102.36461639 90.13897705]
[109.13400269 94.51480865]
[110.81046295 102.80458069]
[119.03926849 115.34597778]
[127.26808167 127.88738251]
[136.04867554 140.04884338]
[145.36357117 151.80609131]
[154.67845154 163.56333923]
[163.99333191 175.32058716]
[177.46235657 175.32087708]
[188.31358337 182.96687317]
[192.71456909 195.28407288]
[189.26956177 207.70024109]
[198.40837097 219.59487915]
[207.54716492 231.48950195]
[216.68597412 243.38414001]
[225.82476807 255.27877808]
[234.96357727 267.17340088]
[244.10238647 279.06805420]
[248.17153931 280.58328247]
[251.23840332 283.06497192]
[253.12225342 286.07937622]
[253.80175781 289.17852783]
[253.40583801 291.95367432]
[267.55258179 299.03747559]
[268.28707886 313.91397095]
[276.70169067 326.33148193]
[282.47369385 329.55566406]
[285.32318115 334.47271729]
[285.17553711 339.24630737]
[293.21670532 351.90884399]
[301.35189819 364.51113892]
[309.58071899 377.05255127]
[317.80953979 389.59396362]
[326.03833008 402.13534546]
[339.69119263 395.85388184]
[354.12780762 391.67749023]
[369.02563477 389.69952393]
[384.05184937 389.96417236]
[398.87078857 392.46548462]
[413.15139771 397.14761353]
[426.57461548 403.90594482]
[438.84054565 412.58950806]
[449.67520142 423.00430298]
[458.83651733 434.91766357]
[466.11981201 448.06341553]
[471.36242676 462.14791870]
[474.44717407 476.85647583]
[475.30517578 491.86053467]
[473.91723633 506.82485962]
[470.31439209 521.41516113]
[464.57714844 535.30554199]
[456.83361816 548.18554688]
[447.25683594 559.76757812]
[436.06076050 569.79278564]
[423.49545288 578.03729248]
[409.84170532 584.31683350]
[395.40451050 588.49114990]
[380.50640869 590.46697998]
[365.48019409 590.20019531]
[350.66162109 587.69677734]
[336.38168335 583.01257324]
[322.95944214 576.25231934]
[310.69473267 567.56701660]
[299.86157227 557.15069580]
[290.70196533 545.23602295]
[283.42050171 532.08923340]
[278.17993164 518.00402832]
[275.09725952 503.29501343]
[274.24142456 488.29083252]
[275.63146973 473.32669067]
[279.23638916 458.73690796]
[284.97561646 444.84738159]
[292.72097778 431.96844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[6 167]
[7 166]
[8 163]
[9 162]
[11 160]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[21 145]
[22 144]
[23 143]
[24 142]
[31 141]
[32 140]
[33 139]
[34 137]
[35 135]
[36 134]
[37 133]
[38 132]
[39 131]
[49 130]
[50 129]
[51 128]
[76 127]
[77 126]
[78 125]
[80 123]
[81 122]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
