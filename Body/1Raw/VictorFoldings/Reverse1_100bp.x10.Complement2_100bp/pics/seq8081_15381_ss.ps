%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[237.31250000 497.94674683]
[242.86347961 483.99313354]
[249.99687195 470.77832031]
[258.61621094 458.48101807]
[268.60491943 447.26751709]
[279.82791138 437.28952026]
[271.22933960 424.99868774]
[262.63076782 412.70782471]
[254.03221130 400.41699219]
[245.43365479 388.12615967]
[236.83508301 375.83532715]
[227.96418762 363.73956299]
[218.82539368 351.84494019]
[209.68658447 339.95031738]
[200.54779053 328.05566406]
[191.40898132 316.16104126]
[193.80686951 330.96813965]
[191.33192444 345.76254272]
[184.24530029 358.98297119]
[173.29490662 369.23425293]
[159.63632202 375.43453979]
[144.71101379 376.92947388]
[130.09405518 373.56130981]
[117.32801056 365.68551636]
[107.76011658 354.13323975]
[102.40010071 340.12359619]
[101.81361389 325.13504028]
[106.06255341 310.74942017]
[114.69850922 298.48483276]
[126.81011200 289.63558960]
[141.11920166 285.13558960]
[156.11569214 285.45971680]
[170.21699524 290.57376099]
[181.93505859 299.93820190]
[176.06610107 286.13403320]
[170.19714355 272.32983398]
[164.32817078 258.52566528]
[158.45921326 244.72149658]
[152.59025574 230.91731262]
[146.72129822 217.11312866]
[140.85234070 203.30895996]
[134.67655945 189.63928223]
[128.19706726 176.11094666]
[121.71757507 162.58259583]
[115.23807526 149.05424500]
[108.75858307 135.52590942]
[102.27909088 121.99755859]
[95.79959106 108.46921539]
[91.37529755 105.65148163]
[88.84467316 100.55548096]
[89.33531189 94.44023895]
[83.26147461 80.72496796]
[77.18764496 67.00970459]
[63.53298187 65.12792206]
[52.67734146 56.81085968]
[47.39115906 44.31582260]
[48.95670319 30.94820595]
[56.85882187 20.18722916]
[50.98986053 6.38305187]
[45.12089920 -7.42112541]
[39.25193787 -21.22530174]
[27.60401917 -26.76505089]
[22.99993515 -38.38340378]
[27.40081596 -49.65100479]
[21.73802948 -63.54103088]
[5.49232244 -70.02919769]
[-0.90854156 -85.94597626]
[6.04317904 -101.25977325]
[0.17421815 -115.06394958]
[-5.69474268 -128.86813354]
[-11.56370354 -142.67230225]
[-17.43266487 -156.47648621]
[-31.99947739 -152.77400208]
[-46.96076584 -151.33862305]
[-61.96581650 -152.20402527]
[-76.66288757 -155.34989929]
[-90.70745850 -160.70249939]
[-103.77030945 -168.13636780]
[-115.54522705 -177.47723389]
[-125.75617981 -188.50614929]
[-134.16381836 -200.96455383]
[-140.57106018 -214.56042480]
[-144.82769775 -228.97505188]
[-146.83396912 -243.87052917]
[-146.54281616 -258.89770508]
[-143.96107483 -273.70428467]
[-139.14929199 -287.94320679]
[-132.22021484 -301.28070068]
[-123.33631134 -313.40408325]
[-112.70581055 -324.02920532]
[-100.57791138 -332.90695190]
[-87.23691559 -339.82925415]
[-72.99555206 -344.63381958]
[-58.18765259 -347.20803833]
[-43.16034317 -347.49157715]
[-28.26588058 -345.47775269]
[-13.85341549 -341.21380615]
[-0.26079655 -334.79965210]
[12.19334698 -326.38571167]
[23.21707153 -316.16915894]
[32.55196381 -304.38949585]
[39.97920609 -291.32287598]
[45.32468414 -277.27560425]
[48.46310043 -262.57693481]
[49.32088470 -247.57144165]
[47.87792206 -232.61088562]
[44.16804886 -218.04594421]
[38.27822113 -204.21806335]
[30.34650612 -191.45137024]
[20.55883789 -180.04515076]
[9.14465141 -170.26676941]
[-3.62848735 -162.34544373]
[2.24047351 -148.54125977]
[8.10943413 -134.73709106]
[13.97839546 -120.93291473]
[19.84735489 -107.12873840]
[32.35397720 -104.02809906]
[40.91903305 -94.14266205]
[42.24621201 -80.93474579]
[35.62805557 -69.20381927]
[41.29084396 -55.31379318]
[55.71323395 -45.31571198]
[53.05611420 -27.09426308]
[58.92507553 -13.29008579]
[64.79403687 0.51409090]
[70.66299438 14.31826782]
[86.76994324 17.48747253]
[97.92578888 29.75567818]
[99.58743286 46.42121887]
[90.90290833 60.93587112]
[96.97674561 74.65113831]
[103.05057526 88.36640167]
[109.32793427 101.98972321]
[115.80743408 115.51806641]
[122.28692627 129.04641724]
[128.76641846 142.57475281]
[135.24592590 156.10310364]
[141.72541809 169.63145447]
[148.20491028 183.15979004]
[152.51251221 186.10797119]
[155.00886536 190.02223206]
[155.62930298 194.05088806]
[154.65650940 197.44000244]
[160.52546692 211.24417114]
[166.39443970 225.04835510]
[172.26339722 238.85252380]
[178.13235474 252.65670776]
[184.00131226 266.46087646]
[189.87026978 280.26504517]
[195.73924255 294.06924438]
[203.30361938 307.02224731]
[212.44241333 318.91687012]
[221.58122253 330.81149292]
[230.72001648 342.70614624]
[239.85882568 354.60076904]
[244.68327332 356.59368896]
[247.93560791 359.90664673]
[249.37631226 363.71969604]
[249.12593079 367.23675537]
[257.72448730 379.52758789]
[266.32305908 391.81842041]
[274.92163086 404.10928345]
[283.52017212 416.40011597]
[292.11874390 428.69094849]
[305.33941650 421.56838989]
[319.29754639 416.02886963]
[333.80444336 412.14724731]
[348.66387939 409.97607422]
[363.67486572 409.54470825]
[378.63446045 410.85894775]
[393.34033203 413.90106201]
[407.59356689 418.62985229]
[421.20141602 424.98144531]
[433.97988892 432.86987305]
[445.75613403 442.18847656]
[456.37091064 452.81124878]
[465.68066406 464.59451294]
[473.55944824 477.37890625]
[479.90078735 490.99154663]
[484.61886597 505.24835205]
[487.64987183 519.95648193]
[488.95285034 534.91705322]
[488.51019287 549.92773438]
[486.32781982 564.78552246]
[482.43530273 579.28948975]
[476.88525391 593.24346924]
[469.75274658 606.45874023]
[461.13421631 618.75665283]
[451.14627075 629.97076416]
[439.92395020 639.94952393]
[427.61898804 648.55798340]
[414.39785767 655.67962646]
[400.43933105 661.21826172]
[385.93218994 665.09887695]
[371.07263184 667.26904297]
[356.06158447 667.69946289]
[341.10208130 666.38421631]
[326.39642334 663.34112549]
[312.14352417 658.61132812]
[298.53607178 652.25885010]
[285.75811768 644.36956787]
[273.98251343 635.05017090]
[263.36843872 624.42669678]
[254.05949402 612.64282227]
[246.18153381 599.85791016]
[239.84112549 586.24481201]
[235.12399292 571.98773193]
[232.09396362 557.27935791]
[230.79197693 542.31872559]
[231.23565674 527.30804443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 164]
[7 163]
[8 162]
[9 161]
[10 160]
[11 159]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[51 132]
[52 131]
[53 130]
[58 126]
[59 125]
[60 124]
[61 123]
[64 121]
[65 120]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
