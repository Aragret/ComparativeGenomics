%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[100.76413727 535.38592529]
[98.31840515 520.58666992]
[95.87268066 505.78738403]
[93.42695618 490.98812866]
[90.98122406 476.18884277]
[88.53549957 461.38958740]
[86.08976746 446.59030151]
[83.64404297 431.79104614]
[78.62352753 445.92590332]
[69.12483215 457.53515625]
[56.26385498 465.25497437]
[41.55149460 468.17840576]
[26.71614265 465.96200562]
[13.50064087 458.86621094]
[3.45753360 447.72457886]
[-2.23332477 433.84603882]
[-2.90337849 418.86099243]
[1.52609026 404.52990723]
[10.53471184 392.53637695]
[23.06416130 384.28939819]
[37.64249420 380.75778198]
[52.55706024 382.35644531]
[66.05570984 388.89758301]
[76.55263519 399.61273193]
[82.81507874 413.24462891]
[83.93072510 398.28616333]
[85.04637146 383.32772827]
[77.39294434 373.96014404]
[78.19998932 361.48886108]
[87.57913971 352.63479614]
[88.91737366 337.69461060]
[89.92163086 322.72827148]
[90.59141541 307.74325562]
[91.26119995 292.75820923]
[91.93098450 277.77316284]
[92.60076904 262.78811646]
[93.27055359 247.80308533]
[90.42886353 240.98057556]
[94.06351471 232.60041809]
[94.95632935 217.62701416]
[95.84914398 202.65361023]
[96.63046265 187.67396545]
[97.30024719 172.68893433]
[97.07691956 157.69059753]
[95.96127319 142.73214722]
[94.84562683 127.77368927]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[88.76469421 58.63391113]
[87.42646027 43.69372559]
[85.75492096 28.78715134]
[83.75090790 13.92162323]
[73.98576355 5.49519253]
[72.62265015 -6.92759705]
[79.85015869 -16.62758064]
[78.06769562 -31.52129745]
[76.28522491 -46.41501617]
[64.14490509 -56.17464447]
[62.54940033 -71.30438232]
[71.92853546 -82.81817627]
[70.14606476 -97.71189880]
[68.36360168 -112.60561371]
[65.23356628 -116.78292847]
[64.12928772 -121.29223633]
[64.83799744 -125.30631256]
[66.84944916 -128.20223999]
[65.73379517 -143.16069031]
[64.61814880 -158.11914062]
[63.50249863 -173.07760620]
[51.81007767 -183.36958313]
[50.89173889 -198.55548096]
[60.77563477 -209.63899231]
[52.03335571 -222.82546997]
[58.80261612 -236.09295654]
[57.68696594 -251.05140686]
[46.96891785 -266.02490234]
[55.19967270 -281.52398682]
[53.86143875 -296.46417236]
[52.52320480 -311.40435791]
[51.18497086 -326.34451294]
[49.84673691 -341.28469849]
[34.84954071 -342.29989624]
[20.19581985 -345.64877319]
[6.24644089 -351.24890137]
[-6.65508366 -358.96234131]
[-18.19104195 -368.59915161]
[-28.07735062 -379.92202759]
[-36.07054901 -392.65209961]
[-41.97380066 -406.47592163]
[-45.64173126 -421.05307007]
[-46.98401260 -436.02453613]
[-45.96759033 -451.02163696]
[-42.61749649 -465.67507935]
[-37.01622772 -479.62399292]
[-29.30172539 -492.52490234]
[-19.66396141 -504.06005859]
[-8.34027481 -513.94543457]
[4.39047718 -521.93756104]
[18.21478844 -527.83966064]
[32.79222488 -531.50640869]
[47.76379776 -532.84747314]
[62.76082993 -531.82983398]
[77.41399384 -528.47851562]
[91.36244965 -522.87609863]
[104.26270294 -515.16052246]
[115.79706573 -505.52178955]
[125.68151093 -494.19729614]
[133.67260742 -481.46588135]
[139.57357788 -467.64108276]
[143.23910522 -453.06335449]
[144.57890320 -438.09167480]
[143.56001282 -423.09472656]
[140.20750427 -408.44183350]
[134.60392761 -394.49383545]
[126.88729858 -381.59420776]
[117.24763489 -370.06063843]
[105.92231750 -360.17715454]
[93.19024658 -352.18710327]
[79.36495972 -346.28726196]
[64.78691864 -342.62295532]
[66.12515259 -327.68276978]
[67.46338654 -312.74258423]
[68.80162048 -297.80239868]
[70.13985443 -282.86221313]
[79.21823883 -274.86785889]
[80.45541382 -262.43188477]
[72.64541626 -252.16706848]
[73.76107025 -237.20860291]
[82.42354584 -225.09205627]
[75.73409271 -210.75463867]
[87.15277100 -201.25994873]
[88.49728394 -186.10583496]
[78.46095276 -174.19325256]
[79.57659912 -159.23480225]
[80.69225311 -144.27633667]
[81.80789948 -129.31788635]
[83.25731659 -114.38807678]
[85.03978729 -99.49436188]
[86.82225037 -84.60064697]
[98.65350342 -75.62528992]
[100.67334747 -60.54633331]
[91.17894745 -48.19748306]
[92.96141052 -33.30376434]
[94.74387360 -18.41004753]
[106.00385284 -4.94974136]
[98.61643982 11.91761017]
[100.62045288 26.78313828]
[103.18764496 29.20013046]
[104.71169281 32.98065186]
[104.56447601 37.62086868]
[102.36664581 42.35549164]
[103.70487976 57.29567719]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[112.44138336 119.75395203]
[109.80407715 126.65803528]
[110.91973114 141.61648560]
[112.03537750 156.57495117]
[121.04328918 144.58088684]
[135.34645081 140.06208801]
[149.61015320 144.70397949]
[158.51435852 156.77522278]
[158.73805237 171.77355957]
[150.19776917 184.10496521]
[136.07885742 189.17015076]
[121.64729309 185.07991028]
[112.28528595 173.35871887]
[111.61550140 188.34375000]
[114.35860443 197.05657959]
[110.82254791 203.54641724]
[109.92973328 218.51982117]
[109.03691864 233.49324036]
[108.25559235 248.47286987]
[107.58580780 263.45791626]
[106.91602325 278.44296265]
[106.24623871 293.42797852]
[105.57645416 308.41302490]
[104.90666962 323.39807129]
[107.31371307 328.02981567]
[107.66798401 332.65884399]
[106.31426239 336.50363159]
[103.85755920 339.03286743]
[102.51932526 353.97305298]
[110.65254211 370.49371338]
[100.00482941 384.44335938]
[98.88917542 399.40182495]
[97.77352905 414.36029053]
[98.44331360 429.34530640]
[100.88903809 444.14459229]
[103.33477020 458.94384766]
[105.78049469 473.74313354]
[108.22622681 488.54238892]
[110.67195129 503.34167480]
[113.11767578 518.14093018]
[115.56340790 532.94018555]
[130.22515869 537.18237305]
[141.58860779 547.37231445]
[147.39752197 561.48681641]
[146.49855042 576.72344971]
[139.07019043 590.05694580]
[126.58733368 598.83990479]
[111.52846527 601.32855225]
[96.88353729 597.02868652]
[85.56031036 586.79406738]
[79.80701447 572.65679932]
[80.76597595 557.42382812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[25 191]
[26 190]
[27 189]
[30 187]
[31 186]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[39 176]
[40 175]
[41 174]
[42 172]
[43 171]
[44 162]
[45 161]
[46 160]
[47 158]
[49 156]
[50 155]
[51 154]
[52 153]
[53 149]
[54 148]
[57 146]
[58 145]
[59 144]
[62 141]
[63 140]
[64 139]
[68 138]
[69 137]
[70 136]
[71 135]
[74 132]
[76 130]
[77 129]
[79 126]
[80 125]
[81 124]
[82 123]
[83 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
