%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[136.71408081 776.04602051]
[133.38484192 761.38012695]
[132.65307617 746.35894775]
[134.54101562 731.43896484]
[138.99128723 717.07348633]
[145.86865234 703.69915771]
[154.96412659 691.72235107]
[166.00128174 681.50708008]
[178.64472961 673.36370850]
[192.51025391 667.53973389]
[189.18798828 652.91229248]
[185.86573792 638.28485107]
[182.54347229 623.65740967]
[179.22122192 609.02990723]
[175.89895630 594.40246582]
[173.12637329 592.22412109]
[171.27111816 588.59466553]
[171.00376892 583.95983887]
[172.77043152 579.04797363]
[170.10462952 564.28680420]
[167.43884277 549.52557373]
[157.56282043 538.37597656]
[162.72438049 523.42041016]
[160.05859375 508.65917969]
[150.18257141 497.50958252]
[155.34414673 482.55401611]
[152.67834473 467.79281616]
[150.01254272 453.03158569]
[147.34675598 438.27038574]
[144.68095398 423.50915527]
[142.01516724 408.74792480]
[127.19304657 406.78176880]
[113.68607330 400.32174683]
[102.82244873 389.98919678]
[95.67476654 376.78686523]
[92.95407104 362.00170898]
[94.93920135 347.07943726]
[101.44820404 333.48306274]
[111.85500336 322.54959106]
[125.14952087 315.35839844]
[122.48372650 300.59719849]
[119.81793213 285.83596802]
[117.15213776 271.07473755]
[107.39673615 263.92221069]
[105.05501556 251.64622498]
[111.91807556 240.72554016]
[109.47235107 225.92626953]
[107.02662659 211.12699890]
[96.28857422 208.10293579]
[87.41403961 201.25891113]
[81.70850372 191.55335999]
[80.02925110 180.36903381]
[82.65675354 169.31607056]
[89.24866486 160.00010681]
[98.88391113 153.78912354]
[97.10144806 138.89540100]
[95.31897736 124.00168610]
[93.53651428 109.10797119]
[91.64321899 94.22793579]
[89.52859497 79.37773895]
[87.30348206 64.54369354]
[85.07836151 49.70965195]
[82.85324860 34.87560654]
[79.96797180 20.15571594]
[76.42829895 5.57934046]
[73.32122040 2.54618549]
[71.52191925 -0.96480066]
[71.02001190 -4.48381996]
[71.65363312 -7.59270048]
[73.13935089 -9.96983910]
[70.47354889 -24.73105621]
[60.40686035 -36.93647385]
[65.75910187 -50.83621216]
[63.09330750 -65.59743500]
[60.42751312 -80.35865021]
[57.76171494 -95.11986542]
[55.09592056 -109.88108063]
[44.52908325 -99.23486328]
[29.60145950 -100.70661926]
[21.31713867 -113.21141815]
[25.78301430 -127.53119659]
[39.70700836 -133.10993958]
[52.82390976 -125.83655548]
[51.26338577 -140.75515747]
[41.75345612 -149.46859741]
[40.76082230 -161.92646790]
[48.27393341 -171.40695190]
[46.93569946 -186.34713745]
[37.99806213 -199.40199280]
[44.56903458 -212.76879883]
[43.23080063 -227.70898438]
[41.89256668 -242.64916992]
[40.55433273 -257.58935547]
[25.80303764 -260.94412231]
[12.81144428 -268.69485474]
[2.85233331 -280.08218384]
[-3.09860110 -293.99050903]
[-4.45834732 -309.05725098]
[-1.09369147 -323.80627441]
[6.66573191 -336.79269409]
[18.05973434 -346.74417114]
[31.97204590 -352.68576050]
[47.03968048 -354.03543091]
[61.78646469 -350.66088867]
[74.76766205 -342.89276123]
[84.71150208 -331.49209595]
[90.64379120 -317.57580566]
[91.98334503 -302.50726318]
[88.59893036 -287.76275635]
[80.82210541 -274.78674316]
[69.41477966 -264.85055542]
[55.49451828 -258.92758179]
[56.83275223 -243.98741150]
[58.17098618 -229.04722595]
[59.50922012 -214.10704041]
[68.35113525 -202.12080383]
[61.87588120 -187.68537903]
[63.21411514 -172.74519348]
[74.06833649 -158.95559692]
[66.18199158 -142.31567383]
[67.74251556 -127.39707947]
[69.85713959 -112.54687500]
[72.52293396 -97.78565979]
[75.18872833 -83.02444458]
[77.85452271 -68.26322937]
[80.52031708 -53.50201035]
[90.39633942 -42.35241318]
[85.23477173 -27.39685249]
[87.90056610 -12.63563442]
[91.00467682 2.03966808]
[94.54434967 16.61604309]
[103.25308228 4.40301800]
[118.02359009 1.78921402]
[130.39466858 10.27193642]
[133.27958679 24.99189758]
[125.02574158 37.51683426]
[110.36130524 40.67189407]
[97.68728638 32.65048981]
[99.91240692 47.48453522]
[102.13751984 62.31857681]
[104.36264038 77.15261841]
[108.46358490 83.30111694]
[106.50875092 92.22392273]
[110.62101746 99.15657806]
[108.43022919 107.32550812]
[110.21269226 122.21922302]
[111.99516296 137.11294556]
[113.77762604 152.00665283]
[130.87054443 160.61871338]
[139.25309753 177.65815735]
[135.70043945 196.15969849]
[121.82589722 208.68127441]
[124.27162170 223.48054504]
[126.71734619 238.27981567]
[138.72853088 252.23736572]
[131.91334534 268.40896606]
[134.57914734 283.17016602]
[137.24494934 297.93139648]
[139.91073608 312.69259644]
[154.88081360 314.77935791]
[168.45454407 321.38211060]
[179.30813599 331.84286499]
[186.38740540 345.12817383]
[189.01013184 359.93099976]
[186.93188477 374.79949951]
[180.36863708 388.27923584]
[169.97447205 399.05566406]
[156.77638245 406.08215332]
[159.44216919 420.84335327]
[162.10797119 435.60458374]
[164.77377319 450.36578369]
[167.43955994 465.12701416]
[170.10536194 479.88824463]
[180.17205811 492.09365845]
[174.81980896 505.99337769]
[177.48559570 520.75457764]
[187.55229187 532.96002197]
[182.20005798 546.85974121]
[184.86584473 561.62097168]
[187.53164673 576.38220215]
[190.52641296 591.08020020]
[193.84867859 605.70764160]
[197.17094421 620.33514404]
[200.49319458 634.96258545]
[203.81546021 649.59002686]
[207.13771057 664.21752930]
[222.15864563 663.48065186]
[237.07929993 665.36346436]
[251.44625854 669.80889893]
[264.82293701 676.68170166]
[276.80282593 685.77307129]
[287.02188110 696.80676270]
[295.16952515 709.44744873]
[300.99819946 723.31097412]
[304.33074951 737.97607422]
[305.06594849 752.99707031]
[303.18136597 767.91754150]
[298.73437500 782.28399658]
[291.86004639 795.65991211]
[282.76727295 807.63873291]
[271.73245239 817.85656738]
[259.09085083 826.00274658]
[245.22663879 831.82989502]
[230.56115723 835.16076660]
[215.54006958 835.89422607]
[200.61984253 834.00799561]
[186.25389099 829.55932617]
[172.87876892 822.68347168]
[160.90093994 813.58941650]
[150.68438721 802.55340576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 186]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[19 180]
[20 179]
[21 178]
[23 176]
[24 175]
[26 173]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[40 159]
[41 158]
[42 157]
[43 156]
[46 154]
[47 153]
[48 152]
[55 148]
[56 147]
[57 146]
[58 145]
[59 143]
[60 141]
[61 140]
[62 139]
[63 138]
[64 131]
[65 130]
[70 129]
[71 128]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[83 121]
[84 120]
[87 118]
[88 117]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
