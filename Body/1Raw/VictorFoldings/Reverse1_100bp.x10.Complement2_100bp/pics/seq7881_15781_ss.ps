%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[203.50074768 569.15332031]
[207.61424255 554.70001221]
[213.78839111 540.99975586]
[221.89160156 528.34448242]
[231.75114441 517.00396729]
[243.15687561 507.21994019]
[255.86567688 499.20095825]
[249.79183960 485.48568726]
[243.71800232 471.77041626]
[237.64416504 458.05514526]
[225.41600037 449.55096436]
[226.90261841 433.79974365]
[220.82878113 420.08447266]
[214.75494385 406.36920166]
[208.68112183 392.65393066]
[202.60728455 378.93869019]
[196.53344727 365.22341919]
[184.30528259 356.71920776]
[185.79190063 340.96801758]
[179.71806335 327.25274658]
[173.64422607 313.53747559]
[167.26562500 299.96127319]
[160.58543396 286.53088379]
[146.42727661 282.04956055]
[139.46128845 268.52441406]
[144.25772095 253.70442200]
[137.47773743 240.32415771]
[130.59831238 226.99472046]
[123.71891022 213.66529846]
[116.83949280 200.33586121]
[109.96008301 187.00643921]
[103.08067322 173.67700195]
[103.36093903 188.67439270]
[100.34188080 203.36741638]
[94.17078400 217.03919983]
[85.14875793 229.02265930]
[73.71601105 238.73307800]
[60.43037415 245.69668579]
[45.94007492 249.57368469]
[30.95212746 250.17494202]
[16.19783211 247.47109985]
[2.39708257 241.59408569]
[-9.77675343 232.83064270]
[-19.72968674 221.60838318]
[-26.97609329 208.47485352]
[-31.16240311 194.07087708]
[-32.08435822 179.09922791]
[-29.69696999 164.29043579]
[-24.11672974 150.36705017]
[-15.61590862 138.00840759]
[-4.60927963 127.81752014]
[8.36612034 120.29163361]
[22.67719078 115.79794312]
[37.62566376 114.55570984]
[52.48217010 116.62554169]
[66.52182770 121.90644836]
[79.05961609 130.14076233]
[89.48377228 140.92672729]
[97.28290558 153.73204041]
[95.94467163 138.79185486]
[94.60643768 123.85167694]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[88.69773865 64.14447021]
[87.02619171 49.23789978]
[85.24372864 34.34418106]
[83.35043335 19.46414566]
[81.34642029 4.59861803]
[79.34240723 -10.26691055]
[77.33839417 -25.13243866]
[75.33438110 -39.99796677]
[73.33036804 -54.86349487]
[71.32635498 -69.72902679]
[64.17444611 -56.54379654]
[51.44005203 -48.61693192]
[36.45191193 -48.02048492]
[23.12789536 -54.91037369]
[14.95086384 -67.48559570]
[14.05827427 -82.45901489]
[20.68344879 -95.91661835]
[33.09458160 -104.34061432]
[48.04743195 -105.52900696]
[61.63336182 -99.17113495]
[70.30072784 -86.92977142]
[70.52405548 -101.92810822]
[70.74738312 -116.92644501]
[63.21640778 -130.84028625]
[71.14234161 -143.45094299]
[71.36566925 -158.44927979]
[63.83468628 -172.36312866]
[71.76062012 -184.97378540]
[71.98394775 -199.97212219]
[72.20727539 -214.97045898]
[72.43060303 -229.96879578]
[64.89962769 -243.88264465]
[72.82556152 -256.49331665]
[73.04888916 -271.49163818]
[58.96826935 -277.15737915]
[47.88785934 -287.52990723]
[41.30619049 -301.20639038]
[40.11338043 -316.33718872]
[44.47074890 -330.87603760]
[53.78899384 -342.85662842]
[66.80789948 -350.65872192]
[81.76676941 -353.22711182]
[96.64253998 -350.21447754]
[109.42337799 -342.02822876]
[118.38078308 -329.77551270]
[122.30334473 -315.11337280]
[120.66056061 -300.02478027]
[113.67461395 -286.55032349]
[102.29029083 -276.51232910]
[88.04722595 -271.26831055]
[87.82389832 -256.26998901]
[95.37084961 -243.42892456]
[87.42893982 -229.74546814]
[87.20561218 -214.74713135]
[86.98228455 -199.74879456]
[86.75895691 -184.75045776]
[94.30590820 -171.90940857]
[86.36400604 -158.22595215]
[86.14067841 -143.22761536]
[93.68762970 -130.38656616]
[85.74571991 -116.70311737]
[85.52239227 -101.70478058]
[85.29906464 -86.70644379]
[86.19187927 -71.73303986]
[88.19589996 -56.86750793]
[90.19991302 -42.00197983]
[92.20392609 -27.13645172]
[94.20793915 -12.27092361]
[96.21195221 2.59460449]
[98.21596527 17.46013260]
[102.22491455 23.66900635]
[100.13744354 32.56171417]
[101.91991425 47.45543289]
[105.83597565 53.72330475]
[103.61634064 62.58395004]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[109.54661560 122.51344299]
[110.88484955 137.45362854]
[112.22309113 152.39381409]
[116.41009521 166.79759216]
[123.28951263 180.12702942]
[130.16893005 193.45645142]
[137.04833984 206.78588867]
[143.92774963 220.11531067]
[150.80715942 233.44473267]
[157.52381897 239.63540649]
[157.68809509 247.02423096]
[172.40072632 252.14051819]
[178.98406982 265.85598755]
[174.01580811 279.85070801]
[180.69599915 293.28106689]
[185.04701233 296.16479492]
[187.60136414 300.04144287]
[188.28170776 304.06042480]
[187.35949707 307.46365356]
[193.43333435 321.17892456]
[199.50715637 334.89416504]
[212.16976929 344.37936401]
[210.24871826 359.14956665]
[216.32255554 372.86483765]
[222.39637756 386.58010864]
[228.47021484 400.29537964]
[234.54405212 414.01065063]
[240.61788940 427.72592163]
[253.28048706 437.21112061]
[251.35943604 451.98132324]
[257.43325806 465.69656372]
[263.50711060 479.41183472]
[269.58093262 493.12710571]
[284.06015015 489.10583496]
[298.97055054 487.23571777]
[313.99435425 487.55657959]
[328.81134033 490.06158447]
[343.10565186 494.69738770]
[356.57263184 501.36511230]
[368.92520142 509.92266846]
[379.90008545 520.18768311]
[389.26333618 531.94128418]
[396.81539917 544.93298340]
[402.39529419 558.88580322]
[405.88406372 573.50250244]
[407.20736694 588.47131348]
[406.33700562 603.47332764]
[403.29150391 618.18872070]
[398.13580322 632.30383301]
[390.97979736 645.51782227]
[381.97598267 657.54901123]
[371.31631470 668.14093018]
[359.22796631 677.06787109]
[345.96862793 684.13952637]
[331.82095337 689.20513916]
[317.08642578 692.15673828]
[302.07916260 692.93145752]
[287.11904907 691.51275635]
[272.52496338 687.93090820]
[258.60794067 682.26214600]
[245.66464233 674.62744141]
[233.97096252 665.18945312]
[223.77615356 654.14935303]
[215.29751587 641.74243164]
[208.71577454 628.23327637]
[204.17120361 613.90966797]
[201.76069641 599.07702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 176]
[8 175]
[9 174]
[10 173]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[17 166]
[19 164]
[20 163]
[21 162]
[22 158]
[23 157]
[26 154]
[27 152]
[28 151]
[29 150]
[30 149]
[31 148]
[32 147]
[59 146]
[60 145]
[61 144]
[62 143]
[63 141]
[64 140]
[65 139]
[66 137]
[67 136]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[85 127]
[86 126]
[87 125]
[89 123]
[90 122]
[92 120]
[93 119]
[94 118]
[95 117]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
