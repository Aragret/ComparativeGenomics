%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[16.45188141 690.53375244]
[4.73215055 699.91424561]
[-7.82618952 708.13812256]
[-21.10940552 715.13104248]
[-34.99720001 720.82965088]
[-49.36380005 725.18231201]
[-64.07909393 728.14959717]
[-79.00981903 729.70465088]
[-94.02075195 729.83343506]
[-108.97595215 728.53466797]
[-123.73998260 725.82025146]
[-138.17912292 721.71466064]
[-152.16262817 716.25512695]
[-165.56384277 709.49108887]
[-178.26139832 701.48376465]
[-190.14030457 692.30572510]
[-201.09298706 682.04010010]
[-211.02024841 670.77978516]
[-219.83218384 658.62683105]
[-227.44900513 645.69128418]
[-233.80171204 632.09027100]
[-238.83276367 617.94696045]
[-242.49662781 603.38946533]
[-244.76010132 588.54956055]
[-245.60269165 573.56176758]
[-245.01676941 558.56170654]
[-243.00762939 543.68530273]
[-239.59347534 529.06719971]
[-234.80523682 514.83984375]
[-228.68626404 501.13208008]
[-221.29199219 488.06802368]
[-212.68934631 475.76602173]
[-202.95628357 464.33746338]
[-192.18092346 453.88583374]
[-180.46084595 444.50582886]
[-167.90220642 436.28237915]
[-154.61872864 429.28991699]
[-140.73072815 423.59185791]
[-126.36397552 419.23971558]
[-111.64856720 416.27294922]
[-96.71778870 414.71844482]
[-81.70684814 414.59024048]
[-66.75169373 415.88949585]
[-51.98776627 418.60449219]
[-37.54876709 422.71060181]
[-32.09341049 408.73779297]
[-26.63805389 394.76501465]
[-21.18269730 380.79220581]
[-15.72733974 366.81939697]
[-26.13005066 354.45428467]
[-28.89340210 338.43804932]
[-23.16985512 323.12603760]
[-10.43287849 312.73062134]
[5.90102005 310.16241455]
[11.14773846 296.10995483]
[16.39445686 282.05746460]
[15.26212788 277.41778564]
[17.03241348 272.01748657]
[22.01225853 267.66860962]
[27.67504501 253.77857971]
[33.33782959 239.88856506]
[39.00061798 225.99853516]
[44.66340256 212.10850525]
[50.32619095 198.21847534]
[45.92531204 186.95088196]
[50.52939606 175.33251953]
[62.17731476 169.79277039]
[60.03656769 155.05281067]
[72.55654907 145.38014221]
[78.42550659 131.57595825]
[84.29447174 117.77178192]
[90.16342926 103.96760559]
[95.51461792 89.95458221]
[100.34061432 75.75212860]
[105.16661072 61.54967499]
[109.88674927 47.31168365]
[114.50075531 33.03895187]
[119.11476135 18.76621819]
[123.51576233 4.42637110]
[127.70277405 -9.97741032]
[131.88978577 -24.38119316]
[135.96945190 -38.81574631]
[139.94154358 -53.28026962]
[143.48121643 -67.85664368]
[146.58532715 -82.53194427]
[149.68943787 -97.20725250]
[150.69369507 -112.17359161]
[149.57804871 -127.13204956]
[148.46240234 -142.09049988]
[147.34675598 -157.04895020]
[146.23110962 -172.00740051]
[145.11546326 -186.96586609]
[143.99980164 -201.92431641]
[129.26054382 -205.27772522]
[116.16536713 -212.82807922]
[105.87870026 -223.90399170]
[99.31522369 -237.52061462]
[97.05855560 -252.46714783]
[99.30935669 -267.41455078]
[105.86749268 -281.03375244]
[116.14981842 -292.11370850]
[129.24203491 -299.66918945]
[143.97998047 -303.02838135]
[159.05317688 -301.89260864]
[173.12133789 -296.36282349]
[184.93350220 -286.93075562]
[193.43937683 -274.43508911]
[197.88258362 -259.98690796]
[197.86807251 -244.87098694]
[193.39712524 -230.43139648]
[184.86727905 -217.95208740]
[173.03700256 -208.54272461]
[158.95826721 -203.03996277]
[160.07391357 -188.08151245]
[161.18955994 -173.12306213]
[162.30520630 -158.16459656]
[163.42085266 -143.20614624]
[164.53649902 -128.24769592]
[165.65216064 -113.28924561]
[171.55224609 -127.08013916]
[181.20928955 -138.55801392]
[193.78785706 -146.72990417]
[208.19976807 -150.88887024]
[223.19824219 -150.67510986]
[237.48576355 -146.10711670]
[249.82633972 -137.58009338]
[259.15237427 -125.83167267]
[264.65704346 -111.87823486]
[265.86419678 -96.92688751]
[262.66934204 -82.27106476]
[255.34890747 -69.17865753]
[244.53617859 -58.78227234]
[231.16654968 -51.98131180]
[216.39663696 -49.36412430]
[201.50418091 -51.15711975]
[187.77754211 -57.20518875]
[176.40419006 -66.98511505]
[168.36804199 -79.65083313]
[164.36474609 -94.10314178]
[161.26063538 -79.42783356]
[158.15652466 -64.75253296]
[159.57080078 -62.33221436]
[160.11158752 -59.20584869]
[159.50512695 -55.70333099]
[157.60208130 -52.24747467]
[154.40606689 -49.30817413]
[150.43397522 -34.84365082]
[151.69401550 -27.56119919]
[146.29356384 -20.19418144]
[142.10655212 -5.79039955]
[137.91954041 8.61338234]
[139.39382935 13.15601921]
[138.03009033 18.67301750]
[133.38749695 23.38022804]
[128.77348328 37.65296173]
[124.15947723 51.92569351]
[125.09308624 59.25714493]
[119.36906433 66.37567139]
[114.54306793 80.57812500]
[109.71707153 94.78058624]
[124.12077332 90.59328461]
[136.46253967 99.11858368]
[137.64448547 114.07194519]
[126.79532623 124.43031311]
[111.91265106 122.55786896]
[103.96760559 109.83657074]
[98.09864807 123.64074707]
[92.22968292 137.44491577]
[86.36072540 151.24909973]
[88.08168793 166.97642517]
[75.98149109 175.66172791]
[78.63861084 193.88317871]
[64.21621704 203.88127136]
[58.55343246 217.77128601]
[52.89064407 231.66131592]
[47.22785950 245.55134583]
[41.56507111 259.44137573]
[35.90228271 273.33139038]
[30.44692802 287.30419922]
[25.20020866 301.35665894]
[19.95349121 315.40914917]
[29.40374374 325.72201538]
[33.46926880 339.03695679]
[31.41119194 352.73889160]
[23.68753242 364.16229248]
[11.85280704 371.10980225]
[-1.75454211 372.27478027]
[-7.20989943 386.24755859]
[-12.66525650 400.22036743]
[-18.12061310 414.19317627]
[-23.57596970 428.16595459]
[-10.17451286 434.92950439]
[2.52333617 442.93634033]
[14.40258026 452.11395264]
[25.35563660 462.37918091]
[35.28330994 473.63912964]
[44.09569168 485.79177856]
[51.71297455 498.72705078]
[58.06617355 512.32788086]
[63.09775162 526.47094727]
[66.76214600 541.02832031]
[69.02615356 555.86810303]
[69.86929321 570.85589600]
[69.28391266 585.85595703]
[67.27532196 600.73248291]
[63.86170578 615.35070801]
[59.07398224 629.57824707]
[52.95551300 643.28619385]
[45.56170654 656.35052490]
[36.95952225 668.65283203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[54 181]
[55 180]
[56 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 173]
[67 171]
[69 169]
[70 168]
[71 167]
[72 166]
[73 160]
[74 159]
[75 158]
[76 156]
[77 155]
[78 154]
[79 151]
[80 150]
[81 149]
[82 147]
[83 146]
[84 141]
[85 140]
[86 139]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
