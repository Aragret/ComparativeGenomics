%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[131.02392578 723.20343018]
[119.94018555 713.07653809]
[109.95645905 701.86364746]
[101.17858887 689.68359375]
[93.69963074 676.66558838]
[87.59885406 662.94750977]
[82.94093323 648.67492676]
[79.77525330 633.99902344]
[78.13536072 619.07537842]
[78.03865051 604.06219482]
[79.48614502 589.11871338]
[82.46249390 574.40319824]
[86.93614960 560.07177734]
[92.85968781 546.27624512]
[100.17031860 533.16296387]
[108.79054260 520.87084961]
[118.62898254 509.53027344]
[129.58134460 499.26138306]
[141.53152466 490.17309570]
[154.35285950 482.36172485]
[167.90940857 475.91006470]
[182.05747986 470.88650513]
[178.51782227 456.31015015]
[174.97814941 441.73376465]
[171.43847656 427.15737915]
[158.65876770 415.13049316]
[163.98948669 397.50479126]
[160.23318481 382.98272705]
[149.55525208 372.59857178]
[153.59017944 357.30053711]
[149.83387756 342.77847290]
[146.24639893 339.62585449]
[144.60130310 334.18609619]
[146.18879700 327.76806641]
[142.86654663 313.14059448]
[139.54428101 298.51312256]
[134.99739075 292.68667603]
[136.28317261 283.64318848]
[133.17906189 268.96789551]
[130.07495117 254.29260254]
[126.97084045 239.61729431]
[123.86672974 224.94198608]
[120.76261902 210.26669312]
[117.65850830 195.59138489]
[107.45490265 184.74078369]
[112.16889954 169.63816833]
[109.06478882 154.96286011]
[105.20048523 140.46917725]
[100.58647919 126.19644165]
[95.97246552 111.92370605]
[91.04087067 97.75756836]
[85.10744476 90.81262970]
[85.82235718 83.45662689]
[80.78543854 69.32759857]
[75.74851990 55.19857025]
[70.71160889 41.06953812]
[58.78955078 30.66881371]
[61.80384064 16.08240318]
[56.76692200 1.95337427]
[54.49388123 16.78014946]
[47.58815384 30.09596443]
[36.77851486 40.49556732]
[23.20573616 46.88146591]
[8.30218410 48.57973862]
[-6.35933399 45.41116333]
[-19.23155403 37.71012878]
[-28.95603943 26.28934097]
[-34.50654221 12.35406399]
[-35.29730606 -2.62507772]
[-31.24487495 -17.06730080]
[-22.77691650 -29.44848442]
[-10.78707314 -38.46200943]
[3.45933843 -43.15665817]
[18.45886040 -43.03699875]
[32.62855911 -38.11565018]
[44.47307205 -28.91197968]
[52.74249268 -16.39709473]
[51.40425873 -31.33728027]
[40.46446609 -46.14952087]
[48.46355057 -61.76942825]
[46.90302658 -76.68803406]
[45.34250259 -91.60663605]
[34.01310349 -81.77583313]
[19.23628998 -84.35377502]
[11.90497971 -97.44010162]
[17.42354012 -111.38805389]
[31.72389603 -115.91573334]
[44.26349640 -107.68689728]
[43.81689072 -122.68025208]
[43.25868225 -137.66986084]
[42.58889771 -152.65489197]
[41.91910934 -167.63993835]
[41.24932480 -182.62496948]
[32.90353394 -196.06590271]
[40.06481171 -209.12596130]
[39.39502716 -224.11100769]
[25.00214386 -228.92860413]
[13.32399654 -238.62319946]
[5.93995905 -251.88369751]
[3.84866261 -266.91668701]
[7.33293772 -281.68908691]
[15.92156506 -294.20309448]
[28.45300293 -302.76623535]
[43.23247528 -306.22045898]
[58.26118469 -304.09857178]
[71.50661469 -296.68756104]
[81.17743683 -284.98971558]
[85.96575165 -270.58706665]
[85.22396851 -255.42744446]
[79.05242157 -241.56106567]
[68.28575134 -230.86325073]
[54.38006592 -224.78079224]
[55.04985046 -209.79574585]
[63.34773636 -197.42665100]
[56.23436356 -183.29475403]
[56.90414810 -168.30972290]
[57.57393646 -153.32467651]
[58.24372101 -138.33964539]
[61.68275452 -131.79786682]
[58.81024170 -123.12685394]
[59.25684738 -108.13350677]
[60.26110840 -93.16716003]
[61.82163239 -78.24855804]
[63.38215256 -63.32995224]
[72.57855225 -55.47165298]
[74.00074005 -43.05548859]
[66.34444427 -32.67551422]
[67.68267822 -17.73532867]
[70.89595032 -3.08354187]
[75.93286896 11.04548740]
[87.49465179 20.43561172]
[84.84063721 36.03262329]
[89.87755585 50.16165161]
[94.91446686 64.29067993]
[99.95138550 78.41971588]
[105.09334564 92.51085663]
[108.33956909 94.59277344]
[110.65235901 98.09546661]
[111.41774750 102.56997681]
[110.24520111 107.30970001]
[114.85920715 121.58242798]
[119.47322083 135.85516357]
[126.22470093 122.46047974]
[139.95645142 116.42398834]
[154.39047241 120.50549316]
[162.92776489 132.83897400]
[161.66516113 147.78573608]
[151.17991638 158.51232910]
[136.26574707 160.11468506]
[123.74009705 151.85874939]
[126.84420013 166.53405762]
[137.26983643 178.43434143]
[132.33381653 192.48727417]
[135.43792725 207.16258240]
[138.54203796 221.83787537]
[141.64613342 236.51318359]
[144.75024414 251.18849182]
[147.85435486 265.86380005]
[150.95846558 280.53909302]
[154.17173767 295.19088745]
[157.49400330 309.81832886]
[160.81626892 324.44580078]
[164.35594177 339.02218628]
[168.11224365 353.54421997]
[179.05885315 364.96713257]
[174.75523376 379.22644043]
[178.51153564 393.74850464]
[189.20881653 400.95483398]
[192.03848267 413.12762451]
[186.01484680 423.61770630]
[189.55451965 438.19409180]
[193.09419250 452.77047729]
[196.63386536 467.34683228]
[211.51017761 465.32220459]
[226.51583862 464.83792114]
[241.49174500 465.89913940]
[256.27914429 468.49456787]
[270.72134399 472.59674072]
[284.66516113 478.16213989]
[297.96282959 485.13177490]
[310.47338867 493.43176270]
[322.06420898 502.97415161]
[332.61242676 513.65771484]
[342.00622559 525.36932373]
[350.14602661 537.98468018]
[356.94552612 551.37017822]
[362.33264160 565.38378906]
[366.25030518 579.87713623]
[368.65698242 594.69641113]
[369.52713013 609.68463135]
[368.85153198 624.68292236]
[366.63735962 639.53222656]
[362.90808105 654.07513428]
[357.70321655 668.15753174]
[351.07797241 681.63006592]
[343.10256958 694.35003662]
[333.86151123 706.18249512]
[323.45281982 717.00201416]
[311.98678589 726.69403076]
[299.58499146 735.15563965]
[286.37887573 742.29724121]
[272.50842285 748.04309082]
[258.12069702 752.33227539]
[243.36819458 755.11938477]
[228.40731812 756.37481689]
[213.39665222 756.08526611]
[198.49531555 754.25384521]
[183.86126709 750.89990234]
[169.64964294 746.05908203]
[156.01110840 739.78259277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 173]
[23 172]
[24 171]
[25 170]
[27 167]
[28 166]
[30 164]
[31 163]
[34 162]
[35 161]
[36 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[46 151]
[47 150]
[48 142]
[49 141]
[50 140]
[51 136]
[53 135]
[54 134]
[55 133]
[56 132]
[58 130]
[59 129]
[77 128]
[78 127]
[80 124]
[81 123]
[82 122]
[88 121]
[89 120]
[90 118]
[91 117]
[92 116]
[93 115]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
