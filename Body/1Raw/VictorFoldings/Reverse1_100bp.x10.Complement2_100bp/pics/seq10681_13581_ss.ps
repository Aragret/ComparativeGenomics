%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[10.64582825 455.30606079]
[13.26213932 470.10656738]
[13.58838654 485.13302612]
[11.61692429 500.03314209]
[7.39396477 514.45764160]
[1.01850069 528.06848145]
[-7.36001778 540.54650879]
[-17.54518700 551.59918213]
[-29.29825020 560.96752930]
[-42.34370041 568.43194580]
[-56.37573242 573.81732178]
[-71.06541443 576.99749756]
[-86.06840515 577.89794922]
[-101.03300476 576.49755859]
[-115.60842133 572.82910156]
[-129.45300293 566.97857666]
[-142.24218750 559.08319092]
[-153.67619324 549.32800293]
[-163.48698425 537.94165039]
[-171.44459534 525.19110107]
[-177.36247253 511.37521362]
[-181.10189819 496.81784058]
[-182.57522583 481.86022949]
[-181.74789429 466.85302734]
[-178.63931274 452.14804077]
[-173.32235718 438.08993530]
[-165.92164612 425.00827026]
[-156.61067200 413.20968628]
[-145.60771179 402.97079468]
[-133.17066956 394.53155518]
[-119.59109497 388.08984375]
[-105.18731689 383.79666138]
[-90.29697418 381.75262451]
[-75.26911926 382.00564575]
[-60.45602417 384.54980469]
[-46.20493698 389.32546997]
[-39.32552338 375.99603271]
[-32.44611359 362.66659546]
[-25.56669998 349.33718872]
[-18.68728638 336.00775146]
[-11.80787468 322.67831421]
[-12.84638405 307.81997681]
[0.35834131 299.10528564]
[-0.68016821 284.24691772]
[12.52455711 275.53222656]
[19.40396881 262.20278931]
[26.28338242 248.87336731]
[32.45915222 235.20370483]
[37.91450882 221.23091125]
[43.36986542 207.25810242]
[38.80171585 196.05728149]
[43.23230743 184.37165833]
[54.79645538 178.65910339]
[60.45924377 164.76907349]
[66.12203217 150.87905884]
[51.91212463 155.68307495]
[38.40667725 149.15597534]
[33.34222031 135.03680420]
[39.61991119 121.41363525]
[53.64359283 116.09045410]
[67.37987518 122.11661530]
[72.95999146 136.03910828]
[79.83940125 122.70968628]
[86.71881104 109.38025665]
[83.85260773 98.09193420]
[89.27091217 87.78256226]
[100.19384766 83.74141693]
[107.27095032 70.51589203]
[114.34805298 57.29036331]
[120.92808533 43.81062698]
[127.00191498 30.09536171]
[133.07574463 16.38009453]
[139.14958191 2.66482854]
[145.22341919 -11.05043793]
[151.29725647 -24.76570511]
[147.38761902 -37.05706787]
[152.72888184 -48.35550308]
[163.96458435 -52.83719254]
[170.24194336 -66.46051025]
[176.51931763 -80.08382416]
[175.26737976 -95.85541534]
[187.62080383 -104.17660522]
[193.89816284 -117.79992676]
[200.17552185 -131.42323303]
[206.45288086 -145.04655457]
[212.73023987 -158.66987610]
[219.00759888 -172.29318237]
[222.97970581 -186.75770569]
[224.54022217 -201.67631531]
[226.10073853 -216.59492493]
[227.66127014 -231.51351929]
[229.22178650 -246.43212891]
[222.96217346 -260.96237183]
[231.98156738 -272.81561279]
[217.63069153 -277.35845947]
[204.48820496 -284.69738770]
[193.09230042 -294.53192139]
[183.90962219 -306.45935059]
[177.31619263 -319.99121094]
[173.58200073 -334.57342529]
[172.85998535 -349.60882568]
[175.17968750 -364.48175049]
[180.44613647 -378.58316040]
[188.44366455 -391.33557129]
[198.84477234 -402.21685791]
[211.22354126 -410.78134155]
[225.07308960 -416.67840576]
[239.82626343 -419.66650391]
[254.87893677 -419.62329102]
[269.61471558 -416.55053711]
[283.43017578 -410.57409668]
[295.75958252 -401.93865967]
[306.09805298 -390.99789429]
[314.02224731 -378.19976807]
[319.20764160 -364.06835938]
[321.44195557 -349.18237305]
[320.63363647 -334.15133667]
[316.81579590 -319.59082031]
[310.14477539 -306.09701538]
[300.89379883 -294.22250366]
[289.44161987 -284.45355225]
[276.25723267 -277.19018555]
[261.88049316 -272.72979736]
[246.90017700 -271.25509644]
[253.27140808 -257.79196167]
[244.14039612 -244.87161255]
[242.57987976 -229.95300293]
[241.01934814 -215.03439331]
[239.45883179 -200.11579895]
[237.89830017 -185.19718933]
[245.97677612 -197.83595276]
[257.01522827 -207.99235535]
[270.28149414 -214.99279785]
[284.89569092 -218.37292480]
[299.88848877 -217.90858459]
[314.26550293 -213.63053894]
[327.07315063 -205.82255554]
[337.46191406 -195.00250244]
[344.74276733 -181.88803101]
[348.43280029 -167.34899902]
[348.28726196 -152.34970093]
[344.31579590 -137.88500977]
[336.78182983 -124.91429138]
[326.18505859 -114.29786682]
[313.22833252 -106.73987579]
[298.77102661 -102.74162292]
[283.77200317 -102.56828308]
[269.22616577 -106.23136139]
[256.09823608 -113.48789978]
[245.25894165 -123.85659790]
[237.42724609 -136.64973450]
[233.12255859 -151.01879883]
[232.63092041 -166.01582336]
[226.35356140 -152.39251709]
[220.07620239 -138.76919556]
[213.79884338 -125.14588165]
[207.52146912 -111.52256012]
[201.24411011 -97.89924622]
[202.94505310 -83.10208130]
[190.14262390 -73.80646515]
[183.86526489 -60.18314743]
[177.58790588 -46.55982971]
[180.13623047 -29.19685364]
[165.01251221 -18.69187164]
[158.93869019 -4.97660398]
[152.86485291 8.73866272]
[146.79101562 22.45392990]
[140.71717834 36.16919708]
[134.64335632 49.88446426]
[149.36318970 46.99890137]
[160.89514160 56.59128189]
[160.73831177 71.59046173]
[149.00828552 80.93960571]
[134.35200500 77.74686432]
[127.57358551 64.36746979]
[120.49647522 77.59299469]
[113.41937256 90.81852722]
[114.39295197 107.56452179]
[100.04824066 116.25966644]
[93.16883087 129.58909607]
[86.28942108 142.91851807]
[80.01205444 156.54183960]
[74.34927368 170.43186951]
[68.68648529 184.32189941]
[71.61460114 202.50177002]
[57.34266281 212.71347046]
[51.88730621 226.68626404]
[46.43194962 240.65905762]
[60.13425064 234.55603027]
[74.58791351 238.56747437]
[83.18491364 250.85940552]
[81.99482727 265.81210327]
[71.56173706 276.58944702]
[56.65551376 278.26412964]
[44.09108353 270.07052612]
[39.61281204 255.75277710]
[32.73339844 269.08221436]
[25.85398674 282.41165161]
[26.40043449 298.22341919]
[13.68777084 305.98468018]
[14.23421860 321.79644775]
[1.52155495 329.55773926]
[-5.35785770 342.88717651]
[-12.23727036 356.21658325]
[-19.11668205 369.54602051]
[-25.99609566 382.87545776]
[-32.87550735 396.20489502]
[-20.72690773 405.05429077]
[-10.07161903 415.65454102]
[-1.15941679 427.75714111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 207]
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[43 200]
[45 198]
[46 197]
[47 196]
[48 188]
[49 187]
[50 186]
[53 184]
[54 183]
[55 182]
[62 181]
[63 180]
[64 179]
[67 177]
[68 176]
[69 175]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 164]
[78 162]
[79 161]
[80 160]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[94 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
