%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[79.17401123 458.33139038]
[80.90798187 443.39855957]
[85.01501465 428.93728638]
[91.38874054 415.32214355]
[99.86406708 402.90582275]
[110.22145844 392.00994873]
[122.19262695 382.91668701]
[135.46749878 375.86163330]
[130.64149475 361.65914917]
[125.81550598 347.45669556]
[120.98950958 333.25424194]
[109.56880951 323.69302368]
[112.45475006 308.13726807]
[107.62875366 293.93481445]
[105.58090973 308.79437256]
[99.80593109 322.63812256]
[90.68683624 334.54788208]
[78.82847595 343.73367310]
[65.01735687 349.58630371]
[50.16953659 351.71752930]
[35.26980972 349.98602295]
[21.30641937 344.50662231]
[9.20551205 335.64276123]
[-0.23030414 323.98236084]
[-6.37518597 310.29876709]
[-8.82156563 295.49960327]
[-7.40718269 280.56643677]
[-2.22584891 266.48974609]
[6.37877655 254.20314026]
[17.83598137 244.52159119]
[31.38584709 238.08721924]
[46.12966156 235.32679749]
[61.08952332 236.42341614]
[75.27319336 241.30435181]
[87.73992157 249.64585876]
[97.66284180 260.89465332]
[104.38547516 274.30953979]
[96.64817810 261.58227539]
[104.38547516 247.78208923]
[104.38547516 232.78208923]
[104.38547516 217.78208923]
[104.38547516 202.78208923]
[104.38547516 187.78208923]
[104.38547516 172.78208923]
[103.38121796 157.81575012]
[101.37720490 142.95022583]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[80.01660919 45.87833405]
[76.95503998 42.79925537]
[75.20820618 39.26187134]
[74.75875092 35.73577118]
[75.43858337 32.63666534]
[76.95952606 30.28191185]
[74.51380157 15.48264122]
[72.06807709 0.68337059]
[69.62234497 -14.11590004]
[59.61064529 -22.24785042]
[57.87826538 -34.62454605]
[64.81376648 -44.53542328]
[62.58864594 -59.36946487]
[60.25315857 -74.18653107]
[57.80743408 -88.98580170]
[55.36170578 -103.78507233]
[52.04826355 -107.81845856]
[50.74373627 -112.27396393]
[51.27250290 -116.31567383]
[53.15263367 -119.29853058]
[51.37017059 -134.19224548]
[49.58770370 -149.08596802]
[47.80523682 -163.97969055]
[46.02276993 -178.87339783]
[44.24030685 -193.76712036]
[42.45783997 -208.66084290]
[27.57855034 -216.70463562]
[20.49595642 -231.88153076]
[23.82180023 -248.12655640]
[36.05129242 -259.07720947]
[34.04727936 -273.94274902]
[21.76299858 -283.52053833]
[19.94240952 -298.62484741]
[29.14907837 -310.27700806]
[27.14506531 -325.14254761]
[25.14105034 -340.00805664]
[23.13703728 -354.87359619]
[8.15814114 -356.62957764]
[-5.91317415 -362.05627441]
[-18.19237328 -370.81253052]
[-27.90757561 -382.34793091]
[-34.44807434 -395.93734741]
[-37.40273285 -410.72656250]
[-36.58581161 -425.78591919]
[-32.04866791 -440.16870117]
[-24.07650948 -452.97088623]
[-13.17047215 -463.38766479]
[-0.01611894 -470.76422119]
[14.55965614 -474.63690186]
[29.64060783 -474.76223755]
[44.27873611 -471.13235474]
[57.55387115 -463.97543335]
[68.63153076 -453.74136353]
[76.81536865 -441.07345581]
[81.59093475 -426.76803589]
[82.65803528 -411.72436523]
[79.94958496 -396.88809204]
[73.63584900 -383.19183350]
[64.11371613 -371.49655151]
[51.98174286 -362.53741455]
[38.00256729 -356.87759399]
[40.00658035 -342.01208496]
[42.01059341 -327.14654541]
[44.01460648 -312.28100586]
[55.97817993 -303.48281860]
[58.22229767 -288.43560791]
[48.91280746 -275.94674683]
[50.91682434 -261.08123779]
[63.20640945 -255.86508179]
[71.37932587 -245.17173767]
[73.21579742 -231.72938538]
[68.13018036 -219.03469849]
[57.35155487 -210.44329834]
[59.13402176 -195.54959106]
[60.91648865 -180.65586853]
[62.69895554 -165.76214600]
[64.48142242 -150.86843872]
[66.26388550 -135.97471619]
[68.04634857 -121.08100128]
[70.16097260 -106.23080444]
[72.60670471 -91.43153381]
[75.05242920 -76.63226318]
[79.24446869 -70.54550171]
[77.42269135 -61.59458160]
[79.64780426 -46.76054001]
[91.30355835 -33.64145279]
[84.42161560 -16.56162834]
[86.86734772 -1.76235676]
[89.31307220 13.03691387]
[91.75879669 27.83618546]
[94.64407349 42.55607605]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[122.22846985 112.78472900]
[137.03625488 110.39112854]
[149.27966309 119.05709839]
[151.94511414 133.81837463]
[143.50570679 146.21903992]
[128.79591370 149.15542603]
[116.24272919 140.94621277]
[118.24674988 155.81173706]
[125.90896606 142.91636658]
[139.27867126 136.11555481]
[154.21308899 137.51657104]
[166.08465576 146.68533325]
[171.21481323 160.78076172]
[168.01394653 175.43527222]
[157.47386169 186.10797119]
[142.86053467 189.49183655]
[128.70205688 184.53831482]
[119.38547516 172.78208923]
[119.38547516 187.78208923]
[119.38547516 202.78208923]
[119.38547516 217.78208923]
[119.38547516 232.78208923]
[119.38547516 247.78208923]
[127.12277985 261.58227539]
[119.38547516 274.30953979]
[121.83120728 289.10879517]
[126.65720367 303.31124878]
[138.42308044 313.88833618]
[135.19195557 328.42825317]
[140.01795959 342.63070679]
[144.84396362 356.83316040]
[149.66995239 371.03561401]
[164.49493408 368.54235840]
[179.52786255 368.45959473]
[194.37939453 370.78952026]
[208.66479492 375.47174072]
[222.01408386 382.38497925]
[234.08143616 391.35018921]
[244.55430603 402.13513184]
[253.16142273 414.46047974]
[259.67984009 428.00692749]
[263.94067383 442.42361450]
[265.83361816 457.33712769]
[265.30963135 472.36117554]
[262.38226318 487.10656738]
[257.12731934 501.19137573]
[249.68096924 514.25079346]
[240.23605347 525.94647217]
[229.03724670 535.97558594]
[216.37458801 544.07824707]
[202.57611084 550.04467773]
[187.99919128 553.72021484]
[173.02143860 555.00976562]
[158.03079224 553.87988281]
[143.41554260 550.35980225]
[129.55429077 544.54071045]
[116.80603790 536.57342529]
[105.50101471 526.66418457]
[95.93205261 515.06976318]
[88.34699249 502.09039307]
[82.94232941 488.06237793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 181]
[9 180]
[10 179]
[11 178]
[13 176]
[14 175]
[37 174]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 157]
[46 156]
[47 149]
[48 148]
[50 146]
[51 145]
[52 144]
[53 143]
[58 142]
[59 141]
[60 140]
[61 139]
[64 137]
[65 136]
[66 134]
[67 133]
[68 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[82 120]
[83 119]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
