%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[31.25548553 612.90551758]
[31.25548553 597.90551758]
[31.25548553 582.90551758]
[31.25548553 567.90551758]
[31.25548553 552.90551758]
[31.14381790 537.90594482]
[30.92049026 522.90759277]
[30.69716263 507.90927124]
[30.47383499 492.91091919]
[30.25050735 477.91259766]
[21.58245850 490.15454102]
[7.99633551 496.51199341]
[-6.95647907 495.32315063]
[-19.36735535 486.89877319]
[-25.99212265 473.44097900]
[-25.09908104 458.46755981]
[-16.92166901 445.89260864]
[-3.59744263 439.00311279]
[11.39067650 439.60000610]
[24.12483025 447.52725220]
[31.27613258 460.71185303]
[33.28014755 445.84631348]
[35.28416061 430.98080444]
[26.07748985 419.32864380]
[27.89808083 404.22433472]
[40.18236160 394.64651489]
[42.18637466 379.78100586]
[40.59599686 377.47256470]
[39.82418823 374.39508057]
[40.16846085 370.85717773]
[41.80919647 367.26934814]
[44.77774048 364.10046387]
[47.66301346 349.38058472]
[50.54828644 334.66067505]
[53.43355942 319.94079590]
[56.31882858 305.22091675]
[47.82203293 293.04141235]
[50.53841782 278.07223511]
[63.37100220 269.24261475]
[66.25627136 254.52270508]
[69.14154816 239.80282593]
[72.02681732 225.08293152]
[57.47469711 215.01557922]
[48.76782608 199.54997253]
[47.70169067 181.78085327]
[54.53748703 165.28723145]
[67.94013214 153.41154480]
[85.23876190 148.58232117]
[87.46387482 133.74827576]
[89.68899536 118.91423035]
[91.91411591 104.08018494]
[90.08451080 100.68534088]
[89.76019287 96.50052643]
[91.26040649 92.21609497]
[94.58409882 88.63937378]
[89.64576721 73.60862732]
[99.68669128 62.60730362]
[102.57196045 47.88740921]
[105.45723724 33.16751862]
[108.34250641 18.44762802]
[111.22778320 3.72773647]
[113.12107086 -11.15229893]
[114.01389313 -26.12570381]
[114.90670776 -41.09910965]
[115.68802643 -56.07874680]
[116.35781097 -71.06378937]
[117.02759552 -86.04882812]
[106.01738739 -75.86180878]
[91.04161072 -75.00974274]
[78.94698334 -83.88217163]
[75.26301575 -98.42274475]
[81.67395782 -111.98371124]
[95.24882507 -118.36517334]
[109.78135681 -114.64962006]
[118.62801361 -102.53396606]
[120.85312653 -117.36801147]
[123.07824707 -132.20205688]
[125.30335999 -147.03610229]
[118.27846527 -157.85337830]
[120.43715668 -170.16288757]
[130.08499146 -177.45986938]
[132.53071594 -192.25914001]
[120.94686127 -182.72947693]
[105.98130798 -181.71354675]
[93.21582794 -189.59025574]
[87.41162872 -203.42178345]
[90.73354340 -218.04933167]
[101.94257355 -228.01716614]
[116.85802460 -229.60752869]
[129.91680908 -222.22727966]
[136.24845886 -208.62788391]
[140.43547058 -223.03166199]
[144.62248230 -237.43544006]
[139.81892395 -255.21203613]
[152.95103455 -266.85311890]
[156.92312622 -281.31762695]
[160.89523315 -295.78216553]
[164.86732483 -310.24667358]
[168.83941650 -324.71121216]
[155.38148499 -331.44692993]
[143.49639893 -340.67898560]
[133.64099121 -352.05252075]
[126.19408417 -365.13037109]
[121.44191742 -379.40982056]
[119.56714630 -394.34204102]
[120.64183807 -409.35308838]
[124.62467957 -423.86596680]
[131.36259460 -437.32281494]
[140.59657288 -449.20639038]
[151.97169495 -459.05996704]
[165.05073547 -466.50476074]
[179.33097839 -471.25460815]
[194.26350403 -473.12695312]
[209.27436829 -472.04983521]
[223.78659058 -468.06463623]
[237.24235535 -461.32455444]
[249.12445068 -452.08865356]
[258.97616577 -440.71194458]
[266.41885376 -427.63168335]
[271.16638184 -413.35067749]
[273.03631592 -398.41784668]
[271.95675659 -383.40716553]
[267.96923828 -368.89556885]
[261.22695923 -355.44091797]
[251.98913574 -343.56030273]
[240.61082458 -333.71041870]
[227.52937317 -326.26986694]
[213.24760437 -321.52462769]
[198.31445312 -319.65713501]
[183.30393982 -320.73910522]
[179.33184814 -306.27456665]
[175.35975647 -291.81005859]
[171.38766479 -277.34552002]
[167.41555786 -262.88101196]
[173.12420654 -252.21620178]
[169.93336487 -240.13307190]
[159.02626038 -233.24842834]
[154.83924866 -218.84465027]
[150.65223694 -204.44087219]
[147.32998657 -189.81341553]
[144.88426208 -175.01414490]
[151.93943787 -158.94581604]
[140.13740540 -144.81097412]
[137.91229248 -129.97692871]
[135.68717957 -115.14289093]
[133.46205139 -100.30884552]
[132.01263428 -85.37904358]
[131.34284973 -70.39400482]
[130.67306519 -55.40896225]
[133.51475525 -48.58645630]
[129.88011169 -40.20629501]
[128.98728943 -25.23288918]
[128.09448242 -10.25948238]
[138.09405518 -21.44019890]
[152.52224731 -25.54234123]
[166.90829468 -21.29481888]
[176.79454041 -10.01377010]
[179.11763000 4.80524683]
[173.15771484 18.57040024]
[160.76155090 27.01640511]
[145.77021790 27.52617836]
[132.82894897 19.94175911]
[125.94766998 6.61300898]
[123.06240082 21.33290100]
[120.17712402 36.05279160]
[117.29185486 50.77268219]
[114.40658569 65.49257660]
[119.55128479 79.47045898]
[109.30398560 91.52465057]
[106.74815369 106.30529785]
[104.52304077 121.13934326]
[102.29792023 135.97338867]
[100.07280731 150.80743408]
[110.98406982 156.75926208]
[119.52643585 165.75376892]
[124.88694000 176.91317749]
[126.56211853 189.15478516]
[124.40527344 201.29594421]
[118.63916779 212.16836548]
[109.83316040 220.73052979]
[98.84694672 226.16744995]
[86.74671173 227.96820068]
[83.86143494 242.68809509]
[80.97616577 257.40798950]
[78.09089661 272.12786865]
[86.64052582 285.14868164]
[83.50476074 300.03564453]
[71.03871918 308.10617065]
[68.15345001 322.82608032]
[65.26817322 337.54595947]
[62.38290405 352.26583862]
[59.49763107 366.98574829]
[57.05190277 381.78500366]
[55.04788971 396.65054321]
[64.35738373 409.13937378]
[62.11325836 424.18658447]
[50.14968872 432.98480225]
[48.14567566 447.85034180]
[46.14165878 462.71585083]
[45.24884415 477.68927002]
[45.47217178 492.68759155]
[45.69549942 507.68594360]
[45.91882706 522.68426514]
[46.14215469 537.68261719]
[49.39898682 546.21673584]
[46.25548553 552.90551758]
[46.25548553 567.90551758]
[46.25548553 582.90551758]
[46.25548553 597.90551758]
[46.25548553 612.90551758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 206]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[21 199]
[22 198]
[23 197]
[26 194]
[27 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[39 185]
[40 184]
[41 183]
[42 182]
[48 173]
[49 172]
[50 171]
[51 170]
[55 169]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 153]
[63 152]
[64 151]
[65 149]
[66 148]
[67 147]
[75 146]
[76 145]
[77 144]
[78 143]
[81 141]
[82 140]
[91 139]
[92 138]
[93 137]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
