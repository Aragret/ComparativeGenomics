%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[164.38189697 665.87371826]
[168.84280396 651.45141602]
[177.03034973 638.76806641]
[188.33695984 628.76489258]
[201.92361450 622.18420410]
[199.25782776 607.42303467]
[196.59202576 592.66180420]
[193.92622375 577.90057373]
[191.26043701 563.13934326]
[187.93817139 548.51190186]
[183.96607971 534.04736328]
[173.13471985 523.82330322]
[176.94143677 508.46691895]
[172.96934509 494.00238037]
[159.93757629 486.88140869]
[155.70324707 472.26889038]
[163.26075745 458.64825439]
[159.28866577 444.18374634]
[155.31657410 429.71920776]
[151.34448242 415.25469971]
[140.51312256 405.03063965]
[144.31983948 389.67422485]
[140.34774780 375.20971680]
[136.37564087 360.74517822]
[132.40354919 346.28067017]
[128.43145752 331.81613159]
[124.45935822 317.35162354]
[120.48725891 302.88708496]
[116.51516724 288.42257690]
[112.54306793 273.95803833]
[108.57096863 259.49353027]
[101.22811890 272.57336426]
[87.24052429 277.99069214]
[73.00313568 273.26873779]
[65.02509308 260.56634521]
[66.95384216 245.69087219]
[77.90760040 235.44317627]
[92.87844086 234.50836182]
[105.02294922 243.31536865]
[102.57722473 228.51609802]
[100.13149261 213.71682739]
[91.46772766 225.96179199]
[76.99244690 229.89450073]
[63.32356262 223.71699524]
[56.71030045 210.25354004]
[60.17615509 195.65943909]
[72.13658905 186.60691833]
[87.12344360 187.23468018]
[98.28582001 197.25733948]
[97.39300537 182.28393555]
[96.50019073 167.31053162]
[95.60737610 152.33711243]
[81.04503632 148.98141479]
[68.01726532 141.66021729]
[57.57878494 130.96626282]
[50.57467651 117.76531982]
[47.57198715 103.12611389]
[48.81380844 88.23381805]
[54.19960785 74.29410553]
[63.29335022 62.43550491]
[75.35882568 53.61808777]
[89.41921997 48.55569839]
[88.52640533 33.58229065]
[87.63359070 18.60888481]
[84.31769562 12.88906002]
[84.37899017 7.20634365]
[86.94386292 3.17763638]
[86.49725342 -11.81571388]
[86.05065155 -26.80906296]
[85.60404205 -41.80241394]
[85.15744019 -56.79576492]
[84.71083069 -71.78911591]
[72.68163300 -62.82817841]
[58.13748169 -66.49803162]
[51.79979324 -80.09338379]
[58.34047318 -93.59225464]
[72.93797302 -97.04377747]
[84.83081055 -87.90509033]
[85.50059509 -102.89012909]
[86.17037964 -117.87516785]
[86.61698151 -132.86851501]
[86.84030914 -147.86685181]
[87.06363678 -162.86518860]
[87.28696442 -177.86352539]
[87.51029968 -192.86186218]
[87.73362732 -207.86019897]
[79.32650757 -217.64198303]
[79.82128906 -230.12953186]
[88.40773773 -238.65005493]
[88.85433960 -253.64341736]
[89.30094910 -268.63674927]
[89.74755096 -283.63009644]
[90.08252716 -298.62637329]
[90.30585480 -313.62469482]
[80.96641541 -329.49468994]
[90.54711151 -344.19766235]
[90.54711151 -359.19766235]
[76.29444122 -364.35879517]
[64.66851044 -374.08572388]
[57.07320786 -387.20391846]
[54.42570496 -402.12930298]
[57.04570007 -417.05950928]
[64.61681366 -430.19168091]
[76.22480011 -439.94006348]
[90.46793365 -445.12744141]
[105.62628937 -445.12744141]
[119.86942291 -439.94006348]
[131.47740173 -430.19168091]
[139.04852295 -417.05950928]
[141.66851807 -402.12930298]
[139.02101135 -387.20391846]
[131.42570496 -374.08572388]
[119.79978180 -364.35879517]
[105.54711151 -359.19766235]
[105.54711151 -344.19766235]
[113.87606812 -335.42526245]
[113.99882507 -322.92849731]
[105.30419922 -313.40136719]
[105.08087158 -298.40304565]
[108.12443542 -291.66818237]
[104.74090576 -283.18350220]
[104.29429626 -268.19015503]
[103.84769440 -253.19680786]
[103.40108490 -238.20346069]
[112.53977203 -223.22175598]
[102.73196411 -207.63687134]
[102.50863647 -192.63853455]
[102.28530884 -177.64019775]
[102.06198120 -162.64186096]
[101.83865356 -147.64352417]
[101.61532593 -132.64518738]
[104.23989105 -128.65512085]
[104.38578033 -122.97393799]
[101.15541840 -117.20538330]
[100.48563385 -102.22034454]
[99.81584930 -87.23530579]
[99.70417786 -72.23571777]
[100.15078735 -57.24237061]
[100.59738922 -42.24901962]
[101.04399872 -27.25566864]
[101.49060059 -12.26231956]
[101.93721008 2.73103046]
[102.60699463 17.71607018]
[103.49980927 32.68947601]
[104.39262390 47.66287994]
[118.95496368 51.01858902]
[131.98272705 58.33977890]
[142.42121887 69.03372955]
[149.42532349 82.23468018]
[152.42800903 96.87388611]
[151.18618774 111.76618195]
[145.80039978 125.70589447]
[136.70664978 137.56449890]
[124.64117432 146.38191223]
[110.58078003 151.44430542]
[111.47359467 166.41770935]
[112.36640930 181.39111328]
[113.25922394 196.36451721]
[114.93076324 211.27108765]
[117.37649536 226.07035828]
[119.82221985 240.86962891]
[123.03549194 255.52142334]
[127.00759125 269.98596191]
[130.97969055 284.45046997]
[134.95178223 298.91500854]
[138.92387390 313.37951660]
[142.89598083 327.84405518]
[146.86807251 342.30856323]
[150.84016418 356.77310181]
[154.81227112 371.23760986]
[158.78436279 385.70214844]
[169.89982605 396.96078491]
[165.80900574 411.28259277]
[169.78109741 425.74713135]
[173.75318909 440.21163940]
[177.72528076 454.67617798]
[191.17904663 462.52691650]
[195.00126648 477.25256348]
[187.43386841 490.03030396]
[191.40596008 504.49481201]
[202.52142334 515.75347900]
[198.43060303 530.07525635]
[202.40269470 544.53979492]
[210.74394226 532.07287598]
[225.43008423 529.02050781]
[238.04823303 537.13110352]
[241.37014771 551.75866699]
[233.49287415 564.52380371]
[218.92887878 568.11407471]
[206.02165222 560.47357178]
[208.68745422 575.23480225]
[211.35324097 589.99597168]
[214.01904297 604.75720215]
[216.68482971 619.51843262]
[231.71504211 620.93109131]
[245.80633545 626.34747314]
[257.91308594 635.36578369]
[267.13684082 647.31671143]
[272.79318237 661.31341553]
[274.46234131 676.31732178]
[272.02047729 691.21496582]
[265.64877319 704.90087891]
[255.82006836 716.35943604]
[243.26371765 724.74041748]
[228.91146851 729.42181396]
[213.82835388 730.05627441]
[199.13366699 726.59674072]
[185.91783142 719.29986572]
[175.16154480 708.70715332]
[167.66300964 695.60467529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 183]
[11 182]
[13 180]
[14 179]
[17 176]
[18 175]
[19 174]
[20 173]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[31 162]
[39 161]
[40 160]
[41 159]
[49 158]
[50 157]
[51 156]
[52 155]
[62 145]
[63 144]
[64 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[78 136]
[79 135]
[80 134]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[89 124]
[90 123]
[91 122]
[92 121]
[93 119]
[94 118]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
