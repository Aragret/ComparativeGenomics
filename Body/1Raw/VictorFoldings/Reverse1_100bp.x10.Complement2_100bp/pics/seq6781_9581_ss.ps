%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[-37.93692398 648.54858398]
[-31.05910492 661.97833252]
[-27.89246750 676.73077393]
[-28.65291405 691.80010986]
[-33.28859711 706.15881348]
[-41.48345184 718.82794189]
[-52.67873383 728.94366455]
[-66.11112976 735.81628418]
[-80.86480713 738.97723389]
[-95.93382263 738.21099854]
[-110.29074860 733.56976318]
[-122.95671082 725.36999512]
[-133.06813049 714.17083740]
[-139.93556213 700.73577881]
[-143.09082031 685.98089600]
[-142.31872559 670.91217041]
[-137.67196655 656.55700684]
[-129.46733093 643.89422607]
[-118.26423645 633.78717041]
[-104.82653046 626.92486572]
[-90.07042694 623.77532959]
[-75.00200653 624.55322266]
[-70.38799286 610.28051758]
[-65.77398682 596.00775146]
[-61.15997696 581.73504639]
[-56.54596710 567.46228027]
[-65.45341492 555.55450439]
[-65.64330292 540.50701904]
[-56.83325195 528.08782959]
[-42.23091507 523.18084717]
[-37.61690521 508.90814209]
[-33.00289536 494.63540649]
[-28.38888741 480.36267090]
[-41.56365585 473.23065186]
[-53.20661163 463.79660034]
[-62.92030716 452.38067627]
[-70.37281036 439.37072754]
[-75.30904388 425.20907593]
[-77.55950165 410.37756348]
[-77.04609680 395.38110352]
[-73.78485107 380.73043823]
[-67.88539886 366.92489624]
[-59.54730606 354.43515015]
[-49.05332947 343.68743896]
[-36.75981140 335.04882812]
[-23.08458710 328.81466675]
[-8.49278450 325.19863892]
[6.51899529 324.32531738]
[21.43958282 326.22592163]
[26.05359268 311.95318604]
[30.66760254 297.68045044]
[35.28161240 283.40771484]
[39.89562225 269.13497925]
[44.50962830 254.86224365]
[49.01725769 240.55555725]
[53.41825485 226.21571350]
[57.81925583 211.87585449]
[50.63565445 198.87849426]
[54.89461899 184.27316284]
[68.57615662 176.82646179]
[72.97715759 162.48661804]
[77.37815094 148.14677429]
[81.77915192 133.80691528]
[86.18014526 119.46707153]
[90.58114624 105.12722778]
[92.80626678 90.29318237]
[92.80626678 75.29318237]
[92.80626678 60.29318237]
[92.80626678 45.29318237]
[90.50269318 41.61248779]
[89.58271790 37.77606201]
[89.92539978 34.23798752]
[91.27475739 31.36642647]
[93.27946472 29.40701866]
[94.17227936 14.43361187]
[94.84206390 -0.55142647]
[95.28867340 -15.54477596]
[95.73527527 -30.53812599]
[96.18188477 -45.53147507]
[96.62848663 -60.52482605]
[97.07509613 -75.51817322]
[97.52169800 -90.51152802]
[97.96830750 -105.50487518]
[90.64531708 -119.52929688]
[98.75812531 -132.02055359]
[98.19991302 -147.01016235]
[96.63939667 -161.92877197]
[95.07887268 -176.84738159]
[93.51834869 -191.76599121]
[78.57187653 -193.68943787]
[64.47207642 -199.00851440]
[51.97934723 -207.43634033]
[41.76739120 -218.51843262]
[34.38693237 -231.65713501]
[30.23598671 -246.14390564]
[29.53841400 -261.19747925]
[32.33182907 -276.00604248]
[38.46559143 -289.77096558]
[47.60890961 -301.74996948]
[59.26869965 -311.29702759]
[72.81616211 -317.89724731]
[87.52069855 -321.19470215]
[102.58931732 -321.01159668]
[117.20938110 -317.35775757]
[130.59245300 -310.43026733]
[142.01678467 -300.60269165]
[150.86630249 -288.40502930]
[156.66374207 -274.49508667]
[159.09646606 -259.62301636]
[158.03327942 -244.59085083]
[153.53150940 -230.20922852]
[145.83393860 -217.25376892]
[135.35569763 -206.42311096]
[122.66184235 -198.30136108]
[108.43695068 -193.32650757]
[109.99747467 -178.40789795]
[111.55799866 -163.48930359]
[113.11852264 -148.57069397]
[121.16128540 -161.23220825]
[134.72753906 -167.63194275]
[149.61363220 -165.78688049]
[161.20695496 -156.26873779]
[165.91516113 -142.02680969]
[162.27938843 -127.47410583]
[151.42622375 -117.11994171]
[136.71861267 -114.17267609]
[122.71389008 -119.54554749]
[113.75148010 -131.57395935]
[121.10640717 -118.62195587]
[112.96165466 -105.05827332]
[112.51505280 -90.06491852]
[112.06844330 -75.07157135]
[111.62184143 -60.07822037]
[111.17523193 -45.08486938]
[110.72863007 -30.09152031]
[110.28202057 -15.09817028]
[109.83541107 -0.10482054]
[112.40028381 3.92388654]
[112.46157837 9.60660362]
[109.14568329 15.32642841]
[108.25286865 30.29983330]
[107.80626678 45.29318237]
[107.80626678 60.29318237]
[107.80626678 75.29318237]
[107.80626678 90.29318237]
[114.63782501 76.93916321]
[124.91302490 66.01120758]
[137.82151794 58.37113953]
[152.34530640 54.62148285]
[167.33894348 55.05794907]
[181.62001038 59.64612579]
[194.06221008 68.02416229]
[203.68432617 79.53133392]
[209.72749329 93.26013947]
[211.71513367 108.12786102]
[209.49050903 122.96198273]
[203.22903442 136.59260559]
[193.42453003 147.94477844]
[180.85021973 156.12319946]
[166.49777222 160.48291016]
[151.49905396 160.68006897]
[137.03697205 156.69914246]
[124.25202179 148.85406494]
[114.15251160 137.76353455]
[107.53490448 124.30220795]
[104.92098999 109.52822876]
[100.51999664 123.86807251]
[96.11899567 138.20791626]
[91.71800232 152.54776001]
[87.31700134 166.88761902]
[82.91600037 181.22746277]
[90.06462860 195.06707764]
[85.39710999 209.54702759]
[72.15910339 216.27685547]
[67.75810242 230.61669922]
[63.35710526 244.95655823]
[63.83093643 254.07868958]
[58.78236389 259.47625732]
[54.16835403 273.74899292]
[49.55434418 288.02172852]
[44.94033432 302.29446411]
[40.32632446 316.56716919]
[35.71231842 330.83990479]
[48.92193985 338.03311157]
[60.58172989 347.52865601]
[70.29550934 359.00207520]
[77.73357391 372.06161499]
[82.64389038 386.26177979]
[84.86059570 401.11853027]
[84.30966949 416.12564087]
[81.01131439 430.77209473]
[75.07931519 444.55935669]
[66.71702576 457.01849365]
[56.21046448 467.72598267]
[43.91849518 476.31817627]
[30.26059151 482.50366211]
[15.70249653 486.07315063]
[0.74036652 486.90646362]
[-14.11615372 484.97668457]
[-18.73016167 499.24942017]
[-23.34417152 513.52215576]
[-27.95818138 527.79486084]
[-18.99152184 540.32104492]
[-19.11851692 555.54724121]
[-28.08089447 567.63610840]
[-42.27323151 572.07629395]
[-46.88724136 586.34906006]
[-51.50125122 600.62176514]
[-56.11526108 614.89453125]
[-60.72927094 629.16723633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 210]
[23 209]
[24 208]
[25 207]
[26 206]
[30 202]
[31 201]
[32 200]
[33 199]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[54 178]
[55 176]
[56 175]
[57 174]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[65 166]
[66 145]
[67 144]
[68 143]
[69 142]
[74 141]
[75 140]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[85 128]
[86 118]
[87 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
