%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[92.31011963 595.98687744]
[77.40105438 593.79223633]
[63.40021515 588.21789551]
[51.06264496 579.56451416]
[41.05369568 568.29870605]
[33.91313171 555.02813721]
[30.02604294 540.46832275]
[29.60205078 525.40454102]
[32.66402054 510.64920044]
[39.04682541 496.99795532]
[48.40625000 485.18704224]
[60.23754883 475.85336304]
[73.90267944 469.50033569]
[88.66468811 466.47055054]
[89.11129761 451.47720337]
[89.55789948 436.48385620]
[80.41921997 421.50213623]
[90.22702789 405.91726685]
[90.45035553 390.91894531]
[90.67368317 375.92059326]
[90.89701080 360.92224121]
[91.12033844 345.92391968]
[91.34366608 330.92556763]
[91.56699371 315.92724609]
[84.02004242 303.08618164]
[91.96194458 289.40274048]
[92.18527222 274.40438843]
[84.63832092 261.56335449]
[92.58023071 247.87989807]
[92.80355835 232.88156128]
[93.02688599 217.88322449]
[83.66616058 203.03924561]
[93.24084473 187.31007385]
[93.24084473 172.31007385]
[93.24084473 157.31007385]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[79.32229614 60.95891190]
[79.14854431 43.80418396]
[91.19369507 32.06735611]
[90.74708557 17.07400513]
[90.30048370 2.08065462]
[89.85387421 -12.91269588]
[89.18408966 -27.89773369]
[88.29127502 -42.87113953]
[87.39846039 -57.84454727]
[86.50564575 -72.81795502]
[85.61283112 -87.79135895]
[70.27282715 -91.25884247]
[56.54189682 -98.89717865]
[45.52654266 -110.08147430]
[38.11180496 -123.90146637]
[34.89012909 -139.23561096]
[36.11407089 -154.84210205]
[41.67649078 -169.45939636]
[51.11989594 -181.90824890]
[63.67403412 -191.18681335]
[78.31874847 -196.55126953]
[77.20310211 -211.50971985]
[76.08745575 -226.46817017]
[74.97180176 -241.42663574]
[73.85615540 -256.38507080]
[72.74050903 -271.34353638]
[71.62485504 -286.30200195]
[70.39788055 -301.25173950]
[69.05964661 -316.19189453]
[60.12201309 -329.24676514]
[66.69298553 -342.61358643]
[63.68871307 -346.88223267]
[62.71918106 -351.42242432]
[63.54709244 -355.41360474]
[65.64387512 -358.24835205]
[64.97409058 -373.23339844]
[64.30430603 -388.21844482]
[49.32733154 -389.32598877]
[34.58647919 -392.19717407]
[20.28869057 -396.79168701]
[6.63468218 -403.04504395]
[-6.18386650 -410.86944580]
[-17.98700142 -420.15502930]
[-28.60902786 -430.77148438]
[-37.90082550 -442.56973267]
[-45.73195267 -455.38418579]
[-51.99247360 -469.03491211]
[-56.59450150 -483.33026123]
[-59.47343063 -498.06961060]
[-60.58884430 -513.04602051]
[-59.92508316 -528.04919434]
[-57.49146652 -542.86859131]
[-53.32215881 -557.29608154]
[-47.47568893 -571.12921143]
[-40.03413391 -584.17370605]
[-31.10195923 -596.24652100]
[-20.80456161 -607.17816162]
[-9.28649998 -616.81506348]
[3.29053044 -625.02203369]
[16.74996948 -631.68389893]
[30.90286446 -636.70703125]
[45.55053329 -640.02093506]
[60.48734665 -641.57916260]
[75.50360870 -641.35974121]
[90.38852692 -639.36584473]
[104.93312836 -635.62542725]
[118.93322754 -630.19091797]
[132.19230652 -623.13873291]
[144.52420044 -614.56781006]
[155.75579834 -604.59851074]
[165.72944641 -593.37072754]
[174.30509949 -581.04211426]
[181.36238098 -567.78576660]
[186.80223083 -553.78771973]
[190.54824829 -539.24456787]
[192.54788208 -524.36041260]
[192.77305603 -509.34423828]
[191.22058105 -494.40682983]
[187.91227722 -479.75790405]
[182.89457703 -465.60308838]
[176.23793030 -452.14108276]
[168.03576660 -439.56091309]
[158.40325928 -428.03912354]
[147.47560120 -417.73754883]
[135.40623474 -408.80072021]
[122.36456299 -401.35415649]
[108.53369141 -395.50238037]
[94.10778046 -391.32754517]
[79.28934479 -388.88821411]
[79.95912933 -373.90319824]
[80.62891388 -358.91815186]
[81.63317108 -343.95181274]
[90.47509003 -331.96557617]
[83.99983215 -317.53015137]
[85.33806610 -302.58996582]
[89.06578064 -296.20828247]
[86.58331299 -287.41763306]
[87.69895935 -272.45919800]
[88.81460571 -257.50073242]
[89.93025970 -242.54228210]
[91.04590607 -227.58383179]
[92.16155243 -212.62536621]
[93.27720642 -197.66691589]
[107.35092926 -194.95079041]
[120.25102997 -188.67524719]
[131.09352112 -179.26335144]
[139.13359070 -167.35330200]
[143.81680298 -153.75520325]
[144.81726074 -139.39591980]
[142.06036377 -125.25593567]
[135.72827148 -112.30241394]
[126.24789429 -101.42299652]
[114.26212311 -93.36502075]
[100.58623505 -88.68417358]
[101.47904968 -73.71076965]
[102.37186432 -58.73736191]
[103.26467896 -43.76395416]
[104.15750122 -28.79055023]
[107.07156372 -25.00673485]
[107.63959503 -19.35214615]
[104.84722900 -13.35930157]
[105.29383087 1.63404858]
[105.74044037 16.62739944]
[106.18704224 31.62074852]
[116.70953369 39.05759430]
[121.09281921 51.38110352]
[117.52552032 64.16722107]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[111.38434601 150.62126160]
[108.24084473 157.31007385]
[108.24084473 172.31007385]
[108.24084473 187.31007385]
[116.79267120 196.96559143]
[116.48386383 209.45912170]
[108.02522278 218.10655212]
[107.80189514 233.10488892]
[107.57856750 248.10322571]
[115.10954285 262.01705933]
[107.18361664 274.62771606]
[106.96028137 289.62606812]
[114.49126434 303.53991699]
[106.56533051 316.15057373]
[106.34200287 331.14889526]
[106.11867523 346.14724731]
[105.89534760 361.14556885]
[105.67201996 376.14392090]
[105.44869232 391.14227295]
[105.22536469 406.14059448]
[113.63248444 415.92236328]
[113.13770294 428.40991211]
[104.55125427 436.93045044]
[104.10464478 451.92379761]
[103.65804291 466.91714478]
[118.21354675 470.82022095]
[131.47630310 477.97537231]
[142.73107910 487.99667358]
[151.37091064 500.34375000]
[156.92985535 514.35070801]
[159.10815430 529.26214600]
[157.78829956 544.27398682]
[153.04148865 558.57659912]
[145.12370300 571.39868164]
[134.46194458 582.04870605]
[121.63118744 589.95239258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[16 197]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[26 186]
[27 185]
[29 183]
[30 182]
[31 181]
[33 178]
[34 177]
[35 176]
[36 174]
[37 173]
[38 172]
[40 170]
[41 169]
[44 165]
[45 164]
[46 163]
[47 162]
[48 159]
[49 158]
[50 157]
[51 156]
[52 155]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[67 139]
[68 138]
[69 136]
[70 135]
[72 133]
[76 132]
[77 131]
[78 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
