%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[109.44273376 737.81835938]
[94.54933167 739.74267578]
[79.53322601 739.92486572]
[64.59750366 738.36254883]
[49.94416046 735.07684326]
[35.77135468 730.11218262]
[22.27075958 723.53564453]
[9.62495899 715.43627930]
[-1.99502897 705.92352295]
[-12.43205738 695.12603760]
[-21.54497719 683.18994141]
[-29.21054840 670.27655029]
[-35.32509995 656.56054688]
[-39.80593872 642.22741699]
[-42.59247208 627.47100830]
[-43.64701080 612.49084473]
[-42.95529175 597.48956299]
[-40.52667618 582.67004395]
[-36.39400101 568.23266602]
[-30.61316109 554.37274170]
[-23.26233292 541.27764893]
[-14.44092941 529.12445068]
[-4.26825047 518.07757568]
[7.11813116 508.28643799]
[19.56422806 499.88339233]
[32.90171814 492.98208618]
[46.95022964 487.67590332]
[61.51977539 484.03652954]
[76.41331482 482.11325073]
[91.42942810 481.93203735]
[92.98995209 467.01342773]
[94.55047607 452.09481812]
[96.11099243 437.17620850]
[97.67151642 422.25759888]
[99.23204041 407.33898926]
[100.79256439 392.42041016]
[94.42133331 378.95724487]
[103.55234528 366.03689575]
[105.11286926 351.11828613]
[106.67339325 336.19967651]
[108.23390961 321.28109741]
[109.79443359 306.36248779]
[111.35495758 291.44387817]
[112.91548157 276.52526855]
[114.47600555 261.60665894]
[116.03652954 246.68806458]
[117.59705353 231.76945496]
[116.70423126 216.79605103]
[113.38197327 202.16859436]
[110.05971527 187.54113770]
[106.73745728 172.91366577]
[103.41519928 158.28620911]
[100.09293365 143.65875244]
[97.79557800 142.05242920]
[95.99607849 139.43930054]
[95.08110046 136.00445557]
[95.36324310 132.06936646]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[76.89772034 82.16390228]
[70.02742004 68.57521820]
[72.44737244 53.72235107]
[83.02268982 43.26765060]
[80.57695770 28.46837807]
[78.13123322 13.66910744]
[65.56723022 4.46130610]
[63.29773331 -10.58209896]
[72.15339661 -22.50321007]
[69.70766449 -37.30248260]
[67.26194000 -52.10175323]
[64.81621552 -66.90102386]
[62.37048340 -81.70029449]
[59.92475891 -96.49956512]
[57.47903061 -111.29883575]
[54.81323242 -126.06005096]
[51.92796326 -140.77993774]
[49.04269028 -155.49983215]
[46.15741730 -170.21972656]
[43.27214432 -184.93962097]
[28.23956490 -184.57968140]
[13.36240864 -186.76559448]
[-0.93127722 -191.43449402]
[-14.23023605 -198.45202637]
[-26.15182877 -207.61627197]
[-36.35305023 -218.66358948]
[-44.54038620 -231.27610779]
[-50.47827530 -245.09092712]
[-53.99587250 -259.71060181]
[-54.99196625 -274.71444702]
[-53.43790054 -289.67080688]
[-49.37838364 -304.14935303]
[-42.93022156 -317.73352051]
[-34.27893829 -330.03244019]
[-23.67345047 -340.69226074]
[-11.41889572 -349.40625000]
[2.13213587 -355.92373657]
[16.58975410 -360.05715942]
[31.53798485 -361.68762207]
[46.54673767 -360.76821899]
[61.18418121 -357.32534790]
[75.02916718 -351.45812988]
[87.68334961 -343.33532715]
[98.78263092 -333.19067383]
[108.00768280 -321.31607056]
[115.09306335 -308.05313110]
[119.83492279 -293.78347778]
[122.09682465 -278.91769409]
[121.81369019 -263.88345337]
[118.99365997 -249.11338806]
[113.71788788 -235.03239441]
[106.13815308 -222.04563904]
[96.47254181 -210.52679443]
[84.99916077 -200.80725098]
[72.04811859 -193.16667175]
[57.99203491 -187.82489014]
[60.87730789 -173.10499573]
[63.76258087 -158.38510132]
[66.64785004 -143.66522217]
[69.53312683 -128.94532776]
[72.92658997 -125.58475494]
[74.24498749 -120.05674744]
[72.27829742 -113.74456024]
[74.72402954 -98.94528961]
[77.16975403 -84.14601898]
[79.61548615 -69.34674835]
[82.06121063 -54.54748154]
[84.50693512 -39.74820709]
[86.95266724 -24.94893837]
[99.17288971 -16.51082802]
[101.86402893 -1.53710234]
[92.93050385 11.22338009]
[95.37622833 26.02265167]
[97.82196045 40.82192230]
[111.19860840 47.31832123]
[118.26855469 60.60289001]
[116.13547516 75.67947388]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.72039795 140.33648682]
[118.04265594 154.96395874]
[121.36491394 169.59141541]
[124.68717957 184.21887207]
[128.00942993 198.84632874]
[131.33169556 213.47378540]
[134.91433716 198.90791321]
[142.09820557 185.74008179]
[152.40684509 174.84365845]
[165.15650940 166.94137573]
[179.50155640 162.55735779]
[194.49053955 161.98237610]
[209.12927246 165.25457764]
[222.44683838 172.15690613]
[233.55993652 182.23159790]
[241.73146057 194.81039429]
[246.41943359 209.05900574]
[247.31291199 224.03236389]
[244.35263062 238.73736572]
[237.73493958 252.19865417]
[227.89877319 263.52337646]
[215.49652100 271.96044922]
[201.35078430 276.95025635]
[186.39979553 278.16183472]
[171.63519287 275.51480103]
[158.03627014 269.18475342]
[146.50500488 259.59155273]
[137.80619812 247.37144470]
[132.51565552 233.32998657]
[130.95513916 248.24858093]
[129.39460754 263.16717529]
[127.83408356 278.08578491]
[126.27356720 293.00439453]
[124.71304321 307.92300415]
[123.15251923 322.84161377]
[121.59199524 337.76022339]
[120.03147125 352.67883301]
[118.47094727 367.59741211]
[124.73056793 382.12765503]
[115.71116638 393.98092651]
[114.15065002 408.89953613]
[112.59012604 423.81811523]
[111.02960205 438.73672485]
[109.46907806 453.65533447]
[107.90855408 468.57394409]
[106.34803009 483.49255371]
[121.00159454 486.77728271]
[135.17472839 491.74102783]
[148.67576599 498.31665039]
[161.32211304 506.41519165]
[172.94273376 515.92718506]
[183.38047791 526.72393799]
[192.49420166 538.65942383]
[200.16062927 551.57232666]
[206.27609253 565.28790283]
[210.75788879 579.62072754]
[213.54541016 594.37695312]
[214.60095215 609.35705566]
[213.91023254 624.35833740]
[211.48260498 639.17803955]
[207.35089111 653.61566162]
[201.57098389 667.47601318]
[194.22102356 680.57159424]
[185.40043640 692.72540283]
[175.22848511 703.77288818]
[163.84275818 713.56481934]
[151.39723206 721.96868896]
[138.06019592 728.87091064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 188]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[38 180]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[48 148]
[49 147]
[50 146]
[51 145]
[52 144]
[53 143]
[58 142]
[59 141]
[61 139]
[65 135]
[66 134]
[67 133]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
