%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[166.27862549 471.70898438]
[163.08935547 457.04052734]
[161.28767395 442.13790894]
[160.88943481 427.13204956]
[161.89814758 412.15481567]
[164.30491638 397.33789062]
[168.08860779 382.81143188]
[173.21597290 368.70309448]
[179.64193726 355.13690186]
[187.31004333 342.23208618]
[196.15289307 330.10202026]
[206.09278870 318.85333252]
[217.04234314 308.58486938]
[228.90536499 299.38684082]
[220.86419678 286.72433472]
[207.50979614 280.12817383]
[206.64340210 264.33068848]
[198.60223389 251.66816711]
[190.56106567 239.00564575]
[182.14643860 226.58815002]
[173.36584473 214.42669678]
[159.64250183 208.63710022]
[157.83737183 192.91920471]
[149.05677795 180.75775146]
[140.27616882 168.59629822]
[131.49555969 156.43484497]
[117.77223206 150.64523315]
[115.96710205 134.92735291]
[107.18650055 122.76589203]
[92.49383545 122.66250610]
[80.64443970 113.97476196]
[76.12676239 99.99350739]
[80.65204620 86.01470947]
[71.87144470 73.85325623]
[74.31465149 88.65293884]
[73.05148315 103.59966278]
[68.15918732 117.77941132]
[59.93692398 130.32510376]
[48.88748932 140.46955872]
[35.68655777 147.59243774]
[21.14137459 151.25817871]
[6.14138222 151.24261475]
[-8.39616299 147.54670715]
[-21.58228683 140.39645386]
[-32.61064911 130.22909546]
[-40.80686569 117.66636658]
[-45.66973114 103.47649384]
[-46.90188217 88.52718353]
[-44.42796707 73.73259735]
[-38.39927292 59.99742889]
[-29.18445587 48.16159058]
[-17.34700203 38.94884109]
[-3.61077929 32.92255402]
[11.18423843 30.45123100]
[26.13333130 31.68599701]
[40.32235336 36.55134583]
[52.88364410 44.74975967]
[63.04908752 55.77992630]
[58.86207962 41.37614441]
[54.67506790 26.97236443]
[50.48805618 12.56858158]
[46.30104446 -1.83520043]
[42.11403275 -16.23898315]
[27.66426659 -21.57850075]
[19.22788620 -34.25449753]
[19.86571312 -49.28969193]
[29.12375069 -60.92699432]
[24.93673897 -75.33077240]
[13.65488148 -86.42267609]
[17.53202629 -100.80381012]
[13.34501457 -115.20758820]
[7.94456339 -122.57460785]
[9.20460510 -129.85705566]
[5.23250914 -144.32157898]
[1.26041305 -158.78610229]
[-2.71168303 -173.25062561]
[-17.63478088 -171.47332764]
[-32.65608978 -171.94015503]
[-47.44002914 -174.64067078]
[-61.65631866 -179.51455688]
[-74.98736572 -186.45291138]
[-87.13534546 -195.30075073]
[-97.82886505 -205.86041260]
[-106.82903290 -217.89596558]
[-113.93477631 -231.13854980]
[-118.98735809 -245.29231262]
[-121.87390137 -260.04104614]
[-122.52990723 -275.05529785]
[-120.94073486 -289.99960327]
[-117.14187622 -304.54010010]
[-111.21820831 -318.35198975]
[-103.30206299 -331.12664795]
[-93.57028961 -342.57873535]
[-82.24029541 -352.45239258]
[-69.56520844 -360.52703857]
[-55.82818604 -366.62225342]
[-41.33612061 -370.60192871]
[-26.41276932 -372.37710571]
[-11.39152622 -371.90814209]
[3.39202809 -369.20550537]
[17.60762405 -364.32958984]
[30.93768120 -357.38934326]
[43.08440018 -348.53976440]
[53.77641678 -337.97860718]
[62.77487183 -325.94177246]
[69.87873077 -312.69815063]
[74.92929840 -298.54367065]
[77.81373596 -283.79452515]
[78.46760559 -268.78018188]
[76.87630463 -253.83610535]
[73.07537079 -239.29614258]
[67.14973450 -225.48512268]
[59.23176956 -212.71157837]
[49.49836731 -201.26087952]
[38.16696930 -191.38883972]
[25.49073219 -183.31600952]
[11.75284100 -177.22273254]
[15.72493744 -162.75820923]
[19.69703293 -148.29368591]
[23.66913033 -133.82916260]
[27.74879646 -119.39459991]
[31.93580818 -104.99082184]
[42.91818237 -94.92917633]
[39.34052277 -79.51778412]
[43.52753067 -65.11400604]
[57.58137894 -60.25319672]
[66.17985535 -47.90288544]
[65.85344696 -32.67964935]
[56.51781464 -20.42599297]
[60.70482635 -6.02221155]
[64.89183807 8.38156986]
[69.07884979 22.78535271]
[73.26586151 37.18913269]
[77.45287323 51.59291458]
[84.03289795 65.07264709]
[92.81349945 77.23410797]
[107.50616455 77.33749390]
[119.35556030 86.02523804]
[123.87323761 100.00649261]
[119.34795380 113.98529053]
[128.12855530 126.14674377]
[142.47993469 132.80621338]
[143.65702820 147.65423584]
[152.43762207 159.81568909]
[161.21823120 171.97714233]
[169.99882507 184.13859558]
[184.35020447 190.79806519]
[185.52729797 205.64608765]
[194.30789185 217.80754089]
[198.33013916 219.44326782]
[201.32176208 222.01518250]
[203.11502075 225.08432007]
[203.70195007 228.20234680]
[203.22358704 230.96447754]
[211.26475525 243.62699890]
[219.30593872 256.28952026]
[233.23548889 263.79138184]
[233.52671814 278.68316650]
[241.56788635 291.34567261]
[254.93745422 284.52005005]
[268.88745117 278.97637939]
[283.29525757 274.76339722]
[298.03427124 271.91809082]
[312.97497559 270.46548462]
[327.98605347 270.41836548]
[342.93557739 271.77709961]
[357.69216919 274.52981567]
[372.12615967 278.65225220]
[386.11068726 284.10821533]
[399.52285767 290.84973145]
[412.24478149 298.81759644]
[424.16470337 307.94177246]
[435.17782593 318.14202881]
[445.18734741 329.32879639]
[454.10537720 341.40371704]
[461.85345459 354.26068115]
[468.36355591 367.78668213]
[473.57843018 381.86288452]
[477.45223999 396.36560059]
[479.95098877 411.16729736]
[481.05267334 426.13796997]
[480.74761963 441.14599609]
[479.03851318 456.05953979]
[475.94039917 470.74749756]
[471.48046875 485.08081055]
[465.69793701 498.93347168]
[458.64358521 512.18377686]
[450.37948608 524.71533203]
[440.97817993 536.41784668]
[430.52233887 547.18865967]
[419.10382080 556.93298340]
[406.82302856 565.56524658]
[393.78781128 573.00958252]
[380.11279297 579.20056152]
[365.91812134 584.08380127]
[351.32855225 587.61633301]
[336.47229004 589.76708984]
[321.47988892 590.51727295]
[306.48312378 589.86022949]
[291.61380005 587.80169678]
[277.00256348 584.35986328]
[262.77786255 579.56488037]
[249.06465149 573.45898438]
[235.98347473 566.09570312]
[223.64929199 557.53985596]
[212.17050171 547.86663818]
[201.64797974 537.16094971]
[192.17419434 525.51702881]
[183.83239746 513.03704834]
[176.69592285 499.83081055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 159]
[15 158]
[17 156]
[18 155]
[19 154]
[20 149]
[21 148]
[23 146]
[24 145]
[25 144]
[26 143]
[28 141]
[29 140]
[33 136]
[34 135]
[58 134]
[59 133]
[60 132]
[61 131]
[62 130]
[63 129]
[67 125]
[68 124]
[70 122]
[71 121]
[73 120]
[74 119]
[75 118]
[76 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
