%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[6.64040375 414.30178833]
[12.58753300 428.09625244]
[16.68318939 442.54895020]
[18.85729408 457.41259766]
[19.07264137 472.43289185]
[17.32554626 487.35275269]
[13.64590740 501.91693115]
[8.09668636 515.87622070]
[0.77283728 528.99169922]
[-8.20031929 541.03900146]
[-18.66923904 551.81195068]
[-30.45478821 561.12622070]
[-43.35529709 568.82244873]
[-57.15002441 574.76892090]
[-71.60292053 578.86389160]
[-86.46668243 581.03729248]
[-101.48696899 581.25195312]
[-116.40676117 579.50415039]
[-130.97076416 575.82379150]
[-144.92976379 570.27392578]
[-158.04490662 562.94946289]
[-170.09178162 553.97570801]
[-180.86425781 543.50628662]
[-190.17797852 531.72027588]
[-197.87358093 518.81939697]
[-203.81939697 505.02441406]
[-207.91368103 490.57131958]
[-210.08636475 475.70745850]
[-210.30029297 460.68716431]
[-208.55177307 445.76742554]
[-204.87074280 431.20361328]
[-199.32019043 417.24487305]
[-191.99510193 404.13006592]
[-183.02079773 392.08361816]
[-172.55084229 381.31167603]
[-160.76441956 371.99850464]
[-147.86317444 364.30349731]
[-134.06788635 358.35833740]
[-119.61459351 354.26473999]
[-104.75062561 352.09277344]
[-89.73031616 351.87957764]
[-74.81069183 353.62878418]
[-60.24704361 357.31051636]
[-46.28856659 362.86172485]
[-33.17411423 370.18743896]
[-24.21342087 358.15808105]
[-15.25272369 346.12869263]
[-6.29202795 334.09930420]
[2.57886744 322.00357056]
[11.35947037 309.84210205]
[20.14007378 297.68066406]
[28.92067719 285.51919556]
[37.70127869 273.35772705]
[44.77838516 260.13220215]
[50.02510452 246.07974243]
[55.27182388 232.02726746]
[59.88582993 217.75453186]
[63.85792923 203.29000854]
[67.83002472 188.82548523]
[71.80211639 174.36096191]
[67.71128845 160.03915405]
[78.82675934 148.78050232]
[82.79885101 134.31597900]
[86.77095032 119.85146332]
[90.74304962 105.38694000]
[92.74706268 90.52140808]
[92.74706268 75.52140808]
[85.00975800 61.72123718]
[92.74706268 48.99396515]
[92.74706268 33.99396515]
[85.00975800 20.19379234]
[92.74706268 7.46652031]
[92.74706268 -7.53347969]
[92.74706268 -22.53347969]
[92.74706268 -37.53347778]
[92.74706268 -52.53347778]
[92.74706268 -67.53347778]
[92.74706268 -82.53347778]
[85.00975800 -96.33364868]
[92.74706268 -109.06092072]
[80.28651428 -115.41683197]
[71.82048798 -126.46865082]
[68.95587921 -140.02491760]
[72.19595337 -153.42831421]
[80.85298920 -164.07652283]
[93.19329834 -169.92749023]
[93.41662598 -184.92582703]
[93.63995361 -199.92416382]
[93.86328125 -214.92250061]
[94.08660889 -229.92083740]
[94.30993652 -244.91917419]
[83.87857056 -253.43980408]
[80.31126404 -266.22592163]
[84.69454956 -278.54943848]
[95.21704102 -285.98629761]
[95.66365051 -300.97964478]
[96.11025238 -315.97299194]
[81.86212921 -321.05688477]
[69.88361359 -330.29650879]
[61.34823990 -342.78659058]
[57.09220886 -357.30352783]
[57.53249359 -372.42507935]
[62.62595367 -386.66979980]
[71.87358856 -398.64212036]
[84.36940002 -407.16912842]
[98.88918304 -411.41543579]
[114.01043701 -410.96502686]
[128.25173950 -405.86199951]
[140.21784973 -396.60635376]
[148.73648071 -384.10482788]
[152.97305298 -369.58221436]
[152.51251221 -354.46127319]
[147.39996338 -340.22338867]
[138.13629150 -328.26345825]
[125.62906647 -319.75320435]
[111.10360718 -315.52636719]
[110.65699768 -300.53302002]
[110.21038818 -285.53967285]
[122.25553894 -273.80285645]
[122.08178711 -256.64813232]
[109.30827332 -244.69584656]
[109.08494568 -229.69750977]
[108.86161804 -214.69917297]
[108.63829041 -199.70083618]
[108.41496277 -184.70249939]
[108.19163513 -169.70416260]
[122.26230621 -161.75880432]
[130.45327759 -147.72087097]
[130.44714355 -131.37409973]
[122.15086365 -117.18017578]
[107.74706268 -109.06092072]
[115.48435974 -96.33364868]
[107.74706268 -82.53347778]
[107.74706268 -67.53347778]
[107.74706268 -52.53347778]
[107.74706268 -37.53347778]
[107.74706268 -22.53347969]
[107.74706268 -7.53347969]
[107.74706268 7.46652031]
[115.48435974 20.19379234]
[107.74706268 33.99396515]
[107.74706268 48.99396515]
[115.48435974 61.72123718]
[107.74706268 75.52140808]
[107.74706268 90.52140808]
[114.75167847 77.25734711]
[125.46839905 66.76201630]
[138.87576294 60.03577042]
[153.69587708 57.71970367]
[168.51618958 60.03457260]
[181.92410278 66.75973511]
[192.64166260 77.25420380]
[199.64735413 90.51770020]
[202.27343750 105.28603363]
[200.26959229 120.15158081]
[193.82682800 133.69746399]
[183.55923462 144.63255310]
[170.44543457 151.91461182]
[155.73535156 154.84954834]
[140.83108521 153.15760803]
[127.15319061 147.00009155]
[116.00536346 136.96385193]
[108.45014191 124.00551605]
[105.20757294 109.35903168]
[101.23547363 123.82355499]
[97.26337433 138.28808594]
[93.29128265 152.75260925]
[97.09799957 168.10902405]
[86.26664734 178.33306885]
[82.29454803 192.79759216]
[78.32244873 207.26211548]
[74.35035706 221.72663879]
[87.88871002 215.26808167]
[102.07408905 220.14405823]
[108.78045654 233.56138611]
[104.16609955 247.83399963]
[90.87434387 254.78591919]
[76.51929474 250.43475342]
[69.32429504 237.27398682]
[64.07757568 251.32646179]
[58.83085632 265.37893677]
[70.03252411 255.40283203]
[83.74334717 249.31898499]
[98.65650940 247.70726013]
[113.35057831 250.72129822]
[126.42500305 258.07379150]
[136.63362122 269.06399536]
[143.00341797 282.64434814]
[144.92724609 297.52044678]
[142.22174072 312.27444458]
[135.14479065 325.50006104]
[124.37091827 335.93670654]
[110.92700958 342.58963013]
[96.09446716 344.82473755]
[81.28703308 342.42895508]
[67.91604614 335.63067627]
[57.25594711 325.07781982]
[50.32279587 311.77627563]
[47.77741241 296.99380493]
[49.86273575 282.13833618]
[41.08213425 294.29980469]
[32.30152893 306.46124268]
[23.52092552 318.62271118]
[14.74032307 330.78417969]
[12.25406647 339.57373047]
[5.73734951 343.05999756]
[-3.22334647 355.08938599]
[-12.18404198 367.11877441]
[-21.14473915 379.14813232]
[-10.37127781 389.61654663]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 209]
[46 208]
[47 207]
[48 206]
[49 204]
[50 203]
[51 202]
[52 201]
[53 200]
[54 181]
[55 180]
[56 179]
[57 172]
[58 171]
[59 170]
[60 169]
[62 167]
[63 166]
[64 165]
[65 164]
[66 145]
[67 144]
[69 142]
[70 141]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[80 131]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
