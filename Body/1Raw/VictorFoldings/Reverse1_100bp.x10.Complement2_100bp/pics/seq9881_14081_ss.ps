%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[80.36804962 812.17022705]
[65.36408234 811.99597168]
[50.40065765 810.87994385]
[35.53683853 808.82653809]
[20.83128548 805.84393311]
[6.34203100 801.94378662]
[-7.87374020 797.14154053]
[-21.75992393 791.45617676]
[-35.26171875 784.91015625]
[-48.32584000 777.52917480]
[-60.90072632 769.34252930]
[-72.93675232 760.38238525]
[-84.38641357 750.68420410]
[-95.20452881 740.28625488]
[-105.34839630 729.22949219]
[-114.77798462 717.55767822]
[-123.45608521 705.31671143]
[-131.34844971 692.55505371]
[-138.42391968 679.32299805]
[-144.65457153 665.67279053]
[-150.01583862 651.65832520]
[-154.48652649 637.33483887]
[-158.04902649 622.75885010]
[-160.68925476 607.98797607]
[-162.39680481 593.08050537]
[-163.16493225 578.09515381]
[-162.99060059 563.09118652]
[-161.87449646 548.12780762]
[-159.82104492 533.26397705]
[-156.83831787 518.55847168]
[-152.93812561 504.06921387]
[-148.13581848 489.85348511]
[-142.45039368 475.96731567]
[-135.90425110 462.46554565]
[-128.52323914 449.40148926]
[-120.33650208 436.82662964]
[-111.37632751 424.79064941]
[-101.67808533 413.34103394]
[-91.28005219 402.52297974]
[-80.22326660 392.37918091]
[-68.55136108 382.94964600]
[-56.31039429 374.27160645]
[-43.54868698 366.37930298]
[-30.31660080 359.30389404]
[-16.66635323 353.07333374]
[-2.65181875 347.71212769]
[11.67169380 343.24151611]
[26.24765587 339.67910767]
[41.01853943 337.03894043]
[55.92605591 335.33148193]
[70.91136932 334.56341553]
[85.91533661 334.73785400]
[87.03098297 319.77938843]
[88.14663696 304.82092285]
[89.26228333 289.86248779]
[90.04360199 274.88284302]
[90.49021149 259.88949585]
[90.93682098 244.89614868]
[91.38342285 229.90278625]
[91.83003235 214.90943909]
[92.16500854 199.91317749]
[92.38833618 184.91484070]
[92.50000000 169.91526794]
[92.50000000 154.91526794]
[92.50000000 139.91526794]
[92.50000000 124.91526031]
[81.21305847 118.00197601]
[74.78750610 106.43042755]
[74.88603973 93.19490814]
[81.48316193 81.72031403]
[92.87178040 74.97583771]
[93.09510803 59.97750092]
[93.31843567 44.97916412]
[93.54176331 29.98082542]
[90.66047668 24.03021812]
[91.14426422 18.36779976]
[94.00167084 14.54101753]
[94.67145538 -0.44402131]
[95.34123993 -15.42905998]
[96.01102448 -30.41409874]
[88.89765167 -44.54599380]
[97.19554138 -56.91508484]
[97.86532593 -71.90012360]
[85.20295715 -63.85869980]
[70.97204590 -68.60012817]
[65.66308594 -82.62920380]
[73.18964386 -95.60421753]
[88.00342560 -97.96046448]
[99.18361664 -87.96253967]
[100.96608734 -102.85625458]
[102.74855042 -117.74996948]
[96.70596313 -132.37179565]
[105.90083313 -144.08946228]
[107.68330383 -158.98316956]
[109.46576691 -173.87689209]
[111.24823761 -188.77061462]
[113.03070068 -203.66432190]
[114.81316376 -218.55804443]
[116.59563446 -233.45176697]
[102.70497131 -239.38693237]
[91.04999542 -248.99620056]
[82.57550812 -261.50061035]
[77.96850586 -275.88644409]
[77.60245514 -290.98751831]
[81.50703430 -305.57965088]
[89.36571503 -318.47998047]
[100.54142761 -328.64266968]
[114.12820435 -335.24386597]
[129.02462769 -337.74850464]
[144.02311707 -335.95349121]
[157.90780640 -330.00436401]
[169.55313110 -320.38339233]
[178.01504517 -307.87051392]
[182.60758972 -293.48004150]
[182.95846558 -278.37860107]
[179.03923035 -263.79037476]
[171.16760254 -250.89797974]
[159.98168945 -240.74652100]
[146.38829041 -234.15895081]
[131.48934937 -231.66929626]
[129.70687866 -216.77557373]
[127.92441559 -201.88186646]
[126.14195251 -186.98814392]
[124.35948181 -172.09442139]
[122.57701874 -157.20071411]
[120.79455566 -142.30699158]
[126.96463776 -128.75047302]
[117.64227295 -115.96750641]
[115.85980225 -101.07379150]
[114.07733917 -86.18006897]
[112.85036469 -71.23033905]
[112.18058014 -56.24530029]
[119.34185791 -43.18523407]
[110.99606323 -29.74431419]
[110.32627869 -14.75927544]
[109.65649414 0.22576381]
[108.98670959 15.21080303]
[108.54010010 30.20415306]
[108.31677246 45.20249176]
[108.09344482 60.20082855]
[107.87011719 75.19916534]
[121.05464172 84.71202087]
[126.01889038 100.19370270]
[120.82469177 115.59975433]
[107.50000000 124.91526031]
[107.50000000 139.91526794]
[107.50000000 154.91526794]
[107.50000000 169.91526794]
[110.62940979 178.49690247]
[107.38667297 185.13816833]
[107.16334534 200.13650513]
[110.16463470 208.76379395]
[106.82337952 215.35604858]
[106.37677002 230.34939575]
[105.93016815 245.34274292]
[105.48355865 260.33609009]
[105.03695679 275.32943726]
[107.51269531 279.92486572]
[107.93583679 284.54809570]
[106.63951874 288.41262817]
[104.22073364 290.97811890]
[103.10508728 305.93658447]
[101.98944092 320.89501953]
[100.87378693 335.85348511]
[115.73763275 337.90670776]
[130.44322205 340.88919067]
[144.93251038 344.78918457]
[159.14833069 349.59124756]
[173.03457642 355.27645874]
[186.53643799 361.82238770]
[199.60063171 369.20318604]
[212.17561340 377.38973999]
[224.21173096 386.34973145]
[235.66148376 396.04779053]
[246.47970581 406.44564819]
[256.62368774 417.50228882]
[266.05340576 429.17404175]
[274.73162842 441.41485596]
[282.62414551 454.17645264]
[289.69973755 467.40841675]
[295.93054199 481.05859375]
[301.29196167 495.07302856]
[305.76278687 509.39648438]
[309.32543945 523.97235107]
[311.96582031 538.74322510]
[313.67352295 553.65069580]
[314.44180298 568.63598633]
[314.26763916 583.63995361]
[313.15170288 598.60339355]
[311.09838867 613.46722412]
[308.11581421 628.17279053]
[304.21575928 642.66210938]
[299.41363525 656.87786865]
[293.72833252 670.76409912]
[287.18234253 684.26593018]
[279.80145264 697.33007812]
[271.61483765 709.90502930]
[262.65481567 721.94110107]
[252.95668030 733.39080811]
[242.55876160 744.20898438]
[231.50207520 754.35290527]
[219.83027649 763.78253174]
[207.58940125 772.46069336]
[194.82777405 780.35314941]
[181.59576416 787.42864990]
[167.94557190 793.65942383]
[153.93110657 799.02075195]
[139.60763550 803.49151611]
[125.03170776 807.05407715]
[110.26084900 809.69439697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 164]
[53 163]
[54 162]
[55 161]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 151]
[62 150]
[63 148]
[64 147]
[65 146]
[66 145]
[71 141]
[72 140]
[73 139]
[74 138]
[77 137]
[78 136]
[79 135]
[80 134]
[82 132]
[83 131]
[89 130]
[90 129]
[91 128]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
