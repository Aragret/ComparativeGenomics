%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[103.29070282 280.86337280]
[101.91932678 265.91928101]
[101.65535736 250.91468811]
[102.50023651 235.93157959]
[104.44936371 221.05178833]
[107.49208069 206.35658264]
[111.61177063 191.92622375]
[116.78593445 177.83952332]
[122.98632050 164.17341614]
[130.17904663 151.00253296]
[138.32484436 138.39883423]
[123.50681305 136.89045715]
[117.16949463 122.39394379]
[105.20716095 113.34394836]
[91.35788727 111.42318726]
[85.74284363 98.61839294]
[73.78050232 89.56838989]
[61.81816864 80.51838684]
[49.85583115 71.46839142]
[34.18217468 69.31269836]
[28.70048332 55.46350098]
[16.73814774 46.41349792]
[17.71924782 61.38137817]
[7.93319464 72.74945831]
[-7.01411819 74.00557709]
[-18.56019020 64.43018341]
[-20.09090805 49.50848770]
[-10.72940540 37.78832245]
[4.16070652 35.98327637]
[-6.94652748 25.90213776]
[-18.05376053 15.82099915]
[-29.16099548 5.73986006]
[-40.26822662 -4.34127855]
[-51.37546158 -14.42241764]
[-62.48269653 -24.50355530]
[-73.58992767 -34.58469391]
[-84.69716644 -44.66583252]
[-95.60417938 -34.35759354]
[-107.26828003 -24.91452980]
[-119.62101746 -16.39205742]
[-132.58990479 -8.84019089]
[-146.09883118 -2.30324841]
[-160.06852722 3.18040895]
[-174.41699219 7.57860041]
[-189.06004333 10.86551476]
[-203.91174316 13.02186298]
[-218.88493347 14.03499126]
[-233.89173889 13.89895344]
[-248.84410095 12.61454773]
[-263.65426636 10.18931293]
[-278.23532104 6.63747978]
[-292.50170898 1.97989261]
[-306.36968994 -3.75611544]
[-319.75790405 -10.53688240]
[-332.58773804 -18.32261658]
[-344.78396606 -27.06762695]
[-356.27493286 -36.72059250]
[-366.99328613 -47.22486877]
[-376.87609863 -58.51881027]
[-385.86535645 -70.53613281]
[-393.90829468 -83.20632172]
[-400.95773315 -96.45501709]
[-406.97232056 -110.20447540]
[-411.91674805 -124.37400055]
[-415.76199341 -138.88044739]
[-418.48547363 -153.63867188]
[-420.07122803 -168.56208801]
[-420.50994873 -183.56309509]
[-419.79907227 -198.55366516]
[-417.94274902 -213.44584656]
[-414.95187378 -228.15222168]
[-410.84402466 -242.58648682]
[-405.64328003 -256.66394043]
[-399.38015747 -270.30200195]
[-392.09143066 -283.42059326]
[-383.81988525 -295.94271851]
[-374.61401367 -307.79492188]
[-364.52789307 -318.90765381]
[-353.62069702 -329.21569824]
[-341.95639038 -338.65853882]
[-329.60348511 -347.18078613]
[-316.63446045 -354.73239136]
[-303.12542725 -361.26907349]
[-289.15560913 -366.75247192]
[-274.80706787 -371.15039062]
[-260.16394043 -374.43704224]
[-245.31221008 -376.59310913]
[-230.33900452 -377.60595703]
[-215.33219910 -377.46963501]
[-200.37986755 -376.18493652]
[-185.56974792 -373.75942993]
[-170.98875427 -370.20730591]
[-156.72247314 -365.54943848]
[-142.85459900 -359.81317139]
[-129.46652222 -353.03216553]
[-116.63681793 -345.24618530]
[-104.44077301 -336.50094604]
[-92.94995880 -326.84774780]
[-82.23181152 -316.34326172]
[-72.34922791 -305.04916382]
[-63.36020660 -293.03164673]
[-55.31749344 -280.36129761]
[-48.26829147 -267.11248779]
[-42.25397110 -253.36291504]
[-37.30982208 -239.19329834]
[-33.46485901 -224.68678284]
[-30.74164772 -209.92849731]
[-29.15616989 -195.00505066]
[-28.71772957 -180.00404358]
[-29.42889977 -165.01347351]
[-31.28550529 -150.12133789]
[-34.27665329 -135.41502380]
[-38.38478851 -120.98082733]
[-43.58580017 -106.90345764]
[-49.84917450 -93.26554108]
[-57.13814545 -80.14709473]
[-65.40994263 -67.62510681]
[-74.61602783 -55.77306747]
[-63.50878906 -45.69192886]
[-52.40155792 -35.61079025]
[-41.29432297 -25.52965164]
[-30.18708992 -15.44851208]
[-19.07985497 -5.36737347]
[-7.97262239 4.71376514]
[3.13461161 14.79490376]
[14.24184513 24.87604332]
[25.78814697 34.45116425]
[37.75048447 43.50116348]
[52.56851578 45.00953674]
[58.90583038 59.50605392]
[70.86817169 68.55605316]
[82.83050537 77.60605621]
[94.79283905 86.65605164]
[108.64211273 88.57681274]
[114.25715637 101.38160706]
[126.21949768 110.43161011]
[141.89315796 112.58730316]
[147.37484741 126.43650055]
[157.28794861 115.16984558]
[168.00607300 104.66607666]
[179.47064209 94.98255157]
[191.61906433 86.17215729]
[204.38499451 78.28302765]
[217.69869995 71.35823822]
[231.48744202 65.43562317]
[245.67594910 60.54751205]
[260.18670654 56.72061920]
[274.94046021 53.97583389]
[289.85665894 52.32815552]
[304.85379028 51.78657913]
[319.84994507 52.35406494]
[334.76324463 54.02751160]
[349.51226807 56.79777908]
[364.01638794 60.64973831]
[378.19641113 65.56234741]
[391.97491455 71.50878143]
[405.27664185 78.45655823]
[418.02890015 86.36773682]
[430.16210938 95.19909668]
[441.60992432 104.90242004]
[452.30987549 115.42469025]
[462.20352173 126.70845795]
[471.23678589 138.69207764]
[479.36035156 151.31010437]
[486.52987671 164.49363708]
[492.70617676 178.17063904]
[497.85552979 192.26643372]
[501.94976807 206.70404053]
[504.96661377 221.40457153]
[506.88949585 236.28778076]
[507.70800781 251.27235413]
[507.41760254 266.27642822]
[506.01989746 281.21810913]
[503.52252197 296.01577759]
[499.93911743 310.58856201]
[495.28924561 324.85693359]
[489.59832764 338.74291992]
[482.89743042 352.17068481]
[475.22314453 365.06689453]
[466.61740112 377.36114502]
[457.12716675 388.98623657]
[446.80432129 399.87872314]
[435.70523071 409.97909546]
[423.89050293 419.23214722]
[411.42468262 427.58740234]
[398.37582397 434.99920654]
[384.81521606 441.42706299]
[370.81695557 446.83590698]
[356.45742798 451.19613647]
[341.81512451 454.48397827]
[326.96997070 456.68145752]
[312.00308228 457.77655029]
[296.99618530 457.76333618]
[282.03125000 456.64184570]
[267.19000244 454.41824341]
[252.55348206 451.10461426]
[238.20167542 446.71908569]
[224.21295166 441.28561401]
[210.66369629 434.83386230]
[197.62792969 427.39907837]
[185.17683411 419.02188110]
[173.37841797 409.74801636]
[162.29713440 399.62811279]
[151.99349976 388.71746826]
[142.52377319 377.07568359]
[133.93969727 364.76629639]
[126.28813934 351.85656738]
[119.61090088 338.41702271]
[113.94445038 324.52102661]
[109.31973267 310.24450684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 138]
[13 136]
[14 135]
[16 133]
[17 132]
[18 131]
[19 130]
[21 128]
[22 127]
[29 126]
[30 125]
[31 124]
[32 123]
[33 122]
[34 121]
[35 120]
[36 119]
[37 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
