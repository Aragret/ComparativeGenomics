%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[75.16349792 521.45819092]
[63.48690414 511.99227905]
[53.43495560 500.81619263]
[45.25518799 488.20516968]
[39.14904404 474.46975708]
[35.26688385 459.94821167]
[33.70431900 444.99813843]
[34.49981689 429.98770142]
[37.63380051 415.28649902]
[43.02908325 401.25662231]
[50.55280304 388.24356079]
[60.01968384 376.56774902]
[71.19659424 366.51672363]
[83.80829620 358.33798218]
[97.54420471 352.23297119]
[112.06607819 348.35202026]
[110.50555420 333.43341064]
[108.94503021 318.51480103]
[99.92563629 306.66156006]
[106.18524933 292.13131714]
[104.62472534 277.21270752]
[103.06420135 262.29409790]
[99.98408508 258.64419556]
[99.16413116 253.02059937]
[101.68611908 246.90904236]
[100.57047272 231.95059204]
[91.61212158 223.82196045]
[90.56024170 211.36895752]
[98.52219391 201.22154236]
[97.62937927 186.24813843]
[96.73656464 171.27473450]
[95.84374237 156.30133057]
[87.36262512 144.05715942]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[80.25624084 40.66657257]
[88.94481659 25.41942024]
[88.05200195 10.44601440]
[87.15918732 -4.52739143]
[86.26636505 -19.50079727]
[85.37355042 -34.47420120]
[84.48073578 -49.44760895]
[75.93575287 -62.76278305]
[82.90179443 -75.92802429]
[82.00897980 -90.90142822]
[81.11616516 -105.87483215]
[80.22335052 -120.84823608]
[72.51777649 -107.97872925]
[59.76240158 -100.08567047]
[44.80680466 -98.93238831]
[30.99209976 -104.77652740]
[21.40453339 -116.31250000]
[18.18598747 -130.96313477]
[22.05549812 -145.45542908]
[32.14860153 -156.55178833]
[46.21047592 -161.77325439]
[61.09966278 -159.95333862]
[73.48987579 -151.49859619]
[80.61312103 -138.29783630]
[82.17364502 -153.21644592]
[83.73416901 -168.13504028]
[76.23326111 -178.62786865]
[77.84015656 -191.02146912]
[87.15253448 -198.74198914]
[88.93499756 -213.63569641]
[90.71746063 -228.52941895]
[92.49993134 -243.42314148]
[94.28239441 -258.31686401]
[79.58448029 -261.35745239]
[65.19738770 -265.63357544]
[51.22476196 -271.11441040]
[37.76728821 -277.76049805]
[24.92192459 -285.52389526]
[12.78122616 -294.34869385]
[1.43266821 -304.17132568]
[-9.04198170 -314.92102051]
[-18.56725121 -326.52029419]
[-27.07451248 -338.88555908]
[-34.50246429 -351.92779541]
[-40.79759216 -365.55294800]
[-45.91453934 -379.66290283]
[-49.81642914 -394.15597534]
[-52.47515869 -408.92773438]
[-53.87156677 -423.87176514]
[-53.99559021 -438.88037109]
[-52.84633636 -453.84542847]
[-50.43208694 -468.65911865]
[-46.77023697 -483.21469116]
[-41.88716888 -497.40728760]
[-35.81806946 -511.13461304]
[-28.60666466 -524.29779053]
[-20.30491447 -536.80200195]
[-10.97263241 -548.55706787]
[-0.67706060 -559.47839355]
[10.50761986 -569.48724365]
[22.50082207 -578.51147461]
[35.21613312 -586.48608398]
[48.56193924 -593.35369873]
[62.44207764 -599.06469727]
[76.75654602 -603.57800293]
[91.40219879 -606.86102295]
[106.27352142 -608.89025879]
[121.26335907 -609.65093994]
[136.26370239 -609.13769531]
[151.16648865 -607.35412598]
[165.86431885 -604.31317139]
[180.25129700 -600.03668213]
[194.22378540 -594.55548096]
[207.68109131 -587.90905762]
[220.52624512 -580.14532471]
[232.66671753 -571.32019043]
[244.01502991 -561.49725342]
[254.48939514 -550.74731445]
[264.01437378 -539.14782715]
[272.52130127 -526.78228760]
[279.94891357 -513.73986816]
[286.24371338 -500.11456299]
[291.36029053 -486.00445557]
[295.26181030 -471.51129150]
[297.92013550 -456.73947144]
[299.31616211 -441.79541016]
[299.43978882 -426.78677368]
[298.29016113 -411.82174683]
[295.87551880 -397.00814819]
[292.21331787 -382.45266724]
[287.32986450 -368.26019287]
[281.26040649 -354.53302002]
[274.04867554 -341.37002563]
[265.74658203 -328.86602783]
[256.41400146 -317.11117554]
[246.11816406 -306.19012451]
[234.93321228 -296.18157959]
[222.93978882 -287.15765381]
[210.22427368 -279.18334961]
[196.87828064 -272.31613159]
[182.99800110 -266.60549927]
[168.68341064 -262.09255981]
[154.03767395 -258.80987549]
[139.16630554 -256.78103638]
[124.17644501 -256.02072144]
[109.17610931 -256.53439331]
[107.39364624 -241.64067078]
[105.61118317 -226.74694824]
[103.82871246 -211.85324097]
[102.04624939 -196.95951843]
[109.81188965 -181.22224426]
[98.65277100 -166.57452393]
[97.09225464 -151.65591431]
[95.53173065 -136.73731995]
[95.19675446 -121.74105072]
[96.08956909 -106.76764679]
[96.98238373 -91.79424286]
[97.87519836 -76.82083893]
[106.35632324 -64.57666016]
[99.45413971 -50.34042358]
[100.34695435 -35.36701965]
[101.23977661 -20.39361382]
[102.13259125 -5.42020702]
[103.02540588 9.55319881]
[103.91822052 24.52660370]
[112.75455475 32.78770447]
[113.62091827 45.25498962]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[117.78319550 142.24327087]
[110.81715393 155.40850830]
[111.70996857 170.38191223]
[112.60278320 185.35531616]
[113.49559784 200.32873535]
[123.98952484 215.46011353]
[115.52892303 230.83494568]
[116.64457703 245.79339600]
[117.98281097 260.73358154]
[119.54333496 275.65219116]
[121.10385895 290.57080078]
[130.23486328 303.49111938]
[123.86363220 316.95428467]
[125.42415619 331.87289429]
[126.98468018 346.79150391]
[141.99533081 347.58328247]
[156.69728088 350.71362305]
[170.72850037 356.10543823]
[183.74342346 363.62594604]
[195.42158508 373.08993530]
[205.47538757 384.26434326]
[213.65722656 396.87402344]
[219.76564026 410.60842896]
[223.65019226 425.12933350]
[225.21522522 440.07916260]
[224.42221069 455.08972168]
[221.29064941 469.79144287]
[215.89768982 483.82220459]
[208.37611389 496.83651733]
[198.91114807 508.51388550]
[187.73590088 518.56677246]
[175.12554932 526.74755859]
[161.39064026 532.85485840]
[146.86941528 536.73822021]
[131.91946411 538.30200195]
[116.90895081 537.50775146]
[102.20751190 534.37500000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 188]
[17 187]
[18 186]
[20 184]
[21 183]
[22 182]
[25 181]
[26 180]
[29 178]
[30 177]
[31 176]
[32 175]
[34 173]
[35 172]
[38 170]
[39 169]
[40 168]
[42 165]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[49 158]
[50 157]
[51 156]
[52 155]
[64 154]
[65 153]
[66 152]
[69 150]
[70 149]
[71 148]
[72 147]
[73 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
