%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[278.36093140 372.58505249]
[289.00500488 361.98635864]
[279.86621094 350.09173584]
[270.72741699 338.19711304]
[261.58859253 326.30245972]
[255.02070618 322.91360474]
[252.40385437 314.16201782]
[243.44316101 302.13265991]
[236.92643738 298.64636230]
[234.44018555 289.85681152]
[225.65957642 277.69534302]
[216.87898254 265.53390503]
[208.09837341 253.37243652]
[199.13768005 241.34306335]
[189.99887085 229.44842529]
[180.86007690 217.55380249]
[171.72126770 205.65916443]
[157.83164978 200.28073120]
[155.55934143 184.62355042]
[146.42053223 172.72891235]
[132.53091431 167.35047913]
[130.25859070 151.69329834]
[121.11978912 139.79867554]
[111.98098755 127.90403748]
[102.84218597 116.00940704]
[91.40652466 113.80330658]
[84.37979889 104.51533508]
[85.36710358 92.91075134]
[76.40641022 80.88137054]
[67.44571686 68.85199738]
[50.37092209 61.95757294]
[49.01034546 44.46141052]
[39.87154007 32.56677628]
[30.73273849 20.67214394]
[16.18944550 14.44292259]
[14.57080173 -0.36346978]
[5.43199921 -12.25810242]
[-7.23204899 -14.70446682]
[-14.59890270 -24.79967499]
[-13.15988064 -36.81032562]
[-22.12057686 -48.83970642]
[-31.08127213 -60.86908340]
[-40.04196930 -72.89846039]
[-49.00266647 -84.92784119]
[-47.16900253 -70.04033661]
[-50.76643372 -55.47811127]
[-59.32166290 -43.15706635]
[-71.70909119 -34.69825363]
[-86.29895020 -31.21457291]
[-101.17169189 -33.16436386]
[-114.37054443 -40.29109192]
[-124.15897369 -51.65712357]
[-129.24914551 -65.76705170]
[-128.97135925 -80.76448059]
[-123.36216736 -94.67623901]
[-113.15955353 -105.67198944]
[-99.70583344 -112.30506134]
[-84.77109528 -113.70275116]
[-70.32025146 -109.68117523]
[-58.25293350 -100.76770020]
[-70.91553497 -110.25289917]
[-68.99448395 -125.02309418]
[-75.06832123 -138.73835754]
[-81.14215088 -152.45362854]
[-87.21598816 -166.16889954]
[-93.28981781 -179.88417053]
[-107.65465546 -175.50135803]
[-122.44304657 -172.88203430]
[-137.43933105 -172.06440735]
[-152.42485046 -173.06037903]
[-167.18103027 -175.85543823]
[-181.49270630 -180.40881348]
[-195.15116882 -186.65411377]
[-207.95722961 -194.50027466]
[-219.72415161 -203.83283997]
[-230.28031921 -214.51574707]
[-239.47181702 -226.39320374]
[-247.16458130 -239.29199219]
[-253.24645996 -253.02400208]
[-257.62872314 -267.38900757]
[-260.24749756 -282.17749023]
[-261.06457520 -297.17382812]
[-260.06802368 -312.15927124]
[-257.27243042 -326.91537476]
[-252.71850586 -341.22686768]
[-246.47268677 -354.88510132]
[-238.62606812 -367.69085693]
[-229.29304504 -379.45742798]
[-218.60974121 -390.01321411]
[-206.73194885 -399.20425415]
[-193.83287048 -406.89654541]
[-180.10063171 -412.97790527]
[-165.73547363 -417.35964966]
[-150.94688416 -419.97784424]
[-135.95053101 -420.79437256]
[-120.96509552 -419.79727173]
[-106.20912170 -417.00109863]
[-91.89778900 -412.44665527]
[-78.23979187 -406.20031738]
[-65.43431854 -398.35321045]
[-53.66809464 -389.01977539]
[-43.11271667 -378.33605957]
[-33.92211533 -366.45791626]
[-26.23030853 -353.55856323]
[-20.14946938 -339.82611084]
[-15.76827431 -325.46078491]
[-13.15061378 -310.67208862]
[-12.33466148 -295.67572021]
[-13.33231640 -280.69030762]
[-16.12902832 -265.93444824]
[-20.68401527 -251.62327576]
[-26.93085098 -237.96551514]
[-34.77843857 -225.16032410]
[-44.11233521 -213.39445496]
[-54.79642487 -202.83947754]
[-66.67490387 -193.64932251]
[-79.57455444 -185.95799255]
[-73.50071716 -172.24273682]
[-67.42688751 -158.52746582]
[-61.35305405 -144.81219482]
[-55.27922058 -131.09692383]
[-43.05105209 -122.59274292]
[-44.53766632 -106.84152985]
[-36.97328568 -93.88853455]
[-28.01259041 -81.85915375]
[-19.05189514 -69.82978058]
[-10.09119892 -57.80039978]
[-1.13050294 -45.77102280]
[15.33607006 -39.70316696]
[17.32663155 -21.39690590]
[26.46543503 -9.50227261]
[40.35506058 -4.12383413]
[42.62737274 11.53334236]
[51.76617432 23.42797470]
[60.90497589 35.32260895]
[72.85425568 37.20446014]
[80.56528473 47.03928375]
[79.47509003 59.89130020]
[88.43579102 71.92067719]
[97.39648438 83.95005798]
[112.96696472 90.18995667]
[114.73682404 106.87060547]
[123.87562561 118.76523590]
[133.01441956 130.65986633]
[142.15322876 142.55450439]
[156.69651794 148.78372192]
[158.31517029 163.59011841]
[167.45396423 175.48474121]
[181.99726868 181.71397400]
[183.61590576 196.52035522]
[192.75471497 208.41499329]
[201.89350891 220.30963135]
[211.03231812 232.20425415]
[216.98599243 235.07919312]
[220.12310791 239.81791687]
[220.25982666 244.59184265]
[229.04043579 256.75329590]
[237.82104492 268.91473389]
[246.60163879 281.07620239]
[255.47253418 293.17196655]
[264.43322754 305.20132446]
[273.48324585 317.16366577]
[282.62203979 329.05828857]
[291.76083374 340.95294189]
[300.89962769 352.84756470]
[313.88269043 345.29321289]
[327.72521973 339.46115112]
[342.19992065 335.44717407]
[357.06906128 333.31719971]
[372.08850098 333.10617065]
[387.01162720 334.81759644]
[401.59335327 338.42333984]
[415.59426880 343.86419678]
[428.78442383 351.05084229]
[440.94726562 359.86523438]
[451.88305664 370.16265869]
[461.41220093 381.77401733]
[469.37826538 394.50863647]
[475.65039062 408.15737915]
[480.12561035 422.49618530]
[482.73043823 437.28952026]
[483.42208862 452.29452515]
[482.18920898 467.26477051]
[479.05203247 481.95443726]
[474.06210327 496.12231445]
[467.30133057 509.53576660]
[458.88076782 521.97448730]
[448.93862915 533.23431396]
[437.63824463 543.13018799]
[425.16513062 551.49975586]
[411.72412109 558.20556641]
[397.53591919 563.13745117]
[382.83352661 566.21441650]
[367.85833740 567.38598633]
[352.85632324 566.63293457]
[338.07376099 563.96752930]
[323.75341797 559.43365479]
[310.13046265 553.10571289]
[297.42855835 545.08758545]
[285.85632324 535.51092529]
[275.60375977 524.53308105]
[266.83923340 512.33422852]
[259.70666504 499.11474609]
[254.32319641 485.09170532]
[250.77719116 470.49530029]
[249.12690735 455.56530762]
[249.39941406 440.54684448]
[251.59027100 425.68655396]
[255.66348267 411.22842407]
[261.55215454 397.40991211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[4 163]
[5 162]
[7 161]
[8 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 153]
[15 152]
[16 151]
[17 150]
[19 148]
[20 147]
[22 145]
[23 144]
[24 143]
[25 142]
[28 140]
[29 139]
[30 138]
[32 135]
[33 134]
[34 133]
[36 131]
[37 130]
[40 128]
[41 127]
[42 126]
[43 125]
[44 124]
[60 123]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
