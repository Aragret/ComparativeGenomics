%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[49.69098282 622.72082520]
[40.26965714 610.92498779]
[34.38123322 597.02429199]
[32.46266937 582.05029297]
[34.65633774 567.11407471]
[40.79945374 553.32403564]
[50.43615723 541.70349121]
[62.85134125 533.11480713]
[77.12371826 528.19525146]
[76.23090363 513.22186279]
[75.33808136 498.24847412]
[74.44526672 483.27505493]
[73.55245209 468.30163574]
[63.66179276 479.57882690]
[48.85592270 481.98428345]
[35.90388489 474.41824341]
[30.72717857 460.33984375]
[35.69252396 446.18551636]
[48.52983093 438.42642212]
[63.37005615 440.60992432]
[73.42915344 451.73947144]
[74.09893799 436.75442505]
[74.76872253 421.76937866]
[75.32693481 406.77978516]
[75.77354431 391.78643799]
[76.22014618 376.79306030]
[76.66675568 361.79971313]
[77.11335754 346.80636597]
[77.55996704 331.81301880]
[78.00656891 316.81967163]
[78.45317841 301.82632446]
[78.89978027 286.83297729]
[79.34638977 271.83963013]
[76.78151703 267.81091309]
[76.72022247 262.12820435]
[80.03611755 256.40838623]
[80.92893219 241.43496704]
[81.82174683 226.46156311]
[82.71456146 211.48815918]
[80.27078247 207.38487244]
[80.37871552 201.70285034]
[83.86343384 196.08428955]
[85.20166779 181.14410400]
[78.63069153 167.77729797]
[87.56832886 154.72244263]
[88.90656281 139.78225708]
[90.24479675 124.84207153]
[91.58303070 109.90188599]
[92.47584534 94.92848206]
[92.92245483 79.93512726]
[93.36906433 64.94178009]
[93.81566620 49.94842911]
[94.26227570 34.95508194]
[94.70887756 19.96173096]
[82.16764069 28.19078636]
[67.86771393 23.66176033]
[62.35047150 9.71328163]
[69.68302155 -3.37234926]
[84.46007538 -5.94889307]
[95.78788757 3.88146901]
[97.34840393 -11.03713608]
[98.90892792 -25.95573997]
[100.46945190 -40.87434387]
[102.02997589 -55.79294968]
[103.59049988 -70.71155548]
[105.15102386 -85.63015747]
[91.35846710 -91.81262207]
[80.16730499 -101.94181061]
[72.66507721 -115.01639557]
[69.57557678 -129.74969482]
[71.18906403 -144.69624329]
[77.33500671 -158.39363098]
[87.40003967 -169.50556946]
[100.38912964 -176.95230103]
[115.02395630 -180.01544189]
[116.58448029 -194.93403625]
[117.92271423 -209.87422180]
[119.03836060 -224.83267212]
[120.15400696 -239.79113770]
[121.26966095 -254.74958801]
[122.38530731 -269.70803833]
[123.05509186 -284.69308472]
[123.27841949 -299.69140625]
[115.74744415 -313.60525513]
[123.67337799 -326.21591187]
[123.89670563 -341.21426392]
[123.33849335 -356.20385742]
[122.00025940 -371.14404297]
[120.66202545 -386.08422852]
[119.32379150 -401.02441406]
[104.42181396 -403.30358887]
[90.49856567 -409.08343506]
[78.36353302 -418.02795410]
[68.72222137 -429.61709595]
[62.13516998 -443.17712402]
[58.98534012 -457.91964722]
[59.45585632 -472.98754883]
[63.51936722 -487.50482178]
[70.93962097 -500.62747192]
[81.28521729 -511.59249878]
[93.95468140 -519.76245117]
[108.21141052 -524.66235352]
[123.22655487 -526.00732422]
[138.12715149 -523.71911621]
[152.04689026 -517.93084717]
[164.17649841 -508.97894287]
[173.81077576 -497.38394165]
[180.38960266 -483.81994629]
[183.53050232 -469.07550049]
[183.05085754 -454.00787354]
[178.97854614 -439.49307251]
[171.55032349 -426.37493896]
[161.19808960 -415.41616821]
[148.52368164 -407.25390625]
[134.26397705 -402.36267090]
[135.60220337 -387.42248535]
[136.94044495 -372.48229980]
[138.27867126 -357.54211426]
[147.82919312 -369.10876465]
[162.55686951 -371.95397949]
[175.72843933 -364.77694702]
[181.32202148 -350.85888672]
[176.78030396 -336.56298828]
[164.17970276 -328.42510986]
[149.28105164 -330.16580200]
[138.89503479 -340.99093628]
[138.67170715 -325.99258423]
[146.21865845 -313.15151978]
[138.27676392 -299.46807861]
[138.05343628 -284.46975708]
[139.90686035 -282.36666870]
[141.03889465 -279.40270996]
[141.11747742 -275.84893799]
[139.91470337 -272.09155273]
[137.34376526 -268.59237671]
[136.22811890 -253.63394165]
[135.11245728 -238.67549133]
[133.99681091 -223.71702576]
[132.88116455 -208.75857544]
[135.26358032 -204.61935425]
[135.07107544 -198.93957520]
[131.50308228 -193.37351990]
[129.94256592 -178.45491028]
[143.62670898 -172.42953491]
[154.79359436 -162.45603943]
[162.34123230 -149.50177002]
[165.51960754 -134.82904053]
[164.00511169 -119.87213135]
[157.93357849 -106.09709930]
[147.88807678 -94.85804749]
[134.84301758 -87.26403046]
[120.06962585 -84.06963348]
[118.50910187 -69.15103149]
[116.94857788 -54.23242569]
[115.38806152 -39.31382370]
[113.82753754 -24.39521790]
[112.26701355 -9.47661304]
[110.70648956 5.44199181]
[109.70223236 20.40833664]
[109.25562286 35.40168762]
[108.80901337 50.39503479]
[108.36241150 65.38838959]
[107.91580200 80.38173676]
[107.46920013 95.37508392]
[109.36370087 97.76263428]
[110.43134308 100.89227295]
[110.39559174 104.45909119]
[109.09644318 108.06026459]
[106.52321625 111.24011993]
[105.18498230 126.18030548]
[103.84674835 141.12048340]
[102.50851440 156.06066895]
[108.98377228 170.49610901]
[100.14185333 182.48233032]
[98.80361938 197.42251587]
[97.68797302 212.38098145]
[96.79515839 227.35438538]
[95.90233612 242.32778931]
[95.00952148 257.30117798]
[94.33973694 272.28622437]
[93.89313507 287.27957153]
[93.44652557 302.27291870]
[92.99992371 317.26629639]
[92.55331421 332.25964355]
[92.10670471 347.25299072]
[91.66010284 362.24633789]
[91.21349335 377.23968506]
[90.76689148 392.23303223]
[90.32028198 407.22637939]
[93.19279480 415.89739990]
[89.75376129 422.43917847]
[89.08397675 437.42419434]
[88.41419220 452.40924072]
[88.52585602 467.40884399]
[89.41867828 482.38223267]
[90.31149292 497.35565186]
[91.20430756 512.32904053]
[92.09712219 527.30242920]
[106.85296631 530.49114990]
[120.20078278 537.54370117]
[131.15008545 547.93670654]
[138.88836670 560.89904785]
[142.84136963 575.46875000]
[142.71577454 590.56463623]
[138.52091980 605.06658936]
[130.56805420 617.89837646]
[119.44734955 628.10778809]
[105.98403931 634.93725586]
[91.17718506 637.88000488]
[76.12555695 636.71765137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[21 193]
[22 192]
[23 191]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[31 182]
[32 181]
[33 180]
[36 179]
[37 178]
[38 177]
[39 176]
[42 175]
[43 174]
[45 172]
[46 171]
[47 170]
[48 169]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[60 158]
[61 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[75 143]
[76 142]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 130]
[83 129]
[85 127]
[86 126]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
