%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[197.95703125 691.46032715]
[187.43608093 680.75970459]
[177.70532227 669.33581543]
[168.81433105 657.24682617]
[160.80841064 644.55438232]
[153.72837830 631.32312012]
[147.61027527 617.62048340]
[142.48532104 603.51629639]
[138.37959290 589.08245850]
[135.31404114 574.39245605]
[133.30427551 559.52117920]
[132.36053467 544.54443359]
[132.48764038 529.53857422]
[133.68493652 514.57995605]
[135.94630432 499.74487305]
[139.26025391 485.10894775]
[143.60987854 470.74670410]
[148.97300720 456.73135376]
[155.32232666 443.13430786]
[162.62547302 430.02487183]
[170.84524536 417.46984863]
[179.93972778 405.53320312]
[189.86259460 394.27575684]
[200.56329346 383.75488281]
[211.98727417 374.02423096]
[224.07632446 365.13333130]
[236.76884460 357.12750244]
[229.69174194 343.90197754]
[222.61463928 330.67645264]
[215.53752136 317.45092773]
[208.46041870 304.22540283]
[196.97789001 300.42041016]
[190.97358704 289.45993042]
[194.14469910 276.95764160]
[187.26528931 263.62823486]
[180.38587952 250.29879761]
[173.50646973 236.96936035]
[166.62704468 223.63993835]
[159.25636292 210.57574463]
[151.40460205 197.79490662]
[143.55285645 185.01406860]
[135.70109558 172.23321533]
[127.84934235 159.45237732]
[119.99758148 146.67153931]
[112.14582825 133.89068604]
[104.29407501 121.10984802]
[96.44231415 108.32901001]
[92.85624695 106.91038513]
[89.91290283 103.91796875]
[88.30112457 99.67424011]
[88.54008484 94.79748535]
[81.26685333 81.67878723]
[73.99362946 68.56009674]
[60.53528595 60.24242401]
[61.13094711 45.35973358]
[53.85771942 32.24103928]
[37.85710144 23.12721825]
[38.84622192 5.60612869]
[31.37848091 -7.40282345]
[23.91073990 -20.41177559]
[16.44299889 -33.42072678]
[8.97525787 -46.42967987]
[-4.84165907 -40.54502487]
[-19.25760460 -36.33588409]
[-34.07020187 -33.86134338]
[-49.07150269 -33.15614700]
[-64.05091858 -34.23019028]
[-78.79814911 -37.06839371]
[-93.10617828 -41.63092041]
[-106.77413940 -47.85371399]
[-119.61016083 -55.64941788]
[-131.43403625 -64.90859222]
[-142.07977295 -75.50125885]
[-151.39794922 -87.27870178]
[-159.25772095 -100.07558441]
[-165.54875183 -113.71227264]
[-170.18273926 -127.99731445]
[-173.09463501 -142.73017883]
[-174.24354553 -157.70404053]
[-173.61334229 -172.70867920]
[-171.21287537 -187.53346252]
[-167.07585144 -201.97026062]
[-161.26034546 -215.81642151]
[-153.84797668 -228.87756348]
[-144.94282532 -240.97032166]
[-134.66990662 -251.92492676]
[-123.17343140 -261.58761597]
[-110.61479187 -269.82269287]
[-97.17028809 -276.51461792]
[-83.02866364 -281.56939697]
[-68.38844299 -284.91607666]
[-53.45515442 -286.50769043]
[-38.43843460 -286.32186890]
[-23.54909897 -284.36126709]
[-8.99616718 -280.65335083]
[5.01605844 -275.25021362]
[18.29086876 -268.22769165]
[30.64190674 -259.68438721]
[41.89578247 -249.74021912]
[51.89450836 -238.53477478]
[60.49771881 -226.22538757]
[67.58464050 -212.98484802]
[73.05577850 -198.99902344]
[76.83432770 -184.46427917]
[78.86724854 -169.58464050]
[79.12599945 -154.56900024]
[77.60694122 -139.62815857]
[74.33141327 -124.97185516]
[69.34538269 -110.80584717]
[62.71886063 -97.32899475]
[54.54486465 -84.73049927]
[44.93814468 -73.18721771]
[34.03356552 -62.86120605]
[21.98421097 -53.89742279]
[29.45195198 -40.88846970]
[36.91969299 -27.87951660]
[44.38743210 -14.87056446]
[51.85517502 -1.86161244]
[63.44591141 1.59980559]
[69.77387238 12.37666130]
[66.97640991 24.96780968]
[74.24964142 38.08650208]
[87.18775177 45.46583939]
[87.11231995 61.28686523]
[94.38555145 74.40556335]
[101.65878296 87.52425385]
[109.22315979 100.47724915]
[117.07491302 113.25809479]
[124.92667389 126.03894043]
[132.77842712 138.81977844]
[140.63018799 151.60061646]
[148.48193359 164.38146973]
[156.33369446 177.16230774]
[164.18545532 189.94314575]
[172.03720093 202.72399902]
[178.00849915 188.96377563]
[192.44912720 184.90570068]
[204.71401978 193.54124451]
[205.76193237 208.50459290]
[194.82038879 218.76533508]
[179.95648193 216.76051331]
[186.83589172 230.08995056]
[193.71530151 243.41937256]
[200.59471130 256.74880981]
[207.47413635 270.07824707]
[223.19630432 279.66442871]
[221.68594360 297.14828491]
[228.76306152 310.37380981]
[235.84016418 323.59933472]
[242.91726685 336.82485962]
[249.99436951 350.05038452]
[263.69686890 343.93197632]
[277.80093384 338.80670166]
[292.23471069 334.70065308]
[306.92462158 331.63476562]
[321.79580688 329.62466431]
[336.77252197 328.68057251]
[351.77844238 328.80731201]
[366.73706055 330.00427246]
[381.57220459 332.26531982]
[396.20822144 335.57891846]
[410.57055664 339.92822266]
[424.58602905 345.29101562]
[438.18322754 351.64004517]
[451.29281616 358.94287109]
[463.84805298 367.16235352]
[475.78488159 376.25656128]
[487.04257202 386.17916870]
[497.56365967 396.87963867]
[507.29461670 408.30337524]
[516.18579102 420.39221191]
[524.19189453 433.08456421]
[531.27215576 446.31570435]
[537.39044189 460.01824951]
[542.51562500 474.12237549]
[546.62158203 488.55615234]
[549.68731689 503.24609375]
[551.69732666 518.11730957]
[552.64129639 533.09405518]
[552.51440430 548.09997559]
[551.31738281 563.05859375]
[549.05621338 577.89367676]
[545.74249268 592.52966309]
[541.39306641 606.89196777]
[536.03015137 620.90740967]
[529.68109131 634.50457764]
[522.37811279 647.61407471]
[514.15856934 660.16925049]
[505.06423950 672.10601807]
[495.14154053 683.36364746]
[484.44100952 693.88464355]
[473.01718140 703.61547852]
[460.92825317 712.50659180]
[448.23587036 720.51257324]
[435.00466919 727.59277344]
[421.30206299 733.71093750]
[407.19793701 738.83599854]
[392.76409912 742.94183350]
[378.07412720 746.00750732]
[363.20291138 748.01739502]
[348.22616577 748.96124268]
[333.22027588 748.83422852]
[318.26165771 747.63708496]
[303.42657471 745.37579346]
[288.79058838 742.06201172]
[274.42831421 737.71246338]
[260.41293335 732.34942627]
[246.81584167 726.00024414]
[233.70634460 718.69720459]
[221.15126038 710.47753906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[34 145]
[35 144]
[36 143]
[37 142]
[38 141]
[39 135]
[40 134]
[41 133]
[42 132]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[51 126]
[52 125]
[53 124]
[55 122]
[56 121]
[58 118]
[59 117]
[60 116]
[61 115]
[62 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
