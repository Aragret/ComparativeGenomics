%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[177.30006409 702.83557129]
[183.34640503 686.99645996]
[183.34640503 671.99645996]
[183.34640503 656.99645996]
[183.23472595 641.99688721]
[175.30879211 629.38623047]
[182.83978271 615.47235107]
[182.61645508 600.47406006]
[182.39312744 585.47570801]
[174.46719360 572.86505127]
[181.99816895 558.95117188]
[181.77484131 543.95288086]
[181.55151367 528.95452881]
[173.62557983 516.34387207]
[181.15655518 502.43002319]
[180.93322754 487.43167114]
[179.26168823 472.52511597]
[176.15757751 457.84979248]
[173.05346680 443.17449951]
[169.94935608 428.49920654]
[166.84524536 413.82391357]
[163.74113464 399.14859009]
[160.63702393 384.47329712]
[157.53291321 369.79800415]
[147.32931519 358.94738770]
[152.04330444 343.84478760]
[139.45849609 335.96075439]
[136.10142517 321.12213135]
[144.45625305 307.97546387]
[134.25265503 297.12484741]
[138.96664429 282.02224731]
[135.86253357 267.34695435]
[132.75843811 252.67163086]
[129.65432739 237.99633789]
[126.11464691 223.41995239]
[122.14255524 208.95542908]
[111.31119537 198.73139954]
[115.11791229 183.37498474]
[111.14582062 168.91046143]
[107.17372131 154.44593811]
[103.20162964 139.98139954]
[99.22953033 125.51688385]
[95.25743103 111.05236053]
[91.07041931 96.64857483]
[79.62467194 85.72587585]
[83.28727722 71.28861237]
[78.88627625 56.94876480]
[67.44052887 46.02606201]
[71.10312653 31.58879662]
[66.70212555 17.24895096]
[62.30113220 2.90910292]
[57.90013123 -11.43074417]
[53.49913406 -25.77059174]
[45.53277588 -13.06086636]
[30.94402695 -9.57253933]
[18.08998680 -17.30388260]
[14.33403492 -31.82603264]
[21.82774925 -44.82004166]
[36.27838898 -48.84235001]
[49.40737915 -41.58953857]
[46.30326843 -56.26483917]
[43.19915771 -70.94013977]
[40.09504700 -85.61544800]
[35.25748825 -93.36372375]
[37.05568314 -100.53228760]
[34.17041397 -115.25218201]
[23.92311287 -127.30636597]
[29.06781769 -141.28425598]
[26.18254662 -156.00415039]
[23.29727364 -170.72402954]
[20.41200066 -185.44392395]
[16.97993851 -189.37686157]
[15.54333210 -193.79154968]
[15.95152760 -197.84721375]
[17.74201584 -200.88473511]
[15.51689911 -215.71878052]
[13.29178143 -230.55282593]
[3.59295154 -243.05255127]
[9.35667038 -256.78677368]
[3.18757033 -243.11408997]
[-8.24711514 -233.40596008]
[-22.73952675 -229.53684998]
[-37.49140549 -232.25382996]
[-49.65439987 -241.03230286]
[-56.88002014 -254.17727661]
[-57.77311707 -269.15066528]
[-52.16124344 -283.06134033]
[-41.12796783 -293.22338867]
[-26.80364037 -297.67462158]
[-11.95406532 -295.55563354]
[0.55353737 -287.27554321]
[8.30454826 -274.43191528]
[8.75115395 -289.42526245]
[9.08613014 -304.42150879]
[9.30945778 -319.41986084]
[9.53278542 -334.41818237]
[2.00180697 -348.33203125]
[9.92774010 -360.94268799]
[10.15106773 -375.94104004]
[10.37439537 -390.93936157]
[-3.10091925 -398.19708252]
[-11.65027142 -410.89224243]
[-13.30908203 -426.10760498]
[-7.69616938 -440.34677124]
[3.89866090 -450.33767700]
[18.81100082 -453.78451538]
[33.61410522 -449.89520264]
[44.90633011 -439.56350708]
[50.09280014 -425.16354370]
[47.98170471 -410.00430298]
[39.05816269 -397.56933594]
[25.37273216 -390.71603394]
[25.14940453 -375.71771240]
[24.92607689 -360.71936035]
[32.47303009 -347.87829590]
[24.53112221 -334.19485474]
[24.30779457 -319.19653320]
[24.08446693 -304.19818115]
[27.12803268 -297.46331787]
[23.74450493 -288.97863770]
[23.29789734 -273.98529053]
[24.19071388 -259.01190186]
[33.73038864 -247.57319641]
[28.12582588 -232.77793884]
[30.35094261 -217.94389343]
[32.57606125 -203.10984802]
[35.13189316 -188.32919312]
[38.01716614 -173.60931396]
[40.90243912 -158.88941956]
[43.78770828 -144.16952515]
[53.82863617 -133.16819763]
[48.89030457 -118.13745117]
[51.77557755 -103.41755676]
[54.77035141 -88.71955872]
[57.87446213 -74.04425049]
[60.97857285 -59.36894989]
[64.08267975 -44.69364929]
[67.83898163 -30.17158890]
[72.23998260 -15.83174229]
[76.64097595 -1.49189508]
[81.04197693 12.84795189]
[85.44297028 27.18779945]
[96.57393646 37.08481979]
[93.22612000 52.54776382]
[97.62712097 66.88761139]
[108.75807953 76.78462982]
[105.41027069 92.24758148]
[109.36762238 95.69043732]
[111.11431122 101.10546112]
[109.72195435 107.08026123]
[113.69405365 121.54478455]
[117.66615295 136.00930786]
[121.63824463 150.47383118]
[125.61034393 164.93835449]
[129.58244324 179.40287781]
[140.69790649 190.66152954]
[136.60707092 204.98333740]
[140.57917786 219.44786072]
[143.77517700 222.38716125]
[145.67822266 225.84301758]
[146.28468323 229.34553528]
[145.74391174 232.47190857]
[144.32962036 234.89222717]
[147.43373108 249.56752014]
[150.53784180 264.24282837]
[153.64195251 278.91812134]
[164.06758118 290.81842041]
[159.13156128 304.87133789]
[172.09417725 313.50894165]
[175.03314209 328.43600464]
[166.71861267 340.74066162]
[177.14424133 352.64096069]
[172.20822144 366.69387817]
[175.31233215 381.36917114]
[178.41644287 396.04449463]
[181.52055359 410.71978760]
[184.62466431 425.39508057]
[187.72877502 440.07040405]
[190.83288574 454.74569702]
[193.93699646 469.42098999]
[198.97454834 455.29220581]
[209.26416016 444.37780762]
[223.07183838 438.51708984]
[238.07075500 438.69769287]
[251.73332214 444.88916016]
[261.75714111 456.04812622]
[266.45306396 470.29412842]
[265.02972412 485.22644043]
[257.72695923 498.32870483]
[245.77543640 507.39300537]
[231.18919373 510.89178467]
[216.42626953 508.23547363]
[203.97447205 499.87170410]
[195.93156433 487.20834351]
[196.15489197 502.20669556]
[204.09680176 515.89013672]
[196.54985046 528.73120117]
[196.77317810 543.72955322]
[196.99650574 558.72784424]
[204.93841553 572.41131592]
[197.39146423 585.25238037]
[197.61479187 600.25073242]
[197.83811951 615.24902344]
[205.78002930 628.93249512]
[198.23306274 641.77355957]
[201.48989868 650.30767822]
[198.34640503 656.99645996]
[198.34640503 671.99645996]
[198.34640503 686.99645996]
[204.39274597 702.83557129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 205]
[7 203]
[8 202]
[9 201]
[11 199]
[12 198]
[13 197]
[15 195]
[16 194]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[26 171]
[29 168]
[31 166]
[32 165]
[33 164]
[34 163]
[35 158]
[36 157]
[38 155]
[39 154]
[40 153]
[41 152]
[42 151]
[43 150]
[44 147]
[46 145]
[47 144]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[60 137]
[61 136]
[62 135]
[63 134]
[65 133]
[66 132]
[68 130]
[69 129]
[70 128]
[71 127]
[75 126]
[76 125]
[77 124]
[79 122]
[92 121]
[93 120]
[94 118]
[95 117]
[96 116]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
