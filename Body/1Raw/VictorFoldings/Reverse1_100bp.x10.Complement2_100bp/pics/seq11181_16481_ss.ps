%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[44.57805634 927.60961914]
[29.83557892 930.42242432]
[14.91287994 932.02429199]
[-0.09072911 932.40441895]
[-15.07540035 931.56036377]
[-29.94141197 929.49774170]
[-44.58983231 926.23022461]
[-58.92317581 921.77960205]
[-72.84605408 916.17547607]
[-86.26581573 909.45520020]
[-99.09315491 901.66339111]
[-111.24269867 892.85192871]
[-122.63359070 883.07952881]
[-133.19003296 872.41113281]
[-142.84178162 860.91778564]
[-151.52458191 848.67596436]
[-159.18066406 835.76721191]
[-165.75907898 822.27728271]
[-171.21604919 808.29608154]
[-175.51524353 793.91656494]
[-178.62806702 779.23449707]
[-180.53379822 764.34759521]
[-181.21975708 749.35485840]
[-180.68138123 734.35607910]
[-178.92224121 719.45111084]
[-175.95405579 704.73913574]
[-171.79658508 690.31799316]
[-166.47747803 676.28375244]
[-160.03213501 662.72979736]
[-152.50346375 649.74627686]
[-143.94154358 637.41961670]
[-134.40338135 625.83184814]
[-123.95243835 615.06011963]
[-112.65826416 605.17602539]
[-100.59603119 596.24548340]
[-87.84599304 588.32781982]
[-74.49301910 581.47576904]
[-60.62596512 575.73486328]
[-46.33711243 571.14343262]
[-31.72155952 567.73187256]
[-16.87656593 565.52307129]
[-1.90092695 564.53155518]
[13.10569668 564.76403809]
[28.04343605 566.21899414]
[30.70923233 551.45776367]
[33.37502670 536.69653320]
[36.04082108 521.93530273]
[38.70661926 507.17410278]
[41.37241364 492.41287231]
[44.03820801 477.65167236]
[46.15283203 462.80145264]
[47.71335602 447.88287354]
[49.27388000 432.96426392]
[47.34954453 430.00973511]
[46.76066208 425.97631836]
[47.99871063 421.50189209]
[51.25173187 417.41961670]
[53.47684860 402.58557129]
[55.70196533 387.75152588]
[48.40832520 371.79003906]
[59.99861145 357.48104858]
[62.00262451 342.61553955]
[64.00663757 327.75000000]
[66.01065063 312.88446045]
[51.55957413 307.29583740]
[38.85432816 298.41250610]
[28.63267517 286.74520874]
[21.48938370 272.96655273]
[17.84161186 257.87207031]
[17.90454292 242.33447266]
[21.67870331 227.25309753]
[28.94968987 213.50187683]
[39.30034256 201.87866211]
[52.13467789 193.05899048]
[66.71221161 187.55677795]
[82.19065857 185.69438171]
[83.97312164 170.80067444]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.00755310 72.02539062]
[95.23088074 57.02705383]
[95.45420837 42.02871704]
[95.67753601 27.03037834]
[88.14656067 13.11653996]
[96.07249451 0.50587529]
[95.96082306 -14.49370861]
[95.40261841 -29.48331833]
[94.73283386 -44.46835709]
[94.06304169 -59.45339584]
[93.39325714 -74.43843842]
[92.72347260 -89.42347717]
[78.19073486 -93.67531586]
[65.82743073 -102.41759491]
[56.97464371 -114.70201111]
[52.59265137 -129.19604492]
[53.15678406 -144.32748413]
[58.60585022 -158.45498657]
[68.34877777 -170.04611206]
[81.32872009 -177.84353638]
[96.13771057 -181.00144958]
[111.16938782 -179.17732239]
[124.79322052 -172.56900024]
[135.53140259 -161.89332581]
[142.21913147 -148.30828857]
[144.13098145 -133.28752136]
[141.05955505 -118.46035004]
[133.33802795 -105.43511200]
[121.80397034 -95.62469482]
[107.70851135 -90.09326172]
[108.37829590 -75.10822296]
[109.04808044 -60.12318039]
[109.71787262 -45.13814163]
[110.38765717 -30.15310478]
[113.82669067 -23.61132812]
[110.95417786 -14.94031525]
[113.25598907 -12.26935959]
[114.37845612 -8.35079956]
[113.74929810 -3.75107670]
[111.07083130 0.72920299]
[118.61778259 13.57026100]
[110.67588043 27.25370789]
[110.45255280 42.25204468]
[110.22921753 57.25038147]
[110.00588989 72.24871826]
[120.70791626 61.73840332]
[135.65168762 60.44083023]
[148.00511169 68.94922638]
[152.12037659 83.37367249]
[146.11604309 97.11949921]
[132.73719788 103.90230560]
[118.10047150 100.62108612]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[98.86683655 172.58312988]
[97.08437347 187.47685242]
[110.74736023 192.46142578]
[122.94831085 200.36341858]
[133.07447815 210.78199768]
[140.61820984 223.19004822]
[145.20240784 236.96084595]
[146.59933472 251.39968872]
[144.74195862 265.77896118]
[139.72718811 279.37481689]
[131.81072998 291.50363159]
[121.39415741 301.55624390]
[109.00447845 309.02874756]
[95.26749420 313.54763794]
[80.87618256 314.88848877]
[78.87216949 329.75399780]
[76.86814880 344.61953735]
[74.86413574 359.48507690]
[82.04930878 370.19656372]
[80.07412720 382.53683472]
[70.53601074 389.97665405]
[68.31089020 404.81069946]
[66.08577728 419.64474487]
[64.19248199 434.52478027]
[62.63196182 449.44338989]
[61.07143784 464.36199951]
[74.18998718 457.08850098]
[88.11345673 462.66854858]
[92.57797241 476.98876953]
[84.29247284 489.49276733]
[69.36470795 490.96310425]
[58.79942703 480.31744385]
[56.13363266 495.07867432]
[53.46783447 509.83990479]
[50.80204010 524.60113525]
[48.13624573 539.36230469]
[45.47044754 554.12353516]
[42.80465317 568.88476562]
[57.30769348 572.74670410]
[71.44768524 577.77795410]
[85.13053894 583.94500732]
[98.26518250 591.20678711]
[110.76421356 599.51507568]
[122.54444885 608.81445312]
[133.52749634 619.04309082]
[143.64025879 630.13293457]
[152.81542969 642.01019287]
[160.99197388 654.59582520]
[168.11544800 667.80596924]
[174.13847351 681.55285645]
[179.02093506 695.74487305]
[182.73037720 710.28765869]
[185.24208069 725.08441162]
[186.53935242 740.03668213]
[186.61354065 755.04492188]
[185.46417236 770.00927734]
[183.09887695 784.83013916]
[179.53341675 799.40893555]
[174.79150391 813.64855957]
[168.90469360 827.45428467]
[161.91217041 840.73425293]
[153.86047363 853.40002441]
[144.80316162 865.36743164]
[134.80055237 876.55670166]
[123.91916656 886.89349365]
[112.23145294 896.30889893]
[99.81517792 904.74029541]
[86.75296783 912.13165283]
[73.13176727 918.43365479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 179]
[45 178]
[46 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 167]
[52 166]
[53 165]
[57 164]
[58 163]
[59 162]
[61 159]
[62 158]
[63 157]
[64 156]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[83 136]
[84 128]
[85 127]
[86 126]
[87 125]
[89 123]
[90 119]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
