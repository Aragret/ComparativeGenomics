%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[211.36773682 501.29855347]
[210.95845032 486.29019165]
[212.12022400 471.32131958]
[214.84033203 456.55584717]
[219.08897400 442.15560913]
[224.81959534 428.27838135]
[231.96940613 415.07620239]
[240.46008301 402.69369507]
[250.19859314 391.26657104]
[261.07821655 380.92001343]
[272.97976685 371.76736450]
[265.12802124 358.98654175]
[257.27627563 346.20568848]
[249.42451477 333.42483521]
[241.57275391 320.64401245]
[233.53158569 307.98147583]
[225.30278015 295.44009399]
[217.07397461 282.89868164]
[203.62284851 276.50207520]
[202.52136230 260.71926880]
[194.29254150 248.17785645]
[186.06373596 235.63645935]
[177.83493042 223.09506226]
[169.60612488 210.55366516]
[161.37731934 198.01225281]
[152.77874756 185.72142029]
[143.81805420 173.69204712]
[134.85736084 161.66265869]
[128.34063721 158.17637634]
[125.85438538 149.38682556]
[117.07378387 137.22537231]
[108.29318237 125.06391144]
[99.51257324 112.90245056]
[101.98534393 127.69722748]
[100.89476776 142.65753174]
[96.30252075 156.93728638]
[88.46832275 169.72889709]
[77.83522797 180.30892944]
[65.00458527 188.07905579]
[50.70204544 192.59980774]
[35.73647308 193.61553955]
[20.95425224 191.06880188]
[7.19138432 185.10360718]
[-4.77377224 176.05734253]
[-14.26453018 164.44160461]
[-20.74414062 150.91331482]
[-23.84615135 136.23756409]
[-23.39512825 121.24434662]
[-19.41657639 106.78159332]
[-12.13550663 93.66725159]
[-1.96369457 82.64299011]
[10.52359200 74.33229828]
[24.62013817 69.20516968]
[39.52871323 67.55158234]
[54.40616989 69.46504974]
[68.41110992 74.83734894]
[80.75148773 83.36466217]
[90.73001099 94.56560516]
[86.75791931 80.10107422]
[82.78582001 65.63655090]
[78.81372070 51.17203140]
[74.84162903 36.70750427]
[70.86952972 22.24298286]
[59.75406647 10.98434067]
[63.84489441 -3.33747482]
[59.34424591 10.97140884]
[49.14420700 21.96955681]
[35.21425247 27.53339958]
[20.24403572 26.58864594]
[7.12406778 19.31771278]
[-1.61238754 7.12450409]
[-4.27845860 -7.63666296]
[-0.35936931 -22.11563873]
[9.38816643 -33.51675797]
[23.08205223 -39.63864899]
[38.07821274 -39.29926300]
[51.48112106 -32.56413269]
[60.70343781 -20.73255348]
[59.36520386 -35.67274094]
[58.02696991 -50.61292267]
[56.68873596 -65.55310822]
[55.35050201 -80.49329376]
[53.90108109 -95.42310333]
[52.34056091 -110.34170532]
[50.78003693 -125.26031494]
[48.99757004 -140.15402222]
[46.99355698 -155.01956177]
[44.98954391 -169.88508606]
[42.98553085 -184.75061035]
[28.00663185 -186.50659180]
[13.93531799 -191.93328857]
[1.65611839 -200.68954468]
[-8.05908394 -212.22494507]
[-14.59958363 -225.81437683]
[-17.55423927 -240.60359192]
[-16.73731995 -255.66293335]
[-12.20017624 -270.04574585]
[-4.22801733 -282.84790039]
[6.67801952 -293.26467896]
[19.83237267 -300.64123535]
[34.40814972 -304.51391602]
[49.48910141 -304.63925171]
[64.12722778 -301.00936890]
[77.40236664 -293.85244751]
[88.48002625 -283.61837769]
[96.66386414 -270.95046997]
[101.43942261 -256.64508057]
[102.50652313 -241.60139465]
[99.79808044 -226.76512146]
[93.48434448 -213.06884766]
[83.96220398 -201.37356567]
[71.83023834 -192.41442871]
[57.85105896 -186.75462341]
[59.85507202 -171.88909912]
[61.85908508 -157.02357483]
[63.86309814 -142.15805054]
[67.05052185 -138.60144043]
[68.03755188 -133.00477600]
[65.69863892 -126.82083893]
[67.25916290 -111.90222931]
[68.81968689 -96.98362732]
[72.64199829 -90.65814209]
[70.29068756 -81.83152771]
[71.62892151 -66.89134216]
[72.96715546 -51.95115662]
[74.30538940 -37.01097488]
[75.64362335 -22.07078743]
[78.30941772 -7.30957079]
[89.14076996 2.91447091]
[85.33405304 18.27088547]
[89.30615234 32.73540878]
[93.27825165 47.19993210]
[97.25034332 61.66445923]
[101.22244263 76.12898254]
[105.19453430 90.59350586]
[111.67403412 104.12184906]
[120.45463562 116.28330994]
[129.23524475 128.44476318]
[138.01583862 140.60621643]
[146.88673401 152.70196533]
[155.84742737 164.73135376]
[164.80813599 176.76072693]
[168.85427856 178.33638000]
[171.88385010 180.86346436]
[173.72261047 183.90556335]
[174.35589600 187.01451111]
[173.91871643 189.78344727]
[182.14752197 202.32484436]
[190.37632751 214.86625671]
[198.60513306 227.40765381]
[206.83395386 239.94905090]
[215.06275940 252.49044800]
[229.10246277 259.78408813]
[229.61537170 274.66986084]
[237.84417725 287.21127319]
[246.07298279 299.75268555]
[251.79635620 303.06243896]
[254.57232666 308.02139282]
[254.35360718 312.79223633]
[262.20535278 325.57308960]
[270.05709839 338.35394287]
[277.90887451 351.13476562]
[285.76062012 363.91561890]
[299.30444336 357.43618774]
[313.45135498 352.40802002]
[328.04635620 348.88613892]
[342.92953491 346.90917969]
[357.93783569 346.49880981]
[372.90682983 347.65948486]
[387.67248535 350.37850952]
[402.07302856 354.62609863]
[415.95068359 360.35571289]
[429.15338135 367.50457764]
[441.53649902 375.99435425]
[452.96435547 385.73202515]
[463.31170654 396.61090088]
[472.46517944 408.51177979]
[480.32455444 421.30429077]
[486.80364990 434.84826660]
[491.83148193 448.99530029]
[495.35299683 463.59039307]
[497.32958984 478.47363281]
[497.73962402 493.48193359]
[496.57858276 508.45089722]
[493.85919189 523.21649170]
[489.61123657 537.61694336]
[483.88128662 551.49444580]
[476.73211670 564.69696045]
[468.24203491 577.07989502]
[458.50408936 588.50750732]
[447.62496948 598.85455322]
[435.72384644 608.00775146]
[422.93115234 615.86682129]
[409.38702393 622.34558105]
[395.23986816 627.37310791]
[380.64468384 630.89422607]
[365.76141357 632.87048340]
[350.75308228 633.28015137]
[335.78414917 632.11871338]
[321.01861572 629.39898682]
[306.61828613 625.15069580]
[292.74090576 619.42041016]
[279.53854370 612.27087402]
[267.15585327 603.78051758]
[255.72848511 594.04229736]
[245.38166809 583.16290283]
[236.22874451 571.26159668]
[228.37001038 558.46868896]
[221.89157104 544.92443848]
[216.86441040 530.77716064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 156]
[17 155]
[18 154]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[25 147]
[26 142]
[27 141]
[28 140]
[30 139]
[31 138]
[32 137]
[33 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[63 130]
[65 128]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 121]
[84 120]
[85 119]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
