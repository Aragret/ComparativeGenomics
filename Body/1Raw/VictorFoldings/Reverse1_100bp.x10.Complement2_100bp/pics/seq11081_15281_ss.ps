%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[107.54241943 487.34851074]
[111.89090729 472.78280640]
[121.48630524 460.99313354]
[134.86540222 453.77728271]
[133.30487061 438.85867310]
[124.10847473 431.00036621]
[122.68628693 418.58422852]
[130.34257507 408.20425415]
[129.00434875 393.26406860]
[127.66611481 378.32388306]
[126.32788086 363.38369751]
[124.98964691 348.44351196]
[123.65141296 333.50332642]
[122.31317902 318.56314087]
[120.97494507 303.62295532]
[112.13302612 291.63671875]
[118.60828400 277.20129395]
[117.27005005 262.26110840]
[115.93181610 247.32090759]
[104.37303162 237.99726868]
[102.80304718 222.86486816]
[112.66090393 210.80416870]
[111.32266998 195.86398315]
[108.98718262 181.04692078]
[105.66492462 166.41946411]
[102.17291260 163.16140747]
[100.69050598 157.67510986]
[102.46838379 151.30717468]
[99.58311462 136.58728027]
[96.69783783 121.86738586]
[93.81256866 107.14749908]
[90.23486328 103.31161499]
[89.06100464 97.74426270]
[91.06739044 91.94673157]
[88.62166595 77.14746094]
[86.17593384 62.34819412]
[83.73020935 47.54892349]
[81.28448486 32.74965286]
[78.83875275 17.95038033]
[76.39302826 3.15110946]
[65.66885376 13.63882160]
[50.76479721 11.94498348]
[42.66757202 -0.68177223]
[47.34615326 -14.93346977]
[61.35166168 -20.30428886]
[74.35881805 -12.83641911]
[73.02058411 -27.77660370]
[71.68235016 -42.71678925]
[70.34411621 -57.65697479]
[69.00588226 -72.59716034]
[63.57063293 -58.61652756]
[55.54643631 -45.94323730]
[45.23328400 -35.05109024]
[33.01673889 -26.34729576]
[19.35352707 -20.15725327]
[4.75445747 -16.71237946]
[-10.23467445 -16.14146614]
[-25.05348778 -18.46585655]
[-39.14796829 -23.59864998]
[-51.99118805 -31.34795570]
[-63.10298920 -41.42405701]
[-72.06795502 -53.45025635]
[-78.55091858 -66.97693634]
[-82.30950928 -81.49840546]
[-83.20320892 -96.47175598]
[-81.19861603 -111.33721161]
[-76.37065887 -125.53900146]
[-68.89984131 -138.54618835]
[-59.06546783 -149.87248230]
[-47.23519897 -159.09445190]
[-33.85131836 -165.86732483]
[-19.41419792 -169.93789673]
[-4.46357346 -171.15397644]
[10.44161224 -169.47009277]
[24.74411774 -164.94921875]
[37.90923691 -157.76036072]
[49.44477463 -148.17227173]
[58.91947556 -136.54342651]
[65.97911072 -123.30857086]
[70.35976410 -108.96249390]
[71.89761353 -94.04763794]
[69.47610474 -109.68243408]
[81.17641449 -118.89938354]
[86.42313385 -132.95185852]
[80.11093140 -147.19242859]
[85.63203430 -161.36888123]
[99.24713898 -167.29884338]
[104.49385834 -181.35131836]
[109.74057770 -195.40379333]
[114.98728943 -209.45626831]
[117.76290131 -224.19721985]
[117.98622894 -239.19555664]
[118.20955658 -254.19389343]
[118.43288422 -269.19223022]
[118.65621185 -284.19058228]
[109.31677246 -300.06054688]
[118.89746857 -314.76351929]
[118.89746857 -329.76351929]
[104.84027863 -335.54833984]
[94.07040405 -346.27578735]
[88.23017883 -360.31002808]
[88.21018219 -375.51095581]
[94.01346588 -389.56051636]
[104.75508118 -400.31625366]
[118.79699707 -406.13803101]
[133.99794006 -406.13803101]
[148.03985596 -400.31625366]
[158.78146362 -389.56051636]
[164.58474731 -375.51095581]
[164.56475830 -360.31002808]
[158.72453308 -346.27578735]
[147.95465088 -335.54833984]
[133.89746094 -329.76351929]
[133.89746094 -314.76351929]
[142.22642517 -305.99111938]
[142.34918213 -293.49438477]
[133.65455627 -283.96725464]
[133.43122864 -268.96890259]
[133.20790100 -253.97056580]
[132.98457336 -238.97222900]
[132.76124573 -223.97389221]
[139.64292908 -237.30215454]
[149.58479309 -248.53421021]
[161.97891235 -256.98321533]
[176.06736755 -262.13253784]
[190.98864746 -263.66726685]
[205.83030701 -261.49356079]
[219.68478394 -255.74432373]
[231.70486450 -246.77114868]
[241.15550232 -235.12274170]
[247.45881653 -221.51141357]
[250.22932434 -206.76950073]
[249.29763794 -191.79846191]
[244.72070312 -177.51379395]
[236.77842712 -164.78900146]
[225.95646667 -154.40222168]
[212.91659546 -146.98860168]
[198.45620728 -143.00149536]
[183.45954895 -142.68470764]
[168.84367371 -146.05761719]
[155.50236511 -152.91397095]
[144.25144958 -162.83448792]
[135.77890015 -175.21252441]
[130.60282898 -189.29118347]
[129.03976440 -204.20954895]
[123.79304504 -190.15707397]
[118.54632568 -176.10459900]
[113.29960632 -162.05212402]
[119.69685364 -148.65023804]
[114.57611847 -134.32427979]
[100.47560120 -127.70513916]
[95.22888184 -113.65266418]
[98.02567291 -99.02299500]
[85.95008087 -88.80091858]
[83.94606781 -73.93539429]
[85.28430176 -58.99520874]
[86.62253571 -44.05502319]
[87.96076965 -29.11483765]
[89.29900360 -14.17465305]
[91.19229889 0.70538199]
[93.63802338 15.50465298]
[96.08375549 30.30392456]
[98.52947998 45.10319519]
[100.97520447 59.90246582]
[103.42093658 74.70173645]
[105.86666107 89.50100708]
[108.53245544 104.26222229]
[111.41773224 118.98211670]
[114.30300140 133.70201111]
[117.18827820 148.42190552]
[120.29238892 163.09719849]
[123.61464691 177.72465515]
[130.09584045 164.19712830]
[142.80549622 156.23063660]
[157.80535889 156.29370117]
[170.44757080 164.36676025]
[176.81481934 177.94830322]
[174.93411255 192.82992554]
[165.38824463 204.40042114]
[151.13507080 209.07452393]
[136.59112549 205.40391541]
[126.26285553 194.52575684]
[127.60108948 209.46594238]
[139.44544983 219.58270264]
[140.58978271 234.75323486]
[130.87199402 245.98268127]
[132.21023560 260.92285156]
[133.54846191 275.86303711]
[142.48609924 288.91790771]
[135.91513062 302.28469849]
[137.25335693 317.22488403]
[138.59159851 332.16506958]
[139.92982483 347.10525513]
[141.26806641 362.04544067]
[142.60629272 376.98562622]
[143.94453430 391.92581177]
[145.28276062 406.86599731]
[156.22256470 421.67825317]
[148.22348022 437.29815674]
[149.78399658 452.21676636]
[164.36672974 456.50772095]
[176.19418335 466.05654907]
[183.46278381 479.40704346]
[185.06410217 494.52340698]
[180.75393677 509.10046387]
[171.18959045 520.91534424]
[157.82952881 528.16638184]
[142.71109009 529.74780273]
[128.13969421 525.41845703]
[116.33739471 515.83862305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 191]
[15 190]
[17 188]
[18 187]
[19 186]
[22 183]
[23 182]
[24 172]
[25 171]
[28 170]
[29 169]
[30 168]
[31 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[81 154]
[83 152]
[84 151]
[87 148]
[88 147]
[89 146]
[90 145]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
