%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[52.71733093 607.59851074]
[40.59732819 616.49542236]
[27.17817116 623.27600098]
[12.82594299 627.75524902]
[-2.06781530 629.81091309]
[-17.09679222 629.38696289]
[-31.85098457 626.49499512]
[-45.92789078 621.21380615]
[-58.94347763 613.68756104]
[-70.54267120 604.12158203]
[-80.40904236 592.77673340]
[-88.27342987 579.96264648]
[-93.92127991 566.02880859]
[-97.19851685 551.35540771]
[-98.01573181 536.34265137]
[-96.35064697 521.40020752]
[-92.24866486 506.93563843]
[-85.82170868 493.34356689]
[-77.24510193 480.99481201]
[-66.75282288 470.22625732]
[-54.63110352 461.33166504]
[-41.21063995 454.55368042]
[-26.85755157 450.07720947]
[-11.96339703 448.02441406]
[3.06549788 448.45123291]
[5.95077038 433.73135376]
[0.80606568 419.75347900]
[11.05336475 407.69927979]
[13.93863678 392.97940063]
[16.82390976 378.25949097]
[19.70918274 363.53961182]
[22.59445381 348.81973267]
[25.47972679 334.09982300]
[20.33502197 320.12194824]
[30.58232117 308.06774902]
[33.46759415 293.34786987]
[32.01743317 290.94885254]
[31.43017197 287.83090210]
[31.98441315 284.31973267]
[33.83579254 280.83593750]
[36.98768616 277.84936523]
[40.74398804 263.32730103]
[44.50028610 248.80525208]
[48.25658798 234.28320312]
[52.01288986 219.76113892]
[55.76918793 205.23907471]
[41.71681976 210.48606873]
[28.77515411 202.90232849]
[26.48430061 188.07829285]
[36.53299713 176.94169617]
[51.51371384 177.70202637]
[60.38291550 189.79716492]
[65.20891571 175.59471130]
[64.38456726 168.25016785]
[70.21393585 161.21765137]
[75.25084686 147.08862305]
[80.28776550 132.95959473]
[85.32468414 118.83056641]
[90.36159515 104.70153809]
[93.24687195 89.98165131]
[93.91665649 74.99661255]
[94.58644104 60.01156998]
[82.54698944 47.32020187]
[83.39460754 30.18554688]
[96.11698914 19.18646431]
[96.56359863 4.19311476]
[97.01020050 -10.80023479]
[97.45681000 -25.79358482]
[97.90341187 -40.78693390]
[98.35002136 -55.78028488]
[98.79662323 -70.77363586]
[99.24323273 -85.76698303]
[99.46656036 -100.76531982]
[99.46656036 -115.76531982]
[99.46656036 -130.76531982]
[98.79677582 -145.75036621]
[97.45854187 -160.69055176]
[96.12030792 -175.63073730]
[94.78207397 -190.57092285]
[93.44384003 -205.51110840]
[92.10560608 -220.45129395]
[89.10132599 -224.71994019]
[88.13179779 -229.26013184]
[88.95970917 -233.25132751]
[91.05648804 -236.08607483]
[90.38670349 -251.07112122]
[82.04090881 -264.51202393]
[89.20219421 -277.57211304]
[88.53240967 -292.55712891]
[87.86262512 -307.54217529]
[87.19284058 -322.52722168]
[72.38735199 -325.33688354]
[58.62915039 -331.48577881]
[46.66019821 -340.64224243]
[37.12596512 -352.31250000]
[30.54062271 -365.86721802]
[27.25930595 -380.57534790]
[27.45897293 -395.64376831]
[31.12885857 -410.25979614]
[38.07104874 -423.63525391]
[47.91115952 -435.04879761]
[60.11852646 -443.88491821]
[74.03482056 -449.66708374]
[88.90956116 -452.08346558]
[103.94055939 -451.00378418]
[118.31722260 -446.48620605]
[131.26423645 -438.77441406]
[142.08337402 -428.28430176]
[150.19117737 -415.58151245]
[155.15040588 -401.35116577]
[156.69361877 -386.36068726]
[154.73757935 -371.41842651]
[149.38778687 -357.33026123]
[140.93273926 -344.85592651]
[129.82841492 -334.66815186]
[116.67366028 -327.31634521]
[102.17787933 -323.19699097]
[102.84766388 -308.21197510]
[103.51744843 -293.22692871]
[104.18723297 -278.24188232]
[112.48511505 -265.87280273]
[105.37174225 -251.74090576]
[106.04152679 -236.75585938]
[107.04579163 -221.78952026]
[108.38402557 -206.84933472]
[109.72225952 -191.90914917]
[111.06049347 -176.96896362]
[112.39872742 -162.02877808]
[113.73696136 -147.08859253]
[124.16103363 -157.87463379]
[139.15586853 -158.26844788]
[150.13172913 -148.04443359]
[150.80116272 -133.05938721]
[140.78067017 -121.89739990]
[125.81044769 -120.95259094]
[114.46656036 -130.76531982]
[114.46656036 -115.76531982]
[114.46656036 -100.76531982]
[117.15024567 -96.81476593]
[117.38070679 -91.13639832]
[114.23657990 -85.32038116]
[113.78997803 -70.32702637]
[113.34336853 -55.33367920]
[112.89676666 -40.34032822]
[112.45015717 -25.34697914]
[112.00355530 -10.35362911]
[111.55694580 4.63972044]
[111.11034393 19.63306999]
[121.17153168 27.68304062]
[124.81352997 40.24560165]
[120.49150848 52.79671860]
[109.57147980 60.68135452]
[108.90169525 75.66639709]
[108.23191071 90.65143585]
[115.65294647 77.61578369]
[126.40585327 67.15753937]
[139.64262390 60.10147858]
[154.31935120 57.00408173]
[169.27854919 58.10961914]
[183.34049988 63.33089828]
[195.39619446 72.25614929]
[204.49487305 84.18149567]
[209.91900635 98.16645050]
[211.24078369 113.10810089]
[208.35598755 127.82808685]
[201.49212646 141.16552734]
[191.19050598 152.06857300]
[178.26354980 159.67738342]
[163.73074341 163.39186096]
[148.73818970 162.91909790]
[134.46827698 158.29637146]
[122.04638672 149.88824463]
[112.45216370 138.35781860]
[106.44223785 124.61441803]
[104.49063110 109.73845673]
[99.45371246 123.86748505]
[94.41679382 137.99652100]
[89.37988281 152.12554932]
[84.34296417 166.25457764]
[79.41136932 180.42071533]
[74.58537292 194.62316895]
[70.29124451 208.99537659]
[66.53495026 223.51744080]
[62.77864838 238.03948975]
[59.02234650 252.56155396]
[55.26604462 267.08361816]
[51.50974655 281.60568237]
[48.18748474 296.23312378]
[45.30221176 310.95303345]
[50.24054337 325.98376465]
[40.19961929 336.98510742]
[37.31434631 351.70498657]
[34.42907333 366.42489624]
[31.54380035 381.14477539]
[28.65852737 395.86465454]
[25.77325630 410.58456421]
[30.71158600 425.61529541]
[20.67066193 436.61663818]
[17.78538895 451.33651733]
[31.86331177 456.61495972]
[44.88034821 464.13870239]
[56.48138809 473.70248413]
[66.34994507 485.04537964]
[74.21679688 497.85797119]
[79.86733246 511.79071045]
[83.14739227 526.46350098]
[83.96750641 541.47607422]
[82.30529785 556.41888428]
[78.20610809 570.88421631]
[71.78176880 584.47753906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 199]
[26 198]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[35 189]
[36 188]
[41 187]
[42 186]
[43 185]
[44 184]
[45 183]
[46 182]
[52 181]
[53 180]
[55 179]
[56 178]
[57 177]
[58 176]
[59 175]
[60 154]
[61 153]
[62 152]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[72 141]
[73 138]
[74 137]
[75 136]
[76 129]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[85 123]
[86 122]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
