%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[49.95295715 635.85388184]
[36.94526291 643.34161377]
[23.35662460 649.71466064]
[9.28235912 654.92828369]
[-5.17881060 658.94586182]
[-19.92544937 661.73925781]
[-34.85411835 663.28894043]
[-49.86009979 663.58392334]
[-64.83814240 662.62225342]
[-79.68317413 660.41052246]
[-94.29107666 656.96441650]
[-108.55937195 652.30798340]
[-122.38799286 646.47399902]
[-135.67993164 639.50323486]
[-148.34193420 631.44470215]
[-160.28521729 622.35491943]
[-171.42599487 612.29760742]
[-181.68612671 601.34332275]
[-190.99362183 589.56890869]
[-199.28320312 577.05694580]
[-206.49673462 563.89520264]
[-212.58361816 550.17596436]
[-217.50114441 535.99554443]
[-221.21482849 521.45336914]
[-223.69862366 506.65142822]
[-224.93510437 491.69357300]
[-224.91558838 476.68469238]
[-223.64022827 461.73010254]
[-221.11795044 446.93466187]
[-217.36647034 432.40219116]
[-212.41209412 418.23461914]
[-206.28956604 404.53128052]
[-199.04183960 391.38833618]
[-190.71975708 378.89794922]
[-181.38166809 367.14776611]
[-171.09310913 356.22018433]
[-159.92622375 346.19186401]
[-147.95933533 337.13314819]
[-135.27641296 329.10757446]
[-121.96640015 322.17144775]
[-108.12266541 316.37338257]
[-93.84230804 311.75408936]
[-79.22549438 308.34594727]
[-64.37476349 306.17288208]
[-49.39427567 305.25009155]
[-34.38911057 305.58413696]
[-19.46451950 307.17257690]
[-4.72519445 310.00433350]
[9.72548103 314.05950928]
[14.97219944 300.00704956]
[20.21891785 285.95455933]
[25.46563530 271.90209961]
[24.86032677 264.53628540]
[30.89649391 257.68045044]
[36.35185242 243.70764160]
[31.78370285 232.50682068]
[36.21429443 220.82119751]
[47.77844620 215.10864258]
[53.44123077 201.21861267]
[59.10401917 187.32859802]
[64.76680756 173.43856812]
[70.42958832 159.54853821]
[76.09237671 145.65850830]
[81.33909607 131.60603333]
[78.10797119 117.06612396]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.88886261 77.87646484]
[103.28985596 63.53662109]
[107.69085693 49.19677353]
[112.09185791 34.85692596]
[116.49285126 20.51708031]
[102.22021484 25.13137054]
[89.63008118 16.97731018]
[88.00344086 2.06577039]
[98.53939056 -8.61101818]
[113.47121429 -7.18252420]
[121.79149628 5.29658556]
[127.24685669 -8.67621231]
[132.70220947 -22.64900970]
[138.15756226 -36.62180710]
[142.02188110 -51.11550140]
[144.24699402 -65.94954681]
[146.47210693 -80.78359222]
[148.69721985 -95.61763000]
[141.56175232 -112.59310150]
[153.02088928 -125.88426971]
[155.02490234 -140.74980164]
[157.02891541 -155.61532593]
[159.03292847 -170.48085022]
[161.03694153 -185.34638977]
[162.15258789 -200.30484009]
[162.37591553 -215.30317688]
[162.59924316 -230.30151367]
[162.82257080 -245.29985046]
[163.04589844 -260.29818726]
[163.26922607 -275.29653931]
[163.49255371 -290.29486084]
[163.71588135 -305.29321289]
[149.87965393 -311.65548706]
[139.83229065 -323.09970093]
[135.31454468 -337.64309692]
[137.10916138 -352.76589966]
[144.90519714 -365.84802246]
[157.35194397 -374.62289429]
[172.29293823 -377.57019043]
[187.13954163 -374.17935181]
[199.31951904 -365.03778076]
[206.72259521 -351.72933960]
[208.06614685 -336.55981445]
[203.11740112 -322.15737915]
[192.73374939 -311.01739502]
[178.71421814 -305.06988525]
[178.49089050 -290.07153320]
[178.26756287 -275.07321167]
[178.04423523 -260.07485962]
[177.82090759 -245.07652283]
[177.59757996 -230.07818604]
[177.37425232 -215.07984924]
[177.15092468 -200.08151245]
[187.19297791 -211.22409058]
[201.84225464 -214.44879150]
[215.63493347 -208.55288696]
[223.42669678 -195.73538208]
[222.31141663 -180.77690125]
[212.70503235 -169.25659180]
[198.19052124 -165.47123718]
[184.18142700 -170.83268738]
[175.90246582 -183.34237671]
[173.89845276 -168.47683716]
[171.89443970 -153.61131287]
[169.89042664 -138.74578857]
[167.88641357 -123.88025665]
[174.96870422 -114.07373810]
[173.42079163 -101.67262268]
[163.53126526 -93.39251709]
[161.30615234 -78.55847168]
[159.08103943 -63.72442627]
[156.85591125 -48.89038467]
[166.13032532 -60.67959213]
[178.99990845 -68.38502502]
[193.77146912 -70.99288940]
[208.50155640 -68.16008759]
[221.25215149 -60.25931931]
[230.34571838 -48.33006668]
[234.58583069 -33.94182587]
[233.41462708 -18.98761940]
[226.98620605 -5.43492937]
[216.14633179 4.93315315]
[202.32118225 10.75253010]
[187.32968140 11.25756168]
[173.14422607 6.38180256]
[161.63116455 -3.23325706]
[154.30523682 -16.32259178]
[152.13037109 -31.16645050]
[146.67500305 -17.19365311]
[141.21965027 -3.22085524]
[135.76429749 10.75194263]
[130.83270264 24.91807747]
[126.43170166 39.25792313]
[122.03070831 53.59777069]
[117.62970734 67.93762207]
[113.22870636 82.27746582]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[106.96224976 126.87081146]
[95.54154968 136.43203735]
[96.53843689 140.65817261]
[96.17519379 144.58659363]
[94.71241760 147.82630920]
[92.51093292 150.11105347]
[89.98240662 151.32130432]
[84.31961823 165.21131897]
[78.65682983 179.10134888]
[72.99404144 192.99137878]
[67.33126068 206.88140869]
[61.66847229 220.77143860]
[64.59658813 238.95129395]
[50.32464981 249.16299438]
[44.86929321 263.13580322]
[39.51810837 277.14883423]
[34.27138901 291.20129395]
[29.02466965 305.25375366]
[23.77795219 319.30624390]
[37.35029221 325.71389771]
[50.33884811 333.23480225]
[62.65251160 341.81619263]
[74.20491028 351.39785767]
[84.91501617 361.91262817]
[94.70769501 373.28671265]
[103.51426697 385.44036865]
[111.27294922 398.28829956]
[117.92932892 411.74038696]
[123.43670654 425.70233154]
[127.75646210 440.07614136]
[130.85827637 454.76098633]
[132.72041321 469.65390015]
[133.32980347 484.65042114]
[132.68217468 499.64532471]
[130.78205872 514.53344727]
[127.64279938 529.21032715]
[123.28639984 543.57305908]
[117.74343109 557.52093506]
[111.05276489 570.95599365]
[103.26134491 583.78411865]
[94.42380524 595.91522217]
[84.60214996 607.26434326]
[73.86526489 617.75170898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 186]
[50 185]
[51 184]
[52 183]
[54 182]
[55 181]
[58 179]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[64 169]
[66 167]
[67 164]
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 139]
[83 138]
[84 137]
[85 136]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
