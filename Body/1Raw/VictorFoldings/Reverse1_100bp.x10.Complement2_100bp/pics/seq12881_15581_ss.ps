%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[130.08584595 501.65371704]
[124.19499969 487.80154419]
[121.21349335 473.04705811]
[121.26342773 457.99438477]
[124.34275818 443.25997925]
[130.32537842 429.44720459]
[138.96632385 417.12164307]
[149.91172791 406.78808594]
[162.71339417 398.86959839]
[176.84710693 393.69052124]
[174.62199402 378.85647583]
[172.39688110 364.02243042]
[170.17176819 349.18838501]
[167.94664001 334.35433960]
[164.29855347 319.80471802]
[159.26164246 305.67568970]
[154.22473145 291.54666138]
[149.18780518 277.41763306]
[144.15089417 263.28860474]
[133.35983276 257.82238770]
[129.04786682 246.09248352]
[134.03848267 234.19892883]
[129.21249390 219.99647522]
[124.38648987 205.79402161]
[119.56049347 191.59156799]
[114.73449707 177.38911438]
[109.60611725 172.06730652]
[109.94408417 162.93913269]
[105.33007050 148.66639709]
[102.89855957 147.27143860]
[100.87310791 144.82928467]
[99.65534210 141.48976135]
[99.58528137 137.54518127]
[100.89373779 133.40490723]
[97.13743591 118.88285065]
[84.70613098 111.43913269]
[81.07765961 97.41128540]
[88.34050751 84.87345123]
[84.58420563 70.35139465]
[80.82790375 55.82933426]
[77.07160187 41.30727386]
[73.31529999 26.78521538]
[62.36869431 15.36232853]
[66.67230225 1.10300696]
[61.53033829 -12.98813438]
[55.05084229 -26.51647949]
[48.57134628 -40.04482651]
[42.09185410 -53.57316971]
[35.61235809 -67.10151672]
[29.13286018 -80.62985992]
[17.24919701 -85.64397430]
[12.13091946 -97.04515839]
[16.02428436 -108.49803162]
[9.74692345 -122.12134552]
[3.46956277 -135.74465942]
[-7.99134874 -135.99319458]
[-18.48447227 -140.48037720]
[-26.50893402 -148.52276611]
[-30.93255043 -158.93144226]
[-31.15148735 -170.18768311]
[-27.17239189 -180.66455078]
[-19.60592270 -188.86206055]
[-25.26870918 -202.75209045]
[-38.20228958 -206.51202393]
[-46.48794937 -216.88305664]
[-47.27585602 -229.93913269]
[-40.50200272 -240.90017700]
[-45.95735931 -254.87297058]
[-51.41271591 -268.84576416]
[-56.86807251 -282.81857300]
[-71.46510315 -279.26748657]
[-86.40520477 -277.69375610]
[-101.42176819 -278.12542725]
[-116.24679565 -280.55484009]
[-130.61572266 -284.93859863]
[-144.27210999 -291.19851685]
[-156.97224426 -299.22283936]
[-168.48948669 -308.86840820]
[-178.61830139 -319.96301270]
[-187.17790222 -332.30871582]
[-194.01556396 -345.68521118]
[-199.00924683 -359.85369873]
[-202.06982422 -374.56140137]
[-203.14270020 -389.54580688]
[-202.20869446 -404.53952026]
[-199.28450012 -419.27493286]
[-194.42230225 -433.48907471]
[-187.70886230 -446.92831421]
[-179.26399231 -459.35281372]
[-169.23840332 -470.54080200]
[-157.81101990 -480.29263306]
[-145.18576050 -488.43426514]
[-131.58795166 -494.82043457]
[-117.26026154 -499.33712769]
[-102.45838165 -501.90377808]
[-87.44646454 -502.47457886]
[-72.49241638 -501.03930664]
[-57.86311722 -497.62359619]
[-43.81964111 -492.28842163]
[-30.61260414 -485.12896729]
[-18.47770882 -476.27304077]
[-7.63151312 -465.87863159]
[1.73241925 -454.13128662]
[9.44697762 -441.24063110]
[15.37448692 -427.43670654]
[19.40916252 -412.96588135]
[21.47900391 -398.08639526]
[21.54706955 -383.06378174]
[19.61214447 -368.16616821]
[15.70876217 -353.65936279]
[9.90658188 -339.80230713]
[2.30914974 -326.84228516]
[-6.94794846 -315.01055908]
[-17.69950867 -304.51831055]
[-29.75365829 -295.55276489]
[-42.89527512 -288.27392578]
[-37.43991852 -274.30114746]
[-31.98456192 -260.32833862]
[-26.52920532 -246.35552979]
[-10.85211468 -240.26721191]
[-4.29998589 -224.41210938]
[-11.37868214 -208.41487122]
[-5.71589613 -194.52485657]
[12.66042137 -191.11840820]
[25.37213135 -177.21368408]
[27.14902306 -158.30728149]
[17.09287834 -142.02201843]
[23.37023926 -128.39871216]
[29.64760017 -114.77539062]
[44.50204468 -105.43128204]
[42.66120529 -87.10935974]
[49.14070129 -73.58100891]
[55.62019730 -60.05266571]
[62.09969330 -46.52432251]
[68.57919312 -32.99597549]
[75.05868530 -19.46763039]
[76.61988831 -34.38616180]
[84.04334259 -47.42043686]
[96.07807159 -56.37394714]
[110.69600677 -59.73787308]
[125.43376923 -56.94532776]
[137.80778503 -48.46690750]
[145.73283386 -35.73137665]
[147.87338257 -20.88489342]
[143.86871338 -6.42935276]
[134.39369202 5.19923449]
[121.04502869 12.04124546]
[106.07220459 12.94368267]
[91.99839020 7.75446844]
[81.19435883 -2.65329385]
[91.87229156 7.73087740]
[87.83736420 23.02891350]
[91.59366608 37.55097198]
[95.34996033 52.07303238]
[99.10626221 66.59509277]
[102.86256409 81.11714935]
[115.29386902 88.56086731]
[118.92234039 102.58871460]
[111.65949249 115.12654877]
[115.41579437 129.64860535]
[119.60280609 144.05238342]
[124.21681213 158.32511902]
[128.93695068 172.56311035]
[133.76295471 186.76556396]
[138.58894348 200.96801758]
[143.41494751 215.17048645]
[148.24093628 229.37294006]
[162.36714172 241.18530273]
[158.27992249 258.25167847]
[163.31683350 272.38070679]
[168.35375977 286.50973511]
[173.39067078 300.63876343]
[178.42758179 314.76779175]
[181.53236389 300.09265137]
[190.27156067 287.90139771]
[203.17245483 280.24850464]
[218.06103516 278.42361450]
[232.42829895 282.73425293]
[243.85313416 292.45397949]
[250.41021729 305.94488525]
[250.99459839 320.93350220]
[245.50779724 334.89398193]
[234.87440491 345.47372437]
[220.88636780 350.88989258]
[205.90090942 350.22973633]
[192.44332886 343.60449219]
[182.78068542 332.12921143]
[185.00581360 346.96325684]
[187.23092651 361.79730225]
[189.45603943 376.63134766]
[191.68115234 391.46539307]
[206.71238708 392.26971436]
[221.27394104 396.08367920]
[234.76950073 402.75109863]
[246.64646912 411.99896240]
[256.41845703 423.44854736]
[263.68533325 436.63101196]
[268.14953613 451.00653076]
[269.62820435 465.98648071]
[268.06085205 480.95736694]
[263.51159668 495.30621338]
[256.16677856 508.44543457]
[246.32716370 519.83691406]
[234.39564514 529.01428223]
[220.86082458 535.60168457]
[206.27694702 539.32934570]
[191.24121094 540.04461670]
[176.36932373 537.71826172]
[162.27027893 532.44555664]
[149.52143860 524.44232178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 191]
[11 190]
[12 189]
[13 188]
[14 187]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[28 162]
[29 161]
[34 160]
[35 159]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[44 150]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[50 131]
[53 129]
[54 128]
[55 127]
[62 123]
[63 122]
[67 119]
[68 118]
[69 117]
[70 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
