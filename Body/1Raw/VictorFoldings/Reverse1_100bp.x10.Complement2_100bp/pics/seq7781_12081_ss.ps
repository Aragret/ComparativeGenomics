%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[117.37942505 664.19104004]
[106.00394440 654.40246582]
[95.40133667 643.78161621]
[85.63233948 632.38934326]
[76.75291443 620.29089355]
[68.81391907 607.55548096]
[61.86082077 594.25616455]
[55.93345261 580.46911621]
[51.06576920 566.27319336]
[47.28564835 551.74987793]
[44.61474609 536.98217773]
[43.06835556 522.05487061]
[42.65534210 507.05328369]
[43.37806320 492.06344604]
[45.23238754 477.17120361]
[48.20768356 462.46185303]
[52.28691864 448.01965332]
[57.44672394 433.92733765]
[63.65753937 420.26559448]
[70.88379669 407.11270142]
[79.08409882 394.54397583]
[88.21147919 382.63146973]
[98.21364594 371.44332886]
[109.03332520 361.04373169]
[120.60852051 351.49218750]
[132.87295532 342.84341431]
[145.75634766 335.14694214]
[159.18493652 328.44689941]
[153.52214050 314.55688477]
[147.85935974 300.66683960]
[142.42330933 295.65972900]
[142.21736145 286.52761841]
[136.76200867 272.55480957]
[131.66958618 286.66394043]
[119.32171631 295.18038940]
[104.32384491 294.92776489]
[92.26980591 286.00027466]
[87.65545654 271.72766113]
[92.20183563 257.43322754]
[104.21325684 248.44848633]
[119.20976257 248.12449646]
[131.59872437 256.58303833]
[127.84243011 242.06097412]
[124.08612823 227.53890991]
[120.32982635 213.01684570]
[110.06947327 206.60969543]
[106.82118225 194.54187012]
[112.85299683 183.14099121]
[109.31332397 168.56462097]
[105.77365112 153.98825073]
[102.23397827 139.41186523]
[98.58589172 124.86225128]
[94.82958984 110.34019470]
[89.74338531 124.45155334]
[78.74444580 134.65072632]
[64.28996277 138.65921021]
[49.60910416 135.58148193]
[37.98161316 126.10511780]
[32.00510025 112.34716797]
[33.01473236 97.38118744]
[40.78495789 84.55061340]
[53.57988739 76.72183228]
[68.54109955 75.64381409]
[82.32622528 81.55738831]
[91.85563660 93.14147186]
[90.51740265 78.20128632]
[89.17916870 63.26110077]
[87.84093475 48.32091522]
[84.35620880 42.70235443]
[84.24827576 37.02033234]
[86.69206238 32.91704559]
[85.79924774 17.94363976]
[84.90643311 2.97023320]
[84.01361847 -12.00317287]
[83.12079620 -26.97657776]
[82.22798157 -41.94998550]
[73.68299866 -55.26515579]
[80.64904022 -68.43039703]
[79.75622559 -83.40380096]
[78.86341095 -98.37720490]
[77.97059631 -113.35061646]
[77.07778168 -128.32402039]
[68.53279877 -141.63919067]
[75.49884033 -154.80442810]
[74.60601807 -169.77783203]
[73.37904358 -184.72756958]
[71.81851959 -199.64617920]
[70.25800323 -214.56477356]
[61.12698746 -227.48512268]
[67.49822235 -240.94827271]
[65.93769836 -255.86688232]
[51.05419159 -258.39349365]
[37.40477371 -264.84298706]
[26.00231743 -274.73675537]
[17.69296455 -287.34060669]
[13.09332561 -301.71926880]
[12.54472065 -316.80575562]
[16.08786201 -331.48049927]
[23.45982361 -344.65460205]
[34.11355972 -355.35043335]
[47.25848770 -362.77426147]
[61.91917038 -366.37524414]
[77.00769043 -365.88610840]
[91.40436554 -361.34320068]
[104.04088593 -353.08358765]
[113.97953033 -341.72021484]
[120.48278046 -328.09634399]
[123.06805420 -313.22290039]
[121.54351044 -298.20364380]
[116.02227783 -284.15307617]
[106.91407013 -272.11383057]
[94.89477539 -262.97933960]
[80.85630035 -257.42739868]
[82.41682434 -242.50880432]
[91.43621826 -230.65553284]
[85.17660522 -216.12530518]
[86.73712921 -201.20669556]
[88.29765320 -186.28810120]
[90.79174042 -183.79573059]
[92.20255280 -179.97151184]
[91.91724396 -175.33773804]
[89.57942963 -170.67065430]
[90.47224426 -155.69725037]
[98.95336914 -143.45307922]
[92.05118561 -129.21684265]
[92.94400024 -114.24343109]
[93.83681488 -99.27002716]
[94.72962952 -84.29661560]
[95.62245178 -69.32321167]
[104.10356903 -57.07903671]
[97.20139313 -42.84280014]
[98.09420776 -27.86939430]
[98.98702240 -12.89598846]
[99.87983704 2.07741737]
[100.77265167 17.05082321]
[101.66546631 32.02422714]
[102.78112030 46.98268127]
[104.11935425 61.92286682]
[105.45758820 76.86305237]
[106.79582214 91.80323792]
[109.35165405 106.58389282]
[113.10795593 121.10594940]
[118.28666687 128.63049316]
[116.81035614 135.87219238]
[120.35002899 150.44857788]
[123.88970184 165.02494812]
[127.42937469 179.60131836]
[140.44540405 192.62686157]
[134.85188293 209.26055908]
[138.60818481 223.78260803]
[142.36448669 238.30467224]
[146.12078857 252.82673645]
[150.73480225 267.09945679]
[156.19015503 281.07226562]
[161.74938965 295.00405884]
[167.41217041 308.89407349]
[173.07495117 322.78411865]
[187.36029053 318.18554688]
[201.95248413 314.68054199]
[216.76797485 312.28918457]
[231.72189331 311.02514648]
[246.72857666 310.89569092]
[261.70208740 311.90155029]
[276.55661011 314.03695679]
[291.20712280 317.28967285]
[305.56967163 321.64111328]
[319.56198120 327.06628418]
[333.10391235 333.53414917]
[346.11788940 341.00765991]
[358.52941895 349.44403076]
[370.26733398 358.79486084]
[381.26443481 369.00668335]
[391.45773315 380.02093506]
[400.78884888 391.77456665]
[409.20431519 404.20025635]
[416.65594482 417.22677612]
[423.10104370 430.77957153]
[428.50268555 444.78097534]
[432.82995605 459.15081787]
[436.05804443 473.80676270]
[438.16845703 488.66488647]
[439.14913940 503.64004517]
[438.99444580 518.64648438]
[437.70529175 533.59826660]
[435.28900146 548.40972900]
[431.75949097 562.99597168]
[427.13693237 577.27355957]
[421.44778442 591.16064453]
[414.72467041 604.57769775]
[407.00610352 617.44787598]
[398.33627319 629.69744873]
[388.76486206 641.25622559]
[378.34667969 652.05798340]
[367.14138794 662.04095459]
[355.21319580 671.14782715]
[342.63043213 679.32653809]
[329.46514893 686.53021240]
[315.79275513 692.71752930]
[301.69155884 697.85308838]
[287.24237061 701.90753174]
[272.52795410 704.85754395]
[257.63253784 706.68627930]
[242.64149475 707.38323975]
[227.64065552 706.94445801]
[212.71597290 705.37243652]
[197.95292664 702.67620850]
[183.43608093 698.87109375]
[169.24858093 693.97906494]
[155.47171021 688.02801514]
[142.18435669 681.05206299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 157]
[29 156]
[30 155]
[32 154]
[33 153]
[42 152]
[43 151]
[44 150]
[45 149]
[48 147]
[49 146]
[50 145]
[51 144]
[52 142]
[53 141]
[65 140]
[66 139]
[67 138]
[68 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[84 123]
[85 122]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
