%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[100.66295624 398.83248901]
[102.74897003 413.91784668]
[98.51261902 428.54568481]
[88.68789673 440.18157959]
[74.97697449 446.80960083]
[59.75537109 447.28137207]
[45.66030884 441.51516724]
[35.13384628 430.51000977]
[29.99975967 416.17260742]
[31.14755630 400.98703003]
[38.37837601 387.58422852]
[50.43943405 378.28631592]
[65.24108124 374.70425415]
[67.90687561 359.94305420]
[70.57266998 345.18182373]
[73.23846436 330.42062378]
[75.90425873 315.65939331]
[73.96539307 311.29479980]
[74.74775696 305.66586304]
[78.87545013 300.50119019]
[81.97956085 285.82589722]
[85.08367157 271.15057373]
[87.63950348 256.36993408]
[81.67193604 242.72305298]
[91.18359375 230.08030701]
[93.18760681 215.21476746]
[95.19161987 200.34924316]
[95.97293854 185.36961365]
[95.52633667 170.37625122]
[94.96812439 155.38664246]
[94.29833984 140.40161133]
[93.62855530 125.41657257]
[92.95877075 110.43153381]
[91.95450592 95.46518707]
[90.61627197 80.52500153]
[89.27803802 65.58481598]
[87.93980408 50.64463425]
[86.60157013 35.70444870]
[85.26333618 20.76426315]
[76.32569885 7.70940924]
[82.89667511 -5.65739870]
[69.74380493 -13.67664146]
[63.90321350 -27.73867607]
[67.42117310 -42.37042236]
[78.74478149 -52.00960922]
[77.40654755 -66.94979095]
[76.06831360 -81.88997650]
[74.73007965 -96.83016205]
[61.75217438 -102.04905701]
[52.33391190 -112.30149841]
[48.27129745 -125.54813385]
[50.30266190 -139.18714905]
[57.97518539 -150.56524658]
[69.74428558 -157.49383545]
[68.62863922 -172.45228577]
[67.51299286 -187.41073608]
[66.39733887 -202.36918640]
[65.28169250 -217.32763672]
[56.03541183 -226.32037354]
[55.41413498 -238.80226135]
[63.20618057 -248.05485535]
[62.31336594 -263.02825928]
[53.76838303 -276.34344482]
[60.73442459 -289.50866699]
[59.84160995 -304.48208618]
[53.63890076 -290.82461548]
[43.56587601 -279.71002197]
[30.58263016 -272.19769287]
[15.92664337 -269.00360107]
[0.99483258 -270.43225098]
[-12.78959846 -276.34744263]
[-24.11280441 -286.18539429]
[-31.89553070 -299.00839233]
[-35.39597702 -313.59423828]
[-34.28050232 -328.55270386]
[-28.65542793 -342.45803833]
[-19.05690002 -353.98489380]
[-6.39978838 -362.03457642]
[8.10951138 -365.83984375]
[23.08806610 -365.03805542]
[37.10821533 -359.70556641]
[48.83364487 -350.35064697]
[57.14676666 -337.86499023]
[61.25535965 -323.43746948]
[64.35947418 -338.11276245]
[67.46358490 -352.78808594]
[70.56768799 -367.46337891]
[56.35562897 -372.31875610]
[42.83245850 -378.85183716]
[30.19538498 -386.96734619]
[18.62869644 -396.54696655]
[8.30106926 -407.45098877]
[-0.63688976 -419.52038574]
[-8.05483913 -432.57913208]
[-13.84460258 -446.43685913]
[-17.92174911 -460.89141846]
[-20.22682190 -475.73202515]
[-20.72620583 -490.74227905]
[-19.41261673 -505.70330811]
[-16.30521393 -520.39691162]
[-11.44931126 -534.60876465]
[-4.91572094 -548.13171387]
[3.20027685 -560.76843262]
[12.78032780 -572.33477783]
[23.68472481 -582.66198730]
[35.75445175 -591.59954834]
[48.81349564 -599.01696777]
[62.67141724 -604.80621338]
[77.12612915 -608.88281250]
[91.96683502 -611.18737793]
[106.97711945 -611.68615723]
[121.93807983 -610.37200928]
[136.63154602 -607.26409912]
[150.84324646 -602.40765381]
[164.36592102 -595.87353516]
[177.00239563 -587.75708008]
[188.56835938 -578.17657471]
[198.89517212 -567.27178955]
[207.83222961 -555.20172119]
[215.24920654 -542.14239502]
[221.03793335 -528.28430176]
[225.11399841 -513.82940674]
[227.41796875 -498.98861694]
[227.91622925 -483.97833252]
[226.60151672 -469.01742554]
[223.49301147 -454.32406616]
[218.63604736 -440.11254883]
[212.10144043 -426.59011841]
[203.98449707 -413.95394897]
[194.40359497 -402.38833618]
[183.49841309 -392.06192017]
[171.42802429 -383.12533569]
[158.36842346 -375.70883179]
[144.51007080 -369.92062378]
[130.05505371 -365.84509277]
[115.21417236 -363.54168701]
[100.20385742 -363.04400635]
[85.24299622 -364.35925293]
[82.13888550 -349.68395996]
[79.03477478 -335.00866699]
[75.93066406 -320.33334351]
[74.81501770 -305.37490845]
[75.70783234 -290.40148926]
[84.18895721 -278.15731812]
[77.28677368 -263.92108154]
[78.17958832 -248.94767761]
[88.61843109 -234.84103394]
[80.24015045 -218.44329834]
[81.35579681 -203.48483276]
[82.47144318 -188.52638245]
[83.58708954 -173.56793213]
[84.70274353 -158.60948181]
[99.42615509 -151.95112610]
[108.83686829 -138.69993591]
[110.28913879 -122.41779327]
[103.29226685 -107.54032135]
[89.67026520 -98.16839600]
[91.00849915 -83.22821045]
[92.34673309 -68.28802490]
[93.68496704 -53.34784317]
[106.54138184 -45.87452698]
[112.60369110 -32.10091400]
[109.35517120 -17.22474289]
[97.83686066 -6.99563265]
[106.67877960 4.99059916]
[100.20352173 19.42602921]
[101.54175568 34.36621475]
[102.87998962 49.30640030]
[104.21822357 64.24658203]
[105.55645752 79.18676758]
[106.89469147 94.12695312]
[109.47373199 96.99417114]
[110.77642059 100.98426819]
[110.32960510 105.50172424]
[107.94380951 109.76174927]
[108.61359406 124.74678802]
[109.28337860 139.73182678]
[109.95316315 154.71685791]
[113.46263885 163.15020752]
[110.51968384 169.92965698]
[110.96629333 184.92300415]
[119.05162048 172.28862000]
[132.03634644 164.77883911]
[147.01965332 164.07135010]
[160.65422058 170.32421875]
[169.89407349 182.14053345]
[172.67498779 196.88049316]
[168.37570190 211.25115967]
[157.95669556 222.04209900]
[143.74559021 226.84255981]
[128.91719055 224.58013916]
[116.78419495 215.76025391]
[110.05714417 202.35325623]
[108.05313110 217.21878052]
[106.04911804 232.08432007]
[111.87334442 246.79447937]
[102.50502777 258.37396240]
[115.83432007 251.49427795]
[129.58547974 257.48641968]
[133.62165833 271.93319702]
[124.96752930 284.18496704]
[110.00260925 285.21020508]
[99.75897217 274.25469971]
[96.65486145 288.92999268]
[93.55075073 303.60531616]
[90.66548157 318.32519531]
[87.99967957 333.08642578]
[85.33388519 347.84762573]
[82.66809082 362.60885620]
[80.00229645 377.37005615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[20 205]
[21 204]
[22 203]
[23 197]
[25 195]
[26 194]
[27 193]
[28 181]
[29 180]
[30 178]
[31 177]
[32 176]
[33 175]
[34 171]
[35 170]
[36 169]
[37 168]
[38 167]
[39 166]
[41 164]
[45 160]
[46 159]
[47 158]
[48 157]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[61 146]
[62 145]
[64 143]
[65 142]
[84 141]
[85 140]
[86 139]
[87 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
