%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[70.67875671 649.35888672]
[59.34595108 639.50134277]
[49.33802414 628.30114746]
[40.81280899 615.93493652]
[33.90476227 602.59765625]
[28.72283936 588.49975586]
[25.34876060 573.86352539]
[23.83574104 558.91986084]
[24.20764542 543.90435791]
[26.45860863 529.05389404]
[30.55312538 514.60266113]
[36.42662430 500.77856445]
[43.98646927 487.79965210]
[53.11343002 475.87063599]
[63.66356277 465.17959595]
[75.47047424 455.89520264]
[88.34795380 448.16387939]
[102.09291077 442.10751343]
[116.48855591 437.82165527]
[114.04283142 423.02236938]
[111.59710693 408.22311401]
[109.15137482 393.42382812]
[96.71192932 388.57592773]
[88.22426605 378.13064575]
[85.98837280 364.74893188]
[90.69376373 351.90844727]
[101.21181488 342.99993896]
[98.98669434 328.16589355]
[96.76158142 313.33187866]
[93.52156067 309.82312012]
[92.45130920 304.24176025]
[94.69789124 298.02368164]
[92.91542816 283.12997437]
[91.13295746 268.23623657]
[83.27959442 281.01611328]
[69.81012726 287.61712646]
[54.89821243 285.99389648]
[43.16447449 276.64941406]
[38.24473953 262.47915649]
[41.66344070 247.87393188]
[52.36125183 237.35932922]
[67.02334595 234.19342041]
[81.10651398 239.35717773]
[90.24701691 251.25082397]
[90.47034454 236.25248718]
[90.69367218 221.25415039]
[83.14672089 208.41308594]
[91.08863068 194.72964478]
[91.31195831 179.73130798]
[91.53528595 164.73297119]
[91.75861359 149.73463440]
[91.98194122 134.73629761]
[79.36708069 129.07200623]
[69.85664368 119.03357697]
[64.88154602 106.13136292]
[65.19035339 92.30663300]
[70.73660278 79.63943481]
[80.68579865 70.03567505]
[93.54099274 64.94033051]
[93.98760223 49.94697952]
[94.43420410 34.95362854]
[94.88081360 19.96027946]
[95.21578979 4.96402073]
[95.43911743 -10.03431702]
[95.66244507 -25.03265381]
[95.10423279 -40.02226257]
[93.76599884 -54.96244812]
[84.38684845 -63.81651306]
[83.57981110 -76.28777313]
[91.23323059 -85.65535736]
[90.11758423 -100.61381531]
[89.00193787 -115.57226562]
[87.88629150 -130.53071594]
[72.91849518 -137.55618286]
[63.58950806 -151.09373474]
[62.36756516 -167.39477539]
[69.49175262 -182.00305176]
[82.93250275 -190.97293091]
[81.59426880 -205.91311646]
[80.25603485 -220.85330200]
[78.91780090 -235.79348755]
[77.57956696 -250.73367310]
[75.46494293 -265.58386230]
[72.57967377 -280.30377197]
[69.69439697 -295.02365112]
[66.80912781 -309.74353027]
[51.75065613 -310.32586670]
[37.23254013 -314.36581421]
[24.03772926 -321.64547729]
[12.87779999 -331.77230835]
[4.35459423 -344.20016479]
[-1.07224238 -358.25885010]
[-3.11004782 -373.19015503]
[-1.64892542 -388.18887329]
[3.23232818 -402.44616699]
[11.27047348 -415.19311523]
[22.03202248 -425.74234009]
[34.93661880 -433.52487183]
[49.28833389 -438.12106323]
[64.31320190 -439.28302002]
[79.20094299 -436.94812012]
[93.14868164 -431.24221802]
[105.40423584 -422.47305298]
[115.30668640 -411.11355591]
[122.32199097 -397.77630615]
[126.07183838 -383.18057251]
[126.35398865 -368.11349487]
[123.15324402 -353.38760376]
[116.64220428 -339.79705811]
[107.17199707 -328.07476807]
[95.25334930 -318.85290527]
[81.52902222 -312.62881470]
[84.41429138 -297.90893555]
[87.29956055 -283.18902588]
[90.18483734 -268.46914673]
[98.48018646 -280.96661377]
[112.83195496 -285.32858276]
[126.67871094 -279.56079102]
[133.68989563 -266.30020142]
[130.66009521 -251.60937500]
[118.97449493 -242.20477295]
[103.97559357 -242.38603210]
[92.51975250 -252.07189941]
[93.85798645 -237.13171387]
[95.19622040 -222.19152832]
[96.53445435 -207.25134277]
[97.87268829 -192.31115723]
[110.61399841 -187.39422607]
[120.03903198 -177.41938782]
[124.26702881 -164.29409790]
[122.41862488 -150.56233215]
[114.79804230 -138.91145325]
[102.84474182 -131.64636230]
[103.96038818 -116.68791962]
[105.07604218 -101.72946167]
[106.19168854 -86.77101135]
[116.83940125 -72.82134247]
[108.70618439 -56.30068207]
[110.04441833 -41.36049652]
[119.59492493 -52.92716217]
[134.32261658 -55.77237320]
[147.49418640 -48.59533310]
[153.08775330 -34.67729187]
[148.54605103 -20.38138962]
[135.94544983 -12.24351978]
[121.04678345 -13.98420811]
[110.66078186 -24.80932617]
[110.43745422 -9.81098938]
[110.21412659 5.18734837]
[113.25769043 11.92222023]
[109.87416077 20.40688515]
[109.42755890 35.40023422]
[108.98094940 50.39358521]
[108.53433990 65.38693237]
[122.75291443 72.55543518]
[132.43208313 85.19934845]
[135.64077759 100.79611969]
[131.73884583 116.23405457]
[121.50475311 128.43316650]
[106.98027802 134.95962524]
[106.75695038 149.95796204]
[106.53362274 164.95629883]
[106.31029510 179.95463562]
[106.08696747 194.95297241]
[113.61794281 208.86680603]
[105.69200897 221.47747803]
[105.46868134 236.47581482]
[105.24535370 251.47415161]
[106.02667999 266.45379639]
[107.80914307 281.34750366]
[109.59161377 296.24121094]
[111.59562683 311.10675049]
[113.82073975 325.94079590]
[116.04586029 340.77484131]
[131.15805054 348.37207031]
[138.68937683 363.33135986]
[135.84867859 379.66818237]
[123.95064545 390.97811890]
[126.39637756 405.77737427]
[128.84210205 420.57666016]
[131.28782654 435.37591553]
[146.29696655 434.80233765]
[161.25964355 436.11447144]
[175.93986511 439.29165649]
[190.10610962 444.28372192]
[203.53494263 451.01196289]
[216.01458740 459.37030029]
[227.34823608 469.22686768]
[237.35710144 480.42623901]
[245.88336182 492.79174805]
[252.79252625 506.12841797]
[257.97564697 520.22589111]
[261.35095215 534.86181641]
[262.86523438 549.80535889]
[262.49456787 564.82092285]
[260.24487305 579.67156982]
[256.15158081 594.12316895]
[250.27923584 607.94769287]
[242.72048950 620.92724609]
[233.59452820 632.85705566]
[223.04528809 643.54895020]
[211.23916626 652.83435059]
[198.36233521 660.56677246]
[184.61788940 666.62432861]
[170.22259521 670.91137695]
[155.40350342 673.36035156]
[140.39431763 673.93267822]
[125.43175507 672.61932373]
[110.75180054 669.44091797]
[96.58597565 664.44763184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 181]
[20 180]
[21 179]
[22 178]
[27 174]
[28 173]
[29 172]
[32 171]
[33 170]
[34 169]
[44 168]
[45 167]
[46 166]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[59 154]
[60 153]
[61 152]
[62 151]
[63 149]
[64 148]
[65 147]
[66 139]
[67 138]
[70 136]
[71 135]
[72 134]
[73 133]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[83 115]
[84 114]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
