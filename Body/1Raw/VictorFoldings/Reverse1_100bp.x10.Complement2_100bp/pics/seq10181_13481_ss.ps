%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[86.86375427 371.24804688]
[83.48498535 385.88693237]
[78.14428711 399.92941284]
[70.94115448 413.11380005]
[62.00978470 425.19454956]
[51.51655197 435.94656372]
[39.65694427 445.16955566]
[26.65189934 452.69171143]
[12.74369431 458.37286377]
[-1.80857170 462.10720825]
[-16.73379707 463.82516479]
[-31.75393677 463.49472046]
[-46.58917236 461.12203979]
[-60.96313095 456.75134277]
[-74.60803986 450.46405029]
[-87.26969910 442.37725830]
[-98.71222687 432.64163208]
[-108.72245789 421.43856812]
[-117.11391449 408.97671509]
[-123.73026276 395.48828125]
[-128.44824219 381.22454834]
[-131.17996216 366.45120239]
[-131.87452698 351.44351196]
[-130.51901245 336.48101807]
[-127.13865662 321.84246826]
[-121.79644012 307.80056763]
[-114.59188080 294.61694336]
[-105.65920258 282.53717041]
[-95.16480255 271.78628540]
[-83.30419922 262.56460571]
[-70.29833984 255.04386902]
[-56.38951874 249.36421204]
[-41.83684921 245.63143921]
[-26.91143799 243.91510010]
[-11.89133549 244.24716187]
[2.94364309 246.62142944]
[17.31713104 250.99369812]
[23.59449005 237.37037659]
[29.87185097 223.74705505]
[29.08774376 219.03598022]
[31.25478172 213.78231812]
[36.54428864 209.81587219]
[43.22448349 196.38549805]
[49.90467834 182.95512390]
[56.58487320 169.52474976]
[63.26506805 156.09437561]
[69.94525909 142.66400146]
[76.62545776 129.23362732]
[75.36584473 114.39237213]
[88.43935394 105.48205566]
[76.47547913 114.53001404]
[62.65713120 120.36553955]
[47.82931519 122.63177490]
[32.89875412 121.19014740]
[18.77845383 116.12880707]
[6.33188248 107.75725555]
[-3.67985106 96.58742523]
[-10.64452457 83.30234528]
[-14.13624573 68.71440887]
[-13.94149399 53.71567154]
[-10.07217789 39.22331238]
[-2.76490974 26.12355042]
[7.53347015 15.21743298]
[20.19321060 7.17187786]
[34.44016647 2.47887230]
[49.40312576 1.42539585]
[64.16709900 4.07586861]
[77.82926941 10.26821327]
[89.55418396 19.62376595]
[98.62486267 31.57043076]
[104.48662567 45.37766647]
[106.78103638 60.20114899]
[105.36777496 75.13442230]
[100.33325195 89.26433563]
[111.13540649 78.85696411]
[121.93756866 68.44959259]
[132.73971558 58.04222107]
[136.74847412 49.83443832]
[143.78103638 47.56179810]
[148.57582092 32.48464203]
[163.15652466 29.44286156]
[167.95130920 14.36570549]
[182.53201294 11.32392406]
[193.48791504 1.07853222]
[204.44383240 -9.16685963]
[215.39973450 -19.41225052]
[205.89718628 -31.02549171]
[197.18295288 -43.24137115]
[189.29512024 -56.00647354]
[182.26820374 -69.26498413]
[176.13290405 -82.95891571]
[170.91606140 -97.02839661]
[166.64048767 -111.41190338]
[163.32489014 -126.04653168]
[160.98374939 -140.86830139]
[159.62730408 -155.81239319]
[159.26150513 -170.81344604]
[159.88793945 -185.80589294]
[161.50386047 -200.72415161]
[164.10220337 -215.50300598]
[167.67161560 -230.07780457]
[172.19648743 -244.38484192]
[177.65702820 -258.36154175]
[184.02937317 -271.94680786]
[191.28562927 -285.08117676]
[199.39408875 -297.70730591]
[208.31929016 -309.76989746]
[218.02221680 -321.21624756]
[228.46041870 -331.99630737]
[239.58825684 -342.06292725]
[251.35708618 -351.37210083]
[263.71542358 -359.88308716]
[276.60925293 -367.55871582]
[289.98217773 -374.36538696]
[303.77569580 -380.27334595]
[317.92956543 -385.25674438]
[332.38180542 -389.29382324]
[347.06927490 -392.36691284]
[361.92773438 -394.46258545]
[376.89221191 -395.57165527]
[391.89727783 -395.68930054]
[406.87731934 -394.81497192]
[421.76681519 -392.95251465]
[436.50064087 -390.11007690]
[451.01443481 -386.30010986]
[465.24465942 -381.53921509]
[479.12911987 -375.84823608]
[492.60711670 -369.25207520]
[505.61972046 -361.77954102]
[518.10998535 -353.46334839]
[530.02331543 -344.33987427]
[541.30761719 -334.44894409]
[551.91351318 -323.83386230]
[561.79473877 -312.54104614]
[570.90795898 -300.61987305]
[579.21337891 -288.12243652]
[586.67468262 -275.10342407]
[593.25921631 -261.61975098]
[598.93823242 -247.73037720]
[603.68682861 -233.49604797]
[607.48431396 -218.97898865]
[610.31408691 -204.24270630]
[612.16369629 -189.35160828]
[613.02508545 -174.37083435]
[612.89453125 -159.36587524]
[611.77258301 -144.40235901]
[609.66412354 -129.54570007]
[606.57836914 -114.86088562]
[602.52880859 -100.41211700]
[597.53320312 -86.26257324]
[591.61334229 -72.47412872]
[584.79516602 -59.10708237]
[577.10845947 -46.21987915]
[568.58679199 -33.86887360]
[559.26751709 -22.10807610]
[549.19128418 -10.98891163]
[538.40228271 -0.56000322]
[526.94757080 9.13304615]
[514.87725830 18.04785156]
[502.24417114 26.14542961]
[489.10351562 33.39037323]
[475.51278687 39.75099945]
[461.53140259 45.19949341]
[447.22045898 49.71203613]
[432.64257812 53.26888657]
[417.86151123 55.85449982]
[402.94186401 57.45756531]
[387.94888306 58.07107544]
[372.94815063 57.69234467]
[358.00521851 56.32302856]
[343.18548584 53.96911621]
[328.55371094 50.64090347]
[314.17388916 46.35293961]
[300.10891724 41.12397766]
[286.42025757 34.97688293]
[273.16781616 27.93853378]
[260.40951538 20.03970718]
[248.20115662 11.31494427]
[236.59611511 1.80239618]
[225.64512634 -8.45634174]
[214.68922424 1.78904998]
[203.73330688 12.03444195]
[192.77740479 22.27983284]
[188.76625061 36.62416840]
[173.40191650 40.39876938]
[169.39077759 54.74310684]
[154.02642822 58.51770782]
[143.14709473 68.84437561]
[132.34494019 79.25174713]
[121.54278564 89.65911865]
[110.74062347 100.06649780]
[101.86972809 112.16224670]
[102.65153503 127.96412659]
[90.05583191 135.91381836]
[83.37563324 149.34419250]
[76.69544220 162.77456665]
[70.01525116 176.20494080]
[63.33505249 189.63531494]
[56.65485764 203.06570435]
[49.97466278 216.49607849]
[43.49516678 230.02441406]
[37.21780777 243.64773560]
[30.94044685 257.27105713]
[43.60298157 265.35647583]
[55.04656219 275.09085083]
[65.05800629 286.29284668]
[73.45081329 298.75378418]
[80.06861877 312.24148560]
[84.78813934 326.50473022]
[87.52146149 341.27777100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 203]
[38 202]
[39 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[47 195]
[48 194]
[50 192]
[74 191]
[75 190]
[76 189]
[77 188]
[79 187]
[81 185]
[83 183]
[84 182]
[85 181]
[86 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
