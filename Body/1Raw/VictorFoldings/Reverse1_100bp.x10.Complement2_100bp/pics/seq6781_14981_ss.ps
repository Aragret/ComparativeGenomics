%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[282.94174194 331.52133179]
[273.62683105 319.76406860]
[264.31195068 308.00683594]
[254.90980530 296.31924438]
[245.42091370 284.70196533]
[228.69981384 279.37542725]
[225.89382935 261.17633057]
[216.23301697 249.70162964]
[206.57220459 238.22692871]
[192.45626831 233.47406006]
[189.48710632 217.93395996]
[179.82629395 206.45925903]
[170.16548157 194.98455811]
[156.04954529 190.23168945]
[153.08036804 174.69158936]
[143.41955566 163.21688843]
[133.75874329 151.74218750]
[124.09793854 140.26748657]
[109.98200989 135.51461792]
[107.01283264 119.97453308]
[90.54175568 118.93946075]
[79.81887054 106.39404297]
[81.36096191 89.96267700]
[71.53038025 78.63307953]
[61.69979858 67.30348969]
[51.86921692 55.97389603]
[41.87104797 44.79192352]
[31.70750046 33.76004410]
[21.54395294 22.72816658]
[11.38040638 11.69629002]
[-4.17555475 10.89015865]
[-14.32568359 -0.44251686]
[-13.46129417 -15.26777935]
[-23.62484169 -26.29965782]
[-25.31944466 -11.39568710]
[-36.97004700 -1.94775248]
[-51.90265274 -3.36805892]
[-61.56319046 -14.84299088]
[-60.41765976 -29.79918480]
[-49.12227631 -39.66905594]
[-34.14840698 -38.79910278]
[-43.28720856 -50.69373322]
[-52.42601013 -62.58836746]
[-60.13595200 -67.48680115]
[-61.61075592 -74.72881317]
[-70.57144928 -86.75818634]
[-79.53215027 -98.78756714]
[-85.44236755 -101.75081635]
[-88.50858307 -106.53572083]
[-88.57421112 -111.31115723]
[-96.05773926 -116.54896545]
[-97.20769501 -123.84960938]
[-105.62231445 -136.26710510]
[-114.03693390 -148.68460083]
[-122.45155334 -161.10209656]
[-130.86616516 -173.51959229]
[-139.28079224 -185.93708801]
[-147.69540405 -198.35458374]
[-156.11003113 -210.77207947]
[-164.52464294 -223.18957520]
[-177.88189697 -216.32362366]
[-191.96936035 -211.11781311]
[-206.58163452 -207.64805603]
[-221.50558472 -205.96495056]
[-236.52360535 -206.09304810]
[-251.41668701 -208.03048706]
[-265.96762085 -211.74899292]
[-279.96426392 -217.19435120]
[-293.20242310 -224.28715515]
[-305.48913574 -232.92395020]
[-316.64517212 -242.97882080]
[-326.50784302 -254.30511475]
[-334.93334961 -266.73767090]
[-341.79879761 -280.09518433]
[-347.00408936 -294.18283081]
[-350.47329712 -308.79522705]
[-352.15582275 -323.71923828]
[-352.02716064 -338.73727417]
[-350.08917236 -353.63027954]
[-346.37011719 -368.18109131]
[-340.92425537 -382.17749023]
[-333.83096313 -395.41540527]
[-325.19369507 -407.70178223]
[-315.13839722 -418.85745239]
[-303.81173706 -428.71969604]
[-291.37887573 -437.14474487]
[-278.02111816 -444.00967407]
[-263.93325806 -449.21444702]
[-249.32073975 -452.68310547]
[-234.39665222 -454.36508179]
[-219.37863159 -454.23587036]
[-204.48570251 -452.29733276]
[-189.93504333 -448.57772827]
[-175.93882751 -443.13131714]
[-162.70117188 -436.03753662]
[-150.41511536 -427.39981079]
[-139.25984192 -417.34411621]
[-129.39801025 -406.01708984]
[-120.97343445 -393.58389282]
[-114.10898590 -380.22589111]
[-108.90475464 -366.13781738]
[-105.43663788 -351.52517700]
[-103.75521088 -336.60101318]
[-103.88499451 -321.58300781]
[-105.82409668 -306.69015503]
[-109.54423523 -292.13961792]
[-114.99116516 -278.14361572]
[-122.08544922 -264.90621948]
[-130.72363281 -252.62049866]
[-140.77975464 -241.46559143]
[-152.10714722 -231.60418701]
[-143.69253540 -219.18669128]
[-135.27790833 -206.76919556]
[-126.86329651 -194.35169983]
[-118.44867706 -181.93420410]
[-110.03405762 -169.51670837]
[-101.61943817 -157.09921265]
[-93.20481873 -144.68171692]
[-84.79019928 -132.26422119]
[-76.28337097 -119.90972137]
[-67.50276947 -107.74826050]
[-58.54207611 -95.71888733]
[-49.58137894 -83.68950653]
[-40.53137970 -71.72717285]
[-31.39257622 -59.83253860]
[-22.25377464 -47.93790436]
[-12.59296417 -36.46320343]
[-2.42941689 -25.43132591]
[12.41687012 -25.08013725]
[22.88130569 -14.03702831]
[22.41228294 1.53274322]
[32.57582855 12.56462002]
[42.73937607 23.59649849]
[52.90292358 34.62837601]
[57.55344009 35.71546173]
[61.57042694 39.73551559]
[63.19881058 46.14331436]
[73.02939606 57.47290802]
[82.85997009 68.80250549]
[92.69055176 80.13209534]
[105.35056305 79.51749420]
[116.09254456 86.24530792]
[121.06578827 97.90379333]
[118.48753357 110.31372070]
[133.29446411 115.88733673]
[135.57264709 130.60668945]
[145.23344421 142.08139038]
[154.89425659 153.55609131]
[164.55506897 165.03077698]
[179.36201477 170.60440063]
[181.64018250 185.32374573]
[191.30099487 196.79844666]
[200.96179199 208.27314758]
[215.76873779 213.84677124]
[218.04690552 228.56611633]
[227.70771790 240.04081726]
[237.36853027 251.51551819]
[250.12918091 253.39395142]
[257.93945312 263.15014648]
[257.03817749 275.21307373]
[266.52706909 286.83035278]
[274.37945557 291.49703979]
[276.06921387 298.69192505]
[285.38409424 310.44918823]
[294.69897461 322.20645142]
[307.58950806 314.49349976]
[321.37649536 308.52914429]
[335.82409668 304.41543579]
[350.68502808 302.22277832]
[365.70501709 301.98867798]
[380.62704468 303.71716309]
[395.19583130 307.37860107]
[409.16201782 312.91036987]
[422.28662109 320.21786499]
[434.34512329 329.17596436]
[445.13116455 339.63140869]
[454.46014404 351.40533447]
[462.17248535 364.29620361]
[468.13616943 378.08349609]
[472.24917603 392.53128052]
[474.44113159 407.39230347]
[474.67453003 422.41232300]
[472.94534302 437.33428955]
[469.28320312 451.90286255]
[463.75076294 465.86880493]
[456.44265747 478.99307251]
[447.48397827 491.05114746]
[437.02801514 501.83666992]
[425.25366211 511.16510010]
[412.36239624 518.87683105]
[398.57482910 524.83984375]
[384.12686157 528.95220947]
[369.26571655 531.14343262]
[354.24569702 531.37609863]
[339.32382202 529.64624023]
[324.75540161 525.98339844]
[310.78976440 520.45025635]
[297.66583252 513.14154053]
[285.60818481 504.18228149]
[274.82315063 493.72579956]
[265.49526978 481.95101929]
[257.78417969 469.05938721]
[251.82179260 455.27151489]
[247.71015930 440.82336426]
[245.51960754 425.96212769]
[245.28765869 410.94210815]
[247.01824951 396.02029419]
[250.68177795 381.45205688]
[256.21554565 367.48666382]
[263.52490234 354.36306763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 163]
[4 161]
[5 160]
[7 157]
[8 156]
[9 155]
[11 153]
[12 152]
[13 151]
[15 149]
[16 148]
[17 147]
[18 146]
[20 144]
[23 140]
[24 139]
[25 138]
[26 137]
[27 134]
[28 133]
[29 132]
[30 131]
[33 128]
[34 127]
[41 126]
[42 125]
[43 124]
[45 123]
[46 122]
[47 121]
[50 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
