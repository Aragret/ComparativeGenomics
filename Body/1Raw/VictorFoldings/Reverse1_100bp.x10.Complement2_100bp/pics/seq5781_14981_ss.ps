%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[64.92369080 607.95202637]
[64.03087616 592.97857666]
[63.13806152 578.00518799]
[62.24524307 563.03179932]
[61.35242844 548.05834961]
[60.45961380 533.08496094]
[45.64732742 530.87322998]
[31.61317444 525.62786865]
[18.97144699 517.57598877]
[8.27603245 507.06744385]
[-0.00386350 494.55981445]
[-5.50429153 480.59854126]
[-7.98256159 465.79290771]
[-7.32794857 450.78973389]
[-3.56663561 436.24493408]
[3.13932180 422.79483032]
[12.49897861 411.02844238]
[24.10511971 401.46160889]
[37.45198441 394.51437378]
[51.95728683 390.49255371]
[51.06447220 375.51916504]
[50.17165756 360.54574585]
[49.27883911 345.57235718]
[46.89852524 342.97109985]
[45.65988159 339.08770752]
[46.15181351 334.47128296]
[48.69569778 329.91323853]
[48.47237015 314.91491699]
[40.19983292 327.42752075]
[27.10473633 334.74313354]
[12.11255741 335.22747803]
[-1.42741239 328.77230835]
[-10.49030876 316.81973267]
[-13.05145836 302.04000854]
[-8.53869343 287.73492432]
[2.03982306 277.10031128]
[16.32082367 272.51196289]
[31.11389542 274.99490356]
[43.11422729 283.99444580]
[49.64092255 297.50012207]
[51.86603928 282.66607666]
[54.09115982 267.83203125]
[56.31627655 252.99798584]
[58.54139328 238.16394043]
[60.76651001 223.32991028]
[62.99162674 208.49586487]
[65.21674347 193.66181946]
[54.25954437 203.90582275]
[39.52292252 206.70439148]
[25.57318115 201.19035339]
[16.73279762 189.07228088]
[15.74106407 174.10510254]
[22.90527725 160.92655945]
[36.00552750 153.62016296]
[50.98256302 154.44987488]
[63.19558334 163.15861511]
[68.86028290 177.04814148]
[73.04728699 162.64434814]
[71.89581299 155.34394836]
[77.40534973 148.05815125]
[81.80635071 133.71830750]
[86.20734406 119.37845612]
[90.60834503 105.03861237]
[93.71245575 90.36331177]
[95.49491882 75.46958923]
[87.85718536 58.71409988]
[98.91551208 45.08763885]
[100.47603607 30.16903496]
[102.03656006 15.25043106]
[88.55560303 5.67673779]
[81.78101349 -9.30326366]
[83.47553253 -25.56196785]
[93.08249664 -38.67158890]
[107.90341187 -45.10998917]
[109.24164581 -60.05017471]
[110.57987976 -74.99036407]
[111.91811371 -89.93054962]
[113.25634766 -104.87072754]
[114.59458160 -119.81091309]
[115.93281555 -134.75109863]
[117.27104950 -149.69128418]
[107.41318512 -161.75198364]
[108.98317719 -176.88438416]
[120.54195404 -186.20802307]
[121.88018799 -201.14820862]
[114.22389221 -211.52818298]
[115.64608002 -223.94435120]
[124.84247589 -231.80264282]
[126.40299988 -246.72125244]
[127.96352386 -261.63986206]
[129.07917786 -276.59829712]
[129.74896240 -291.58334351]
[130.41874695 -306.56838989]
[131.08853149 -321.55343628]
[131.75831604 -336.53845215]
[122.89552307 -352.67947388]
[132.90972900 -367.09066772]
[133.35633850 -382.08404541]
[133.80294800 -397.07739258]
[134.24954224 -412.07073975]
[120.67757416 -419.05386353]
[111.48638153 -431.23931885]
[108.50087738 -446.20758057]
[112.31384277 -460.98675537]
[122.16821289 -472.64242554]
[136.10739136 -478.86032104]
[151.36373901 -478.40585327]
[164.90811157 -471.36932373]
[174.05123901 -459.14779663]
[176.97778320 -444.16787720]
[173.10664368 -429.40383911]
[163.20645142 -417.78707886]
[149.24290466 -411.62411499]
[148.79629517 -396.63076782]
[148.34968567 -381.63742065]
[147.90307617 -366.64407349]
[155.96716309 -357.62756348]
[155.71778870 -345.13272095]
[146.74334717 -335.86868286]
[146.07356262 -320.88363647]
[145.40377808 -305.89859009]
[144.73399353 -290.91357422]
[144.06420898 -275.92852783]
[145.85420227 -273.77117920]
[146.89749146 -270.77484131]
[146.87022400 -267.22030640]
[145.55612183 -263.50039673]
[142.88212585 -260.07934570]
[141.32160950 -245.16073608]
[139.76107788 -230.24212646]
[147.76016235 -214.62222290]
[136.82037354 -199.80998230]
[135.48213196 -184.86979675]
[145.19992065 -173.64035034]
[144.05558777 -158.46981812]
[132.21122742 -148.35305786]
[130.87300110 -133.41287231]
[129.53475952 -118.47267914]
[128.19653320 -103.53249359]
[126.85829926 -88.59230804]
[125.52006531 -73.65213013]
[124.18183136 -58.71194077]
[122.84358978 -43.77175522]
[134.50823975 -36.66871643]
[142.01051331 -25.17764664]
[143.83857727 -11.50990009]
[139.57919312 1.67478395]
[130.00933838 11.78586292]
[116.95516205 16.81095314]
[115.39464569 31.72955894]
[113.83412170 46.64816284]
[121.20524597 56.23946381]
[120.02724457 68.68117523]
[110.38863373 77.25205994]
[108.60617065 92.14577484]
[118.17565918 80.59480286]
[131.77291870 74.26120758]
[146.77253723 74.36790466]
[160.27832031 80.89429474]
[169.68252563 92.58022308]
[173.16932678 107.16934204]
[170.06549072 121.84469604]
[160.97032166 133.77272034]
[147.63993835 140.65029907]
[132.64825439 141.14947510]
[118.88990021 135.17387390]
[109.02142334 123.87727356]
[104.94818878 109.43961334]
[100.54719543 123.77945709]
[96.14619446 138.11930847]
[91.74519348 152.45915222]
[87.45107269 166.83135986]
[83.26406097 181.23515320]
[80.05078888 195.88693237]
[77.82566833 210.72097778]
[75.60055542 225.55502319]
[73.37543488 240.38906860]
[71.15032196 255.22311401]
[68.92520142 270.05715942]
[66.70008087 284.89120483]
[64.47496796 299.72525024]
[63.47070694 314.69158936]
[63.69403458 329.68991089]
[64.25224304 344.67953491]
[65.14506531 359.65292358]
[66.03787994 374.62634277]
[66.93069458 389.59976196]
[81.81113434 391.86938477]
[95.88897705 397.18136597]
[108.54972076 405.30123901]
[119.24127197 415.87203979]
[127.49800110 428.42996216]
[132.96104431 442.42477417]
[135.39385986 457.24383545]
[134.69252014 472.23904419]
[130.89009094 486.75503540]
[124.15515900 500.15792847]
[114.78427124 511.86297607]
[103.18893433 521.36004639]
[89.87752533 528.23590088]
[75.43302155 532.19213867]
[76.32583618 547.16558838]
[77.21865082 562.13897705]
[78.11146545 577.11236572]
[79.00428009 592.08575439]
[79.89709473 607.05920410]
[90.89365387 618.74060059]
[88.47446442 634.60021973]
[74.49532318 642.47186279]
[59.67983246 636.31713867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[20 187]
[21 186]
[22 185]
[23 184]
[27 183]
[28 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[57 173]
[58 172]
[60 171]
[61 170]
[62 169]
[63 168]
[64 155]
[65 154]
[67 151]
[68 150]
[69 149]
[74 143]
[75 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[84 133]
[85 132]
[88 130]
[89 129]
[90 128]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
