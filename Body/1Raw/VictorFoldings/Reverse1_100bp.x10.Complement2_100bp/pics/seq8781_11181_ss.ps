%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[135.14395142 678.99859619]
[121.49632263 672.16448975]
[112.17223358 660.08044434]
[109.02299500 645.14575195]
[112.67388916 630.32574463]
[122.40002441 618.56286621]
[136.27027893 612.19268799]
[136.49360657 597.19433594]
[136.71693420 582.19598389]
[136.94026184 567.19769287]
[137.16358948 552.19934082]
[137.38691711 537.20098877]
[124.30058289 532.13275146]
[113.70774078 522.88232422]
[106.89421082 510.54556274]
[104.69629669 496.59454346]
[107.39814758 482.70184326]
[114.69522858 470.54019165]
[125.72850037 461.58096313]
[139.18548584 456.91610718]
[139.63209534 441.92276001]
[140.07868958 426.92941284]
[140.52529907 411.93606567]
[139.63249207 396.96264648]
[130.09280396 385.52395630]
[135.69737244 370.72869873]
[133.47225952 355.89465332]
[123.93257904 344.45596313]
[129.53713989 329.66070557]
[119.99746704 318.22201538]
[125.60203552 303.42675781]
[113.50879669 294.80764771]
[111.04089355 279.79550171]
[120.16341400 267.16946411]
[117.93829346 252.33540344]
[115.71318054 237.50135803]
[113.48806000 222.66732788]
[111.26293945 207.83328247]
[109.03782654 192.99923706]
[99.49815369 181.56053162]
[105.10271454 166.76528931]
[102.54688263 151.98463440]
[99.66160583 137.26473999]
[96.77633667 122.54484558]
[86.36165619 118.23890686]
[79.28664398 109.46673584]
[77.28379059 98.37641144]
[80.84354401 87.68366241]
[89.09420776 80.00685883]
[86.64848328 65.20758820]
[84.20275116 50.40831757]
[81.75702667 35.60904312]
[79.31129456 20.80977440]
[69.29959869 12.67782307]
[67.56721497 0.30112645]
[74.50271606 -9.60974693]
[72.27759552 -24.44379044]
[70.05248260 -39.27783585]
[67.82736206 -54.11187744]
[65.60224915 -68.94592285]
[63.37712860 -83.77996826]
[61.04164124 -98.59703064]
[58.59591675 -113.39630127]
[55.72303772 -116.65215302]
[54.18984985 -120.28723907]
[53.95107269 -123.83383942]
[54.81416321 -126.88698578]
[56.47256851 -129.14703369]
[54.91204453 -144.06564331]
[42.91837692 -154.00494385]
[41.54830551 -169.15675354]
[51.09782028 -180.52963257]
[49.53729630 -195.44824219]
[37.54362869 -205.38754272]
[36.17355728 -220.53935242]
[45.72307205 -231.91223145]
[44.16255188 -246.83084106]
[42.60202789 -261.74945068]
[32.08611679 -267.29492188]
[25.61905479 -277.12741089]
[24.71077347 -288.74072266]
[29.47159576 -299.24072266]
[38.61342239 -306.06665039]
[37.49777222 -321.02511597]
[28.75549316 -334.21157837]
[35.52474976 -347.47909546]
[34.40910339 -362.43753052]
[23.69105339 -377.41101074]
[31.92180824 -392.91009521]
[30.58357430 -407.85028076]
[29.24534035 -422.79046631]
[27.90710640 -437.73065186]
[26.56887245 -452.67083740]
[11.81757736 -456.02560425]
[-1.17401743 -463.77633667]
[-11.13312817 -475.16366577]
[-17.08406258 -489.07199097]
[-18.44380951 -504.13870239]
[-15.07915306 -518.88775635]
[-7.31972933 -531.87414551]
[4.07427216 -541.82562256]
[17.98658371 -547.76727295]
[33.05421829 -549.11688232]
[47.80100250 -545.74237061]
[60.78219986 -537.97424316]
[70.72604370 -526.57354736]
[76.65833282 -512.65728760]
[77.99788666 -497.58874512]
[74.61346436 -482.84420776]
[66.83664703 -469.86822510]
[55.42931747 -459.93203735]
[41.50905609 -454.00906372]
[42.84729004 -439.06887817]
[44.18552399 -424.12869263]
[45.52375793 -409.18850708]
[46.86199188 -394.24832153]
[55.94037247 -386.25396729]
[57.17754745 -373.81802368]
[49.36755753 -363.55319214]
[50.48320389 -348.59472656]
[59.14568710 -336.47817993]
[52.45622635 -322.14077759]
[53.57187271 -307.18231201]
[68.13708496 -296.09310913]
[70.00324249 -277.56124878]
[57.52063370 -263.30996704]
[59.08115387 -248.39135742]
[60.64167786 -233.47276306]
[72.33798981 -224.32225037]
[74.13310242 -209.21488953]
[64.45590210 -197.00875854]
[66.01642609 -182.09016418]
[77.71273804 -172.93965149]
[79.50785065 -157.83229065]
[69.83065033 -145.62615967]
[71.39117432 -130.70756531]
[73.39518738 -115.84203339]
[75.84091187 -101.04276276]
[80.03295135 -94.95600128]
[78.21117401 -86.00508118]
[80.43628693 -71.17103577]
[82.66140747 -56.33699417]
[84.88652802 -41.50295258]
[87.11164093 -26.66890717]
[89.33676147 -11.83486462]
[100.99250793 1.28422189]
[94.11056519 18.36404610]
[96.55629730 33.16331863]
[99.00202179 47.96258926]
[101.44775391 62.76185989]
[103.89347839 77.56112671]
[118.98151398 87.41571045]
[122.18422699 105.14997864]
[111.49623108 119.65957642]
[114.38150024 134.37947083]
[117.26676941 149.09934998]
[120.69883728 153.03230286]
[122.13544464 157.44699097]
[121.72724915 161.50265503]
[119.93675995 164.54016113]
[129.63558960 177.03990173]
[123.87187195 190.77410889]
[126.09698486 205.60815430]
[128.32209778 220.44219971]
[130.54722595 235.27624512]
[132.77233887 250.11029053]
[134.99745178 264.94433594]
[147.42297363 274.33816528]
[149.46824646 289.41369629]
[140.43608093 301.20162964]
[150.13490295 313.70138550]
[144.37118530 327.43560791]
[154.07002258 339.93533325]
[148.30630493 353.66955566]
[150.53141785 368.50360107]
[160.23025513 381.00332642]
[154.46652222 394.73754883]
[160.63563538 381.06484985]
[172.07031250 371.35671997]
[186.56272888 367.48760986]
[201.31460571 370.20458984]
[213.47760010 378.98306274]
[220.70321655 392.12805176]
[221.59631348 407.10144043]
[215.98443604 421.01211548]
[204.95117188 431.17413330]
[190.62684631 435.62539673]
[175.77726746 433.50640869]
[163.26966858 425.22631836]
[155.51864624 412.38265991]
[155.07205200 427.37600708]
[154.62544250 442.36938477]
[154.17883301 457.36273193]
[168.88548279 463.86062622]
[179.94601440 475.47680664]
[185.68820190 490.41207886]
[185.26039124 506.36892700]
[178.75765991 520.90472412]
[167.20272827 531.80578613]
[152.38525391 537.42431641]
[152.16192627 552.42266846]
[151.93859863 567.42102051]
[151.71527100 582.41937256]
[151.49194336 597.41766357]
[151.26861572 612.41601562]
[164.94303894 619.19635010]
[174.31465149 631.24353027]
[177.52267456 646.16571045]
[173.93017578 661.00006104]
[164.25042725 672.80114746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[20 193]
[21 192]
[22 191]
[23 190]
[24 177]
[26 175]
[27 174]
[29 172]
[31 170]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[41 160]
[42 156]
[43 155]
[44 154]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 138]
[63 137]
[68 136]
[69 135]
[72 132]
[73 131]
[76 128]
[77 127]
[78 126]
[83 123]
[84 122]
[86 120]
[87 119]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
