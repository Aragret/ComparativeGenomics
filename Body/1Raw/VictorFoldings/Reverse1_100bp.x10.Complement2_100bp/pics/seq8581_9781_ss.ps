%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[32.03600693 520.65728760]
[31.05749130 535.66918945]
[27.33697701 550.24560547]
[21.00118256 563.89013672]
[12.26590157 576.13793945]
[1.42865586 586.57196045]
[-11.14144230 594.83679199]
[-25.01626015 600.65093994]
[-39.72322464 603.81634521]
[-54.76142502 604.22521973]
[-69.61866760 601.86358643]
[-83.78890991 596.81201172]
[-96.78952789 589.24243164]
[-108.17772675 579.41271973]
[-117.56562805 567.65759277]
[-124.63347626 554.37756348]
[-129.14054871 540.02478027]
[-130.93333435 525.08825684]
[-129.95077515 510.07662964]
[-126.22632599 495.50119019]
[-119.88685608 481.85839844]
[-111.14826965 469.61291504]
[-100.30821228 459.18182373]
[-87.73588562 450.92037964]
[-73.85950470 445.10998535]
[-59.15168762 441.94854736]
[-44.11337662 441.54373169]
[-29.25677490 443.90933228]
[-24.21985817 429.78030396]
[-19.18294144 415.65127563]
[-14.14602566 401.52224731]
[-9.10910988 387.39321899]
[-4.07219362 373.26419067]
[0.96472251 359.13513184]
[6.00163889 345.00610352]
[11.03855515 330.87707520]
[4.44248390 317.57192993]
[9.34935951 303.17132568]
[23.34976578 296.34295654]
[20.33547592 281.75656128]
[32.25753403 271.35583496]
[37.29444885 257.22680664]
[42.33136368 243.09777832]
[39.31707764 228.51136780]
[51.23913193 218.11064148]
[56.17072678 203.94450378]
[60.99672318 189.74205017]
[65.82272339 175.53959656]
[70.64871979 161.33714294]
[75.47471619 147.13467407]
[70.41098022 136.14900208]
[74.31536865 124.27720642]
[85.61289978 118.05398560]
[90.64981842 103.92495728]
[90.17504120 95.87839508]
[95.86833191 89.62400818]
[101.11505127 75.57154083]
[106.36177063 61.51906967]
[94.86286926 48.22965622]
[91.69474792 31.03449249]
[97.64146423 14.68699741]
[110.97999573 3.65989399]
[127.97821808 0.92150748]
[132.80421448 -13.28094864]
[128.79920959 -31.25430107]
[142.43803406 -42.29737473]
[147.05203247 -56.57011032]
[151.66604614 -70.84284210]
[156.28005981 -85.11557770]
[160.89405823 -99.38831329]
[147.68443298 -106.58150482]
[136.02465820 -116.07705688]
[126.31087494 -127.55045319]
[118.87281036 -140.61000061]
[113.96249390 -154.81018066]
[111.74578094 -169.66693115]
[112.29671478 -184.67404175]
[115.59506226 -199.32048035]
[121.52706909 -213.10774231]
[129.88935852 -225.56687927]
[140.39591980 -236.27436829]
[152.68788147 -244.86656189]
[166.34579468 -251.05206299]
[180.90388489 -254.62155151]
[195.86601257 -255.45484924]
[210.72253418 -253.52507019]
[215.33654785 -267.79782104]
[219.95054626 -282.07055664]
[214.78340149 -293.88845825]
[218.92025757 -305.68127441]
[229.62873840 -311.30755615]
[234.45474243 -325.51000977]
[229.46411133 -337.40356445]
[233.77607727 -349.13345337]
[244.56713867 -354.59967041]
[249.60406494 -368.72869873]
[254.64097595 -382.85772705]
[259.67788696 -396.98675537]
[264.71481323 -411.11578369]
[269.75173950 -425.24481201]
[256.71160889 -432.74118042]
[245.21972656 -442.44561768]
[235.64546204 -454.04620361]
[228.29661560 -467.16998291]
[223.40942383 -481.39514160]
[221.14097595 -496.26437378]
[221.56419373 -511.29968262]
[224.66548157 -526.01776123]
[230.34513855 -539.94549561]
[238.42059326 -552.63513184]
[248.63224792 -563.67877197]
[260.65185547 -572.72137451]
[274.09298706 -579.47235107]
[288.52362061 -583.71453857]
[303.47985840 -585.31170654]
[318.48089600 -584.21246338]
[333.04455566 -580.45214844]
[346.70263672 -574.15161133]
[359.01608276 -565.51336670]
[369.58908081 -554.81518555]
[378.08178711 -542.40093994]
[384.22116089 -528.66967773]
[387.80981445 -514.06274414]
[388.73245239 -499.04983521]
[386.95938110 -484.11343384]
[382.54760742 -469.73370361]
[375.63897705 -456.37295532]
[366.45550537 -444.46060181]
[355.29244995 -434.37963867]
[342.50866699 -426.45407104]
[328.51507568 -420.93872070]
[313.76150513 -418.01086426]
[298.72225952 -417.76461792]
[283.88076782 -420.20791626]
[278.84384155 -406.07888794]
[273.80691528 -391.94985962]
[268.77001953 -377.82083130]
[263.73309326 -363.69180298]
[258.69616699 -349.56274414]
[262.78338623 -332.49636841]
[248.65719604 -320.68402100]
[243.83119202 -306.48153687]
[248.17205811 -289.47790527]
[234.22328186 -277.45654297]
[229.60928345 -263.18380737]
[224.99526978 -248.91107178]
[238.17002869 -241.77905273]
[249.81298828 -232.34500122]
[259.52670288 -220.92907715]
[266.97918701 -207.91911316]
[271.91543579 -193.75747681]
[274.16589355 -178.92596436]
[273.65246582 -163.92948914]
[270.39123535 -149.27883911]
[264.49179077 -135.47328186]
[256.15368652 -122.98355103]
[245.65971375 -112.23584747]
[233.36619568 -103.59721375]
[219.69096375 -97.36306000]
[205.09916687 -93.74703979]
[190.08738708 -92.87371826]
[175.16679382 -94.77429962]
[170.55279541 -80.50156403]
[165.93878174 -66.22883606]
[161.32476807 -51.95610046]
[156.71075439 -37.68336868]
[161.93750000 -26.77429771]
[158.21029663 -14.84568691]
[147.00666809 -8.45495033]
[142.18067932 5.74750519]
[151.48205566 14.29750729]
[156.87875366 25.77254677]
[157.53706360 38.48295593]
[153.32391357 50.54233170]
[144.83183289 60.14751816]
[133.29591370 65.84819031]
[120.41424561 66.76578522]
[115.16752625 80.81826019]
[109.92080688 94.87072754]
[104.77884674 108.96186829]
[99.74192810 123.09089661]
[103.47889709 141.12188721]
[89.67716980 151.96067810]
[84.85117340 166.16313171]
[80.02517700 180.36558533]
[75.19918060 194.56803894]
[70.37318420 208.77050781]
[70.57520294 217.90269470]
[65.36816406 223.14755249]
[68.02217865 238.74456787]
[56.46039581 248.13468933]
[51.42347717 262.26373291]
[46.38656235 276.39276123]
[49.04057693 291.98977661]
[37.47879410 301.37988281]
[44.00231934 315.52490234]
[38.69289398 329.78198242]
[25.16758537 335.91400146]
[20.13066864 350.04302979]
[15.09375191 364.17205811]
[10.05683613 378.30108643]
[5.01991987 392.43011475]
[-0.01699657 406.55914307]
[-5.05391264 420.68817139]
[-10.09082890 434.81719971]
[-15.12774563 448.94622803]
[-2.12508512 456.51229858]
[9.26576138 466.33898926]
[18.65682793 478.09152222]
[25.72825623 491.36968994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 206]
[29 205]
[30 204]
[31 203]
[32 202]
[33 201]
[34 200]
[35 199]
[36 198]
[39 195]
[41 193]
[42 192]
[43 191]
[45 189]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[53 181]
[54 180]
[56 179]
[57 178]
[58 177]
[63 170]
[64 169]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[86 146]
[87 145]
[88 144]
[91 142]
[92 141]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
