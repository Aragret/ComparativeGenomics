%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[73.91725922 703.35571289]
[59.17397308 706.18255615]
[44.22668076 707.57324219]
[29.21495056 707.51483154]
[14.27893925 706.00781250]
[-0.44189334 703.06628418]
[-14.81009960 698.71771240]
[-28.69152451 693.00268555]
[-41.95655823 685.97454834]
[-54.48134613 677.69897461]
[-66.14894104 668.25317383]
[-76.85041046 657.72540283]
[-86.48582458 646.21392822]
[-94.96522522 633.82623291]
[-102.20944214 620.67797852]
[-108.15083313 606.89190674]
[-112.73392487 592.59680176]
[-115.91592407 577.92602539]
[-117.66712189 563.01672363]
[-117.97116852 548.00793457]
[-116.82521820 533.03985596]
[-114.23998260 518.25231934]
[-110.23958588 503.78329468]
[-104.86138916 489.76794434]
[-98.15560913 476.33706665]
[-90.18485260 463.61611938]
[-81.02354431 451.72387695]
[-70.75721741 440.77133179]
[-59.48173904 430.86077881]
[-47.30237961 422.08474731]
[-34.33285904 414.52517700]
[-20.69427490 408.25265503]
[-6.51396990 403.32574463]
[8.07565689 399.79043579]
[22.93838120 397.67977905]
[37.93543243 397.01342773]
[52.92678070 397.79763794]
[55.15189743 382.96359253]
[57.37701416 368.12954712]
[59.60213089 353.29550171]
[61.82724762 338.46145630]
[49.43940353 330.15444946]
[41.85557556 317.23953247]
[40.62616730 302.25122070]
[46.04840851 288.15795898]
[57.09681320 277.77432251]
[71.61668396 273.19888306]
[73.84179688 258.36483765]
[76.06691742 243.53079224]
[78.29203033 228.69674683]
[80.51715088 213.86271667]
[82.29961395 198.96899414]
[83.63784790 184.02880859]
[76.12474060 174.54830933]
[77.11737823 162.09045410]
[86.62730408 153.37701416]
[88.18782806 138.45840454]
[89.74835205 123.53979492]
[91.30887604 108.62119293]
[82.96234131 121.08455658]
[71.21189117 130.40802002]
[57.17751312 135.70294189]
[42.19686508 136.46463013]
[27.69780922 132.62048340]
[15.06230354 124.53692627]
[5.49468470 112.98440552]
[-0.09312378 99.06404877]
[-1.16852725 84.10264587]
[2.37097502 69.52622986]
[10.18801975 56.72412872]
[21.53753662 46.91655731]
[35.33776093 41.03831100]
[50.27334595 39.64966583]
[64.92072296 42.88298035]
[77.88380432 50.43007278]
[87.92701721 61.57160568]
[94.09312439 75.24563599]
[95.79435730 90.14998627]
[93.60589600 74.48086548]
[105.44213104 65.43914032]
[110.89749146 51.46634293]
[116.35284424 37.49354553]
[121.80820465 23.52074814]
[126.42221069 9.24801540]
[130.17851257 -5.27404404]
[133.28262329 -19.94934654]
[135.72834778 -34.74861526]
[130.34469604 -49.62567139]
[140.05360413 -60.92107391]
[142.49934387 -75.72034454]
[144.94506836 -90.51961517]
[147.39079285 -105.31888580]
[149.83651733 -120.11815643]
[135.62762451 -125.03906250]
[122.45483398 -132.29064941]
[110.69715118 -141.66427612]
[100.69287109 -152.89024353]
[92.72982788 -165.64556885]
[87.03714752 -179.56323242]
[83.77861786 -194.24279785]
[83.04798126 -209.26193237]
[84.86627197 -224.18847656]
[89.18116760 -238.59298706]
[95.86852264 -252.06098938]
[104.73592377 -264.20501709]
[115.52825165 -274.67562866]
[127.93497467 -283.17156982]
[141.59913635 -289.44842529]
[156.12757874 -293.32556152]
[171.10229492 -294.69143677]
[186.09245300 -293.50677490]
[200.66673279 -289.80563354]
[214.40579224 -283.69451904]
[226.91436768 -275.34924316]
[237.83253479 -265.00991821]
[246.84617615 -252.97402954]
[253.69592285 -239.58787537]
[258.18472290 -225.23661804]
[260.18341064 -210.33316040]
[259.63446045 -195.30628967]
[256.55371094 -180.58837891]
[251.02978516 -166.60287476]
[243.22160339 -153.75218201]
[233.35382080 -142.40605164]
[221.71035767 -132.89089966]
[208.62623596 -125.48052216]
[194.47790527 -120.38812256]
[179.67242432 -117.76022339]
[164.63578796 -117.67243195]
[162.19006348 -102.87316132]
[159.74433899 -88.07389069]
[157.29861450 -73.27461243]
[154.85287476 -58.47534561]
[160.41148376 -44.65683365]
[150.52761841 -32.30289078]
[148.08189392 -17.50361824]
[160.87487793 -25.33558846]
[175.49053955 -21.96184540]
[183.55639648 -9.31502342]
[180.45193481 5.36020422]
[167.95553589 13.65720081]
[153.22570801 10.82306957]
[144.70057678 -1.51774323]
[140.94427490 13.00431633]
[153.33212280 4.54611826]
[168.32864380 4.86939573]
[180.34048462 13.85357475]
[184.88755798 28.14777756]
[180.27388000 42.42061996]
[168.22026062 51.34868622]
[153.22241211 51.60202789]
[140.87413025 43.08615112]
[135.78100586 28.97610664]
[130.32563782 42.94890213]
[124.87028503 56.92170334]
[119.41493225 70.89450073]
[121.99359131 85.56418610]
[109.76715088 95.60533905]
[106.22747803 110.18171692]
[104.66695404 125.10031891]
[103.10643005 140.01892090]
[101.54591370 154.93753052]
[109.43225861 171.57745361]
[98.57803345 185.36703491]
[97.23979950 200.30722046]
[99.20581055 204.17875671]
[99.77984619 208.08197021]
[99.12287903 211.57536316]
[97.52272034 214.31507874]
[95.35119629 216.08782959]
[93.12607574 230.92187500]
[90.90096283 245.75592041]
[88.67584229 260.58996582]
[86.45072937 275.42401123]
[98.98913574 284.05822754]
[106.50474548 297.22647095]
[107.55339050 312.29034424]
[101.98052216 326.25830078]
[90.94123077 336.37973022]
[76.66129303 340.68658447]
[74.43617249 355.52062988]
[72.21105957 370.35467529]
[69.98593903 385.18872070]
[67.76082611 400.02276611]
[82.32248688 403.67150879]
[96.46401215 408.70867920]
[110.05335236 415.08715820]
[122.96363068 422.74746704]
[135.07431030 431.61804199]
[146.27229309 441.61608887]
[156.45304871 452.64819336]
[165.52149963 464.61141968]
[173.39299011 477.39404297]
[179.99401855 490.87667847]
[185.26295471 504.93350220]
[189.15058899 519.43322754]
[191.62063599 534.24047852]
[192.65002441 549.21697998]
[192.22915649 564.22290039]
[190.36195374 579.11816406]
[187.06584167 593.76367188]
[182.37161255 608.02270508]
[176.32307434 621.76208496]
[168.97673035 634.85357666]
[160.40115356 647.17492676]
[150.67640686 658.61102295]
[139.89331055 669.05517578]
[128.15254211 678.40985107]
[115.56371307 686.58770752]
[102.24436951 693.51232910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 165]
[53 164]
[56 162]
[57 161]
[58 160]
[59 159]
[78 158]
[80 156]
[81 155]
[82 154]
[83 153]
[84 144]
[85 143]
[86 136]
[87 135]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
