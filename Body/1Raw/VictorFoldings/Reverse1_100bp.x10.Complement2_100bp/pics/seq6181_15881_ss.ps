%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[174.80982971 440.62603760]
[176.65507507 425.72442627]
[180.12846375 411.11624146]
[185.18782043 396.97885132]
[191.77172852 383.48382568]
[199.80026245 370.79501343]
[209.17594910 359.06646729]
[219.78501892 348.44049072]
[231.49864197 339.04611206]
[223.45747375 326.38360596]
[215.41629028 313.72106934]
[202.06190491 307.12490845]
[201.19551086 291.32745361]
[194.95614624 287.36611938]
[193.13050842 278.41598511]
[185.27874756 265.63516235]
[177.42700195 252.85430908]
[169.57524109 240.07347107]
[161.72348022 227.29261780]
[153.87173462 214.51177979]
[146.01997375 201.73094177]
[138.16821289 188.95010376]
[130.31646729 176.16925049]
[117.06175232 169.37500000]
[116.43066406 153.56637573]
[108.57891083 140.78553772]
[108.85018158 155.78308105]
[103.43308258 169.77076721]
[93.13120270 180.67356873]
[79.47277069 186.87416077]
[64.48393250 187.45269775]
[50.38819122 182.32336426]
[39.27656555 172.24705505]
[32.79740143 158.71855164]
[31.91184425 143.74472046]
[36.75125885 129.54682922]
[46.59774780 118.23105621]
[59.99064636 111.47603607]
[74.94319153 110.28382874]
[89.23726654 114.83129120]
[100.75122833 124.44235229]
[95.71430969 110.31332397]
[90.57234955 96.22218323]
[78.49676514 86.00011444]
[81.29354858 71.37043762]
[76.04682922 57.31797028]
[63.97124100 47.09589767]
[66.76802826 32.46622467]
[61.52130890 18.41375542]
[56.27459335 4.36128330]
[54.77256393 19.28589058]
[50.13956451 33.55247116]
[42.58636093 46.51198959]
[32.45657349 57.57487488]
[20.21104240 66.23783875]
[6.40685558 72.10677338]
[-8.32798862 74.91468811]
[-23.32315254 74.53382874]
[-37.89645767 70.98153687]
[-51.38491440 64.41940308]
[-63.17488480 55.14596939]
[-72.73001099 43.58311844]
[-79.61559296 30.25687408]
[-83.51838684 15.77349758]
[-84.26083374 0.79188341]
[-81.80917358 -14.00640488]
[-76.27491760 -27.94814301]
[-67.90985870 -40.39907455]
[-57.09453583 -50.79276657]
[-44.32098389 -58.65637589]
[-30.17030907 -63.63216019]
[-15.28627586 -65.49375153]
[-0.34600559 -64.15646362]
[13.97081757 -59.68113708]
[27.01287460 -52.27136230]
[38.18683624 -42.26423645]
[46.98436737 -30.11501884]
[53.00653839 -16.37228775]
[53.67632294 -31.35732651]
[54.34610748 -46.34236526]
[52.20918655 -50.12224960]
[51.46143341 -53.99592972]
[51.96175766 -57.51517487]
[53.43798828 -60.32361984]
[55.52819061 -62.19155502]
[57.08871460 -77.11016083]
[58.64923477 -92.02876282]
[60.20975876 -106.94737244]
[61.77028275 -121.86597443]
[63.33080673 -136.78457642]
[48.82304382 -140.72425842]
[35.13517761 -146.94024658]
[22.62175941 -155.27154541]
[11.60691261 -165.50233459]
[2.37594914 -177.36764526]
[-4.83202600 -190.56011963]
[-9.83030891 -204.73803711]
[-12.48943329 -219.53416443]
[-12.74051952 -234.56523132]
[-10.57706547 -249.44190979]
[-6.05510855 -263.77886963]
[0.70822066 -277.20471191]
[9.53773594 -289.37170410]
[20.20473289 -299.96469116]
[32.43290710 -308.70928955]
[45.90552521 -315.37896729]
[60.27360535 -319.80099487]
[75.16499329 -321.86083984]
[90.19394684 -321.50509644]
[104.97119904 -318.74304199]
[119.11397552 -313.64614868]
[132.25593567 -306.34649658]
[144.05668640 -297.03317261]
[154.21055603 -285.94735718]
[162.45452881 -273.37622070]
[168.57507324 -259.64541626]
[172.41365051 -245.11058044]
[173.87081909 -230.14820862]
[172.90884399 -215.14584351]
[169.55265808 -200.49209595]
[163.88917542 -186.56654358]
[156.06509399 -173.72987366]
[146.28309631 -162.31460571]
[134.79653931 -152.61640930]
[121.90295410 -144.88647461]
[107.93631744 -139.32505798]
[93.25840759 -136.07620239]
[78.24941254 -135.22406006]
[76.68888855 -120.30545044]
[75.12836456 -105.38684845]
[73.56784058 -90.46824646]
[72.00731659 -75.54963684]
[70.44679260 -60.63103485]
[69.33114624 -45.67258072]
[68.66136169 -30.68754196]
[67.99157715 -15.70250320]
[70.32706451 -0.88543487]
[75.57378387 13.16703606]
[80.82050323 27.21950722]
[92.52080536 36.43645477]
[90.09930420 52.07125092]
[95.34601593 66.12372589]
[107.04632568 75.34066772]
[104.62482452 90.97546387]
[110.17043304 96.82514191]
[109.84333801 105.27640533]
[114.88025665 119.40544128]
[121.35974884 132.93377686]
[129.21150208 145.71463013]
[143.02783203 153.42304993]
[143.09730530 168.31750488]
[150.94906616 181.09834290]
[158.80081177 193.87918091]
[166.65257263 206.66001892]
[174.50433350 219.44087219]
[182.35607910 232.22171021]
[190.20783997 245.00254822]
[198.05960083 257.78338623]
[205.91134644 270.56423950]
[213.85803223 283.28628540]
[227.78759766 290.78814697]
[228.07882690 305.67990112]
[236.11999512 318.34243774]
[244.16116333 331.00494385]
[257.64492798 324.39804077]
[271.77368164 319.31457520]
[286.37591553 315.81628418]
[301.27435303 313.94561768]
[316.28817749 313.72528076]
[331.23510742 315.15792847]
[345.93368530 318.22622681]
[360.20553589 322.89288330]
[373.87738037 329.10128784]
[386.78323364 336.77603149]
[398.76647949 345.82397461]
[409.68161011 356.13528442]
[419.39614868 367.58477783]
[427.79217529 380.03347778]
[434.76773071 393.33026123]
[440.23818970 407.31372070]
[444.13711548 421.81411743]
[446.41717529 436.65542603]
[447.05072021 451.65750122]
[446.03002930 466.63818359]
[443.36749268 481.41567993]
[439.09545898 495.81057739]
[433.26574707 509.64813232]
[425.94915771 522.76037598]
[417.23452759 534.98809814]
[407.22756958 546.18292236]
[396.04983521 556.20898438]
[383.83694458 564.94445801]
[370.73721313 572.28338623]
[356.90963745 578.13671875]
[342.52203369 582.43328857]
[327.74911499 585.12103271]
[312.77017212 586.16729736]
[297.76705933 585.55932617]
[282.92187500 583.30456543]
[268.41485596 579.43041992]
[254.42207336 573.98382568]
[241.11341858 567.03094482]
[228.65040588 558.65618896]
[217.18435669 548.96118164]
[206.85444641 538.06365967]
[197.78608704 526.09588623]
[190.08932495 513.20312500]
[183.85763550 499.54187012]
[179.16662598 485.27801514]
[176.07327271 470.58468628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 164]
[10 163]
[11 162]
[13 160]
[15 159]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[23 151]
[25 149]
[26 148]
[41 147]
[42 146]
[43 144]
[45 142]
[46 141]
[48 139]
[49 138]
[50 137]
[78 136]
[79 135]
[80 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
