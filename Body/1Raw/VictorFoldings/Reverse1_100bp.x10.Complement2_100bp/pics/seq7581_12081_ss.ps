%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[251.87338257 311.08145142]
[258.22052002 297.47784424]
[265.83203125 284.53915405]
[274.63900757 272.38259888]
[263.38290405 262.46792603]
[252.12680054 252.55328369]
[240.87071228 242.63864136]
[229.61460876 232.72398376]
[226.09156799 232.58088684]
[222.46279907 230.72424316]
[219.53292847 227.12298584]
[218.09001160 222.10649109]
[207.28785706 211.69912720]
[190.05229187 208.39732361]
[185.10354614 190.66058350]
[174.14764404 180.41519165]
[163.19174194 170.16979980]
[148.36044312 170.92379761]
[137.10365295 160.68959045]
[136.41334534 145.12805176]
[125.45743561 134.88265991]
[114.50152588 124.63727570]
[109.78303528 123.89908600]
[105.47817993 120.18894196]
[103.37771606 113.91999817]
[89.90921021 110.16619110]
[86.05523682 96.72600555]
[75.40923309 86.15895844]
[60.16408539 81.92858124]
[56.58180237 67.47117615]
[45.93579483 56.90412521]
[35.28978729 46.33707809]
[17.38117981 42.05183029]
[13.44025326 24.95106888]
[2.63809681 14.54369640]
[-12.66834259 10.54076195]
[-16.46547699 -3.86170459]
[-27.26763344 -14.26907730]
[-23.82945061 0.33156931]
[-26.98215675 14.99650860]
[-36.11701584 26.89416885]
[-49.47023010 33.72729874]
[-64.46350098 34.17652893]
[-78.20186615 28.15512085]
[-88.03266144 16.82571220]
[-92.05770874 2.37583375]
[-89.49983978 -12.40446758]
[-80.85294342 -24.66134834]
[-67.78659058 -32.02819443]
[-52.82369232 -33.08258820]
[-38.85229492 -27.62022400]
[-47.63290024 -39.78168106]
[-56.41350174 -51.94313431]
[-65.19410706 -64.10459137]
[-73.97470856 -76.26604462]
[-82.75531006 -88.42750549]
[-91.53591919 -100.58895874]
[-104.61752319 -93.21661377]
[-118.44233704 -87.35532379]
[-132.83648682 -83.07881165]
[-147.61894226 -80.44085693]
[-162.60382080 -79.47462463]
[-177.60264587 -80.19227600]
[-192.42681885 -82.58478546]
[-206.88989258 -86.62206268]
[-220.80996704 -92.25332642]
[-234.01200867 -99.40777588]
[-246.32998657 -107.99541473]
[-257.60897827 -117.90826416]
[-267.70712280 -129.02165222]
[-276.49746704 -141.19580078]
[-283.86941528 -154.27763367]
[-289.73028564 -168.10261536]
[-294.00634766 -182.49690247]
[-296.64389038 -197.27943420]
[-297.60964966 -212.26434326]
[-296.89157104 -227.26315308]
[-294.49859619 -242.08724976]
[-290.46090698 -256.55020142]
[-284.82922363 -270.47012329]
[-277.67437744 -283.67193604]
[-269.08636475 -295.98965454]
[-259.17318726 -307.26834106]
[-248.05949402 -317.36614990]
[-235.88507080 -326.15612793]
[-222.80302429 -333.52767944]
[-208.97785950 -339.38815308]
[-194.58346558 -343.66381836]
[-179.80084229 -346.30087280]
[-164.81590271 -347.26620483]
[-149.81712341 -346.54766846]
[-134.99310303 -344.15426636]
[-120.53026581 -340.11611938]
[-106.61051941 -334.48403931]
[-93.40890503 -327.32879639]
[-81.09144592 -318.74041748]
[-69.81305695 -308.82690430]
[-59.71556473 -297.71289062]
[-50.92596436 -285.53820801]
[-43.55479050 -272.45593262]
[-37.69474792 -258.63061523]
[-33.41952515 -244.23608398]
[-30.78289223 -229.45338440]
[-29.81800842 -214.46842957]
[-30.53700447 -199.46965027]
[-32.93084335 -184.64570618]
[-36.96941376 -170.18299866]
[-42.60193253 -156.26341248]
[-49.75756073 -143.06201172]
[-58.34631348 -130.74481201]
[-68.26016998 -119.46672058]
[-79.37445831 -109.36956024]
[-70.59385681 -97.20810699]
[-61.81325531 -85.04665375]
[-53.03264999 -72.88519287]
[-44.25204849 -60.72373962]
[-35.47144318 -48.56228256]
[-26.69083977 -36.40082550]
[-16.86026001 -25.07123375]
[-6.05810356 -14.66386127]
[8.47569370 -11.40533161]
[13.04547024 3.74153996]
[23.84762573 14.14891338]
[35.94385529 14.23737812]
[45.02848434 22.81952667]
[45.85683441 35.69107056]
[56.50284195 46.25811768]
[67.14884949 56.82516479]
[81.63252258 60.29972076]
[85.97628021 75.51294708]
[96.62228394 86.08000183]
[110.09078979 89.83380890]
[113.94476318 103.27399445]
[124.74691772 113.68136597]
[135.70281982 123.92675781]
[146.65873718 134.17214966]
[162.23156738 133.81904602]
[173.19647217 144.36540222]
[173.43711853 159.21389771]
[184.39303589 169.45928955]
[195.34893799 179.70468140]
[208.24240112 180.05345154]
[217.15667725 188.81240845]
[217.69523621 200.89697266]
[228.49739075 211.30433655]
[239.52926636 221.46789551]
[250.78535461 231.38253784]
[262.04144287 241.29719543]
[273.29754639 251.21183777]
[284.55364990 261.12649536]
[295.50137329 250.85556030]
[307.37585449 241.67181396]
[320.06954956 233.65838623]
[333.46749878 226.88789368]
[347.44836426 221.42161560]
[361.88552856 217.30906677]
[376.64825439 214.58750916]
[391.60284424 213.28157043]
[406.61383057 213.40307617]
[421.54528809 214.95094299]
[436.26202393 217.91114807]
[450.63070679 222.25686646]
[464.52127075 227.94876099]
[477.80783081 234.93527222]
[490.37014771 243.15313721]
[502.09439087 252.52793884]
[512.87445068 262.97473145]
[522.61260986 274.39895630]
[531.22070312 286.69714355]
[538.62078857 299.75790405]
[544.74591064 313.46292114]
[549.54046631 327.68814087]
[552.96112061 342.30471802]
[554.97686768 357.18023682]
[555.56951904 372.18002319]
[554.73358154 387.16821289]
[552.47674561 402.00909424]
[548.81933594 416.56823730]
[543.79461670 430.71377563]
[537.44793701 444.31762695]
[529.83691406 457.25659180]
[521.03039551 469.41348267]
[511.10815430 480.67819214]
[500.16003418 490.94873047]
[488.28521729 500.13204956]
[475.59124756 508.14498901]
[462.19305420 514.91503906]
[448.21197510 520.38079834]
[433.77465820 524.49279785]
[419.01184082 527.21380615]
[404.05722046 528.51922607]
[389.04623413 528.39715576]
[374.11480713 526.84875488]
[359.39819336 523.88800049]
[345.02966309 519.54174805]
[331.13934326 513.84936523]
[317.85299683 506.86236572]
[305.29098511 498.64404297]
[293.56707764 489.26882935]
[282.78744507 478.82162476]
[273.04968262 467.39703369]
[264.44201660 455.09854126]
[257.04238892 442.03753662]
[250.91781616 428.33227539]
[246.12376404 414.10687256]
[242.70362854 399.49020386]
[240.68841553 384.61459351]
[240.09634399 369.61477661]
[240.93280029 354.62661743]
[243.19020081 339.78582764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[12 145]
[13 144]
[15 141]
[16 140]
[17 139]
[20 136]
[21 135]
[22 134]
[25 133]
[27 131]
[28 130]
[30 128]
[31 127]
[32 126]
[34 123]
[35 122]
[37 120]
[38 119]
[51 118]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
