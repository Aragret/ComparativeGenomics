%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[145.73832703 756.02838135]
[131.30599976 760.23596191]
[116.38559723 762.07385254]
[101.36359406 761.49444580]
[86.62911224 758.51263428]
[72.56378937 753.20574951]
[59.53195572 745.71124268]
[47.87117767 736.22326660]
[37.88348770 724.98748779]
[29.82759285 712.29504395]
[23.91216278 698.47460938]
[20.29041862 683.88421631]
[19.05617332 668.90179443]
[20.24139595 653.91546631]
[23.81538963 639.31329346]
[29.68557358 625.47363281]
[37.69990158 612.75482178]
[47.65077972 601.48645020]
[59.28045654 591.96038818]
[72.28769684 584.42327881]
[86.33558655 579.07043457]
[101.06024170 576.04046631]
[116.08026123 575.41186523]
[117.86272430 560.51812744]
[119.64519501 545.62438965]
[121.42765808 530.73071289]
[122.98818207 515.81207275]
[124.32641602 500.87191772]
[125.66464996 485.93173218]
[127.00288391 470.99154663]
[128.34112549 456.05136108]
[129.67935181 441.11117554]
[131.01759338 426.17098999]
[130.57098389 411.17764282]
[128.34587097 396.34359741]
[126.12074280 381.50955200]
[123.89562988 366.67550659]
[121.29273224 364.29699707]
[119.71257019 360.53958130]
[119.79068756 355.89770508]
[121.91777802 351.13088989]
[120.35725403 336.21228027]
[118.79673004 321.29367065]
[109.77733612 309.44039917]
[116.03694916 294.91015625]
[114.47642517 279.99157715]
[112.91590118 265.07296753]
[110.91188812 250.20742798]
[108.46616364 235.40815735]
[106.02043915 220.60888672]
[103.57470703 205.80961609]
[101.12898254 191.01034546]
[98.68325806 176.21107483]
[96.23752594 161.41180420]
[88.33559418 174.16168213]
[74.49260712 179.93852234]
[59.87166595 176.58769226]
[49.92601776 165.35897827]
[48.36513901 150.44041443]
[55.77120209 137.39624023]
[69.38192749 131.09162903]
[84.12085724 133.87805176]
[94.49123383 144.71725464]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[83.76233673 100.84693909]
[91.65460968 86.04530334]
[88.01995850 77.66514587]
[90.86164856 70.84263611]
[90.19186401 55.85760117]
[89.41054535 40.87796402]
[88.51773071 25.90455627]
[87.62490845 10.93115139]
[86.62065125 -4.03519297]
[85.39367676 -18.98492622]
[84.05544281 -33.92510986]
[82.71720886 -48.86529541]
[81.37897491 -63.80548096]
[68.22610474 -71.82472229]
[62.38551331 -85.88675690]
[65.90347290 -100.51850128]
[77.22707367 -110.15769196]
[75.88883972 -125.09787750]
[74.55060577 -140.03805542]
[73.21237183 -154.97824097]
[61.36801529 -165.09501648]
[60.22368622 -180.26554871]
[69.94146729 -191.49499512]
[68.60323334 -206.43516541]
[65.98046875 -209.89567566]
[64.72190094 -213.63473511]
[64.74755859 -217.18927002]
[65.83534241 -220.16975403]
[67.65724945 -222.30020142]
[67.21064758 -237.29356384]
[66.76403809 -252.28691101]
[66.31743622 -267.28024292]
[65.87082672 -282.27362061]
[51.90727615 -288.43655396]
[42.00708389 -300.05331421]
[38.13594818 -314.81735229]
[41.06248474 -329.79727173]
[50.20561981 -342.01879883]
[63.74998856 -349.05535889]
[79.00634003 -349.50979614]
[92.94551086 -343.29190063]
[102.79988098 -331.63626099]
[106.61284637 -316.85708618]
[103.62734222 -301.88879395]
[94.43614960 -289.70336914]
[80.86418152 -282.72021484]
[81.31078339 -267.72686768]
[81.75739288 -252.73350525]
[82.20399475 -237.74015808]
[82.65060425 -222.74681091]
[83.54341888 -207.77340698]
[84.88165283 -192.83322144]
[96.44042969 -183.50958252]
[98.01042175 -168.37718201]
[88.15255737 -156.31648254]
[89.49079132 -141.37629700]
[90.82902527 -126.43611145]
[92.16725922 -111.49592590]
[105.02368164 -104.02261353]
[111.08599091 -90.24900055]
[107.83747101 -75.37282562]
[96.31916046 -65.14371490]
[97.65739441 -50.20352936]
[98.99562836 -35.26334763]
[100.33386230 -20.32316017]
[104.06156921 -13.94147110]
[101.57910156 -5.15084171]
[105.21138763 1.28564024]
[102.59832001 10.03833485]
[103.49113464 25.01174164]
[104.38394928 39.98514557]
[107.91999817 46.47499466]
[105.17690277 55.18781662]
[105.84668732 70.17285156]
[106.62801361 85.15248871]
[114.85726929 93.39389038]
[115.46391296 105.02458954]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.47627258 144.04747009]
[111.03679657 158.96607971]
[113.48252869 173.76535034]
[115.92825317 188.56462097]
[118.37397766 203.36389160]
[120.81970978 218.16316223]
[123.26543427 232.96243286]
[125.71115875 247.76170349]
[128.58404541 251.01754761]
[130.11723328 254.65263367]
[130.35600281 258.19924927]
[129.49291992 261.25238037]
[127.83451080 263.51245117]
[129.39503479 278.43103027]
[130.95555115 293.34963989]
[140.08656311 306.26998901]
[133.71533203 319.73315430]
[135.27586365 334.65173340]
[136.83638000 349.57034302]
[138.72967529 364.45037842]
[140.95478821 379.28442383]
[143.17990112 394.11846924]
[145.40502930 408.95251465]
[150.63543701 394.89398193]
[160.30592346 383.42742920]
[173.28041077 375.89996338]
[188.03466797 373.19589233]
[202.83537292 375.63290405]
[215.94375610 382.92468262]
[225.81987000 394.21459961]
[231.30346680 408.17636108]
[231.75035095 423.16970825]
[227.10800171 437.43322754]
[217.92181396 449.29132080]
[205.27096558 457.35083008]
[190.64166260 460.66500854]
[175.75256348 458.84445190]
[162.35278320 452.10308838]
[152.01655579 441.23281860]
[145.95777893 427.50921631]
[144.61953735 442.44940186]
[143.28131104 457.38958740]
[141.94306946 472.32977295]
[140.60482788 487.26995850]
[139.26660156 502.21014404]
[137.92835999 517.15032959]
[140.35908508 523.29876709]
[139.45549011 528.90948486]
[136.32138062 532.51318359]
[134.53890991 547.40686035]
[132.75643921 562.30059814]
[130.97398376 577.19433594]
[145.42147827 581.34954834]
[159.01527405 587.76867676]
[171.40327454 596.28533936]
[182.26457214 606.67901611]
[191.31785583 618.68041992]
[198.32861328 631.97875977]
[203.11526489 646.22949219]
[205.55378723 661.06359863]
[205.58106995 676.09674072]
[203.19635010 690.93951416]
[198.46144104 705.20758057]
[191.49897766 718.53125000]
[182.48928833 730.56542969]
[171.66575623 740.99841309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 196]
[24 195]
[25 194]
[26 193]
[27 190]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[33 184]
[34 167]
[35 166]
[36 165]
[37 164]
[41 163]
[42 162]
[43 161]
[45 159]
[46 158]
[47 157]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 146]
[63 145]
[64 144]
[65 143]
[67 140]
[69 139]
[70 138]
[71 136]
[72 135]
[73 134]
[74 132]
[75 130]
[76 129]
[77 128]
[78 127]
[82 123]
[83 122]
[84 121]
[85 120]
[88 117]
[89 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
