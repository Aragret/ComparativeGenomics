%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-55.49879837 377.49066162]
[-49.36254120 391.20797729]
[-45.28901672 405.67254639]
[-43.36505508 420.57611084]
[-43.63166809 435.60098267]
[-46.08316803 450.42691040]
[-50.66730118 464.73788452]
[-57.28636169 478.22882080]
[-65.79926300 490.61221313]
[-76.02454376 501.62408447]
[-87.74426270 511.02972412]
[-100.70860291 518.62866211]
[-114.64123535 524.25891113]
[-129.24519348 527.80041504]
[-144.20916748 529.17779541]
[-159.21423340 528.36157227]
[-173.94052124 525.36926270]
[-188.07415771 520.26458740]
[-201.31390381 513.15631104]
[-213.37751770 504.19598389]
[-224.00787354 493.57464600]
[-232.97839355 481.51861572]
[-240.09786987 468.28491211]
[-245.21453857 454.15560913]
[-248.21934509 439.43185425]
[-249.04824829 424.42749023]
[-247.68357849 409.46234131]
[-244.15440369 394.85540771]
[-238.53598022 380.91799927]
[-230.94804382 367.94723511]
[-221.55232239 356.21954346]
[-210.54911804 345.98492432]
[-198.17294312 337.46154785]
[-184.68759155 330.83105469]
[-170.38052368 326.23480225]
[-155.55668640 323.77075195]
[-140.53204346 323.49139404]
[-125.62685394 325.40274048]
[-111.15882111 329.46401978]
[-97.43633270 335.58865356]
[-89.39516449 322.92611694]
[-81.35398865 310.26361084]
[-73.31281281 297.60107422]
[-75.64116669 285.73071289]
[-69.04556274 275.11553955]
[-56.59854126 271.73403931]
[-48.36973190 259.19265747]
[-40.14092636 246.65124512]
[-31.91211700 234.10984802]
[-23.68330956 221.56845093]
[-15.45450211 209.02705383]
[-7.22569418 196.48565674]
[-20.93799591 202.56617737]
[-35.93306351 202.18151855]
[-49.31558228 195.40596008]
[-58.50160217 183.54776001]
[-61.71743774 168.89653015]
[-58.34217072 154.28121948]
[-49.02750778 142.52378845]
[-35.57196426 135.89442444]
[-20.57359695 135.67317200]
[-6.92835379 141.90272522]
[2.72908211 153.38026428]
[6.53401089 167.88964844]
[3.75125456 182.63053894]
[14.07792282 171.75120544]
[24.40459251 160.87187195]
[34.73125839 149.99253845]
[19.89717293 147.76771545]
[12.25587654 134.85993958]
[17.44025040 120.78434753]
[31.62856865 115.91693878]
[44.36172867 123.84578705]
[46.25383377 138.72447205]
[57.36106873 128.64332581]
[68.46829987 118.56218719]
[79.57553864 108.48104858]
[90.68276978 98.39990997]
[92.11601257 93.35414124]
[96.27427673 89.47057343]
[102.27404022 88.19003296]
[113.67649841 78.44406891]
[125.07896423 68.69810486]
[136.48143005 58.95213699]
[147.88389587 49.20616913]
[147.38293457 35.74646759]
[154.61981201 24.61821365]
[166.76470947 19.76190376]
[179.30047607 22.74246597]
[190.84678650 13.16734695]
[202.39308167 3.59222698]
[208.07678223 -11.17280674]
[222.81268311 -13.34133625]
[234.35897827 -22.91645622]
[240.35464478 -40.32718658]
[257.75619507 -42.59725952]
[269.15866089 -52.34322739]
[280.56112671 -62.08919144]
[291.96356201 -71.83515930]
[303.36602783 -81.58112335]
[294.67514038 -93.81936646]
[287.11627197 -106.78739166]
[280.75030518 -120.38079834]
[275.62844849 -134.49011230]
[271.79199219 -149.00177002]
[269.27182007 -163.79888916]
[268.08819580 -178.76235962]
[268.25067139 -193.77168274]
[269.75790405 -208.70602417]
[272.59780884 -223.44511414]
[276.74749756 -237.87031555]
[282.17355347 -251.86546326]
[288.83230591 -265.31787109]
[296.67010498 -278.11923218]
[305.62390137 -290.16650391]
[315.62155151 -301.36260986]
[326.58255005 -311.61749268]
[338.41870117 -320.84851074]
[351.03466797 -328.98138428]
[364.32888794 -335.95062256]
[378.19427490 -341.70013428]
[392.51925659 -346.18356323]
[407.18847656 -349.36486816]
[422.08380127 -351.21841431]
[437.08529663 -351.72927856]
[452.07220459 -350.89334106]
[466.92385864 -348.71734619]
[481.52066040 -345.21881104]
[495.74505615 -340.42587280]
[509.48260498 -334.37719727]
[522.62261963 -327.12139893]
[535.05932617 -318.71694946]
[546.69256592 -309.23150635]
[557.42871094 -298.74145508]
[567.18127441 -287.33123779]
[575.87182617 -275.09274292]
[583.43029785 -262.12448120]
[589.79583740 -248.53086853]
[594.91729736 -234.42140198]
[598.75329590 -219.90963745]
[601.27301025 -205.11242676]
[602.45617676 -190.14892578]
[602.29327393 -175.13960266]
[600.78552246 -160.20532227]
[597.94519043 -145.46630859]
[593.79504395 -131.04122925]
[588.36859131 -117.04624939]
[581.70941162 -103.59403992]
[573.87121582 -90.79291534]
[564.91705322 -78.74594116]
[554.91906738 -67.55011749]
[543.95776367 -57.29558563]
[532.12133789 -48.06491089]
[519.50512695 -39.93241882]
[506.21069336 -32.96358490]
[492.34512329 -27.21452332]
[478.01998901 -22.73151588]
[463.35070801 -19.55066490]
[448.45532227 -17.69757652]
[433.45379639 -17.18717194]
[418.46691895 -18.02356339]
[403.61532593 -20.20001221]
[389.01864624 -23.69899940]
[374.79437256 -28.49234772]
[361.05703735 -34.54146957]
[347.91723633 -41.79765320]
[335.48080444 -50.20247650]
[323.84783936 -59.68827057]
[313.11199951 -70.17865753]
[301.70953369 -60.43269348]
[290.30706787 -50.68672943]
[278.90460205 -40.94076157]
[267.50216675 -31.19479752]
[266.24526978 -19.16372108]
[256.82543945 -10.95087719]
[243.93409729 -11.37015438]
[232.38780212 -1.79503500]
[227.52996826 12.28512192]
[211.96820068 15.13852882]
[200.42190552 24.71364784]
[188.87559509 34.28876877]
[188.02976990 51.08529663]
[175.04190063 62.29378891]
[157.62985229 60.60863113]
[146.22738647 70.35459900]
[134.82493591 80.10056305]
[123.42247009 89.84652710]
[112.02000427 99.59249878]
[100.76390839 109.50714874]
[89.65667725 119.58828735]
[78.54943848 129.66941833]
[67.44220734 139.75056458]
[56.33497620 149.83169556]
[45.61059570 160.31919861]
[35.28392792 171.19853210]
[24.95725822 182.07786560]
[14.63058853 192.95719910]
[5.31570625 204.71446228]
[-2.91310167 217.25585938]
[-11.14190960 229.79725647]
[-19.37071800 242.33865356]
[-27.59952545 254.88006592]
[-35.82833481 267.42144775]
[-44.05714035 279.96286011]
[-44.68063354 298.36645508]
[-60.65029144 305.64224243]
[-68.69145966 318.30477905]
[-76.73263550 330.96728516]
[-84.77381134 343.62982178]
[-73.39516449 353.44534302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 209]
[41 208]
[42 207]
[43 206]
[46 204]
[47 203]
[48 202]
[49 201]
[50 200]
[51 199]
[52 198]
[65 197]
[66 196]
[67 195]
[68 194]
[74 193]
[75 192]
[76 191]
[77 190]
[78 189]
[81 188]
[82 187]
[83 186]
[84 185]
[85 184]
[89 181]
[90 180]
[91 179]
[93 177]
[94 176]
[96 173]
[97 172]
[98 171]
[99 170]
[100 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
