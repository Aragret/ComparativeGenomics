%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[65.81708527 621.94500732]
[53.89622116 632.32141113]
[38.13570786 631.14593506]
[27.88597298 619.11602783]
[29.22800636 603.36883545]
[41.36560059 593.24682617]
[42.48125076 578.28839111]
[43.59689713 563.32995605]
[44.71254730 548.37145996]
[45.82819748 533.41302490]
[33.44189453 525.13983154]
[26.81563950 511.68814087]
[27.81883240 496.62628174]
[36.28197098 484.00598145]
[50.01534653 477.27233887]
[51.13099289 462.31387329]
[52.24664307 447.35543823]
[53.36228943 432.39697266]
[54.47793961 417.43853760]
[55.59358978 402.48007202]
[53.58213806 399.58413696]
[52.87342834 395.57006836]
[53.97770691 391.06076050]
[57.10774231 386.88345337]
[58.89020920 371.98974609]
[52.72012711 358.43319702]
[62.04249191 345.65023804]
[63.82495880 330.75653076]
[65.60742188 315.86282349]
[59.43734360 302.30627441]
[68.75971222 289.52331543]
[70.54217529 274.62960815]
[68.66204071 271.64675903]
[68.13327789 267.60504150]
[69.43780518 263.14953613]
[72.75124359 259.11614990]
[75.19697571 244.31687927]
[69.63837433 230.49836731]
[79.52223206 218.14442444]
[81.96796417 203.34515381]
[84.41368866 188.54588318]
[86.85941315 173.74661255]
[88.64188385 158.85289001]
[89.75753021 143.89443970]
[90.76178741 128.92810059]
[91.65460968 113.95469666]
[83.76233673 99.15306091]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[94.49123383 55.28274155]
[94.71456146 40.28440475]
[94.49123383 25.28606606]
[94.26790619 10.28772831]
[93.04093170 -4.66200542]
[90.81581879 -19.49604988]
[88.59069824 -34.33009338]
[76.16517639 -43.72393417]
[74.11991119 -58.79946136]
[83.15207672 -70.58740234]
[80.92695618 -85.42144775]
[78.70184326 -100.25549316]
[76.47672272 -115.08953094]
[66.77789307 -127.58926392]
[72.54161072 -141.32348633]
[70.31649780 -156.15753174]
[60.61766434 -168.65725708]
[66.38138580 -182.39147949]
[64.15626526 -197.22552490]
[54.45743561 -209.72525024]
[60.22115707 -223.45947266]
[57.99604034 -238.29351807]
[55.44020462 -253.07417297]
[52.55493546 -267.79406738]
[49.66966248 -282.51394653]
[39.42236328 -294.56814575]
[44.56706619 -308.54602051]
[41.68179321 -323.26593018]
[26.82006645 -326.33264160]
[14.29844189 -334.83273315]
[6.00752831 -347.44522095]
[3.18470931 -362.23098755]
[6.22954988 -376.93112183]
[14.64757061 -389.31185913]
[27.13024521 -397.50405884]
[24.24497223 -412.22393799]
[21.35969925 -426.94381714]
[18.47442627 -441.66372681]
[3.41756892 -442.52502441]
[-10.95180035 -447.10455322]
[-23.73041153 -455.11441040]
[-34.11499023 -466.05111694]
[-41.45275116 -479.22717285]
[-45.28243637 -493.81430054]
[-45.36331177 -508.89553833]
[-41.69029236 -523.52288818]
[-34.49426651 -536.77691650]
[-24.22758293 -547.82434082]
[-11.53561401 -555.97076416]
[2.78381395 -560.70416260]
[17.83056831 -561.72692871]
[32.65879822 -558.97473145]
[46.33638763 -552.62066650]
[58.00355148 -543.06408691]
[66.92687988 -530.90576172]
[72.54545593 -516.90997314]
[74.50607300 -501.95645142]
[72.68550110 -486.98529053]
[67.19818115 -472.93750000]
[58.38903809 -460.69616699]
[46.81183243 -451.03082275]
[33.19431686 -444.54898071]
[36.07958984 -429.82910156]
[38.96486282 -415.10922241]
[41.85013580 -400.38931274]
[56.50182724 -397.51577759]
[68.97088623 -389.22915649]
[77.33999634 -376.76629639]
[80.30797577 -362.00897217]
[77.39202118 -347.19982910]
[69.00592804 -334.60156250]
[56.40168762 -326.15118408]
[59.28695679 -311.43130493]
[69.32788086 -300.42999268]
[64.38954926 -285.39923096]
[67.27482605 -270.67932129]
[70.16009521 -255.95944214]
[72.86660004 -253.69953918]
[74.61296844 -250.01643372]
[74.74220276 -245.37568665]
[72.83008575 -240.51863098]
[75.05519867 -225.68458557]
[84.59487152 -214.24589539]
[78.99031067 -199.45063782]
[81.21543121 -184.61659241]
[90.75510406 -173.17790222]
[85.15054321 -158.38264465]
[87.37565613 -143.54859924]
[96.91532898 -132.10990906]
[91.31076813 -117.31465149]
[93.53588867 -102.48060608]
[95.76100159 -87.64656067]
[97.98612213 -72.81252289]
[110.07936096 -64.19340515]
[112.54725647 -49.18127060]
[103.42474365 -36.55521011]
[105.64985657 -21.72116661]
[107.87497711 -6.88712263]
[115.34435272 -19.89513397]
[128.61131287 -26.89425850]
[143.56494141 -25.71573830]
[155.57170105 -16.72475433]
[160.91116333 -2.70725703]
[157.92883301 11.99327660]
[147.54881287 22.82172775]
[132.98748779 26.42278290]
[118.75682068 21.68061447]
[109.26624298 10.06440067]
[109.48957062 25.06273842]
[109.71289825 40.06107712]
[111.62812042 42.10804367]
[112.84790802 45.03699112]
[113.03226471 48.58683777]
[111.94190216 52.37836075]
[109.47627258 55.95252609]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[115.46391296 94.97541046]
[114.85726929 106.60610962]
[106.62801361 114.84751129]
[105.73519897 129.82090759]
[108.34826660 138.57360840]
[104.71598053 145.01008606]
[103.60033417 159.96855164]
[115.64356232 151.02647400]
[130.50193787 153.08280945]
[139.66392517 164.95960999]
[137.88110352 179.85328674]
[126.17475891 189.23207092]
[111.25082397 187.72337341]
[101.65868378 176.19233704]
[99.21295929 190.99160767]
[96.76723480 205.79087830]
[94.32150269 220.59014893]
[99.70516968 235.46720886]
[89.99624634 246.76260376]
[87.55051422 261.56188965]
[85.43589020 276.41207886]
[83.65342712 291.30578613]
[89.69601440 305.92761230]
[80.50114441 317.64526367]
[78.71867371 332.53900146]
[76.93621063 347.43270874]
[82.97879791 362.05453491]
[73.78392792 373.77218628]
[72.00145721 388.66592407]
[70.55204010 403.59573364]
[69.43639374 418.55416870]
[68.32074738 433.51263428]
[67.20509338 448.47106934]
[66.08944702 463.42953491]
[64.97380066 478.38800049]
[77.55635071 487.08435059]
[84.05374908 500.82043457]
[82.81154633 515.86450195]
[74.26316071 528.18444824]
[60.78664780 534.52868652]
[59.67100143 549.48712158]
[58.55535126 564.44555664]
[57.43970490 579.40405273]
[56.32405472 594.36248779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[24 195]
[25 194]
[27 192]
[28 191]
[29 190]
[31 188]
[32 187]
[36 186]
[37 185]
[39 183]
[40 182]
[41 181]
[42 180]
[43 173]
[44 172]
[45 170]
[46 169]
[48 166]
[49 165]
[50 164]
[51 159]
[52 158]
[53 157]
[54 147]
[55 146]
[56 145]
[59 142]
[60 141]
[61 140]
[62 139]
[64 137]
[65 136]
[67 134]
[68 133]
[70 131]
[71 130]
[72 126]
[73 125]
[74 124]
[76 122]
[77 121]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
