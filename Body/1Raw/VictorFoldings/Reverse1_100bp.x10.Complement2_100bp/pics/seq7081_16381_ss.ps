%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[126.14335632 491.93444824]
[121.86922455 477.54391479]
[119.00394440 462.80807495]
[117.57427979 447.86444092]
[117.59357452 432.85263062]
[119.06164551 417.91271973]
[121.96478271 403.18426514]
[126.27588654 388.80477905]
[131.95471191 374.90850830]
[138.94821167 361.62518311]
[147.19111633 349.07885742]
[156.60643005 337.38668823]
[167.10627747 326.65780640]
[178.59260559 316.99240112]
[190.95816040 308.48074341]
[183.68492126 295.36206055]
[176.41169739 282.24334717]
[169.13847351 269.12466431]
[161.86523438 256.00595093]
[154.59201050 242.88726807]
[141.65390015 235.50793457]
[141.72932434 219.68690491]
[138.56756592 234.34989929]
[127.46819305 244.43969727]
[112.57102203 246.19306946]
[99.43231964 238.95603943]
[92.95250702 225.42784119]
[95.54837799 210.65417480]
[106.25175476 200.14523315]
[121.07052612 197.82060242]
[134.47850037 204.54812622]
[128.81571960 190.65809631]
[123.15293121 176.76806641]
[117.49014282 162.87803650]
[105.52059937 154.01353455]
[107.47552490 138.31358337]
[101.81273651 124.42355347]
[96.14995575 110.53352356]
[90.41342163 124.39325714]
[77.16868591 131.43435669]
[62.47105789 128.43771362]
[53.04010391 116.77336121]
[53.18752289 101.77408600]
[62.84591675 90.29734802]
[77.59960175 87.59016418]
[90.70460510 94.89161682]
[86.51759338 80.48783112]
[82.33058167 66.08405304]
[68.76142883 58.43448257]
[64.72039032 43.76735687]
[72.09670258 30.87838364]
[67.90969086 16.47460175]
[56.62783432 5.38270140]
[60.50497818 -8.99843311]
[56.31797028 -23.40221405]
[52.13095856 -37.80599594]
[35.19190979 -46.29027176]
[29.92384148 -64.15533447]
[39.22486877 -79.92259979]
[34.61085892 -94.19532776]
[29.99684906 -108.46806335]
[25.38283920 -122.74079895]
[20.76882935 -137.01353455]
[9.16172695 -147.76461792]
[12.60897160 -162.25480652]
[7.99496222 -176.52754211]
[3.38095307 -190.80027771]
[-1.23305631 -205.07301331]
[-15.95479107 -202.11187744]
[-30.91811180 -200.84823608]
[-45.92794037 -201.29855347]
[-60.78859711 -203.45695496]
[-75.30633545 -207.29531860]
[-89.29189301 -212.76359558]
[-102.56293488 -219.79048157]
[-114.94644928 -228.28437805]
[-126.28099060 -238.13455200]
[-136.41879272 -249.21258545]
[-145.22767639 -261.37405396]
[-152.59281921 -274.46041870]
[-158.41818237 -288.30102539]
[-162.62782288 -302.71548462]
[-165.16688538 -317.51586914]
[-166.00222778 -332.50918579]
[-165.12300110 -347.50000000]
[-162.54063416 -362.29287720]
[-158.28880310 -376.69494629]
[-152.42294312 -390.51846313]
[-145.01953125 -403.58319092]
[-136.17507935 -415.71884155]
[-126.00489807 -426.76715088]
[-114.64157104 -436.58410645]
[-102.23324585 -445.04171753]
[-88.94168854 -452.02972412]
[-74.94018555 -457.45703125]
[-60.41127396 -461.25286865]
[-45.54436493 -463.36776733]
[-30.53328133 -463.77413940]
[-15.57372284 -462.46670532]
[-0.86071950 -459.46249390]
[13.41391563 -454.80068970]
[27.06408310 -448.54202271]
[39.91182709 -440.76815796]
[51.78964615 -431.58038330]
[62.54269409 -421.09851074]
[72.03077698 -409.45916748]
[80.13020325 -396.81411743]
[86.73537445 -383.32821655]
[91.76018524 -369.17727661]
[95.13912964 -354.54580688]
[96.82814789 -339.62451172]
[96.80521393 -324.60794067]
[95.07064819 -309.69186401]
[91.64704132 -295.07077026]
[86.57904053 -280.93524170]
[79.93271637 -267.46957397]
[71.79471588 -254.84931946]
[62.27113724 -243.23902893]
[51.48613358 -232.79002380]
[39.58031464 -223.63856506]
[26.70889282 -215.90396118]
[13.03967667 -209.68701172]
[17.65368652 -195.41427612]
[22.26769638 -181.14155579]
[26.88170433 -166.86882019]
[38.15878296 -157.13861084]
[35.04156494 -141.62753296]
[39.65557098 -127.35480499]
[44.26958084 -113.08207703]
[48.88359070 -98.80934143]
[53.49760056 -84.53660583]
[64.53986359 -81.66699982]
[72.91234589 -73.74127197]
[76.45552826 -62.64443207]
[74.17897034 -51.09808350]
[66.53473663 -41.99300766]
[70.72174835 -27.58922577]
[74.90876007 -13.18544388]
[85.89113617 -3.12379813]
[82.31347656 12.28759098]
[86.50048828 26.69137383]
[99.63683319 33.61755371]
[104.08824921 48.16539001]
[96.73435974 61.89703751]
[100.92137146 76.30081940]
[105.10838318 90.70460510]
[110.03997803 104.87073517]
[115.70276642 118.76076508]
[121.36555481 132.65078735]
[133.74012756 142.50880432]
[131.38017273 157.21525574]
[137.04295349 171.10528564]
[142.70574951 184.99530029]
[148.36853027 198.88533020]
[154.84802246 212.41368103]
[168.30636597 220.73135376]
[167.71070862 235.61404419]
[174.98393250 248.73274231]
[182.25715637 261.85144043]
[189.53039551 274.97012329]
[196.80361938 288.08880615]
[204.07685852 301.20751953]
[217.84690857 295.22915649]
[232.12969971 290.60769653]
[246.79183960 287.38635254]
[261.69644165 285.59515381]
[276.70434570 285.25082397]
[291.67538452 286.35659790]
[306.46984863 288.90216064]
[320.94955444 292.86370850]
[334.97930908 298.20428467]
[348.42810059 304.87399292]
[361.17037964 312.81057739]
[373.08718872 321.93994141]
[384.06726074 332.17684937]
[394.00802612 343.42568970]
[402.81671143 355.58145142]
[410.41104126 368.53063965]
[416.72015381 382.15234375]
[421.68508911 396.31936646]
[425.25952148 410.89944458]
[427.41009521 425.75646973]
[428.11666870 440.75167847]
[427.37268066 455.74505615]
[425.18508911 470.59667969]
[421.57431030 485.16778564]
[416.57406616 499.32238770]
[410.23098755 512.92834473]
[402.60440063 525.85852051]
[393.76541138 537.99230957]
[383.79663086 549.21630859]
[372.79107666 559.42578125]
[360.85153198 568.52539062]
[348.08947754 576.43017578]
[334.62408447 583.06634521]
[320.58105469 588.37188721]
[306.09152222 592.29736328]
[291.29077148 594.80596924]
[276.31701660 595.87445068]
[261.31002808 595.49267578]
[246.40992737 593.66430664]
[231.75587463 590.40637207]
[217.48466492 585.74938965]
[203.72955322 579.73669434]
[190.61895752 572.42449951]
[178.27532959 563.88104248]
[166.81388855 554.18615723]
[156.34164429 543.43035889]
[146.95640564 531.71398926]
[138.74578857 519.14654541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[22 155]
[31 154]
[32 153]
[33 152]
[34 151]
[36 149]
[37 148]
[38 147]
[46 146]
[47 145]
[48 144]
[51 141]
[52 140]
[54 138]
[55 137]
[56 136]
[59 131]
[60 130]
[61 129]
[62 128]
[63 127]
[65 125]
[66 124]
[67 123]
[68 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
