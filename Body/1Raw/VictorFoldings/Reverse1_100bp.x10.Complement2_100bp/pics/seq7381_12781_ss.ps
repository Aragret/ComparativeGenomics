%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[65.74269867 586.75769043]
[53.25150681 595.07995605]
[40.08251572 602.28179932]
[26.33594704 608.30853271]
[12.11642265 613.11419678]
[-2.46783686 616.66229248]
[-17.30583572 618.92572021]
[-32.28464127 619.88732910]
[-47.29026031 619.53973389]
[-62.20848465 617.88568115]
[-76.92577362 614.93768311]
[-91.33012390 610.71820068]
[-105.31190491 605.25933838]
[-118.76470184 598.60266113]
[-131.58613586 590.79876709]
[-143.67861938 581.90716553]
[-154.95011902 571.99542236]
[-165.31486511 561.13897705]
[-174.69395447 549.42053223]
[-183.01600647 536.92926025]
[-190.21769714 523.76013184]
[-196.24421692 510.01348877]
[-201.04968262 495.79391479]
[-204.59754944 481.20959473]
[-206.86077881 466.37155151]
[-207.82217407 451.39273071]
[-207.47441101 436.38714600]
[-205.82012939 421.46893311]
[-202.87191772 406.75167847]
[-198.65223694 392.34738159]
[-193.19317627 378.36569214]
[-186.53628540 364.91299438]
[-178.73225403 352.09167480]
[-169.84043884 339.99929810]
[-159.92854309 328.72793579]
[-149.07199097 318.36334229]
[-137.35340881 308.98443604]
[-124.86199188 300.66253662]
[-111.69279480 293.46102905]
[-97.94606018 287.43472290]
[-83.72640228 282.62942505]
[-69.14203644 279.08178711]
[-54.30397797 276.81875610]
[-39.32514191 275.85757446]
[-24.31953430 276.20556641]
[-9.40135765 277.86004639]
[5.31585169 280.80844116]
[19.72008324 285.02835083]
[25.17543983 271.05554199]
[30.63079643 257.08276367]
[36.08615494 243.10995483]
[41.54151154 229.13716125]
[46.99686813 215.16435242]
[44.41820526 200.49467468]
[56.64464569 190.45352173]
[50.44764328 176.95785522]
[55.78110504 162.70974731]
[69.97860718 156.30125427]
[67.39994812 141.63157654]
[79.62638855 131.59042358]
[85.08174133 117.61762238]
[90.53710175 103.64482117]
[90.30211639 95.58769226]
[96.17910004 89.50559998]
[101.84188843 75.61557007]
[107.50466919 61.72554398]
[113.16745758 47.83551407]
[118.83024597 33.94548798]
[123.97220612 19.85434723]
[128.58621216 5.58161449]
[133.20022583 -8.69111919]
[137.81423950 -22.96385193]
[134.69700623 -38.47492981]
[145.97409058 -48.20512772]
[133.49325562 -39.88475800]
[118.49752808 -39.52642441]
[105.63352203 -47.24116516]
[98.88726807 -60.63848495]
[100.34918213 -75.56707764]
[109.56626892 -87.40115356]
[123.68251038 -92.47379303]
[138.32383728 -89.21319580]
[148.95347595 -78.62968445]
[152.27770996 -64.00241089]
[158.75720215 -77.53076172]
[165.23669434 -91.05910492]
[171.71618652 -104.58744812]
[178.19569397 -118.11579895]
[184.67518616 -131.64413452]
[171.83633423 -139.42428589]
[159.82189941 -148.42539978]
[148.74758911 -158.56082153]
[138.72007751 -169.73291016]
[129.83590698 -181.83409119]
[122.18066406 -194.74780273]
[115.82806396 -208.34968567]
[110.83928680 -222.50874329]
[107.26238251 -237.08860779]
[105.13179779 -251.94886780]
[104.46805573 -266.94641113]
[105.27753448 -281.93679810]
[107.55245972 -296.77563477]
[111.27090454 -311.32006836]
[116.39706421 -325.42996216]
[122.88156891 -338.96945190]
[130.66195679 -351.80816650]
[139.66333008 -363.82241821]
[149.79896545 -374.89651489]
[160.97125244 -384.92379761]
[173.07260132 -393.80773926]
[185.98646545 -401.46270752]
[199.58848572 -407.81503296]
[213.74763489 -412.80352783]
[228.32757568 -416.38015747]
[243.18788147 -418.51043701]
[258.18542480 -419.17388916]
[273.17581177 -418.36410522]
[288.01461792 -416.08886719]
[302.55895996 -412.37014771]
[316.66876221 -407.24371338]
[330.20812988 -400.75894165]
[343.04666138 -392.97827148]
[355.06072998 -383.97668457]
[366.13464355 -373.84082031]
[376.16171265 -362.66833496]
[385.04537964 -350.56680298]
[392.70010376 -337.65277100]
[399.05215454 -324.05062866]
[404.04037476 -309.89138794]
[407.61669922 -295.31137085]
[409.74667358 -280.45101929]
[410.40982056 -265.45346069]
[409.59976196 -250.46310425]
[407.32424927 -235.62434387]
[403.60522461 -221.08007812]
[398.47848511 -206.97038269]
[391.99343872 -193.43113708]
[384.21252441 -180.59275818]
[375.21069336 -168.57885742]
[365.07461548 -157.50515747]
[353.90191650 -147.47831726]
[341.80020142 -138.59487915]
[328.88604736 -130.94041443]
[315.28378296 -124.58862305]
[301.12442017 -119.60070038]
[286.54434204 -116.02466583]
[271.68392944 -113.89497375]
[256.68637085 -113.23213196]
[241.69602966 -114.04251099]
[226.85731506 -116.31832123]
[212.31312561 -120.03764343]
[198.20352173 -125.16464233]
[191.72402954 -111.63629913]
[185.24453735 -98.10795593]
[178.76504517 -84.57960510]
[172.28553772 -71.05126190]
[165.80604553 -57.52291870]
[160.24682617 -43.59111786]
[163.69406128 -29.10092354]
[152.08695984 -18.34984398]
[147.47296143 -4.07710981]
[142.85894775 10.19562340]
[138.24493408 24.46835709]
[152.58470154 20.06707573]
[165.05203247 28.40768051]
[166.45648193 43.34178543]
[155.76274109 53.86052704]
[140.85383606 52.20987701]
[132.72027588 39.60827637]
[127.05748749 53.49830246]
[121.39469910 67.38832855]
[115.73191071 81.27835846]
[110.06912231 95.16838074]
[104.50989532 109.10018158]
[99.05454254 123.07298279]
[93.59918213 137.04577637]
[95.78764343 152.71488953]
[83.95140839 161.75662231]
[90.05088806 176.08958435]
[84.31932831 190.18228149]
[70.61744690 195.90887451]
[72.80590057 211.57798767]
[60.96966553 220.61972046]
[55.51430893 234.59251404]
[50.05895233 248.56530762]
[44.60359573 262.53811646]
[39.14823914 276.51089478]
[33.69288254 290.48370361]
[47.14586639 297.14001465]
[59.96751785 304.94351196]
[72.06024933 313.83480835]
[83.33203125 323.74624634]
[93.69707489 334.60235596]
[103.07649231 346.32055664]
[111.39890289 358.81161499]
[118.60095978 371.98049927]
[124.62786102 385.72698975]
[129.43373108 399.94644165]
[132.98199463 414.53067017]
[135.24565125 429.36862183]
[136.20745850 444.34741211]
[135.86012268 459.35302734]
[134.20625305 474.27130127]
[131.25846863 488.98861694]
[127.03917694 503.39303589]
[121.58051300 517.37487793]
[114.92400360 530.82775879]
[107.12032318 543.64929199]
[98.22885895 555.74194336]
[88.31727600 567.01354980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 188]
[49 187]
[50 186]
[51 185]
[52 184]
[53 183]
[55 181]
[58 178]
[60 176]
[61 175]
[62 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[69 163]
[70 162]
[71 161]
[72 160]
[74 158]
[84 157]
[85 156]
[86 155]
[87 154]
[88 153]
[89 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
