%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[17.51157570 783.21325684]
[3.34592390 788.22131348]
[-11.37886810 791.20904541]
[-26.37617874 792.11834717]
[-41.35408020 790.93151855]
[-56.02102280 787.67156982]
[-70.09150696 782.40209961]
[-83.29165649 775.22558594]
[-95.36451721 766.28179932]
[-106.07508850 755.74468994]
[-115.21489716 743.81951904]
[-122.60601807 730.73834229]
[-128.10458374 716.75579834]
[-131.60357666 702.14404297]
[-133.03486633 687.18750000]
[-132.37062073 672.17736816]
[-129.62373352 657.40570068]
[-124.84770966 643.16015625]
[-118.13549042 629.71801758]
[-109.61774445 617.34082031]
[-99.46026611 606.26959229]
[-87.86077118 596.71984863]
[-75.04505920 588.87744141]
[-61.26257706 582.89501953]
[-46.78161621 578.88903809]
[-31.88404655 576.93750000]
[-16.85985756 577.07830811]
[-14.63473988 562.24426270]
[-12.40962315 547.41021729]
[-10.18450546 532.57617188]
[-7.95938826 517.74212646]
[-10.02735043 513.43719482]
[-9.41292381 507.78747559]
[-5.44083452 502.50219727]
[-2.77503896 487.74096680]
[-0.10924356 472.97976685]
[2.55655193 458.21853638]
[1.07083547 455.84140015]
[0.43721625 452.73251343]
[0.93911952 449.21350098]
[2.73842525 445.70251465]
[5.84550381 442.66937256]
[9.38517666 428.09298706]
[12.92484856 413.51663208]
[16.46452141 398.94024658]
[20.00419426 384.36386108]
[23.54386520 369.78750610]
[27.08353806 355.21112061]
[13.48752403 348.92443848]
[1.37544155 340.10311890]
[-8.78609467 329.08471680]
[-16.60516167 316.29144287]
[-21.77964592 302.21401978]
[-24.10891533 287.39279175]
[-23.50159836 272.39715576]
[-19.97916222 257.80352783]
[-13.67516804 244.17320251]
[-4.83020210 232.03085327]
[6.21730614 221.84423828]
[19.04402924 214.00627136]
[33.15796661 208.81976318]
[48.01731110 206.48582458]
[63.05125809 207.09599304]
[61.37561035 202.62371826]
[62.49163437 197.05133057]
[66.91941071 192.14151001]
[70.89151001 177.67698669]
[74.86360168 163.21246338]
[78.83570099 148.74794006]
[82.80779266 134.28341675]
[86.77989197 119.81889343]
[90.75199127 105.35437012]
[93.08747864 90.53730774]
[93.75726318 75.55226898]
[94.42704773 60.56722641]
[82.26273346 53.66126251]
[74.29863739 42.24244690]
[72.04221344 28.57179260]
[75.87754822 15.32644176]
[85.00141144 5.07540226]
[97.59067535 -0.21870688]
[98.48348999 -15.19211292]
[99.37630463 -30.16551781]
[100.26911926 -45.13892365]
[93.36694336 -59.37516022]
[101.84806061 -71.61933899]
[102.74088287 -86.59274292]
[103.63369751 -101.56614685]
[104.52651215 -116.53955078]
[105.41932678 -131.51295471]
[102.80625153 -140.26565552]
[106.43853760 -146.70213318]
[99.74907684 -161.03956604]
[108.41156006 -173.15611267]
[109.52720642 -188.11456299]
[110.64286041 -203.07301331]
[96.35158539 -207.89073181]
[83.70787048 -216.11187744]
[73.50650024 -227.21965027]
[66.38874054 -240.51583862]
[62.80202484 -255.16459656]
[62.97181702 -270.24511719]
[66.88744354 -284.80941772]
[74.30275726 -297.94195557]
[84.75164032 -308.81723022]
[97.57725525 -316.75161743]
[111.97337341 -321.24633789]
[127.03504944 -322.01885986]
[141.81549072 -319.02062988]
[155.38557434 -312.44009399]
[166.89230347 -302.69091797]
[175.61231995 -290.38598633]
[180.99749756 -276.29870605]
[182.70932007 -261.31472778]
[180.64016724 -246.37585449]
[174.92012024 -232.42121887]
[165.90875244 -220.32800293]
[154.17250061 -210.85639954]
[140.44912720 -204.60179138]
[125.60131073 -201.95736694]
[124.48566437 -186.99891663]
[123.37001038 -172.04045105]
[130.13926697 -158.77296448]
[121.39699554 -145.58648682]
[120.39273071 -130.62014771]
[119.49991608 -115.64673615]
[118.60710144 -100.67333221]
[117.71428680 -85.69992828]
[116.82147217 -70.72652435]
[123.78751373 -57.56128311]
[115.24253082 -44.24610901]
[114.34970856 -29.27270317]
[113.45689392 -14.29929638]
[112.56407928 0.67410898]
[126.26593781 9.23982811]
[133.82191467 23.62951469]
[133.08586121 39.95970535]
[124.16406250 53.76902008]
[109.41208649 61.23701096]
[108.74230194 76.22205353]
[108.07251740 91.20709229]
[116.07010651 78.51699066]
[128.06822205 69.51448822]
[142.48832703 65.38401794]
[157.43318176 66.66900635]
[170.93655396 73.20039368]
[181.22183228 84.11886597]
[186.93580627 97.98791504]
[187.32672119 112.98281860]
[182.34312439 127.13074493]
[172.64071655 138.57029724]
[159.49600220 145.79638672]
[144.63839722 147.85832214]
[130.02267456 144.48480225]
[117.57178497 136.11967468]
[108.92385864 123.86351776]
[105.21651459 109.32646942]
[101.24441528 123.79099274]
[97.27232361 138.25552368]
[93.30022430 152.72004700]
[89.32812500 167.18457031]
[85.35603333 181.64909363]
[81.38393402 196.11361694]
[77.62763214 210.63566589]
[91.26707458 216.98843384]
[103.40110779 225.87733459]
[113.56447601 236.95925903]
[121.36795807 249.80699158]
[126.51322937 263.92581177]
[128.80430603 278.77239990]
[128.15496826 293.77587891]
[124.59206390 308.35968018]
[118.25434113 321.96374512]
[109.38706970 334.06604004]
[98.33257294 344.20248413]
[85.51697540 351.98492432]
[71.43380737 357.11584473]
[56.62496948 359.39974976]
[41.65991211 358.75079346]
[38.12024307 373.32714844]
[34.58057022 387.90353394]
[31.04089737 402.47991943]
[27.50122452 417.05627441]
[23.96155167 431.63265991]
[20.42187881 446.20904541]
[17.31777000 460.88433838]
[14.65197372 475.64556885]
[11.98617840 490.40676880]
[9.32038307 505.16799927]
[6.87465525 519.96728516]
[4.64953804 534.80133057]
[2.42442083 549.63537598]
[0.19930378 564.46942139]
[-2.02581334 579.30346680]
[12.37848568 583.57690430]
[26.04782295 589.81347656]
[38.71612167 597.89190674]
[50.13678741 607.65478516]
[60.08751678 618.91223145]
[68.37461090 631.44494629]
[74.83676147 645.00915527]
[79.34819031 659.34069824]
[81.82106781 674.16064453]
[82.20726013 689.18054199]
[80.49925232 704.10797119]
[76.73029327 718.65240479]
[70.97374725 732.53076172]
[63.34166718 745.47283936]
[53.98261261 757.22674561]
[43.07875443 767.56365967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[34 189]
[35 188]
[36 187]
[37 186]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[63 164]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[73 141]
[74 140]
[75 139]
[81 134]
[82 133]
[83 132]
[84 131]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
[92 124]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
