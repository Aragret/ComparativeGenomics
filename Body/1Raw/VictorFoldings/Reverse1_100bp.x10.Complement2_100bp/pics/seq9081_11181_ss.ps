%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[-41.75205231 407.33938599]
[-35.63841629 421.06542969]
[-31.54051018 435.52185059]
[-29.54175949 450.41433716]
[-29.68285942 465.43966675]
[-31.96093369 480.29199219]
[-36.32960892 494.66888428]
[-42.69993591 508.27767944]
[-50.94223404 520.84136963]
[-60.88869095 532.10406494]
[-72.33681488 541.83654785]
[-85.05353546 549.84063721]
[-98.77995300 555.95343018]
[-113.23662567 560.05047607]
[-128.12922668 562.04827881]
[-143.15455627 561.90625000]
[-158.00671387 559.62725830]
[-172.38336182 555.25769043]
[-185.99177551 548.88653564]
[-198.55491638 540.64343262]
[-209.81701660 530.69628906]
[-219.54878235 519.24755859]
[-227.55210876 506.53036499]
[-233.66404724 492.80355835]
[-237.76016235 478.34661865]
[-239.75706482 463.45391846]
[-239.61410522 448.42858887]
[-237.33419800 433.57656860]
[-232.96374512 419.20019531]
[-226.59173584 405.59216309]
[-218.34788513 393.02954102]
[-208.40002441 381.76806641]
[-196.95069885 372.03698730]
[-184.23298645 364.03445435]
[-170.50581360 357.92337036]
[-156.04864502 353.82815552]
[-141.15579224 351.83215332]
[-126.13047791 351.97604370]
[-111.27859497 354.25689697]
[-96.90249634 358.62823486]
[-83.29486847 365.00109863]
[-75.06606293 352.45968628]
[-66.83725739 339.91827393]
[-58.60844803 327.37689209]
[-50.37964249 314.83547974]
[-54.73857880 302.70993042]
[-51.26589203 290.09951782]
[-41.01340103 281.66760254]
[-27.58170509 280.66555786]
[-19.16708565 268.24804688]
[-10.75246716 255.83056641]
[-2.33784890 243.41307068]
[6.07676983 230.99557495]
[14.49138832 218.57807922]
[22.90600777 206.16058350]
[31.32062531 193.74308777]
[39.54943466 181.20169067]
[47.59060669 168.53916931]
[47.88183594 153.64739990]
[61.81138992 146.14553833]
[69.85256195 133.48300171]
[77.89373779 120.82048035]
[85.93490601 108.15795898]
[86.20953369 91.38593292]
[101.16123199 83.78178406]
[109.01298523 71.00093842]
[116.86473846 58.22009659]
[124.71649170 45.43925476]
[132.56825256 32.65841293]
[117.59486389 33.55152130]
[107.44783020 22.50445366]
[109.60717010 7.66069174]
[122.48109436 -0.03749337]
[136.57942200 5.08471346]
[141.50958252 19.24976921]
[150.29019165 7.08831406]
[159.07078552 -5.07314157]
[157.78936768 -17.90750122]
[165.35311890 -27.85603905]
[177.27305603 -29.91559029]
[186.23374939 -41.94496918]
[195.19444275 -53.97434616]
[204.15513611 -66.00372314]
[213.11582947 -78.03310394]
[198.12248230 -78.47940826]
[189.00148010 -90.38770294]
[192.47650146 -104.97962952]
[205.98588562 -111.49855804]
[219.57102966 -105.13898468]
[223.21777344 -90.59056854]
[233.04835510 -101.92015839]
[242.87893677 -113.24975586]
[252.70951843 -124.57934570]
[255.97001648 -133.11204529]
[262.77178955 -136.00303650]
[272.76995850 -147.18501282]
[282.76812744 -158.36698914]
[292.76629639 -169.54895020]
[302.76446533 -180.73092651]
[312.76263428 -191.91290283]
[302.65841675 -203.01733398]
[293.74951172 -215.10185242]
[286.13037109 -228.03834534]
[279.88180542 -241.68969727]
[275.07000732 -255.91117859]
[271.74600220 -270.55206299]
[269.94503784 -285.45709229]
[269.68618774 -300.46832275]
[270.97219849 -315.42660522]
[273.78945923 -330.17337036]
[278.10806274 -344.55230713]
[283.88226318 -358.41098022]
[291.05084229 -371.60247803]
[299.53781128 -383.98696899]
[309.25320435 -395.43313599]
[320.09402466 -405.81970215]
[331.94537354 -415.03652954]
[344.68157959 -422.98593140]
[358.16766357 -429.58361816]
[372.26065063 -434.75967407]
[386.81115723 -438.45919800]
[401.66494751 -440.64300537]
[416.66455078 -441.28793335]
[431.65097046 -440.38717651]
[446.46533203 -437.95019531]
[460.95059204 -434.00292969]
[474.95321655 -428.58715820]
[488.32476807 -421.76028442]
[500.92349243 -413.59472656]
[512.61584473 -404.17700195]
[523.27783203 -393.60696411]
[532.79650879 -381.99667358]
[541.07086182 -369.46917725]
[548.01330566 -356.15728760]
[553.55023193 -342.20208740]
[557.62280273 -327.75158691]
[560.18804932 -312.95889282]
[561.21862793 -297.98083496]
[560.70367432 -282.97619629]
[558.64862061 -268.10406494]
[555.07525635 -253.52203369]
[550.02148438 -239.38473511]
[543.54089355 -225.84199524]
[535.70214844 -213.03738403]
[526.58831787 -201.10664368]
[516.29608154 -190.17625427]
[504.93447876 -180.36207581]
[492.62399292 -171.76812744]
[479.49508667 -164.48553467]
[465.68698120 -158.59149170]
[451.34600830 -154.14846802]
[436.62417603 -151.20356750]
[421.67761230 -149.78800964]
[406.66470337 -149.91680908]
[391.74459839 -151.58857727]
[377.07550049 -154.78561401]
[362.81286621 -159.47401428]
[349.10787964 -165.60409546]
[336.10586548 -173.11085510]
[323.94461060 -181.91473389]
[313.94644165 -170.73275757]
[303.94827271 -159.55078125]
[293.95010376 -148.36880493]
[283.95193481 -137.18684387]
[273.95376587 -126.00485992]
[264.03909302 -114.74876404]
[254.20852661 -103.41917419]
[244.37794495 -92.08957672]
[234.54736328 -80.75998688]
[225.14521790 -69.07240295]
[216.18452454 -57.04302979]
[207.22381592 -45.01364899]
[198.26312256 -32.98427200]
[189.30242920 -20.95489502]
[188.20249939 -3.44041324]
[171.23223877 3.70746160]
[162.45164490 15.86891747]
[153.67103577 28.03037262]
[145.34909058 40.51016617]
[137.49734497 53.29100800]
[129.64558411 66.07185364]
[121.79382324 78.85269165]
[113.94207001 91.63353729]
[115.96075439 103.10376740]
[109.79067993 112.98159027]
[98.59743500 116.19913483]
[90.55625916 128.86166382]
[82.51509094 141.52418518]
[74.47391510 154.18670654]
[73.60752869 169.98417664]
[60.25313187 176.58033752]
[52.21195984 189.24285889]
[51.55212784 195.82131958]
[48.17592239 200.39277649]
[43.73812103 202.15769958]
[35.32350159 214.57519531]
[26.90888405 226.99269104]
[18.49426460 239.41018677]
[10.07964706 251.82768250]
[1.66502810 264.24517822]
[-6.74959040 276.66268921]
[-15.16420937 289.08016968]
[-11.54921913 306.19598389]
[-21.24058342 320.35198975]
[-37.83824158 323.06430054]
[-46.06704712 335.60568237]
[-54.29585648 348.14709473]
[-62.52466583 360.68847656]
[-70.75347137 373.22988892]
[-59.49014282 383.17565918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 209]
[42 208]
[43 207]
[44 206]
[45 205]
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[54 197]
[55 196]
[56 195]
[57 192]
[58 191]
[60 189]
[61 188]
[62 187]
[63 186]
[65 183]
[66 182]
[67 181]
[68 180]
[69 179]
[75 178]
[76 177]
[77 176]
[80 174]
[81 173]
[82 172]
[83 171]
[84 170]
[90 169]
[91 168]
[92 167]
[93 166]
[95 165]
[96 164]
[97 163]
[98 162]
[99 161]
[100 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
