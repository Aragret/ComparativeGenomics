%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-59.03686523 376.66378784]
[-56.36993027 391.43847656]
[-55.23630524 406.40908813]
[-55.64799881 421.41690063]
[-57.60065460 436.30285645]
[-61.07357025 450.90911865]
[-66.02993011 465.08087158]
[-72.41719818 478.66787720]
[-80.16765594 491.52612305]
[-89.19915771 503.51928711]
[-99.41595459 514.52026367]
[-110.70973969 524.41235352]
[-122.96080780 533.09082031]
[-136.03927612 540.46356201]
[-149.80651855 546.45251465]
[-164.11657715 550.99414062]
[-178.81776428 554.04022217]
[-193.75425720 555.55859375]
[-208.76770020 555.53314209]
[-223.69894409 553.96405029]
[-238.38970947 550.86804199]
[-252.68428040 546.27789307]
[-266.43109131 540.24230957]
[-279.48446655 532.82519531]
[-291.70599365 524.10516357]
[-302.96615601 514.17474365]
[-313.14553833 503.13919067]
[-322.13629150 491.11544800]
[-329.84304810 478.23095703]
[-336.18417358 464.62234497]
[-341.09237671 450.43386841]
[-344.51571655 435.81588745]
[-346.41781616 420.92340088]
[-346.77856445 405.91427612]
[-345.59414673 390.94760132]
[-342.87707520 376.18206787]
[-338.65615845 361.77413940]
[-332.97616577 347.87658691]
[-325.89730835 334.63674927]
[-317.49462891 322.19491577]
[-307.85717773 310.68304443]
[-297.08709717 300.22311401]
[-285.29861450 290.92605591]
[-272.61666870 282.89038086]
[-259.17568970 276.20129395]
[-245.11814880 270.92968750]
[-230.59309387 267.13143921]
[-215.75447083 264.84686279]
[-200.75958252 264.10009766]
[-185.76741028 264.89913940]
[-170.93684387 267.23544312]
[-156.42510986 271.08432007]
[-142.38604736 276.40490723]
[-128.96846008 283.14080811]
[-116.31460571 291.22067261]
[-104.55860901 300.55877686]
[-94.07110596 289.83441162]
[-83.58361053 279.11001587]
[-73.09610748 268.38565063]
[-62.60860443 257.66128540]
[-52.12110519 246.93688965]
[-48.75446701 232.42774963]
[-33.57399750 227.97087097]
[-23.08649635 217.24649048]
[-19.71986008 202.73735046]
[-4.53938961 198.28045654]
[5.94811153 187.55607605]
[16.43561172 176.83169556]
[19.86563873 159.62118530]
[37.63871765 154.80462646]
[47.96538544 143.92529297]
[58.29205322 133.04595947]
[68.61872101 122.16662598]
[78.94538879 111.28729248]
[89.27205658 100.40795898]
[97.68667603 87.99046326]
[103.96404266 74.36714935]
[110.24140167 60.74383163]
[116.51876068 47.12051392]
[122.79611969 33.49719620]
[127.93807983 19.40605736]
[131.91017151 4.94153309]
[135.88227844 -9.52299118]
[139.85437012 -23.98751450]
[143.82646179 -38.45203781]
[140.01974487 -53.80845261]
[150.85110474 -64.03249359]
[154.82319641 -78.49701691]
[156.60566711 -93.39073944]
[156.15905762 -108.38408661]
[155.71244812 -123.37743378]
[155.26585388 -138.37078857]
[140.52595520 -141.53288269]
[126.97141266 -148.13121033]
[115.39028168 -157.78215027]
[106.45586395 -169.92463684]
[100.68759155 -183.85267639]
[98.42083740 -198.75654602]
[99.78738403 -213.76974487]
[104.70777130 -228.01940918]
[112.89594269 -240.67710876]
[123.87584686 -251.00692749]
[137.00912476 -258.40829468]
[151.53224182 -262.45092773]
[166.60081482 -262.89978027]
[181.33879089 -259.72875977]
[194.88932800 -253.12220764]
[206.46459961 -243.46423340]
[215.39166260 -231.31634521]
[221.15147400 -217.38481140]
[223.40919495 -202.47956848]
[222.03355408 -187.46720886]
[217.10452271 -173.22052002]
[208.90867615 -160.56777954]
[197.92251587 -150.24462891]
[184.78474426 -142.85121155]
[170.25920105 -138.81739807]
[170.70581055 -123.82404327]
[171.15240479 -108.83069611]
[171.59901428 -93.83734131]
[178.02995300 -107.38883972]
[187.97523499 -118.61788177]
[200.65052795 -126.63890076]
[215.05622864 -130.81932068]
[230.05622864 -130.82946777]
[244.46755981 -126.66852570]
[257.15368652 -118.66465759]
[267.11413574 -107.44906616]
[273.56338501 -93.90628052]
[275.99282837 -79.10432434]
[274.21084595 -64.21054840]
[268.35800171 -50.39953995]
[258.89581299 -38.76048660]
[246.57058716 -30.21129799]
[232.35430908 -25.42619514]
[217.36811829 -24.78255463]
[202.79391479 -28.33113480]
[189.78106689 -35.79207993]
[179.35581970 -46.57698822]
[172.34034729 -59.83531570]
[169.28771973 -74.52492523]
[165.31562805 -60.06039810]
[169.40644836 -45.73858261]
[158.29098511 -34.47994232]
[154.31889343 -20.01541901]
[150.34680176 -5.55089474]
[146.37469482 8.91362953]
[142.40260315 23.37815285]
[153.83901978 13.67205048]
[168.45565796 10.30248928]
[182.98712158 14.02223873]
[194.18704224 24.00029564]
[199.55334473 38.00753784]
[197.88716125 52.91471481]
[189.56074524 65.39151764]
[176.43421936 72.65060425]
[161.44009399 73.07027435]
[147.92808533 66.55676270]
[138.91682434 54.56522369]
[136.41943359 39.77455902]
[130.14207458 53.39787292]
[123.86471558 67.02119446]
[117.58735657 80.64450836]
[111.30999756 94.26782227]
[123.02524567 84.90017700]
[136.74444580 78.83520508]
[151.55761719 76.47518921]
[166.48228455 77.97663879]
[180.52853394 83.23999023]
[192.76473999 91.91613007]
[202.37930298 103.42960358]
[208.73452759 117.01676941]
[211.40890503 131.77644348]
[210.22505188 146.72964478]
[205.26147461 160.88461304]
[196.84741211 173.30247498]
[185.54090881 183.15960693]
[172.09190369 189.80223083]
[157.39242554 192.78976440]
[142.41743469 191.92402649]
[128.16015625 187.26248169]
[115.56623840 179.11427307]
[105.47098541 168.01986694]
[98.54396820 154.71511841]
[95.24465179 140.08247375]
[95.79185486 125.09245300]
[100.15139771 110.73462677]
[89.82472229 121.61396027]
[79.49805450 132.49330139]
[69.17138672 143.37263489]
[58.84471893 154.25196838]
[48.51805115 165.13130188]
[48.07330322 178.02180481]
[39.24822235 186.87062073]
[27.15999222 187.31919861]
[16.67249107 198.04357910]
[6.18498993 208.76795959]
[2.06821847 224.04417419]
[-12.36211681 227.73399353]
[-22.84961700 238.45835876]
[-26.96638870 253.73458862]
[-41.39672470 257.42437744]
[-51.88422394 268.14877319]
[-62.37172699 278.87313843]
[-72.85923004 289.59753418]
[-83.34672546 300.32189941]
[-93.83422852 311.04629517]
[-84.23590088 322.59082031]
[-75.87548828 335.06109619]
[-68.84161377 348.32489014]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 207]
[57 206]
[58 205]
[59 204]
[60 203]
[61 202]
[63 200]
[64 199]
[66 197]
[67 196]
[68 195]
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[75 187]
[76 164]
[77 163]
[78 162]
[79 161]
[80 160]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[87 142]
[88 141]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
