%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[88.18505096 537.99682617]
[75.24289703 545.65661621]
[61.16720200 550.95245361]
[46.38569641 553.72338867]
[31.34758377 553.88531494]
[16.50984764 551.43322754]
[2.32339263 546.44165039]
[-10.78067017 539.06231689]
[-22.40412331 529.51947021]
[-32.19374466 518.10302734]
[-39.85203552 505.16003418]
[-45.14627075 491.08370972]
[-47.91556931 476.30191040]
[-48.07576752 461.26376343]
[-45.62199783 446.42630005]
[-40.62883377 432.24041748]
[-33.24800873 419.13720703]
[-23.70381546 407.51483154]
[-12.28629398 397.72650146]
[0.65759170 390.06967163]
[14.73449039 384.77703857]
[29.51662254 382.00942993]
[44.55477524 381.85092163]
[47.00049973 367.05166626]
[49.44622803 352.25238037]
[51.89195633 337.45312500]
[54.33768463 322.65383911]
[56.78340912 307.85458374]
[59.22913742 293.05529785]
[52.44196701 283.04226685]
[54.35842514 270.69274902]
[64.49008942 262.71075439]
[67.15588379 247.94952393]
[69.82167816 233.18830872]
[72.48747253 218.42709351]
[75.15326691 203.66587830]
[77.70910645 188.88522339]
[80.15483093 174.08595276]
[74.59622955 160.26744080]
[84.48008728 147.91349792]
[86.92581940 133.11422729]
[81.36721802 119.29571533]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[98.03679657 62.45661545]
[100.26191711 47.62257004]
[102.48703003 32.78852463]
[93.28754425 22.95064163]
[91.46045685 9.80255413]
[97.45088196 -1.82486832]
[108.87260437 -7.78922939]
[111.31833649 -22.58850098]
[113.76406097 -37.38777161]
[116.20979309 -52.18704224]
[118.65551758 -66.98631287]
[121.10124207 -81.78558350]
[123.54697418 -96.58485413]
[125.99269867 -111.38412476]
[117.05917358 -124.14460754]
[119.75031281 -139.11833191]
[131.97053528 -147.55644226]
[134.41625977 -162.35571289]
[136.86198425 -177.15498352]
[139.30772400 -191.95425415]
[140.86824036 -206.87286377]
[141.53802490 -221.85789490]
[142.20780945 -236.84294128]
[142.87759399 -251.82797241]
[130.21522522 -243.78656006]
[115.98432159 -248.52798462]
[110.67536163 -262.55706787]
[118.20191956 -275.53207397]
[133.01570129 -277.88830566]
[144.19589233 -267.89038086]
[145.97836304 -282.78411865]
[147.76083374 -297.67782593]
[149.54328918 -312.57153320]
[134.88394165 -315.80734253]
[120.61235809 -320.46441650]
[106.86596680 -326.49798584]
[93.77717590 -333.84985352]
[81.47203064 -342.44927979]
[70.06904602 -352.21343994]
[59.67803192 -363.04827881]
[50.39906693 -374.84945679]
[42.32151794 -387.50329590]
[35.52317810 -400.88796997]
[30.06951523 -414.87454224]
[26.01305771 -429.32833862]
[23.39286804 -444.11013794]
[22.23418617 -459.07757568]
[22.54816628 -474.08651733]
[24.33178520 -488.99240112]
[27.56786728 -503.65167236]
[32.22524643 -517.92315674]
[38.25906754 -531.66943359]
[45.61121750 -544.75805664]
[54.21089554 -557.06304932]
[63.97527313 -568.46582031]
[74.81031799 -578.85662842]
[86.61167145 -588.13537598]
[99.26568604 -596.21264648]
[112.65048981 -603.01074219]
[126.63717651 -608.46411133]
[141.09104919 -612.52026367]
[155.87289429 -615.14019775]
[170.84036255 -616.29858398]
[185.84928894 -615.98431396]
[200.75514221 -614.20037842]
[215.41435242 -610.96398926]
[229.68576050 -606.30633545]
[243.43190002 -600.27221680]
[256.52041626 -592.91979980]
[268.82519531 -584.31988525]
[280.22781372 -574.55529785]
[290.61837769 -563.72003174]
[299.89688110 -551.91851807]
[307.97390747 -539.26434326]
[314.77172852 -525.87939453]
[320.22482300 -511.89257812]
[324.28070068 -497.43862915]
[326.90029907 -482.65673828]
[328.05838013 -467.68927002]
[327.74380493 -452.68032837]
[325.95959473 -437.77450562]
[322.72293091 -423.11535645]
[318.06497192 -408.84405518]
[312.03060913 -395.09802246]
[304.67791748 -382.00967407]
[296.07775879 -369.70504761]
[286.31292725 -358.30264282]
[275.47747803 -347.91229248]
[263.67575073 -338.63403320]
[251.02139282 -330.55725098]
[237.63632202 -323.75970459]
[223.64941406 -318.30688477]
[209.19538879 -314.25128174]
[194.41343689 -311.63198853]
[179.44592285 -310.47418213]
[164.43701172 -310.78906250]
[162.65454102 -295.89535522]
[160.87207031 -281.00164795]
[159.08961487 -266.10794067]
[157.86264038 -251.15818787]
[157.19285583 -236.17315674]
[156.52307129 -221.18811035]
[155.85328674 -206.20307922]
[166.22264099 -217.04173279]
[180.96142578 -219.82884216]
[194.57244873 -213.52488708]
[201.97914124 -200.48106384]
[200.41897583 -185.56242371]
[190.47386169 -174.33323669]
[175.85307312 -170.98171997]
[162.00981140 -176.75788879]
[154.10699463 -189.50852966]
[151.66127014 -174.70925903]
[149.21553040 -159.90998840]
[146.76980591 -145.11071777]
[155.62547302 -133.18960571]
[153.35597229 -118.14620209]
[140.79197693 -108.93840027]
[138.34623718 -94.13912964]
[135.90051270 -79.33985901]
[133.45478821 -64.54058838]
[131.00906372 -49.74131393]
[128.56333923 -34.94204330]
[126.11760712 -20.14277267]
[123.67187500 -5.34350204]
[134.04098511 7.89735317]
[131.57690430 24.87507820]
[117.32107544 35.01364517]
[115.09596252 49.84768677]
[112.87084198 64.68173218]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[111.43401337 124.26454926]
[101.72509003 135.55995178]
[99.27935791 150.35922241]
[104.66302490 165.23628235]
[94.95410156 176.53167725]
[92.50837708 191.33094788]
[94.19667816 200.30799866]
[89.91448975 206.33166504]
[87.24869537 221.09289551]
[84.58289337 235.85411072]
[81.91709900 250.61532593]
[79.25130463 265.37652588]
[85.87818909 282.55694580]
[74.02841187 295.50103760]
[71.58267975 310.30029297]
[69.13695526 325.09957886]
[66.69122314 339.89883423]
[64.24549866 354.69812012]
[61.79977036 369.49737549]
[59.35404587 384.29666138]
[73.54163361 389.28500366]
[86.64736938 396.66134644]
[98.27298737 406.20159912]
[108.06519318 417.61578369]
[115.72641754 430.55706787]
[121.02384949 444.63217163]
[123.79650116 459.41336060]
[123.96010590 474.45144653]
[121.50970459 489.28945923]
[116.51976013 503.47647095]
[109.14190674 516.58135986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 199]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 185]
[38 184]
[40 182]
[41 181]
[43 179]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[52 170]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[62 160]
[63 159]
[64 158]
[65 157]
[66 148]
[67 147]
[68 146]
[69 145]
[75 144]
[76 143]
[77 142]
[78 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
