%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[18.23878098 740.52484131]
[5.14336777 748.09881592]
[-9.65202522 751.25341797]
[-24.69789505 749.67962646]
[-38.52020264 743.53149414]
[-49.76477814 733.41149902]
[-57.32999420 720.31103516]
[-60.47468567 705.51348877]
[-58.89076996 690.46868896]
[-52.73342133 676.65051270]
[-42.60587311 665.41271973]
[-29.50032234 657.85632324]
[-14.70071507 654.72149658]
[-13.14019203 639.80291748]
[-11.57966900 624.88433838]
[-10.01914597 609.96569824]
[-8.45862293 595.04711914]
[-6.89809942 580.12847900]
[-5.33757639 565.20989990]
[-16.33367348 575.41210938]
[-31.21222878 577.31701660]
[-44.42390442 570.21411133]
[-51.04107666 556.75256348]
[-48.59569931 541.95324707]
[-37.99984360 531.33587646]
[-23.20549583 528.86059570]
[-9.73058510 535.45043945]
[-2.60070467 548.64886475]
[0.72155488 534.02142334]
[-5.45759726 523.62213135]
[-2.80948067 511.40859985]
[7.77931833 504.04379272]
[11.31899071 489.46743774]
[14.85866356 474.89105225]
[18.39833641 460.31466675]
[21.93800735 445.73831177]
[25.47768021 431.16192627]
[11.14938354 421.35208130]
[1.66791511 406.76232910]
[-1.48990083 389.61544800]
[2.18686962 372.53622437]
[12.16082573 358.14968872]
[26.92458916 348.67764282]
[44.22856522 345.59555054]
[47.11383820 330.87564087]
[49.99911118 316.15576172]
[52.88438416 301.43585205]
[55.76965714 286.71597290]
[42.67763901 279.49377441]
[32.44506836 268.56378174]
[26.08324623 254.98780823]
[24.22659492 240.09004211]
[27.06943321 225.32789612]
[34.34570694 212.14945984]
[45.35384369 201.85144043]
[59.02438354 195.45153809]
[74.02386475 193.58789062]
[76.90913391 178.86799622]
[79.79440308 164.14811707]
[82.67967987 149.42822266]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[84.34903717 82.92932129]
[69.89859009 78.90632629]
[62.40549850 65.91195679]
[66.16214752 51.38998413]
[79.01655579 43.65925980]
[93.60514069 47.14828491]
[101.57072449 59.85745621]
[105.97172546 45.51760864]
[110.37271881 31.17776108]
[114.77371979 16.83791351]
[119.17472076 2.49806643]
[123.57571411 -11.84178066]
[127.97671509 -26.18162727]
[127.50288391 -35.30376053]
[132.55145264 -40.70132446]
[137.16546631 -54.97406006]
[141.77947998 -69.24679565]
[137.50730896 -87.15852356]
[150.98020935 -98.40343475]
[155.38121033 -112.74328613]
[154.21073914 -117.83023834]
[155.02696228 -122.40047455]
[157.30036926 -125.78377533]
[160.31216431 -127.61719513]
[165.34907532 -141.74621582]
[162.69505310 -157.34323120]
[174.25683594 -166.73335266]
[179.29376221 -180.86238098]
[184.33067322 -194.99142456]
[189.36758423 -209.12045288]
[194.40451050 -223.24948120]
[199.44142151 -237.37850952]
[186.27305603 -244.63043213]
[174.43859863 -253.90090942]
[164.24458313 -264.94979858]
[155.95506287 -277.49093628]
[149.78474426 -291.19946289]
[145.89347839 -305.72027588]
[144.38203430 -320.67727661]
[145.28956604 -335.68301392]
[148.59257507 -350.34884644]
[154.20550537 -364.29486084]
[161.98295593 -377.15982056]
[171.72349548 -388.61050415]
[183.17478943 -398.35031128]
[196.04025269 -406.12695312]
[209.98660278 -411.73901367]
[224.65263367 -415.04107666]
[239.65844727 -415.94769287]
[254.61534119 -414.43530273]
[269.13592529 -410.54309082]
[282.84405518 -404.37191772]
[295.38464355 -396.08160400]
[306.43292236 -385.88690186]
[315.70263672 -374.05184937]
[322.95373535 -360.88302612]
[327.99838257 -346.72155762]
[330.70590210 -331.93420410]
[331.00616455 -316.90405273]
[328.89138794 -302.02035522]
[324.41635132 -287.66870117]
[317.69699097 -274.22079468]
[308.90731812 -262.02496338]
[298.27502441 -251.39714050]
[286.07553101 -242.61259460]
[272.62481689 -235.89886475]
[258.27127075 -231.42984009]
[243.38670349 -229.32131958]
[228.35665894 -229.62786865]
[213.57044983 -232.34158325]
[208.53353882 -218.21255493]
[203.49662781 -204.08352661]
[198.45970154 -189.95449829]
[193.42279053 -175.82546997]
[188.38587952 -161.69644165]
[191.40016174 -147.11003113]
[179.47810364 -136.70930481]
[174.44119263 -122.58027649]
[169.72105408 -108.34228516]
[165.32005310 -94.00244141]
[170.70863342 -83.17240143]
[167.15945435 -71.18961334]
[156.05221558 -64.63278198]
[151.43820190 -50.36005020]
[146.82418823 -36.08731461]
[142.31655884 -21.78063011]
[137.91555786 -7.44078255]
[133.51457214 6.89906454]
[129.11357117 21.23891258]
[124.71257019 35.57875824]
[120.31156921 49.91860580]
[115.91057587 64.25845337]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[97.39956665 152.31349182]
[94.51429749 167.03338623]
[91.62902832 181.75328064]
[88.74375153 196.47315979]
[101.92973328 203.86149597]
[112.17259216 214.94871521]
[118.47844696 228.64047241]
[120.24118042 243.59065247]
[117.30066681 258.33364868]
[109.95720673 271.42810059]
[98.94095612 281.59777832]
[85.33929443 287.85598755]
[70.48954773 289.60125732]
[67.60427856 304.32113647]
[64.71900177 319.04101562]
[61.83373260 333.76092529]
[58.94845963 348.48080444]
[70.08033752 354.68704224]
[79.00708008 363.75860596]
[85.01644135 374.95736694]
[87.63299561 387.37606812]
[86.65570068 400.01177979]
[82.17334747 411.84695435]
[74.55658722 421.93136597]
[64.42727661 429.45834351]
[52.60775757 433.82937622]
[40.05405426 434.70159912]
[36.51438522 449.27798462]
[32.97471237 463.85433960]
[29.43503761 478.43072510]
[25.89536667 493.00711060]
[22.35569382 507.58346558]
[27.94823456 525.12786865]
[15.34901524 537.34368896]
[12.02675533 551.97113037]
[9.58102798 566.77038574]
[8.02050495 581.68902588]
[6.45998192 596.60760498]
[4.89945889 611.52624512]
[3.33893609 626.44482422]
[1.77841306 641.36346436]
[0.21789010 656.28204346]
[14.04842472 662.41162109]
[25.30655289 672.51654053]
[32.88931656 685.60687256]
[36.05383682 700.40014648]
[34.49008560 715.44708252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[28 198]
[29 197]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[44 180]
[45 179]
[46 178]
[47 177]
[48 176]
[57 167]
[58 166]
[59 165]
[60 164]
[61 163]
[62 162]
[63 161]
[65 160]
[66 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 153]
[79 152]
[81 151]
[82 150]
[83 149]
[85 146]
[86 145]
[90 144]
[91 143]
[93 141]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
