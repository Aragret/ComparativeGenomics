%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[36.15532684 482.96197510]
[36.18130112 498.01831055]
[33.07593155 512.75097656]
[26.97497559 526.51580811]
[18.14513969 538.71124268]
[6.97242594 548.80401611]
[-6.05474091 556.35296631]
[-20.36686897 561.02807617]
[-35.33829498 562.62493896]
[-50.31453323 561.07385254]
[-64.64088440 556.44250488]
[-77.69106293 548.93341064]
[-88.89457703 538.87481689]
[-97.76164246 526.70648193]
[-103.90464020 512.96026611]
[-107.05503082 498.23721313]
[-107.07507324 483.18087769]
[-103.96391296 468.44946289]
[-97.85754395 454.68698120]
[-89.02291107 442.49505615]
[-77.84622192 432.40667725]
[-64.81608582 424.86285400]
[-50.50212097 420.19338989]
[-35.53006744 418.60238647]
[-20.55444336 420.15939331]
[-15.94043350 405.88665771]
[-11.43280506 391.57998657]
[-7.03180695 377.24014282]
[-20.75645447 383.29275513]
[-34.79036713 377.99658203]
[-41.09427643 364.38552856]
[-36.05702209 350.25662231]
[-22.56416893 343.70352173]
[-8.34503841 348.48016357]
[-1.54507029 361.84930420]
[4.11771631 347.95928955]
[9.78050327 334.06927490]
[15.44328976 320.17922974]
[21.10607529 306.28921509]
[12.25319862 288.93579102]
[19.12286949 270.38018799]
[37.70653534 262.74298096]
[42.74345398 248.61395264]
[47.78036880 234.48492432]
[52.81728363 220.35589600]
[57.64328384 206.15344238]
[62.25729370 191.88070679]
[66.87129974 177.60797119]
[71.48531342 163.33523560]
[76.09931946 149.06250000]
[80.71333313 134.78976440]
[85.32733917 120.51703644]
[89.94134521 106.24430084]
[78.71700287 116.19488525]
[64.56441498 121.16522217]
[49.58303833 120.41800690]
[35.99526978 114.06406403]
[25.81677437 103.04598236]
[20.55747032 88.99821472]
[20.99754333 74.00466919]
[27.07171440 60.28955460]
[37.87891388 49.88741684]
[51.81595993 44.34135818]
[66.81536865 44.47410202]
[80.65207672 50.26595306]
[91.27348328 60.85772705]
[97.10397339 74.67819977]
[97.27896118 89.67530060]
[104.74670410 76.66635132]
[112.21444702 63.65739822]
[112.57987213 57.05603409]
[115.74858093 52.33837891]
[120.10314941 50.37705612]
[127.95491028 37.59621429]
[135.80667114 24.81537247]
[143.65841675 12.03453064]
[151.51017761 -0.74631232]
[152.07199097 -7.33386898]
[155.37976074 -11.95509052]
[159.79078674 -13.78588963]
[168.01959229 -26.32728958]
[176.24839783 -38.86869049]
[184.47721863 -51.41009140]
[192.70602417 -63.95149231]
[200.93482971 -76.49288940]
[208.40257263 -89.50184631]
[215.08276367 -102.93222046]
[221.76295471 -116.36259460]
[228.44316101 -129.79296875]
[232.52282715 -144.22752380]
[233.86105347 -159.16770935]
[235.19929504 -174.10789490]
[236.53752136 -189.04808044]
[237.87576294 -203.98826599]
[239.21398926 -218.92845154]
[236.78326416 -225.07687378]
[237.68685913 -230.68762207]
[240.82098389 -234.29129028]
[242.60345459 -249.18499756]
[228.71278381 -255.12017822]
[217.05781555 -264.72946167]
[208.58332825 -277.23382568]
[203.97631836 -291.61965942]
[203.61027527 -306.72076416]
[207.51484680 -321.31289673]
[215.37353516 -334.21322632]
[226.54924011 -344.37588501]
[240.13601685 -350.97711182]
[255.03245544 -353.48175049]
[270.03094482 -351.68673706]
[283.91561890 -345.73760986]
[295.56094360 -336.11663818]
[304.02285767 -323.60375977]
[308.61541748 -309.21328735]
[308.96627808 -294.11184692]
[305.04705811 -279.52362061]
[297.17541504 -266.63122559]
[285.98950195 -256.47976685]
[272.39608765 -249.89219666]
[257.49716187 -247.40254211]
[255.71470642 -232.50881958]
[254.15417480 -217.59020996]
[252.81594849 -202.65002441]
[251.47770691 -187.70983887]
[250.13948059 -172.76965332]
[248.80123901 -157.82946777]
[247.46301270 -142.88929749]
[255.27476501 -155.69462585]
[265.79522705 -166.38667297]
[278.47250366 -174.40454102]
[292.64160156 -179.32766724]
[307.55920410 -180.89775085]
[322.44277954 -179.03245544]
[336.51153564 -173.82962036]
[349.02749634 -165.56216431]
[359.33410645 -154.66380310]
[366.89065552 -141.70623779]
[371.30075073 -127.36919403]
[372.33306885 -112.40476227]
[369.93347168 -97.59793854]
[364.22778320 -83.72547913]
[355.51535034 -71.51509094]
[344.25320435 -61.60730743]
[331.03213501 -54.52187347]
[316.54571533 -50.63048172]
[301.55380249 -50.13725662]
[286.84292603 -53.06808090]
[273.18475342 -59.26920700]
[261.29574585 -68.41533661]
[251.79959106 -80.02667236]
[245.19445801 -93.49412537]
[241.82681274 -108.11119843]
[241.87353516 -123.11277771]
[235.19332886 -109.68240356]
[228.51313782 -96.25202179]
[221.83294678 -82.82164764]
[235.70298767 -88.53320312]
[250.30798340 -85.11353302]
[260.20062256 -73.83809662]
[261.69122314 -58.91233826]
[254.22377014 -45.90320969]
[240.58349609 -39.66278839]
[225.85786438 -42.51859665]
[215.53916931 -53.40549469]
[213.47622681 -68.26408386]
[205.24742126 -55.72268295]
[197.01861572 -43.18128204]
[188.78981018 -30.63988304]
[180.56100464 -18.09848213]
[172.33218384 -5.55708170]
[164.29101562 7.10544300]
[156.43925476 19.88628578]
[148.58750916 32.66712952]
[140.73574829 45.44797134]
[132.88400269 58.22881317]
[125.22339630 71.12513733]
[117.75565338 84.13409424]
[110.28791809 97.14304352]
[104.21408081 110.85831451]
[99.60007477 125.13104248]
[94.98606110 139.40377808]
[90.37205505 153.67651367]
[85.75804138 167.94924927]
[81.14403534 182.22198486]
[76.53002930 196.49470520]
[71.91601562 210.76744080]
[72.92459106 217.30152893]
[70.80074310 222.57279968]
[66.94631195 225.39280701]
[61.90939713 239.52183533]
[56.87248230 253.65086365]
[51.83556747 267.77990723]
[58.66741562 275.97439575]
[61.46017456 286.18750000]
[59.77457428 296.55871582]
[53.98092270 305.22741699]
[45.18035126 310.66668701]
[34.99610138 311.95199585]
[29.33331680 325.84201050]
[23.67053032 339.73205566]
[18.00774384 353.62207031]
[12.34495640 367.51211548]
[7.30804062 381.64114380]
[2.90704226 395.98098755]
[3.38087201 405.10311890]
[-1.66769993 410.50067139]
[-6.28170919 424.77340698]
[6.77142334 432.27737427]
[17.97888947 442.33154297]
[26.85074425 454.49639893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 207]
[26 206]
[27 204]
[28 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[42 192]
[43 191]
[44 190]
[45 189]
[46 186]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[68 178]
[69 177]
[70 176]
[73 175]
[74 174]
[75 173]
[76 172]
[77 171]
[80 170]
[81 169]
[82 168]
[83 167]
[84 166]
[85 165]
[86 156]
[87 155]
[88 154]
[89 153]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
