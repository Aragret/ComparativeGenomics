%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[161.69879150 329.79953003]
[165.95223999 315.39855957]
[171.79136658 301.56436157]
[179.14276123 288.47097778]
[187.91394043 276.28302002]
[197.99461365 265.15377808]
[209.25801086 255.22320557]
[200.65943909 242.93237305]
[192.06088257 230.64152527]
[183.46231079 218.35069275]
[174.86375427 206.05984497]
[166.08314514 193.89839172]
[157.12245178 181.86901855]
[148.16175842 169.83964539]
[139.20106506 157.81025696]
[129.79890442 146.12268066]
[119.96832275 134.79309082]
[110.13774109 123.46349335]
[100.30716705 112.13390350]
[103.58213806 126.77202606]
[101.99214935 141.68751526]
[95.70499420 155.30632019]
[85.38417053 166.19119263]
[72.11885834 173.19345093]
[57.30898666 175.57411194]
[42.51746368 173.08195496]
[29.30528069 165.97996521]
[19.06674957 155.01763916]
[12.88236809 141.35186768]
[11.40478802 126.42481995]
[14.78994083 111.81178284]
[22.68058586 99.05491638]
[34.24399948 89.50047302]
[48.25987625 84.15675354]
[63.24907684 83.58770752]
[77.62976074 87.85337067]
[89.88443756 96.50372314]
[83.20423889 83.07334900]
[76.52404785 69.64296722]
[63.45053482 60.73265076]
[64.71015167 45.89139938]
[58.08640289 39.60142517]
[58.03215027 32.21096802]
[51.55265427 18.68262291]
[38.61325455 9.57864285]
[40.09369278 -5.24220657]
[33.61419678 -18.77055168]
[27.13469887 -32.29889679]
[13.16327858 -26.82150650]
[-1.17069566 -22.37858200]
[-15.79074478 -18.99382782]
[-30.61886406 -16.68530464]
[-45.57593918 -15.46532917]
[-60.58216476 -15.34040928]
[-75.55747223 -16.31121254]
[-90.42197418 -18.37256050]
[-105.09634399 -21.51345253]
[-119.50229645 -25.71713257]
[-133.56297302 -30.96117020]
[-147.20333862 -37.21758652]
[-160.35063171 -44.45299911]
[-172.93469238 -52.62880707]
[-184.88838196 -61.70138550]
[-196.14791870 -71.62232971]
[-206.65324402 -82.33869934]
[-216.34828186 -93.79333496]
[-225.18132019 -105.92510223]
[-233.10523987 -118.66927338]
[-240.07772827 -131.95787048]
[-246.06163025 -145.71997070]
[-251.02497864 -159.88215637]
[-254.94131470 -174.36886597]
[-257.78973389 -189.10279846]
[-259.55502319 -204.00535583]
[-260.22781372 -218.99700928]
[-259.80447388 -233.99778748]
[-258.28726196 -248.92764282]
[-255.68428040 -263.70690918]
[-252.00941467 -278.25674438]
[-247.28228760 -292.49951172]
[-241.52810669 -306.35925293]
[-234.77757263 -319.76196289]
[-227.06671143 -332.63616943]
[-218.43666077 -344.91314697]
[-208.93347168 -356.52743530]
[-198.60783386 -367.41705322]
[-187.51484680 -377.52389526]
[-175.71369934 -386.79400635]
[-163.26734924 -395.17797852]
[-150.24221802 -402.63104248]
[-136.70779419 -409.11346436]
[-122.73628235 -414.59063721]
[-108.40223694 -419.03332520]
[-93.78212738 -422.41781616]
[-78.95397186 -424.72610474]
[-63.99687576 -425.94583130]
[-48.99065018 -426.07052612]
[-34.01535416 -425.09945679]
[-19.15089226 -423.03787231]
[-4.47657156 -419.89672852]
[9.92931271 -415.69281006]
[23.98989868 -410.44854736]
[37.63016510 -404.19192505]
[50.77733231 -396.95629883]
[63.36125946 -388.78027344]
[75.31480408 -379.70748901]
[86.57418060 -369.78637695]
[97.07932281 -359.06982422]
[106.77417755 -347.61502075]
[115.60702515 -335.48312378]
[123.53072357 -322.73880005]
[130.50300598 -309.45010376]
[136.48666382 -295.68789673]
[141.44978333 -281.52563477]
[145.36589050 -267.03887939]
[148.21406555 -252.30488586]
[149.97912598 -237.40229797]
[150.65164185 -222.41062927]
[150.22805786 -207.40986633]
[148.71060181 -192.48004150]
[146.10737610 -177.70080566]
[142.43228149 -163.15103149]
[137.70492554 -148.90832520]
[131.95051575 -135.04870605]
[125.19976807 -121.64610291]
[117.48869324 -108.77202606]
[108.85843658 -96.49517059]
[99.35504913 -84.88104248]
[89.02923584 -73.99160004]
[77.93608856 -63.88494873]
[66.13478851 -54.61501312]
[53.68830109 -46.23125076]
[40.66304398 -38.77839279]
[47.14253998 -25.25004768]
[53.62203598 -11.72170258]
[66.09798431 -3.58536053]
[65.08100128 12.20312595]
[71.56049347 25.73147202]
[78.14052582 39.21120453]
[90.73622131 47.16089630]
[89.95442200 62.96277618]
[96.63462067 76.39315033]
[103.31481171 89.82353210]
[111.63675690 102.30332184]
[121.46733856 113.63291168]
[131.29791260 124.96250916]
[141.12849426 136.29209900]
[144.77630615 121.74240875]
[158.36203003 115.38411713]
[171.87080383 121.90432739]
[175.34445190 136.49658203]
[166.22232056 148.40400696]
[151.23043823 148.84956360]
[160.19113159 160.87895203]
[169.15182495 172.90832520]
[178.11251831 184.93769836]
[184.02273560 187.90095520]
[187.08895874 192.68585205]
[187.15458679 197.46128845]
[195.75314331 209.75212097]
[204.35171509 222.04296875]
[212.95027161 234.33380127]
[221.54884338 246.62463379]
[234.73876953 239.44787598]
[248.64930725 233.79307556]
[263.10552979 229.73133850]
[277.92562866 227.31376648]
[292.92321777 226.57073975]
[307.90969849 227.51162720]
[322.69662476 230.12457275]
[337.09796143 234.37673950]
[350.93267822 240.21463013]
[364.02673340 247.56484985]
[376.21548462 256.33493042]
[387.34564209 266.41461182]
[397.27719116 277.67709351]
[405.88531494 289.98080444]
[413.06167603 303.17092896]
[418.71606445 317.08163452]
[422.77737427 331.53799438]
[425.19448853 346.35815430]
[425.93707275 361.35577393]
[424.99572754 376.34222412]
[422.38235474 391.12905884]
[418.12976074 405.53027344]
[412.29144287 419.36480713]
[404.94082642 432.45864868]
[396.17037964 444.64715576]
[386.09036255 455.77697754]
[374.82757568 465.70822144]
[362.52365112 474.31594849]
[349.33328247 481.49191284]
[335.42239380 487.14590454]
[320.96594238 491.20675659]
[306.14569092 493.62347412]
[291.14807129 494.36557007]
[276.16162109 493.42379761]
[261.37487793 490.80996704]
[246.97377014 486.55694580]
[233.13941956 480.71823120]
[220.04580688 473.36721802]
[207.85757446 464.59640503]
[196.72804260 454.51608276]
[186.79713440 443.25299072]
[178.18977356 430.94879150]
[171.01419067 417.75820923]
[165.36064148 403.84716797]
[161.30020142 389.39056396]
[158.88395691 374.57025146]
[158.14227295 359.57260132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 163]
[8 162]
[9 161]
[10 160]
[11 159]
[12 156]
[13 155]
[14 154]
[15 153]
[16 147]
[17 146]
[18 145]
[19 144]
[37 143]
[38 142]
[39 141]
[41 139]
[43 138]
[44 137]
[46 135]
[47 134]
[48 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
