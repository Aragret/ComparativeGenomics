%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[130.77461243 626.78375244]
[134.80145264 612.27587891]
[141.75700378 598.92242432]
[151.33720398 587.30718994]
[163.12322998 577.93792725]
[176.59986877 571.22424316]
[172.84356689 556.70214844]
[169.08726501 542.18011475]
[165.33096313 527.65802002]
[161.57466125 513.13598633]
[157.81835938 498.61392212]
[143.36967468 498.99270630]
[129.19303894 496.13821411]
[116.00318909 490.19094849]
[104.46585846 481.44735718]
[95.16422272 470.34521484]
[88.56936646 457.44158936]
[85.01644897 443.38491821]
[84.68769836 428.88238525]
[87.60301208 414.66442871]
[93.61883545 401.44787598]
[102.43519592 389.89978027]
[113.61069489 380.60394287]
[126.58454895 374.03109741]
[123.04487610 359.45471191]
[119.50520325 344.87835693]
[115.96553040 330.30197144]
[112.42585754 315.72558594]
[108.88618469 301.14923096]
[105.34604645 297.94354248]
[103.78212738 292.47991943]
[105.46499634 286.08621216]
[102.36088562 271.41088867]
[97.01654053 285.42654419]
[86.17996979 295.79806519]
[71.94354248 300.52291870]
[57.05609894 298.68878174]
[44.39216614 290.64984131]
[36.39695358 277.95825195]
[34.61420822 263.06454468]
[39.38815308 248.84452820]
[49.79701233 238.04379272]
[63.83100128 232.74783325]
[78.78037262 233.97921753]
[91.75863647 241.50015259]
[100.26037598 253.85968018]
[99.81376648 238.86633301]
[99.36716461 223.87297058]
[98.92055511 208.87962341]
[98.47395325 193.88627625]
[98.02734375 178.89292908]
[97.24602509 163.91328430]
[96.13037872 148.95483398]
[95.01472473 133.99638367]
[78.47576904 126.78273010]
[67.87251282 112.18325806]
[66.12899017 94.22402191]
[73.72601318 77.85762787]
[88.56856537 67.59738922]
[86.78610229 52.70367050]
[85.00363159 37.80995178]
[73.62767792 23.32999802]
[81.15814972 7.47885036]
[79.15413666 -7.38667774]
[77.15012360 -22.25220680]
[73.95823669 -26.38245583]
[72.78694153 -30.87482452]
[73.43581390 -34.89900208]
[75.40392303 -37.82455826]
[74.06568909 -52.76474380]
[71.06141663 -57.03340149]
[70.09188080 -61.57358932]
[70.91979980 -65.56478119]
[73.01657867 -68.39953613]
[72.34679413 -83.38457489]
[71.67700958 -98.36961365]
[71.00721741 -113.35465240]
[59.62641525 -123.99020386]
[59.16062546 -139.19671631]
[69.37013245 -149.98103333]
[68.70034790 -164.96606445]
[68.03056335 -179.95111084]
[66.24810028 -194.84481812]
[63.36282730 -209.56471252]
[60.47755432 -224.28460693]
[57.59228134 -239.00450134]
[54.70700836 -253.72438049]
[39.65015030 -254.58569336]
[25.28078079 -259.16522217]
[12.50217056 -267.17507935]
[2.11759257 -278.11178589]
[-5.22016859 -291.28781128]
[-9.04985619 -305.87493896]
[-9.13073158 -320.95620728]
[-5.45771217 -335.58355713]
[1.73831403 -348.83755493]
[12.00499821 -359.88500977]
[24.69696808 -368.03146362]
[39.01639557 -372.76483154]
[54.06314850 -373.78756714]
[68.89138031 -371.03540039]
[82.56896973 -364.68130493]
[94.23612976 -355.12475586]
[103.15946198 -342.96640015]
[108.77803040 -328.97061157]
[110.73865509 -314.01712036]
[108.91808319 -299.04592896]
[103.43075562 -284.99816895]
[94.62162018 -272.75683594]
[83.04441833 -263.09149170]
[69.42690277 -256.60964966]
[72.31217194 -241.88977051]
[75.19744110 -227.16987610]
[78.08271790 -212.44998169]
[80.96798706 -197.73008728]
[87.32241821 -211.31762695]
[99.56242371 -219.98840332]
[114.48848724 -221.47590637]
[128.19897461 -215.39129639]
[137.11000061 -203.32507324]
[138.89224243 -188.43133545]
[133.07981873 -174.60325623]
[121.19210052 -165.45545959]
[106.33649445 -163.37916565]
[92.39622498 -168.91711426]
[83.01560211 -180.62089539]
[83.68538666 -165.63584900]
[84.35517120 -150.65081787]
[95.48609924 -140.82034302]
[96.37882233 -125.63292694]
[85.99225616 -114.02443695]
[86.66204834 -99.03939819]
[87.33183289 -84.05435944]
[88.00161743 -69.06932068]
[89.00587463 -54.10297775]
[90.34410858 -39.16279221]
[92.01564789 -24.25621986]
[94.01966095 -9.39069176]
[96.02367401 5.47483683]
[105.44996643 13.05584049]
[107.24120331 25.42415619]
[99.89735413 36.02748489]
[101.67981720 50.92120361]
[103.46228027 65.81491852]
[114.76590729 68.97460938]
[124.34661865 75.75439453]
[131.08651733 85.36320496]
[134.19917297 96.67987061]
[133.32141113 108.38392639]
[128.55564880 119.10973358]
[120.45794678 127.60578156]
[109.97318268 132.88073730]
[111.08882904 147.83918762]
[112.20447540 162.79763794]
[115.14486694 167.11054993]
[116.04669189 171.66467285]
[115.15944672 175.64309692]
[113.02069855 178.44631958]
[113.46730042 193.43966675]
[113.91390991 208.43302917]
[114.36051178 223.42637634]
[114.80712128 238.41972351]
[115.25372314 253.41307068]
[117.03619385 268.30679321]
[120.14030457 282.98208618]
[123.46256256 297.60955811]
[127.00223541 312.18591309]
[130.54190063 326.76229858]
[134.08157349 341.33868408]
[137.62124634 355.91503906]
[141.16091919 370.49142456]
[156.75100708 370.50131226]
[171.87908936 374.23226929]
[185.67053223 381.46432495]
[197.32904053 391.77520752]
[206.18258667 404.56497192]
[211.72213745 419.09100342]
[213.63096619 434.51101685]
[211.80273438 449.93200684]
[206.34739685 464.46191406]
[197.58460999 477.26116943]
[186.02499390 487.59133911]
[172.34042358 494.85760498]
[176.09672546 509.37966919]
[179.85301208 523.90173340]
[183.60931396 538.42376709]
[187.36561584 552.94586182]
[191.12191772 567.46789551]
[206.16366577 566.80499268]
[221.01448059 569.28436279]
[235.02514648 574.79754639]
[247.58316040 583.10357666]
[258.13955688 593.83929443]
[266.23284912 606.53546143]
[271.50924683 620.63696289]
[273.73806763 635.52746582]
[272.82186890 650.55590820]
[268.80075073 665.06536865]
[261.85043335 678.42150879]
[252.27482605 690.04052734]
[240.49247742 699.41442871]
[227.01849365 706.13342285]
[212.44187927 709.90386963]
[197.39985657 710.56085205]
[182.55003357 708.07568359]
[168.54154968 702.55694580]
[155.98680115 694.24603271]
[145.43461609 683.50610352]
[137.34632874 670.80676270]
[132.07548523 656.70318604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[32 165]
[33 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 154]
[53 153]
[54 152]
[59 144]
[60 143]
[61 142]
[63 139]
[64 138]
[65 137]
[69 136]
[70 135]
[74 134]
[75 133]
[76 132]
[77 131]
[80 128]
[81 127]
[82 126]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
