%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[114.71081543 474.38696289]
[122.52909088 487.25006104]
[127.59767914 501.42379761]
[129.70901489 516.32769775]
[128.77665710 531.35156250]
[124.83876801 545.88006592]
[118.05661011 559.31835938]
[108.70790100 571.11608887]
[97.17548370 580.79016113]
[83.93157959 587.94445801]
[69.51853180 592.28601074]
[54.52654648 593.63702393]
[39.56953049 591.94213867]
[25.25996780 587.27081299]
[12.18382263 579.81433105]
[0.87655693 569.87799072]
[-8.19880390 557.86871338]
[-14.67063046 544.27825928]
[-18.27390289 529.66320801]
[-18.86107254 514.62188721]
[-16.40809441 499.77038574]
[-11.01541615 485.71676636]
[-2.90386343 473.03656006]
[7.59439993 462.24899292]
[20.04947662 453.79583740]
[33.95133972 448.02322388]
[48.73071289 445.16754150]
[63.78239441 445.34570312]
[78.49002838 448.55047607]
[84.56385803 434.83520508]
[90.63769531 421.11993408]
[96.71153259 407.40466309]
[102.78536224 393.68939209]
[105.67063904 378.96951294]
[105.22402954 363.97616577]
[104.77742767 348.98281860]
[104.33081818 333.98947144]
[93.80832672 326.55261230]
[89.42504120 314.22909546]
[92.99234772 301.44299316]
[103.42371368 292.92236328]
[103.20038605 277.92401123]
[102.97705841 262.92568970]
[102.75373077 247.92733765]
[102.53040314 232.92900085]
[85.97668457 219.61502075]
[84.65896606 198.12739563]
[99.85814667 182.48233032]
[98.51991272 167.54214478]
[89.67799377 155.55592346]
[96.15325165 141.12048340]
[94.81501770 126.18030548]
[93.47678375 111.24011993]
[91.69431305 96.34640503]
[89.46920013 81.51235962]
[86.91336823 66.73170471]
[84.02809143 52.01181412]
[81.14282227 37.29192352]
[78.25754547 22.57203102]
[70.73873138 35.55152893]
[57.07387924 41.73795700]
[42.35965347 38.82393646]
[32.08409119 27.89631844]
[30.07972336 13.03083801]
[37.09413147 -0.22804889]
[50.51111221 -6.93510580]
[65.32646942 -4.58876562]
[76.01497650 5.93687916]
[74.89932251 -9.02157402]
[73.78367615 -23.98002815]
[72.66802979 -38.93848038]
[69.26734161 -44.60830307]
[69.24401855 -50.29130173]
[71.74862671 -54.35774994]
[71.07884216 -69.34278870]
[70.40905762 -84.32782745]
[61.43461990 -93.59185791]
[61.18525314 -106.08672333]
[69.24932861 -115.10321808]
[68.80271912 -130.09657288]
[68.35611725 -145.08992004]
[67.90950775 -160.08326721]
[53.31491089 -163.94042969]
[40.41155624 -171.74592590]
[30.24073982 -182.85986328]
[23.62042427 -196.37576294]
[21.07946205 -211.19451904]
[22.81534958 -226.11372375]
[28.67892075 -239.92529297]
[38.18710709 -251.51321411]
[50.56273270 -259.94381714]
[64.79803467 -264.54095459]
[64.35143280 -279.53430176]
[63.90482330 -294.52764893]
[63.45821762 -309.52099609]
[48.93275833 -313.74783325]
[36.42552567 -322.25808716]
[27.16185951 -334.21798706]
[22.04931450 -348.45587158]
[21.58876610 -363.57681274]
[25.82533455 -378.09945679]
[34.34396744 -390.60098267]
[46.31008911 -399.85662842]
[60.55138779 -404.95962524]
[75.67263794 -405.41003418]
[90.19242096 -401.16375732]
[102.68824005 -392.63674927]
[111.93586731 -380.66442871]
[117.02932739 -366.41970825]
[117.46961212 -351.29815674]
[113.21358490 -336.78121948]
[104.67820740 -324.29110718]
[92.69969177 -315.05151367]
[78.45156860 -309.96759033]
[78.89817810 -294.97424316]
[79.34477997 -279.98089600]
[79.79138947 -264.98754883]
[94.27507782 -261.24588013]
[107.13056183 -253.56683350]
[117.31161499 -242.56538391]
[123.98686981 -229.12731934]
[126.60768890 -214.33787537]
[124.95325470 -199.39414978]
[119.14916229 -185.50816345]
[109.65789032 -173.80856323]
[97.24200439 -165.24888611]
[82.90286255 -160.52987671]
[83.34946442 -145.53652954]
[83.79607391 -130.54318237]
[84.24267578 -115.54982758]
[94.25688934 -101.13863373]
[85.39409637 -84.99761200]
[86.06388092 -70.01257324]
[86.73366547 -55.02753448]
[87.62648010 -40.05413055]
[88.74212646 -25.09567642]
[89.85778046 -10.13722324]
[90.97342682 4.82123041]
[92.97743988 19.68675804]
[95.86270905 34.40665054]
[98.74798584 49.12654114]
[101.63325500 63.84643173]
[104.33975983 66.10633850]
[106.08612823 69.78944397]
[106.21536255 74.43019867]
[104.30324554 79.28723907]
[106.52835846 94.12128448]
[108.81701660 96.13413239]
[110.42386627 99.02421570]
[111.02257538 102.54060364]
[110.38410187 106.31533813]
[108.41696930 109.90188599]
[109.75520325 124.84207153]
[111.09343719 139.78225708]
[120.03107452 152.83711243]
[113.46009827 166.20391846]
[114.79833221 181.14410400]
[123.11208344 184.37184143]
[129.89421082 190.09606934]
[134.42799377 197.67495728]
[136.24636841 206.27279663]
[135.17988586 214.95211792]
[131.37211609 222.77586365]
[125.26100922 228.90859985]
[117.52873993 232.70567322]
[117.75206757 247.70401001]
[117.97539520 262.70236206]
[118.19872284 277.70068359]
[118.42205048 292.69903564]
[131.19557190 304.65130615]
[131.36930847 321.80603027]
[119.32416534 333.54284668]
[119.77077484 348.53619385]
[120.21737671 363.52954102]
[120.66398621 378.52291870]
[126.92174530 364.89056396]
[135.68603516 352.71734619]
[146.62922668 342.45837402]
[159.34216309 334.49716187]
[173.34959412 329.13134766]
[188.12782288 326.56152344]
[203.12435913 326.88378906]
[217.77854919 330.08609009]
[231.54252625 336.04870605]
[243.90173340 344.54870605]
[254.39408875 355.26834106]
[262.62734985 367.80682373]
[268.29370117 381.69537354]
[271.18130493 396.41482544]
[271.18218994 411.41482544]
[268.29632568 426.13461304]
[262.63162231 440.02383423]
[254.39985657 452.56329346]
[243.90876770 463.28417969]
[231.55056763 471.78564453]
[217.78729248 477.74987793]
[203.13348389 480.95391846]
[188.13697815 481.27795410]
[173.35844421 478.70989990]
[159.35038757 473.34573364]
[146.63650513 465.38601685]
[135.69210815 455.12832642]
[126.92636108 442.95614624]
[120.66699219 429.32455444]
[117.14800262 414.74319458]
[116.50063324 399.76324463]
[110.42679596 413.47851562]
[104.35295868 427.19375610]
[98.27912903 440.90902710]
[92.20529175 454.62429810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 210]
[30 209]
[31 208]
[32 207]
[33 206]
[34 175]
[35 174]
[36 173]
[37 172]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[48 157]
[49 156]
[51 154]
[52 153]
[53 152]
[54 147]
[55 146]
[56 142]
[57 141]
[58 140]
[59 139]
[68 138]
[69 137]
[70 136]
[71 135]
[74 134]
[75 133]
[76 132]
[79 130]
[80 129]
[81 128]
[82 127]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
