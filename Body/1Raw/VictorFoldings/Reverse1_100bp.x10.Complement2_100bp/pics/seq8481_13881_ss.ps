%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[116.51196289 396.53970337]
[119.88438416 381.85723877]
[126.43988037 368.29357910]
[135.84962463 356.52902222]
[147.64161682 347.15371704]
[161.22439575 340.63787842]
[157.90214539 326.01043701]
[154.57987976 311.38296509]
[151.25761414 296.75552368]
[147.93536377 282.12805176]
[144.61309814 267.50057983]
[141.29084778 252.87313843]
[137.31874084 238.40861511]
[132.70472717 224.13587952]
[128.09072876 209.86314392]
[123.47671509 195.59040833]
[118.86270905 181.31767273]
[114.24869537 167.04493713]
[109.63468933 152.77220154]
[105.02067566 138.49948120]
[100.30054474 124.26148224]
[95.47454834 110.05902863]
[86.60388947 122.15496063]
[71.62310028 122.91387177]
[61.57545853 111.77632141]
[63.86771393 96.95250702]
[76.81009674 89.36997986]
[90.86081696 94.61711884]
[87.10452271 80.09506226]
[76.15791321 68.67217255]
[80.46151733 54.41285324]
[76.70521545 39.89079285]
[72.94891357 25.36873436]
[69.19261169 10.84667587]
[58.24600601 -0.57621086]
[62.54961014 -14.83553219]
[58.79330826 -29.35759163]
[55.74675369 -14.67023277]
[49.65467072 -0.96306205]
[40.79421234 11.14033699]
[29.56846809 21.08934021]
[16.48813438 28.43133354]
[2.14827919 32.83230591]
[-12.79872990 34.09204102]
[-27.67290306 32.15323257]
[-41.79756546 27.10408020]
[-54.53013611 19.17428970]
[-65.29137421 8.72461033]
[-73.59170532 -3.76956534]
[-79.05353546 -17.73983574]
[-81.42837524 -32.55064774]
[-80.60818481 -47.52820587]
[-76.63027954 -61.99113464]
[-69.67563629 -75.28146362]
[-60.06063461 -86.79457855]
[-48.22269440 -96.00669861]
[-34.70036697 -102.49874115]
[-20.10882378 -105.97536469]
[-5.11188459 -106.27839661]
[9.60818958 -103.39405823]
[23.38173485 -97.45355988]
[35.58214569 -88.72716522]
[45.65438461 -77.61186218]
[53.14023209 -64.61331940]
[57.70000076 -50.31864548]
[59.92512131 -65.15268707]
[62.15023804 -79.98673248]
[64.37535095 -94.82077789]
[66.60047150 -109.65482330]
[68.82558441 -124.48886871]
[54.19810486 -127.84437561]
[39.87040329 -132.30976868]
[25.92657089 -137.85885620]
[12.44843006 -144.45904541]
[-0.48491865 -152.07160950]
[-12.79757786 -160.65188599]
[-24.41729164 -170.14952087]
[-35.27586746 -180.50877380]
[-45.30958557 -191.66883850]
[-54.45956421 -203.56425476]
[-62.67210388 -216.12518311]
[-69.89900970 -229.27792358]
[-76.09786987 -242.94528198]
[-81.23230743 -257.04705811]
[-85.27219391 -271.50051880]
[-88.19382477 -286.22079468]
[-89.98004150 -301.12155151]
[-90.62036896 -316.11529541]
[-90.11105347 -331.11407471]
[-88.45507812 -346.02984619]
[-85.66216278 -360.77511597]
[-81.74870300 -375.26330566]
[-76.73765564 -389.40939331]
[-70.65843201 -403.13040161]
[-63.54670715 -416.34576416]
[-55.44421768 -428.97796631]
[-46.39850998 -440.95285034]
[-36.46267319 -452.20016479]
[-25.69501114 -462.65386963]
[-14.15871525 -472.25265503]
[-1.92148483 -480.94018555]
[10.94486523 -488.66543579]
[24.36483002 -495.38311768]
[38.25965500 -501.05380249]
[52.54779434 -505.64419556]
[67.14540863 -509.12738037]
[81.96681976 -511.48287964]
[96.92505646 -512.69689941]
[111.93234253 -512.76232910]
[126.90059662 -511.67874146]
[141.74197388 -509.45251465]
[156.36940002 -506.09674072]
[170.69702148 -501.63107300]
[184.64074707 -496.08172607]
[198.11875916 -489.48129272]
[211.05195618 -481.86846924]
[223.36445618 -473.28796387]
[234.98399353 -463.79010010]
[245.84237671 -453.43063354]
[255.87588501 -442.27038574]
[265.02563477 -430.37481689]
[273.23794556 -417.81372070]
[280.46459961 -404.66082764]
[286.66317749 -390.99334717]
[291.79736328 -376.89147949]
[295.83697510 -362.43795776]
[298.75833130 -347.71762085]
[300.54425049 -332.81683350]
[301.18429565 -317.82305908]
[300.67471313 -302.82431030]
[299.01843262 -287.90853882]
[296.22525024 -273.16336060]
[292.31152344 -258.67523193]
[287.30020142 -244.52923584]
[281.22070312 -230.80834961]
[274.10873413 -217.59310913]
[266.00601196 -204.96107483]
[256.96008301 -192.98635864]
[247.02403259 -181.73924255]
[236.25616455 -171.28572083]
[224.71968079 -161.68716431]
[212.48229980 -152.99987793]
[199.61579895 -145.27485657]
[186.19570923 -138.55741882]
[172.30076599 -132.88700867]
[158.01254272 -128.29687500]
[143.41487122 -124.81398010]
[128.59341431 -122.45874786]
[113.63514709 -121.24501038]
[98.62786102 -121.17988586]
[83.65962982 -122.26374817]
[81.43451691 -107.42970276]
[79.20939636 -92.59565735]
[76.98428345 -77.76161957]
[74.75916290 -62.92757416]
[72.53404236 -48.09352875]
[73.31536865 -33.11389160]
[77.07167053 -18.59183311]
[87.74960327 -8.20766163]
[83.71467590 7.09037495]
[87.47097015 21.61243439]
[91.22727203 36.13449478]
[94.98357391 50.65655136]
[105.66150665 61.04072571]
[101.62657928 76.33876038]
[105.38288116 90.86081696]
[109.67700195 105.23303223]
[114.50299835 119.43548584]
[120.22702026 126.55401611]
[119.29341125 133.88546753]
[123.90742493 148.15820312]
[128.52143860 162.43093872]
[133.13543701 176.70365906]
[137.74945068 190.97639465]
[142.36346436 205.24913025]
[146.97746277 219.52186584]
[151.59147644 233.79460144]
[159.36772156 220.96768188]
[173.90292358 217.26252747]
[186.87063599 224.80163574]
[190.84239197 239.26626587]
[183.54296875 252.37039185]
[169.15382385 256.60742188]
[155.91830444 249.55087280]
[159.24055481 264.17834473]
[162.56282043 278.80578613]
[165.88508606 293.43325806]
[169.20733643 308.06069946]
[172.52960205 322.68817139]
[175.85185242 337.31564331]
[190.91664124 337.32489014]
[205.60154724 340.68661499]
[219.16998291 347.23226929]
[230.94136047 356.63345337]
[240.32524109 368.41860962]
[246.85092163 381.99667358]
[250.19110107 396.68649292]
[250.17820740 411.75128174]
[246.81289673 426.43536377]
[240.26397705 440.00219727]
[230.85993958 451.77130127]
[219.07247925 461.15234375]
[205.49285889 467.67474365]
[190.80223083 471.01135254]
[175.73745728 470.99481201]
[161.05418396 467.62594604]
[147.48892212 461.07373047]
[135.72209167 451.66683960]
[126.34392548 439.87710571]
[119.82482147 426.29589844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 168]
[22 167]
[28 166]
[29 165]
[31 163]
[32 162]
[33 161]
[34 160]
[36 158]
[37 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
