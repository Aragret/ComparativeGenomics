%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[82.77943420 433.49044800]
[92.68997955 420.87454224]
[92.24337006 405.88119507]
[91.79676819 390.88784790]
[91.35015869 375.89450073]
[90.90355682 360.90115356]
[88.10343933 357.03225708]
[87.70401764 351.36325073]
[90.67357635 345.45620728]
[90.67357635 330.45620728]
[90.67357635 315.45620728]
[90.67357635 300.45620728]
[90.67357635 285.45620728]
[90.67357635 270.45620728]
[90.67357635 255.45620728]
[82.93627930 242.72894287]
[90.67357635 228.92875671]
[90.67357635 213.92875671]
[90.67357635 198.92875671]
[90.67357635 183.92875671]
[90.67357635 168.92875671]
[87.98989105 164.97821045]
[87.75942993 159.29983521]
[90.90355682 153.48382568]
[83.54862213 140.53181458]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[90.88736725 48.92089462]
[94.32640076 42.37911987]
[94.99618530 27.39408112]
[95.66596985 12.40904140]
[78.95178986 5.18542099]
[66.31214142 -7.87398386]
[59.66313171 -24.75195694]
[59.99831390 -42.85531998]
[67.24032593 -59.41335678]
[80.25669861 -71.90185547]
[97.03688812 -78.42793274]
[96.81356049 -93.42626953]
[96.59023285 -108.42461395]
[96.36690521 -123.42295074]
[96.14357758 -138.42127991]
[95.92024994 -153.41961670]
[95.69692230 -168.41795349]
[95.47359467 -183.41629028]
[86.80554199 -171.17436218]
[73.21942139 -164.81690979]
[58.26660919 -166.00573730]
[45.85573196 -174.43011475]
[39.23096466 -187.88792419]
[40.12400818 -202.86131287]
[48.30141830 -215.43629456]
[61.62564468 -222.32577515]
[76.61376190 -221.72888184]
[89.34791565 -213.80162048]
[96.49922180 -200.61705017]
[98.50323486 -215.48257446]
[100.50724792 -230.34809875]
[102.51126099 -245.21362305]
[104.51527405 -260.07916260]
[102.72409821 -264.03460693]
[102.32492065 -267.95956421]
[103.13722229 -271.42013550]
[104.85812378 -274.08566284]
[107.10663605 -275.75967407]
[109.99191284 -290.47958374]
[112.87718201 -305.19946289]
[115.76245880 -319.91937256]
[101.30300903 -323.93838501]
[87.19848633 -329.06585693]
[73.53372192 -335.27090454]
[60.39089203 -342.51620483]
[47.84904480 -350.75817871]
[35.98360825 -359.94729614]
[24.86594391 -370.02825928]
[14.56291294 -380.94042969]
[5.13648176 -392.61822510]
[-3.35665727 -404.99139404]
[-10.86542511 -417.98547363]
[-17.34466362 -431.52239990]
[-22.75540352 -445.52069092]
[-27.06510353 -459.89617920]
[-30.24784660 -474.56240845]
[-32.28448868 -489.43118286]
[-33.16278458 -504.41308594]
[-32.87744522 -519.41796875]
[-31.43019295 -534.35565186]
[-28.82973099 -549.13623047]
[-25.09169579 -563.67083740]
[-20.23857117 -577.87207031]
[-14.29954529 -591.65454102]
[-7.31033468 -604.93536377]
[0.68702483 -617.63458252]
[9.64443588 -629.67590332]
[19.50802803 -640.98687744]
[30.21847725 -651.49945068]
[41.71137238 -661.15045166]
[53.91759109 -669.88177490]
[66.76371765 -677.64099121]
[80.17250061 -684.38140869]
[94.06330109 -690.06243896]
[108.35256195 -694.64990234]
[122.95435333 -698.11633301]
[137.78086853 -700.44079590]
[152.74290466 -701.60925293]
[167.75051880 -701.61480713]
[182.71342468 -700.45733643]
[197.54164124 -698.14385986]
[212.14599609 -694.68823242]
[226.43862915 -690.11126709]
[240.33361816 -684.44049072]
[253.74737549 -677.70996094]
[266.59921265 -669.96026611]
[278.81185913 -661.23791504]
[290.31188965 -651.59539795]
[301.03009033 -641.09069824]
[310.90200806 -629.78698730]
[319.86831665 -617.75231934]
[327.87503052 -605.05895996]
[334.87405396 -591.78332520]
[340.82324219 -578.00524902]
[345.68682861 -563.80761719]
[349.43557739 -549.27575684]
[352.04696655 -534.49707031]
[353.50521851 -519.56048584]
[353.80163574 -504.55578613]
[352.93438721 -489.57327271]
[350.90872192 -474.70300293]
[347.73678589 -460.03442383]
[343.43771362 -445.65576172]
[338.03729248 -431.65347290]
[331.56802368 -418.11178589]
[324.06884766 -405.11215210]
[315.58483887 -392.73272705]
[306.16702271 -381.04800415]
[295.87207031 -370.12820435]
[284.76184082 -360.03906250]
[272.90316772 -350.84118652]
[260.36740112 -342.58996582]
[247.22993469 -335.33496094]
[233.56974792 -329.11984253]
[219.46900940 -323.98199463]
[205.01252747 -319.95227051]
[190.28724670 -317.05496216]
[175.38172913 -315.30746460]
[160.38560486 -314.72030640]
[145.38908386 -315.29699707]
[130.48234558 -317.03408813]
[127.59707642 -302.31420898]
[124.71179962 -287.59429932]
[121.82653046 -272.87442017]
[119.38080597 -258.07513428]
[117.37679291 -243.20960999]
[115.37277222 -228.34408569]
[113.36875916 -213.47856140]
[111.36474609 -198.61303711]
[110.47193146 -183.63961792]
[110.69525909 -168.64128113]
[110.91858673 -153.64294434]
[111.14191437 -138.64460754]
[111.36524200 -123.64627838]
[111.58856964 -108.64794159]
[111.81189728 -93.64959717]
[112.03522491 -78.65126038]
[123.57604218 -75.39360046]
[133.89515686 -69.25649261]
[142.28756714 -60.65057373]
[148.17764282 -50.15544128]
[151.15864563 -38.48062897]
[151.02079773 -26.41763115]
[147.76602173 -14.78625011]
[141.60832214 -4.37887764]
[132.95971680 4.09348392]
[122.40270996 10.04979610]
[110.65100861 13.07882690]
[109.98122406 28.06386566]
[109.31143951 43.04890442]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[114.00971222 141.43916321]
[105.89690399 153.93041992]
[105.67357635 168.92875671]
[105.67357635 183.92875671]
[105.67357635 198.92875671]
[105.67357635 213.92875671]
[105.67357635 228.92875671]
[113.41087341 242.72894287]
[105.67357635 255.45620728]
[105.67357635 270.45620728]
[105.67357635 285.45620728]
[105.67357635 300.45620728]
[105.67357635 315.45620728]
[105.67357635 330.45620728]
[105.67357635 345.45620728]
[105.89690399 360.45455933]
[106.34351349 375.44790649]
[106.79011536 390.44125366]
[107.23672485 405.43460083]
[107.68332672 420.42794800]
[118.32720947 432.43157959]
[115.43688965 448.21212769]
[101.22957611 455.66409302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[5 204]
[6 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[24 189]
[26 187]
[27 186]
[29 184]
[30 183]
[31 182]
[33 181]
[34 180]
[35 179]
[42 168]
[43 167]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[69 155]
[70 154]
[71 153]
[72 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
