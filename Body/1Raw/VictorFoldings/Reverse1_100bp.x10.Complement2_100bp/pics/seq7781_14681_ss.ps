%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[55.26941299 587.90325928]
[44.26668167 598.11291504]
[32.40466690 607.31018066]
[19.77620697 615.42315674]
[6.48013544 622.38818359]
[-7.37948370 628.15087891]
[-21.69417763 632.66607666]
[-36.35191345 635.89849854]
[-51.23797226 637.82275391]
[-66.23584747 638.42388916]
[-81.22816467 637.69714355]
[-96.09757233 635.64813232]
[-110.72770691 632.29302979]
[-125.00406647 627.65802002]
[-138.81491089 621.77941895]
[-152.05213928 614.70318604]
[-164.61218262 606.48468018]
[-176.39669800 597.18835449]
[-187.31349182 586.88677979]
[-197.27709961 575.66076660]
[-206.20954895 563.59808350]
[-214.04093933 550.79309082]
[-220.70996094 537.34606934]
[-226.16442871 523.36230469]
[-230.36164856 508.95117188]
[-233.26878357 494.22546387]
[-234.86305237 479.30044556]
[-235.13201904 464.29293823]
[-234.07354736 449.32040405]
[-231.69592285 434.50000000]
[-228.01776123 419.94772339]
[-223.06785583 405.77746582]
[-216.88493347 392.10012817]
[-209.51739502 379.02279663]
[-201.02290344 366.64776611]
[-191.46794128 355.07192993]
[-180.92727661 344.38586426]
[-169.48341370 334.67318726]
[-157.22593689 326.00994873]
[-144.25074768 318.46395874]
[-130.65940857 312.09423828]
[-116.55830383 306.95068359]
[-102.05777740 303.07348633]
[-87.27133179 300.49307251]
[-72.31468964 299.22955322]
[-57.30490494 299.29290771]
[-42.35945511 300.68255615]
[-27.59531021 303.38766479]
[-13.12802219 307.38708496]
[0.92918128 312.64944458]
[7.40867710 299.12109375]
[13.88817310 285.59277344]
[20.36766815 272.06442261]
[26.84716415 258.53607178]
[33.32666016 245.00772095]
[39.60402298 231.38439941]
[45.67785645 217.66914368]
[51.75168991 203.95387268]
[57.82552338 190.23860168]
[63.48830795 176.34857178]
[68.73503113 162.29611206]
[73.98174286 148.24363708]
[56.05284500 132.75737000]
[46.33397675 111.15150452]
[46.64078903 87.46235657]
[56.91595840 66.11544037]
[75.23992157 51.09870529]
[98.18946075 45.21752167]
[99.74998474 30.29891586]
[101.31050873 15.38031197]
[102.87103271 0.46170706]
[104.43155670 -14.45689774]
[89.68439484 -19.20475960]
[76.24705505 -26.90437317]
[64.70243073 -37.21905136]
[55.55072021 -49.69872665]
[49.18780899 -63.79960251]
[45.88811874 -78.90783691]
[45.79278183 -94.36625671]
[48.90359497 -109.50296783]
[55.08305359 -123.66054535]
[64.06043243 -136.22457886]
[75.44363403 -146.65032959]
[88.73630524 -154.48641968]
[103.35951233 -159.39424133]
[118.67693329 -161.16271973]
[120.01516724 -176.10290527]
[121.35340118 -191.04309082]
[122.58037567 -205.99282837]
[123.69602203 -220.95127869]
[124.70028687 -235.91763306]
[125.59310150 -250.89103699]
[111.03257751 -254.69595337]
[97.49427795 -261.26867676]
[85.49855804 -270.35650635]
[75.50651550 -281.61019897]
[67.90221405 -294.59713745]
[62.97794342 -308.81817627]
[60.92297745 -323.72668457]
[61.81630707 -338.74960327]
[65.62358856 -353.30950928]
[72.19848633 -366.84674072]
[81.28827667 -378.84100342]
[92.54357910 -388.83120728]
[105.53175354 -396.43341064]
[119.75358582 -401.35537720]
[134.66241455 -403.40792847]
[149.68519592 -402.51217651]
[164.24447632 -398.70254517]
[177.78065491 -392.12545776]
[189.77343750 -383.03372192]
[199.76184082 -371.77679443]
[207.36193848 -358.78738403]
[212.28160095 -344.56475830]
[214.33174133 -329.65560913]
[213.43354797 -314.63296509]
[209.62155151 -300.07427979]
[203.04226685 -286.53918457]
[193.94859314 -274.54788208]
[182.69006348 -264.56130981]
[169.69943237 -256.96331787]
[155.47599792 -252.04594421]
[140.56651306 -249.99821472]
[139.67369080 -235.02481079]
[142.41349792 -228.16075134]
[138.65447998 -219.83563232]
[137.53883362 -204.87718201]
[140.17613220 -197.97309875]
[136.29357910 -189.70486450]
[134.95535278 -174.76467896]
[133.61711121 -159.82449341]
[147.56018066 -155.69915771]
[160.43106079 -148.92327881]
[171.73133850 -139.75701904]
[181.02302551 -128.55317688]
[187.94544983 -115.74356842]
[192.22935486 -101.82238770]
[193.70729065 -87.32716370]
[192.32017517 -72.81797028]
[188.11972046 -58.85580826]
[181.26638794 -45.98091888]
[172.02337646 -34.69186783]
[160.74645996 -25.42623138]
[147.87026978 -18.54365921]
[133.89158630 -14.31189728]
[119.35015869 -12.89637470]
[117.78963470 2.02223015]
[116.22911072 16.94083405]
[114.66859436 31.85943985]
[113.10807037 46.77804565]
[120.18560791 49.03982925]
[126.89223480 52.23802948]
[133.10469055 56.31388092]
[138.70884705 61.19248581]
[143.60169983 66.78419495]
[147.69335938 72.98625946]
[150.90861511 79.68472290]
[153.18841553 86.75648499]
[154.49084473 94.07160187]
[154.79197693 101.49565125]
[154.08628845 108.89222717]
[152.38673401 116.12539673]
[149.72454834 123.06225586]
[146.14865112 129.57533264]
[141.72474670 135.54495239]
[136.53411865 140.86141968]
[130.67218018 145.42703247]
[124.24661255 149.15791321]
[117.37550354 151.98547363]
[110.18511200 153.85778809]
[102.80757141 154.74043274]
[95.37843323 154.61720276]
[88.03421783 153.49035645]
[82.78749847 167.54283142]
[77.54077911 181.59529114]
[78.41139984 185.84922791]
[77.93135071 189.76510620]
[76.37276459 192.95982361]
[74.10423279 195.17800903]
[71.54078674 196.31243896]
[65.46695709 210.02770996]
[59.39312363 223.74298096]
[53.31928635 237.45823669]
[53.64261627 244.06179810]
[50.98189926 249.08351135]
[46.85500717 251.48721313]
[40.37551117 265.01556396]
[33.89601517 278.54391479]
[27.41651917 292.07226562]
[20.93702316 305.60058594]
[14.45752716 319.12893677]
[27.36902428 326.78341675]
[39.55348587 335.54907227]
[50.91555023 345.35726929]
[61.36629486 356.13128662]
[70.82392120 367.78680420]
[79.21441650 380.23257446]
[86.47210693 393.37121582]
[92.54019165 407.09985352]
[97.37118530 421.31109619]
[100.92726898 435.89367676]
[103.18061066 450.73348999]
[104.11357880 465.71438599]
[103.71887207 480.71911621]
[101.99958038 495.63024902]
[98.96915436 510.33105469]
[94.65131378 524.70654297]
[89.07985687 538.64410400]
[82.29838562 552.03472900]
[74.35997009 564.77362061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 191]
[51 190]
[52 189]
[53 188]
[54 187]
[55 186]
[56 183]
[57 182]
[58 181]
[59 180]
[60 175]
[61 174]
[62 173]
[68 150]
[69 149]
[70 148]
[71 147]
[72 146]
[86 131]
[87 130]
[88 129]
[89 127]
[90 126]
[91 124]
[92 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
