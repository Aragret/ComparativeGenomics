%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[139.86604309 632.95678711]
[134.91558838 618.25054932]
[139.58679199 603.45324707]
[152.08348083 594.25476074]
[151.86015320 579.25646973]
[148.61741638 572.61517334]
[151.74682617 564.03350830]
[151.74682617 549.03350830]
[151.74682617 534.03350830]
[144.00952148 521.30627441]
[151.74682617 507.50610352]
[151.74682617 492.50610352]
[151.74682617 477.50610352]
[138.16395569 468.28747559]
[132.69757080 452.63241577]
[137.68902588 436.64535522]
[151.36026001 426.68576050]
[151.13693237 411.68743896]
[143.21101379 399.07675171]
[150.74198914 385.16293335]
[150.51866150 370.16458130]
[150.29533386 355.16625977]
[150.07200623 340.16790771]
[148.28953552 325.27420044]
[144.96726990 310.64672852]
[141.64501953 296.01928711]
[138.32275391 281.39181519]
[127.95873260 270.69433594]
[132.44735718 255.52320862]
[129.12509155 240.89573669]
[125.69403076 226.29342651]
[122.15435791 211.71704102]
[118.61468506 197.14067078]
[115.07501984 182.56430054]
[111.53534698 167.98791504]
[107.67103577 153.49423218]
[103.48402405 139.09043884]
[99.29701233 124.68666077]
[95.11000824 110.28288269]
[89.44546509 124.17219543]
[77.23252869 132.88105774]
[62.25550461 133.71092224]
[49.15518188 126.40464783]
[41.99084473 113.22616577]
[42.98243332 98.25897980]
[51.82270050 86.14082336]
[65.77239227 80.62664795]
[80.50904083 83.42507172]
[91.46646881 93.66919708]
[81.76763916 81.16947174]
[87.53135681 67.43524933]
[85.30624390 52.60120392]
[83.08112335 37.76715851]
[80.85600281 22.93311691]
[78.63088989 8.09907246]
[68.93206024 -4.40065765]
[74.69577789 -18.13487816]
[72.47065735 -32.96892166]
[70.24554443 -47.80296707]
[68.02042389 -62.63700867]
[55.59490585 -72.03085327]
[53.54963684 -87.10637665]
[62.58180237 -98.89431763]
[60.35668564 -113.72836304]
[58.13156891 -128.56240845]
[55.79608154 -143.37947083]
[53.35035324 -158.17874146]
[50.90462875 -172.97801208]
[39.31193161 -174.90777588]
[28.73953056 -179.99566650]
[20.02725983 -187.82554626]
[13.86384392 -197.76397705]
[10.73245430 -209.01138306]
[10.87284184 -220.66647339]
[14.26301765 -231.79835510]
[20.62187004 -241.52096558]
[29.43244171 -249.06358337]
[39.98394394 -253.83189392]
[38.42341995 -268.75048828]
[36.86289597 -283.66909790]
[35.30237198 -298.58770752]
[26.17136002 -311.50805664]
[32.54259491 -324.97119141]
[30.98207092 -339.88980103]
[29.42154884 -354.80841064]
[20.29053497 -367.72875977]
[26.66176987 -381.19192505]
[25.10124588 -396.11050415]
[21.09602928 -404.32003784]
[23.63024712 -411.26260376]
[22.29201317 -426.20278931]
[20.95377922 -441.14297485]
[6.13557577 -444.07513428]
[-7.25566387 -451.06451416]
[-18.13437271 -461.54452515]
[-25.61866188 -474.66555786]
[-29.10181618 -489.36401367]
[-28.30146790 -504.44830322]
[-23.28249931 -518.69567871]
[-14.45177650 -530.95104980]
[-2.52516580 -540.22106934]
[11.53049564 -545.75415039]
[26.57577705 -547.10180664]
[41.39102936 -544.15472412]
[54.77523804 -537.15191650]
[65.64341736 -526.66101074]
[73.11451721 -513.53240967]
[76.58290100 -498.83050537]
[75.76740265 -483.74700928]
[70.73412323 -469.50469971]
[61.89109421 -457.25817871]
[49.95517731 -448.00018311]
[35.89396286 -442.48123169]
[37.23219681 -427.54104614]
[38.57043076 -412.60086060]
[40.01985168 -397.67105103]
[41.58037567 -382.75244141]
[50.59976959 -370.89916992]
[44.34015274 -356.36892700]
[45.90067673 -341.45034790]
[47.46120071 -326.53173828]
[56.48059464 -314.67846680]
[50.22097778 -300.14822388]
[51.78150177 -285.22961426]
[53.34202576 -270.31103516]
[54.90254593 -255.39241028]
[72.48029327 -249.94726562]
[85.94194031 -237.32624817]
[92.54405212 -220.04035950]
[90.91444397 -201.55731201]
[81.33709717 -185.60588074]
[65.70389557 -175.42373657]
[68.14962769 -160.62446594]
[70.59535217 -145.82519531]
[74.78738403 -139.73844910]
[72.96561432 -130.78752136]
[75.19072723 -115.95348358]
[77.41584778 -101.11943817]
[89.50908661 -92.50032043]
[91.97698975 -77.48818970]
[82.85446930 -64.86212921]
[85.07958984 -50.02808380]
[87.30470276 -35.19403839]
[89.52982330 -20.35999489]
[99.06949615 -8.92129517]
[93.46493530 5.87395573]
[95.69004822 20.70800018]
[97.91516876 35.54204178]
[100.14028168 50.37608719]
[102.36540222 65.21012878]
[111.90507507 76.64883423]
[106.30051422 91.44408417]
[109.51378632 106.09587097]
[113.70079803 120.49964905]
[117.88780975 134.90342712]
[122.07482147 149.30722046]
[125.84407806 152.91827393]
[127.66881561 157.18719482]
[127.62407684 161.26310730]
[126.11171722 164.44824219]
[129.65139771 179.02462769]
[133.19107056 193.60099792]
[136.73074341 208.17736816]
[140.27041626 222.75375366]
[145.33651733 230.35456848]
[143.75254822 237.57348633]
[147.07481384 252.20094299]
[157.67646790 263.94470215]
[152.95021057 278.06954956]
[156.27247620 292.69702148]
[159.59474182 307.32446289]
[162.91699219 321.95193481]
[167.48535156 307.66452026]
[177.11473083 296.16342163]
[190.37666321 289.15478516]
[205.30380249 287.67825317]
[219.68182373 291.95288086]
[231.37782288 301.34454346]
[238.65676880 314.46008301]
[240.43887329 329.35382080]
[236.45976257 343.81643677]
[227.30972290 355.70242310]
[214.34611511 363.24859619]
[199.49200439 365.33551025]
[184.95089722 361.65359497]
[172.87991333 352.74905396]
[165.07034302 339.94458008]
[165.29367065 354.94293213]
[165.51699829 369.94125366]
[165.74032593 384.93960571]
[173.68223572 398.62304688]
[166.13528442 411.46411133]
[166.35861206 426.46243286]
[178.18841553 433.53677368]
[184.92446899 445.43820190]
[184.90036011 459.00543213]
[178.22937012 470.69479370]
[166.74682617 477.50610352]
[166.74682617 492.50610352]
[166.74682617 507.50610352]
[174.48413086 521.30627441]
[166.74682617 534.03350830]
[166.74682617 549.03350830]
[166.74682617 564.03350830]
[166.85848999 579.03314209]
[167.08181763 594.03143311]
[179.84684753 602.85382080]
[184.95655823 617.50543213]
[180.44615173 632.35253906]
[168.04997253 641.68603516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[7 204]
[8 203]
[9 202]
[11 200]
[12 199]
[13 198]
[17 193]
[18 192]
[20 190]
[21 189]
[22 188]
[23 187]
[24 172]
[25 171]
[26 170]
[27 169]
[29 167]
[30 166]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[36 156]
[37 155]
[38 154]
[39 153]
[49 152]
[51 150]
[52 149]
[53 148]
[54 147]
[55 146]
[57 144]
[58 143]
[59 142]
[60 141]
[63 138]
[64 137]
[65 136]
[66 134]
[67 133]
[68 132]
[78 126]
[79 125]
[80 124]
[81 123]
[83 121]
[84 120]
[85 119]
[87 117]
[88 116]
[90 115]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
