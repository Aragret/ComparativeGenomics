%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[104.27967834 475.17749023]
[91.53082275 483.18072510]
[77.43177795 488.45346069]
[62.55989456 490.77981567]
[47.52416229 490.06451416]
[32.94028854 486.33685303]
[19.40546989 479.74948120]
[7.47395134 470.57211304]
[-2.36567926 459.18060303]
[-9.71049595 446.04141235]
[-14.25973129 431.69256592]
[-15.82709980 416.72164917]
[-14.34841633 401.74172974]
[-9.88423252 387.36618042]
[-2.61735487 374.18371582]
[7.15464354 362.73413086]
[19.03160477 353.48629761]
[32.52717590 346.81887817]
[47.08871841 343.00491333]
[62.11995316 342.20059204]
[64.34506989 327.36654663]
[66.57018280 312.53250122]
[68.79530334 297.69845581]
[63.03158569 283.96423340]
[72.73041534 271.46450806]
[74.95553589 256.63046265]
[77.18064880 241.79641724]
[69.88700867 225.83491516]
[81.47729492 211.52592468]
[83.48130798 196.66040039]
[85.48532104 181.79487610]
[87.48933411 166.92935181]
[89.04985809 152.01074219]
[90.16550446 137.05229187]
[91.16976929 122.08594513]
[92.06258392 107.11254120]
[91.61597443 92.11918640]
[89.83351135 77.22547150]
[88.05104065 62.33175659]
[86.26857758 47.43803787]
[76.94621277 34.65507889]
[83.11629486 21.09855461]
[81.22299957 6.21851873]
[79.21898651 -8.64700985]
[66.93470764 -18.22480583]
[65.11411285 -33.32911301]
[74.32078552 -44.98127365]
[72.31677246 -59.84680176]
[70.31275940 -74.71233368]
[65.17079926 -88.80347443]
[57.12962723 -101.46599579]
[49.08845139 -114.12851715]
[41.04727936 -126.79104614]
[33.00610733 -139.45356750]
[24.96493340 -152.11608887]
[16.92376137 -164.77862549]
[9.68158054 -170.34536743]
[8.85875893 -177.69007874]
[1.00700331 -190.47091675]
[-6.84475231 -203.25175476]
[-20.45195961 -196.90025330]
[-34.69449997 -192.14128113]
[-49.38669205 -189.03688049]
[-64.33699036 -187.62754822]
[-79.35049438 -187.93164062]
[-94.23146820 -189.94519043]
[-108.78591156 -193.64195251]
[-122.82406616 -198.97372437]
[-136.16293335 -205.87101746]
[-148.62858582 -214.24389648]
[-160.05854797 -223.98318481]
[-170.30377197 -234.96194458]
[-179.23069763 -247.03703308]
[-186.72296143 -260.05102539]
[-192.68287659 -273.83422852]
[-197.03273010 -288.20700073]
[-199.71583557 -302.98193359]
[-200.69718933 -317.96643066]
[-199.96401978 -332.96508789]
[-197.52586365 -347.78244019]
[-193.41453552 -362.22521973]
[-187.68360901 -376.10522461]
[-180.40780640 -389.24145508]
[-171.68199158 -401.46264648]
[-161.61990356 -412.60949707]
[-150.35273743 -422.53668213]
[-138.02738953 -431.11477661]
[-124.80453491 -438.23193359]
[-110.85655975 -443.79534912]
[-96.36531067 -447.73254395]
[-81.51970673 -449.99215698]
[-66.51329803 -450.54473877]
[-51.54171371 -449.38308716]
[-36.80014420 -446.52233887]
[-22.48077583 -441.99978638]
[-8.77029037 -435.87438965]
[4.15256643 -428.22601318]
[16.11931992 -419.15438843]
[26.97395897 -408.77774048]
[36.57497025 -397.23138428]
[44.79718399 -384.66583252]
[51.53340912 -371.24493408]
[56.69582367 -357.14361572]
[60.21712494 -342.54571533]
[62.05140686 -327.64160156]
[62.17475510 -312.62551880]
[60.58555984 -297.69326782]
[57.30454254 -283.03948975]
[52.37447357 -268.85528564]
[45.85963440 -255.32550049]
[37.84494781 -242.62658691]
[28.43491364 -230.92407227]
[17.75220299 -220.37051392]
[5.93609047 -211.10351562]
[13.78784561 -198.32267761]
[21.63960075 -185.54182434]
[29.58628654 -172.81979370]
[37.62746048 -160.15727234]
[45.66863251 -147.49475098]
[53.70980453 -134.83221436]
[61.75097656 -122.16969299]
[69.79215240 -109.50717163]
[77.83332062 -96.84464264]
[76.23267365 -111.75899506]
[77.62554932 -126.69418335]
[81.95648193 -141.05534363]
[89.05297089 -154.27049255]
[98.63236237 -165.81324768]
[110.31311798 -175.22387695]
[123.62998199 -182.12757874]
[138.05256653 -186.24934387]
[153.00642395 -187.42503357]
[167.89593506 -185.60780334]
[182.12808228 -180.87005615]
[195.13597107 -173.40046692]
[206.40151978 -163.49656677]
[215.47602844 -151.55281067]
[221.99806213 -138.04492188]
[225.70783997 -123.51090240]
[226.45761108 -108.52965546]
[224.21751404 -93.69786072]
[219.07678223 -79.60627747]
[211.24014282 -66.81616211]
[201.01972961 -55.83693695]
[188.82264709 -47.10590363]
[175.13467407 -40.97081375]
[160.50099182 -37.67602921]
[145.50447083 -37.35277557]
[130.74241638 -40.01393127]
[116.80279541 -45.55350113]
[104.24080658 -53.75084686]
[93.55680084 -64.27947235]
[85.17828369 -76.71634674]
[87.18229675 -61.85081482]
[89.18631744 -46.98528671]
[101.14988708 -38.18707657]
[103.39400482 -23.13986397]
[94.08451843 -10.65102291]
[96.08853149 4.21450520]
[100.09748077 10.42337799]
[98.01000977 19.31608772]
[107.20488739 31.03374863]
[101.16229248 45.65557098]
[102.94476318 60.54928970]
[104.72722626 75.44300842]
[106.50968933 90.33672333]
[113.08314514 76.85378265]
[124.80181122 67.49040222]
[139.40299988 64.05449677]
[154.06744385 67.20949554]
[165.96366882 76.34622192]
[172.79470825 89.70050049]
[173.24159241 104.69384003]
[167.21804810 118.43126678]
[155.88710022 128.26028442]
[141.43658447 132.28308105]
[126.65668488 129.72290039]
[114.40116119 121.07408142]
[107.03598785 108.00535583]
[106.14317322 122.97875977]
[108.75624084 131.73146057]
[105.12396240 138.16793823]
[104.00830841 153.12638855]
[106.03174591 156.96823120]
[106.66382599 160.86245728]
[106.05894470 164.36523438]
[104.49975586 167.12847900]
[102.35485840 168.93336487]
[100.35084534 183.79888916]
[98.34683228 198.66441345]
[96.34281921 213.52995300]
[103.52799225 224.24143982]
[101.55281067 236.58171082]
[92.01469421 244.02153015]
[89.78957367 258.85559082]
[87.56446075 273.68963623]
[93.16902161 288.48486328]
[83.62934875 299.92358398]
[81.40422821 314.75762939]
[79.17911530 329.59167480]
[76.95399475 344.42572021]
[91.08770752 349.60479736]
[103.88938141 357.52325439]
[114.83479309 367.85684204]
[123.47573090 380.18240356]
[129.45835876 393.99517822]
[132.53767395 408.72958374]
[132.58761597 423.78222656]
[129.60610962 438.53674316]
[123.71525574 452.38891602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 201]
[21 200]
[22 199]
[23 198]
[25 196]
[26 195]
[27 194]
[29 191]
[30 190]
[31 189]
[32 188]
[33 183]
[34 182]
[35 180]
[36 179]
[37 166]
[38 165]
[39 164]
[40 163]
[42 161]
[43 159]
[44 158]
[47 155]
[48 154]
[49 153]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[58 116]
[59 115]
[60 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
