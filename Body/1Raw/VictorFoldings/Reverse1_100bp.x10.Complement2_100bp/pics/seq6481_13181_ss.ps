%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[130.40330505 791.97119141]
[121.05506134 780.21002197]
[113.39541626 767.28552246]
[107.56707001 753.43835449]
[103.67859650 738.92651367]
[101.80244446 724.02032471]
[101.97355652 708.99749756]
[104.18875122 694.13793945]
[108.40676117 679.71844482]
[114.54900360 666.00762939]
[122.50105286 653.26092529]
[132.11476135 641.71575928]
[143.21104431 631.58728027]
[155.58317566 623.06414795]
[169.00067139 616.30511475]
[183.21357727 611.43609619]
[180.32830811 596.71624756]
[170.28738403 585.71490479]
[175.22572327 570.68414307]
[172.34043884 555.96429443]
[167.96903992 550.00500488]
[169.52351379 541.00384521]
[166.85771179 526.24261475]
[164.19190979 511.48138428]
[161.52612305 496.72018433]
[158.86032104 481.95895386]
[143.91841125 481.04928589]
[129.61982727 476.58715820]
[116.79703522 468.82778931]
[106.19763947 458.21850586]
[98.44085693 445.37295532]
[93.98127747 431.03558350]
[93.08229065 416.03848267]
[95.80046844 401.25320435]
[101.98210144 387.53991699]
[111.27179718 375.69760132]
[123.13298798 366.41726685]
[136.87887573 360.24182129]
[134.21307373 345.48059082]
[131.54728699 330.71939087]
[119.20278168 322.46414185]
[116.28900909 307.53216553]
[125.03155518 294.64007568]
[122.36576080 279.87887573]
[119.69996643 265.11764526]
[107.35546112 256.86239624]
[104.44168854 241.93040466]
[113.18423462 229.03833008]
[110.51844025 214.27711487]
[100.64242554 203.12751770]
[105.80399323 188.17196655]
[103.13819885 173.41075134]
[98.85600281 167.38706970]
[100.54431152 158.41001892]
[98.09858704 143.61074829]
[95.65285492 128.81147766]
[84.92868042 139.29919434]
[70.02462769 137.60536194]
[61.92740250 124.97859955]
[66.60597992 110.72689819]
[80.61148834 105.35608673]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[82.50352478 75.45942688]
[89.07450104 62.09262085]
[85.19195557 53.82438660]
[87.82926178 46.92029953]
[86.71360779 31.96184731]
[85.59796143 17.00339317]
[84.48231506 2.04494023]
[83.25534058 -12.90479279]
[81.91710663 -27.84497833]
[78.91282654 -32.11363220]
[77.94329834 -36.65382004]
[78.77120972 -40.64501190]
[80.86798859 -43.47977066]
[80.19820404 -58.46480942]
[79.52841949 -73.44985199]
[78.85863495 -88.43489075]
[70.51284027 -101.87580872]
[77.67411804 -114.93587494]
[77.00433350 -129.92091370]
[66.73685455 -145.20686340]
[75.42542267 -160.45401001]
[74.53260803 -175.42742920]
[73.63979340 -190.40083313]
[62.10190201 -200.86575317]
[61.40975952 -216.06364441]
[71.45758057 -226.99876404]
[70.56475830 -241.97216797]
[62.01977921 -255.28733826]
[68.98581696 -268.45257568]
[68.09300232 -283.42599487]
[53.44813538 -287.21847534]
[40.69306564 -295.35256958]
[31.07741547 -307.03137207]
[25.54322052 -321.11071777]
[24.63267136 -336.21124268]
[28.43496895 -350.85357666]
[36.57760620 -363.60317993]
[48.26284790 -373.21099854]
[62.34589767 -378.73577881]
[77.44703674 -379.63619995]
[92.08680725 -375.82409668]
[104.83096313 -367.67291260]
[114.43095398 -355.98123169]
[119.94627380 -341.89450073]
[120.83659363 -326.79275513]
[117.01467133 -312.15551758]
[108.85495758 -299.41683960]
[97.15685272 -289.82467651]
[83.06641388 -284.31881714]
[83.95922852 -269.34539795]
[92.44034576 -257.10122681]
[85.53816986 -242.86499023]
[86.43098450 -227.89158630]
[97.70703888 -218.22793579]
[98.82578278 -203.05548096]
[88.61319733 -191.29364014]
[89.50601959 -176.32023621]
[90.39883423 -161.34683228]
[99.23516083 -153.08573914]
[100.10152435 -140.61845398]
[91.98937225 -130.59069824]
[92.65915680 -115.60565948]
[100.95704651 -103.23657227]
[93.84367371 -89.10467529]
[94.51345825 -74.11963654]
[95.18324280 -59.13459396]
[95.85302734 -44.14955521]
[96.85728455 -29.18321228]
[98.19552612 -14.24302769]
[101.92323303 -7.86133814]
[99.44076538 0.92929161]
[100.55641174 15.88774490]
[101.67206573 30.84619904]
[102.78771210 45.80465317]
[104.01468658 60.75438690]
[112.85660553 72.74061584]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[110.45212555 126.36575317]
[112.89785767 141.16502380]
[115.34358215 155.96429443]
[117.89941406 170.74494934]
[120.56520844 185.50616455]
[130.63189697 197.71157837]
[125.27966309 211.61132812]
[127.94545746 226.37254333]
[140.64515686 235.39225769]
[143.13836670 250.40020752]
[134.46118164 262.45184326]
[137.12698364 277.21307373]
[139.79277039 291.97427368]
[152.49247742 300.99401855]
[154.98568726 316.00195312]
[146.30850220 328.05358887]
[148.97428894 342.81481934]
[151.64009094 357.57601929]
[166.67771912 358.55334473]
[181.03575134 363.09860229]
[193.88084412 370.94351196]
[204.46862793 381.62832642]
[212.18673706 394.52886963]
[216.59022522 408.89306641]
[217.42730713 423.88464355]
[214.65364075 438.63195801]
[208.43472290 452.27850342]
[199.13600159 464.03289795]
[187.30142212 473.21456909]
[173.62153625 479.29315186]
[176.28733826 494.05438232]
[178.95314026 508.81558228]
[181.61892700 523.57678223]
[184.28472900 538.33801270]
[187.06033325 553.07897949]
[189.94560242 567.79888916]
[200.19290161 579.85308838]
[195.04820251 593.83093262]
[197.93347168 608.55084229]
[212.93278503 607.69390869]
[227.90907288 608.88739014]
[242.58334351 612.10913086]
[256.68222046 617.29907227]
[269.94305420 624.36053467]
[282.11877441 633.16198730]
[292.98260498 643.53942871]
[302.33212280 655.29949951]
[309.99316406 668.22320557]
[315.82302856 682.06976318]
[319.71307373 696.58117676]
[321.59082031 711.48712158]
[321.42135620 726.50994873]
[319.20776367 741.36975098]
[314.99130249 755.78973389]
[308.85055542 769.50122070]
[300.89987183 782.24877930]
[291.28741455 793.79498291]
[280.19223022 803.92468262]
[267.82101440 812.44915771]
[254.40425110 819.20965576]
[240.19187927 824.08013916]
[225.44865417 826.97003174]
[210.44924927 827.82531738]
[195.47309875 826.63018799]
[180.79916382 823.40686035]
[166.70085144 818.21539307]
[153.44079590 811.15252686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 182]
[17 181]
[19 179]
[20 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[38 161]
[39 160]
[40 159]
[43 156]
[44 155]
[45 154]
[48 151]
[49 150]
[51 148]
[52 147]
[54 146]
[55 145]
[56 144]
[62 143]
[64 141]
[66 139]
[68 138]
[69 137]
[70 136]
[71 135]
[72 133]
[73 132]
[77 131]
[78 130]
[79 129]
[80 128]
[82 126]
[83 125]
[85 122]
[86 121]
[87 120]
[90 117]
[91 116]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
