%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-19.41240883 314.03506470]
[-13.73376942 327.93865967]
[-9.77247143 342.42541504]
[-7.58628082 357.28399658]
[-7.20707941 372.29779053]
[-8.64039707 387.24780273]
[-11.86533165 401.91604614]
[-16.83485413 416.08859253]
[-23.47649384 429.55877686]
[-31.69339561 442.13015747]
[-41.36573410 453.61944580]
[-52.35245895 463.85900879]
[-64.49334717 472.69961548]
[-77.61135864 480.01229858]
[-91.51518250 485.69042969]
[-106.00205994 489.65118408]
[-120.86074066 491.83682251]
[-135.87454224 492.21545410]
[-150.82449341 490.78158569]
[-165.49261475 487.55609131]
[-179.66497803 482.58602905]
[-193.13491821 475.94387817]
[-205.70600891 467.72653198]
[-217.19490051 458.05374146]
[-227.43408203 447.06665039]
[-236.27423096 434.92541504]
[-243.58641052 421.80712891]
[-249.26402283 407.90310669]
[-253.22422791 393.41607666]
[-255.40931702 378.55731201]
[-255.78738403 363.54351807]
[-254.35295105 348.59359741]
[-251.12692261 333.92559814]
[-246.15634155 319.75341797]
[-239.51368713 306.28372192]
[-231.29585266 293.71295166]
[-221.62265015 282.22442627]
[-210.63516235 271.98565674]
[-198.49360657 263.14596558]
[-185.37506104 255.83425903]
[-171.47080994 250.15718079]
[-156.98362732 246.19750977]
[-142.12478638 244.01298523]
[-127.11096191 243.63546753]
[-112.16110992 245.07046509]
[-97.49323273 248.29704285]
[-83.32124329 253.26815796]
[-69.85179901 259.91131592]
[-57.28133011 268.12960815]
[-47.62052155 256.65490723]
[-37.95970917 245.18022156]
[-28.29889870 233.70552063]
[-26.02072906 218.98616028]
[-11.21379185 213.41255188]
[-1.55298126 201.93785095]
[8.10782909 190.46315002]
[17.76863861 178.98844910]
[27.42944908 167.51374817]
[37.09025955 156.03904724]
[36.98521042 153.23777771]
[37.98344803 150.22612000]
[40.17067337 147.42407227]
[43.47908783 145.27490234]
[47.68379974 144.19122314]
[58.01046753 133.31188965]
[68.33713531 122.43254852]
[78.66380310 111.55321503]
[88.99047089 100.67388153]
[74.15638733 98.44905853]
[66.51509094 85.54128265]
[71.69946289 71.46569061]
[85.88777924 66.59828186]
[98.62094116 74.52713013]
[100.51304626 89.40581512]
[105.72530365 71.74472809]
[123.00812531 68.69989777]
[133.96403503 58.45450974]
[144.91995239 48.20911789]
[155.87585449 37.96372604]
[165.62182617 26.56126213]
[174.03643799 14.14376640]
[172.37345886 1.35325038]
[179.63764954 -8.81607819]
[191.49098206 -11.22961903]
[200.08955383 -23.52045631]
[208.68811035 -35.81129456]
[217.28666687 -48.10213089]
[205.71147156 -57.65487671]
[194.93185425 -68.09708405]
[185.01593018 -79.36272430]
[176.02642822 -91.38058472]
[168.02017212 -104.07466888]
[161.04777527 -117.36473083]
[155.15332031 -131.16674805]
[150.37408447 -145.39344788]
[146.74028015 -159.95487976]
[144.27487183 -174.75900269]
[142.99345398 -189.71220398]
[142.90414429 -204.71994019]
[144.00747681 -219.68731689]
[146.29649353 -234.51972961]
[149.75672913 -249.12339783]
[154.36628723 -263.40597534]
[160.09603882 -277.27716064]
[166.90974426 -290.64929199]
[174.76434326 -303.43777466]
[183.61016846 -315.56176758]
[193.39128113 -326.94464111]
[204.04586792 -337.51443481]
[215.50653076 -347.20425415]
[227.70083618 -355.95291138]
[240.55168152 -363.70507812]
[253.97781372 -370.41171265]
[267.89434814 -376.03042603]
[282.21331787 -380.52572632]
[296.84414673 -383.86914062]
[311.69439697 -386.03955078]
[326.67010498 -387.02325439]
[341.67666626 -386.81399536]
[356.61914062 -385.41314697]
[371.40307617 -382.82952881]
[385.93502808 -379.07946777]
[400.12307739 -374.18670654]
[413.87753296 -368.18212891]
[427.11145020 -361.10375977]
[439.74118042 -352.99630737]
[451.68679810 -343.91107178]
[462.87286377 -333.90545654]
[473.22857666 -323.04272461]
[482.68853760 -311.39154053]
[491.19287109 -299.02560425]
[498.68783569 -286.02310181]
[505.12606812 -272.46621704]
[510.46685791 -258.44064331]
[514.67639160 -244.03511047]
[517.72808838 -229.34063721]
[519.60266113 -214.45018005]
[520.28826904 -199.45783997]
[519.78051758 -184.45843506]
[518.08270264 -169.54678345]
[515.20550537 -154.81715393]
[511.16708374 -140.36270142]
[505.99304199 -126.27478027]
[499.71606445 -112.64247894]
[492.37582397 -99.55198669]
[484.01873779 -87.08605957]
[474.69766235 -75.32352448]
[464.47149658 -64.33872986]
[453.40490723 -54.20114136]
[441.56787109 -44.97484589]
[429.03521729 -36.71817780]
[415.88616943 -29.48334312]
[402.20388794 -23.31607628]
[388.07485962 -18.25537300]
[373.58840942 -14.33322906]
[358.83615112 -11.57444191]
[343.91134644 -9.99645233]
[328.90832520 -9.60923862]
[313.92199707 -10.41524792]
[299.04705811 -12.40938473]
[284.37759399 -15.57904148]
[270.00631714 -19.90417862]
[256.02413940 -25.35744858]
[242.51939392 -31.90437698]
[229.57751465 -39.50356674]
[220.97894287 -27.21273041]
[212.38038635 -14.92189217]
[203.78181458 -2.63105464]
[203.20384216 14.90841103]
[186.45393372 22.55838585]
[178.03932190 34.97587967]
[191.49635315 28.34954453]
[206.43177795 26.95932770]
[220.88061523 30.98813629]
[232.94184875 39.90591049]
[241.02861023 52.53936386]
[244.07696533 67.22634888]
[241.68585205 82.03453827]
[234.16984558 95.01566315]
[222.51780701 104.46183777]
[208.26277161 109.13024139]
[193.28022766 108.40667725]
[179.54139709 102.38633728]
[168.85385132 91.86129761]
[162.62371826 78.21632385]
[161.67068481 63.24662781]
[166.12124634 48.91963577]
[155.16534424 59.16502380]
[144.20942688 69.41041565]
[133.25352478 79.65580750]
[132.53511047 91.73101044]
[123.49140167 100.35627747]
[110.59418488 100.51304626]
[99.86980438 111.00054932]
[89.54313660 121.87988281]
[79.21646881 132.75921631]
[68.88980103 143.63854980]
[58.56313324 154.51788330]
[48.56496048 165.69985962]
[38.90415192 177.17456055]
[29.24333954 188.64926147]
[19.58252907 200.12396240]
[9.92171860 211.59866333]
[0.26090837 223.07336426]
[-2.70826817 238.61344910]
[-16.82419968 243.36631775]
[-26.48501015 254.84101868]
[-36.14582062 266.31573486]
[-45.80662918 277.79043579]
[-35.56662750 288.77676392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 209]
[50 208]
[51 207]
[52 206]
[54 204]
[55 203]
[56 202]
[57 201]
[58 200]
[59 199]
[64 198]
[65 197]
[66 196]
[67 195]
[68 194]
[74 193]
[76 190]
[77 189]
[78 188]
[79 187]
[80 171]
[81 170]
[84 168]
[85 167]
[86 166]
[87 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
