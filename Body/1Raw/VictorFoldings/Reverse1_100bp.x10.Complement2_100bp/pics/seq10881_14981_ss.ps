%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[63.77674866 830.39111328]
[48.79966736 829.47814941]
[33.90831375 827.63580322]
[19.16030884 824.87127686]
[4.61270332 821.19519043]
[-9.67821789 816.62176514]
[-23.65716743 811.16870117]
[-37.27006149 804.85717773]
[-50.46423340 797.71154785]
[-63.18864059 789.75939941]
[-75.39405060 781.03161621]
[-87.03324890 771.56188965]
[-98.06119537 761.38690186]
[-108.43523407 750.54595947]
[-118.11521912 739.08105469]
[-127.06371307 727.03649902]
[-135.24609375 714.45892334]
[-142.63069153 701.39697266]
[-149.18894958 687.90124512]
[-154.89549255 674.02380371]
[-159.72824097 659.81848145]
[-163.66850281 645.34020996]
[-166.70101929 630.64495850]
[-168.81407166 615.78961182]
[-169.99949646 600.83166504]
[-170.25267029 585.82885742]
[-169.57264709 570.83941650]
[-167.96205139 555.92120361]
[-165.42710876 541.13201904]
[-161.97761536 526.52905273]
[-157.62693787 512.16870117]
[-152.39189148 498.10668945]
[-146.29275513 484.39730835]
[-139.35308838 471.09365845]
[-131.59976196 458.24716187]
[-123.06278229 445.90753174]
[-113.77515411 434.12252808]
[-103.77281952 422.93771362]
[-93.09447479 412.39639282]
[-81.78144073 402.53933716]
[-69.87747192 393.40466309]
[-57.42863464 385.02774048]
[-44.48308563 377.44094849]
[-31.09090805 370.67367554]
[-17.30391502 364.75207520]
[-3.17544770 359.69906616]
[11.23983383 355.53417969]
[25.88615990 352.27355957]
[40.70686722 349.92980957]
[55.64461517 348.51199341]
[70.64160919 348.02560425]
[71.08821869 333.03222656]
[71.53482056 318.03887939]
[71.98143005 303.04553223]
[72.42803192 288.05218506]
[72.87464142 273.05883789]
[73.32125092 258.06549072]
[73.76785278 243.07214355]
[74.21446228 228.07879639]
[64.00762939 239.07063293]
[49.31196213 242.07687378]
[35.60858917 235.97625732]
[28.00852203 223.04415894]
[29.34639931 208.10394287]
[39.12322998 196.72793579]
[53.69248962 193.15910339]
[67.62021637 198.72853088]
[75.71199799 211.36009216]
[77.93711853 196.52604675]
[80.16223145 181.69200134]
[74.39851379 167.95777893]
[84.09734344 155.45805359]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[83.73947906 72.94393158]
[86.36510468 55.99044037]
[100.16273499 46.37461472]
[102.16675568 31.50908661]
[104.17076874 16.64355850]
[90.56839752 10.05317688]
[79.68378448 -0.40471843]
[72.57415771 -13.69688129]
[69.92469788 -28.51563263]
[71.98248291 -43.40751266]
[78.53352356 -56.91583633]
[88.92493439 -67.72318268]
[102.12998199 -74.77986908]
[116.84952545 -77.40592194]
[118.85353851 -92.27144623]
[120.85755157 -107.13697815]
[122.86156464 -122.00250244]
[108.59855652 -126.79448700]
[95.50032043 -134.19940186]
[84.04034424 -143.94955444]
[74.63291168 -155.69248962]
[67.61808014 -169.00370789]
[63.24944305 -183.40202332]
[61.68492126 -198.36694336]
[62.98106766 -213.35749817]
[67.09102631 -227.83177185]
[73.86623383 -241.26654053]
[83.06175995 -253.17614746]
[94.34519958 -263.13006592]
[107.30866241 -270.76846313]
[121.48352051 -275.81524658]
[136.35737610 -278.08792114]
[151.39253235 -277.50436401]
[166.04548645 -274.08569336]
[179.78654480 -267.95544434]
[192.11897278 -259.33523560]
[202.59695435 -248.53671265]
[210.84173584 -235.95021057]
[216.55525208 -222.03071594]
[219.53097534 -207.28143311]
[219.66134644 -192.23551941]
[216.94161987 -177.43687439]
[211.47013855 -163.42048645]
[203.44468689 -150.69300842]
[193.15538025 -139.71453857]
[180.97416687 -130.88195801]
[167.34140015 -124.51454163]
[152.74987793 -120.84246826]
[137.72709656 -119.99848938]
[135.72308350 -105.13296509]
[133.71907043 -90.26743317]
[131.71505737 -75.40190887]
[145.21372986 -68.97177124]
[156.07872009 -58.67021561]
[163.23731995 -45.49696350]
[165.97741699 -30.73610878]
[164.01828003 -15.83092976]
[157.53929138 -2.24277782]
[147.16362000 8.69220161]
[133.89825439 15.89445019]
[119.03629303 18.64757156]
[117.03227997 33.51309967]
[115.02826691 48.37862778]
[124.19738007 57.43162918]
[126.51268005 70.30491638]
[120.90835571 82.33828735]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[98.93138885 157.68316650]
[104.53594971 172.47842407]
[94.99627686 183.91712952]
[92.77116394 198.75117493]
[90.54604340 213.58520508]
[89.20780945 228.52539062]
[88.76119995 243.51875305]
[88.31459808 258.51208496]
[87.86798859 273.50543213]
[87.42138672 288.49880981]
[86.97477722 303.49215698]
[86.52817535 318.48550415]
[86.08156586 333.47885132]
[85.63496399 348.47219849]
[100.57641602 349.85037231]
[115.40328979 352.15478516]
[130.05822754 355.37652588]
[144.48449707 359.50314331]
[158.62632751 364.51864624]
[172.42898560 370.40362549]
[185.83908081 377.13534546]
[198.80471802 384.68774414]
[211.27574158 393.03161621]
[223.20390320 402.13464355]
[234.54306030 411.96166992]
[245.24934387 422.47460938]
[255.28131104 433.63284302]
[264.60018921 445.39315796]
[273.16989136 457.71008301]
[280.95727539 470.53594971]
[287.93222046 483.82116699]
[294.06771851 497.51431274]
[299.34005737 511.56240845]
[303.72882080 525.91113281]
[307.21704102 540.50488281]
[309.79122925 555.28729248]
[311.44143677 570.20117188]
[312.16122437 585.18878174]
[311.94784546 600.19213867]
[310.80212402 615.15325928]
[308.72851562 630.01416016]
[305.73498535 644.71740723]
[301.83316040 659.20611572]
[297.03814697 673.42419434]
[291.36843872 687.31665039]
[284.84600830 700.82977295]
[277.49609375 713.91125488]
[269.34713745 726.51049805]
[260.43063354 738.57873535]
[250.78109741 750.06933594]
[240.43586731 760.93774414]
[229.43496704 771.14196777]
[217.82093811 780.64257812]
[205.63873291 789.40270996]
[192.93547058 797.38854980]
[179.76031494 804.56921387]
[166.16421509 810.91687012]
[152.19978333 816.40698242]
[137.92105103 821.01831055]
[123.38324738 824.73297119]
[108.64263153 827.53668213]
[93.75622559 829.41851807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[68 153]
[69 152]
[70 151]
[72 149]
[73 148]
[74 147]
[75 146]
[77 144]
[80 140]
[81 139]
[82 138]
[91 129]
[92 128]
[93 127]
[94 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
