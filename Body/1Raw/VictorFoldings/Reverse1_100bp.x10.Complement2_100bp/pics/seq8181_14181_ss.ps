%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[67.34587860 542.06195068]
[62.36679840 556.32324219]
[53.57040405 568.60333252]
[41.66978455 577.90667725]
[27.62966156 583.47906494]
[12.58820915 584.86877441]
[-2.23523045 581.96319580]
[-15.63898659 574.99786377]
[-26.53647804 564.53741455]
[-34.04429245 551.42980957]
[-37.55380630 536.73760986]
[-36.78051758 521.65191650]
[-31.78711510 507.39559937]
[-22.97838974 495.12435913]
[-11.06842709 485.83300781]
[2.97728586 480.27471924]
[18.02012634 478.90008545]
[20.90539932 464.18017578]
[23.79067230 449.46029663]
[26.67594528 434.74041748]
[29.56121635 420.02050781]
[21.06442070 407.84103394]
[23.78080559 392.87185669]
[36.61338806 384.04220581]
[39.49866104 369.32232666]
[34.35395813 355.34445190]
[44.60125351 343.29025269]
[47.48652649 328.57037354]
[50.37179947 313.85046387]
[53.25707245 299.13058472]
[55.70280075 284.33129883]
[57.70681381 269.46578979]
[59.71082687 254.60025024]
[61.71483994 239.73472595]
[63.71885681 224.86920166]
[65.72286987 210.00366211]
[67.72688293 195.13813782]
[57.98648071 206.54534912]
[44.29642487 212.67581177]
[29.30005646 212.34579468]
[15.89293575 205.61904907]
[6.66376734 193.79440308]
[3.39455986 179.15498352]
[6.71654606 164.52746582]
[15.98830223 152.73617554]
[29.41959763 146.05783081]
[44.41706085 145.78192139]
[58.08491516 151.96170044]
[67.78411102 163.40397644]
[71.64193726 177.90068054]
[75.82894897 163.49690247]
[79.58525085 148.97483826]
[83.34155273 134.45277405]
[87.09784698 119.93072510]
[90.85414886 105.40866089]
[93.62976074 90.66770172]
[95.41222382 75.77398682]
[97.19469452 60.88026428]
[98.97715759 45.98654938]
[89.40766907 57.53751755]
[75.81040955 63.87111664]
[60.81079102 63.76441956]
[47.30500412 57.23803329]
[37.90080643 45.55209732]
[34.41400146 30.96298599]
[37.51783752 16.28762436]
[46.61301041 4.35959864]
[59.94338989 -2.51797867]
[74.93508148 -3.01715446]
[88.69342804 2.95845437]
[98.56190491 14.25505161]
[102.63513947 28.69271469]
[107.03614044 14.35286713]
[111.43713379 0.01301958]
[115.83813477 -14.32682800]
[120.23912811 -28.66667557]
[124.64012909 -43.00652313]
[126.64414215 -57.87205124]
[126.19754028 -72.86540222]
[125.75093079 -87.85874939]
[125.30432892 -102.85209656]
[124.74611664 -117.84171295]
[124.07633209 -132.82675171]
[123.40654755 -147.81178284]
[122.73676300 -162.79682922]
[122.06697083 -177.78186035]
[111.79949188 -193.06782532]
[120.48806763 -208.31497192]
[119.59524536 -223.28837585]
[118.70243073 -238.26177979]
[110.15744781 -251.57695007]
[117.12348938 -264.74218750]
[116.23067474 -279.71560669]
[101.50634003 -283.08764648]
[88.32913971 -290.47262573]
[77.76728058 -301.27188110]
[70.67697144 -314.60995483]
[67.63299561 -329.40560913]
[68.88210297 -344.45938110]
[74.32304382 -358.55096436]
[83.51473999 -370.53802490]
[95.71205902 -379.44879150]
[109.92623138 -384.56094360]
[125.00496674 -385.46002197]
[139.72590637 -382.07321167]
[152.89569092 -374.67498779]
[163.44668579 -363.86511230]
[170.52359009 -350.51992798]
[173.55270386 -335.72125244]
[172.28848267 -320.66873169]
[166.83338928 -306.58261108]
[157.62965393 -294.60479736]
[145.42338562 -285.70626831]
[131.20408630 -280.60842896]
[132.09689331 -265.63500977]
[140.57801819 -253.39083862]
[133.67584229 -239.15460205]
[134.56864929 -224.18119812]
[135.46147156 -209.20777893]
[144.29780579 -200.94668579]
[145.16416931 -188.47940063]
[137.05201721 -178.45164490]
[137.72180176 -163.46661377]
[138.39158630 -148.48156738]
[139.06137085 -133.49653625]
[139.73115540 -118.51149750]
[143.17019653 -111.96971893]
[140.29766846 -103.29870605]
[140.74427795 -88.30535889]
[141.19088745 -73.31200409]
[141.63749695 -58.31865692]
[147.95500183 -71.92340088]
[157.53758240 -83.46351624]
[169.74964905 -92.17357635]
[183.78125000 -97.47587585]
[198.70169067 -99.01873779]
[213.52136230 -96.69982910]
[227.25732422 -90.67295074]
[238.99853516 -81.33785248]
[247.96621704 -69.31368256]
[253.56559753 -55.39797592]
[255.42527771 -40.51370239]
[253.42192078 -25.64808655]
[247.68840027 -11.78711033]
[238.60499573 0.14987920]
[226.77416992 9.37114239]
[212.98063660 15.26506710]
[198.13925171 17.44072914]
[183.23440552 15.75382710]
[169.25468445 10.31624508]
[157.12730408 1.48863816]
[147.65663147 -10.14348888]
[141.47082520 -23.80862045]
[138.97998047 -38.60552216]
[134.57897949 -24.26567650]
[130.17797852 -9.92582989]
[125.77698517 4.41401768]
[121.37598419 18.75386429]
[116.97498322 33.09371185]
[113.87088013 47.76901245]
[112.08840942 62.66273117]
[110.30594635 77.55644989]
[108.52347565 92.45016479]
[119.17082214 81.88446045]
[133.81758118 78.64836884]
[147.92530823 83.74463654]
[157.12257385 95.59412384]
[158.55949402 110.52513885]
[151.79083252 123.91114807]
[138.91394043 131.60433960]
[123.91883087 131.22091675]
[111.45193481 122.87966156]
[105.37621307 109.16496277]
[101.61991119 123.68701935]
[97.86360931 138.20907593]
[94.10730743 152.73114014]
[90.35100555 167.25320435]
[91.65946198 171.39347839]
[91.58940125 175.33804321]
[90.37163544 178.67758179]
[88.34617615 181.11973572]
[85.91467285 182.51469421]
[82.59240723 197.14215088]
[80.58839417 212.00767517]
[78.58438110 226.87321472]
[76.58036804 241.73873901]
[74.57635498 256.60427856]
[72.57234192 271.46978760]
[70.56832886 286.33532715]
[72.35950470 290.29077148]
[72.75868225 294.21572876]
[71.94638062 297.67630005]
[70.22547913 300.34182739]
[67.97696686 302.01583862]
[65.09169006 316.73574829]
[62.20642090 331.45562744]
[59.32114792 346.17553711]
[64.25947571 361.20626831]
[54.21855164 372.20761108]
[51.33327866 386.92749023]
[59.88291550 399.94830322]
[56.74715042 414.83526611]
[44.28110886 422.90579224]
[41.39583588 437.62567139]
[38.51056290 452.34558105]
[35.62528992 467.06546021]
[32.74001694 481.78533936]
[46.15076447 488.73721313]
[57.05875778 499.18673706]
[64.57973480 512.28680420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[24 200]
[25 199]
[27 197]
[28 196]
[29 195]
[30 194]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[50 182]
[51 177]
[52 176]
[53 175]
[54 174]
[55 173]
[56 163]
[57 162]
[58 161]
[59 160]
[72 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[78 131]
[79 130]
[80 129]
[81 128]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[88 119]
[89 118]
[90 117]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
