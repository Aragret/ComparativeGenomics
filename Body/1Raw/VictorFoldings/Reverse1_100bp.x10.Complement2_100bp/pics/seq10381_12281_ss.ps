%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[153.62342834 641.07226562]
[158.08433533 626.64996338]
[166.27188110 613.96667480]
[177.57849121 603.96350098]
[191.16514587 597.38281250]
[188.49934387 582.62158203]
[185.83355713 567.86041260]
[183.16775513 553.09918213]
[172.60092163 563.74536133]
[157.67329407 562.27362061]
[149.38897705 549.76885986]
[153.85484314 535.44903564]
[167.77883911 529.87030029]
[180.89573669 537.14367676]
[179.33522034 522.22509766]
[177.77470398 507.30648804]
[176.21417236 492.38787842]
[167.01777649 484.52957153]
[165.59558105 472.11343384]
[173.25189209 461.73345947]
[171.91365051 446.79327393]
[170.57540894 431.85308838]
[168.12968445 417.05380249]
[164.59001160 402.47741699]
[161.05033875 387.90106201]
[157.51066589 373.32467651]
[153.97099304 358.74829102]
[150.43132019 344.17193604]
[146.89164734 329.59555054]
[143.35151672 326.38986206]
[141.78759766 320.92623901]
[143.47047424 314.53253174]
[140.36636353 299.85723877]
[127.95040894 287.45516968]
[133.80354309 269.99600220]
[130.48127747 255.36854553]
[127.15901947 240.74107361]
[123.83676147 226.11361694]
[111.23754120 213.89778137]
[116.83008575 196.35340881]
[113.29041290 181.77703857]
[109.64232635 167.22741699]
[105.88602448 152.70535278]
[102.12972260 138.18330383]
[98.37342072 123.66123962]
[94.61711884 109.13918304]
[90.32299805 94.76696777]
[85.49700165 80.56451416]
[80.67100525 66.36205292]
[75.84500122 52.15959930]
[68.26058960 65.10087585]
[53.78217316 69.02201843]
[40.70363998 61.67681885]
[36.51697540 47.27293396]
[43.62048721 34.06157303]
[57.94496155 29.61079597]
[71.28407288 36.46949387]
[67.74440002 21.89311790]
[64.20472717 7.31674242]
[60.66505432 -7.25963306]
[57.12538528 -21.83600807]
[44.44401932 -24.27784920]
[33.66725540 -31.30895233]
[26.37674141 -41.85520172]
[23.62647438 -54.32978821]
[25.79051590 -66.87191010]
[32.51256561 -77.62434387]
[42.76404572 -85.00846863]
[39.65993881 -99.68377686]
[36.55582809 -114.35907745]
[31.71826744 -122.10735321]
[33.51646423 -129.27592468]
[23.26916504 -141.33010864]
[28.41386986 -155.30799866]
[25.52859688 -170.02787781]
[22.64332390 -184.74777222]
[19.75805092 -199.46766663]
[16.87277985 -214.18756104]
[13.98750687 -228.90745544]
[9.93716717 -234.13299561]
[9.23869324 -239.77294922]
[11.24233150 -244.10821533]
[8.79660416 -258.90747070]
[-1.21509814 -267.03942871]
[-2.94747686 -279.41613770]
[3.98802209 -289.32699585]
[1.76290488 -304.16104126]
[-0.46221232 -318.99508667]
[-4.83000898 -327.01757812]
[-2.60832071 -334.06640625]
[-4.61233425 -348.93191528]
[-19.52506828 -351.40209961]
[-33.04643250 -358.15960693]
[-43.97411346 -368.60363770]
[-51.33642960 -381.80541992]
[-54.47872925 -396.59115601]
[-53.12160110 -411.64602661]
[-47.38571930 -425.63140869]
[-37.78111649 -437.30374146]
[-25.16182899 -445.62509155]
[-10.64995003 -449.85556030]
[4.46413040 -449.61895752]
[18.83647919 -444.93634033]
[31.18911743 -436.22406006]
[40.42365646 -424.25680542]
[45.71896744 -410.09875488]
[46.60419464 -395.00875854]
[43.00062561 -380.32864380]
[35.22868347 -367.36373901]
[23.97944832 -357.26690674]
[10.25319386 -350.93594360]
[12.25720787 -336.07040405]
[14.37183189 -321.22021484]
[16.59694862 -306.38616943]
[18.82206535 -291.55212402]
[30.47781563 -278.43304443]
[23.59587479 -261.35321045]
[26.04160309 -246.55393982]
[28.70739746 -231.79272461]
[31.59267044 -217.07283020]
[34.47794342 -202.35293579]
[37.36321640 -187.63304138]
[40.24848938 -172.91316223]
[43.13376236 -158.19326782]
[53.17468643 -147.19194031]
[48.23635483 -132.16119385]
[51.23112869 -117.46318817]
[54.33523941 -102.78788757]
[57.43935013 -88.11257935]
[73.99172974 -83.37368011]
[85.92537689 -70.83968353]
[89.88737488 -53.90135956]
[84.69837952 -37.20450592]
[71.70175934 -25.37568092]
[75.24143219 -10.79930496]
[78.78110504 3.77707005]
[82.32077789 18.35344505]
[85.86045074 32.92982101]
[90.04746246 47.33360291]
[94.87345886 61.53606033]
[99.69945526 75.73851776]
[104.52545166 89.94097137]
[113.39611053 77.84503937]
[128.37689209 77.08612823]
[138.42454529 88.22367859]
[136.13229370 103.04749298]
[123.18990326 110.63002014]
[109.13918304 105.38288116]
[112.89547729 119.90493774]
[116.65177917 134.42700195]
[120.40808105 148.94905090]
[124.16438293 163.47111511]
[129.34309387 170.99566650]
[127.86678314 178.23736572]
[131.40646362 192.81373596]
[141.99525452 200.17852783]
[144.64337158 212.39210510]
[138.46421814 222.79136658]
[141.78648376 237.41882324]
[145.10873413 252.04627991]
[148.43099976 266.67373657]
[158.90898132 274.19537354]
[161.37495422 286.44702148]
[155.04165649 296.75311279]
[158.14576721 311.42840576]
[161.46803284 326.05587769]
[165.00770569 340.63226318]
[168.54737854 355.20861816]
[172.08705139 369.78500366]
[175.62672424 384.36138916]
[179.16639709 398.93774414]
[182.70606995 413.51412964]
[188.44744873 399.65640259]
[200.28807068 390.44772339]
[215.13281250 388.29522705]
[229.10131836 393.76156616]
[238.54225159 405.41784668]
[240.98774719 420.21716309]
[235.79858398 434.29098511]
[224.33119202 443.96047974]
[209.58311462 446.69802856]
[195.40946960 441.78808594]
[185.51559448 430.51483154]
[186.85383606 445.45501709]
[188.19206238 460.39520264]
[199.13186646 475.20745850]
[191.13278198 490.82736206]
[192.69329834 505.74597168]
[194.25382996 520.66455078]
[195.81434631 535.58319092]
[197.92897034 550.43334961]
[200.59477234 565.19458008]
[203.26055908 579.95581055]
[205.92636108 594.71704102]
[220.95655823 596.12963867]
[235.04786682 601.54608154]
[247.15460205 610.56439209]
[256.37838745 622.51531982]
[262.03469849 636.51202393]
[263.70388794 651.51593018]
[261.26199341 666.41357422]
[254.89030457 680.09948730]
[245.06159973 691.55804443]
[232.50523376 699.93902588]
[218.15298462 704.62042236]
[203.06988525 705.25488281]
[188.37519836 701.79528809]
[175.15934753 694.49847412]
[164.40307617 683.90576172]
[156.90454102 670.80328369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[14 190]
[15 189]
[16 188]
[17 187]
[20 185]
[21 184]
[22 183]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[32 165]
[33 164]
[35 161]
[36 160]
[37 159]
[38 158]
[40 155]
[41 154]
[42 152]
[43 151]
[44 150]
[45 149]
[46 148]
[47 142]
[48 141]
[49 140]
[50 139]
[57 138]
[58 137]
[59 136]
[60 135]
[61 134]
[68 129]
[69 128]
[70 127]
[72 126]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[82 118]
[83 117]
[86 115]
[87 114]
[88 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
