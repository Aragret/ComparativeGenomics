%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[271.91961670 457.38015747]
[269.47387695 442.58090210]
[267.02816772 427.78161621]
[264.58242798 412.98236084]
[262.13671875 398.18307495]
[257.20510864 384.01693726]
[249.93188477 370.89825439]
[236.99377441 363.51892090]
[237.06919861 347.69787598]
[229.79597473 334.57919312]
[222.52273560 321.46051025]
[215.24951172 308.34179688]
[207.97628784 295.22311401]
[200.70304871 282.10443115]
[193.33236694 269.04022217]
[180.28582764 261.85433960]
[180.12568665 246.03395081]
[172.65794373 233.02499390]
[164.99736023 220.12866211]
[157.14559937 207.34782410]
[143.89088440 200.55357361]
[143.25979614 184.74494934]
[135.40803528 171.96411133]
[127.55628967 159.18327332]
[119.70452881 146.40242004]
[111.85277557 133.62158203]
[98.16721344 135.60252380]
[84.75741577 132.22674561]
[73.64100647 124.00213623]
[66.49055481 112.16619110]
[64.38191223 98.49972534]
[67.63233948 85.05899048]
[75.75278473 73.86627197]
[68.09218597 60.96994400]
[60.43159103 48.07361603]
[52.77099609 35.17728806]
[45.11039734 22.28096199]
[37.35400391 9.44202137]
[29.50225067 -3.33882117]
[21.65049553 -16.11966324]
[13.79873943 -28.90050697]
[5.94698381 -41.68135071]
[-0.02430777 -27.92112732]
[-14.46494770 -23.86306000]
[-26.72983360 -32.49860001]
[-27.77774811 -47.46195221]
[-16.83620834 -57.72268677]
[-1.97229254 -55.71787643]
[-8.85170555 -69.04730988]
[-12.58679295 -71.26159668]
[-15.16379929 -74.24883270]
[-16.48193932 -77.55002594]
[-16.59984398 -80.72062683]
[-15.71703815 -83.38123322]
[-21.79087257 -97.09649658]
[-27.86470604 -110.81175995]
[-33.93854141 -124.52703094]
[-46.60114670 -134.01222229]
[-44.68009186 -148.78242493]
[-50.75392532 -162.49769592]
[-56.82776260 -176.21296692]
[-62.14909363 -162.18858337]
[-75.17832184 -154.75625610]
[-89.95864868 -157.31396484]
[-99.73271179 -168.69235229]
[-100.03194427 -183.68937683]
[-90.71953583 -195.44857788]
[-76.05300140 -198.59384155]
[-62.73641205 -191.68580627]
[-74.34351349 -202.43688965]
[-70.89627075 -216.92707825]
[-75.51028442 -231.19981384]
[-80.12429047 -245.47254944]
[-84.73829651 -259.74530029]
[-89.35231018 -274.01800537]
[-93.96631622 -288.29074097]
[-108.82676697 -286.01849365]
[-123.85927582 -286.15954590]
[-138.67445374 -288.71032715]
[-152.88858032 -293.60470581]
[-166.13345337 -300.71594238]
[-178.06599426 -309.85983276]
[-188.37713623 -320.79949951]
[-196.79978943 -333.25161743]
[-203.11578369 -346.89361572]
[-207.16152954 -361.37216187]
[-208.83221436 -376.31219482]
[-208.08457947 -391.32678223]
[-204.93800354 -406.02694702]
[-199.47395325 -420.03195190]
[-191.83398438 -432.97906494]
[-182.21598816 -444.53286743]
[-170.86909485 -454.39410400]
[-158.08721924 -462.30737305]
[-144.20143127 -468.06765747]
[-129.57141113 -471.52578735]
[-114.57611084 -472.59219360]
[-99.60394287 -471.23922729]
[-85.04273224 -467.50192261]
[-71.26964569 -461.47714233]
[-58.64142990 -453.32089233]
[-47.48519897 -443.24444580]
[-38.08991623 -431.50881958]
[-30.69894600 -418.41799927]
[-25.50373268 -404.31106567]
[-22.63884354 -389.55337524]
[-22.17848587 -374.52728271]
[-24.13458633 -359.62191772]
[-28.45647621 -345.22338867]
[-35.03220749 -331.70465088]
[-43.69145203 -319.41589355]
[-54.20991516 -308.67541504]
[-66.31514740 -299.76141357]
[-79.69358826 -292.90475464]
[-75.07957458 -278.63201904]
[-70.46556854 -264.35928345]
[-65.85155487 -250.08656311]
[-61.23754883 -235.81382751]
[-56.62353897 -221.54109192]
[-45.34645844 -211.81089783]
[-48.46368027 -196.29981995]
[-43.11249542 -182.28678894]
[-37.03866196 -168.57153320]
[-30.96482658 -154.85626221]
[-18.73666191 -146.35206604]
[-20.22327423 -130.60086060]
[-14.14943981 -116.88559723]
[-8.07560539 -103.17033386]
[-2.00177169 -89.45506287]
[4.47772408 -75.92671967]
[11.35713673 -62.59729004]
[18.72782707 -49.53310394]
[26.57958221 -36.75226212]
[34.43133545 -23.97141838]
[42.28309250 -11.19057655]
[50.13484955 1.59026587]
[56.31454849 5.64404249]
[58.00672531 14.62036419]
[65.66732025 27.51669121]
[73.32791901 40.41301727]
[80.98851776 53.30934525]
[88.64911652 66.20567322]
[104.49485016 64.63482666]
[119.44383240 70.11962891]
[130.51359558 81.56581116]
[135.49565125 96.68977356]
[133.39602661 112.47415161]
[124.63362122 125.76982880]
[132.48536682 138.55067444]
[140.33712769 151.33151245]
[148.18888855 164.11235046]
[156.04063416 176.89320374]
[169.85696411 184.60162354]
[169.92643738 199.49607849]
[177.77819824 212.27691650]
[183.40048218 215.75563049]
[186.02758789 220.79501343]
[185.66690063 225.55725098]
[193.13464355 238.56620789]
[206.71533203 246.68258667]
[206.34132385 261.57247925]
[213.32771301 267.45706177]
[213.82174683 274.83117676]
[221.09497070 287.94989014]
[228.36820984 301.06857300]
[235.64143372 314.18725586]
[242.91467285 327.30596924]
[250.18789673 340.42465210]
[263.64624023 348.74234009]
[263.05056763 363.62503052]
[270.32379150 376.74371338]
[269.65655518 361.75857544]
[272.68692017 347.06784058]
[279.22955322 333.56991577]
[288.88436890 322.09017944]
[301.06100464 313.33062744]
[315.01480103 307.82690430]
[329.89254761 305.91555786]
[344.78439331 307.71347046]
[358.77975464 313.11071777]
[371.02276611 321.77722168]
[380.76480103 333.18304443]
[387.41009521 346.63073730]
[390.55230713 361.29791260]
[389.99926758 376.28771973]
[385.78485107 390.68350220]
[378.16668701 403.60494995]
[367.61071777 414.26193237]
[354.76235962 422.00274658]
[340.40734863 426.35403442]
[325.42349243 427.04974365]
[310.72705078 424.04730225]
[297.21673584 417.53033447]
[285.71865845 407.89733887]
[276.93597412 395.73736572]
[279.38171387 410.53662109]
[281.82742310 425.33590698]
[284.27316284 440.13516235]
[286.71887207 454.93444824]
[301.38064575 459.17660522]
[312.74407959 469.36651611]
[318.55300903 483.48101807]
[317.65402222 498.71765137]
[310.22567749 512.05114746]
[297.74282837 520.83416748]
[282.68395996 523.32275391]
[268.03903198 519.02288818]
[256.71578979 508.78829956]
[250.96249390 494.65103149]
[251.92144775 479.41809082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 171]
[7 170]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 161]
[17 159]
[18 158]
[19 155]
[20 154]
[22 152]
[23 151]
[24 150]
[25 149]
[26 148]
[33 142]
[34 141]
[35 140]
[36 139]
[37 138]
[38 136]
[39 135]
[40 134]
[41 133]
[42 132]
[48 131]
[49 130]
[54 129]
[55 128]
[56 127]
[57 126]
[59 124]
[60 123]
[61 122]
[69 121]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
