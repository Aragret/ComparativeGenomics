%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-15.57377338 365.17449951]
[-11.04962158 379.49887085]
[-8.43393517 394.29119873]
[-7.77147436 409.29840088]
[-9.07357311 424.26367188]
[-12.31795120 438.93093872]
[-17.44909286 453.04925537]
[-24.37919807 466.37698364]
[-32.98968124 478.68612671]
[-43.13320923 489.76599121]
[-54.63621140 499.42706299]
[-67.30185699 507.50396729]
[-80.91342163 513.85852051]
[-95.23799133 518.38201904]
[-110.03044891 520.99694824]
[-125.03768158 521.65869141]
[-140.00289917 520.35589600]
[-154.67002869 517.11083984]
[-168.78808594 511.97900391]
[-182.11549377 505.04827881]
[-194.42420959 496.43719482]
[-205.50360107 486.29315186]
[-215.16410828 474.78970337]
[-223.24041748 462.12365723]
[-229.59432983 448.51181030]
[-234.11711121 434.18701172]
[-236.73139954 419.39443970]
[-237.39242554 404.38717651]
[-236.08889771 389.42199707]
[-232.84312439 374.75503540]
[-227.71064758 360.63723755]
[-220.77926636 347.31015015]
[-212.16761780 335.00183105]
[-202.02302551 323.92291260]
[-190.51910400 314.26296997]
[-177.85269165 306.18725586]
[-164.24052429 299.83401489]
[-149.91552734 295.31188965]
[-135.12281799 292.69833374]
[-120.11551666 292.03799438]
[-105.15042877 293.34222412]
[-90.48361206 296.58871460]
[-76.36604309 301.72186279]
[-63.03929520 308.65386963]
[-54.44073105 296.36303711]
[-45.84216690 284.07220459]
[-37.24360275 271.78137207]
[-36.28771210 256.91744995]
[-22.03707504 250.04505920]
[-13.43851089 237.75422668]
[-4.83994722 225.46337891]
[-3.88405681 210.59948730]
[10.36658096 203.72708130]
[10.11619854 200.21003723]
[11.55689240 196.39697266]
[14.80923462 193.08403015]
[19.63368225 191.09109497]
[28.77248383 179.19645691]
[37.91128540 167.30183411]
[47.05008698 155.40719604]
[43.60508347 142.99101257]
[48.00606918 130.67381287]
[58.85729980 123.02782440]
[72.32632446 123.02754211]
[81.64120483 111.27029419]
[90.95608521 99.51303864]
[91.05946350 95.65795135]
[92.86159515 91.86714935]
[96.29567719 88.89830017]
[100.95886230 87.45104218]
[110.78944397 76.12144470]
[120.62002563 64.79185486]
[130.45060730 53.46226120]
[140.28118896 42.13266754]
[150.11177063 30.80307579]
[159.94235229 19.47348213]
[169.77293396 8.14388943]
[179.60351562 -3.18570423]
[189.43409729 -14.51529694]
[196.60946655 -27.68777275]
[200.79647827 -42.09155655]
[204.98347473 -56.49533844]
[209.17048645 -70.89911652]
[201.36782837 -81.87786865]
[201.31372070 -95.15218353]
[208.80386353 -105.87504578]
[220.92004395 -110.25998688]
[225.32104492 -124.59983063]
[229.72204590 -138.93968201]
[233.69413757 -153.40420532]
[229.43190002 -168.64047241]
[239.95404053 -179.18246460]
[243.49371338 -193.75885010]
[247.03338623 -208.33522034]
[250.57305908 -222.91159058]
[254.11273193 -237.48797607]
[257.65240479 -252.06434631]
[243.93316650 -258.23663330]
[231.58180237 -266.82492065]
[221.01902771 -277.53671265]
[212.60458374 -290.00714111]
[206.62506104 -303.81149292]
[203.28411865 -318.47958374]
[202.69557190 -333.51181030]
[204.87944031 -348.39620972]
[209.76135254 -362.62582397]
[217.17503357 -375.71597290]
[226.86796570 -387.22082520]
[238.51002502 -396.74853516]
[251.70468140 -403.97457886]
[266.00253296 -408.65283203]
[280.91659546 -410.62399292]
[295.93890381 -409.82089233]
[310.55780029 -406.27090454]
[324.27536011 -400.09490967]
[336.62438965 -391.50329590]
[347.18429565 -380.78866577]
[355.59536743 -368.31594849]
[361.57116699 -354.51000977]
[364.90817261 -339.84100342]
[365.49267578 -324.80862427]
[363.30477905 -309.92480469]
[358.41903687 -295.69650269]
[351.00183105 -282.60836792]
[341.30578613 -271.10610962]
[329.66116333 -261.58157349]
[316.46456909 -254.35906982]
[302.16546631 -249.68466187]
[287.25085449 -247.71752930]
[272.22879028 -248.52467346]
[268.68911743 -233.94830322]
[265.14944458 -219.37191772]
[261.60977173 -204.79554749]
[258.07009888 -190.21917725]
[254.53041077 -175.64279175]
[259.04583740 -161.44912720]
[248.27052307 -149.86453247]
[249.61210632 -147.40318298]
[250.05955505 -144.26210022]
[249.34909058 -140.77919006]
[247.34399414 -137.38151550]
[244.06188965 -134.53868103]
[239.66088867 -120.19883728]
[235.25988770 -105.85898590]
[243.76705933 -91.35150909]
[239.05682373 -74.85518646]
[223.57427979 -66.71210480]
[219.38726807 -52.30832672]
[215.20025635 -37.90454483]
[211.01324463 -23.50076103]
[221.14707947 -34.55994034]
[233.27519226 -43.38652802]
[246.91455078 -49.62896347]
[261.52188110 -53.03861237]
[276.51541138 -53.47967148]
[291.29791260 -50.93457413]
[305.28060913 -45.50468445]
[317.90661621 -37.40628052]
[328.67300415 -26.96191788]
[337.15097046 -14.58758640]
[343.00283813 -0.77615505]
[345.99554443 13.92227364]
[346.00985718 28.92226601]
[343.04522705 43.62638092]
[337.21972656 57.44895554]
[328.76538086 69.83944702]
[318.01895142 80.30433655]
[305.40841675 88.42681885]
[291.43609619 93.88338470]
[276.65847778 96.45668793]
[261.66415405 96.04425049]
[247.05033875 92.66248322]
[233.39909363 86.44609070]
[221.25413513 77.64266205]
[211.09922791 66.60284424]
[203.33879089 53.76634598]
[198.28195190 39.64443207]
[196.13011169 24.79958344]
[196.96897888 9.82305813]
[200.76368713 -4.68471622]
[190.93310547 6.64487696]
[181.10252380 17.97447014]
[171.27194214 29.30406380]
[161.44136047 40.63365555]
[151.61077881 51.96324921]
[141.78019714 63.29284286]
[131.94961548 74.62243652]
[122.11904144 85.95202637]
[112.28845978 97.28162384]
[102.71334076 108.82792664]
[93.39845276 120.58517456]
[84.08357239 132.34242249]
[86.41553497 149.67970276]
[75.69813538 163.07568359]
[58.94472122 164.54598999]
[49.80591965 176.44062805]
[40.66711807 188.33526611]
[31.52831459 200.22988892]
[22.65741920 212.32565308]
[21.08650208 228.06866455]
[7.45089054 234.06195068]
[-1.14767337 246.35278320]
[-9.74623775 258.64361572]
[-11.31715488 274.38665771]
[-24.95276642 280.37991333]
[-33.55133057 292.67077637]
[-42.14989471 304.96160889]
[-50.74845886 317.25244141]
[-39.66809082 327.39544678]
[-30.00648880 338.89797974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 208]
[45 207]
[46 206]
[47 205]
[49 203]
[50 202]
[51 201]
[53 199]
[57 198]
[58 197]
[59 196]
[60 195]
[64 192]
[65 191]
[66 190]
[70 189]
[71 188]
[72 187]
[73 186]
[74 185]
[75 184]
[76 183]
[77 182]
[78 181]
[79 180]
[80 150]
[81 149]
[82 148]
[83 147]
[87 144]
[88 143]
[89 142]
[90 137]
[92 135]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
