%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[101.75165558 778.31414795]
[86.91704559 776.00366211]
[72.39862823 772.18011475]
[58.35030365 766.88397217]
[44.92100143 760.17150879]
[32.25307846 752.11370850]
[20.48081779 742.79608154]
[9.72901344 732.31744385]
[0.11164059 720.78875732]
[-8.26935101 708.33233643]
[-15.32511806 695.08013916]
[-20.98086548 681.17272949]
[-25.17663956 666.75744629]
[-27.86796188 651.98718262]
[-29.02630424 637.01849365]
[-28.63938522 622.01000977]
[-26.71130943 607.12084961]
[-23.26251411 592.50885010]
[-18.32955742 578.32897949]
[-11.96473408 564.73144531]
[-4.23551178 551.86041260]
[4.77617359 539.85235596]
[14.97479343 528.83453369]
[26.25223732 518.92376709]
[38.48895645 510.22509766]
[51.55523682 502.83074951]
[65.31256866 496.81912231]
[79.61511230 492.25387573]
[94.31125641 489.18350220]
[109.24521637 487.64047241]
[109.24521637 472.64047241]
[109.24521637 457.64047241]
[109.24521637 442.64047241]
[109.24521637 427.64047241]
[109.24521637 412.64047241]
[109.24521637 397.64047241]
[109.13354492 382.64086914]
[108.91021729 367.64254761]
[108.68688965 352.64419556]
[108.46356201 337.64587402]
[100.00492096 328.99844360]
[99.69611359 316.50491333]
[108.24794006 306.84936523]
[108.24794006 291.84936523]
[105.10443878 285.16058350]
[108.36126709 276.62646484]
[108.58459473 261.62814331]
[108.80792236 246.62979126]
[109.03125000 231.63145447]
[109.25457764 216.63311768]
[109.47790527 201.63478088]
[109.70123291 186.63644409]
[108.25181580 171.70663452]
[105.14770508 157.03132629]
[101.93443298 142.37954712]
[98.61217499 127.75208282]
[86.98594666 124.55073547]
[77.81077576 116.72550964]
[72.81472015 105.75021362]
[72.93872833 93.69191742]
[78.15944672 82.82168579]
[87.49359894 75.18681335]
[84.60832977 60.46691895]
[81.61355591 45.76891708]
[78.50944519 31.09361458]
[65.54682159 22.45600891]
[62.60787201 7.52894545]
[70.92239380 -4.77570105]
[67.81828308 -19.45100403]
[64.71417236 -34.12630463]
[61.61006165 -48.80160904]
[58.39678955 -63.45339584]
[55.07452774 -78.08085632]
[41.98474503 -86.52451324]
[38.82387543 -101.40615845]
[46.95427322 -113.83323669]
[43.63201523 -128.46069336]
[40.30975723 -143.08815002]
[25.33933449 -152.13833618]
[21.61933327 -168.88577271]
[30.97491837 -182.86117554]
[27.43524551 -197.43754578]
[23.89557266 -212.01391602]
[8.84562016 -211.57504272]
[-5.96663046 -214.27522278]
[-19.89365196 -219.99638367]
[-32.32661438 -228.48844910]
[-42.72200012 -239.38017273]
[-50.62537003 -252.19541931]
[-55.69121933 -266.37396240]
[-57.69809723 -281.29595947]
[-56.55826569 -296.30908203]
[-52.32155609 -310.75708008]
[-45.17317581 -324.00827026]
[-35.42562485 -335.48342896]
[-23.50502396 -344.68084717]
[-9.93249130 -351.19851685]
[4.69864368 -354.75149536]
[19.74876785 -355.18444824]
[34.55995560 -352.47845459]
[48.48472595 -346.75180054]
[60.91434479 -338.25485229]
[71.30544281 -327.35903931]
[79.20377350 -314.54067993]
[84.26404572 -300.36016846]
[86.26505280 -285.43737793]
[85.11931610 -270.42468262]
[80.87691498 -255.97837830]
[73.72332764 -242.72998047]
[63.97126389 -231.25868225]
[52.04704666 -222.06591797]
[38.47194672 -215.55358887]
[42.01161957 -200.97721863]
[45.55129242 -186.40084839]
[57.38499451 -181.30250549]
[64.22363281 -170.15284729]
[63.37951660 -156.90527344]
[54.93721771 -146.41041565]
[58.25947571 -131.78295898]
[61.58173370 -117.15549469]
[74.28253937 -109.45970154]
[77.86015320 -94.67270660]
[69.70198822 -81.40311432]
[73.02424622 -66.77565765]
[77.57114410 -60.94920349]
[76.28536224 -51.90571976]
[79.38947296 -37.23041534]
[82.49358368 -22.55511284]
[85.59769440 -7.87981129]
[98.18251038 0.00422156]
[101.53957367 14.84284592]
[93.18474579 27.98950386]
[96.28885651 42.66480637]
[100.74849701 48.55831146]
[99.32822418 57.58164597]
[102.21349335 72.30153656]
[118.34402466 79.12894440]
[127.18527985 94.24978638]
[125.22403717 111.65556335]
[113.23963165 124.42982483]
[116.56189728 139.05728149]
[121.51427460 146.73268127]
[119.82301331 153.92721558]
[122.92711639 168.60252380]
[127.49202728 154.31401062]
[136.85345459 142.59378052]
[149.77972412 134.98384094]
[164.57019043 132.48538208]
[179.27890015 135.42715454]
[191.97065735 143.42210388]
[200.97566223 155.41833496]
[205.10914612 169.83757019]
[203.82727051 184.78269958]
[197.29870605 198.28742981]
[186.38237000 208.57498169]
[172.51452637 214.29185486]
[157.51969910 214.68589783]
[143.37072754 209.70526123]
[131.92915344 200.00523376]
[124.69957733 186.85977173]
[124.47624207 201.85810852]
[124.25291443 216.85644531]
[124.02958679 231.85478210]
[123.80625916 246.85311890]
[123.58293152 261.85147095]
[123.35960388 276.84979248]
[123.24794006 291.84936523]
[123.24794006 306.84936523]
[132.82263184 322.57855225]
[123.46189880 337.42254639]
[123.68522644 352.42086792]
[123.90855408 367.41921997]
[124.13188171 382.41754150]
[127.38871765 390.95166016]
[124.24521637 397.64047241]
[124.24521637 412.64047241]
[124.24521637 427.64047241]
[124.24521637 442.64047241]
[124.24521637 457.64047241]
[124.24521637 472.64047241]
[124.24521637 487.64047241]
[139.17916870 489.18350220]
[153.87532043 492.25387573]
[168.17785645 496.81912231]
[181.93519592 502.83074951]
[195.00146484 510.22509766]
[207.23818970 518.92376709]
[218.51564026 528.83453369]
[228.71424866 539.85235596]
[237.72593689 551.86041260]
[245.45515442 564.73144531]
[251.81999207 578.32897949]
[256.75292969 592.50885010]
[260.20175171 607.12084961]
[262.12982178 622.01000977]
[262.51672363 637.01849365]
[261.35839844 651.98718262]
[258.66705322 666.75744629]
[254.47129822 681.17272949]
[248.81555176 695.08013916]
[241.75978088 708.33233643]
[233.37878418 720.78875732]
[223.76141357 732.31744385]
[213.00961304 742.79608154]
[201.23735046 752.11370850]
[188.56942749 760.17150879]
[175.14012146 766.88397217]
[161.09179688 772.18011475]
[146.57337952 776.00366211]
[131.73876953 778.31414795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 173]
[38 172]
[39 171]
[40 170]
[43 168]
[44 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 144]
[54 143]
[55 141]
[56 140]
[62 136]
[63 135]
[64 133]
[65 132]
[68 129]
[69 128]
[70 127]
[71 126]
[72 124]
[73 123]
[76 120]
[77 119]
[78 118]
[81 114]
[82 113]
[83 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
