%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[2.91689205 538.42816162]
[-6.26193714 550.30004883]
[-16.26431656 561.48693848]
[-27.03927612 571.93170166]
[-38.53190613 581.58117676]
[-50.68364716 590.38623047]
[-63.43257141 598.30194092]
[-76.71371460 605.28796387]
[-90.45939636 611.30871582]
[-104.59957886 616.33349609]
[-119.06219482 620.33673096]
[-133.77354431 623.29803467]
[-148.65867615 625.20227051]
[-163.64173889 626.03973389]
[-178.64636230 625.80621338]
[-193.59608459 624.50286865]
[-208.41474915 622.13635254]
[-223.02682495 618.71868896]
[-237.35786438 614.26727295]
[-251.33482361 608.80487061]
[-264.88647461 602.35931396]
[-277.94378662 594.96337891]
[-290.44021606 586.65472412]
[-302.31204224 577.47583008]
[-313.49884033 567.47338867]
[-323.94354248 556.69830322]
[-333.59292603 545.20562744]
[-342.39785767 533.05383301]
[-350.31347656 520.30480957]
[-357.29937744 507.02362061]
[-363.32003784 493.27789307]
[-368.34472656 479.13769531]
[-372.34786987 464.67504883]
[-375.30902100 449.96365356]
[-377.21316528 435.07852173]
[-378.05053711 420.09545898]
[-377.81689453 405.09082031]
[-376.51342773 390.14111328]
[-374.14675903 375.32244873]
[-370.72900391 360.71041870]
[-366.27749634 346.37942505]
[-360.81500244 332.40249634]
[-354.36929321 318.85089111]
[-346.97323608 305.79364014]
[-338.66455078 293.29727173]
[-329.48553467 281.42550659]
[-319.48300171 270.23880005]
[-308.70785522 259.79418945]
[-297.21508789 250.14486694]
[-285.06320190 241.34002686]
[-272.31417847 233.42453003]
[-259.03292847 226.43872070]
[-245.28713989 220.41816711]
[-231.14689636 215.39358521]
[-216.68420410 211.39056396]
[-201.97280884 208.42950439]
[-187.08764648 206.52549744]
[-172.10458374 205.68823242]
[-157.09996033 205.92198181]
[-142.15025330 207.22557068]
[-127.33161926 209.59233093]
[-112.71959686 213.01022339]
[-98.38863373 217.46182251]
[-84.41175842 222.92443848]
[-70.86019135 229.37025452]
[-57.80300140 236.76638794]
[-45.30671310 245.07518005]
[-33.43500900 254.25428772]
[-23.43683624 243.07231140]
[-13.43866444 231.89033508]
[-3.44049215 220.70835876]
[6.55768013 209.52638245]
[16.55585289 198.34440613]
[26.04475021 186.72715759]
[35.00544739 174.69776917]
[43.96614075 162.66839600]
[45.36416245 147.83953857]
[59.81309891 141.39448547]
[68.77379608 129.36511230]
[77.73448944 117.33573151]
[86.69519043 105.30635071]
[88.51278687 91.44316864]
[101.27543640 85.73294830]
[110.23612976 73.70357513]
[112.27507782 58.01430130]
[126.08309174 52.42966461]
[128.12203979 36.74039078]
[141.93003845 31.15575409]
[150.89074707 19.12637711]
[159.85144043 7.09699917]
[168.81213379 -4.93237829]
[157.59031677 -14.89994144]
[147.26690674 -25.79529381]
[137.91835022 -37.53777313]
[129.61383057 -50.04043198]
[122.41486359 -63.21071243]
[116.37474060 -76.95110321]
[111.53816986 -91.15986633]
[107.94096375 -105.73181152]
[105.60976410 -120.55905151]
[104.56182861 -135.53179932]
[104.80490875 -150.53921509]
[106.33721161 -165.47016907]
[109.14739227 -180.21412659]
[113.21463776 -194.66192627]
[118.50883484 -208.70660400]
[124.99079895 -222.24417114]
[132.61253357 -235.17439270]
[141.31759644 -247.40153503]
[151.04154968 -258.83508301]
[161.71240234 -269.39038086]
[173.25114441 -278.98928833]
[185.57235718 -287.56072998]
[198.58479309 -295.04122925]
[212.19212341 -301.37542725]
[226.29359436 -306.51638794]
[240.78482056 -310.42611694]
[255.55850220 -313.07559204]
[270.50524902 -314.44525146]
[285.51443481 -314.52493286]
[300.47488403 -313.31402588]
[315.27584839 -310.82153320]
[329.80776978 -307.06591797]
[343.96304321 -302.07492065]
[357.63687134 -295.88555908]
[370.72796631 -288.54364014]
[383.13949585 -280.10348511]
[394.77947998 -270.62762451]
[405.56179810 -260.18621826]
[415.40658569 -248.85655212]
[424.24099731 -236.72250366]
[431.99957275 -223.87393188]
[438.62487793 -210.40594482]
[444.06790161 -196.41827393]
[448.28829956 -182.01446533]
[451.25485229 -167.30117798]
[452.94558716 -152.38732910]
[453.34799194 -137.38334656]
[452.45907593 -122.40031433]
[450.28543091 -107.54916382]
[446.84313965 -92.93984222]
[442.15768433 -78.68053436]
[436.26376343 -64.87679291]
[429.20504761 -51.63082504]
[421.03372192 -39.04069901]
[411.81036377 -27.19963264]
[401.60321045 -16.19529152]
[390.48785400 -6.10915136]
[378.54656982 2.98411369]
[365.86779785 11.01717854]
[352.54541016 17.93056870]
[338.67800903 23.67309761]
[324.36828613 28.20224953]
[309.72216797 31.48449326]
[294.84811401 33.49552536]
[279.85626221 34.22045898]
[264.85757446 33.65392303]
[249.96311951 31.80011749]
[235.28317261 28.67276382]
[220.92640686 24.29501724]
[206.99911499 18.69928932]
[193.60443115 11.92700863]
[180.84150696 4.02831793]
[171.88081360 16.05769539]
[162.92012024 28.08707237]
[153.95942688 40.11645126]
[152.56140137 54.94530106]
[138.11247253 61.39036179]
[136.71444702 76.21920776]
[122.26551056 82.66426849]
[113.30480957 94.69364929]
[111.48721313 108.55683136]
[98.72456360 114.26705170]
[89.76387024 126.29642487]
[80.80317688 138.32580566]
[71.84247589 150.35517883]
[69.80352783 166.04444885]
[55.99552155 171.62908936]
[47.03482437 183.65846252]
[38.07412720 195.68785095]
[53.03429031 194.59533691]
[64.47489929 204.29649353]
[65.84226227 219.23403931]
[56.35308838 230.85107422]
[41.44320297 232.49284363]
[29.65367126 223.21884155]
[27.73782730 208.34259033]
[17.73965454 219.52456665]
[7.74148273 230.70652771]
[-2.25668955 241.88850403]
[-12.25486183 253.07048035]
[-22.25303268 264.25247192]
[-11.80816650 275.02734375]
[-2.15858698 286.51989746]
[6.64653301 298.67156982]
[14.56232357 311.42044067]
[21.54844666 324.70150757]
[27.56930351 338.44714355]
[32.59421539 352.58731079]
[36.59756851 367.04989624]
[39.55897141 381.76123047]
[41.46332550 396.64633179]
[42.30093384 411.62939453]
[42.06752014 426.63400269]
[40.76428223 441.58374023]
[38.39785385 456.40243530]
[34.98030090 471.01452637]
[30.52903175 485.34561157]
[25.06673431 499.32260132]
[18.62124062 512.87432861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 192]
[69 191]
[70 190]
[71 189]
[72 188]
[73 187]
[74 180]
[75 179]
[76 178]
[78 176]
[79 175]
[80 174]
[81 173]
[83 171]
[84 170]
[86 168]
[88 166]
[89 165]
[90 164]
[91 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
