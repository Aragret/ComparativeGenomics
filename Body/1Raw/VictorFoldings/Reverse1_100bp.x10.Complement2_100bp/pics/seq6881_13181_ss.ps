%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[88.34312439 659.95709229]
[77.37387085 649.70416260]
[67.57748413 638.32531738]
[59.06880569 625.95397949]
[51.94760895 612.73522949]
[46.29738617 598.82397461]
[42.18437576 584.38342285]
[39.65680695 569.58276367]
[38.74431229 554.59564209]
[39.45758820 539.59765625]
[41.78827667 524.76477051]
[45.70904541 510.27081299]
[51.17393112 496.28573608]
[58.11885834 482.97351074]
[66.46240234 470.49023438]
[76.10673523 458.98223877]
[86.93878937 448.58444214]
[98.83155823 439.41879272]
[111.64561462 431.59271240]
[125.23070526 425.19799805]
[139.42756653 420.30960083]
[136.10530090 405.68212891]
[132.78303528 391.05465698]
[129.46078491 376.42721558]
[127.16342163 374.82089233]
[125.36392212 372.20776367]
[124.44894409 368.77291870]
[124.73108673 364.83782959]
[126.40369415 360.83078003]
[123.95796967 346.03152466]
[121.51224518 331.23223877]
[119.06651306 316.43298340]
[106.03770447 315.21395874]
[93.67276764 310.89920044]
[82.69660950 303.73635864]
[73.75401306 294.14022827]
[67.37172699 282.66870117]
[63.92745209 269.99035645]
[63.62748718 256.84545898]
[66.49439240 244.00285339]
[72.36534882 232.21478271]
[80.90142822 222.17303467]
[91.60714722 214.46821594]
[103.85920715 209.55508423]
[102.07674408 194.66136169]
[100.29427338 179.76763916]
[98.51181030 164.87393188]
[95.37769318 161.27026367]
[94.47409821 155.65951538]
[96.90482330 149.51109314]
[95.56658936 134.57090759]
[86.72467041 122.58467865]
[93.19992065 108.14924622]
[90.97480774 93.31520081]
[87.87069702 78.63990021]
[84.76658630 63.96459579]
[81.66247559 49.28929520]
[78.55836487 34.61399460]
[68.13273621 22.71370888]
[73.06875610 8.66077518]
[69.96464539 -6.01452732]
[66.86053467 -20.68982887]
[63.75642776 -35.36513138]
[50.79380798 -44.00273895]
[47.85485458 -58.92980194]
[56.16937637 -71.23444366]
[53.06526566 -85.90975189]
[49.96115494 -100.58505249]
[46.85704422 -115.26035309]
[43.75293350 -129.93565369]
[40.64882278 -144.61096191]
[28.02639008 -158.01826477]
[34.11266708 -174.47802734]
[30.79040718 -189.10549927]
[27.46814728 -203.73295593]
[24.14588737 -218.36041260]
[20.25301361 -203.87437439]
[12.12700176 -191.26611328]
[0.54237336 -181.73741150]
[-13.39669895 -176.19644165]
[-28.36163139 -175.17135620]
[-42.92606354 -178.75985718]
[-55.70180130 -186.61991882]
[-65.47115326 -198.00234985]
[-71.30295563 -211.82226562]
[-72.64136505 -226.76243591]
[-69.35881042 -241.39886475]
[-61.76816177 -254.33648682]
[-50.59291840 -264.34216309]
[-36.89822769 -270.46224976]
[-21.98937988 -272.11340332]
[-7.28739309 -269.13824463]
[5.80643225 -261.82034302]
[16.04407692 -250.85719299]
[22.45007515 -237.29264832]
[23.11985970 -252.27767944]
[23.78964424 -267.26272583]
[24.45943069 -282.24777222]
[10.36397266 -287.77920532]
[-1.17008257 -297.58959961]
[-8.89160824 -310.61483765]
[-11.96303082 -325.44201660]
[-10.05118561 -340.46279907]
[-3.36345506 -354.04782104]
[7.37472630 -364.72351074]
[20.99855995 -371.33181763]
[36.03023529 -373.15594482]
[50.83922958 -369.99804688]
[63.81916809 -362.20062256]
[73.56209564 -350.60949707]
[79.01116180 -336.48199463]
[79.57529449 -321.35055542]
[75.19330597 -306.85650635]
[66.34051514 -294.57211304]
[53.97720718 -285.82983398]
[39.44446945 -281.57797241]
[38.77468491 -266.59292603]
[38.10490036 -251.60789490]
[37.43511200 -236.62286377]
[38.77334976 -221.68267822]
[42.09560776 -207.05520630]
[45.41786575 -192.42774963]
[48.74012756 -177.80029297]
[58.80517197 -171.09048462]
[61.69271469 -158.93130493]
[55.32412720 -147.71507263]
[58.42823792 -133.03976440]
[61.53234863 -118.36446381]
[64.63645935 -103.68916321]
[67.74057007 -89.01386261]
[70.84468079 -74.33855438]
[83.42949677 -66.45452118]
[86.78656006 -51.61589813]
[78.43173218 -38.46924210]
[81.53584290 -23.79393959]
[84.63995361 -9.11863708]
[87.74406433 5.55666494]
[97.94766235 16.40727425]
[93.23366547 31.50988197]
[96.33777618 46.18518448]
[99.44188690 60.86048889]
[102.54599762 75.53578949]
[105.65010834 90.21109009]
[112.97484589 77.12108612]
[126.54607391 70.73189545]
[141.30206299 73.42652130]
[151.73918152 84.19994354]
[153.96464539 99.03392792]
[147.14842224 112.39578247]
[133.83279419 119.30185699]
[118.98413849 117.17635345]
[108.14010620 106.81101227]
[117.07774353 119.86586761]
[110.50676727 133.23268127]
[111.84500122 148.17285156]
[113.40552521 163.09146118]
[115.18799591 177.98518372]
[116.97045898 192.87889099]
[118.75292206 207.77261353]
[135.51168823 210.79940796]
[150.50567627 218.83599854]
[162.27999878 231.09004211]
[169.69606018 246.36056519]
[172.04162598 263.15570068]
[169.09924316 279.83837891]
[161.16633606 294.78598022]
[149.02517700 306.54809570]
[133.86578369 313.98724365]
[136.31150818 328.78652954]
[138.75724792 343.58578491]
[141.20297241 358.38507080]
[144.08824158 373.10494995]
[147.41050720 387.73242188]
[150.73275757 402.35986328]
[154.05502319 416.98733521]
[168.97064209 415.26358032]
[183.98519897 415.16259766]
[198.92266846 416.68560791]
[213.60789490 419.81475830]
[227.86869812 424.51330566]
[241.53788757 430.72622681]
[254.45521545 438.38064575]
[266.46920776 447.38684082]
[277.43899536 457.63919067]
[287.23602295 469.01748657]
[295.74536133 481.38836670]
[302.86724854 494.60675049]
[308.51821899 508.51766968]
[312.63201904 522.95800781]
[315.16036987 537.75854492]
[316.07369995 552.74560547]
[315.36120605 567.74359131]
[313.03131104 582.57666016]
[309.11132812 597.07080078]
[303.64718628 611.05615234]
[296.70300293 624.36877441]
[288.36010742 636.85247803]
[278.71640015 648.36102295]
[267.88491821 658.75939941]
[255.99263000 667.92565918]
[243.17900085 675.75244141]
[229.59425354 682.14788818]
[215.39765930 687.03704834]
[200.75567627 690.36260986]
[185.83995056 692.08557129]
[170.82539368 692.18572998]
[155.88801575 690.66192627]
[141.20295715 687.53198242]
[126.94239807 682.83264160]
[113.27353668 676.61901855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 175]
[22 174]
[23 173]
[24 172]
[29 171]
[30 170]
[31 169]
[32 168]
[44 159]
[45 158]
[46 157]
[47 156]
[50 155]
[51 154]
[53 152]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[60 137]
[61 136]
[62 135]
[63 134]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[73 123]
[74 122]
[75 121]
[76 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
