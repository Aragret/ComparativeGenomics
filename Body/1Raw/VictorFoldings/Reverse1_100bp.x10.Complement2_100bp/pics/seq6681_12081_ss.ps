%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[163.01094055 498.09921265]
[147.96553040 498.95501709]
[133.12841797 496.31741333]
[119.29974365 490.32870483]
[107.22528839 481.31182861]
[97.55619812 469.75302124]
[90.81391907 456.27569580]
[87.36205292 441.60665894]
[87.38674927 426.53692627]
[90.88668823 411.87927246]
[97.67311096 398.42413330]
[107.38004303 386.89709473]
[119.48399353 377.91983032]
[133.33221436 371.97650146]
[148.17788696 369.38754272]
[149.07070923 354.41415405]
[149.96351624 339.44073486]
[150.85633850 324.46734619]
[151.74916077 309.49392700]
[152.30737305 294.50433350]
[152.53070068 279.50598145]
[152.75402832 264.50765991]
[152.97735596 249.50930786]
[149.98257446 234.81130981]
[143.90873718 221.09603882]
[137.83489990 207.38076782]
[131.76107788 193.66551208]
[125.68724060 179.95024109]
[119.61340332 166.23497009]
[115.55990601 163.70945740]
[113.04988861 158.61074829]
[113.56968689 152.01974487]
[107.90689850 138.12973022]
[102.14086151 124.28223419]
[96.27190399 110.47805786]
[89.67102814 123.94759369]
[75.52434540 128.93473816]
[61.93572998 122.58261108]
[56.68935013 108.53001404]
[62.79056931 94.82691193]
[76.74433899 89.32305145]
[90.55662537 95.17063904]
[85.94261932 80.89790344]
[81.32861328 66.62516785]
[76.71459961 52.35243607]
[72.10059357 38.07970428]
[67.48657990 23.80697060]
[62.87257385 9.53423691]
[58.25856400 -4.73849630]
[44.46767044 -11.98066616]
[39.99172974 -26.52097511]
[46.98102188 -39.62385178]
[42.36701202 -53.89658737]
[37.75300217 -68.16931915]
[26.14589882 -78.92040253]
[29.59314346 -93.41059875]
[24.97913551 -107.68332672]
[20.36512566 -121.95606232]
[9.25788689 -128.51289368]
[5.70870161 -140.49568176]
[11.09727764 -151.32571411]
[6.69627953 -165.66557312]
[2.29528141 -180.00541687]
[-0.11062420 -165.19961548]
[-5.40871477 -151.16642761]
[-13.38796902 -138.46479797]
[-23.73057556 -127.60061646]
[-36.02459335 -119.00659943]
[-49.78035736 -113.02504730]
[-64.44998169 -109.89420319]
[-79.44917297 -109.73876190]
[-94.18052673 -112.56491852]
[-108.05730438 -118.26010895]
[-120.52678680 -126.59749603]
[-131.09231567 -137.24501038]
[-139.33309937 -149.77854919]
[-144.92086792 -163.69891357]
[-147.63310242 -178.45167542]
[-147.36174011 -193.44921875]
[-144.11763000 -208.09420776]
[-138.02993774 -221.80332947]
[-129.34117126 -234.03056335]
[-118.39738464 -244.28890991]
[-105.63446808 -252.16976929]
[-91.56076050 -257.35925293]
[-76.73680878 -259.65066528]
[-61.75305557 -258.95272827]
[-47.20629120 -255.29327393]
[-33.67591095 -248.81802368]
[-21.70081902 -239.78491211]
[-11.75798607 -228.55371094]
[-4.24342632 -215.57174683]
[0.54262501 -201.36015320]
[2.54663873 -216.22569275]
[4.55065250 -231.09121704]
[6.55466604 -245.95674133]
[0.73044449 -260.66690063]
[10.09875679 -272.24636841]
[12.10277081 -287.11190796]
[-1.76417446 -293.07934570]
[-13.50617313 -302.56765747]
[-22.25189018 -314.87274170]
[-27.35233688 -329.08148193]
[-28.42902565 -344.13946533]
[-25.40205956 -358.92932129]
[-18.49605942 -372.35354614]
[-8.22349453 -383.41595459]
[4.65334034 -391.29568481]
[19.17889977 -395.40792847]
[34.27529144 -395.44760132]
[48.82225800 -391.41174316]
[61.74032593 -383.59979248]
[72.07088470 -372.59152222]
[79.04733276 -359.20379639]
[82.15198517 -344.43002319]
[81.15444183 -329.36657715]
[76.12873077 -315.13125610]
[67.44779968 -302.78036499]
[55.75582886 -293.23049927]
[41.92043304 -287.19024658]
[26.96829796 -285.10787964]
[24.96428490 -270.24237061]
[30.93184662 -256.59548950]
[21.42019463 -243.95272827]
[19.41617966 -229.08720398]
[17.41216660 -214.22167969]
[15.40815353 -199.35614014]
[16.63512802 -184.40641785]
[21.03612709 -170.06655884]
[25.43712425 -155.72671509]
[38.91001892 -144.48181152]
[34.63785934 -126.57007599]
[39.25186920 -112.29734039]
[43.86587906 -98.02460480]
[55.14295578 -88.29440308]
[52.02573395 -72.78333282]
[56.63974380 -58.51059723]
[61.25375366 -44.23786163]
[74.59049225 -37.70587158]
[79.47307587 -23.29701805]
[72.53129578 -9.35250568]
[77.14530945 4.92022800]
[81.75931549 19.19296074]
[86.37332153 33.46569443]
[90.98733521 47.73843002]
[95.60134125 62.01116180]
[100.21535492 76.28389740]
[104.82936096 90.55662537]
[110.07608032 104.60910034]
[115.94503784 118.41327667]
[122.18265533 125.08635712]
[121.79692078 132.46693420]
[127.45970917 146.35696411]
[133.32867432 160.16113281]
[139.40251160 173.87640381]
[145.47633362 187.59167480]
[151.55017090 201.30694580]
[157.62400818 215.02220154]
[163.69784546 228.73747253]
[164.32731628 213.75068665]
[167.92028809 199.18736267]
[174.33364868 185.62753296]
[183.31198120 173.61131287]
[194.49765015 163.61727905]
[207.44514465 156.04348755]
[221.63879395 151.19161987]
[236.51322937 149.25491333]
[251.47604370 150.31050110]
[265.93127441 154.31634521]
[279.30313110 161.11289978]
[291.05905151 170.42945862]
[300.73080444 181.89492798]
[307.93316650 195.05265808]
[312.37927246 209.37860107]
[313.89202881 224.30212402]
[312.41116333 239.22883606]
[307.99569702 253.56423950]
[300.82144165 266.73733521]
[291.17422485 278.22344971]
[279.43823242 287.56509399]
[266.08090210 294.39019775]
[251.63427734 298.42691040]
[236.67375183 299.51446533]
[221.79521179 297.60955811]
[207.59123230 292.78802490]
[194.62757874 285.24191284]
[183.42057800 275.27182007]
[174.41661072 263.27478027]
[167.97569275 249.73263550]
[167.75236511 264.73098755]
[167.52903748 279.72930908]
[167.30570984 294.72766113]
[169.84959412 299.28570557]
[170.34152222 303.90209961]
[169.10287476 307.78552246]
[166.72256470 310.38674927]
[165.82974243 325.36016846]
[164.93693542 340.33355713]
[164.04411316 355.30697632]
[163.15129089 370.28036499]
[177.58413696 374.61508179]
[190.62799072 382.16192627]
[201.57939148 392.51388550]
[209.84777832 405.11273193]
[214.98722839 419.27899170]
[216.72058105 434.24868774]
[214.95436096 449.21456909]
[209.78379822 463.36950684]
[201.48777771 475.95013428]
[190.51365662 486.27804565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 200]
[16 199]
[17 198]
[18 197]
[19 196]
[20 192]
[21 191]
[22 190]
[23 189]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[32 153]
[33 152]
[34 150]
[35 149]
[42 148]
[43 147]
[44 146]
[45 145]
[46 144]
[47 143]
[48 142]
[49 141]
[52 138]
[53 137]
[54 136]
[56 134]
[57 133]
[58 132]
[61 130]
[62 129]
[63 128]
[93 127]
[94 126]
[95 125]
[96 124]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
