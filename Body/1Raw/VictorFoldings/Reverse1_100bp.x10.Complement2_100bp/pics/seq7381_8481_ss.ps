%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[120.89883423 433.92694092]
[128.48028564 420.63107300]
[141.37847900 412.39120483]
[140.04023743 397.45101929]
[138.59082031 382.52120972]
[137.03030396 367.60260010]
[125.33398438 358.45208740]
[123.53887177 343.34472656]
[133.21607971 331.13861084]
[131.65554810 316.22000122]
[130.09503174 301.30139160]
[128.42349243 286.39483643]
[126.64102173 271.50109863]
[124.85855865 256.60739136]
[123.07608795 241.71366882]
[121.29362488 226.81994629]
[107.64068604 216.99977112]
[105.26776123 200.00906372]
[116.12693787 186.29418945]
[114.12292480 171.42866516]
[112.11891174 156.56314087]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[65.43814850 53.37312698]
[68.01681519 38.70344162]
[62.56145477 24.73064232]
[57.10609818 10.75784397]
[51.65074158 -3.21495366]
[50.26845932 11.72122002]
[45.11739349 25.80903435]
[36.53919601 38.11409760]
[25.10282516 47.82025146]
[11.56682014 54.28372955]
[-3.17102790 57.07583237]
[-18.13321114 56.01136398]
[-32.32733917 51.16093063]
[-44.81196976 42.84624481]
[-54.75904083 31.61878777]
[-61.50879669 18.22323608]
[-64.61355591 3.54807091]
[-63.86738205 -11.43335819]
[-59.31977463 -25.72738647]
[-51.27235794 -38.38594437]
[-40.25888443 -48.56943130]
[-27.00984192 -55.60241699]
[-12.40399170 -59.01842880]
[2.58991456 -58.59088898]
[16.97738266 -54.34816360]
[29.80414581 -46.57165146]
[40.21945190 -35.77714157]
[47.53438950 -22.67582893]
[46.86460495 -37.66086578]
[46.19482040 -52.64590454]
[45.52503586 -67.63094330]
[44.85524750 -82.61598206]
[44.18546295 -97.60102081]
[40.67598724 -106.03437042]
[43.61894226 -112.81381226]
[35.53361511 -100.17943573]
[22.54888916 -92.66964722]
[7.56558323 -91.96215820]
[-6.06899357 -98.21502686]
[-15.30884171 -110.03133392]
[-18.08975601 -124.77130127]
[-13.79047203 -139.14196777]
[-3.37146163 -149.93290710]
[10.83964157 -154.73336792]
[25.66804123 -152.47094727]
[37.80103302 -143.65106201]
[44.52808380 -130.24406433]
[46.53210068 -145.10958862]
[48.53611374 -159.97512817]
[50.54012680 -174.84065247]
[52.54413986 -189.70617676]
[43.23464966 -202.19502258]
[45.47877121 -217.24223328]
[57.44234085 -226.04045105]
[57.21901321 -241.03878784]
[54.77328873 -255.83805847]
[52.32756042 -270.63732910]
[49.88183212 -285.43658447]
[34.84221649 -286.22653198]
[20.32415390 -290.23153687]
[7.00667906 -297.26422119]
[-4.48732328 -306.99572754]
[-13.62025833 -318.97085571]
[-19.96496391 -332.62951660]
[-23.22468376 -347.33285522]
[-23.24695587 -362.39318848]
[-20.03074074 -377.10610962]
[-13.72646332 -390.78344727]
[-4.62898874 -402.78555298]
[6.83617926 -412.55099487]
[20.13279343 -419.62304688]
[34.63894653 -423.67095947]
[49.67616272 -424.50540161]
[64.54111481 -422.08731079]
[78.53855896 -416.52981567]
[91.01378632 -408.09283447]
[101.38333130 -397.17098999]
[109.16217804 -384.27511597]
[113.98649597 -370.00836182]
[115.63064575 -355.03802490]
[114.01773071 -340.06430054]
[109.22318268 -325.78753662]
[101.47126007 -312.87545776]
[91.12452698 -301.93200684]
[78.66691589 -293.46902466]
[64.68110657 -287.88232422]
[67.12683105 -273.08303833]
[69.57255554 -258.28378296]
[72.01828766 -243.48451233]
[76.58106995 -257.77371216]
[84.93698883 -270.23077393]
[96.42704010 -279.87332153]
[110.14508820 -285.94088745]
[125.00925446 -287.95495605]
[139.84730530 -285.75668335]
[153.48902893 -279.51943970]
[164.85861206 -269.73510742]
[173.05937195 -257.17535400]
[177.44458008 -242.83067322]
[177.66839600 -227.83235168]
[173.71316528 -213.36320496]
[165.89082336 -200.56434631]
[154.81825256 -190.44512939]
[141.36871338 -183.80361938]
[126.60286713 -181.16357422]
[111.68521881 -182.73321533]
[97.79223633 -188.38874817]
[86.01957703 -197.68414307]
[77.29567719 -209.88635254]
[72.30786896 -224.03643799]
[81.51454163 -212.38427734]
[79.69394684 -197.27996826]
[67.40966797 -187.70216370]
[65.40565491 -172.83663940]
[63.40164185 -157.97111511]
[61.39762878 -143.10557556]
[59.39361572 -128.24005127]
[58.61229324 -113.26041412]
[59.17050171 -98.27080536]
[59.84028625 -83.28576660]
[60.51007462 -68.30072784]
[61.17985916 -53.31568909]
[61.84964371 -38.33065033]
[62.51942825 -23.34561348]
[65.62353516 -8.67031097]
[71.07889557 5.30248690]
[76.53425598 19.27528572]
[81.98960876 33.24808121]
[93.82584381 42.28980637]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[124.32217407 121.71787262]
[131.21282959 108.39425659]
[142.19786072 98.18009949]
[155.98678589 92.27536774]
[170.95965576 91.37372589]
[185.35749817 95.58111572]
[197.48886108 104.40324402]
[205.92857361 116.80370331]
[209.68513489 131.32569885]
[208.31723022 146.26318359]
[201.98556519 159.86135864]
[191.43397522 170.52267456]
[177.90203857 176.99468994]
[162.97949219 178.51705933]
[148.41941833 174.91093445]
[135.93231201 166.59997559]
[126.98444366 154.55912781]
[128.98844910 169.42465210]
[130.99246216 184.29017639]
[142.57238770 191.16912842]
[147.99693298 203.28460693]
[145.49021912 216.12200928]
[136.18734741 225.03749084]
[137.96980286 239.93119812]
[139.75227356 254.82492065]
[141.53474426 269.71862793]
[143.31719971 284.61236572]
[147.44419861 292.76132202]
[145.01362610 299.74087524]
[146.57415771 314.65948486]
[148.13467407 329.57809448]
[160.12834167 339.51739502]
[161.49841309 354.66918945]
[151.94889832 366.04208374]
[153.50942993 380.96069336]
[157.51464844 389.17019653]
[154.98042297 396.11279297]
[156.31866455 411.05294800]
[170.47590637 416.86938477]
[180.29960632 428.60623169]
[183.53234863 443.56646729]
[179.43125916 458.31228638]
[168.93875122 469.45526123]
[154.46592712 474.43481445]
[139.33851624 472.10662842]
[127.03271484 463.00576782]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 199]
[6 198]
[9 195]
[10 194]
[11 193]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[19 183]
[20 182]
[21 181]
[22 164]
[23 163]
[24 162]
[26 160]
[27 159]
[28 158]
[30 156]
[31 155]
[32 154]
[33 153]
[56 152]
[57 151]
[58 150]
[59 149]
[60 148]
[61 147]
[63 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[82 138]
[83 117]
[84 116]
[85 115]
[86 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
