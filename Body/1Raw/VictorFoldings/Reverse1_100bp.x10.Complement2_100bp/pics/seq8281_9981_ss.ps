%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[23.33523750 245.68606567]
[28.46122742 259.79885864]
[32.03128052 274.38317871]
[34.00353241 289.26797485]
[34.35486984 304.27877808]
[33.08116531 319.23956299]
[30.19735718 333.97491455]
[25.73725319 348.31210327]
[19.75314713 362.08300781]
[12.31519985 375.12615967]
[3.51061702 387.28866577]
[-6.55737162 398.42791748]
[-17.77072525 408.41329956]
[-29.99797058 417.12774658]
[-43.09575272 424.46911621]
[-56.91050339 430.35125732]
[-71.28025055 434.70529175]
[-86.03652954 437.48010254]
[-101.00630951 438.64321899]
[-116.01409149 438.18093872]
[-130.88391113 436.09875488]
[-145.44143677 432.42098999]
[-159.51597595 427.19085693]
[-172.94252014 420.46960449]
[-185.56365967 412.33605957]
[-197.23138428 402.88562012]
[-207.80892944 392.22903442]
[-217.17227173 380.49127197]
[-225.21162415 367.80993652]
[-231.83273315 354.33370972]
[-236.95796204 340.22064209]
[-240.52722168 325.63613892]
[-242.49867249 310.75122070]
[-242.84921265 295.74041748]
[-241.57469177 280.77969360]
[-238.69009399 266.04449463]
[-234.22921753 251.70756531]
[-228.24436951 237.93698120]
[-220.80572510 224.89421082]
[-212.00048828 212.73217773]
[-201.93190002 201.59347534]
[-190.71801758 191.60868835]
[-178.49029541 182.89489746]
[-165.39212036 175.55426025]
[-151.57705688 169.67283630]
[-137.20706177 165.31958008]
[-122.45064545 162.54554749]
[-107.48079681 161.38325500]
[-92.47303772 161.84632874]
[-77.60332489 163.92933655]
[-63.04600525 167.60786438]
[-48.97174454 172.83877563]
[-35.54555893 179.56074524]
[-22.92486954 187.69496155]
[-11.25764275 197.14604187]
[-0.61163372 186.57899475]
[10.03437519 176.01194763]
[20.68038368 165.44490051]
[31.32639313 154.87785339]
[41.97240067 144.31080627]
[42.88566971 139.62304688]
[46.75345230 135.45924377]
[53.09621429 133.59353638]
[64.05212402 123.34813690]
[75.00803375 113.10274506]
[85.96394348 102.85735321]
[90.21636963 89.53787994]
[103.79066467 86.18673706]
[114.74657440 75.94134521]
[119.54135895 60.86418915]
[134.12205505 57.82240677]
[145.07797241 47.57701492]
[156.03387451 37.33162308]
[166.98979187 27.08623314]
[177.94569397 16.84084129]
[176.02355957 5.10874987]
[179.96307373 -5.98093605]
[188.67655945 -13.71197701]
[199.92256165 -16.25028038]
[210.88174438 -13.07808399]
[222.13783264 -22.99273491]
[233.39393616 -32.90738678]
[244.65002441 -42.82203674]
[235.43704224 -54.66525269]
[226.96319580 -67.04810333]
[219.26004028 -79.92451477]
[212.35620117 -93.24659729]
[206.27737427 -106.96478271]
[201.04615784 -121.02805328]
[196.68205261 -135.38406372]
[193.20124817 -149.97944641]
[190.61671448 -164.75987244]
[188.93807983 -179.67036438]
[188.17155457 -194.65547180]
[188.32002258 -209.65943909]
[189.38291931 -224.62643433]
[191.35627747 -239.50079346]
[194.23277283 -254.22718811]
[198.00170898 -268.75082397]
[202.64904785 -283.01766968]
[208.15750122 -296.97467041]
[214.50659180 -310.56988525]
[221.67269897 -323.75274658]
[229.62916565 -336.47421265]
[238.34637451 -348.68695068]
[247.79190063 -360.34555054]
[257.93063354 -371.40661621]
[268.72482300 -381.82901001]
[280.13433838 -391.57394409]
[292.11669922 -400.60519409]
[304.62738037 -408.88916016]
[317.61981201 -416.39498901]
[331.04565430 -423.09481812]
[344.85498047 -428.96368408]
[358.99639893 -433.97973633]
[373.41732788 -438.12435913]
[388.06408691 -441.38208008]
[402.88223267 -443.74084473]
[417.81661987 -445.19183350]
[432.81164551 -445.72967529]
[447.81161499 -445.35235596]
[462.76065063 -444.06127930]
[477.60317993 -441.86123657]
[492.28399658 -438.76040649]
[506.74844360 -434.77038574]
[520.94274902 -429.90594482]
[534.81408691 -424.18521118]
[548.31085205 -417.62945557]
[561.38287354 -410.26309204]
[573.98150635 -402.11349487]
[586.05981445 -393.21099854]
[597.57293701 -383.58871460]
[608.47808838 -373.28244019]
[618.73461914 -362.33050537]
[628.30438232 -350.77368164]
[637.15179443 -338.65493774]
[645.24389648 -326.01934814]
[652.55072021 -312.91394043]
[659.04492188 -299.38745117]
[664.70245361 -285.49020386]
[669.50219727 -271.27389526]
[673.42633057 -256.79141235]
[676.46026611 -242.09666443]
[678.59271240 -227.24426270]
[679.81573486 -212.28950500]
[680.12475586 -197.28799438]
[679.51861572 -182.29553223]
[677.99963379 -167.36793518]
[675.57348633 -152.56068420]
[672.24908447 -137.92889404]
[668.03881836 -123.52699280]
[662.95843506 -109.40855408]
[657.02679443 -95.62609100]
[650.26586914 -82.23088837]
[642.70098877 -69.27277374]
[634.36016846 -56.79994583]
[625.27441406 -44.85881424]
[615.47766113 -33.49379349]
[605.00622559 -22.74716759]
[593.89910889 -12.65891075]
[582.19763184 -3.26655507]
[569.94531250 5.39495945]
[557.18774414 13.29341221]
[543.97241211 20.39941978]
[530.34838867 26.68654633]
[516.36651611 32.13140488]
[502.07861328 36.71373749]
[487.53796387 40.41650009]
[472.79864502 43.22591782]
[457.91543579 45.13153839]
[442.94375610 46.12627411]
[427.93927002 46.20642090]
[412.95782471 45.37168503]
[398.05511475 43.62516785]
[383.28662109 40.97336960]
[368.70724487 37.42615509]
[354.37124634 32.99671936]
[340.33193970 27.70153809]
[326.64157104 21.56031418]
[313.35104370 14.59589005]
[300.50985718 6.83417606]
[288.16571045 -1.69595468]
[276.36456299 -10.96276855]
[265.15032959 -20.93179321]
[254.56468201 -31.56594086]
[243.30857849 -21.65129089]
[232.05249023 -11.73663902]
[220.79638672 -1.82198799]
[220.74055481 16.48409271]
[207.08749390 29.15323257]
[188.19108582 27.79675102]
[177.23518372 38.04214096]
[166.27926636 48.28753281]
[155.32336426 58.53292465]
[144.36744690 68.77832031]
[140.35630798 83.12265015]
[124.99196625 86.89725494]
[114.03605652 97.14264679]
[109.78363037 110.46212006]
[96.20933533 113.81326294]
[85.25342560 124.05865479]
[74.29751587 134.30404663]
[63.34160614 144.54943848]
[52.53944778 154.95681763]
[41.89344025 165.52386475]
[31.24743080 176.09091187]
[20.60142326 186.65795898]
[9.95541382 197.22500610]
[-0.69059473 207.79205322]
[8.67337418 219.52931213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 209]
[56 208]
[57 207]
[58 206]
[59 205]
[60 204]
[63 203]
[64 202]
[65 201]
[66 200]
[68 198]
[69 197]
[71 195]
[72 194]
[73 193]
[74 192]
[75 191]
[80 188]
[81 187]
[82 186]
[83 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
