%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[76.18856049 625.01123047]
[63.82108307 616.29913330]
[54.75272751 604.19042969]
[49.87191391 589.87145996]
[49.65681839 574.74505615]
[54.12850952 560.29309082]
[62.84889984 547.93145752]
[74.96365356 538.87121582]
[89.28588867 534.00000000]
[89.06256104 519.00164795]
[88.83923340 504.00332642]
[88.61590576 489.00497437]
[88.39257812 474.00665283]
[88.16925049 459.00830078]
[87.94592285 444.00997925]
[74.71449280 439.33358765]
[63.85092545 430.40264893]
[56.67310715 418.27423096]
[54.06079102 404.39483643]
[56.34780502 390.42785645]
[63.27955627 378.05432129]
[74.04118347 368.77056885]
[87.35331726 363.70712280]
[87.35331726 348.70712280]
[87.35331726 333.70712280]
[87.35331726 318.70712280]
[87.35331726 303.70712280]
[87.35331726 288.70712280]
[79.50728607 282.16091919]
[76.49642944 272.16677856]
[79.54608154 261.95501709]
[87.88070679 254.96624756]
[88.32730865 239.97290039]
[88.77391815 224.97955322]
[81.41898346 212.02755737]
[89.56373596 198.46386719]
[82.20880127 185.51187134]
[90.35356140 171.94818115]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[85.99028778 58.56083679]
[94.10309601 46.06957245]
[94.54969788 31.07622337]
[94.99630737 16.08287430]
[95.44291687 1.08952439]
[82.48459625 -7.03631258]
[75.38033295 -20.46859550]
[75.94953918 -35.55310440]
[83.93928528 -48.24246597]
[97.11907196 -55.18212509]
[97.56568146 -70.17547607]
[96.78435516 -85.15511322]
[94.78034210 -100.02063751]
[92.77632904 -114.88616943]
[83.26467896 -127.52891541]
[89.23223877 -141.17579651]
[87.22822571 -156.04132080]
[85.22421265 -170.90686035]
[83.22019958 -185.77238464]
[81.10557556 -200.62258911]
[78.88045502 -215.45661926]
[63.89651108 -214.56913757]
[48.89333344 -215.02838135]
[33.99172211 -216.83065796]
[19.31165886 -219.96147156]
[4.97134018 -224.39559937]
[-8.91377163 -230.09733582]
[-22.23188019 -237.02079773]
[-34.87575150 -245.11021423]
[-46.74358368 -254.30047607]
[-57.73982620 -264.51757812]
[-67.77593231 -275.67922974]
[-76.77111053 -287.69558716]
[-84.65291595 -300.46990967]
[-91.35791016 -313.89935303]
[-96.83208466 -327.87573242]
[-101.03137970 -342.28656006]
[-103.92198181 -357.01580811]
[-105.48061371 -371.94488525]
[-105.69472504 -386.95355225]
[-104.56259155 -401.92098999]
[-102.09333801 -416.72671509]
[-98.30683136 -431.25146484]
[-93.23357391 -445.37832642]
[-86.91439819 -458.99356079]
[-79.40019226 -471.98751831]
[-70.75146484 -484.25558472]
[-61.03783417 -495.69900513]
[-50.33752060 -506.22561646]
[-38.73667908 -515.75067139]
[-26.32871056 -524.19750977]
[-13.21352005 -531.49804688]
[0.50329345 -537.59356689]
[14.71128845 -542.43493652]
[29.29607010 -545.98321533]
[44.14020538 -548.20983887]
[59.12417603 -549.09692383]
[74.12734222 -548.63720703]
[89.02890015 -546.83447266]
[103.70886230 -543.70318604]
[118.04904938 -539.26861572]
[131.93399048 -533.56646729]
[145.25187683 -526.64263916]
[157.89550781 -518.55279541]
[169.76306152 -509.36218262]
[180.75898743 -499.14474487]
[190.79475403 -487.98278809]
[199.78956604 -475.96615601]
[207.67098999 -463.19158936]
[214.37556458 -449.76196289]
[219.84931946 -435.78540039]
[224.04817200 -421.37442017]
[226.93832397 -406.64511108]
[228.49649048 -391.71597290]
[228.71014404 -376.70730591]
[227.57756042 -361.73989868]
[225.10784912 -346.93426514]
[221.32090759 -332.40960693]
[216.24720764 -318.28289795]
[209.92762756 -304.66787720]
[202.41302490 -291.67413330]
[193.76391602 -279.40634155]
[184.04994202 -267.96322632]
[173.34930420 -257.43692017]
[161.74816895 -247.91223145]
[149.33995056 -239.46580505]
[136.22453308 -232.16564941]
[122.50753021 -226.07055664]
[108.29939270 -221.22959900]
[93.71450043 -217.68174744]
[95.93962097 -202.84770203]
[100.04056549 -196.69920349]
[98.08572388 -187.77639771]
[100.08973694 -172.91087341]
[102.09375000 -158.04534912]
[104.09777069 -143.17980957]
[113.46607971 -131.60034180]
[107.64186096 -116.89018250]
[109.64587402 -102.02465057]
[111.64988708 -87.15912628]
[118.37692261 -100.56610107]
[130.50990295 -109.38600159]
[145.33830261 -111.64843750]
[159.54940796 -106.84796906]
[169.96842957 -96.05704498]
[174.26773071 -81.68637848]
[171.48681641 -66.94641113]
[162.24697876 -55.13009644]
[148.61241150 -48.87722397]
[133.62910461 -49.58469772]
[120.64437103 -57.09447479]
[112.55902863 -69.72886658]
[112.11242676 -54.73551941]
[124.85578156 -47.02368927]
[132.07608032 -33.88126755]
[131.74644470 -18.78962326]
[123.85526276 -5.80400705]
[110.43626404 1.53613031]
[109.98965454 16.52947998]
[109.54305267 31.52283096]
[109.09644318 46.51618195]
[116.45137787 59.46817780]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[105.34690857 172.39479065]
[112.66989136 186.41921997]
[104.55708313 198.91047668]
[111.88007355 212.93489075]
[103.76726532 225.42616272]
[103.32066345 240.41950989]
[102.87405396 255.41285706]
[113.22041321 272.71359253]
[102.35331726 288.70712280]
[102.35331726 303.70712280]
[102.35331726 318.70712280]
[102.35331726 333.70712280]
[102.35331726 348.70712280]
[102.35331726 363.70712280]
[117.24691010 369.76428223]
[128.64839172 381.04598999]
[134.83271790 395.80368042]
[134.88018799 411.76620483]
[128.81312561 426.48916626]
[117.58788300 437.72940063]
[102.94425964 443.78665161]
[103.16758728 458.78497314]
[103.39091492 473.78332520]
[103.61424255 488.78164673]
[103.83757019 503.77999878]
[104.06089783 518.77832031]
[104.28422546 533.77667236]
[118.74514771 538.21929932]
[131.12428284 546.91479492]
[140.20886230 559.01135254]
[145.10885620 573.32373047]
[145.34422302 588.44989014]
[140.89190674 602.90783691]
[132.18809509 615.28112793]
[120.08548737 624.35760498]
[105.76979828 629.24798584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[23 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[32 181]
[33 180]
[34 179]
[36 177]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[44 169]
[45 168]
[47 166]
[48 165]
[49 164]
[50 163]
[55 158]
[56 157]
[57 145]
[58 144]
[59 143]
[61 141]
[62 140]
[63 139]
[64 138]
[65 136]
[66 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
