%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[64.22531128 568.88214111]
[55.53117371 581.16619873]
[44.60737610 591.51788330]
[31.87380600 599.53924561]
[17.81990814 604.92199707]
[2.98587370 607.45922852]
[-12.05811405 607.05346680]
[-26.73380661 603.72027588]
[-40.47710419 597.58770752]
[-52.75975800 588.89160156]
[-63.10965347 577.96612549]
[-71.12896729 565.23126221]
[-76.50945282 551.17651367]
[-79.04431152 536.34204102]
[-78.63609314 521.29809570]
[-75.30050659 506.62298584]
[-69.16574860 492.88067627]
[-60.46763611 480.59942627]
[-49.54048920 470.25128174]
[-36.80432129 462.23403931]
[-22.74868202 456.85583496]
[-7.91382694 454.32336426]
[7.13002872 454.73400879]
[10.45228863 440.10656738]
[13.77454758 425.47909546]
[17.09680748 410.85165405]
[12.37055683 396.72677612]
[22.97221184 384.98303223]
[26.29446983 370.35556030]
[29.61672974 355.72811890]
[32.93898773 341.10064697]
[21.62691116 350.95138550]
[6.92426205 353.92327881]
[-7.32572079 349.23947144]
[-17.39812469 338.12429810]
[-20.66004944 323.48327637]
[-16.25883484 309.14349365]
[-5.34494781 298.85336304]
[9.22874832 295.30267334]
[23.65272331 299.41958618]
[34.15658569 310.12792969]
[37.99465179 324.62771606]
[43.45000839 310.65490723]
[48.90536499 296.68209839]
[54.36072159 282.70932007]
[58.86835098 268.40261841]
[62.40802383 253.82624817]
[65.94769287 239.24987793]
[60.10715485 222.70130920]
[72.92780304 209.48342896]
[76.25006104 194.85597229]
[79.57232666 180.22850037]
[82.89458466 165.60104370]
[86.21684265 150.97358704]
[89.53910065 136.34613037]
[91.54311371 121.48059845]
[92.21289825 106.49555969]
[89.39816284 98.94242859]
[93.00585938 91.29289246]
[93.89867401 76.31948853]
[94.79148865 61.34608078]
[95.68430328 46.37267303]
[96.46562958 31.39303589]
[97.13541412 16.40799713]
[97.80519867 1.42295837]
[87.41863251 -10.18552971]
[88.31135559 -25.37294769]
[99.44228363 -35.20341110]
[100.11206818 -50.18844986]
[100.78185272 -65.17349243]
[90.39528656 -76.78197479]
[91.28800964 -91.96939850]
[102.41893768 -101.79986572]
[103.08872223 -116.78490448]
[103.64693451 -131.77450562]
[104.09354401 -146.76786804]
[101.61779785 -151.36326599]
[101.19465637 -155.98649597]
[102.49098206 -159.85102844]
[104.90975952 -162.41653442]
[106.02540588 -177.37500000]
[107.02967072 -192.34133911]
[107.92248535 -207.31474304]
[108.81529999 -222.28814697]
[109.70811462 -237.26155090]
[110.60092926 -252.23495483]
[111.49374390 -267.20837402]
[96.79228973 -270.32681274]
[82.71984863 -275.60168457]
[69.59081268 -282.91510010]
[57.69848633 -292.10366821]
[47.30854797 -302.96218872]
[38.65311813 -315.24798584]
[31.92555618 -328.68664551]
[27.27616310 -342.97793579]
[24.80880356 -357.80255127]
[24.57860374 -372.82937622]
[26.59070206 -387.72262573]
[30.80014992 -402.14962769]
[37.11290741 -415.78805542]
[45.38794327 -428.33322144]
[55.44039154 -439.50488281]
[67.04567719 -449.05343628]
[79.94453430 -456.76559448]
[93.84879303 -462.46902466]
[108.44783020 -466.03634644]
[123.41549683 -467.38784790]
[138.41741943 -466.49331665]
[153.11842346 -463.37277222]
[167.19012451 -458.09591675]
[180.31811523 -450.78063965]
[192.20913696 -441.59036255]
[202.59751892 -430.73037720]
[211.25120544 -418.44332886]
[217.97685242 -405.00372314]
[222.62420654 -390.71176147]
[225.08944702 -375.88677979]
[225.31752014 -360.85995483]
[223.30329895 -345.96697998]
[219.09179688 -331.54058838]
[212.77708435 -317.90304565]
[204.50027466 -305.35906982]
[194.44622803 -294.18884277]
[182.83958435 -284.64190674]
[169.93963623 -276.93161011]
[156.03456116 -271.23016357]
[141.43501282 -267.66491699]
[126.46715546 -266.31555176]
[125.57434082 -251.34214783]
[124.68151855 -236.36874390]
[123.78870392 -221.39533997]
[122.89588928 -206.42192078]
[122.00307465 -191.44851685]
[124.74287415 -184.58447266]
[120.98386383 -176.25933838]
[119.86820984 -161.30088806]
[119.08689117 -146.32125854]
[118.64028168 -131.32791138]
[121.58324432 -124.54846191]
[118.07376099 -116.11511230]
[117.40397644 -101.13007355]
[127.61348724 -90.34575653]
[127.14769745 -75.13925934]
[115.76689148 -64.50370789]
[115.09710693 -49.51866531]
[114.42732239 -34.53362656]
[124.63683319 -23.74931145]
[124.17104340 -8.54280949]
[112.79023743 2.09274364]
[112.12045288 17.07778168]
[111.45066833 32.06282043]
[114.29235840 38.88532639]
[110.65770721 47.26548767]
[109.76489258 62.23889542]
[108.87207794 77.21230316]
[107.97926331 92.18570709]
[107.19793701 107.16534424]
[106.52815247 122.15038300]
[115.21201324 109.91966248]
[128.30053711 102.59228516]
[143.26655579 101.58306885]
[157.22033691 107.08686066]
[167.46765137 118.04097748]
[172.02989197 132.33035278]
[170.02615356 147.19590759]
[161.84333801 159.76736450]
[149.06141663 167.61737061]
[134.14837646 169.23019409]
[119.98368835 164.29443359]
[109.30233765 153.76310730]
[104.16656494 139.66838074]
[100.84429932 154.29585266]
[97.52204132 168.92330933]
[94.19978333 183.55076599]
[90.87752533 198.17822266]
[87.55526733 212.80567932]
[93.75614929 224.11549377]
[90.68789673 236.23034668]
[80.52407074 242.78955078]
[76.98439789 257.36593628]
[73.44472504 271.94229126]
[85.27215576 262.71670532]
[100.19969177 261.24401855]
[113.60186768 267.98062134]
[121.32587433 280.83905029]
[120.97834778 295.83502197]
[112.66696930 308.32186890]
[98.96711731 314.43038940]
[84.12382507 312.26779175]
[72.73646545 302.50418091]
[68.33351898 288.16467285]
[62.87816238 302.13748169]
[57.42280579 316.11026001]
[51.96744919 330.08306885]
[47.56644821 344.42291260]
[44.24419022 359.05038452]
[40.92193222 373.67782593]
[37.59967041 388.30529785]
[42.08829117 403.47640991]
[31.72426796 414.17388916]
[28.40200806 428.80136108]
[25.07974815 443.42883301]
[21.75748825 458.05627441]
[35.50277328 464.18435669]
[47.78824234 472.87652588]
[58.14167023 483.79864502]
[66.16510773 496.53091431]
[71.55014038 510.58392334]
[74.08979797 525.41754150]
[73.68646240 540.46160889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 203]
[24 202]
[25 201]
[26 200]
[28 198]
[29 197]
[30 196]
[31 195]
[42 194]
[43 193]
[44 192]
[45 191]
[46 181]
[47 180]
[48 179]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[55 171]
[56 158]
[57 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 151]
[64 150]
[65 149]
[68 146]
[69 145]
[70 144]
[73 141]
[74 140]
[75 138]
[76 137]
[80 136]
[81 135]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
