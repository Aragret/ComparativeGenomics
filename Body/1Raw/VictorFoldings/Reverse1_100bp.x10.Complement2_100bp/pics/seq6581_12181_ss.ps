%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[69.02967834 536.43591309]
[66.36388397 521.67468262]
[63.69808578 506.91348267]
[61.03229141 492.15225220]
[58.36649323 477.39102173]
[51.28772354 490.61566162]
[38.23503494 498.00668335]
[23.25294304 497.27392578]
[10.98381424 488.64440918]
[5.22937202 474.79211426]
[7.77269220 460.00930786]
[17.82569885 448.87658691]
[32.27335739 444.84359741]
[46.63890839 449.15994263]
[56.47113037 460.48843384]
[55.80134583 445.50341797]
[55.13156128 430.51837158]
[54.46177673 415.53332520]
[45.10074997 427.25387573]
[30.66938400 431.34481812]
[16.55022049 426.28030396]
[8.00935936 413.94927979]
[8.23233032 398.95095825]
[17.13597107 386.87927246]
[31.39944267 382.23672485]
[45.70282364 386.75482178]
[54.71168900 398.74957275]
[55.82733917 383.79110718]
[56.94298553 368.83264160]
[58.05863571 353.87420654]
[59.17428589 338.91574097]
[49.29039001 327.83224487]
[50.20872498 312.64633179]
[61.90114975 302.35437012]
[63.01679611 287.39590454]
[55.36336899 278.02832031]
[56.17041397 265.55706787]
[65.54956055 256.70300293]
[58.97858429 243.33618164]
[67.91622162 230.28132629]
[69.25445557 215.34114075]
[66.72023773 208.39855957]
[70.72545624 200.18904114]
[72.28598022 185.27044678]
[62.22462463 196.39559937]
[47.97930527 201.09356689]
[33.27370834 198.13629150]
[21.95184708 188.29679871]
[16.97322464 174.14712524]
[19.63924408 159.38595581]
[29.25301170 147.87181091]
[43.30151367 142.61447144]
[58.11250305 144.98818970]
[69.81442261 154.37248230]
[75.34832001 168.31344604]
[79.10462189 153.79138184]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[94.57562256 77.29355621]
[99.29397583 71.60506439]
[85.85327911 78.26446533]
[71.59687805 73.60023499]
[64.69149017 60.28424072]
[69.09283447 45.94449997]
[82.27961731 38.79546356]
[96.69785309 42.93242264]
[104.08800507 55.98460007]
[109.12491608 41.85557175]
[106.47090149 26.25855827]
[118.03268433 16.86843491]
[123.06960297 2.73940468]
[118.25660706 -9.22712708]
[122.74274445 -20.89153290]
[133.61399841 -26.19648361]
[138.86071777 -40.24895477]
[144.10742188 -54.30142593]
[137.79522705 -68.54199982]
[143.31632996 -82.71846008]
[156.93144226 -88.64842224]
[162.17816162 -102.70088959]
[167.42486572 -116.75336456]
[171.07296753 -131.30297852]
[173.07698059 -146.16850281]
[175.08099365 -161.03404236]
[177.08500671 -175.89956665]
[175.10078430 -180.72760010]
[175.16090393 -185.36976624]
[176.85224915 -189.07846069]
[179.52479553 -191.37841797]
[182.19059753 -206.13963318]
[184.85638428 -220.90084839]
[187.30212402 -235.70011902]
[189.52723694 -250.53416443]
[191.75234985 -265.36819458]
[193.97746277 -280.20223999]
[196.20259094 -295.03628540]
[198.42770386 -309.87033081]
[184.71990967 -316.21646118]
[173.35620117 -326.16848755]
[165.25778198 -338.91964722]
[161.08114624 -353.43627930]
[161.16487122 -368.54156494]
[165.50218201 -383.01098633]
[173.74147034 -395.67160034]
[185.21479797 -405.49703979]
[198.99209595 -411.69079590]
[213.95649719 -413.75079346]
[228.89489746 -411.51000977]
[242.59629822 -405.15014648]
[253.94999695 -395.18670654]
[262.03561401 -382.42739868]
[266.19766235 -367.90658569]
[266.09875488 -352.80139160]
[261.74691772 -338.33633423]
[253.49491882 -325.68402100]
[242.01171875 -315.87011719]
[228.22821045 -309.69018555]
[213.26174927 -307.64523315]
[211.03663635 -292.81118774]
[208.81150818 -277.97714233]
[206.58639526 -263.14309692]
[204.36128235 -248.30905151]
[202.13615417 -233.47500610]
[204.20411682 -229.17005920]
[203.58969116 -223.52032471]
[199.61761475 -218.23506165]
[196.95181274 -203.47383118]
[194.28601074 -188.71261597]
[191.95053101 -173.89555359]
[189.94651794 -159.03002930]
[187.94250488 -144.16448975]
[185.93849182 -129.29896545]
[195.03634644 -141.22494507]
[207.78977966 -149.12113953]
[222.52087402 -151.94863892]
[237.29150391 -149.33546448]
[250.15832520 -141.62541199]
[259.42849731 -129.83287048]
[263.88235474 -115.50934601]
[262.93392944 -100.53936005]
[256.70797729 -86.89246368]
[246.02368164 -76.36414337]
[232.28669739 -70.33957672]
[217.30438232 -69.61139679]
[203.04791260 -74.27541351]
[191.39297485 -83.71799469]
[183.87297058 -96.69680786]
[181.47734070 -111.50664520]
[176.23062134 -97.45417023]
[170.98390198 -83.40170288]
[177.38114929 -69.99980164]
[172.26042175 -55.67385864]
[158.15989685 -49.05470657]
[152.91317749 -35.00223541]
[147.66645813 -20.94976425]
[151.49913025 -3.82441664]
[137.19863892 7.77632093]
[132.16171265 21.90534973]
[135.17601013 36.49176025]
[123.25395203 46.89248657]
[118.21703339 61.02151489]
[113.81603241 75.36136627]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[98.34503174 151.85919189]
[93.62667847 157.54768372]
[89.87037659 172.06974792]
[87.20458221 186.83096313]
[85.64405823 201.74957275]
[84.19464111 216.67938232]
[82.85640717 231.61956787]
[89.33166504 246.05499268]
[80.48974609 258.04122925]
[88.62296295 274.56188965]
[77.97525024 288.51156616]
[76.85960388 303.47000122]
[86.89593506 315.38259888]
[85.55142212 330.53671265]
[74.13273621 340.03140259]
[73.01708984 354.98983765]
[71.90144348 369.94830322]
[70.78578949 384.90676880]
[69.67014313 399.86520386]
[69.44681549 414.86355591]
[70.11660004 429.84857178]
[70.78638458 444.83361816]
[71.45616913 459.81866455]
[73.12770844 474.72525024]
[75.79351044 489.48645020]
[78.45930481 504.24768066]
[81.12509918 519.00891113]
[83.79089355 533.77008057]
[98.59253693 537.35217285]
[110.65359497 546.65008545]
[117.88441467 560.05285645]
[119.03221130 575.23846436]
[113.89812469 589.57586670]
[103.37166595 600.58099365]
[89.27660370 606.34722900]
[74.05499268 605.87542725]
[60.34407806 599.24743652]
[50.51935196 587.61151123]
[46.28300476 572.98370361]
[48.36901474 557.89831543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[15 193]
[16 192]
[17 191]
[18 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[34 182]
[35 181]
[38 179]
[40 177]
[41 176]
[43 175]
[44 174]
[55 173]
[56 172]
[57 170]
[58 169]
[59 168]
[61 166]
[63 165]
[70 164]
[71 163]
[73 161]
[74 160]
[77 158]
[78 157]
[79 156]
[82 153]
[83 152]
[84 151]
[85 135]
[86 134]
[87 133]
[88 132]
[92 131]
[93 130]
[94 129]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
