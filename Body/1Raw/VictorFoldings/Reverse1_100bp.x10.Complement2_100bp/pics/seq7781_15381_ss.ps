%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[158.78636169 546.98577881]
[158.90792847 531.96618652]
[160.91105652 517.08026123]
[164.76412964 502.56277466]
[170.40638733 488.64273071]
[177.74884033 475.53961182]
[186.67568970 463.46011353]
[197.04615784 452.59469604]
[208.69668579 443.11480713]
[221.44351196 435.16989136]
[215.16613770 421.54656982]
[208.88877869 407.92324829]
[202.61141968 394.29992676]
[196.33406067 380.67663574]
[181.47961426 371.33251953]
[183.32044983 353.01058960]
[176.84095764 339.48223877]
[170.36146545 325.95388794]
[163.88197327 312.42553711]
[157.40248108 298.89721680]
[155.12559509 313.72338867]
[146.29386902 325.84777832]
[132.88034058 332.56173706]
[117.88162994 332.36535645]
[104.64847565 325.30252075]
[96.13720703 312.95108032]
[94.24925232 298.07037354]
[99.40640259 283.98477173]
[110.45652008 273.84106445]
[124.93099213 269.90536499]
[139.59617615 273.05694580]
[151.17585754 282.59170532]
[146.98884583 268.18792725]
[142.80183411 253.78413391]
[138.61482239 239.38035583]
[134.21382141 225.04049683]
[129.59980774 210.76777649]
[124.87967682 196.52978516]
[120.05368042 182.32733154]
[115.22768402 168.12486267]
[110.40167999 153.92240906]
[105.57568359 139.71995544]
[100.74968719 125.51750183]
[95.92369080 111.31504822]
[90.88677216 97.18601990]
[85.64005280 83.13354492]
[80.39334106 69.08107758]
[75.14662170 55.02860260]
[69.89990234 40.97613144]
[64.65318298 26.92366028]
[59.40646362 12.87118912]
[53.47303772 5.92624378]
[54.18794632 -1.42975342]
[42.26588821 -11.83048058]
[45.28017807 -26.41688919]
[40.24326324 -40.54591751]
[35.20634842 -54.67494965]
[30.06438637 -68.76609039]
[24.81766891 -82.81855774]
[18.43906403 -96.39476776]
[10.97132301 -109.40371704]
[3.50358152 -122.41267395]
[-3.96415973 -135.42163086]
[-11.43190098 -148.43057251]
[-18.89964294 -161.43952942]
[-32.80839920 -155.76239014]
[-47.34976196 -151.98982239]
[-62.26421738 -150.18916321]
[-77.28560638 -150.39253235]
[-92.14585114 -152.59629822]
[-106.57975006 -156.76115417]
[-120.32971954 -162.81274414]
[-133.15037537 -170.64309692]
[-144.81289673 -180.11245728]
[-155.10919189 -191.05183411]
[-163.85546875 -203.26599121]
[-170.89567566 -216.53697205]
[-176.10415649 -230.62794495]
[-179.38795471 -245.28741455]
[-180.68847656 -260.25378418]
[-179.98249817 -275.25994873]
[-177.28263855 -290.03811646]
[-172.63706970 -304.32455444]
[-166.12869263 -317.86428833]
[-157.87367249 -330.41567993]
[-148.01930237 -341.75479126]
[-136.74147034 -351.67919922]
[-124.24143982 -360.01181030]
[-110.74227905 -366.60394287]
[-96.48490143 -371.33792114]
[-81.72373962 -374.12927246]
[-66.72223663 -374.92819214]
[-51.74810410 -373.72039795]
[-37.06856918 -370.52749634]
[-22.94561577 -365.40640259]
[-9.63127518 -358.44854736]
[2.63683724 -349.77807617]
[13.63978481 -339.54974365]
[23.18120575 -327.94610596]
[31.09082222 -315.17419434]
[37.22747803 -301.46197510]
[41.48165894 -287.05416870]
[43.77744293 -272.20785522]
[44.07386017 -257.18801880]
[42.36561584 -242.26269531]
[38.68320465 -227.69824219]
[33.09233475 -213.75457764]
[25.69278336 -200.68055725]
[16.61660767 -188.70948792]
[6.02578211 -178.05500793]
[-5.89068985 -168.90727234]
[1.57705152 -155.89831543]
[9.04479313 -142.88935852]
[16.51253319 -129.88041687]
[23.98027420 -116.87145996]
[31.44801712 -103.86251068]
[32.61587524 -118.81697845]
[40.52136230 -131.56465149]
[53.39837265 -139.25767517]
[68.37014771 -140.17739868]
[82.09195709 -134.11836243]
[91.49831390 -122.43416595]
[94.48780823 -107.73508453]
[90.39258575 -93.30493927]
[80.12753296 -82.36745453]
[65.98587799 -77.36609650]
[51.12690735 -79.41818237]
[38.87014008 -88.06527710]
[44.11685944 -74.01280975]
[49.40140915 -68.84605408]
[49.33537674 -59.71186447]
[54.37229156 -45.58283615]
[59.40921021 -31.45380592]
[70.97099304 -22.06368065]
[68.31697845 -6.46666956]
[73.45893860 7.62447119]
[78.70565033 21.67694283]
[83.95236969 35.72941208]
[89.19908905 49.78188324]
[94.44580841 63.83435440]
[99.69252777 77.88682556]
[104.93924713 91.93930054]
[109.09450531 95.14051056]
[111.16040039 100.44196320]
[110.12614441 106.48905182]
[114.95214081 120.69150543]
[119.77813721 134.89396667]
[124.60414124 149.09642029]
[129.43013000 163.29887390]
[134.25613403 177.50132751]
[139.08213806 191.70378113]
[144.80615234 198.82231140]
[143.87254333 206.15376282]
[148.48655701 220.42649841]
[153.12915039 225.13369751]
[154.49287415 230.65069580]
[153.01860046 235.19334412]
[157.20561218 249.59712219]
[161.39262390 264.00091553]
[165.57963562 278.40469360]
[170.93081665 292.41769409]
[177.41030884 305.94604492]
[183.88981628 319.47439575]
[190.36930847 333.00274658]
[196.84880066 346.53109741]
[208.73246765 351.54519653]
[213.85073853 362.94638062]
[209.95738220 374.39926147]
[216.23474121 388.02258301]
[222.51210022 401.64590454]
[228.78945923 415.26919556]
[235.06681824 428.89251709]
[249.38827515 424.36489868]
[264.16424561 421.66799927]
[279.16174316 420.84429932]
[294.14422607 421.90686035]
[308.87536621 424.83889771]
[323.12283325 429.59414673]
[336.66195679 436.09762573]
[349.27920532 444.24679565]
[360.77554321 453.91305542]
[370.96969604 464.94403076]
[379.70089722 477.16574097]
[386.83139038 490.38537598]
[392.24877930 504.39450073]
[395.86755371 518.97210693]
[397.63070679 533.88836670]
[397.51040649 548.90802002]
[395.50854492 563.79406738]
[391.65667725 578.31188965]
[386.01559448 592.23242188]
[378.67425537 605.33618164]
[369.74841309 617.41644287]
[359.37884521 628.28265381]
[347.72912598 637.76354980]
[334.98297119 645.70953369]
[321.34140015 651.99530029]
[307.01959229 656.52172852]
[292.24337769 659.21740723]
[277.24581909 660.03985596]
[262.26342773 658.97601318]
[247.53253174 656.04272461]
[233.28546143 651.28631592]
[219.74687195 644.78167725]
[207.13032532 636.63146973]
[195.63479614 626.96423340]
[185.44155884 615.93237305]
[176.71141052 603.70996094]
[169.58201599 590.48968506]
[164.16583252 576.48010254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 154]
[37 153]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[53 135]
[55 133]
[56 132]
[57 131]
[58 129]
[59 128]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
