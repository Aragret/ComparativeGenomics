%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[95.37072754 541.29193115]
[91.73654938 526.71435547]
[90.12127686 511.77764893]
[90.55499268 496.76016235]
[93.02963257 481.94158936]
[97.49907684 467.59802246]
[103.88008118 453.99667358]
[112.05374908 441.39093018]
[121.86783600 430.01562500]
[133.13949585 420.08267212]
[145.65873718 411.77713013]
[159.19235229 405.25369263]
[154.57833862 390.98095703]
[149.96432495 376.70822144]
[145.35031128 362.43548584]
[140.73631287 348.16275024]
[136.12229919 333.89001465]
[122.48348236 322.84695435]
[126.48848724 304.87359619]
[121.66249084 290.67114258]
[107.86076355 279.83233643]
[111.59773254 261.80136108]
[106.56081390 247.67233276]
[101.52390289 233.54330444]
[99.05193329 232.22135925]
[96.95466614 229.84059143]
[95.63800812 226.53878784]
[95.45053864 222.59806824]
[96.63513947 218.42065430]
[92.44812775 204.01687622]
[88.26111603 189.61309814]
[85.64148712 204.38256836]
[79.73006439 218.16862488]
[70.83694458 230.24804688]
[59.42864990 239.98718262]
[46.10363388 246.87513733]
[31.56090355 250.55059814]
[16.56333542 250.82072449]
[1.89767551 247.67137146]
[-11.66674519 241.26774597]
[-23.41836548 231.94575500]
[-32.74071884 220.19442749]
[-39.14477158 206.63020325]
[-42.29457855 191.96464539]
[-42.02490997 176.96707153]
[-38.34991455 162.42422485]
[-31.46237183 149.09898376]
[-21.72358704 137.69039917]
[-9.64443970 128.79690552]
[4.14142227 122.88504791]
[18.91082001 120.26496124]
[33.88898087 121.07407379]
[48.29018402 125.26995850]
[61.35896301 132.63249207]
[72.40976715 142.77546692]
[80.86287689 155.16679382]
[86.27529144 169.15803528]
[87.61352539 154.21784973]
[88.95175934 139.27766418]
[90.28999329 124.33748627]
[91.62822723 109.39730072]
[92.63249207 94.43095398]
[93.30227661 79.44591522]
[93.97206116 64.46087646]
[94.64184570 49.47584152]
[95.31163025 34.49080276]
[88.19825745 20.35890579]
[96.49614716 7.98981619]
[97.16593170 -6.99522257]
[97.83571625 -21.98026085]
[98.50550079 -36.96530151]
[99.17528534 -51.95034027]
[99.84506989 -66.93537903]
[100.51485443 -81.92041779]
[86.06715393 -86.20404816]
[73.07243347 -93.81651306]
[62.28387070 -104.31156158]
[54.32555389 -117.07601929]
[49.65641022 -131.36561584]
[48.54371643 -146.34835815]
[51.04782867 -161.15301514]
[57.01890182 -174.91972351]
[66.10585785 -186.84997559]
[77.77703857 -196.25292969]
[91.35129547 -202.58535767]
[106.03772736 -205.48312378]
[106.70751190 -220.46817017]
[107.37729645 -235.45320129]
[108.04708099 -250.43824768]
[105.30398560 -259.15106201]
[108.84003448 -265.64089966]
[109.73285675 -280.61431885]
[110.62567139 -295.58770752]
[111.51848602 -310.56112671]
[112.41130066 -325.53454590]
[105.50911713 -339.77078247]
[113.99024200 -352.01495361]
[114.88305664 -366.98834229]
[100.79261780 -372.49423218]
[89.09451294 -382.08639526]
[80.93479919 -394.82507324]
[77.11287689 -409.46228027]
[78.00318909 -424.56402588]
[83.51850891 -438.65078735]
[93.11850739 -450.34246826]
[105.86265564 -458.49362183]
[120.50243378 -462.30575562]
[135.60357666 -461.40530396]
[149.68661499 -455.88055420]
[161.37185669 -446.27273560]
[169.51449585 -433.52310181]
[173.31680298 -418.88079834]
[172.40625000 -403.78024292]
[166.87205505 -389.70092773]
[157.25640869 -378.02212524]
[144.50134277 -369.88803101]
[129.85646057 -366.09555054]
[128.96365356 -351.12213135]
[135.92968750 -337.95687866]
[127.38470459 -324.64172363]
[126.49188995 -309.66830444]
[125.59907532 -294.69491577]
[124.70626068 -279.72149658]
[123.81344604 -264.74810791]
[123.03211975 -249.76846313]
[122.36233521 -234.78341675]
[121.69255066 -219.79838562]
[121.02276611 -204.81333923]
[135.39210510 -200.61686707]
[148.34727478 -193.09864807]
[159.13302612 -182.69195557]
[167.11938477 -169.99856567]
[171.83843994 -155.75404358]
[173.01176453 -140.78501892]
[170.56681824 -125.96129608]
[164.64143372 -112.14524078]
[155.57606506 -100.14168549]
[143.89419556 -90.65100098]
[130.27215576 -84.22821808]
[115.49989319 -81.25063324]
[114.83010864 -66.26559448]
[114.16032410 -51.28055191]
[113.49053955 -36.29551315]
[112.82075500 -21.31047630]
[112.15097046 -6.32543707]
[111.48118591 8.65960121]
[118.64246368 21.71966743]
[110.29666901 35.16058731]
[109.62688446 50.14562607]
[108.95709991 65.13066101]
[108.28731537 80.11569977]
[107.61753082 95.10073853]
[109.79038239 98.28681946]
[110.54830933 102.41518402]
[109.50196838 106.83244324]
[106.56841278 110.73553467]
[105.23017883 125.67572021]
[103.89194489 140.61590576]
[102.55371094 155.55609131]
[101.21547699 170.49627686]
[102.66489410 185.42608643]
[106.85190582 199.82986450]
[111.03891754 214.23364258]
[115.65293121 228.50637817]
[120.68984222 242.63540649]
[125.72676086 256.76443481]
[137.02429199 262.98767090]
[140.92868042 274.85946655]
[135.86494446 285.84512329]
[140.69094849 300.04760742]
[151.89457703 306.43832397]
[155.62176514 318.36694336]
[150.39503479 329.27600098]
[155.00904846 343.54873657]
[159.62304688 357.82147217]
[164.23706055 372.09420776]
[168.85107422 386.36694336]
[173.46507263 400.63967896]
[188.25628662 398.00640869]
[203.26828003 397.41183472]
[218.22142029 398.86697388]
[232.83712769 402.34475708]
[246.84310913 407.78039551]
[259.97845459 415.07260132]
[271.99847412 424.08554077]
[282.67922974 434.65130615]
[291.82171631 446.57305908]
[299.25564575 459.62872314]
[304.84252930 473.57507324]
[308.47830200 488.15228271]
[310.09518433 503.08880615]
[309.66308594 518.10638428]
[307.19006348 532.92517090]
[302.72216797 547.26922607]
[296.34262085 560.87127686]
[288.17031860 573.47790527]
[278.35748291 584.85424805]
[267.08688354 594.78845215]
[254.56854248 603.09533691]
[241.03564453 609.62023926]
[226.74028015 614.24157715]
[211.94879150 616.87322998]
[196.93673706 617.46618652]
[181.98374939 616.00939941]
[167.36842346 612.53009033]
[153.36302185 607.09289551]
[140.22846985 599.79931641]
[128.20942688 590.78503418]
[117.52983093 580.21813965]
[108.38862610 568.29534912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[19 170]
[20 169]
[22 166]
[23 165]
[24 164]
[29 163]
[30 162]
[31 161]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[86 128]
[87 127]
[88 126]
[89 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
