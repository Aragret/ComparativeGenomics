%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[98.12902832 692.63989258]
[99.10678101 677.36566162]
[107.08074188 664.30139160]
[120.21854401 656.44921875]
[119.32572174 641.47583008]
[118.43290710 626.50244141]
[117.54009247 611.52899170]
[116.64727783 596.55560303]
[115.75446320 581.58221436]
[114.86164856 566.60876465]
[103.58559418 556.94512939]
[102.46684265 541.77270508]
[112.67942810 530.01086426]
[111.78661346 515.03747559]
[110.89379883 500.06405640]
[110.00098419 485.09063721]
[109.10816193 470.11721802]
[96.06394196 459.50183105]
[94.70652771 442.39999390]
[106.36277771 429.35580444]
[105.24713135 414.39733887]
[104.13147736 399.43890381]
[103.01583099 384.48043823]
[101.90018463 369.52197266]
[98.93010712 365.78198242]
[98.27794647 360.13647461]
[100.98078156 354.10272217]
[100.31099701 339.11767578]
[99.64121246 324.13262939]
[98.97142792 309.14758301]
[98.30164337 294.16256714]
[84.31502533 291.02859497]
[71.60749054 284.37176514]
[61.05002975 274.64120483]
[53.36812592 262.49707031]
[49.09186554 248.76554871]
[48.51937866 234.38284302]
[51.69604874 220.33122253]
[58.41101074 207.57196045]
[68.21110535 196.97964478]
[80.43148041 189.28210449]
[94.24067688 185.01051331]
[93.79406738 170.01716614]
[93.34746552 155.02380371]
[92.90085602 140.03045654]
[92.45425415 125.03710938]
[89.65413666 121.16821289]
[89.25470734 115.49921417]
[92.22427368 109.59216309]
[85.31479645 122.90603638]
[74.83081818 133.63386536]
[61.67929840 140.84756470]
[46.99798203 143.92309570]
[32.05694580 142.59440613]
[18.14874077 136.97640991]
[6.47656488 127.55514526]
[-1.94982195 115.14562988]
[-6.40145254 100.82141876]
[-6.49321651 85.82170105]
[-2.21717548 71.44409943]
[6.05675077 58.93241882]
[17.61278343 49.36904526]
[31.45121193 43.58130646]
[46.37487411 42.06990433]
[61.09272003 44.96558380]
[74.33151245 52.01784134]
[84.94596100 62.61658859]
[92.01781464 75.84492493]
[94.93511200 90.55495453]
[99.12212372 76.15117645]
[103.30913544 61.74739456]
[107.49614716 47.34361267]
[111.57581329 32.90905762]
[115.54791260 18.44453430]
[111.74119568 3.08812022]
[122.57254791 -7.13592148]
[126.54464722 -21.60044479]
[127.99406433 -36.53025436]
[126.87841797 -51.48870850]
[118.13613892 -64.67518616]
[124.90539551 -77.94268036]
[121.14637756 -86.26779938]
[123.88618469 -93.13185120]
[122.99336243 -108.10526276]
[121.76638794 -123.05499268]
[120.20587158 -137.97360229]
[118.64534760 -152.89219666]
[117.08482361 -167.81080627]
[115.52429962 -182.72941589]
[100.57782745 -184.65286255]
[86.47803497 -189.97193909]
[73.98529816 -198.39976501]
[63.77334213 -209.48185730]
[56.39288330 -222.62055969]
[52.24193954 -237.10733032]
[51.54436493 -252.16090393]
[54.33778381 -266.96945190]
[60.47154236 -280.73440552]
[69.61486053 -292.71340942]
[81.27465057 -302.26043701]
[94.82211304 -308.86068726]
[109.52664948 -312.15814209]
[124.59526825 -311.97503662]
[139.21533203 -308.32119751]
[152.59840393 -301.39367676]
[164.02273560 -291.56613159]
[172.87225342 -279.36846924]
[178.66969299 -265.45852661]
[181.10241699 -250.58645630]
[180.03923035 -235.55427551]
[175.53746033 -221.17265320]
[167.83988953 -208.21719360]
[157.36164856 -197.38653564]
[144.66780090 -189.26478577]
[130.44290161 -184.28993225]
[132.00343323 -169.37133789]
[133.56394958 -154.45272827]
[135.12446594 -139.53411865]
[136.68499756 -124.61551666]
[139.17909241 -122.12316132]
[140.58990479 -118.29894257]
[140.30459595 -113.66516113]
[137.96676636 -108.99807739]
[138.85958862 -94.02467346]
[139.86384583 -79.05832672]
[148.52632141 -66.94178009]
[141.83686829 -52.60435486]
[142.95251465 -37.64590454]
[148.61766052 -51.53496552]
[157.51782227 -63.60920715]
[169.10873413 -73.13027954]
[182.68161011 -79.51596069]
[197.40646362 -82.37577820]
[212.38287354 -81.53484344]
[226.69502258 -77.04457855]
[239.46771240 -69.17956543]
[249.91989136 -58.42075729]
[257.41241455 -45.42605591]
[261.48709106 -30.99009323]
[261.89474487 -15.99563313]
[258.61050415 -1.35959458]
[251.83512878 12.02302456]
[241.98298645 23.33387184]
[229.65652466 31.88128471]
[215.60951233 37.14258575]
[200.70091248 38.79604340]
[185.84242249 36.74055099]
[171.94261169 31.10179901]
[159.85148621 22.22459984]
[150.30841064 10.65179920]
[143.89695740 -2.90892196]
[141.00917053 -17.62834930]
[137.03707886 -3.16382551]
[141.12789917 11.15798950]
[130.01243591 22.41663170]
[126.04033661 36.88115692]
[127.30038452 44.16360474]
[121.89993286 51.53062439]
[117.71292114 65.93440247]
[113.52590942 80.33818817]
[109.33889771 94.74196625]
[107.22427368 109.59216309]
[107.44760132 124.59050751]
[107.89420319 139.58384705]
[108.34081268 154.57720947]
[108.78741455 169.57055664]
[109.23402405 184.56390381]
[124.46398926 188.48658752]
[137.96141052 196.53034973]
[148.63887024 208.03765869]
[155.63885498 222.07229614]
[158.40254211 237.49555969]
[156.71449280 253.05868530]
[150.71931458 267.50387573]
[140.90945435 279.66604614]
[128.08462524 288.56674194]
[113.28668213 293.49276733]
[113.95646667 308.47781372]
[114.62625122 323.46286011]
[115.29603577 338.44787598]
[115.96582031 353.43292236]
[116.85863495 368.40634155]
[117.97428894 383.36477661]
[119.08993530 398.32324219]
[120.20558167 413.28170776]
[121.32122803 428.24014282]
[132.47117615 435.79614258]
[137.16497803 448.21304321]
[133.89862061 460.87844849]
[124.08157349 469.22442627]
[124.97438812 484.19781494]
[125.86720276 499.17123413]
[126.76001740 514.14465332]
[127.65283203 529.11804199]
[139.19073486 539.58294678]
[139.88287354 554.78082275]
[129.83505249 565.71600342]
[130.72785950 580.68939209]
[131.62068176 595.66278076]
[132.51350403 610.63616943]
[133.40631104 625.60961914]
[134.29913330 640.58300781]
[135.19194031 655.55639648]
[149.16973877 661.79180908]
[158.63963318 673.81591797]
[161.42552185 688.86572266]
[156.88720703 703.48291016]
[146.06758118 714.30859375]
[131.45291138 718.85498047]
[116.40154266 716.07745361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[13 194]
[14 193]
[15 192]
[16 191]
[17 190]
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[42 167]
[43 166]
[44 165]
[45 164]
[46 163]
[49 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 156]
[74 155]
[76 153]
[77 152]
[78 128]
[79 127]
[81 125]
[83 124]
[84 123]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
