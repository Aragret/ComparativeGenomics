%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[92.64055634 506.22882080]
[79.90689850 514.20379639]
[66.18722534 520.32885742]
[51.74860764 524.48486328]
[36.87208939 526.59088135]
[21.84724426 526.60589600]
[6.96654129 524.52966309]
[-7.48036480 520.40258789]
[-21.21226120 514.30493164]
[-33.96185303 506.35546875]
[-45.48096085 496.70889282]
[-55.54536819 485.55300903]
[-63.95916748 473.10494995]
[-70.55857849 459.60702515]
[-75.21514130 445.32199097]
[-77.83821869 430.52786255]
[-78.37675476 415.51266479]
[-76.82025146 400.56866455]
[-73.19902039 385.98672485]
[-67.58354950 372.05072021]
[-60.08314133 359.03189087]
[-50.84379196 347.18365479]
[-40.04535294 336.73666382]
[-27.89801598 327.89422607]
[-14.63823223 320.82852173]
[-0.52410883 315.67706299]
[14.16961956 312.54010010]
[29.15693474 311.47872925]
[44.14610291 312.51358032]
[47.25021362 297.83828735]
[50.35432434 283.16296387]
[53.45843506 268.48767090]
[56.56254578 253.81236267]
[59.66665268 239.13706970]
[53.33335876 228.83096313]
[55.79933929 216.57931519]
[66.27731323 209.05769348]
[69.59957123 194.43022156]
[72.92182922 179.80276489]
[71.33786774 172.58384705]
[76.40397644 164.98303223]
[79.94364929 150.40666199]
[83.48332214 135.83027649]
[87.02299500 121.25390625]
[90.56266785 106.67752838]
[79.42031097 116.71983337]
[64.91047668 120.52309418]
[50.27470398 117.23764801]
[38.78266144 107.59748077]
[33.00169373 93.75622559]
[34.22329330 78.80604553]
[42.17454529 66.08686829]
[55.07912064 58.44017410]
[70.05410767 57.57426071]
[83.75405121 63.68257523]
[93.11835480 75.40050507]
[96.05500031 90.11025238]
[101.92395782 76.30607605]
[100.20300293 60.57875061]
[112.30319977 51.89344025]
[118.17215729 38.08926392]
[124.04111481 24.28508759]
[122.32015991 8.55775928]
[134.42034912 -0.12754720]
[140.28932190 -13.93172455]
[146.15827942 -27.73590088]
[132.71836853 -34.40670013]
[119.69313812 -41.85476303]
[107.12745667 -50.05440521]
[95.06465149 -58.97737122]
[83.54631042 -68.59289551]
[72.61213684 -78.86782837]
[62.29982376 -89.76675415]
[52.64491653 -101.25210571]
[43.68069839 -113.28428650]
[35.43807602 -125.82181549]
[27.94545937 -138.82147217]
[21.22867775 -152.23844910]
[15.31088638 -166.02650452]
[10.21248436 -180.13807678]
[5.95104790 -194.52455139]
[2.54126668 -209.13632202]
[-0.00510528 -223.92303467]
[-1.67928970 -238.83367920]
[-2.47551537 -253.81689453]
[-2.39103770 -268.82101440]
[-1.42614758 -283.79428101]
[0.41582865 -298.68515015]
[3.12854123 -313.44223022]
[6.70263863 -328.01467896]
[11.12580109 -342.35226440]
[16.38278008 -356.40554810]
[22.45545197 -370.12606812]
[29.32288742 -383.46658325]
[36.96140671 -396.38104248]
[45.34468460 -408.82495117]
[54.44381714 -420.75543213]
[64.22743988 -432.13134766]
[74.66182709 -442.91345215]
[85.71100616 -453.06463623]
[97.33689117 -462.54983521]
[109.49940491 -471.33639526]
[122.15661621 -479.39404297]
[135.26489258 -486.69494629]
[148.77906799 -493.21398926]
[162.65251160 -498.92868042]
[176.83744812 -503.81933594]
[191.28494263 -507.86904907]
[205.94520569 -511.06390381]
[220.76770020 -513.39288330]
[235.70133972 -514.84790039]
[250.69462585 -515.42407227]
[265.69586182 -515.11926270]
[280.65338135 -513.93457031]
[295.51559448 -511.87417603]
[310.23126221 -508.94503784]
[324.74963379 -505.15734863]
[339.02072144 -500.52413940]
[352.99530029 -495.06137085]
[366.62518311 -488.78787231]
[379.86340332 -481.72528076]
[392.66430664 -473.89794922]
[404.98379517 -465.33285522]
[416.77935791 -456.05950928]
[428.01037598 -446.10989380]
[438.63812256 -435.51831055]
[448.62591553 -424.32125854]
[457.93939209 -412.55734253]
[466.54641724 -400.26712036]
[474.41732788 -387.49295044]
[481.52499390 -374.27886963]
[487.84487915 -360.67044067]
[493.35522461 -346.71456909]
[498.03704834 -332.45935059]
[501.87417603 -317.95394897]
[504.85342407 -303.24835205]
[506.96447754 -288.39324951]
[508.20010376 -273.43988037]
[508.55599976 -258.43972778]
[508.03094482 -243.44458008]
[506.62680054 -228.50607300]
[504.34832764 -213.67573547]
[501.20346069 -199.00466919]
[497.20297241 -184.54345703]
[492.36068726 -170.34194946]
[486.69329834 -156.44909668]
[480.22036743 -142.91281128]
[472.96414185 -129.77972412]
[464.94967651 -117.09513092]
[456.20458984 -104.90275574]
[446.75903320 -93.24462128]
[436.64559937 -82.16091919]
[425.89907837 -71.68985748]
[414.55657959 -61.86753464]
[402.65716553 -52.72780228]
[390.24188232 -44.30217743]
[377.35351562 -36.61970139]
[364.03649902 -29.70685387]
[350.33673096 -23.58746719]
[336.30145264 -18.28263855]
[321.97903442 -13.81065273]
[307.41885376 -10.18692684]
[292.67108154 -7.42395067]
[277.78659058 -5.53125048]
[262.81668091 -4.51535034]
[247.81292725 -4.37975264]
[232.82710266 -5.12492418]
[217.91082764 -6.74829674]
[203.11553955 -9.24427414]
[188.49223328 -12.60425186]
[174.09132385 -16.81664848]
[159.96244812 -21.86693954]
[154.09349060 -8.06276321]
[148.22453308 5.74141359]
[150.36528015 20.48137474]
[137.84529114 30.15404892]
[131.97633362 43.95822525]
[126.10737610 57.76240158]
[128.24812317 72.50236511]
[115.72814178 82.17504120]
[109.85917664 95.97921753]
[105.13904572 110.21720123]
[101.59937286 124.79357910]
[98.05970001 139.36994934]
[94.52002716 153.94633484]
[90.98035431 168.52270508]
[87.54929352 183.12503052]
[84.22703552 197.75248718]
[80.90476990 212.37994385]
[86.75790405 229.83911133]
[74.34195709 242.24118042]
[71.23784637 256.91647339]
[68.13373566 271.59176636]
[65.02962494 286.26708984]
[61.92551422 300.94238281]
[58.82140732 315.61767578]
[72.94580841 320.74090576]
[86.21969604 327.78009033]
[98.38470459 336.59817505]
[109.20402527 347.02355957]
[118.46705627 358.85327148]
[125.99349213 371.85708618]
[131.63684082 385.78182983]
[135.28723145 400.35650635]
[136.87362671 415.29736328]
[136.36514282 430.31359863]
[133.77166748 445.11291504]
[129.14369202 459.40725708]
[122.57128906 472.91836548]
[114.18241882 485.38323975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[37 189]
[38 188]
[39 187]
[41 186]
[42 185]
[43 184]
[44 183]
[45 182]
[57 181]
[58 180]
[60 178]
[61 177]
[62 176]
[64 174]
[65 173]
[66 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
