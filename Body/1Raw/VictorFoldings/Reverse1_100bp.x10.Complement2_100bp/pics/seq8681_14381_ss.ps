%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[234.58576965 502.06741333]
[227.50866699 488.84188843]
[220.43156433 475.61636353]
[213.35446167 462.39080811]
[206.27735901 449.16528320]
[199.20024109 435.93975830]
[185.38529968 437.21081543]
[172.08738708 433.10745239]
[161.32395935 424.21768188]
[154.74107361 411.85824585]
[153.36178589 397.87957764]
[157.42715454 384.38894653]
[166.35504150 373.43267822]
[159.47563171 360.10327148]
[146.76296997 352.34197998]
[147.30941772 336.53021240]
[140.43000793 323.20077515]
[133.55058289 309.87136841]
[126.67117310 296.54193115]
[122.19402313 310.85818481]
[109.63027954 319.05282593]
[94.72391510 317.37939453]
[84.28992462 306.60293579]
[83.09858704 291.65032959]
[91.69456482 279.35769653]
[106.14788818 275.34503174]
[119.85204315 281.44821167]
[114.39668274 267.47540283]
[108.94132233 253.50260925]
[107.34713745 268.41766357]
[101.48271179 282.22375488]
[91.85536957 293.72653198]
[79.29797363 301.93090820]
[64.89686584 306.12713623]
[49.89788437 305.95214844]
[35.59859467 301.42108154]
[23.23602867 292.92599487]
[13.87966728 281.20172119]
[8.33893204 267.26254272]
[7.09315205 252.31437683]
[10.25009918 237.65034485]
[17.53666687 224.53906250]
[28.32249260 214.11476135]
[41.67449570 207.27926636]
[56.43759537 204.62390137]
[71.33463287 206.37840271]
[85.07686615 212.39097595]
[96.47545624 222.14146423]
[104.54287720 234.78315735]
[103.20464325 219.84297180]
[101.86640930 204.90278625]
[100.52817535 189.96260071]
[99.18994141 175.02241516]
[97.85170746 160.08222961]
[96.51347351 145.14204407]
[95.17523956 130.20185852]
[77.95251465 121.19762421]
[69.63189697 103.63442230]
[73.57299805 84.60375977]
[88.18451691 71.78962708]
[85.95939636 56.95558167]
[83.73428345 42.12154007]
[81.50916290 27.28749466]
[79.28404999 12.45345116]
[76.83831787 -2.34581995]
[66.77162933 -14.55123901]
[72.12387085 -28.45097733]
[69.45807648 -43.21219635]
[66.79228210 -57.97341156]
[64.12648773 -72.73462677]
[61.46068954 -87.49584961]
[58.79489517 -102.25706482]
[44.24351501 -111.96668243]
[41.27503967 -128.86352539]
[51.24532700 -142.40722656]
[48.36005402 -157.12712097]
[45.47478104 -171.84701538]
[35.22748184 -183.90119934]
[40.37218475 -197.87908936]
[37.48691177 -212.59898376]
[34.60164261 -227.31886292]
[31.71636772 -242.03875732]
[28.83109474 -256.75866699]
[18.58379745 -268.81283569]
[23.72850227 -282.79071045]
[20.84322929 -297.51062012]
[5.78475618 -298.09295654]
[-8.73335838 -302.13287354]
[-21.92816925 -309.41256714]
[-33.08809662 -319.53939819]
[-41.61130524 -331.96725464]
[-47.03813934 -346.02590942]
[-49.07594681 -360.95721436]
[-47.61482239 -375.95596313]
[-42.73357010 -390.21322632]
[-34.69542694 -402.96020508]
[-23.93387604 -413.50939941]
[-11.02927971 -421.29196167]
[3.32243633 -425.88815308]
[18.34730148 -427.05010986]
[33.23504257 -424.71517944]
[47.18278503 -419.00927734]
[59.43833923 -410.24014282]
[69.34078979 -398.88064575]
[76.35609436 -385.54339600]
[80.10594177 -370.94766235]
[80.38809204 -355.88058472]
[77.18734741 -341.15466309]
[70.67630005 -327.56411743]
[61.20610046 -315.84182739]
[49.28745270 -306.61999512]
[35.56312180 -300.39587402]
[38.44839478 -285.67599487]
[48.48931885 -274.67468262]
[43.55098724 -259.64392090]
[46.43626022 -244.92402649]
[49.32153320 -230.20414734]
[52.20680618 -215.48425293]
[55.09207916 -200.76435852]
[65.13300323 -189.76303101]
[60.19467163 -174.73228455]
[63.07994461 -160.01239014]
[65.96521759 -145.29249573]
[77.55946350 -139.67085266]
[83.89341736 -128.22694397]
[82.45861053 -115.03028870]
[73.55611420 -104.92285919]
[76.22190857 -90.16164398]
[78.88770294 -75.40042877]
[81.55349731 -60.63920593]
[84.21929169 -45.87799072]
[86.88508606 -31.11677361]
[96.76110840 -19.96717644]
[91.59954071 -5.01161528]
[94.94258881 -1.60089183]
[96.17854309 3.94613004]
[94.11809540 10.22833347]
[96.34320831 25.06237793]
[98.56832886 39.89641953]
[100.79344177 54.73046494]
[103.01856232 69.56450653]
[112.94594574 72.29019165]
[121.40657806 78.15534210]
[127.44189453 86.49543762]
[130.36810303 96.36557770]
[129.85366821 106.64748383]
[125.95688629 116.17624664]
[119.11923981 123.87227631]
[110.11542511 128.86363220]
[111.45365906 143.80381775]
[112.79189301 158.74400330]
[114.13012695 173.68418884]
[115.46836090 188.62437439]
[116.80659485 203.56455994]
[118.14482880 218.50474548]
[119.48306274 233.44493103]
[122.91412354 248.04724121]
[128.36947632 262.02005005]
[133.82484436 275.99282837]
[140.00061035 289.66250610]
[146.88002014 302.99194336]
[153.75942993 316.32138062]
[160.63883972 329.65078735]
[173.84356689 338.36547852]
[172.80505371 353.22384644]
[179.68447876 366.55328369]
[195.94476318 365.97274780]
[210.77729797 372.51791382]
[221.23309326 384.83203125]
[225.25752258 400.41687012]
[222.09405518 416.13964844]
[212.42578125 428.86267090]
[219.50288391 442.08819580]
[226.57998657 455.31372070]
[233.65708923 468.53924561]
[240.73419189 481.76477051]
[247.81129456 494.99029541]
[262.10086060 490.30209351]
[276.98748779 488.16665649]
[292.01873779 488.64889526]
[306.73785400 491.73413086]
[320.69754028 497.32861328]
[333.47357178 505.26232910]
[344.67770386 515.29418945]
[353.96945190 527.11938477]
[361.06646729 540.37847900]
[365.75305176 554.66857910]
[367.88677979 569.55541992]
[367.40286255 584.58660889]
[364.31594849 599.30541992]
[358.71987915 613.26446533]
[350.78469849 626.03955078]
[340.75155640 637.24255371]
[328.92535400 646.53295898]
[315.66543579 653.62847900]
[301.37481689 658.31347656]
[286.48770142 660.44549561]
[271.45657349 659.95989990]
[256.73815918 656.87127686]
[242.77973938 651.27362061]
[230.00550842 643.33703613]
[218.80364990 633.30261230]
[209.51457214 621.47534180]
[202.42057800 608.21459961]
[197.73722839 593.92346191]
[195.60685730 579.03613281]
[196.09420776 564.00500488]
[199.18444824 549.28698730]
[204.78369141 535.32916260]
[212.72175598 522.55584717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[6 172]
[13 166]
[14 165]
[16 163]
[17 162]
[18 161]
[19 160]
[27 159]
[28 158]
[29 157]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[54 151]
[55 150]
[56 149]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 134]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[75 123]
[76 122]
[77 121]
[79 119]
[80 118]
[81 117]
[82 116]
[83 115]
[85 113]
[86 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
