%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[197.34793091 487.12045288]
[198.02278137 472.12072754]
[200.31547546 457.28192139]
[204.19909668 442.77795410]
[209.62814331 428.77893066]
[216.53895569 415.44897461]
[224.85049438 402.94433594]
[234.46531677 391.41168213]
[245.27069092 380.98617554]
[257.13995361 371.79010010]
[249.28819275 359.00924683]
[241.43644714 346.22839355]
[233.58468628 333.44757080]
[217.72512817 325.93481445]
[217.37570190 307.52398682]
[209.33453369 294.86145020]
[201.29335022 282.19891357]
[193.25218201 269.53640747]
[185.21101379 256.87387085]
[177.16983032 244.21134949]
[169.12866211 231.54882812]
[161.08749390 218.88630676]
[149.35375977 215.94589233]
[142.55088806 205.46234131]
[144.78334045 192.75883484]
[136.93157959 179.97799683]
[129.07983398 167.19715881]
[125.75381470 166.02668762]
[122.82949066 163.18708801]
[121.08516693 158.88468933]
[121.17759705 153.66563416]
[113.90436554 140.54693604]
[106.63114166 127.42823792]
[99.35791016 114.30954742]
[87.47257233 106.94541931]
[87.52339935 92.96368408]
[80.25016785 79.84498596]
[72.87947845 66.78080750]
[65.41173553 53.77185059]
[57.94399643 40.76289749]
[58.18472672 55.76096725]
[53.34674835 69.95934296]
[43.99842453 81.69002533]
[31.23798561 89.57489777]
[16.56451416 92.68765259]
[1.70183575 90.66260529]
[-11.60399628 83.73766327]
[-21.78982735 72.72636414]
[-27.65903473 58.92228699]
[-28.52211189 43.94713974]
[-24.27766418 29.56017876]
[-15.42432404 17.45157051]
[-3.00217485 9.04382324]
[11.52944279 5.32467175]
[26.46336937 6.73103619]
[40.04518127 13.09770012]
[50.68020630 23.67799187]
[46.49319458 9.27420998]
[42.30618286 -5.12957191]
[38.11917114 -19.53335381]
[33.93215942 -33.93713760]
[30.69274139 -36.82852554]
[28.73845673 -40.25566864]
[28.07992172 -43.74876785]
[28.57409096 -46.88283920]
[29.95218086 -49.32394791]
[26.62992096 -63.95140839]
[23.30766106 -78.57886505]
[8.40284729 -76.77594757]
[-6.60834885 -76.51512909]
[-21.56679916 -77.79917908]
[-36.31393433 -80.61449432]
[-50.69343185 -84.93122101]
[-64.55285645 -90.70360565]
[-77.74528503 -97.87046051]
[-90.13088226 -106.35580444]
[-101.57834625 -116.06968689]
[-111.96633148 -126.90914917]
[-121.18471527 -138.75926208]
[-129.13577271 -151.49444580]
[-135.73524475 -164.97966003]
[-140.91313171 -179.07197571]
[-144.61457825 -193.62200928]
[-146.80033875 -208.47550964]
[-147.44723511 -223.47502136]
[-146.54841614 -238.46156311]
[-144.11340332 -253.27624512]
[-140.16801453 -267.76202393]
[-134.75407410 -281.76535034]
[-127.92897797 -295.13778687]
[-119.76506805 -307.73757935]
[-110.34888458 -319.43115234]
[-99.78025055 -330.09454346]
[-88.17118835 -339.61471558]
[-75.64477539 -347.89077759]
[-62.33378983 -354.83496094]
[-48.37934113 -360.37365723]
[-33.92934799 -364.44818115]
[-19.13698959 -367.01531982]
[-4.15907669 -368.04788208]
[10.84561825 -367.53488159]
[25.71803665 -365.48178101]
[40.30052185 -361.91036987]
[54.43849564 -356.85845947]
[67.98208618 -350.37960815]
[80.78771210 -342.54254150]
[92.71964264 -333.43029785]
[103.65139008 -323.13946533]
[113.46706390 -311.77917480]
[122.06261444 -299.46978760]
[129.34693909 -286.34185791]
[135.24279785 -272.53451538]
[139.68769836 -258.19412231]
[142.63452148 -243.47268677]
[144.05203247 -228.52630615]
[143.92521667 -213.51338196]
[142.25540161 -198.59306335]
[139.06028748 -183.92352295]
[134.37374878 -169.66027832]
[128.24546814 -155.95449829]
[120.74041748 -142.95149231]
[111.93813324 -130.78909302]
[101.93193817 -119.59623718]
[90.82790375 -109.49156189]
[78.74373627 -100.58219147]
[65.80753326 -92.96257019]
[52.15642166 -86.71347046]
[37.93512344 -81.90112305]
[41.25738144 -67.27366638]
[44.57963943 -52.64620590]
[48.33594131 -38.12414551]
[52.52295303 -23.72036552]
[56.70996475 -9.31658268]
[60.89697647 5.08719921]
[65.08398438 19.49098015]
[70.95294952 33.29515839]
[78.42068481 46.30411148]
[85.88842773 59.31306458]
[91.94469452 63.54903412]
[93.36885834 72.57176208]
[100.64208984 85.69045258]
[112.52742767 93.05458069]
[112.47660065 107.03631592]
[119.74983215 120.15501404]
[127.02306366 133.27371216]
[134.29629517 146.39239502]
[141.86067200 159.34539795]
[149.71243286 172.12623596]
[157.56417847 184.90708923]
[173.95579529 193.29734802]
[173.75001526 210.84512329]
[181.79118347 223.50765991]
[189.83236694 236.17018127]
[197.87353516 248.83270264]
[205.91470337 261.49523926]
[213.95588684 274.15774536]
[221.99705505 286.82028198]
[230.03822327 299.48278809]
[242.43351746 303.04925537]
[248.87034607 313.76144409]
[246.36552429 325.59579468]
[254.21728516 338.37664795]
[262.06903076 351.15750122]
[269.92080688 363.93832397]
[283.48876953 357.50738525]
[297.67251587 352.58108521]
[312.30575562 349.21725464]
[327.21691895 347.45529175]
[342.23117065 347.31585693]
[357.17248535 348.80059814]
[371.86569214 351.89212036]
[386.13848877 356.55413818]
[399.82354736 362.73202515]
[412.76043701 370.35333252]
[424.79745483 379.32870483]
[435.79348755 389.55291748]
[445.61959839 400.90609741]
[454.16061401 413.25512695]
[461.31634521 426.45523071]
[467.00292969 440.35162354]
[471.15368652 454.78140259]
[473.71997070 469.57537842]
[474.67166138 484.56008911]
[473.99758911 499.55984497]
[471.70571899 514.39880371]
[467.82287598 528.90295410]
[462.39456177 542.90228271]
[455.48449707 556.23260498]
[447.17361450 568.73767090]
[437.55941772 580.27087402]
[426.75457764 590.69696045]
[414.88583374 599.89367676]
[402.09228516 607.75323486]
[388.52395630 614.18347168]
[374.33993530 619.10894775]
[359.70651245 622.47204590]
[344.79525757 624.23321533]
[329.78100586 624.37182617]
[314.83978271 622.88623047]
[300.14675903 619.79394531]
[285.87420654 615.13116455]
[272.18948364 608.95257568]
[259.25299072 601.33056641]
[247.21646118 592.35449219]
[236.22097778 582.12969971]
[226.39547729 570.77600098]
[217.85513306 558.42651367]
[210.70010376 545.22601318]
[205.01426697 531.32934570]
[200.86427307 516.89935303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 164]
[11 163]
[12 162]
[13 161]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[25 149]
[26 148]
[27 147]
[31 146]
[32 145]
[33 144]
[34 143]
[36 141]
[37 140]
[38 138]
[39 137]
[40 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[66 130]
[67 129]
[68 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
