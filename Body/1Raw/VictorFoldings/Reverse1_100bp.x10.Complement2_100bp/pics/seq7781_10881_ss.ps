%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[0.25509778 604.73120117]
[-8.74046993 617.18011475]
[-22.76187134 623.44879150]
[-38.03742218 621.85089111]
[-50.45807266 612.81634521]
[-56.68273163 598.77539062]
[-55.03699875 583.50494385]
[-45.96356583 571.11267090]
[-31.90314102 564.93200684]
[-30.34261703 550.01342773]
[-28.78209496 535.09484863]
[-27.22157097 520.17620850]
[-29.47969627 515.96789551]
[-29.11815834 510.29635620]
[-25.38602829 504.83901978]
[-23.38201523 489.97348022]
[-21.37800217 475.10794067]
[-19.37398720 460.24243164]
[-29.76211929 471.06307983]
[-44.14099884 475.33483887]
[-58.75202560 471.94100952]
[-69.77590942 461.76879883]
[-74.33103943 447.47717285]
[-71.22670746 432.80191040]
[-61.27437973 421.57910156]
[-47.07557678 416.74240112]
[-32.34182739 419.55603027]
[-20.92449760 429.28457642]
[-15.80813217 443.38412476]
[-11.62112045 428.98034668]
[-18.99743462 416.09136963]
[-14.95639706 401.42422485]
[-1.38724458 393.77465820]
[2.79976654 379.37088013]
[-2.74945545 368.62228394]
[0.62093097 356.58798218]
[11.62931633 349.86651611]
[16.03031540 335.52667236]
[20.43131256 321.18679810]
[24.83231163 306.84695435]
[23.78965378 299.53021240]
[29.40705299 292.32727051]
[34.02106094 278.05453491]
[38.63507080 263.78179932]
[34.04153442 246.84466553]
[47.80977631 234.61695862]
[52.21077347 220.27709961]
[56.61177063 205.93725586]
[61.01276779 191.59741211]
[57.35017014 177.16014099]
[68.79592133 166.23744202]
[67.47583008 162.96794128]
[67.67376709 158.89659119]
[69.74935913 154.74385071]
[73.72686768 151.36354065]
[78.76378632 137.23451233]
[83.80070496 123.10547638]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[95.54674530 57.71259308]
[100.85617065 43.45550156]
[114.38147736 37.32349014]
[119.41839600 23.19445992]
[124.45531464 9.06542969]
[129.49223328 -5.06360006]
[126.83821106 -20.66061211]
[138.39999390 -30.05073547]
[130.61404419 -45.71593094]
[136.45167542 -61.84779358]
[151.84126282 -68.63005829]
[156.66726685 -82.83251190]
[161.49325562 -97.03497314]
[166.31925964 -111.23742676]
[171.14526367 -125.43988037]
[164.41186523 -139.48620605]
[169.50842285 -153.82075500]
[182.94093323 -160.15347290]
[187.76693726 -174.35592651]
[192.59294128 -188.55838013]
[192.39091492 -197.69056702]
[197.59796143 -202.93542480]
[196.78437805 -209.49665833]
[199.06422424 -214.70234680]
[203.00090027 -217.40634155]
[208.45626831 -231.37913513]
[213.91162109 -245.35194397]
[211.72315979 -261.02105713]
[223.55940247 -270.06277466]
[217.45991516 -284.39575195]
[223.19146729 -298.48843384]
[236.89335632 -304.21502686]
[242.34872437 -318.18783569]
[247.80407715 -332.16064453]
[234.66246033 -339.43945312]
[222.60830688 -348.40499878]
[211.85675049 -358.89724731]
[202.59965515 -370.72897339]
[195.00221252 -383.68899536]
[189.20004272 -397.54608154]
[185.29664612 -412.05285645]
[183.36172485 -426.95050049]
[183.42979431 -441.97311401]
[185.49963379 -456.85260010]
[189.53431702 -471.32342529]
[195.46182251 -485.12734985]
[203.17637634 -498.01800537]
[212.54031372 -509.76535034]
[223.38650513 -520.15972900]
[235.52140808 -529.01568604]
[248.72843933 -536.17510986]
[262.77191162 -541.51031494]
[277.40121460 -544.92602539]
[292.35525513 -546.36126709]
[307.36718750 -545.79046631]
[322.16906738 -543.22381592]
[336.49676514 -538.70715332]
[350.09457397 -532.32098389]
[362.71981812 -524.17932129]
[374.14721680 -514.42749023]
[384.17279053 -503.23950195]
[392.61767578 -490.81503296]
[399.33111572 -477.37579346]
[404.19329834 -463.16162109]
[407.11749268 -448.42620850]
[408.05148315 -433.43249512]
[406.97863770 -418.44808960]
[403.91802979 -403.74041748]
[398.92437744 -389.57189941]
[392.08670044 -376.19543457]
[383.52709961 -363.84973145]
[373.39828491 -352.75509644]
[361.88104248 -343.10955811]
[349.18090820 -335.08523560]
[335.52450562 -328.82531738]
[321.15557861 -324.44152832]
[306.33056641 -322.01211548]
[291.31399536 -321.58044434]
[276.37390137 -323.15417480]
[261.77688599 -326.70526123]
[256.32150269 -312.73248291]
[250.86616516 -298.75967407]
[257.06317139 -285.26400757]
[251.72970581 -271.01589966]
[237.53219604 -264.60742188]
[240.11085510 -249.93772888]
[227.88441467 -239.89657593]
[222.42906189 -225.92378235]
[216.97370911 -211.95098877]
[211.72698975 -197.89851379]
[206.79539490 -183.73237610]
[201.96939087 -169.52992249]
[197.14340210 -155.32746887]
[203.93682861 -142.12197876]
[199.24490356 -127.64992523]
[185.34771729 -120.61388397]
[180.52171326 -106.41143036]
[175.69572449 -92.20896912]
[170.86972046 -78.00651550]
[166.04371643 -63.80406189]
[173.30024719 -53.15642166]
[173.09611511 -40.07817841]
[165.28181458 -29.34751511]
[152.52902222 -25.01382065]
[155.54331970 -10.42741108]
[143.62126160 -0.02668376]
[138.58433533 14.10234547]
[133.54742432 28.23137474]
[128.51051331 42.36040497]
[135.10658264 55.66556931]
[130.19970703 70.06616974]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[97.92973328 128.14239502]
[92.89281464 142.27142334]
[87.85589600 156.40045166]
[83.13576508 170.63844299]
[86.48357391 186.10139465]
[75.35261536 195.99841309]
[70.95161438 210.33825684]
[66.55062103 224.67810059]
[62.14962387 239.01794434]
[67.49214935 250.75762939]
[63.53133392 262.61071777]
[52.90780640 268.39581299]
[48.29379654 282.66854858]
[43.67978668 296.94128418]
[39.17215729 311.24795532]
[34.77116013 325.58779907]
[30.37016106 339.92764282]
[25.96916389 354.26751709]
[30.50752831 372.11364746]
[17.20354843 383.55789185]
[13.01653767 397.96166992]
[20.37042046 411.69332886]
[15.91900826 426.24118042]
[2.78266144 433.16735840]
[-1.40434980 447.57113647]
[-4.50846004 462.24642944]
[-6.51247358 477.11196899]
[-8.51648712 491.97747803]
[-10.52050114 506.84301758]
[-12.30296707 521.73675537]
[-13.86349010 536.65533447]
[-15.42401314 551.57397461]
[-16.98453522 566.49255371]
[-4.50749159 575.44903564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[15 205]
[16 204]
[17 203]
[18 202]
[29 201]
[30 200]
[33 197]
[34 196]
[37 194]
[38 193]
[39 192]
[40 191]
[42 190]
[43 189]
[44 188]
[46 185]
[47 184]
[48 183]
[49 182]
[51 180]
[55 179]
[56 178]
[57 177]
[58 176]
[60 174]
[61 173]
[64 170]
[65 169]
[66 168]
[67 167]
[69 165]
[72 161]
[73 160]
[74 159]
[75 158]
[76 157]
[79 154]
[80 153]
[81 152]
[83 151]
[86 150]
[87 149]
[88 148]
[90 146]
[93 143]
[94 142]
[95 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
