%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[37.94908524 443.26821899]
[36.37241364 458.21847534]
[32.41783524 472.72216797]
[26.18778610 486.40365601]
[17.84363556 498.90850830]
[7.60152149 509.91284180]
[-4.27326345 519.13159180]
[-17.47313309 526.32598877]
[-31.65617752 531.30975342]
[-46.45502472 533.95367432]
[-61.48634720 534.18927002]
[-76.36079407 532.01055908]
[-90.69309235 527.47387695]
[-104.11199188 520.69671631]
[-116.26990509 511.85473633]
[-126.85192871 501.17684937]
[-135.58395386 488.93969727]
[-142.23979187 475.46023560]
[-146.64706421 461.08761597]
[-148.69158936 446.19412231]
[-148.32041931 431.16555786]
[-145.54315186 416.39114380]
[-140.43176270 402.25360107]
[-133.11860657 389.11914062]
[-123.79313660 377.32797241]
[-112.69689941 367.18551636]
[-100.11731720 358.95446777]
[-86.38022614 352.84802246]
[-71.84145355 349.02438354]
[-56.87757874 347.58258057]
[-41.87621689 348.55996704]
[-27.22593117 351.93121338]
[-21.56314468 338.04119873]
[-15.90035915 324.15115356]
[-10.23757267 310.26113892]
[-11.19920158 307.62799072]
[-11.17575169 304.45529175]
[-9.95648384 301.11630249]
[-7.46956158 298.05368042]
[-3.80205679 295.72915649]
[2.67743897 282.20080566]
[1.19700122 267.37997437]
[14.13640308 258.27600098]
[20.61590004 244.74763489]
[27.09539413 231.21929932]
[33.57489014 217.69094849]
[40.05438614 204.16259766]
[36.33197021 192.65303040]
[41.61942673 181.32931519]
[53.57642746 176.49269104]
[48.60815811 162.49798584]
[55.19150543 148.78250122]
[69.90412903 143.66621399]
[76.58432770 130.23583984]
[83.26451874 116.80546570]
[89.94471741 103.37509155]
[95.91627502 89.61499023]
[101.16299438 75.56251526]
[106.40971375 61.51004410]
[103.98820496 45.87524796]
[115.68851471 36.65830231]
[120.93523407 22.60583115]
[126.18195343 8.55335999]
[131.42866516 -5.49911165]
[136.67538452 -19.55158234]
[130.36318970 -33.79215240]
[135.88429260 -47.96861649]
[149.49938965 -53.89857483]
[154.74610901 -67.95104980]
[159.99282837 -82.00351715]
[165.23954773 -96.05599213]
[170.38151550 -110.14713287]
[175.41842651 -124.27616119]
[180.45533752 -138.40519714]
[165.99089050 -134.43281555]
[153.77742004 -143.14091492]
[152.81823730 -158.11021423]
[163.82041931 -168.30589294]
[178.67356873 -166.21208191]
[186.42832947 -153.37390137]
[192.50216675 -167.08917236]
[198.57600403 -180.80444336]
[204.64982605 -194.51969910]
[210.72366333 -208.23497009]
[197.58131409 -215.48535156]
[185.12089539 -223.85359192]
[173.43725586 -233.27598572]
[162.61927795 -243.68084717]
[152.74932861 -254.98895264]
[143.90251160 -267.11425781]
[136.14614868 -279.96447754]
[129.53929138 -293.44183350]
[124.13221741 -307.44372559]
[119.96607208 -321.86358643]
[117.07257080 -336.59170532]
[115.47372437 -351.51593018]
[115.18170929 -366.52273560]
[116.19874573 -381.49789429]
[118.51708984 -396.32739258]
[122.11911011 -410.89843750]
[126.97737122 -425.10006714]
[133.05491638 -438.82424927]
[140.30549622 -451.96649170]
[148.67390442 -464.42678833]
[158.09646606 -476.11032104]
[168.50146484 -486.92813110]
[179.80970764 -496.79791260]
[191.93515015 -505.64456177]
[204.78547668 -513.40075684]
[218.26292419 -520.00744629]
[232.26487732 -525.41430664]
[246.68481445 -529.58026123]
[261.41296387 -532.47351074]
[276.33721924 -534.07220459]
[291.34402466 -534.36395264]
[306.31915283 -533.34674072]
[321.14865112 -531.02819824]
[335.71963501 -527.42596436]
[349.92120361 -522.56750488]
[363.64526367 -516.48974609]
[376.78741455 -509.23901367]
[389.24758911 -500.87042236]
[400.93099976 -491.44769287]
[411.74865723 -481.04254150]
[421.61831665 -469.73416138]
[430.46478271 -457.60858154]
[438.22076416 -444.75814819]
[444.82727051 -431.28060913]
[450.23394775 -417.27856445]
[454.39968872 -402.85858154]
[457.29278564 -388.13040161]
[458.89120483 -373.20611572]
[459.18280029 -358.19931030]
[458.16534424 -343.22418213]
[455.84658813 -328.39474487]
[452.24414062 -313.82382202]
[447.38549805 -299.62231445]
[441.30755615 -285.89831543]
[434.05661011 -272.75625610]
[425.68786621 -260.29620361]
[416.26495361 -248.61294556]
[405.85964966 -237.79541016]
[394.55114746 -227.92593384]
[382.42544556 -219.07962036]
[369.57489014 -211.32380676]
[356.09729004 -204.71751404]
[342.09515381 -199.31103516]
[327.67510986 -195.14549255]
[312.94689941 -192.25260925]
[298.02258301 -190.65438843]
[283.01577759 -190.36300659]
[268.04067993 -191.38067627]
[253.21124268 -193.69964600]
[238.64036560 -197.30227661]
[224.43893433 -202.16113281]
[218.36509705 -188.44587708]
[212.29125977 -174.73060608]
[206.21743774 -161.01533508]
[200.14360046 -147.30007935]
[194.58436584 -133.36827087]
[189.54745483 -119.23924255]
[184.51054382 -105.11021423]
[185.22544861 -97.75421906]
[179.29202271 -90.80927277]
[174.04530334 -76.75679779]
[168.79858398 -62.70433044]
[163.55186462 -48.65185928]
[169.94911194 -35.24996185]
[164.82838440 -20.92401505]
[150.72785950 -14.30486488]
[145.48114014 -0.25239331]
[140.23442078 13.80007839]
[134.98770142 27.85254860]
[129.74098206 41.90502167]
[132.53776550 56.53469086]
[120.46218872 66.75676727]
[115.21546936 80.80923462]
[109.96875000 94.86170959]
[123.57866669 88.55535126]
[138.09045410 92.35115051]
[146.86950684 104.51372528]
[145.90217590 119.48249817]
[135.63069153 130.41395569]
[120.75106049 132.31037903]
[108.06603241 124.30475616]
[103.37509155 110.05528259]
[96.69489288 123.48566437]
[90.01470184 136.91603088]
[83.33450317 150.34642029]
[88.13094330 165.16639709]
[81.16495514 178.69154358]
[67.00680542 183.17288208]
[68.57464600 201.52018738]
[53.58273315 210.64210510]
[47.10323715 224.17044067]
[40.62374115 237.69879150]
[34.14424515 251.22714233]
[27.66474915 264.75549316]
[28.68173027 280.54397583]
[16.20578384 288.68029785]
[9.72628880 302.20864868]
[3.65245461 315.92391968]
[-2.01033187 329.81396484]
[-7.67311859 343.70397949]
[-13.33590508 357.59399414]
[-0.50449318 365.42669678]
[10.90421391 375.21636963]
[20.59470367 386.70944214]
[28.31596756 399.60818481]
[33.86800766 413.57855225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 205]
[33 204]
[34 203]
[35 202]
[40 201]
[41 200]
[43 198]
[44 197]
[45 196]
[46 195]
[47 194]
[50 192]
[53 189]
[54 188]
[55 187]
[56 186]
[57 178]
[58 177]
[59 176]
[61 174]
[62 173]
[63 172]
[64 171]
[65 170]
[68 167]
[69 166]
[70 165]
[71 164]
[72 162]
[73 161]
[74 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
