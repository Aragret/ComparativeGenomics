%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[90.47723389 419.92141724]
[90.07389069 404.87734985]
[92.61354828 390.04373169]
[97.99858856 375.99072266]
[106.02201843 363.25845337]
[116.37545013 352.33633423]
[128.66091919 343.64416504]
[142.40620422 337.51608276]
[139.08393860 322.88864136]
[136.31135559 320.71029663]
[134.45610046 317.08084106]
[134.18875122 312.44598389]
[135.95541382 307.53414917]
[133.28961182 292.77294922]
[130.62382507 278.01171875]
[127.95802307 263.25051880]
[124.85391998 248.57521057]
[121.31424713 233.99882507]
[117.77457428 219.42245483]
[114.23443604 216.21676636]
[112.67050934 210.75314331]
[114.35338593 204.35943604]
[111.24927521 189.68412781]
[108.14516449 175.00883484]
[105.04105377 160.33352661]
[92.45623779 152.44949341]
[89.09917450 137.61087036]
[97.45400238 124.46421051]
[94.34989166 109.78890991]
[87.02515411 122.87891388]
[73.45392609 129.26809692]
[58.69794083 126.57347870]
[48.26082230 115.80005646]
[46.03535080 100.96607208]
[52.85157776 87.60421753]
[66.16721344 80.69814301]
[81.01586151 82.82364655]
[91.85989380 93.18898773]
[90.52165985 78.24880219]
[89.18342590 63.30861664]
[87.84519196 48.36843109]
[86.50695801 33.42824936]
[85.16872406 18.48806190]
[83.83049011 3.54787779]
[74.89285278 -9.50697613]
[81.46382141 -22.87378311]
[80.12558746 -37.81396866]
[77.50283051 -41.27447510]
[76.24425507 -45.01352692]
[76.26992035 -48.56806564]
[77.35770416 -51.54855728]
[79.17961121 -53.67900467]
[78.73300171 -68.67235565]
[78.28639984 -83.66570282]
[77.83979034 -98.65904999]
[77.39318848 -113.65240479]
[71.13542938 -100.02007294]
[62.37113190 -87.84685516]
[51.42795181 -77.58787537]
[38.71500778 -69.62664795]
[24.70758247 -64.26083374]
[9.92935276 -61.69101715]
[-5.06718540 -62.01328659]
[-19.72137451 -65.21558380]
[-33.48535919 -71.17819977]
[-45.84456253 -79.67820740]
[-56.33692169 -90.39782715]
[-64.57018280 -102.93630981]
[-70.23652649 -116.82488251]
[-73.12412262 -131.54432678]
[-73.12500763 -146.54432678]
[-70.23915863 -161.26409912]
[-64.57445526 -175.15335083]
[-56.34268188 -187.69279480]
[-45.85159302 -198.41366577]
[-33.49339676 -206.91513062]
[-19.73011780 -212.87937927]
[-5.07630825 -216.08341980]
[9.92019176 -216.40745544]
[24.69872475 -213.83940125]
[38.70678711 -208.47523499]
[51.42067337 -200.51551819]
[62.36507034 -190.25782776]
[71.13080597 -178.08564758]
[77.39017487 -164.45405579]
[80.90916443 -149.87268066]
[81.55654144 -134.89273071]
[87.63037872 -148.60800171]
[93.70420837 -162.32327271]
[92.21759796 -178.07447815]
[104.44576263 -186.57865906]
[102.95915222 -202.32987976]
[115.18731689 -210.83406067]
[121.26114655 -224.54933167]
[127.33498383 -238.26460266]
[133.40881348 -251.97985840]
[120.58434296 -259.80212402]
[108.89063263 -269.23144531]
[98.52777100 -280.10647583]
[89.67310333 -292.24111938]
[82.47811890 -305.42776489]
[77.06594849 -319.44073486]
[73.52920532 -334.04028320]
[71.92839050 -348.97656250]
[72.29091644 -363.99398804]
[74.61055756 -378.83563232]
[78.84764099 -393.24749756]
[84.92965698 -406.98300171]
[92.75253296 -419.80712891]
[102.18241119 -431.50039673]
[113.05792999 -441.86273193]
[125.19300842 -450.71682739]
[138.37997437 -457.91116333]
[152.39321899 -463.32266235]
[166.99291992 -466.85873413]
[181.92927551 -468.45883179]
[196.94670105 -468.09558105]
[211.78822327 -465.77523804]
[226.19990540 -461.53747559]
[239.93511963 -455.45480347]
[252.75885010 -447.63131714]
[264.45166016 -438.20086670]
[274.81347656 -427.32485962]
[283.66699219 -415.18936157]
[290.86071777 -402.00204468]
[296.27154541 -387.98855591]
[299.80691528 -373.38870239]
[301.40631104 -358.45227051]
[301.04235840 -343.43484497]
[298.72128296 -328.59344482]
[294.48284912 -314.18194580]
[288.39950562 -300.44702148]
[280.57540894 -287.62368774]
[271.14443970 -275.93130493]
[260.26791382 -265.57000732]
[248.13200378 -256.71707153]
[234.94435120 -249.52397156]
[220.93060303 -244.11380005]
[206.33056641 -240.57913208]
[191.39405823 -238.98045349]
[176.37666321 -239.34512329]
[161.53535461 -241.66688538]
[147.12408447 -245.90603638]
[141.05024719 -232.19076538]
[134.97640991 -218.47549438]
[128.90258789 -204.76022339]
[130.82363892 -189.99003601]
[118.16102600 -180.50483704]
[120.08208466 -165.73463440]
[107.41947937 -156.24943542]
[101.34564209 -142.53416443]
[95.27180481 -128.81889343]
[92.38653564 -114.09900665]
[92.83314514 -99.10565948]
[93.27974701 -84.11231232]
[93.72635651 -69.11895752]
[94.17295837 -54.12561035]
[95.06577301 -39.15220261]
[96.40400696 -24.21201897]
[105.24592590 -12.22578621]
[98.77066803 2.20964360]
[100.10890198 17.14982796]
[101.44714355 32.09001541]
[102.78537750 47.03019714]
[104.12361145 61.97038269]
[105.46184540 76.91056824]
[106.80007935 91.85075378]
[109.02519226 106.68479919]
[112.12930298 121.36009979]
[125.09192657 129.99771118]
[128.03088379 144.92477417]
[119.71635437 157.22941589]
[122.82046509 171.90472412]
[125.92457581 186.58001709]
[129.02868652 201.25532532]
[132.35095215 215.88278198]
[135.89062500 230.45915222]
[139.43029785 245.03553772]
[142.53736877 248.06869507]
[144.33666992 251.57968140]
[144.83857727 255.09869385]
[144.20495605 258.20758057]
[142.71923828 260.58471680]
[145.38504028 275.34591675]
[148.05084229 290.10714722]
[150.71662903 304.86837769]
[153.71141052 319.56637573]
[157.03366089 334.19381714]
[172.07751465 333.78317261]
[186.91236877 336.31564331]
[200.96801758 341.69384766]
[213.70417786 349.71109009]
[224.63133240 360.05923462]
[233.32945251 372.34048462]
[239.46420288 386.08276367]
[242.79978943 400.75793457]
[243.20800781 415.80184937]
[240.67314148 430.63629150]
[235.29266357 444.69107056]
[227.27334595 457.42593384]
[216.92344666 468.35140991]
[204.64079285 477.04754639]
[190.89749146 483.18005371]
[176.22180176 486.51327515]
[161.17782593 486.91906738]
[146.34378052 484.38180542]
[132.28988647 478.99902344]
[119.55632019 470.97766113]
[108.63252258 460.62600708]
[99.93837738 448.34194946]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 188]
[9 187]
[13 186]
[14 185]
[15 184]
[16 183]
[17 178]
[18 177]
[19 176]
[22 175]
[23 174]
[24 173]
[25 172]
[28 169]
[29 168]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 161]
[46 159]
[47 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[87 152]
[88 151]
[89 150]
[91 148]
[93 146]
[94 145]
[95 144]
[96 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
