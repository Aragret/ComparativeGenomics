%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[85.92577362 452.29724121]
[81.26793671 437.91683960]
[81.05739594 422.80236816]
[85.31286621 408.29782104]
[93.65596771 395.69290161]
[105.34483337 386.10842896]
[119.34008789 380.39666748]
[118.00185394 365.45648193]
[116.66362000 350.51629639]
[115.32538605 335.57611084]
[113.98715210 320.63592529]
[112.53773499 305.70611572]
[110.97721100 290.78750610]
[109.41668701 275.86889648]
[107.85616302 260.95031738]
[106.29564667 246.03170776]
[104.73512268 231.11309814]
[103.17459869 216.19448853]
[92.12812042 209.56086731]
[86.84040070 197.59750366]
[89.44683075 184.58148193]
[99.21557617 175.30859375]
[97.87734222 160.36842346]
[96.53910828 145.42823792]
[84.98032379 136.10459900]
[83.41033936 120.97218323]
[93.26820374 108.91149139]
[91.81877899 93.98168182]
[90.25825500 79.06307983]
[87.58426666 75.64200592]
[86.27016449 71.92210388]
[86.24290466 68.36757660]
[87.28619385 65.37122345]
[89.07617188 63.21388626]
[88.40638733 48.22884750]
[87.73660278 33.24380875]
[87.06681824 18.25876999]
[77.70579529 29.97931480]
[63.27442551 34.07024002]
[49.15526581 29.00573349]
[40.61440277 16.67472649]
[40.83737564 1.67638457]
[49.74101639 -10.39528465]
[64.00448608 -15.03784561]
[78.30786896 -10.51973820]
[87.31673431 1.47499871]
[88.43238068 -13.48345470]
[89.54802704 -28.44190788]
[79.64231110 -37.56831741]
[76.84237671 -50.54409409]
[81.95140076 -62.58485794]
[92.89788055 -69.38220978]
[94.23611450 -84.32239532]
[95.57435608 -99.26258087]
[96.91259003 -114.20276642]
[98.25082397 -129.14294434]
[99.58905792 -144.08312988]
[87.41402435 -135.32136536]
[72.58791351 -137.59869385]
[63.60377502 -149.61058044]
[65.60814667 -164.47605896]
[77.45282745 -173.67951965]
[92.35264587 -171.94879150]
[101.77203369 -160.27622986]
[104.43783569 -175.03744507]
[107.10363007 -189.79866028]
[109.76942444 -204.55987549]
[95.22409821 -208.25018311]
[80.97163391 -212.94612122]
[67.08145905 -218.62484741]
[53.62125397 -225.25865173]
[40.65658569 -232.81526184]
[28.25062561 -241.25781250]
[16.46381187 -250.54521179]
[5.35356903 -260.63220215]
[-5.02597380 -271.46963501]
[-14.62424755 -283.00469971]
[-23.39449120 -295.18121338]
[-31.29397583 -307.93984985]
[-38.28421783 -321.21844482]
[-44.33115768 -334.95233154]
[-49.40533447 -349.07455444]
[-53.48203278 -363.51635742]
[-56.54138565 -378.20733643]
[-58.56848907 -393.07595825]
[-59.55346680 -408.04974365]
[-59.49152374 -423.05575562]
[-58.38295746 -438.02093506]
[-56.23317337 -452.87228394]
[-53.05263901 -467.53750610]
[-48.85685730 -481.94515991]
[-43.66626358 -496.02502441]
[-37.50614548 -509.70849609]
[-30.40651894 -522.92895508]
[-22.40197182 -535.62194824]
[-13.53150272 -547.72564697]
[-3.83832502 -559.18109131]
[6.63033438 -569.93243408]
[17.82347298 -579.92736816]
[29.68655968 -589.11712646]
[42.16179657 -597.45697021]
[55.18840408 -604.90631104]
[68.70291901 -611.42877197]
[82.63950348 -616.99261475]
[96.93025208 -621.57073975]
[111.50554657 -625.14080811]
[126.29437256 -627.68548584]
[141.22468567 -629.19232178]
[156.22373962 -629.65405273]
[171.21846008 -629.06829834]
[186.13578796 -627.43804932]
[200.90306091 -624.77117920]
[215.44833374 -621.08062744]
[229.70072937 -616.38446045]
[243.59082031 -610.70556641]
[257.05093384 -604.07159424]
[270.01550293 -596.51477051]
[282.42132568 -588.07202148]
[294.20800781 -578.78448486]
[305.31811523 -568.69732666]
[315.69750977 -557.85974121]
[325.29562378 -546.32452393]
[334.06567383 -534.14788818]
[341.96499634 -521.38916016]
[348.95504761 -508.11044312]
[355.00177002 -494.37649536]
[360.07574463 -480.25418091]
[364.15225220 -465.81234741]
[367.21139526 -451.12130737]
[369.23828125 -436.25268555]
[370.22305298 -421.27886963]
[370.16088867 -406.27282715]
[369.05209351 -391.30770874]
[366.90209961 -376.45635986]
[363.72137451 -361.79116821]
[359.52536011 -347.38360596]
[354.33456421 -333.30380249]
[348.17425537 -319.62042236]
[341.07443237 -306.40008545]
[333.06973267 -293.70721436]
[324.19906616 -281.60363770]
[314.50573730 -270.14834595]
[304.03692627 -259.39712524]
[292.84362793 -249.40235901]
[280.98040771 -240.21275330]
[268.50506592 -231.87307739]
[255.47834778 -224.42396545]
[241.96372986 -217.90168762]
[228.02706909 -212.33804321]
[213.73626709 -207.76011658]
[199.16091919 -204.19023132]
[184.37205505 -201.64576721]
[169.44172668 -200.13912964]
[154.44267273 -199.67765808]
[139.44795227 -200.26359558]
[124.53063965 -201.89407349]
[121.86484528 -187.13285828]
[119.19905090 -172.37164307]
[116.53325653 -157.61042786]
[114.52924347 -142.74490356]
[113.19100952 -127.80471802]
[111.85276794 -112.86453247]
[110.51453400 -97.92434692]
[109.17630005 -82.98416138]
[107.83806610 -68.04397583]
[119.16326904 -55.61101532]
[117.96876526 -38.49704361]
[104.50648499 -27.32625961]
[103.39083862 -12.36780643]
[102.27518463 2.59064746]
[102.05185699 17.58898544]
[102.72164154 32.57402420]
[103.39142609 47.55906296]
[104.06121063 62.54410172]
[105.17686462 77.50255585]
[106.73738861 92.42115784]
[110.64142609 99.47318268]
[108.20838165 107.57325745]
[120.05274200 117.69002533]
[121.19707489 132.86056519]
[111.47929382 144.08999634]
[112.81752777 159.03018188]
[114.15576172 173.97036743]
[127.78285980 184.93948364]
[129.23204041 202.03376770]
[118.09320068 214.63397217]
[119.65372467 229.55256653]
[121.21424866 244.47117615]
[122.77477264 259.38977051]
[124.33529663 274.30838013]
[125.89582062 289.22698975]
[127.45633698 304.14559937]
[131.46156311 312.35510254]
[128.92733765 319.29769897]
[130.26557922 334.23788452]
[131.60380554 349.17807007]
[132.94204712 364.11825562]
[134.28027344 379.05844116]
[149.06784058 382.19204712]
[162.27397156 389.54656982]
[172.72441101 400.46810913]
[179.48988342 413.98550415]
[181.96884155 428.89678955]
[179.94082642 443.87603760]
[173.58618164 457.59136963]
[163.46997070 468.82318115]
[150.49169922 476.57275391]
[135.80538940 480.15100098]
[120.71694946 479.23974609]
[106.56803131 473.92004395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[11 194]
[12 192]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[22 183]
[23 182]
[24 181]
[27 178]
[28 176]
[29 175]
[34 174]
[35 173]
[36 172]
[37 171]
[46 170]
[47 169]
[48 168]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[57 160]
[64 159]
[65 158]
[66 157]
[67 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
