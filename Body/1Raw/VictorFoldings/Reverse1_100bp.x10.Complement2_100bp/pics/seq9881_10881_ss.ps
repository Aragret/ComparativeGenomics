%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-12.90923214 575.90917969]
[-27.49873543 580.02282715]
[-42.61510849 578.89538574]
[-56.43297195 572.66302490]
[-67.28376007 562.07830811]
[-73.85717010 548.41937256]
[-75.35945129 533.33569336]
[-71.60918427 518.64855957]
[-63.05923080 506.13159180]
[-50.74204636 497.29629517]
[-36.14498520 493.20953369]
[-35.02933884 478.25106812]
[-33.91368866 463.29260254]
[-32.79804230 448.33416748]
[-39.56729889 435.06668091]
[-30.82501984 421.88018799]
[-29.70937157 406.92175293]
[-36.47863007 393.65423584]
[-27.73635101 380.46777344]
[-39.77957916 389.40985107]
[-54.63795853 387.35348511]
[-63.79993439 375.47671509]
[-62.01711273 360.58303833]
[-50.31077194 351.20425415]
[-35.38683701 352.71295166]
[-25.79470253 364.24395752]
[-23.34897423 349.44470215]
[-20.90324783 334.64541626]
[-18.45751953 319.84616089]
[-27.31847954 331.94918823]
[-39.08200455 341.25616455]
[-52.89888000 347.09515381]
[-67.77165222 349.04467773]
[-82.62664032 346.96398926]
[-96.39145660 341.00329590]
[-108.07240295 331.59289551]
[-116.82621765 319.41213989]
[-122.02096558 305.34039307]
[-123.28162384 290.39346313]
[-120.51718140 275.65039062]
[-113.92722321 262.17550659]
[-103.98746490 250.94157410]
[-91.41548157 242.75956726]
[-77.11884308 238.22016907]
[-62.12964249 237.65107727]
[-47.52996063 241.09335327]
[-34.37376404 248.29852295]
[-23.61080933 258.74642944]
[-16.01807976 271.68283081]
[-12.14370537 286.17385864]
[-12.26754379 301.17449951]
[-5.38813162 287.84506226]
[1.49128091 274.51562500]
[8.37069321 261.18618774]
[15.25010586 247.85676575]
[22.12951851 234.52734375]
[29.00893211 221.19790649]
[35.88834381 207.86848450]
[42.76775742 194.53904724]
[49.64716721 181.20962524]
[48.60865784 166.35127258]
[61.81338501 157.63658142]
[68.69279480 144.30714417]
[67.65428925 129.44879150]
[80.85900879 120.73410034]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[104.80110931 71.91173553]
[109.62710571 57.70928192]
[114.45310211 43.50682831]
[119.27909851 29.30437088]
[124.10509491 15.10191536]
[128.93109131 0.89945984]
[122.19770050 -13.14686012]
[127.29426575 -27.48142242]
[140.72677612 -33.81412506]
[145.55278015 -48.01658249]
[150.37876892 -62.21903610]
[155.20477295 -76.42149353]
[157.31939697 -91.27169037]
[156.64961243 -106.25672913]
[148.30381775 -119.69764709]
[155.46510315 -132.75772095]
[154.79531860 -147.74275208]
[154.01399231 -162.72239685]
[153.12117004 -177.69580078]
[152.22836304 -192.66920471]
[151.33554077 -207.64260864]
[150.44273376 -222.61601257]
[146.80807495 -230.99617004]
[149.64976501 -237.81867981]
[146.14028931 -246.25202942]
[149.08325195 -253.03146362]
[148.63664246 -268.02481079]
[148.19003296 -283.01815796]
[147.74343872 -298.01150513]
[133.52024841 -303.37521362]
[122.43574524 -313.77725220]
[116.18025208 -327.63140869]
[115.70767975 -342.82498169]
[121.09008789 -357.04110718]
[131.50669861 -368.11190796]
[145.36904907 -374.34918213]
[160.56324768 -374.80175781]
[174.77227783 -369.40066528]
[185.82937622 -358.96948242]
[192.04840088 -345.09893799]
[192.48098755 -329.90417480]
[187.06120300 -315.70223999]
[176.61550903 -304.65890503]
[162.73678589 -298.45812988]
[163.18339539 -283.46478271]
[163.62998962 -268.47143555]
[164.07659912 -253.47807312]
[164.63481140 -238.48846436]
[165.41613770 -223.50883484]
[166.30894470 -208.53541565]
[167.20176697 -193.56201172]
[168.09457397 -178.58860779]
[168.98739624 -163.61520386]
[172.52345276 -157.12535095]
[169.78034973 -148.41253662]
[170.45013428 -133.42750549]
[178.74801636 -121.05841064]
[171.63464355 -106.92651367]
[172.30442810 -91.94147491]
[178.33535767 -105.67566681]
[187.33303833 -117.67740631]
[198.82548523 -127.31710052]
[212.20980835 -134.08908081]
[226.78390503 -137.63810730]
[241.78326416 -137.77798462]
[256.42102051 -134.50138855]
[269.92932129 -127.98020172]
[281.59954834 -118.55651855]
[290.81948853 -106.72467041]
[297.10549927 -93.10534668]
[300.12783813 -78.41298676]
[299.72793579 -63.41831589]
[295.92678833 -48.90793228]
[288.92376709 -35.64302063]
[279.08630371 -24.31942558]
[266.93035889 -15.53116703]
[253.09368896 -9.73925591]
[238.30209351 -7.24752617]
[223.33151245 -8.18668747]
[208.96730042 -12.50747395]
[195.96295166 -19.98322678]
[185.00064087 -30.22178078]
[176.65545654 -42.68604279]
[171.36515808 -56.72216415]
[169.40722656 -71.59549713]
[164.58122253 -57.39303970]
[159.75523376 -43.19058228]
[154.92922974 -28.98812675]
[161.72267151 -15.78264236]
[157.03074646 -1.31058407]
[143.13354492 5.72545767]
[138.30755615 19.92791367]
[133.48155212 34.13036728]
[128.65556335 48.33282471]
[123.82955933 62.53527832]
[119.00356293 76.73773956]
[131.27908325 68.11730957]
[146.21112061 66.69113922]
[159.89649963 72.83201599]
[168.75788879 84.93473816]
[170.47892761 99.83567810]
[164.60977173 113.63977051]
[152.68457031 122.73864746]
[137.82055664 124.75389862]
[123.90315247 119.15872955]
[114.57032776 107.41571808]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[94.18843842 127.61351776]
[94.73488617 143.42527771]
[82.02222443 151.18655396]
[75.14281464 164.51599121]
[75.68926239 180.32775879]
[62.97659683 188.08903503]
[56.09718704 201.41845703]
[49.21777344 214.74789429]
[42.33835983 228.07731628]
[35.45894623 241.40675354]
[28.57953453 254.73617554]
[21.70012283 268.06561279]
[14.82071018 281.39505005]
[7.94129753 294.72445679]
[1.06188512 308.05389404]
[-3.65824914 322.29190063]
[-6.10397673 337.09115601]
[-8.54970360 351.89044189]
[-10.99543095 366.68969727]
[-12.77789688 381.58340454]
[-6.08843708 395.92083740]
[-14.75091743 408.03738403]
[-15.86656666 422.99584961]
[-9.17710686 437.33325195]
[-17.83958626 449.44979858]
[-18.95523643 464.40826416]
[-20.07088470 479.36672974]
[-21.18653297 494.32516479]
[-7.35720587 500.53207397]
[3.51306510 511.09677124]
[10.11164188 524.74353027]
[11.64171505 539.82446289]
[7.91851997 554.51849365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 205]
[12 204]
[13 203]
[14 202]
[16 200]
[17 199]
[19 197]
[26 196]
[27 195]
[28 194]
[29 193]
[51 192]
[52 191]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[60 183]
[62 181]
[63 180]
[65 178]
[66 177]
[68 175]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[77 156]
[78 155]
[79 154]
[80 153]
[81 127]
[82 126]
[84 124]
[85 123]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[92 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
