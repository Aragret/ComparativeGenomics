%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[64.92978668 501.15545654]
[77.40682983 492.19897461]
[75.84630585 477.28036499]
[74.28578186 462.36175537]
[72.72525787 447.44314575]
[63.70586395 435.58990479]
[69.96547699 421.05966187]
[64.11254120 434.87063599]
[53.93968964 445.89392090]
[40.64202881 452.83453369]
[25.78174591 454.87710571]
[11.10461712 451.78164673]
[-1.66510415 443.91180420]
[-11.02724361 432.19213867]
[-15.88194656 417.99948120]
[-15.65888786 403.00112915]
[-10.38427162 388.95910645]
[-0.67775416 377.52304077]
[12.32035160 370.03643799]
[27.08304214 367.37881470]
[41.87601089 369.86239624]
[54.96139145 377.19537354]
[64.80193329 388.51632690]
[70.24188232 402.49676514]
[72.24589539 387.63125610]
[74.24990845 372.76571655]
[68.28234863 359.11883545]
[77.79399872 346.47610474]
[79.79801941 331.61056519]
[81.80203247 316.74502563]
[79.67020416 312.47134399]
[80.20044708 306.81311035]
[84.09340668 301.46926880]
[86.53913116 286.67001343]
[88.98485565 271.87072754]
[80.08935547 262.54873657]
[78.15837097 249.61222839]
[84.11848450 237.75105286]
[95.99401093 231.39602661]
[98.65980530 216.63481140]
[101.32560730 201.87359619]
[103.99140167 187.11238098]
[106.65719604 172.35116577]
[106.21058655 157.35781860]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[84.76594543 82.31017303]
[86.34990692 75.09124756]
[83.02764893 60.46378708]
[79.70539093 45.83632660]
[74.75300598 38.16093063]
[76.44427490 30.96639061]
[73.34016418 16.29108810]
[70.23605347 1.61578655]
[67.13194275 -13.05951595]
[56.70631027 -24.95980072]
[61.64233398 -39.01273346]
[58.53822327 -53.68803787]
[55.43411255 -68.36333466]
[42.47149277 -77.00094604]
[39.53253937 -91.92800903]
[47.84706116 -104.23265076]
[44.74295044 -118.90795898]
[41.63883972 -133.58325195]
[38.53472900 -148.25856018]
[35.32145691 -162.91035461]
[31.99919701 -177.53781128]
[28.67693710 -192.16526794]
[25.35467720 -206.79272461]
[22.03241920 -221.42018127]
[18.27611732 -235.94224548]
[14.08910656 -250.34602356]
[-0.79753703 -248.29524231]
[-15.82413387 -248.43392944]
[-30.67039299 -250.75910950]
[-45.01986313 -255.22123718]
[-58.56668472 -261.72518921]
[-71.02210999 -270.13235474]
[-82.12064362 -280.26351929]
[-91.62572479 -291.90270996]
[-99.33475494 -304.80187988]
[-105.08341217 -318.68609619]
[-108.74916077 -333.25936890]
[-110.25386810 -348.21105957]
[-109.56546021 -363.22253418]
[-106.69861603 -377.97375488]
[-101.71443176 -392.15036011]
[-94.71915436 -405.45013428]
[-85.86188507 -417.58959961]
[-75.33141327 -428.30999756]
[-63.35221100 -437.38284302]
[-50.17959976 -444.61474609]
[-36.09436035 -449.85153198]
[-21.39672279 -452.98156738]
[-6.39996481 -453.93820190]
[8.57625484 -452.70098877]
[23.21271896 -449.29632568]
[37.19744873 -443.79675293]
[50.23235703 -436.31951904]
[62.03960800 -427.02398682]
[72.36753082 -416.10833740]
[80.99597931 -403.80517578]
[87.74103546 -390.37677002]
[92.45893860 -376.10934448]
[95.04911804 -361.30700684]
[95.45636749 -346.28530884]
[93.67200470 -331.36437988]
[89.73406982 -316.86230469]
[83.72648621 -303.08816528]
[75.77731323 -290.33557129]
[66.05599976 -278.87634277]
[54.76973343 -268.95474243]
[42.15909958 -260.78222656]
[28.49288940 -254.53303528]
[32.67990112 -240.12925720]
[35.06879807 -238.66252136]
[37.02064133 -236.16114807]
[38.13844299 -232.78683472]
[38.09102249 -228.84193420]
[36.65987778 -224.74244690]
[39.98213959 -210.11499023]
[43.30439758 -195.48753357]
[46.62665558 -180.86006165]
[49.94891739 -166.23260498]
[54.49580765 -160.40615845]
[53.21003342 -151.36267090]
[56.31414413 -136.68736267]
[59.41825485 -122.01206207]
[62.52236176 -107.33676147]
[75.10717773 -99.45272827]
[78.46424103 -84.61410522]
[70.10941315 -71.46744537]
[73.21352386 -56.79214478]
[76.31763458 -42.11684418]
[86.52124023 -31.26623535]
[81.80724335 -16.16362572]
[84.91135406 -1.48832357]
[88.01546478 13.18697834]
[91.11957550 27.86228180]
[94.33284760 42.51406860]
[97.65510559 57.14152908]
[100.97736359 71.76898956]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[120.78696442 153.81814575]
[124.05754089 139.17904663]
[130.26115417 125.52198029]
[139.13401794 113.42767334]
[150.29885864 103.41037750]
[163.28094482 95.89601898]
[177.52825928 91.20413208]
[192.43501282 89.53420258]
[207.36735535 90.95724487]
[221.69036865 95.41274261]
[234.79501343 102.71125793]
[246.12408447 112.54244232]
[255.19584656 124.48828125]
[261.62460327 138.04081726]
[265.13696289 152.62379456]
[265.58355713 167.61714172]
[262.94546509 182.38334656]
[257.33483887 196.29450989]
[248.99018860 208.75914001]
[238.26640320 219.24725342]
[225.61943054 227.31285095]
[211.58702087 232.61300659]
[196.76585388 234.92234802]
[181.78613281 234.14268494]
[167.28479004 230.30715942]
[153.87844849 223.57887268]
[142.13714600 214.24389648]
[132.56011963 202.69918823]
[125.55458832 189.43560791]
[121.41841125 175.01696777]
[118.75261688 189.77818298]
[116.08682251 204.53939819]
[113.42102814 219.30061340]
[110.75523376 234.06182861]
[120.99117279 248.24790955]
[117.86194611 265.11572266]
[103.78412628 274.31646729]
[101.33840179 289.11572266]
[98.89267731 303.91500854]
[96.66755676 318.74905396]
[94.66354370 333.61456299]
[92.65953064 348.48010254]
[98.48374939 363.19027710]
[89.11544037 374.76974487]
[87.11142731 389.63525391]
[85.10741425 404.50079346]
[84.88408661 419.49914551]
[94.01509857 432.41946411]
[87.64386749 445.88262939]
[89.20438385 460.80123901]
[90.76490784 475.71984863]
[92.32543182 490.63842773]
[106.38585663 496.81906128]
[115.45928955 509.21133423]
[117.10502625 524.48181152]
[110.88036346 538.52276611]
[98.45971680 547.55731201]
[83.18416595 549.15521240]
[69.16276550 542.88653564]
[60.16719437 530.43762207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[5 199]
[7 197]
[24 196]
[25 195]
[26 194]
[28 192]
[29 191]
[30 190]
[33 189]
[34 188]
[35 187]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 151]
[45 150]
[46 149]
[47 148]
[49 146]
[51 145]
[52 144]
[53 143]
[55 142]
[56 141]
[57 140]
[58 139]
[60 137]
[61 136]
[62 135]
[65 132]
[66 131]
[67 130]
[68 129]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[74 118]
[75 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
