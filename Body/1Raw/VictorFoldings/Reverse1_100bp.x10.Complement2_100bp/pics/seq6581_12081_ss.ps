%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[188.44956970 406.24865723]
[197.05892944 393.93637085]
[207.26469421 382.91110229]
[218.87669373 373.37826538]
[211.02494812 360.59741211]
[203.17318726 347.81658936]
[195.32144165 335.03573608]
[187.46968079 322.25488281]
[179.61791992 309.47406006]
[173.64663696 323.23428345]
[159.20599365 327.29232788]
[146.94110107 318.65679932]
[145.89318848 303.69345093]
[156.83473206 293.43270874]
[171.69865417 295.43753052]
[164.81922913 282.10809326]
[157.93981934 268.77865601]
[154.34288025 283.34100342]
[142.94802856 293.09588623]
[128.00524902 294.40490723]
[115.08785248 286.77990723]
[109.01369476 273.06478882]
[112.04828644 258.37493896]
[123.05979919 248.18934631]
[137.94122314 246.30696106]
[151.14294434 253.43070984]
[145.89622498 239.37823486]
[140.64950562 225.32575989]
[126.53119659 214.90270996]
[129.72966003 196.76844788]
[124.27429962 182.79565430]
[112.43805695 173.75392151]
[114.62651825 158.08480835]
[109.17115784 144.11201477]
[103.71580505 130.13922119]
[98.26044464 116.16641998]
[84.89817810 106.02610016]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[76.28306580 61.69220734]
[70.62027740 47.80218124]
[67.85186005 62.54449844]
[59.03101730 74.67679596]
[45.86091995 81.85652924]
[30.88450813 82.69739532]
[16.99349022 77.03704071]
[6.87000465 65.96839142]
[2.46873879 51.62862778]
[4.63950729 36.78653336]
[12.96316910 24.30788422]
[25.83255577 16.60211372]
[40.76279068 15.15708542]
[54.87107849 20.25181007]
[65.43400574 30.90365791]
[62.32989502 16.22835541]
[59.22578430 1.55305374]
[56.12167740 -13.12224865]
[53.01756668 -27.79755020]
[49.91345596 -42.47285461]
[46.80934525 -57.14815521]
[43.31910706 -61.02956390]
[41.81693268 -65.42237091]
[42.16469955 -69.48366547]
[43.90976715 -72.54750061]
[41.46403885 -87.34677124]
[39.01831055 -102.14604187]
[29.42533684 -90.61457062]
[14.50133038 -89.10659027]
[2.79543948 -98.48593140]
[1.01333046 -113.37969208]
[10.17587662 -125.25604248]
[25.03435516 -127.31167603]
[37.07666397 -118.36984253]
[35.96101379 -133.32829285]
[34.84536743 -148.28674316]
[33.72971725 -163.24519348]
[32.61406708 -178.20365906]
[31.49841881 -193.16210938]
[30.38277054 -208.12055969]
[29.26712227 -223.07901001]
[18.54907417 -238.05249023]
[26.77982712 -253.55157471]
[17.22931671 -241.98490906]
[2.50162911 -239.13969421]
[-10.66993523 -246.31674194]
[-16.26351357 -260.23477173]
[-11.72179890 -274.53067017]
[0.87879986 -282.66854858]
[15.77745724 -280.92785645]
[26.16346359 -270.10275269]
[26.38679123 -285.10107422]
[26.61012077 -300.09942627]
[26.83344841 -315.09774780]
[27.05677605 -330.09609985]
[27.28010368 -345.09442139]
[27.50343132 -360.09277344]
[27.72675896 -375.09109497]
[27.95008659 -390.08944702]
[13.86946869 -395.75518799]
[2.78905869 -406.12768555]
[-3.79260898 -419.80416870]
[-4.98541784 -434.93499756]
[-0.62805033 -449.47381592]
[8.69019508 -461.45443726]
[21.70910263 -469.25650024]
[36.66797256 -471.82492065]
[51.54373932 -468.81225586]
[64.32457733 -460.62603760]
[73.28198242 -448.37329102]
[77.20454407 -433.71118164]
[75.56176758 -418.62258911]
[68.57581329 -405.14813232]
[57.19149017 -395.11010742]
[42.94842529 -389.86611938]
[42.72509766 -374.86776733]
[42.50176620 -359.86944580]
[42.27843857 -344.87109375]
[42.05511093 -329.87277222]
[41.83178329 -314.87442017]
[41.60845566 -299.87609863]
[41.38512802 -284.87774658]
[41.16180038 -269.87942505]
[41.72001266 -254.88980103]
[50.79839325 -246.89546204]
[52.03556824 -234.45950317]
[44.22557449 -224.19465637]
[45.34122467 -209.23620605]
[46.45687103 -194.27775574]
[47.57252121 -179.31930542]
[48.68817139 -164.36085510]
[49.80381775 -149.40238953]
[50.91946793 -134.44393921]
[52.03511810 -119.48548889]
[53.81758118 -104.59177399]
[56.26330948 -89.79250336]
[58.70903778 -74.99322510]
[61.48464966 -60.25226593]
[64.58876038 -45.57696533]
[67.69287109 -30.90166092]
[70.79698181 -16.22635841]
[73.90108490 -1.55105639]
[77.00519562 13.12424564]
[80.10930634 27.79954910]
[84.51030731 42.13939667]
[90.17309570 56.02942276]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[111.94190216 88.96505737]
[116.25827789 99.78218079]
[112.23324585 110.71105957]
[117.68859863 124.68386078]
[123.14395905 138.65666199]
[128.59931946 152.62945557]
[140.82575989 162.67060852]
[138.24710083 177.34028625]
[143.70245361 191.31309509]
[155.18026733 197.19718933]
[159.43638611 208.94746399]
[154.70198059 220.07904053]
[159.94869995 234.13151550]
[165.19541931 248.18399048]
[171.26925659 261.89926147]
[178.14866638 275.22869873]
[185.02807617 288.55810547]
[192.39877319 301.62228394]
[200.25051880 314.40313721]
[208.10227966 327.18399048]
[215.95402527 339.96481323]
[223.80578613 352.74566650]
[231.65754700 365.52651978]
[245.40962219 359.47720337]
[259.85736084 355.35690308]
[274.73156738 353.24234009]
[289.75518799 353.17291260]
[304.64831543 355.14993286]
[319.13351440 359.13653564]
[332.94088745 365.05850220]
[345.81329346 372.80545044]
[357.51086426 382.23309326]
[367.81570435 393.16580200]
[376.53585815 405.39987183]
[383.50881958 418.70745850]
[388.60473633 432.84057617]
[391.72866821 447.53598022]
[392.82238770 462.51989746]
[391.86557007 477.51315308]
[388.87597656 492.23648071]
[383.90936279 506.41555786]
[377.05822754 519.78625488]
[368.45019531 532.09948730]
[358.24563599 543.12585449]
[346.63464355 552.65997314]
[333.83355713 560.52416992]
[320.08081055 566.57196045]
[305.63262939 570.69067383]
[290.75817871 572.80364990]
[275.73455811 572.87145996]
[260.84167480 570.89282227]
[246.35690308 566.90466309]
[232.55014038 560.98120117]
[219.67858887 553.23284912]
[207.98204041 543.80395508]
[197.67837524 532.87011719]
[188.95956421 520.63507080]
[181.98802185 507.32678223]
[176.89364624 493.19308472]
[173.77130127 478.49734497]
[172.67919922 463.51333618]
[173.63764954 448.52014160]
[176.62881470 433.79714966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[15 164]
[16 163]
[17 162]
[26 161]
[27 160]
[28 159]
[30 156]
[31 155]
[33 153]
[34 152]
[35 151]
[36 150]
[38 147]
[39 146]
[40 145]
[41 144]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[64 136]
[65 135]
[66 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[82 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
