%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[142.47949219 517.22515869]
[155.12663269 508.60491943]
[153.34417725 493.71121216]
[151.56170654 478.81747437]
[149.77923584 463.92376709]
[138.59745789 473.92214966]
[123.78390503 471.56451416]
[116.25856781 458.58877563]
[121.56885529 444.56021118]
[135.80021667 439.82012939]
[148.46093750 447.86135864]
[147.79115295 432.87631226]
[147.12136841 417.89126587]
[135.99044800 408.06082153]
[135.09771729 392.87338257]
[145.48428345 381.26489258]
[144.81449890 366.27987671]
[144.14471436 351.29483032]
[142.91773987 336.34509277]
[141.13526917 321.45138550]
[139.35281372 306.55764771]
[137.57034302 291.66394043]
[135.78787231 276.77023315]
[126.59300232 265.05255127]
[132.63558960 250.43074036]
[130.85311890 235.53701782]
[121.65825653 223.81936646]
[127.70084381 209.19754028]
[125.91837311 194.30381775]
[122.37870026 179.72744751]
[117.13198853 165.67497253]
[111.88526917 151.62249756]
[97.76695251 141.19944763]
[100.96540833 123.06518555]
[95.51005554 109.09239197]
[89.87796021 103.32592773]
[90.07919312 94.87072754]
[84.83247375 80.81826019]
[79.58575439 66.76578522]
[68.19682312 60.71145630]
[64.11611176 48.89910889]
[69.01573181 37.83925629]
[63.97881317 23.71022606]
[52.05675507 13.30949879]
[55.07104492 -1.27691054]
[50.03413010 -15.40594006]
[44.99721527 -29.53496933]
[39.96029663 -43.66399765]
[34.92338181 -57.79302979]
[18.98359108 -65.00013733]
[13.29983234 -81.18685150]
[20.92841530 -96.17496490]
[15.68169785 -110.22743225]
[10.43497944 -124.27990723]
[5.58682537 -128.77511597]
[3.97811079 -134.22572327]
[5.24807882 -138.82965088]
[0.42208138 -153.03210449]
[-4.40391636 -167.23457336]
[-9.22991371 -181.43702698]
[-14.05591202 -195.63948059]
[-17.98265076 -199.07862854]
[-19.99618530 -203.26181030]
[-20.13348961 -207.33566284]
[-18.76486588 -210.58514404]
[-24.16531754 -217.95216370]
[-22.90527534 -225.23461914]
[-26.98494148 -239.66917419]
[-31.17195320 -254.07295227]
[-35.35896301 -268.47674561]
[-39.54597473 -282.88052368]
[-44.94642639 -290.24752808]
[-43.68638611 -297.52999878]
[-47.65848160 -311.99450684]
[-62.55251312 -310.02435303]
[-77.57608795 -310.10064697]
[-92.44934082 -312.22204590]
[-106.89517212 -316.34899902]
[-120.64447784 -322.40460205]
[-133.44111633 -330.27606201]
[-145.04667664 -339.81674194]
[-155.24497986 -350.84887695]
[-163.84602356 -363.16699219]
[-170.68959045 -376.54156494]
[-175.64816284 -390.72348022]
[-178.62937927 -405.44848633]
[-179.57771301 -420.44229126]
[-178.47547913 -435.42559814]
[-175.34321594 -450.11920166]
[-170.23928833 -464.24945068]
[-163.25875854 -477.55307007]
[-154.53167725 -489.78219604]
[-144.22064209 -500.70904541]
[-132.51771545 -510.13006592]
[-119.64093018 -517.86968994]
[-105.83016968 -523.78381348]
[-91.34272766 -527.76220703]
[-76.44847870 -529.73077393]
[-61.42490768 -529.65283203]
[-46.55189133 -527.52984619]
[-32.10650253 -523.40130615]
[-18.35785484 -517.34423828]
[-5.56207180 -509.47137451]
[6.04246664 -499.92944336]
[16.23957443 -488.89620972]
[24.83928680 -476.57714844]
[31.68139458 -463.20184326]
[36.63843536 -449.01940918]
[39.61806488 -434.29406738]
[40.56476593 -419.30014038]
[39.46091080 -404.31698608]
[36.32706070 -389.62368774]
[31.22159767 -375.49401855]
[24.23963165 -362.19116211]
[15.51123333 -349.96295166]
[5.19900751 -339.03720093]
[-6.50493526 -329.61746216]
[-19.38255692 -321.87921143]
[-33.19395828 -315.96661377]
[-29.22186089 -301.50207520]
[-25.14219284 -287.06753540]
[-20.95518303 -272.66375732]
[-16.76817131 -258.25997925]
[-12.58115959 -243.85618591]
[-7.69553185 -238.31069946]
[-8.44075108 -229.20671082]
[-4.36108446 -214.77215576]
[0.14654407 -200.46546936]
[4.97254181 -186.26301575]
[9.79853916 -172.06056213]
[14.62453747 -157.85810852]
[19.45053482 -143.65565491]
[24.48745155 -129.52662659]
[29.73416901 -115.47415161]
[34.98088837 -101.42167664]
[47.33658218 -97.76568604]
[55.45169067 -87.50765991]
[56.18777847 -74.25365448]
[49.05241013 -62.82994461]
[54.08932877 -48.70091629]
[59.12624359 -34.57188416]
[64.16316223 -20.44285583]
[69.20007324 -6.31382656]
[80.76185608 3.07629776]
[78.10784149 18.67330933]
[83.14476013 32.80233765]
[97.10632324 43.43444061]
[93.63822937 61.51906967]
[98.88494873 75.57154083]
[104.13166809 89.62400818]
[109.48284912 103.63703156]
[114.93820953 117.60983276]
[126.41602325 123.49392700]
[130.67214966 135.24421692]
[125.93773651 146.37577820]
[131.18446350 160.42825317]
[136.43116760 174.48072815]
[138.63908386 159.64411926]
[145.72734070 146.42456055]
[156.86323547 136.37509155]
[170.73852539 130.67630005]
[185.72317505 129.99769592]
[200.05677795 134.41897583]
[212.05545044 143.42074585]
[220.30960083 155.94548035]
[223.84953308 170.52178955]
[222.25938416 185.43727112]
[215.72596741 198.93965149]
[205.01679993 209.44270325]
[191.39001465 215.71252441]
[176.44645691 217.01254272]
[161.94168091 213.19004822]
[149.57969666 204.69409180]
[140.81208801 192.52136230]
[142.59455872 207.41506958]
[151.91693115 220.19802856]
[145.74684143 233.75456238]
[147.52931213 248.64826965]
[156.85166931 261.43124390]
[150.68159485 274.98776245]
[152.46406555 289.88146973]
[154.24652100 304.77520752]
[156.02899170 319.66891479]
[157.81146240 334.56262207]
[168.99324036 324.56423950]
[183.80679321 326.92187500]
[191.33212280 339.89761353]
[186.02183533 353.92617798]
[171.79048157 358.66625977]
[159.12976074 350.62503052]
[159.79954529 365.61007690]
[160.46932983 380.59512329]
[171.85012817 391.23068237]
[172.31591797 406.43716431]
[162.10641479 417.22149658]
[162.77619934 432.20654297]
[163.44598389 447.19155884]
[164.67295837 462.14129639]
[166.45542908 477.03500366]
[168.23788452 491.92874146]
[170.02035522 506.82244873]
[184.34449768 512.21478271]
[194.51329041 523.65393066]
[198.19001770 538.51129150]
[194.52980042 553.37268066]
[184.37370300 564.82312012]
[170.05555725 570.23132324]
[154.86553955 568.35461426]
[142.29421997 559.62420654]
[135.23039246 546.04620361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[11 197]
[12 196]
[13 195]
[16 192]
[17 191]
[18 190]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[25 178]
[26 177]
[28 175]
[29 174]
[30 157]
[31 156]
[32 155]
[34 152]
[35 151]
[37 150]
[38 149]
[39 148]
[42 146]
[43 145]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[52 135]
[53 134]
[54 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[65 127]
[67 126]
[68 124]
[69 123]
[70 122]
[71 121]
[73 120]
[74 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
