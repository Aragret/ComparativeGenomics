%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[51.84080124 488.05618286]
[46.82252884 502.21154785]
[40.13456726 515.65881348]
[31.87444878 528.20184326]
[22.16262436 539.65777588]
[11.14072323 549.85949707]
[-1.03052199 558.65826416]
[-14.17361927 565.92572021]
[-28.09690285 571.55596924]
[-42.59733200 575.46679688]
[-57.46344376 577.60131836]
[-72.47845459 577.92828369]
[-87.42339325 576.44293213]
[-102.08032227 573.16699219]
[-116.23549652 568.14819336]
[-129.68249512 561.45971680]
[-142.22521973 553.19915771]
[-153.68077087 543.48687744]
[-163.88208008 532.46459961]
[-172.68037415 520.29302979]
[-179.94737244 507.14968872]
[-185.57708740 493.22619629]
[-189.48741150 478.72561646]
[-191.62133789 463.85940552]
[-191.94775391 448.84439087]
[-190.46186829 433.89950562]
[-187.18537903 419.24270630]
[-182.16604614 405.08770752]
[-175.47708130 391.64096069]
[-167.21601868 379.09854126]
[-157.50334167 367.64337158]
[-146.48068237 357.44247437]
[-134.30877686 348.64462280]
[-121.16513062 341.37811279]
[-107.24142456 335.74893188]
[-92.74070740 331.83914185]
[-77.87443542 329.70578003]
[-62.85940170 329.37991333]
[-47.91457367 330.86636353]
[-33.25788879 334.14340210]
[-19.10309029 339.16326904]
[-12.42289543 325.73287964]
[-5.74270058 312.30252075]
[0.93749422 298.87213135]
[-4.03077316 284.87744141]
[2.55257344 271.16195679]
[17.26519966 266.04565430]
[23.94539452 252.61529541]
[30.62558746 239.18492126]
[36.90295029 225.56159973]
[34.76220322 210.82164001]
[47.28218460 201.14895630]
[53.15114594 187.34478760]
[59.02010727 173.54060364]
[64.88906860 159.73643494]
[70.75802612 145.93225098]
[69.83399963 141.24661255]
[71.84365845 135.93075562]
[77.01272583 131.80859375]
[83.29008484 118.18527222]
[89.56744385 104.56195831]
[76.18631744 111.34026337]
[61.25426865 109.91410065]
[49.39815903 100.72537231]
[44.29172897 86.62132263]
[47.51726151 71.97222900]
[58.07529449 61.31727982]
[72.69430542 57.95802307]
[86.84442902 62.93536758]
[96.14110565 74.70702362]
[97.70359802 89.62567139]
[105.74477386 76.96314240]
[113.78594971 64.30062103]
[121.82711792 51.63809586]
[129.86828613 38.97557068]
[137.90946960 26.31304359]
[145.95063782 13.65051937]
[153.99180603 0.98799431]
[162.03298950 -11.67453098]
[159.98991394 -24.40986252]
[166.94812012 -34.79096603]
[178.72433472 -37.55635452]
[186.95314026 -50.09775543]
[195.18194580 -62.63915253]
[193.32872009 -75.40349579]
[200.44070435 -85.67984772]
[212.25677490 -88.26959991]
[220.67140198 -100.68709564]
[229.08601379 -113.10459137]
[237.22123718 -125.70690155]
[245.07298279 -138.48774719]
[252.92474365 -151.26858521]
[260.77648926 -164.04942322]
[265.60250854 -178.25189209]
[267.16302490 -193.17048645]
[268.72354126 -208.08909607]
[270.28405762 -223.00770569]
[271.84460449 -237.92630005]
[257.80612183 -243.47824097]
[245.78681946 -252.61273193]
[236.67861938 -264.65197754]
[231.15737915 -278.70254517]
[229.63284302 -293.72180176]
[232.21810913 -308.59524536]
[238.72135925 -322.21911621]
[248.66000366 -333.58248901]
[261.29650879 -341.84207153]
[275.69320679 -346.38500977]
[290.78170776 -346.87414551]
[305.44241333 -343.27316284]
[318.58734131 -335.84933472]
[329.24105835 -325.15350342]
[336.61303711 -311.97940063]
[340.15615845 -297.30465698]
[339.60757446 -282.21817017]
[335.00793457 -267.83950806]
[326.69857788 -255.23565674]
[315.29611206 -245.34188843]
[301.64669800 -238.89239502]
[286.76318359 -236.36578369]
[285.20266724 -221.44717407]
[283.64215088 -206.52856445]
[282.08163452 -191.60997009]
[280.52108765 -176.69136047]
[288.54403687 -189.36544800]
[298.85614014 -200.25860596]
[311.07180786 -208.96360779]
[324.73440552 -215.15499878]
[339.33316040 -218.60130310]
[354.32223511 -219.17369080]
[369.14126587 -216.85076904]
[383.23626709 -211.71936035]
[396.08023071 -203.97132874]
[407.19302368 -193.89631653]
[416.15917969 -181.87100220]
[422.64346313 -168.34495544]
[426.40350342 -153.82385254]
[427.29867554 -138.85058594]
[425.29553223 -123.98494720]
[420.46899414 -109.78267670]
[412.99945068 -96.77475739]
[403.16619873 -85.44748688]
[391.33682251 -76.22434998]
[377.95361328 -69.45015717]
[363.51690674 -65.37817383]
[348.56640625 -64.16062164]
[333.66104126 -65.84303284]
[319.35809326 -70.36249542]
[306.19226074 -77.55005646]
[294.65579224 -87.13700104]
[285.17993164 -98.76491547]
[278.11898804 -111.99908447]
[273.73693848 -126.34472656]
[272.19757080 -141.26553345]
[273.55734253 -156.19767761]
[265.70559692 -143.41682434]
[257.85382080 -130.63598633]
[250.00207520 -117.85514832]
[250.46134949 -114.35923767]
[249.25016785 -110.46717834]
[246.20079041 -106.96652985]
[241.50350952 -104.68997192]
[233.08889771 -92.27247620]
[224.67427063 -79.85498047]
[224.35749817 -62.30885315]
[207.72334290 -54.41034698]
[199.49453735 -41.86894608]
[191.26573181 -29.32754517]
[191.21022034 -11.77864742]
[174.69551086 -3.63335776]
[166.65434265 9.02916718]
[158.61315918 21.69169235]
[150.57199097 34.35421753]
[142.53082275 47.01674271]
[134.48963928 59.67926788]
[126.44847107 72.34178925]
[118.40729523 85.00431824]
[110.36612701 97.66683960]
[103.19075775 110.83931732]
[96.91339874 124.46263123]
[90.63603973 138.08595276]
[84.56220245 151.80122375]
[78.69324493 165.60539246]
[72.82427979 179.40957642]
[66.95532227 193.21374512]
[61.08636093 207.01792908]
[62.80731964 222.74525452]
[50.70712662 231.43055725]
[51.38692856 235.71913147]
[50.73250580 239.60966492]
[49.03282166 242.73159790]
[46.66750336 244.84628296]
[44.05596542 245.86511230]
[37.37577057 259.29547119]
[30.69557571 272.72586060]
[35.49200821 287.54583740]
[28.52602005 301.07098389]
[14.36787033 305.55233765]
[7.68767548 318.98269653]
[1.00748098 332.41308594]
[-5.67271376 345.84347534]
[6.87063169 354.10311890]
[18.32690239 363.81451416]
[28.52903366 374.83602905]
[37.32824707 387.00695801]
[44.59622574 400.14978027]
[50.22697830 414.07284546]
[54.13839340 428.57312012]
[56.27343369 443.43914795]
[56.60095978 458.45416260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 201]
[42 200]
[43 199]
[44 198]
[47 195]
[48 194]
[49 193]
[50 188]
[52 186]
[53 185]
[54 184]
[55 183]
[56 182]
[59 181]
[60 180]
[61 179]
[71 178]
[72 177]
[73 176]
[74 175]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[82 168]
[83 167]
[84 166]
[87 164]
[88 163]
[89 162]
[90 158]
[91 157]
[92 156]
[93 155]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
