%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[140.23406982 558.71343994]
[137.29400635 543.98309326]
[136.26181030 528.99761963]
[137.15444946 514.00323486]
[139.95724487 499.24612427]
[144.62417603 484.96859741]
[151.07862854 471.40509033]
[159.21458435 458.77835083]
[168.89845276 447.29574585]
[179.97123718 437.14575195]
[192.25108337 428.49511719]
[205.53636169 421.48583984]
[200.28964233 407.43338013]
[195.04292297 393.38092041]
[189.79620361 379.32843018]
[184.54948425 365.27597046]
[171.10517883 366.07983398]
[157.96229553 363.06100464]
[146.18696594 356.45462036]
[136.73712158 346.78732300]
[130.38455200 334.83505249]
[127.65192413 321.56106567]
[128.76971436 308.03799438]
[133.65687561 295.36145020]
[141.92658997 284.56106567]
[152.91688538 276.51699829]
[148.09089661 262.31454468]
[143.26489258 248.11209106]
[138.43890381 233.90962219]
[124.63717651 223.07084656]
[128.37414551 205.03985596]
[123.33722687 190.91082764]
[118.30030823 176.78178406]
[113.09326935 171.53692627]
[113.29528809 162.40473938]
[108.46929169 148.20228577]
[97.04859161 138.64106750]
[99.93453217 123.08528900]
[95.10853577 108.88283539]
[89.73954773 102.87063599]
[90.31812286 94.43286133]
[85.70411682 80.16012573]
[81.09010315 65.88739014]
[76.36997223 51.64940262]
[64.60408783 41.07232666]
[67.83521271 26.53241158]
[62.58849335 12.47994137]
[56.92570877 -1.41008580]
[51.26292038 -15.30011272]
[45.60013199 -29.19013977]
[39.83409882 -43.03762436]
[33.96514130 -56.84180069]
[28.09617805 -70.64598083]
[22.22721863 -84.45015717]
[16.35825729 -98.25433350]
[2.10306859 -93.55793762]
[-12.49511147 -90.07086182]
[-27.33388710 -87.81757355]
[-42.30916977 -86.81387329]
[-57.31592178 -87.06680298]
[-72.24887848 -88.57458496]
[-87.00328827 -91.32665253]
[-101.47566223 -95.30368805]
[-115.56449127 -100.47780609]
[-129.17094421 -106.81271362]
[-142.19958496 -114.26396179]
[-154.55902100 -122.77929688]
[-166.16255188 -132.29899597]
[-176.92880249 -142.75625610]
[-186.78224182 -154.07775879]
[-195.65374756 -166.18406677]
[-203.48110962 -178.99028015]
[-210.20941162 -192.40655518]
[-215.79147339 -206.33879089]
[-220.18812561 -220.68925476]
[-223.36853027 -235.35729980]
[-225.31037903 -250.24003601]
[-226.00004578 -265.23306274]
[-225.43270874 -280.23123169]
[-223.61233521 -295.12930298]
[-220.55169678 -309.82281494]
[-216.27226257 -324.20867920]
[-210.80404663 -338.18597412]
[-204.18540955 -351.65670776]
[-196.46278381 -364.52633667]
[-187.69032288 -376.70462036]
[-177.92956543 -388.10610962]
[-167.24899292 -398.65084839]
[-155.72349548 -408.26489258]
[-143.43394470 -416.88076782]
[-130.46652222 -424.43804932]
[-116.91220856 -430.88375854]
[-102.86605835 -436.17263794]
[-88.42660522 -440.26760864]
[-73.69513702 -443.13995361]
[-58.77497482 -444.76950073]
[-43.77078629 -445.14483643]
[-28.78781509 -444.26333618]
[-13.93115139 -442.13116455]
[0.69498956 -438.76330566]
[14.98801613 -434.18334961]
[28.84766960 -428.42346191]
[42.17673492 -421.52398682]
[54.88171768 -413.53335571]
[66.87349701 -404.50762939]
[78.06796265 -394.51010132]
[88.38658142 -383.61090088]
[97.75698853 -371.88650513]
[106.11344910 -359.41909790]
[113.39734650 -346.29614258]
[119.55759430 -332.60974121]
[124.55097198 -318.45584106]
[128.34246826 -303.93374634]
[130.90547180 -289.14532471]
[132.22201538 -274.19430542]
[132.28286743 -259.18554688]
[131.08758545 -244.22433472]
[128.64457703 -229.41561890]
[124.97095490 -214.86325073]
[120.09249878 -200.66934204]
[114.04342651 -186.93342590]
[106.86617279 -173.75186157]
[98.61107635 -161.21711731]
[89.33604431 -149.41709900]
[79.10613251 -138.43460083]
[67.99309540 -128.34663391]
[56.07489395 -119.22396851]
[43.43511963 -111.13059998]
[30.16243362 -104.12329102]
[36.03139496 -90.31911469]
[41.90035629 -76.51493835]
[47.76931763 -62.71076202]
[53.63827896 -48.90658569]
[59.14826584 -43.98095703]
[59.49016190 -34.85292816]
[65.15294647 -20.96290016]
[70.81573486 -7.07287264]
[76.47852325 6.81715441]
[79.00704956 8.02739906]
[81.20853424 10.31214809]
[82.67131042 13.55185223]
[83.03455353 17.48028374]
[82.03766632 21.70641518]
[93.45836639 31.26763535]
[90.57242584 46.82340622]
[95.70079803 52.14520645]
[95.36283875 61.27338028]
[99.97684479 75.54611206]
[104.59085846 89.81884766]
[109.31098938 104.05683899]
[114.13698578 118.25929260]
[125.90287018 128.83636475]
[122.67174530 143.37628174]
[127.49774170 157.57873535]
[132.42933655 171.74487305]
[137.46624756 185.87390137]
[142.50317383 200.00292969]
[153.80070496 206.22615051]
[157.70509338 218.09794617]
[152.64135742 229.08363342]
[157.46734619 243.28608704]
[162.29335022 257.48855591]
[167.11935425 271.69100952]
[183.75730896 271.83666992]
[199.31588745 277.66070557]
[211.92082214 288.44274902]
[220.06005859 302.86627197]
[222.76518250 319.17941284]
[219.72659302 335.40759277]
[211.32881165 349.59271240]
[198.60195923 360.02923584]
[203.84867859 374.08172607]
[209.09539795 388.13418579]
[214.34211731 402.18667603]
[219.58883667 416.23913574]
[234.21696472 412.82647705]
[249.16139221 411.31250000]
[264.17672729 411.72204590]
[279.01641846 414.04840088]
[293.43676758 418.25338745]
[307.20098877 424.26791382]
[320.08306885 431.99325562]
[331.87142944 441.30252075]
[342.37255859 452.04284668]
[351.41397095 464.03790283]
[358.84719849 477.09069824]
[364.55020142 490.98687744]
[368.42932129 505.49829102]
[370.42086792 520.38659668]
[370.49212646 535.40734863]
[368.64196777 550.31390381]
[364.90069580 564.86145020]
[359.32980347 578.81115723]
[352.02075195 591.93389893]
[343.09356689 604.01416016]
[332.69485474 614.85369873]
[320.99536133 624.27441406]
[308.18716431 632.12164307]
[294.48065186 638.26647949]
[280.10083008 642.60809326]
[265.28390503 645.07519531]
[250.27310181 645.62719727]
[235.31497192 644.25506592]
[220.65513611 640.98138428]
[206.53428650 635.85986328]
[193.18432617 628.97454834]
[180.82447815 620.43859863]
[169.65768433 610.39215088]
[159.86732483 599.00018311]
[151.61416626 586.44976807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[26 163]
[27 162]
[28 161]
[29 160]
[31 157]
[32 156]
[33 155]
[35 154]
[36 153]
[38 151]
[39 150]
[41 149]
[42 148]
[43 147]
[44 145]
[46 143]
[47 138]
[48 137]
[49 136]
[50 135]
[51 133]
[52 132]
[53 131]
[54 130]
[55 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
