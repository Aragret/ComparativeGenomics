%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[96.30941772 744.98974609]
[84.50711823 754.56964111]
[69.93572998 758.89892578]
[54.81727982 757.31750488]
[41.45722198 750.06646729]
[31.89286995 738.25158691]
[27.58271790 723.67449951]
[29.18403244 708.55816650]
[36.45262146 695.20764160]
[48.28008270 685.65887451]
[62.86281204 681.36785889]
[64.42333984 666.44927979]
[65.98385620 651.53070068]
[67.54438019 636.61206055]
[69.10490417 621.69348145]
[70.66542816 606.77484131]
[72.22595215 591.85626221]
[72.67255402 576.86291504]
[72.00276947 561.87786865]
[71.33298492 546.89282227]
[68.99166107 544.25646973]
[67.81097412 540.35504150]
[68.37158203 535.74645996]
[70.98304749 531.22680664]
[70.98304749 516.22680664]
[70.98304749 501.22677612]
[70.98304749 486.22677612]
[70.98304749 471.22677612]
[70.98304749 456.22677612]
[70.98304749 441.22677612]
[70.98304749 426.22677612]
[70.98304749 411.22677612]
[61.40235519 396.52383423]
[70.74179840 380.65383911]
[70.51847076 365.65548706]
[62.05982971 357.00808716]
[61.75102234 344.51452637]
[70.30284882 334.85900879]
[70.30284882 319.85900879]
[70.30284882 304.85900879]
[70.30284882 289.85900879]
[70.30284882 274.85900879]
[70.30284882 259.85900879]
[70.30284882 244.85902405]
[70.30284882 229.85902405]
[70.30284882 214.85902405]
[70.30284882 199.85902405]
[63.04484558 212.98614502]
[51.78038788 222.89129639]
[37.83281708 228.41082764]
[22.84067535 228.89631653]
[8.56522560 224.29071045]
[-3.31646538 215.13508606]
[-11.40854931 202.50503540]
[-14.76037693 187.88432312]
[-12.97817802 172.99057007]
[-6.27132320 159.57348633]
[4.57227182 149.20930481]
[18.27871323 143.11558533]
[33.23778152 142.00820923]
[47.69210052 146.01727295]
[59.94359207 154.67181396]
[68.55296326 166.95509338]
[72.50893402 181.42562866]
[76.04860687 166.84925842]
[79.58827972 152.27287292]
[83.12795258 137.69650269]
[86.66762543 123.12012482]
[90.20729828 108.54375458]
[93.31140900 93.86844635]
[95.97720337 79.10723114]
[98.64299774 64.34601593]
[101.30879211 49.58479691]
[103.97459412 34.82358170]
[106.64038849 20.06236267]
[107.08699036 5.06901312]
[105.30452728 -9.82470417]
[103.41123199 -24.70473862]
[101.40721893 -39.57026672]
[99.40320587 -54.43579483]
[97.39919281 -69.30132294]
[95.39517975 -84.16685486]
[87.11713409 -71.65789795]
[73.10829163 -66.29577637]
[58.59360123 -70.08044434]
[48.98667908 -81.60029602]
[47.87067413 -96.55872345]
[55.66182709 -109.37660217]
[69.45423126 -115.27317047]
[84.10366058 -112.04916382]
[94.14672089 -100.90599060]
[86.20481873 -114.58943939]
[93.75177002 -127.43049622]
[93.52844238 -142.42883301]
[93.30511475 -157.42716980]
[85.36320496 -171.11061096]
[92.91015625 -183.95167542]
[92.68682861 -198.95001221]
[92.46350098 -213.94834900]
[78.77807617 -220.80163574]
[69.85453033 -233.23663330]
[67.74343872 -248.39584351]
[72.92990875 -262.79580688]
[84.22212982 -273.12753296]
[99.02523041 -277.01684570]
[113.93757629 -273.57000732]
[125.53240204 -263.57907104]
[131.14532471 -249.33990479]
[129.48651123 -234.12455750]
[120.93715668 -221.42939758]
[107.46183777 -214.17167664]
[107.68516541 -199.17333984]
[107.90849304 -184.17500305]
[115.83442688 -171.56433105]
[108.30345154 -157.65049744]
[108.52677917 -142.65216064]
[108.75010681 -127.65382385]
[116.67604065 -115.04315948]
[109.14505768 -101.12931824]
[110.26071167 -86.17086792]
[112.26472473 -71.30533600]
[114.26873779 -56.43980789]
[116.27275085 -41.57427979]
[118.27676392 -26.70875359]
[122.28571320 -20.49987984]
[120.19824219 -11.60717010]
[121.98071289 3.28654695]
[127.17699432 -10.78465176]
[136.08081055 -22.85619164]
[147.98995972 -31.97605896]
[161.96525574 -37.42502594]
[176.90454102 -38.77335739]
[191.62962341 -35.91472626]
[204.97924805 -29.07457352]
[215.90058899 -18.79234123]
[223.53234863 -5.87892962]
[227.27265930 8.64725685]
[226.82653809 23.64062119]
[222.22917175 37.91872406]
[213.84312439 50.35553741]
[202.32975769 59.97023773]
[188.59707642 66.00457001]
[173.72807312 67.98265076]
[158.89538574 65.74846649]
[145.26879883 59.47822189]
[133.92294312 49.66641617]
[125.75260162 37.08684540]
[121.40160370 22.72815895]
[118.73580933 37.48937607]
[116.07001495 52.25059128]
[113.40422058 67.01181030]
[110.73841858 81.77302551]
[108.07262421 96.53424835]
[109.59199524 99.17640686]
[110.18357086 102.42980194]
[109.61911774 105.95185089]
[107.80013275 109.32046509]
[104.78367615 112.08342743]
[101.24400330 126.65979767]
[97.70433044 141.23617554]
[94.16465759 155.81254578]
[90.62498474 170.38893127]
[87.08531189 184.96530151]
[85.30284882 199.85902405]
[85.30284882 214.85902405]
[85.30284882 229.85902405]
[85.30284882 244.85902405]
[85.30284882 259.85900879]
[85.30284882 274.85900879]
[85.30284882 289.85900879]
[85.30284882 304.85900879]
[85.30284882 319.85900879]
[85.30284882 334.85900879]
[94.87753296 350.58819580]
[85.51680756 365.43215942]
[85.74013519 380.43051147]
[94.43476868 389.95764160]
[94.31200409 402.45437622]
[85.98304749 411.22677612]
[85.98304749 426.22677612]
[85.98304749 441.22677612]
[85.98304749 456.22677612]
[85.98304749 471.22677612]
[85.98304749 486.22677612]
[85.98304749 501.22677612]
[85.98304749 516.22680664]
[85.98304749 531.22680664]
[86.31802368 546.22302246]
[86.98780823 561.20806885]
[87.65759277 576.19311523]
[95.95731354 563.69854736]
[109.34812927 556.93939209]
[124.32971191 557.68249512]
[136.98591614 565.73364258]
[144.00842285 578.98822021]
[143.56159973 593.98156738]
[135.76220703 606.79443359]
[122.64901733 614.07757568]
[107.64977264 613.92718506]
[94.68524170 606.38256836]
[87.14455414 593.41680908]
[85.58403015 608.33538818]
[84.02350616 623.25396729]
[82.46298981 638.17260742]
[80.90246582 653.09118652]
[79.34194183 668.00982666]
[77.78141785 682.92840576]
[91.16050720 690.14428711]
[100.75590515 701.93395996]
[105.10439301 716.49963379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 190]
[19 189]
[20 188]
[24 187]
[25 186]
[26 185]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[34 176]
[35 175]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 148]
[76 127]
[77 126]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[91 119]
[93 117]
[94 116]
[95 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
