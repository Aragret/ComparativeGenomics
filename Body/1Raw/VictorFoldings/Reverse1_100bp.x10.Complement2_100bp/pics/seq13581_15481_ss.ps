%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[161.05995178 813.43786621]
[155.16159058 799.60137939]
[151.82882690 784.93395996]
[151.16879272 769.90722656]
[153.20272827 755.00408936]
[157.86521912 740.70373535]
[165.00640869 727.46575928]
[174.39672852 715.71582031]
[185.73431396 705.83154297]
[198.65472412 698.13067627]
[212.74259949 692.86083984]
[210.07681274 678.09960938]
[207.41101074 663.33837891]
[204.74520874 648.57714844]
[201.75044250 633.87915039]
[198.42817688 619.25170898]
[195.10592651 604.62426758]
[191.78366089 589.99676514]
[188.46139526 575.36932373]
[185.13914490 560.74188232]
[181.81687927 546.11437988]
[171.45286560 535.41693115]
[175.94148254 520.24578857]
[172.61921692 505.61834717]
[162.25520325 494.92083740]
[166.74382019 479.74972534]
[163.42155457 465.12225342]
[160.09930420 450.49481201]
[156.77703857 435.86734009]
[153.45477295 421.23986816]
[150.13252258 406.61242676]
[146.81025696 391.98495483]
[133.07064819 386.29626465]
[125.22252655 373.45605469]
[126.45445251 358.27923584]
[136.50288391 346.60299683]
[133.18063354 331.97552490]
[129.85836792 317.34805298]
[125.31147766 311.52160645]
[126.59725189 302.47811890]
[122.13761139 296.58462524]
[123.55788422 287.56127930]
[120.67261505 272.84140015]
[117.78734589 258.12149048]
[114.90206909 243.40161133]
[112.01679993 228.68171692]
[109.13152313 213.96183777]
[106.24625397 199.24194336]
[103.99773407 197.56793213]
[102.27683258 194.90238953]
[101.46453094 191.44181824]
[101.86370850 187.51687622]
[103.65488434 183.56141663]
[101.65087128 168.69587708]
[99.64685822 153.83035278]
[97.64284515 138.96482849]
[95.63883209 124.09929657]
[93.63481903 109.23377228]
[84.61031342 121.21534729]
[70.02436066 124.71534729]
[56.54545975 118.13360596]
[50.33598709 104.47921753]
[54.23482895 89.99477386]
[66.45948029 81.30237579]
[81.42100525 82.37606812]
[92.28002167 92.72663116]
[91.83341980 77.73327637]
[83.68865967 64.16959381]
[91.04359436 51.21759415]
[90.59699249 36.22424316]
[90.15038300 21.23089409]
[87.40550995 16.79098892]
[86.70793152 12.20114326]
[87.77194214 8.26630592]
[90.03372955 5.56137609]
[90.25705719 -9.43696117]
[87.25576019 -18.06424713]
[90.59702301 -24.65649796]
[91.04362488 -39.64984894]
[91.49023438 -54.64319992]
[88.69786072 -60.63604355]
[89.26589203 -66.29063416]
[92.17996216 -70.07444763]
[93.07277679 -85.04785156]
[93.85410309 -100.02748871]
[94.52388763 -115.01252747]
[95.19367218 -129.99757385]
[93.05674744 -133.77745056]
[92.30899811 -137.65113831]
[92.80931854 -141.17037964]
[94.28555298 -143.97882080]
[96.37575531 -145.84675598]
[86.69854736 -158.05288696]
[88.49365997 -173.16024780]
[100.18997955 -182.31076050]
[101.75049591 -197.22935486]
[103.31101990 -212.14796448]
[104.87154388 -227.06657410]
[106.43206787 -241.98516846]
[107.99259186 -256.90377808]
[94.25135803 -263.26437378]
[83.32167816 -273.74392700]
[76.38912201 -287.20565796]
[74.20567322 -302.18936157]
[77.00817871 -317.06970215]
[84.49265289 -330.23260498]
[95.84722137 -340.25018311]
[109.84023285 -346.03588867]
[124.95383453 -346.96209717]
[139.54861450 -342.92831421]
[152.04142761 -334.37213135]
[161.07716370 -322.22164917]
[165.67567444 -307.79486084]
[165.33818054 -292.65667725]
[160.10125732 -278.44915771]
[150.53297424 -266.71347046]
[137.67124939 -258.72256470]
[122.91119385 -255.34324646]
[121.35066986 -240.42465210]
[119.79015350 -225.50604248]
[118.22962952 -210.58743286]
[116.66910553 -195.66883850]
[115.10858154 -180.75022888]
[124.65809631 -169.37734985]
[123.28802490 -154.22554016]
[111.29435730 -144.28623962]
[110.17871094 -129.32778931]
[109.50892639 -114.34274292]
[108.83914185 -99.35770416]
[111.68083191 -92.53520203]
[108.04618073 -84.15503693]
[107.15336609 -69.18163300]
[106.48358154 -54.19659424]
[106.03697968 -39.20324326]
[105.59037018 -24.20989227]
[105.25539398 -9.21363354]
[105.03206635 5.78470373]
[105.14373016 20.78428841]
[105.59033966 35.77763748]
[106.03694153 50.77098846]
[114.14974976 63.26224899]
[106.82676697 77.28667450]
[107.27336884 92.28002167]
[108.50035095 107.22975159]
[110.50436401 122.09528351]
[112.50837708 136.96081543]
[114.51239014 151.82633972]
[116.51640320 166.69186401]
[118.52041626 181.55740356]
[120.96614075 196.35667419]
[123.85141754 211.07655334]
[126.73668671 225.79644775]
[129.62196350 240.51634216]
[132.50723267 255.23623657]
[135.39250183 269.95611572]
[138.27778625 284.67602539]
[141.27255249 299.37402344]
[144.48582458 314.02581787]
[147.80809021 328.65325928]
[151.13034058 343.28073120]
[165.23667908 349.47085571]
[172.90361023 362.62649536]
[171.37200928 377.59707642]
[161.43771362 388.66268921]
[164.75997925 403.29016113]
[168.08224487 417.91763306]
[171.40449524 432.54507446]
[174.72676086 447.17254639]
[178.04901123 461.80001831]
[181.37127686 476.42745972]
[191.97293091 488.17120361]
[187.24667358 502.29608154]
[190.56893921 516.92352295]
[201.17059326 528.66729736]
[196.44435120 542.79211426]
[199.76660156 557.41961670]
[203.08886719 572.04705811]
[206.41111755 586.67449951]
[209.73338318 601.30200195]
[213.05564880 615.92944336]
[216.37789917 630.55688477]
[219.92553711 634.38592529]
[221.49295044 638.75585938]
[221.20568848 642.82189941]
[219.50643921 645.91137695]
[222.17222595 660.67260742]
[224.83802795 675.43377686]
[227.50381470 690.19500732]
[242.54508972 690.20434570]
[257.34292603 692.89941406]
[271.42169189 698.19360352]
[284.32873535 705.91680908]
[295.64920044 715.82067871]
[305.01919556 727.58685303]
[312.13748169 740.83715820]
[316.77523804 755.14556885]
[318.78335571 770.05218506]
[318.09735107 785.07781982]
[314.73922729 799.73937988]
[308.81692505 813.56567383]
[300.52087402 826.11218262]
[290.11770630 836.97564697]
[277.94183350 845.80676270]
[264.38473511 852.32165527]
[249.88212585 856.31097412]
[234.90025330 857.64636230]
[219.92071533 856.28503418]
[205.42504883 852.27062988]
[191.87921143 845.73229980]
[179.71865845 836.88012695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 188]
[12 187]
[13 186]
[14 185]
[15 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[23 173]
[24 172]
[26 170]
[27 169]
[28 168]
[29 167]
[30 166]
[31 165]
[32 164]
[36 160]
[37 159]
[38 158]
[40 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[58 144]
[66 143]
[67 142]
[69 140]
[70 139]
[71 138]
[75 137]
[76 136]
[78 135]
[79 134]
[80 133]
[83 132]
[84 131]
[85 129]
[86 128]
[87 127]
[92 126]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
