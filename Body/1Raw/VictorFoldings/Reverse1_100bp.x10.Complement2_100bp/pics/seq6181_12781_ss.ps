%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[214.50837708 380.73281860]
[218.66685486 366.30526733]
[224.36085510 352.41192627]
[231.52363586 339.21563721]
[240.07122803 326.87115479]
[249.90341187 315.52322388]
[260.90490723 305.30490112]
[251.94419861 293.27551270]
[242.98350525 281.24615479]
[234.02281189 269.21676636]
[224.70793152 257.45950317]
[215.04711914 245.98481750]
[205.38630676 234.51011658]
[195.72549438 223.03541565]
[186.06468201 211.56071472]
[176.40386963 200.08601379]
[166.74307251 188.61131287]
[152.62713623 183.85844421]
[149.65795898 168.31834412]
[139.99714661 156.84364319]
[130.33633423 145.36894226]
[116.22040558 140.61607361]
[113.25122833 125.07598114]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[65.13052368 75.06999207]
[63.88042068 90.01780701]
[52.51628494 99.80844116]
[37.54801178 98.83335876]
[27.55010605 87.65114594]
[28.24982643 72.66747284]
[39.24633789 62.46567535]
[54.23947144 62.88941574]
[44.75057220 51.27215195]
[35.26167297 39.65488815]
[25.77277565 28.03762627]
[19.73613739 25.34123421]
[16.45931816 20.69801521]
[16.18052483 15.93027878]
[7.04172134 4.03564596]
[-2.09708071 -7.85898685]
[-11.23588276 -19.75362015]
[-17.18956375 -22.62854958]
[-20.32668495 -27.36727142]
[-20.46340179 -32.14119720]
[-29.24400520 -44.30265045]
[-43.59538269 -50.96212006]
[-44.77246857 -65.81014252]
[-53.55307388 -77.97159576]
[-62.33367538 -90.13305664]
[-71.11428070 -102.29450989]
[-84.08809662 -94.74156952]
[-97.73976135 -88.49666595]
[-111.93780518 -83.61995697]
[-126.54548645 -80.15839386]
[-141.42211914 -78.14532471]
[-156.42443848 -77.60012817]
[-171.40795898 -78.52806854]
[-186.22836304 -80.92018890]
[-200.74293518 -84.75347137]
[-214.81188965 -89.99098969]
[-228.29971313 -96.58229828]
[-241.07650757 -104.46392822]
[-253.01924133 -113.55995941]
[-264.01290894 -123.78279877]
[-273.95156860 -135.03399658]
[-282.73959351 -147.20518494]
[-290.29226685 -160.17915344]
[-296.53689575 -173.83094788]
[-301.41333008 -188.02908325]
[-304.87460327 -202.63684082]
[-306.88735962 -217.51351929]
[-307.43225098 -232.51583862]
[-306.50402832 -247.49934387]
[-304.11160278 -262.31970215]
[-300.27801514 -276.83419800]
[-295.04022217 -290.90304565]
[-288.44863892 -304.39071655]
[-280.56677246 -317.16738892]
[-271.47048950 -329.10992432]
[-261.24743652 -340.10336304]
[-249.99603271 -350.04183960]
[-237.82467651 -358.82958984]
[-224.85055542 -366.38201904]
[-211.19863892 -372.62637329]
[-197.00039673 -377.50250244]
[-182.39257812 -380.96350098]
[-167.51586914 -382.97595215]
[-152.51351929 -383.52056885]
[-137.53004456 -382.59201050]
[-122.70973206 -380.19931030]
[-108.19531250 -376.36544800]
[-94.12657928 -371.12734985]
[-80.63901520 -364.53552246]
[-67.86252594 -356.65338135]
[-55.92015457 -347.55685425]
[-44.92691422 -337.33358765]
[-34.98868179 -326.08200073]
[-26.20116806 -313.91046143]
[-18.64900398 -300.93618774]
[-12.40492344 -287.28414917]
[-7.52906179 -273.08581543]
[-4.06837702 -258.47790527]
[-2.05619907 -243.60115051]
[-1.51190615 -228.59880066]
[-2.44074059 -213.61534119]
[-4.83375645 -198.79507446]
[-8.66790771 -184.28073120]
[-13.90626812 -170.21211243]
[-20.49838829 -156.72468567]
[-28.38078117 -143.94834900]
[-37.47753143 -132.00614929]
[-47.70103455 -121.01312256]
[-58.95282364 -111.07511139]
[-50.17221832 -98.91365814]
[-41.39161682 -86.75219727]
[-32.61101532 -74.59074402]
[-18.88768387 -68.80114746]
[-17.08255005 -53.08325577]
[-8.30194664 -40.92179871]
[0.65874976 -28.89242172]
[9.79755211 -16.99778938]
[18.93635368 -5.10315609]
[28.07515717 6.79147673]
[37.39004135 18.54872704]
[46.87893677 30.16599083]
[56.36783600 41.78325272]
[65.85673523 53.40051651]
[75.85490417 64.58248901]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[116.66979218 88.74022675]
[129.85298157 81.58457947]
[143.72589111 87.28916931]
[148.06192017 101.64879608]
[139.66471863 114.07807159]
[124.72592926 115.41516876]
[139.53286743 120.98878479]
[141.81103516 135.70812988]
[151.47184753 147.18283081]
[161.13265991 158.65753174]
[175.93959045 164.23115540]
[178.21775818 178.95050049]
[187.87857056 190.42520142]
[197.53938293 201.89990234]
[207.20019531 213.37460327]
[216.86100769 224.84930420]
[226.52182007 236.32400513]
[236.18263245 247.79870605]
[240.31538391 249.13073730]
[243.49000549 251.47300720]
[245.50657654 254.40026855]
[246.32379150 257.46600342]
[246.05218506 260.25607300]
[255.01287842 272.28543091]
[263.97357178 284.31481934]
[272.93426514 296.34420776]
[285.87442017 288.72839355]
[299.56210327 282.55636597]
[313.83688354 277.90042114]
[328.53140259 274.81515503]
[343.47332764 273.33679199]
[358.48751831 273.48260498]
[373.39794922 275.25094604]
[388.02975464 278.62100220]
[402.21139526 283.55334473]
[415.77664185 289.99008179]
[428.56640625 297.85577393]
[440.43072510 307.05819702]
[451.23056030 317.48947144]
[460.83923340 329.02725220]
[469.14407349 341.53631592]
[476.04779053 354.86996460]
[481.46936035 368.87188721]
[485.34524536 383.37792969]
[487.63000488 398.21795654]
[488.29684448 413.21804810]
[487.33798218 428.20230103]
[484.76458740 442.99505615]
[480.60690308 457.42282104]
[474.91366577 471.31649780]
[467.75158691 484.51315308]
[459.20465088 496.85809326]
[449.37307739 508.20654297]
[438.37213135 518.42547607]
[426.33081055 527.39508057]
[413.39028931 535.01019287]
[399.70223999 541.18145752]
[385.42721558 545.83666992]
[370.73254395 548.92108154]
[355.79052734 550.39868164]
[340.77633667 550.25207520]
[325.86602783 548.48291016]
[311.23440552 545.11206055]
[297.05300903 540.17895508]
[283.48812866 533.74151611]
[270.69876099 525.87512207]
[258.83493042 516.67205811]
[248.03567505 506.24020386]
[238.42762756 494.70190430]
[230.12342834 482.19238281]
[223.22045898 468.85836792]
[217.79965210 454.85617065]
[213.92454529 440.34991455]
[211.64057922 425.50973511]
[210.97453308 410.50964355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 161]
[8 160]
[9 159]
[10 158]
[11 153]
[12 152]
[13 151]
[14 150]
[15 149]
[16 148]
[17 147]
[19 145]
[20 144]
[21 143]
[23 141]
[24 135]
[26 133]
[27 132]
[28 131]
[35 130]
[36 129]
[37 128]
[38 127]
[41 126]
[42 125]
[43 124]
[44 123]
[47 122]
[48 121]
[50 119]
[51 118]
[52 117]
[53 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
