%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[4.69514561 553.01922607]
[-8.47196484 560.37298584]
[-23.05442619 564.22039795]
[-38.13557053 564.31958008]
[-52.76739120 560.66436768]
[-66.03011322 553.48449707]
[-77.09002686 543.23120117]
[-85.25190735 530.54919434]
[-90.00269318 516.23553467]
[-91.04373169 501.19000244]
[-88.30959320 486.35845947]
[-81.97214508 472.67312622]
[-72.42976379 460.99435425]
[-60.28229141 452.05624390]
[-46.29333115 446.42068481]
[-31.34223938 444.44186401]
[-29.55977249 429.54815674]
[-27.77730751 414.65444946]
[-25.99484062 399.76071167]
[-24.21237564 384.86700439]
[-22.42991066 369.97329712]
[-20.64744377 355.07955933]
[-28.83699989 367.64663696]
[-39.67113876 378.02072144]
[-52.58152771 385.65759277]
[-66.89090729 390.15664673]
[-81.84864807 391.28189087]
[-96.67008209 388.97427368]
[-110.57771301 383.35485840]
[-122.84197235 374.71844482]
[-132.81950378 363.51803589]
[-139.98690796 350.34124756]
[-143.96820068 335.87924194]
[-144.55451965 320.89071655]
[-141.71511841 306.16189575]
[-135.59893799 292.46545410]
[-126.52681732 280.51989746]
[-114.97467804 270.95181274]
[-101.54850769 264.26315308]
[-86.95262909 260.80480957]
[-71.95269775 260.75817871]
[-57.33559418 264.12570190]
[-43.86809158 270.73071289]
[-32.25667572 280.22677612]
[-23.11045456 292.11569214]
[-16.90921974 305.77383423]
[-13.97827911 320.48471069]
[-14.47162533 335.47824097]
[-7.39452028 322.25271606]
[-0.31741464 309.02719116]
[6.75969076 295.80166626]
[13.83679581 282.57614136]
[14.22099400 275.19546509]
[21.11899567 269.20751953]
[27.69902420 255.72779846]
[33.56798553 241.92361450]
[39.43694687 228.11944580]
[36.37278366 210.84004211]
[51.17702103 199.88941956]
[56.83980942 185.99938965]
[62.50259399 172.10935974]
[68.16538239 158.21934509]
[73.82817078 144.32931519]
[71.46820068 129.62286377]
[83.84278870 119.76485443]
[89.50556946 105.87482452]
[94.96092987 91.90203094]
[100.20764923 77.84955597]
[105.45436859 63.79708481]
[103.03285980 48.16228867]
[114.73316956 38.94534302]
[119.97988892 24.89286995]
[125.22660065 10.84039879]
[128.43988037 -3.81138825]
[129.55552673 -18.76984215]
[130.67117310 -33.72829437]
[122.86118317 -43.99312973]
[124.09835815 -56.42909241]
[133.17674255 -64.42343903]
[134.51496887 -79.36362457]
[126.38175201 -95.88428497]
[137.02946472 -109.83395386]
[138.14511108 -124.79240417]
[139.26075745 -139.75085449]
[126.75783539 -146.34049988]
[117.73815918 -157.16499329]
[113.53815460 -170.56893921]
[114.76041412 -184.51872253]
[121.18753052 -196.91111755]
[131.81982422 -205.89033508]
[145.03073120 -210.12593079]
[146.36895752 -225.06610107]
[147.70719910 -240.00628662]
[149.04542542 -254.94647217]
[150.38366699 -269.88665771]
[142.25044250 -286.40731812]
[152.89816284 -300.35699463]
[154.01380920 -315.31542969]
[155.12945557 -330.27389526]
[141.20494080 -336.22256470]
[129.96809387 -346.37203979]
[122.63779449 -359.62139893]
[120.00919342 -374.53344727]
[122.36741638 -389.49063110]
[129.45666504 -402.87051392]
[140.50793457 -413.22174072]
[154.32247925 -419.42150879]
[169.40180969 -420.79727173]
[184.11021423 -417.19985962]
[196.85223389 -409.01940918]
[206.24572754 -397.14334106]
[211.27175903 -382.85986328]
[211.38511658 -367.71835327]
[206.57353210 -353.36120605]
[197.35891724 -341.34582520]
[184.74079895 -332.97552490]
[170.08790588 -329.15823364]
[168.97225952 -314.19979858]
[167.85661316 -299.24133301]
[175.51004028 -289.87374878]
[174.70298767 -277.40249634]
[165.32385254 -268.54843140]
[163.98561096 -253.60824585]
[162.64738464 -238.66806030]
[161.30914307 -223.72787476]
[159.97091675 -208.78768921]
[173.84648132 -200.86183167]
[182.90951538 -187.63023376]
[185.30369568 -171.71322632]
[180.49952698 -156.28985596]
[169.41035461 -144.46302795]
[154.21922302 -138.63520813]
[153.10357666 -123.67675781]
[151.98791504 -108.71829987]
[159.64134216 -99.35071564]
[158.83430481 -86.87945557]
[149.45515442 -78.02539062]
[148.11692810 -63.08520508]
[156.34767151 -47.58612061]
[145.62962341 -32.61264801]
[144.51397705 -17.65419197]
[143.39833069 -2.69573951]
[151.27891541 -15.45883083]
[162.53175354 -25.37717628]
[176.18336487 -31.59273911]
[191.05276489 -33.56781006]
[205.85360718 -31.13152695]
[219.30543518 -24.49465179]
[230.24456787 -14.23134041]
[237.72463989 -1.22947371]
[241.09854126 13.38615799]
[240.07443237 28.35115623]
[234.74087524 42.37089920]
[225.55929565 54.23254013]
[213.32397461 62.90992355]
[199.09339905 67.65237427]
[184.09866333 68.04962158]
[169.63694763 64.06729889]
[156.95935059 56.04991913]
[147.16259766 44.69106293]
[141.09420776 30.97338295]
[139.27906799 16.08711815]
[134.03236389 30.13958931]
[128.78564453 44.19205856]
[131.58242798 58.82173157]
[119.50683594 69.04380035]
[114.26011658 83.09627533]
[109.01339722 97.14874268]
[110.05390930 102.28988647]
[108.13986969 107.64803314]
[103.39559937 111.53761292]
[97.73281097 125.42763519]
[99.68773651 141.12760925]
[87.71819305 149.99209595]
[82.05541229 163.88212585]
[76.39262390 177.77215576]
[70.72983551 191.66218567]
[65.06704712 205.55220032]
[69.34091187 217.72171021]
[64.33840942 229.17416382]
[53.24112320 233.98840332]
[47.37216187 247.79257202]
[41.50320053 261.59674072]
[55.38113785 255.90440369]
[69.70895386 260.34439087]
[77.93617249 272.88684082]
[76.30140686 287.79751587]
[65.55206299 298.25939941]
[50.60258865 299.48953247]
[38.28768539 290.92547607]
[34.23768997 276.48077393]
[27.06232452 289.65322876]
[19.98521805 302.87875366]
[12.90811253 316.10427856]
[5.83100748 329.32980347]
[-1.24609792 342.55535889]
[-5.75372648 356.86203003]
[-7.53619242 371.75573730]
[-9.31865788 386.64947510]
[-11.10112381 401.54318237]
[-12.88358974 416.43688965]
[-14.66605568 431.33062744]
[-16.44852257 446.22433472]
[-2.38662744 451.67538452]
[9.87738705 460.45291138]
[19.57259369 472.00512695]
[26.08954620 485.60586548]
[29.01858139 500.40017700]
[28.17557907 515.45806885]
[23.61353111 529.83300781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[22 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[54 191]
[55 183]
[56 182]
[57 181]
[59 178]
[60 177]
[61 176]
[62 175]
[63 174]
[65 172]
[66 171]
[67 168]
[68 167]
[69 166]
[71 164]
[72 163]
[73 162]
[74 142]
[75 141]
[76 140]
[79 138]
[80 137]
[82 134]
[83 133]
[84 132]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
