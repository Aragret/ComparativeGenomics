%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[64.06204224 282.50506592]
[68.56442261 296.84194946]
[70.93126678 311.68164062]
[71.11212158 326.70779419]
[69.10312653 341.60012817]
[64.94711304 356.04122925]
[58.73266602 369.72326660]
[50.59224319 382.35464478]
[40.69935608 393.66607666]
[29.26487541 403.41650391]
[16.53252792 411.39804077]
[2.77370429 417.44061279]
[-11.71832657 421.41540527]
[-26.63466644 423.23767090]
[-41.65737152 422.86859131]
[-56.46622849 420.31604004]
[-70.74559021 415.63442993]
[-84.19109344 408.92349243]
[-96.51614380 400.32635498]
[-107.45803070 390.02621460]
[-116.78352356 378.24261475]
[-124.29386139 365.22674561]
[-129.82894897 351.25604248]
[-133.27079773 336.62829590]
[-134.54608154 321.65524292]
[-133.62757874 306.65612793]
[-130.53486633 291.95056152]
[-125.33390045 277.85208130]
[-118.13551331 264.66113281]
[-109.09314728 252.65888977]
[-98.39953613 242.10121155]
[-86.28261566 233.21311951]
[-73.00066376 226.18406677]
[-58.83678818 221.16387939]
[-44.09288025 218.25955200]
[-29.08321953 217.53298950]
[-14.12773037 218.99969482]
[0.45480642 222.62840271]
[14.35356426 228.34175110]
[22.01416206 215.44541931]
[29.67475891 202.54910278]
[37.33535767 189.65277100]
[33.42173004 175.32730103]
[41.00695038 162.13946533]
[56.05935669 158.13162231]
[63.71995544 145.23529053]
[71.38055420 132.33895874]
[79.04115295 119.44264221]
[78.75141144 114.67555237]
[81.45325470 109.67584991]
[87.12670898 106.28121948]
[87.90818024 92.32124329]
[100.21076965 85.67760468]
[108.25193787 73.01508331]
[106.20887756 60.27974701]
[113.16706848 49.89864731]
[124.94328308 47.13325882]
[133.17208862 34.59185791]
[141.40089417 22.05045700]
[128.47766113 29.66555786]
[114.23339844 34.36673737]
[99.31614685 35.94012833]
[84.40453339 34.31414795]
[70.17694092 29.56277084]
[57.28062439 21.90215111]
[46.30228806 11.68079472]
[37.74136734 -0.63629335]
[31.98733139 -14.48876762]
[29.30194473 -29.24643326]
[29.80737877 -44.23791504]
[33.48064041 -58.78120041]
[40.15461349 -72.21466827]
[49.52568817 -83.92718506]
[61.16753387 -93.38591003]
[74.55052948 -100.16053009]
[89.06582642 -103.94284821]
[104.05309296 -104.56079102]
[118.83050537 -101.98625183]
[132.72578430 -96.33635712]
[145.10678101 -87.86813354]
[155.41024780 -76.96682739]
[163.16744995 -64.12837219]
[168.02549744 -49.93684769]
[169.76335144 -35.03786087]
[168.30197144 -20.10921669]
[163.70783997 -5.83007240]
[156.18740845 7.15346289]
[168.66720581 -1.16848111]
[181.14698792 -9.49042511]
[193.62678528 -17.81236839]
[206.10658264 -26.13431168]
[218.58638000 -34.45625687]
[231.06616211 -42.77820206]
[243.54595947 -51.10014343]
[256.02575684 -59.42208862]
[268.50555420 -67.74403381]
[275.69448853 -81.83764648]
[290.57601929 -82.46135712]
[303.05581665 -90.78330231]
[315.53561401 -99.10524750]
[308.24057007 -112.22122955]
[302.02462769 -125.88168335]
[296.92803955 -139.99803162]
[292.98385620 -154.47869873]
[290.21771240 -169.22979736]
[288.64752197 -184.15563965]
[288.28344727 -199.15942383]
[289.12786865 -214.14385986]
[291.17529297 -229.01176453]
[294.41247559 -243.66668701]
[298.81838989 -258.01361084]
[304.36447144 -271.95947266]
[311.01477051 -285.41384888]
[318.72613525 -298.28945923]
[327.44854736 -310.50280762]
[337.12542725 -321.97467041]
[347.69406128 -332.63067627]
[359.08587646 -342.40170288]
[371.22702026 -351.22436523]
[384.03869629 -359.04147339]
[397.43786621 -365.80230713]
[411.33758545 -371.46301270]
[425.64776611 -375.98690796]
[440.27554321 -379.34460449]
[455.12606812 -381.51437378]
[470.10305786 -382.48214722]
[485.10934448 -382.24160767]
[500.04760742 -380.79434204]
[514.82098389 -378.14971924]
[529.33361816 -374.32492065]
[543.49145508 -369.34472656]
[557.20263672 -363.24142456]
[570.37823486 -356.05462646]
[582.93280029 -347.83093262]
[594.78491211 -338.62368774]
[605.85772705 -328.49258423]
[616.07940674 -317.50332642]
[625.38366699 -305.72720337]
[633.71014404 -293.24060059]
[641.00488281 -280.12445068]
[647.22052002 -266.46386719]
[652.31683350 -252.34739685]
[656.26068115 -237.86663818]
[659.02648926 -223.11547852]
[660.59637451 -208.18960571]
[660.96008301 -193.18580627]
[660.11535645 -178.20138550]
[658.06756592 -163.33354187]
[654.83007812 -148.67868042]
[650.42382812 -134.33184814]
[644.87744141 -120.38610840]
[638.22686768 -106.93188477]
[630.51525879 -94.05644989]
[621.79254150 -81.84329224]
[612.11541748 -70.37163544]
[601.54650879 -59.71586227]
[590.15447998 -49.94509506]
[578.01318359 -41.12269592]
[565.20129395 -33.30588150]
[551.80200195 -26.54534721]
[537.90216064 -20.88494110]
[523.59185791 -16.36137199]
[508.96401978 -13.00397682]
[494.11343384 -10.83453083]
[479.13644409 -9.86710358]
[464.13015747 -10.10796928]
[449.19195557 -11.55556583]
[434.41864014 -14.20050526]
[419.90606689 -18.02563286]
[405.74835205 -23.00614357]
[392.03732300 -29.10973167]
[378.86187744 -36.29681778]
[366.30749512 -44.52078629]
[354.45556641 -53.72830200]
[343.38299561 -63.85964966]
[333.16156006 -74.84912109]
[323.85754395 -86.62545013]
[311.37774658 -78.30350494]
[298.89794922 -69.98156738]
[292.60168457 -56.48319626]
[276.82748413 -55.26423645]
[264.34768677 -46.94229507]
[251.86790466 -38.62034988]
[239.38810730 -30.29840660]
[226.90830994 -21.97646332]
[214.42852783 -13.65451908]
[201.94873047 -5.33257484]
[189.46893311 2.98936868]
[176.98913574 11.31131268]
[164.50935364 19.63325691]
[153.94230652 30.27926445]
[145.71348572 42.82066727]
[137.48468018 55.36206436]
[137.42918396 72.91096497]
[120.91446686 81.05625153]
[112.87329102 93.71878052]
[112.09181976 107.67875671]
[99.78923035 114.32239532]
[91.93747711 127.10323334]
[84.27687836 139.99955750]
[76.61627960 152.89588928]
[68.95568848 165.79222107]
[72.63657379 180.92790222]
[64.68392181 193.89747620]
[50.23168182 197.31336975]
[42.57108688 210.20970154]
[34.91048813 223.10601807]
[27.24989128 236.00234985]
[38.91573715 245.47473145]
[49.07800293 256.54476929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 208]
[40 207]
[41 206]
[42 205]
[45 202]
[46 201]
[47 200]
[48 199]
[51 198]
[53 196]
[54 195]
[57 193]
[58 192]
[59 191]
[87 190]
[88 189]
[89 188]
[90 187]
[91 186]
[92 185]
[93 184]
[94 183]
[95 182]
[96 181]
[98 179]
[99 178]
[100 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
