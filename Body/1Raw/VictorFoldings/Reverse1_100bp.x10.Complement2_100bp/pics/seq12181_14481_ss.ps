%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[24.75463486 556.67669678]
[22.58267403 571.55590820]
[17.92719650 585.85400391]
[10.92214775 599.15954590]
[1.76908040 611.08972168]
[-9.26865578 621.30126953]
[-21.87348175 629.50042725]
[-35.68273163 635.45129395]
[-50.29908752 638.98260498]
[-65.30200958 639.99279785]
[-80.25982666 638.45275879]
[-94.74217224 634.40679932]
[-108.33237457 627.97143555]
[-120.63939667 619.33166504]
[-131.30915833 608.73620605]
[-140.03465271 596.48980713]
[-146.56484985 582.94488525]
[-150.71185303 568.49114990]
[-152.35633850 553.54449463]
[-151.45098877 538.53485107]
[-148.02186584 523.89422607]
[-142.16763306 510.04373169]
[-134.05671692 497.38192749]
[-123.92249298 486.27313232]
[-112.05653381 477.03695679]
[-98.80025482 469.93911743]
[-84.53506470 465.18386841]
[-69.67140198 462.90802002]
[-54.63692093 463.17706299]
[-39.86419296 465.98321533]
[-34.61747742 451.93075562]
[-29.37075806 437.87826538]
[-24.12404060 423.82580566]
[-18.87732124 409.77331543]
[-13.63060379 395.72085571]
[-8.38388538 381.66839600]
[-8.98919487 374.30255127]
[-2.95302582 367.44671631]
[2.50233126 353.47393799]
[7.64429092 339.38278198]
[12.47028828 325.18032837]
[17.29628563 310.97787476]
[21.91029549 296.70513916]
[26.31129265 282.36529541]
[30.71229172 268.02545166]
[29.30580902 263.46136475]
[30.75152588 257.96527100]
[35.46369171 253.32771301]
[40.28968811 239.12525940]
[37.05856323 224.58534241]
[48.82444763 214.00827026]
[53.65044785 199.80581665]
[58.47644424 185.60336304]
[63.30244064 171.40090942]
[62.18579102 168.82966614]
[62.02035522 165.66119385]
[63.03872299 162.25556946]
[65.33894348 159.05033875]
[68.86158752 156.51164246]
[74.52437592 142.62161255]
[72.16441345 127.91516113]
[84.53899384 118.05715179]
[90.20178223 104.16712952]
[94.70940399 89.86044312]
[90.22078705 74.68932343]
[100.58480835 63.99183273]
[103.90707397 49.36437225]
[107.22933197 34.73691177]
[102.74070740 19.56579208]
[113.10473633 8.86830235]
[116.42699432 -5.75915766]
[119.64026642 -20.41094398]
[114.92626953 -35.51355362]
[125.12987518 -46.36416245]
[120.41587830 -61.46677017]
[130.61947632 -72.31738281]
[133.72358704 -86.99268341]
[136.82769775 -101.66798401]
[130.71528625 -119.03807068]
[142.94520569 -131.62361145]
[145.83047485 -146.34350586]
[148.71574402 -161.06340027]
[151.60101318 -175.78329468]
[152.60528564 -190.74963379]
[151.71246338 -205.72303772]
[150.81964111 -220.69644165]
[149.92683411 -235.66984558]
[149.03401184 -250.64324951]
[134.12452698 -252.69097900]
[119.90110016 -257.60833740]
[106.91046143 -265.20632935]
[95.65193176 -275.19293213]
[86.55825806 -287.18423462]
[79.97897339 -300.71932983]
[76.16697693 -315.27801514]
[75.26878357 -330.30062866]
[77.31892395 -345.20980835]
[82.23859406 -359.43243408]
[89.83869171 -372.42184448]
[99.82708740 -383.67874146]
[111.81986237 -392.77047729]
[125.35604095 -399.34756470]
[139.91532898 -403.15722656]
[154.93811035 -404.05297852]
[169.84693909 -402.00042725]
[184.06877136 -397.07846069]
[197.05694580 -389.47625732]
[208.31224060 -379.48602295]
[217.40203857 -367.49179077]
[223.97692871 -353.95455933]
[227.78422546 -339.39465332]
[228.67755127 -324.37170410]
[226.62257385 -309.46322632]
[221.69830322 -295.24218750]
[214.09400940 -282.25524902]
[204.10195923 -271.00155640]
[192.10624695 -261.91369629]
[178.56794739 -255.34100342]
[164.00741577 -251.53607178]
[164.90023804 -236.56266785]
[165.79306030 -221.58926392]
[166.68586731 -206.61585999]
[167.57868958 -191.64244080]
[173.90003967 -205.24540710]
[184.24816895 -216.10432434]
[197.53103638 -223.07322693]
[212.34684753 -225.41667175]
[227.13206482 -222.88735962]
[240.32635498 -215.75219727]
[250.53730774 -204.76417542]
[256.68734741 -191.08291626]
[258.12741089 -176.15219116]
[254.70555115 -161.54771423]
[246.78288269 -148.81071472]
[235.19549561 -139.28535461]
[221.16624451 -133.97686768]
[206.17565918 -133.44548035]
[191.80574036 -137.74726868]
[179.57296753 -146.42823792]
[170.76831055 -158.57229614]
[166.32090759 -172.89801025]
[163.43563843 -158.17813110]
[160.55036926 -143.45823669]
[157.66510010 -128.73834229]
[164.15113831 -118.52766418]
[161.86782837 -106.24066925]
[151.50300598 -98.56387329]
[148.39889526 -83.88857269]
[145.29478455 -69.21327209]
[150.23080444 -55.16033554]
[139.80517578 -43.26005173]
[144.74119568 -29.20711899]
[134.31556702 -17.30683517]
[136.00683594 -10.11229515]
[131.05445862 -2.43689799]
[127.73219299 12.19056225]
[132.45845032 26.31542778]
[121.85678864 38.05916977]
[118.53453064 52.68663025]
[115.21227264 67.31409454]
[119.93852234 81.43895721]
[109.33686829 93.18270111]
[120.32847595 82.97561646]
[134.78007507 78.95674896]
[149.46313477 82.02392578]
[161.09744263 91.49192810]
[167.08384705 105.24558258]
[166.08496094 120.21228790]
[158.32395935 133.04844666]
[145.53466797 140.88641357]
[130.57423401 141.97518921]
[116.78485870 136.07151794]
[107.24713135 124.49430847]
[104.09180450 109.82991791]
[98.42901611 123.71994019]
[100.38394165 139.41990662]
[88.41440582 148.28440857]
[82.75161743 162.17442322]
[77.50489807 176.22689819]
[72.67890167 190.42935181]
[67.85290527 204.63180542]
[63.02690506 218.83427429]
[65.91284180 234.39002991]
[54.49214554 243.95126343]
[49.66614914 258.15371704]
[45.05213928 272.42645264]
[40.65114212 286.76629639]
[36.25014114 301.10614014]
[37.35588837 307.62448120]
[35.31076050 312.92678833]
[31.49874115 315.80386353]
[26.67274475 330.00631714]
[21.84674644 344.20877075]
[22.86523438 349.32833862]
[21.91330338 353.87225342]
[19.54017830 357.18634033]
[16.47512817 358.92929077]
[11.01977158 372.90206909]
[5.66858625 386.91510010]
[0.42186785 400.96759033]
[-4.82485056 415.02005005]
[-10.07156849 429.07250977]
[-15.31828690 443.12500000]
[-20.56500435 457.17745972]
[-25.81172371 471.22991943]
[-12.81470871 478.79205322]
[-1.28275847 488.44204712]
[8.45233154 499.90222168]
[16.11046219 512.84289551]
[21.47129631 526.89172363]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[38 198]
[39 197]
[40 193]
[41 192]
[42 191]
[43 188]
[44 187]
[45 186]
[48 185]
[49 184]
[51 182]
[52 181]
[53 180]
[54 179]
[59 178]
[60 177]
[62 175]
[63 174]
[64 162]
[66 160]
[67 159]
[68 158]
[70 156]
[71 155]
[72 153]
[74 151]
[76 149]
[77 148]
[78 147]
[80 144]
[81 143]
[82 142]
[83 141]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
