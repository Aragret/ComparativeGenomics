%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[59.88322449 535.24279785]
[61.26742172 550.30725098]
[57.92670441 565.06176758]
[50.18836975 578.06072998]
[38.81053162 588.03070068]
[24.90788269 593.99487305]
[9.84245682 595.36895752]
[-4.90978527 592.01837158]
[-17.90357208 584.27130127]
[-27.86590195 572.88684082]
[-33.82077026 558.98016357]
[-35.18477631 543.91381836]
[-31.82429123 529.16381836]
[-24.06854057 516.17523193]
[-12.67735291 506.22055054]
[1.23327816 500.27499390]
[16.30053139 498.92108154]
[19.62279129 484.29364014]
[22.94504929 469.66616821]
[18.21879959 455.54129028]
[28.82045364 443.79754639]
[32.14271164 429.17010498]
[30.76462364 426.72897339]
[30.27045441 423.59490967]
[30.92898941 420.10180664]
[32.88327408 416.67468262]
[36.12269211 413.78329468]
[40.30970383 399.37951660]
[44.49671555 384.97570801]
[48.68372726 370.57192993]
[44.80658340 356.19079590]
[56.08843994 345.09890747]
[60.27545166 330.69512939]
[64.46246338 316.29135132]
[68.64947510 301.88754272]
[71.75358582 287.21224976]
[73.75759888 272.34674072]
[75.76161194 257.48120117]
[77.54407501 242.58747864]
[79.10459900 227.66888428]
[67.92575836 217.86216736]
[64.62603760 203.17967224]
[70.67534637 189.20614624]
[83.94615173 181.38362122]
[85.50667572 166.46501160]
[87.06719971 151.54641724]
[88.62772369 136.62780762]
[90.18824768 121.70919800]
[91.74876404 106.79059601]
[91.63710022 91.79100800]
[82.31473541 79.00804901]
[88.48481750 65.45153046]
[86.70234680 50.55781174]
[84.91988373 35.66409302]
[83.13742065 20.77037621]
[81.35494995 5.87665844]
[79.57248688 -9.01705933]
[77.79002380 -23.91077614]
[65.64969635 -33.67040634]
[64.05419159 -48.80014420]
[73.43332672 -60.31393814]
[71.65085602 -75.20765686]
[69.86839294 -90.10137177]
[66.65512085 -104.75315857]
[62.04111099 -119.02589417]
[56.42370987 -126.22885895]
[57.46636581 -133.54559326]
[53.06536865 -147.88543701]
[48.66437149 -162.22528076]
[44.26337433 -176.56513977]
[39.86237335 -190.90498352]
[26.09413528 -203.13270569]
[30.68767166 -220.06982422]
[26.07366180 -234.34255981]
[21.45965385 -248.61529541]
[16.84564400 -262.88803101]
[14.13216114 -248.13549805]
[6.83303261 -235.03120422]
[-4.28144693 -224.95805359]
[-18.03833961 -218.97909546]
[-32.98584747 -217.72531128]
[-47.54652786 -221.32901001]
[-60.18375397 -229.40988159]
[-69.56388855 -241.11514282]
[-74.69702148 -255.20950317]
[-75.04145050 -270.20553589]
[-70.56082153 -284.52072144]
[-61.72798157 -296.64428711]
[-49.47508621 -305.29684448]
[-35.09521484 -309.56521606]
[-20.10590363 -308.99902344]
[-6.08901405 -303.65798950]
[5.47621822 -294.10574341]
[13.36936092 -281.35018921]
[12.47654438 -296.32357788]
[11.58372879 -311.29699707]
[-2.79285312 -316.23483276]
[-14.18214130 -326.30224609]
[-20.84735107 -339.96398926]
[-21.77208710 -355.13677979]
[-16.81533241 -369.50683594]
[-6.73295832 -380.88287354]
[6.93754768 -387.53012085]
[22.11153221 -388.43490601]
[36.47507477 -383.45922852]
[47.83783722 -373.36190796]
[54.46707916 -359.68267822]
[55.35189438 -344.50750732]
[50.35734940 -330.15051270]
[40.24508286 -318.80105591]
[26.55713463 -312.18981934]
[27.44995117 -297.21640015]
[28.34276581 -282.24301147]
[31.11837769 -267.50204468]
[35.73238754 -253.22930908]
[40.34639740 -238.95657349]
[44.96040344 -224.68383789]
[55.58393478 -218.89875793]
[59.54475021 -207.04566956]
[54.20222092 -195.30598450]
[58.60322189 -180.96612549]
[63.00421906 -166.62628174]
[67.40522003 -152.28643799]
[71.80621338 -137.94659424]
[76.31384277 -123.63990784]
[80.92784882 -109.36717224]
[84.46818542 -123.94338226]
[93.56648254 -135.86903381]
[106.68952179 -143.13442993]
[121.62583160 -144.51522827]
[135.85838318 -139.77873230]
[146.98875427 -129.72314453]
[153.14126587 -116.04298401]
[153.27912903 -101.04361725]
[147.37908936 -87.25270081]
[136.43542480 -76.99423218]
[122.29232788 -71.99694824]
[107.33316040 -73.10298157]
[94.07880402 -80.12595367]
[84.76210785 -91.88384247]
[86.54457855 -76.99011993]
[88.32704163 -62.09640503]
[100.15829468 -53.12104797]
[102.17813873 -38.04209518]
[92.68373871 -25.69324303]
[94.46620178 -10.79952526]
[96.24867249 4.09419250]
[98.03113556 18.98790932]
[99.81359863 33.88162613]
[101.59606934 48.77534485]
[103.37853241 63.66906357]
[112.57340240 75.38672638]
[106.53081512 90.00854492]
[112.35227966 76.18427277]
[122.72200012 65.34596252]
[136.27566528 58.91958618]
[151.23004150 57.75064468]
[165.61764526 61.99292755]
[177.54551697 71.08828735]
[185.44436646 83.84008789]
[188.27494812 98.57059479]
[185.66484070 113.34175873]
[177.95747375 126.21018982]
[166.16687012 135.48280334]
[151.84428406 139.93965149]
[136.87409973 138.99435425]
[123.22589874 132.77127075]
[112.69535065 122.08915710]
[106.66737366 108.35112000]
[105.10684967 123.26972198]
[103.54632568 138.18832397]
[101.98580170 153.10693359]
[100.42527771 168.02554321]
[98.86475372 182.94413757]
[110.22949982 193.34361267]
[113.25617218 208.26649475]
[106.98946381 221.94833374]
[94.02320099 229.22940063]
[92.46268463 244.14801025]
[94.80158997 250.33193970]
[93.81455994 255.92861938]
[90.62713623 259.48519897]
[88.62312317 274.35073853]
[86.61911011 289.21627808]
[97.00724030 278.39559937]
[111.38612366 274.12387085]
[125.99715424 277.51766968]
[137.02104187 287.68988037]
[141.57615662 301.98150635]
[138.47183228 316.65676880]
[128.51950073 327.87957764]
[114.32070160 332.71630859]
[99.58695221 329.90264893]
[88.16962433 320.17410278]
[83.05325317 306.07455444]
[78.86624146 320.47836304]
[74.67922974 334.88214111]
[70.49221802 349.28591919]
[74.06988525 364.69729614]
[63.08750916 374.75894165]
[58.90049744 389.16271973]
[54.71348572 403.56652832]
[50.52647400 417.97030640]
[46.77017212 432.49237061]
[43.44791412 447.11981201]
[47.93653488 462.29092407]
[37.57250977 472.98843384]
[34.25025177 487.61587524]
[30.92799187 502.24334717]
[43.93214798 509.97296143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 209]
[18 208]
[19 207]
[21 205]
[22 204]
[27 203]
[28 202]
[29 201]
[30 200]
[32 198]
[33 197]
[34 196]
[35 195]
[36 184]
[37 183]
[38 182]
[39 179]
[40 178]
[44 174]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[50 153]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[61 142]
[62 141]
[63 140]
[64 126]
[65 125]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
[73 117]
[74 116]
[75 115]
[76 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
