%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[134.28376770 657.42163086]
[127.98407745 643.70239258]
[125.62053680 628.79217529]
[127.36852264 613.79724121]
[133.09834290 599.83044434]
[142.38478088 587.92816162]
[154.53874207 578.97363281]
[168.65832520 573.63128662]
[167.32008362 558.69110107]
[165.98185730 543.75091553]
[164.64361572 528.81072998]
[163.30538940 513.87054443]
[161.96714783 498.93038940]
[159.96313477 484.06484985]
[157.29733276 469.30361938]
[154.63154602 454.54241943]
[151.96574402 439.78118896]
[137.35845947 436.68981934]
[125.01416016 428.21850586]
[116.83153534 415.63241577]
[114.08359528 400.83251953]
[117.21971130 386.06845093]
[125.79244232 373.59640503]
[138.52110291 365.33465576]
[135.85531616 350.57342529]
[125.97929382 339.42382812]
[131.14085388 324.46826172]
[128.47506714 309.70706177]
[125.80927277 294.94583130]
[123.14347839 280.18463135]
[120.47767639 265.42340088]
[117.81188202 250.66218567]
[107.93586731 239.51258850]
[113.09743500 224.55702209]
[108.81523895 218.53335571]
[110.50354767 209.55630493]
[108.05782318 194.75703430]
[105.61209106 179.95776367]
[103.16636658 165.15849304]
[100.72064209 150.35922241]
[98.27490997 135.55995178]
[88.56598663 124.26454926]
[93.94965363 109.38749695]
[91.39382172 94.60684204]
[81.32712555 82.40142059]
[86.67936707 68.50168610]
[74.46171570 54.72451401]
[81.03536224 38.45324707]
[78.15009308 23.73335457]
[65.31751251 14.90371227]
[62.60112381 -0.06545223]
[71.09792328 -12.24494457]
[68.21264648 -26.96483612]
[65.32737732 -41.68472672]
[62.44210052 -56.40461731]
[59.55682755 -71.12451172]
[56.67155838 -85.84439850]
[52.80725098 -100.33809662]
[47.98125458 -114.54055023]
[43.15525436 -128.74301147]
[38.32925797 -142.94546509]
[33.08253860 -156.99794006]
[27.41975403 -170.88795471]
[21.75696754 -184.77798462]
[16.09418106 -198.66801453]
[3.71959734 -208.52601624]
[6.07956314 -223.23246765]
[0.41677651 -237.12249756]
[-11.22907829 -239.51220703]
[-20.18367577 -247.14869690]
[-24.29752350 -258.04687500]
[-22.65684509 -269.45843506]
[-15.78373814 -278.56484985]
[-21.03045654 -292.61730957]
[-26.27717400 -306.66979980]
[-41.03535843 -303.79821777]
[-56.06490707 -303.39511108]
[-70.95580292 -305.47140503]
[-85.30181885 -309.97048950]
[-98.71157074 -316.76962280]
[-110.81924438 -325.68334961]
[-121.29452515 -336.46844482]
[-129.85163879 -348.83071899]
[-136.25715637 -362.43289185]
[-140.33630371 -376.90390015]
[-141.97782898 -391.84896851]
[-141.13691711 -406.86041260]
[-137.83654785 -421.52865601]
[-132.16671753 -435.45355225]
[-124.28213501 -448.25524902]
[-114.39788055 -459.58447266]
[-102.78361511 -469.13217163]
[-89.75616455 -476.63784790]
[-75.67095184 -481.89682007]
[-60.91221237 -484.76553345]
[-45.88258743 -485.16577148]
[-30.99208832 -483.08657837]
[-16.64694595 -478.58471680]
[-3.23850012 -471.78302002]
[8.86745358 -462.86697388]
[19.34065628 -452.07986450]
[27.89539337 -439.71594238]
[34.29828262 -426.11251831]
[38.37464905 -411.64071655]
[40.01328659 -396.69534302]
[39.16949463 -381.68408203]
[35.86629105 -367.01647949]
[30.19378662 -353.09265137]
[22.30673409 -340.29248047]
[12.42029762 -328.96514893]
[0.80418676 -319.41970825]
[-12.22470284 -311.91650391]
[-6.97798491 -297.86404419]
[-1.73126662 -283.81155396]
[15.35038090 -277.22879028]
[22.31524277 -259.95443726]
[14.30680370 -242.78529358]
[19.96958923 -228.89526367]
[31.93913269 -220.03076172]
[29.98420715 -204.33079529]
[35.64699554 -190.44078064]
[41.30978012 -176.55075073]
[46.97256851 -162.66072083]
[49.50109482 -161.45046997]
[51.70257950 -159.16572571]
[53.16535568 -155.92602539]
[53.52860260 -151.99758911]
[52.53171539 -147.77145386]
[57.35771179 -133.56900024]
[62.18370819 -119.36654663]
[67.00970459 -105.16409302]
[72.04840088 -119.29248810]
[83.86029053 -128.53799438]
[98.78531647 -130.03578186]
[112.19881439 -123.32176971]
[119.94445801 -110.47634125]
[119.62217712 -95.47980499]
[111.33183289 -82.97899628]
[97.64228058 -76.84742737]
[82.79537201 -78.98503876]
[71.39144897 -88.72967529]
[74.27671814 -74.00978088]
[77.16199493 -59.28989029]
[80.04726410 -44.56999969]
[82.93254089 -29.85010910]
[85.81781006 -15.13021660]
[98.28385162 -7.05968857]
[101.41961670 7.82727242]
[92.86997986 20.84808159]
[95.75525665 35.56797409]
[105.61606598 42.57447433]
[108.14029694 54.81424332]
[101.44058990 65.83589172]
[111.31660461 76.98548889]
[106.15503693 91.94104767]
[110.57276917 98.68316650]
[108.74892426 106.94177246]
[118.63278198 119.29571533]
[113.07418060 133.11422729]
[115.51991272 147.91349792]
[117.96563721 162.71276855]
[120.41136169 177.51203918]
[122.85709381 192.31130981]
[125.30281830 207.11058044]
[127.85865021 221.89123535]
[137.92533875 234.09664917]
[132.57310486 247.99638367]
[135.23889160 262.75759888]
[137.90469360 277.51882935]
[140.57048035 292.28002930]
[143.23628235 307.04125977]
[145.90208435 321.80249023]
[155.96876526 334.00790405]
[150.61653137 347.90762329]
[153.28231812 362.66885376]
[168.09674072 365.95648193]
[180.49043274 374.64208984]
[188.59263611 387.37661743]
[191.19500732 402.20275879]
[187.93164062 416.85592651]
[179.33023071 429.10995483]
[166.72695923 437.11538696]
[169.39276123 451.87661743]
[172.05856323 466.63784790]
[174.72434998 481.39904785]
[184.14457703 469.72604370]
[199.04447937 467.99603271]
[210.88871765 477.20004272]
[212.89237976 492.06561279]
[203.90766907 504.07708740]
[189.08143616 506.35369873]
[176.90733337 497.59213257]
[178.24557495 512.53234863]
[179.58380127 527.47253418]
[180.92204285 542.41271973]
[182.26026917 557.35290527]
[183.59851074 572.29309082]
[198.44274902 575.04101562]
[211.99462891 581.69299316]
[223.24851990 591.75543213]
[231.36929321 604.48162842]
[235.75434875 618.92718506]
[236.07827759 634.02014160]
[232.31704712 648.64050293]
[224.74975586 661.70336914]
[213.93795776 672.23937988]
[200.68394470 679.46673584]
[185.97128296 682.84899902]
[170.89172363 682.13525391]
[156.56427002 677.37854004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 197]
[9 196]
[10 195]
[11 194]
[12 193]
[13 192]
[14 185]
[15 184]
[16 183]
[17 182]
[24 175]
[25 174]
[27 172]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[34 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[43 157]
[44 155]
[46 153]
[48 150]
[49 149]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 131]
[59 130]
[60 129]
[61 128]
[62 123]
[63 122]
[64 121]
[65 120]
[67 118]
[68 117]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
