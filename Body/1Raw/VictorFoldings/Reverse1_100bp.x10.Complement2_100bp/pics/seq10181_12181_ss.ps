%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[16.87764168 504.32730103]
[8.20075226 516.57086182]
[-1.32747877 528.16424561]
[-11.65849781 539.04833984]
[-22.73966026 549.16766357]
[-34.51449966 558.47070312]
[-46.92300797 566.91003418]
[-59.90196228 574.44262695]
[-73.38521576 581.03009033]
[-87.30406189 586.63891602]
[-101.58757782 591.24047852]
[-116.16297913 594.81134033]
[-130.95597839 597.33331299]
[-145.89120483 598.79351807]
[-160.89256287 599.18457031]
[-175.88357544 598.50439453]
[-190.78787231 596.75653076]
[-205.52951050 593.94982910]
[-220.03335571 590.09857178]
[-234.22549438 585.22253418]
[-248.03361511 579.34637451]
[-261.38735962 572.50012207]
[-274.21868896 564.71875000]
[-286.46218872 556.04174805]
[-298.05548096 546.51342773]
[-308.93948364 536.18231201]
[-319.05874634 525.10107422]
[-328.36166382 513.32617188]
[-336.80090332 500.91760254]
[-344.33340454 487.93859863]
[-350.92080688 474.45529175]
[-356.52951050 460.53637695]
[-361.13098145 446.25283813]
[-364.70172119 431.67739868]
[-367.22357178 416.88439941]
[-368.68365479 401.94915771]
[-369.07458496 386.94778442]
[-368.39428711 371.95678711]
[-366.64630127 357.05249023]
[-363.83947754 342.31088257]
[-359.98815918 327.80706787]
[-355.11196899 313.61495972]
[-349.23571777 299.80688477]
[-342.38940430 286.45318604]
[-334.60787964 273.62194824]
[-325.93078613 261.37850952]
[-316.40237427 249.78529358]
[-306.07119751 238.90136719]
[-294.98986816 228.78219604]
[-283.21490479 219.47933960]
[-270.80627441 211.04020691]
[-257.82720947 203.50779724]
[-244.34384155 196.92051697]
[-230.42491150 191.31190491]
[-216.14131165 186.71055603]
[-201.56587219 183.13992310]
[-186.77282715 180.61817932]
[-171.83757019 179.15820312]
[-156.83622742 178.76741028]
[-141.84521484 179.44779968]
[-126.94094086 181.19592285]
[-112.19934845 184.00283813]
[-97.69556427 187.85427856]
[-83.50349426 192.73057556]
[-69.69545746 198.60691833]
[-56.34181976 205.45335388]
[-43.51062393 213.23497009]
[-31.26725960 221.91215515]
[-19.67411613 231.44064331]
[-9.34744740 220.56130981]
[0.97922117 209.68197632]
[11.30589008 198.80264282]
[21.63255882 187.92330933]
[31.95922661 177.04397583]
[42.28589630 166.16464233]
[52.28406906 154.98266602]
[61.42287064 143.08802795]
[70.02143097 130.79719543]
[78.61999512 118.50635529]
[87.03461456 106.08885956]
[88.02384186 92.14206696]
[100.42398071 85.68233490]
[108.65279388 73.14093018]
[116.88159943 60.59952927]
[125.11040497 48.05813217]
[130.46159363 34.04510880]
[132.68670654 19.21106339]
[121.79766846 8.31450844]
[119.44035339 -6.72864532]
[126.31172943 -20.11700439]
[139.59017944 -26.81184196]
[141.81529236 -41.64588547]
[144.04042053 -56.47992706]
[138.43585205 -71.27517700]
[147.97552490 -82.71388245]
[150.20063782 -97.54792023]
[152.42576599 -112.38196564]
[154.65087891 -127.21601105]
[156.87599182 -142.05004883]
[159.10110474 -156.88409424]
[145.39332581 -163.23022461]
[134.02961731 -173.18223572]
[125.93119049 -185.93341064]
[121.75454712 -200.45002747]
[121.83827972 -215.55531311]
[126.17559052 -230.02474976]
[134.41487122 -242.68534851]
[145.88821411 -252.51078796]
[159.66551208 -258.70455933]
[174.62989807 -260.76455688]
[189.56829834 -258.52377319]
[203.26969910 -252.16389465]
[214.62341309 -242.20045471]
[222.70901489 -229.44116211]
[226.87107849 -214.92034912]
[226.77217102 -199.81515503]
[222.42031860 -185.35009766]
[214.16831970 -172.69776917]
[202.68511963 -162.88386536]
[188.90161133 -156.70394897]
[173.93515015 -154.65898132]
[171.71003723 -139.82493591]
[169.48492432 -124.99089050]
[167.25979614 -110.15685272]
[165.03468323 -95.32280731]
[162.80957031 -80.48876190]
[168.57328796 -66.75453949]
[158.87445068 -54.25481033]
[156.64933777 -39.42076874]
[154.42422485 -24.58672333]
[165.15402222 -14.29063320]
[167.79484558 0.52456278]
[161.12760925 14.21402931]
[147.52075195 21.43618011]
[145.29563904 36.27022552]
[153.86109924 23.95629883]
[164.70126343 13.58851242]
[177.38435364 5.57980967]
[191.40519714 0.24917333]
[206.20536804 -2.19107866]
[221.19538879 -1.64375222]
[235.77818298 1.86935306]
[249.37295532 8.20831108]
[261.43820190 17.12064362]
[271.49337769 28.25137711]
[279.13803101 41.15717697]
[284.06759644 55.32401276]
[286.08578491 70.18762207]
[285.11221313 85.15599060]
[281.18566895 99.63294220]
[274.46249390 113.04186249]
[265.21051025 124.84867096]
[253.79821777 134.58311462]
[240.68014526 141.85748291]
[226.37879944 146.38201904]
[211.46379089 147.97653198]
[196.52917480 146.57749939]
[182.16979980 142.24066162]
[168.95758057 135.13873291]
[157.41877747 125.55458832]
[148.01293945 113.86996460]
[141.11474609 100.55024719]
[136.99890137 86.12596893]
[135.82937622 71.17163086]
[137.65180969 56.28693771]
[129.42300415 68.82833862]
[121.19419098 81.36973572]
[112.96538544 93.91114044]
[111.97615814 107.85793304]
[99.57601929 114.31766510]
[98.81831360 120.88557434]
[95.37442017 125.40626526]
[90.91083527 127.10491943]
[82.31227112 139.39575195]
[73.71370697 151.68659973]
[88.63471222 150.14915466]
[100.35909271 159.50538635]
[102.17059326 174.39559937]
[93.03150177 186.29000854]
[78.17710876 188.37496948]
[66.11668396 179.45610046]
[63.75876617 164.64347839]
[63.15038681 168.94276428]
[61.38328171 172.47006226]
[58.84242630 174.95591736]
[55.96075821 176.28353882]
[53.16522980 176.49130249]
[42.83856201 187.37063599]
[32.51189423 198.24996948]
[22.18522453 209.12931824]
[11.85855579 220.00865173]
[1.53188694 230.88798523]
[-8.79478168 241.76731873]
[1.32464659 252.84840393]
[10.62777233 264.62316895]
[19.06718826 277.03161621]
[26.59988785 290.01049805]
[33.18748474 303.49371338]
[38.79641724 317.41250610]
[43.39809036 331.69598389]
[46.96906662 346.27136230]
[49.49114609 361.06436157]
[50.95146942 375.99957275]
[51.34260559 391.00091553]
[50.66255188 405.99194336]
[48.91478348 420.89624023]
[46.10819626 435.63790894]
[42.25709915 450.14178467]
[37.38111877 464.33395386]
[31.50509262 478.14212036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 193]
[70 192]
[71 191]
[72 190]
[73 189]
[74 188]
[75 187]
[76 182]
[77 175]
[78 174]
[79 173]
[80 170]
[82 168]
[83 167]
[84 166]
[85 165]
[86 135]
[87 134]
[91 130]
[92 129]
[93 128]
[95 126]
[96 125]
[97 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
