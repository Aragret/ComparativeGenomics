%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[200.66752625 556.39337158]
[203.40084839 541.62030029]
[208.12036133 527.35705566]
[214.73817444 513.86938477]
[223.13098145 501.40844727]
[233.14242554 490.20645142]
[244.58599854 480.47204590]
[257.24853516 472.38662720]
[250.97117615 458.76333618]
[244.69381714 445.14001465]
[238.41645813 431.51669312]
[232.13909912 417.89337158]
[225.86174011 404.27005005]
[216.51481628 403.88864136]
[207.89581299 400.10580444]
[201.20568848 393.40264893]
[197.39332581 384.67016602]
[197.02108765 375.09109497]
[200.18223572 365.97970581]
[206.48234558 358.60144043]
[201.02699280 344.62866211]
[195.57162476 330.65585327]
[190.11627197 316.68304443]
[184.66091919 302.71026611]
[172.82467651 293.66851807]
[175.01313782 277.99942017]
[169.55778503 264.02661133]
[163.38200378 250.35694885]
[156.50259399 237.02751160]
[149.62318420 223.69808960]
[142.74377441 210.36866760]
[135.86436462 197.03923035]
[130.00328064 192.53706360]
[128.98342896 183.45974731]
[122.30323029 170.02935791]
[115.62303162 156.59898376]
[108.44792938 169.77160645]
[93.70282745 172.52516174]
[82.25727844 162.82983398]
[82.54850769 147.83265686]
[94.36183167 138.58900452]
[108.98761749 141.91191101]
[103.32482910 128.02188110]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[70.41056061 67.78289795]
[72.77053070 53.07644272]
[67.10774231 39.18641663]
[61.44495392 25.29638863]
[55.47339249 11.53628635]
[49.19603348 -2.08702993]
[42.91867065 -15.71034622]
[36.48513794 -22.19474792]
[36.65095139 -29.58354378]
[30.57711792 -43.29880905]
[24.40135002 -56.96847916]
[18.12398911 -70.59179688]
[5.32156610 -79.88741302]
[7.02250004 -94.68457794]
[0.74513942 -108.30789948]
[-5.53222132 -121.93121338]
[-11.80958176 -135.55453491]
[-18.08694267 -149.17784119]
[-24.36430359 -162.80116272]
[-30.64166451 -176.42448425]
[-36.91902542 -190.04779053]
[-43.19638443 -203.67111206]
[-49.47374725 -217.29441833]
[-55.75110626 -230.91773987]
[-70.20122528 -226.78318787]
[-85.11314392 -224.90299988]
[-100.13730621 -225.32125854]
[-114.92153168 -228.02815247]
[-129.11924744 -232.96022034]
[-142.39762878 -240.00186157]
[-154.44543457 -248.98800659]
[-164.98023987 -259.70800781]
[-173.75509644 -271.91058350]
[-180.56428528 -285.30966187]
[-185.24821472 -299.59115601]
[-187.69708252 -314.42028809]
[-187.85348511 -329.44946289]
[-185.71374512 -344.32635498]
[-181.32801819 -358.70223999]
[-174.79913330 -372.24011230]
[-166.28012085 -384.62261963]
[-155.97068787 -395.55953979]
[-144.11248779 -404.79446411]
[-130.98350525 -412.11090088]
[-116.89150238 -417.33734131]
[-102.16681671 -420.35131836]
[-87.15460968 -421.08212280]
[-72.20679474 -419.51266479]
[-57.67376328 -415.67971802]
[-43.89619827 -409.67312622]
[-31.19706154 -401.63369751]
[-19.87403870 -391.74990845]
[-10.19255924 -380.25341797]
[-2.37957048 -367.41372681]
[3.38178039 -353.53182983]
[6.95643902 -338.93310547]
[8.26060963 -323.95980835]
[7.26372147 -308.96292114]
[3.98914242 -294.29400635]
[-1.48636639 -280.29687500]
[-9.03445148 -267.29968262]
[-18.47817421 -255.60710144]
[-29.59616089 -245.49320984]
[-42.12779236 -237.19509888]
[-35.85042953 -223.57179260]
[-29.57306862 -209.94847107]
[-23.29570770 -196.32514954]
[-17.01834869 -182.70184326]
[-10.74098682 -169.07852173]
[-4.46362638 -155.45520020]
[1.81373417 -141.83189392]
[8.09109497 -128.20857239]
[14.36845589 -114.58525848]
[20.64581680 -100.96194458]
[32.99924088 -92.64075470]
[31.74730492 -76.86915588]
[38.02466583 -63.24584198]
[43.67886353 -58.48644638]
[44.29238510 -49.37264252]
[50.36621857 -35.65737534]
[56.54198837 -21.98770714]
[62.81934738 -8.36439037]
[69.09671021 5.25892544]
[72.26006317 6.81633186]
[74.82624054 9.98331547]
[76.04694366 14.46251011]
[75.33498383 19.63360214]
[80.99777222 33.52362823]
[86.66055298 47.41365814]
[98.63009644 56.27815628]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[117.21485138 122.35909271]
[122.87763977 136.24913025]
[129.05340576 149.91879272]
[135.73359680 163.34916687]
[142.41380310 176.77954102]
[149.19378662 190.15982056]
[156.07319641 203.48924255]
[162.95262146 216.81867981]
[169.83203125 230.14810181]
[176.71144104 243.47753906]
[181.18859863 229.16128540]
[193.75233459 220.96662903]
[208.65870667 222.64006042]
[219.09269714 233.41651917]
[220.28402710 248.36912537]
[211.68804932 260.66177368]
[197.23472595 264.67443848]
[183.53057861 258.57125854]
[188.98593140 272.54406738]
[201.21237183 282.58520508]
[198.63371277 297.25491333]
[204.08906555 311.22769165]
[209.54443359 325.20050049]
[214.99978638 339.17327881]
[220.45513916 353.14608765]
[240.22068787 360.32202148]
[248.14950562 379.48004150]
[239.48504639 397.99270630]
[245.76240540 411.61602783]
[252.03976440 425.23931885]
[258.31713867 438.86264038]
[264.59448242 452.48596191]
[270.87185669 466.10928345]
[285.24533081 461.73703003]
[300.08032227 459.36276245]
[315.10043335 459.03070068]
[330.02584839 460.74703979]
[344.57849121 464.47979736]
[358.48733521 470.15945435]
[371.49319458 477.68017578]
[383.35379028 486.90188599]
[393.84817505 497.65277100]
[402.78085327 509.73254395]
[409.98541260 522.91619873]
[415.32763672 536.95806885]
[418.70800781 551.59661865]
[420.06350708 566.55908203]
[419.36895752 581.56683350]
[416.63723755 596.34014893]
[411.91925049 610.60388184]
[405.30288696 624.09228516]
[396.91143799 636.55413818]
[386.90121460 647.75720215]
[375.45867920 657.49285889]
[362.79702759 665.57965088]
[349.15213013 671.86694336]
[334.77816772 676.23767090]
[319.94293213 678.61029053]
[304.92279053 678.94073486]
[289.99755859 677.22277832]
[275.44528198 673.48846436]
[261.53707886 667.80731201]
[248.53204346 660.28515625]
[236.67243958 651.06213379]
[226.17919922 640.31011963]
[217.24783325 628.22943115]
[210.04469299 615.04498291]
[204.70399475 601.00256348]
[201.32522583 586.36364746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[20 166]
[21 165]
[22 164]
[23 163]
[24 162]
[26 160]
[27 159]
[28 151]
[29 150]
[30 149]
[31 148]
[32 147]
[34 146]
[35 145]
[36 144]
[42 143]
[43 142]
[44 141]
[46 139]
[47 138]
[49 136]
[50 135]
[51 134]
[52 130]
[53 129]
[54 128]
[56 127]
[57 126]
[58 124]
[59 123]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
[70 112]
[71 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
