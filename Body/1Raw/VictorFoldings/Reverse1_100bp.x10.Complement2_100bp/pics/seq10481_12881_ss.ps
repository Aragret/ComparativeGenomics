%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[53.17623520 505.79745483]
[46.91552734 519.62377930]
[36.08020020 530.25207520]
[22.13563919 536.24487305]
[6.96773195 536.79168701]
[-7.37218475 531.81866455]
[-18.94475555 521.99829102]
[-26.18488693 508.65869141]
[-28.11340904 493.60394287]
[-24.46950531 478.87008667]
[-15.74598408 466.44976807]
[-3.12262940 458.02270508]
[11.69335270 454.72860718]
[13.91847038 439.89456177]
[16.14358711 425.06051636]
[18.36870384 410.22647095]
[16.57821655 407.18893433]
[16.17002106 403.13327026]
[17.60662842 398.71859741]
[21.03868866 394.78564453]
[23.92396164 380.06576538]
[26.80923462 365.34585571]
[29.69450760 350.62597656]
[32.57978058 335.90609741]
[35.46505356 321.18618774]
[38.35032654 306.46630859]
[41.23559570 291.74639893]
[28.21510506 299.19403076]
[13.70636272 295.38659668]
[6.02063465 282.50524902]
[9.56065655 267.92895508]
[22.29854202 260.00769043]
[36.93745422 263.27914429]
[45.09137726 275.86828613]
[49.27838898 261.46450806]
[53.46540070 247.06072998]
[57.65241241 232.65695190]
[61.83942413 218.25317383]
[54.46311188 205.36419678]
[58.50414658 190.69706726]
[72.07330322 183.04750061]
[76.26031494 168.64372253]
[80.01660919 154.12165833]
[83.33887482 139.49420166]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[84.90116119 97.16236115]
[70.98834991 102.76893616]
[55.99526978 102.31337738]
[42.44851685 95.87245178]
[32.63095856 84.53157043]
[28.19702339 70.20187378]
[29.89391136 55.29816437]
[37.43566513 42.33197784]
[49.55136490 33.48834610]
[64.19930267 30.25757790]
[78.91104889 33.18411255]
[91.20740509 41.77477646]
[99.01623535 54.58189392]
[101.02147675 69.44889069]
[107.09531403 55.73362732]
[113.16914368 42.01836014]
[119.24298096 28.30309296]
[125.31681061 14.58782673]
[131.39064026 0.87255979]
[135.25495911 -13.62113380]
[136.81547546 -28.53973770]
[138.37599182 -43.45834351]
[139.93652344 -58.37694931]
[133.67691040 -72.90718079]
[142.69630432 -84.76044464]
[144.25682068 -99.67904663]
[145.81735229 -114.59765625]
[146.37556458 -129.58726501]
[145.92895508 -144.58061218]
[145.48234558 -159.57395935]
[145.03573608 -174.56730652]
[144.25442505 -189.54695129]
[143.13876343 -204.50540161]
[142.02311707 -219.46385193]
[140.90747070 -234.42231750]
[139.79182434 -249.38076782]
[124.81484985 -250.67941284]
[110.24018097 -254.36384583]
[96.44532013 -260.33862305]
[83.78760529 -268.44900513]
[72.59488678 -278.48492432]
[63.15709305 -290.18637085]
[55.71868134 -303.25030518]
[50.47232437 -317.33831787]
[47.55391693 -332.08547974]
[47.03905487 -347.10983276]
[48.94106674 -362.02218628]
[53.21069336 -376.43630981]
[59.73733902 -389.97879028]
[68.35194397 -402.29888916]
[78.83137512 -413.07745361]
[90.90419006 -422.03533936]
[104.25766754 -428.94046021]
[118.54592133 -433.61398315]
[133.39886475 -435.93487549]
[148.43174744 -435.84295654]
[163.25520325 -433.34066772]
[177.48526001 -428.49282837]
[190.75331116 -421.42495728]
[202.71571350 -412.32015991]
[213.06259155 -401.41427612]
[221.52592468 -388.98977661]
[227.88652039 -375.36849976]
[231.97961426 -360.90328979]
[233.69917297 -345.96878052]
[233.00067139 -330.95184326]
[229.90219116 -316.24145508]
[224.48399353 -302.21865845]
[216.88641357 -289.24664307]
[207.30627441 -277.66143799]
[195.99169922 -267.76312256]
[183.23577881 -259.80807495]
[169.36891174 -254.00239563]
[154.75027466 -250.49641418]
[155.86592102 -235.53796387]
[156.98156738 -220.57951355]
[158.09722900 -205.62104797]
[159.21287537 -190.66259766]
[161.63165283 -188.09709167]
[162.92797852 -184.23255920]
[162.50482178 -179.60932922]
[160.02908325 -175.01391602]
[160.47569275 -160.02056885]
[160.92230225 -145.02722168]
[161.36891174 -130.03387451]
[170.33111572 -142.06211853]
[184.33578491 -147.43511963]
[199.04342651 -144.48799133]
[209.89669800 -134.13394165]
[213.53260803 -119.58127594]
[208.82452393 -105.33929443]
[197.23130798 -95.82103729]
[182.34523010 -93.97583771]
[168.77891541 -100.37545013]
[160.73594666 -113.03713226]
[159.17543030 -98.11853027]
[157.61489868 -83.19992065]
[163.98614502 -69.73676300]
[154.85513306 -56.81642532]
[153.29460144 -41.89781952]
[151.73408508 -26.97921562]
[150.17355347 -12.06061077]
[158.29841614 -24.66959953]
[169.48713684 -34.66023254]
[182.93196106 -41.31127930]
[197.66233826 -44.14259338]
[212.61482239 -42.94977951]
[226.71002197 -37.81894684]
[238.93037415 -29.12049675]
[248.39369202 -17.48237991]
[254.41677856 -3.74475694]
[256.56488037 11.10063839]
[254.68286133 25.98210335]
[248.90661621 39.82533646]
[239.65313721 51.63097763]
[227.59043884 60.54676819]
[213.58934021 65.92907715]
[198.66058350 67.38933563]
[183.88191223 64.82214355]
[170.32017517 58.41281509]
[158.95442200 48.62405396]
[150.60517883 36.16251755]
[145.87515259 21.92781067]
[145.10591125 6.94639349]
[139.03207397 20.66166115]
[132.95825195 34.37692642]
[126.88441467 48.09219360]
[120.81057739 61.80746078]
[114.73674011 75.52272797]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[97.96633148 142.81646729]
[94.64407349 157.44392395]
[96.07521820 161.54341125]
[96.12263489 165.48831177]
[95.00483704 168.86262512]
[93.05299377 171.36399841]
[90.66409302 172.83073425]
[86.47708130 187.23451233]
[93.83096313 200.96617126]
[89.37955475 215.51400757]
[76.24320984 222.44018555]
[72.05619812 236.84396362]
[67.86918640 251.24774170]
[63.68217087 265.65151978]
[59.49516296 280.05529785]
[55.95549011 294.63168335]
[53.07021713 309.35156250]
[50.18494415 324.07147217]
[47.29967117 338.79135132]
[44.41439819 353.51126099]
[41.52912521 368.23114014]
[38.64385223 382.95101929]
[35.75857925 397.67092896]
[33.20274734 412.45156860]
[30.97763062 427.28561401]
[28.75251389 442.11965942]
[26.52739716 456.95370483]
[39.72483444 464.44985962]
[49.32013702 476.20971680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 208]
[14 207]
[15 206]
[16 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[41 189]
[42 188]
[43 183]
[44 182]
[45 181]
[46 180]
[48 178]
[62 177]
[63 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 150]
[69 149]
[70 148]
[71 147]
[73 145]
[74 144]
[75 143]
[76 133]
[77 132]
[78 131]
[79 130]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
