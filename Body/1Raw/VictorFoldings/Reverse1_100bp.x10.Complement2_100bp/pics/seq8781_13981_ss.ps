%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[-1.38164306 318.99197388]
[-1.46822393 334.00137329]
[-2.86264157 348.94610596]
[-5.55428362 363.71243286]
[-9.52266502 378.18795776]
[-14.73758221 392.26254272]
[-21.15934753 405.82907104]
[-28.73908615 418.78424072]
[-37.41910934 431.02951050]
[-47.13335800 442.47167969]
[-57.80789566 453.02362061]
[-69.36148834 462.60504150]
[-81.70619202 471.14306641]
[-94.74806976 478.57266235]
[-108.38785553 484.83728027]
[-122.52173615 489.88928223]
[-137.04214478 493.69021606]
[-151.83857727 496.21112061]
[-166.79841614 497.43280029]
[-181.80781555 497.34600830]
[-196.75251770 495.95138550]
[-211.51881409 493.25955200]
[-225.99429321 489.29095459]
[-240.06881714 484.07583618]
[-253.63523865 477.65390015]
[-266.59033203 470.07397461]
[-278.83547974 461.39376831]
[-290.27746582 451.67935181]
[-300.82928467 441.00466919]
[-310.41055298 429.45095825]
[-318.94839478 417.10614014]
[-326.37777710 404.06414795]
[-332.64224243 390.42428589]
[-337.69403076 376.29031372]
[-341.49475098 361.76986694]
[-344.01544189 346.97338867]
[-345.23693848 332.01351929]
[-345.14993286 317.00415039]
[-343.75509644 302.05944824]
[-341.06304932 287.29321289]
[-337.09426880 272.81777954]
[-331.87893677 258.74331665]
[-325.45681763 245.17698669]
[-317.87670898 232.22201538]
[-309.19631958 219.97698975]
[-299.48178101 208.53511047]
[-288.80694580 197.98347473]
[-277.25308228 188.40235901]
[-264.90811157 179.86470032]
[-251.86604309 172.43547058]
[-238.22607422 166.17121887]
[-224.09205627 161.11961365]
[-209.57153320 157.31910706]
[-194.77503967 154.79861450]
[-179.81515503 153.57733154]
[-164.80577087 153.66453552]
[-149.86109924 155.05958557]
[-135.09487915 157.75184631]
[-120.61951447 161.72084045]
[-106.54514313 166.93635559]
[-92.97889709 173.35868835]
[-80.02403259 180.93896484]
[-67.77912903 189.61950684]
[-56.33738708 199.33424377]
[-45.78589249 210.00921631]
[-34.23958969 200.43409729]
[-22.69328690 190.85897827]
[-11.14698601 181.28385925]
[0.39931583 171.70874023]
[11.94561768 162.13362122]
[16.80344009 148.05346680]
[32.36520767 145.20005798]
[33.80107880 133.18902588]
[43.34212875 125.11734009]
[56.22581100 125.72850800]
[67.91339111 116.32635498]
[79.60097504 106.92420197]
[91.28855896 97.52205658]
[92.24320221 93.78560638]
[94.84017944 90.48809814]
[98.84652710 88.35357666]
[103.71444702 87.97508240]
[115.81019592 79.10418701]
[127.90594482 70.23329163]
[140.00169373 61.36239243]
[142.53630066 45.99315262]
[154.92948914 37.16911316]
[169.56608582 39.68018723]
[181.66183472 30.80929184]
[193.75759888 21.93839645]
[205.85334778 13.06750011]
[208.58190918 0.46124253]
[218.83911133 -6.67833090]
[230.81463623 -4.97144890]
[243.04112244 -13.66127300]
[255.26760864 -22.35109711]
[267.49407959 -31.04092216]
[259.76162720 -43.90295029]
[253.03643799 -57.31915665]
[247.35800171 -71.21080780]
[242.75961304 -85.49638367]
[239.26828003 -100.09204865]
[236.90447998 -114.91213989]
[235.68209839 -129.86968994]
[235.60829163 -144.87693787]
[236.68350220 -159.84579468]
[238.90142822 -174.68841553]
[242.24903870 -189.31771851]
[246.70669556 -203.64782715]
[252.24824524 -217.59465027]
[258.84115601 -231.07635498]
[266.44674683 -244.01380920]
[275.02035522 -256.33111572]
[284.51171875 -267.95596313]
[294.86511230 -278.82012939]
[306.01974487 -288.85986328]
[317.91021729 -298.01626587]
[330.46670532 -306.23559570]
[343.61553955 -313.46960449]
[357.27957153 -319.67584229]
[371.37857056 -324.81790161]
[385.82983398 -328.86557007]
[400.54852295 -331.79516602]
[415.44830322 -333.58941650]
[430.44171143 -334.23785400]
[445.44076538 -333.73663330]
[460.35745239 -332.08871460]
[475.10418701 -329.30377197]
[489.59448242 -325.39813232]
[503.74328613 -320.39471436]
[517.46759033 -314.32290649]
[530.68676758 -307.21832275]
[543.32336426 -299.12265015]
[555.30316162 -290.08343506]
[566.55578613 -280.15365601]
[577.01531982 -269.39166260]
[586.62036133 -257.86053467]
[595.31445312 -245.62800598]
[603.04669189 -232.76582336]
[609.77160645 -219.34948730]
[615.44982910 -205.45773315]
[620.04791260 -191.17207336]
[623.53900146 -176.57633972]
[625.90246582 -161.75621033]
[627.12457275 -146.79862976]
[627.19812012 -131.79138184]
[626.12261963 -116.82254791]
[623.90441895 -101.97995758]
[620.55651855 -87.35073090]
[616.09857178 -73.02070618]
[610.55676270 -59.07398224]
[603.96362305 -45.59240341]
[596.35778809 -32.65509033]
[587.78393555 -20.33795929]
[578.29235840 -8.71329784]
[567.93878174 2.15067625]
[556.78393555 12.19020939]
[544.89331055 21.34638405]
[532.33666992 29.56546783]
[519.18768311 36.79922485]
[505.52352905 43.00521088]
[491.42443848 48.14699554]
[476.97308350 52.19441605]
[462.25433350 55.12371063]
[447.35452271 56.91769409]
[432.36111450 57.56583786]
[417.36206055 57.06433868]
[402.44540405 55.41613770]
[387.69869995 52.63090897]
[373.20849609 48.72499847]
[359.05978394 43.72132111]
[345.33560181 37.64925003]
[332.11654663 30.54441452]
[319.48013306 22.44850922]
[307.50051880 13.40904427]
[296.24804688 3.47906923]
[285.78869629 -7.28314352]
[276.18392944 -18.81443596]
[263.95742798 -10.12461185]
[251.73094177 -1.43478739]
[239.50445557 7.25503683]
[233.07038879 23.58199692]
[214.72424316 25.16325188]
[202.62849426 34.03414917]
[190.53273010 42.90504456]
[178.43698120 51.77593994]
[176.43356323 66.49062347]
[164.29312134 75.65927887]
[148.87258911 73.45814514]
[136.77684021 82.32904053]
[124.68109131 91.19993591]
[112.58534241 100.07083130]
[100.69070435 109.20963287]
[89.00312805 118.61178589]
[77.31554413 128.01393127]
[65.62796021 137.41609192]
[59.37374115 154.73562622]
[41.94033051 156.74635315]
[36.25663757 171.51139832]
[21.52073669 173.67991638]
[9.97443581 183.25505066]
[-1.57186615 192.83016968]
[-13.11816788 202.40528870]
[-24.66446877 211.98040771]
[-36.21076965 221.55552673]
[-27.67259216 233.90011597]
[-20.24281693 246.94187927]
[-13.97798920 260.58157349]
[-8.92578983 274.71539307]
[-5.12466955 289.23574829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 205]
[66 204]
[67 203]
[68 202]
[69 201]
[70 200]
[72 198]
[75 196]
[76 195]
[77 194]
[78 193]
[82 192]
[83 191]
[84 190]
[85 189]
[88 186]
[89 185]
[90 184]
[91 183]
[94 181]
[95 180]
[96 179]
[97 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
