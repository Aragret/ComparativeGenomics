%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[72.20852661 560.07568359]
[77.84516907 545.71490479]
[90.36441040 536.69976807]
[89.47159576 521.72637939]
[88.57877350 506.75296021]
[87.68595886 491.77957153]
[86.79314423 476.80615234]
[85.90032959 461.83276367]
[85.00751495 446.85934448]
[84.11470032 431.88595581]
[83.22187805 416.91253662]
[74.03639221 428.77114868]
[59.66753387 433.07647705]
[45.47453308 428.22274780]
[36.75102997 416.02029419]
[36.75067139 401.02029419]
[45.47359467 388.81738281]
[59.66636658 383.96298218]
[74.03543091 388.26763916]
[83.22187805 400.12689209]
[84.11470032 385.15350342]
[84.78448486 370.16845703]
[77.42955017 357.21646118]
[85.57430267 343.65277100]
[86.02091217 328.65942383]
[78.66597748 315.70742798]
[86.81072998 302.14373779]
[87.25733948 287.15039062]
[87.70394135 272.15704346]
[79.63986206 263.14053345]
[79.88922882 250.64569092]
[88.86367035 241.38165283]
[89.53345490 226.39662170]
[90.20323944 211.41157532]
[77.05897522 198.67015076]
[77.40819550 180.04782104]
[91.49585724 167.38085938]
[91.71918488 152.38252258]
[91.94251251 137.38418579]
[92.16584015 122.38584137]
[92.38916779 107.38750458]
[92.05419159 92.39124298]
[91.16137695 77.41783905]
[90.26856232 62.44443512]
[86.63391113 54.06427002]
[89.47560120 47.24176788]
[88.80581665 32.25672913]
[82.78046417 45.99336243]
[74.06574249 58.20211411]
[63.03221512 68.36386871]
[50.14902115 76.04653168]
[35.96396637 80.92343903]
[21.08020592 82.78721619]
[6.13060427 81.55862427]
[-8.24917221 77.28990173]
[-21.44768906 70.16254425]
[-32.90373993 60.47962570]
[-42.13020325 48.65286255]
[-48.73477173 35.18513489]
[-52.43661118 20.64909744]
[-53.07831955 5.66283083]
[-50.63261032 -9.13644314]
[-45.20347595 -23.11944962]
[-37.02176666 -35.69162750]
[-26.43537140 -46.31839752]
[-13.89443111 -54.54790497]
[0.06780817 -60.03023148]
[14.85766506 -62.53225708]
[29.84626579 -61.94760513]
[44.39628983 -58.30112457]
[57.88906097 -51.74787140]
[69.75086212 -42.56649399]
[79.47731781 -31.14738655]
[86.65486145 -17.97609711]
[90.97830200 -3.61267519]
[92.26378632 11.33231449]
[97.71914673 -2.64048338]
[96.91195679 -6.90691185]
[97.45025635 -10.81520557]
[99.05623627 -13.98636246]
[101.35754395 -16.17053032]
[103.93758392 -17.26666451]
[110.21495056 -30.88998032]
[116.49230957 -44.51329422]
[122.76966858 -58.13661194]
[122.54469299 -64.74425507]
[125.27988434 -69.72579956]
[129.44210815 -72.06779480]
[128.66030884 -87.86966705]
[141.25601196 -95.81935883]
[147.93620300 -109.24974060]
[154.61639404 -122.68011475]
[161.29658508 -136.11048889]
[167.97677612 -149.54086304]
[174.25415039 -163.16418457]
[180.12310791 -176.96835327]
[185.99206543 -190.77253723]
[191.86102295 -204.57670593]
[197.72998047 -218.38088989]
[184.95684814 -226.30221558]
[173.54266357 -236.08059692]
[163.75498962 -247.48681641]
[155.82327271 -260.25350952]
[149.93345642 -274.08139038]
[146.22357178 -288.64633179]
[144.78060913 -303.60687256]
[145.63839722 -318.61236572]
[148.77680969 -333.31103516]
[154.12229919 -347.35833740]
[161.54953003 -360.42495728]
[170.88442993 -372.20458984]
[181.90815735 -382.42114258]
[194.36228943 -390.83511353]
[207.95491028 -397.24923706]
[222.36738586 -401.51318359]
[237.26184082 -403.52700806]
[252.28915405 -403.24349976]
[267.09704590 -400.66928101]
[281.33840942 -395.86471558]
[294.67941284 -388.94241333]
[306.80731201 -380.06463623]
[317.43780518 -369.43954468]
[326.32171631 -357.31613159]
[333.25079346 -343.97866821]
[338.06259155 -329.73974609]
[340.64431763 -314.93313599]
[340.93545532 -299.90597534]
[338.92919922 -285.01049805]
[334.67254639 -270.59588623]
[328.26531982 -257.00000000]
[319.85766602 -244.54159546]
[309.64672852 -233.51268005]
[297.87179565 -224.17181396]
[284.80895996 -216.73794556]
[270.76437378 -211.38534546]
[256.06732178 -208.23947144]
[241.06227112 -207.37406921]
[226.10098267 -208.80944824]
[211.53416443 -212.51193237]
[205.66520691 -198.70774841]
[199.79624939 -184.90357971]
[193.92727661 -171.09939575]
[188.05831909 -157.29522705]
[188.98063660 -154.64805603]
[188.90995789 -151.47605896]
[187.64111328 -148.15559387]
[185.10887146 -145.13032532]
[181.40716553 -142.86067200]
[174.72695923 -129.43029785]
[168.04676819 -115.99991608]
[161.36657715 -102.56954193]
[154.68638611 -89.13916779]
[155.94599915 -74.29792023]
[142.87248230 -65.38759613]
[136.39299011 -51.85925293]
[130.11563110 -38.23593521]
[123.83826447 -24.61261940]
[117.56090546 -10.98930264]
[111.69194031 2.81487370]
[106.23658752 16.78767204]
[103.79085541 31.58694267]
[104.46063995 46.57197952]
[105.24196625 61.55162048]
[106.13478088 76.52502441]
[107.02759552 91.49842834]
[118.78466797 82.18331909]
[133.43162537 85.41850281]
[140.17129517 98.81913757]
[134.03543091 112.50676727]
[119.54716492 116.39138031]
[107.38750458 107.61083221]
[107.16417694 122.60916901]
[106.94084930 137.60751343]
[106.71752167 152.60585022]
[106.49419403 167.60418701]
[116.27661896 174.35998535]
[121.52945709 184.89129639]
[121.05127716 196.53024292]
[115.07646179 206.39013672]
[105.18827820 212.08135986]
[104.51849365 227.06640625]
[103.84870911 242.05143738]
[112.71150208 258.19244385]
[102.69728851 272.60363770]
[102.25068665 287.59701538]
[101.80407715 302.59036255]
[109.12706757 316.61477661]
[101.01425934 329.10604858]
[100.56764984 344.09939575]
[107.89064026 358.12380981]
[99.77783203 370.61508179]
[102.57020569 376.60791016]
[102.00216675 382.26251221]
[99.08810425 386.04632568]
[98.19528961 401.01971436]
[98.19528961 416.01971436]
[99.08810425 430.99313354]
[99.98091888 445.96652222]
[100.87373352 460.93994141]
[101.76654816 475.91336060]
[102.65936279 490.88674927]
[103.55218506 505.86016846]
[104.44499969 520.83355713]
[105.33781433 535.80694580]
[118.83962250 543.27050781]
[126.14283752 556.85974121]
[124.91703033 572.23834229]
[115.55335236 584.49902344]
[101.03971863 589.72955322]
[86.00738525 586.26080322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[20 195]
[21 194]
[22 191]
[24 189]
[25 188]
[27 186]
[28 185]
[29 184]
[32 182]
[33 181]
[34 180]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 165]
[43 164]
[44 163]
[46 162]
[47 161]
[76 160]
[77 159]
[82 158]
[83 157]
[84 156]
[85 155]
[88 154]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
