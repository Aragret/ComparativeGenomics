%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[219.92678833 374.06741333]
[226.66355896 360.64608765]
[234.91293335 348.09759521]
[244.56335449 336.59170532]
[255.48429871 326.28396606]
[246.52359009 314.25457764]
[237.56289673 302.22518921]
[228.60220337 290.19583130]
[222.08547974 286.70953369]
[219.59922791 277.91998291]
[205.87590027 272.13037109]
[204.07077026 256.41247559]
[195.29016113 244.25102234]
[186.50955200 232.08956909]
[177.72895813 219.92811584]
[165.84100342 217.69131470]
[158.42620850 207.63127136]
[159.89857483 194.81741333]
[151.30001831 182.52658081]
[142.70144653 170.23573303]
[133.92085266 158.07427979]
[124.96015167 146.04490662]
[115.99945068 134.01553345]
[107.03875732 121.98615265]
[98.07806396 109.95677185]
[91.12003326 105.88758087]
[89.07508850 97.68093109]
[80.29448700 85.51947021]
[71.51387787 73.35801697]
[62.73327637 61.19656372]
[49.92461395 64.44305420]
[36.80675888 63.14672089]
[24.93893814 57.48346329]
[15.72437382 48.14694214]
[10.24439144 36.26368332]
[9.13153839 23.25719261]
[12.49664974 10.67742538]
[19.91822243 0.01609089]
[11.50360394 -12.40140438]
[3.08898544 -24.81889915]
[-5.32563305 -37.23639679]
[-13.74025154 -49.65389252]
[-14.27178288 -34.66331100]
[-22.14342880 -21.89470863]
[-35.29755783 -14.68576717]
[-50.29571533 -14.92088413]
[-63.21741867 -22.53860092]
[-70.68495941 -35.54766846]
[-70.74635315 -50.54754257]
[-63.38553619 -63.61729431]
[-50.52662277 -71.34052277]
[-35.53089142 -71.69839478]
[-22.31884384 -64.59796906]
[-28.79833984 -78.12631226]
[-44.22812271 -88.17634583]
[-42.19788361 -105.60749817]
[-48.87807846 -119.03787231]
[-65.56135559 -124.29977417]
[-73.12832642 -139.69639587]
[-67.33484650 -155.48481750]
[-74.21425629 -168.81423950]
[-81.09367371 -182.14367676]
[-94.29839325 -190.85836792]
[-93.25988770 -205.71672058]
[-100.13929749 -219.04615784]
[-107.01871490 -232.37557983]
[-121.15211487 -227.28617859]
[-135.82891846 -224.08515930]
[-150.79797363 -222.82728577]
[-165.80316162 -223.53410339]
[-180.58769226 -226.19348145]
[-194.89862061 -230.75994873]
[-208.49104309 -237.15534973]
[-221.13237000 -245.27024841]
[-232.60630798 -254.96580505]
[-242.71652222 -266.07608032]
[-251.29000854 -278.41101074]
[-258.18005371 -291.75952148]
[-263.26879883 -305.89315796]
[-266.46911621 -320.57009888]
[-267.72625732 -335.53921509]
[-267.01873779 -350.54437256]
[-264.35867310 -365.32879639]
[-259.79150391 -379.63949585]
[-253.39546204 -393.23159790]
[-245.27996826 -405.87255859]
[-235.58386230 -417.34603882]
[-224.47309875 -427.45571899]
[-212.13775635 -436.02862549]
[-198.78894043 -442.91802979]
[-184.65505981 -448.00610352]
[-169.97795105 -451.20571899]
[-155.00877380 -452.46215820]
[-140.00366211 -451.75393677]
[-125.21936798 -449.09313965]
[-110.90888214 -444.52529907]
[-97.31707001 -438.12860107]
[-84.67650604 -430.01251221]
[-73.20349121 -420.31585693]
[-63.09433746 -409.20458984]
[-54.52202606 -396.86886597]
[-47.63324356 -383.51971436]
[-42.54586029 -369.38558960]
[-39.34693909 -354.70834351]
[-38.09120560 -339.73910522]
[-38.80015564 -324.73400879]
[-41.46165466 -309.94985962]
[-46.03015900 -295.63958740]
[-52.42750168 -282.04806519]
[-60.54420853 -269.40789795]
[-70.24139404 -257.93533325]
[-81.35313416 -247.82672119]
[-93.68928528 -239.25498962]
[-86.80986786 -225.92556763]
[-79.93045807 -212.59613037]
[-67.21779633 -204.83485413]
[-67.76424408 -189.02308655]
[-60.88483047 -175.69366455]
[-54.00541687 -162.36422729]
[-41.30282211 -160.20237732]
[-32.02624130 -150.98136902]
[-29.72038078 -137.90873718]
[-35.44770050 -125.71807098]
[-28.76750565 -112.28769684]
[-17.40334892 -108.14251709]
[-11.72805214 -97.00812531]
[-15.26999378 -84.60580444]
[-8.79049778 -71.07746124]
[-1.32275641 -58.06850815]
[7.09186220 -45.65101242]
[15.50648117 -33.23352051]
[23.92109871 -20.81602287]
[32.33571625 -8.39852810]
[48.97109604 -11.35220718]
[65.27739716 -6.72207355]
[77.96076965 4.60689735]
[84.43722534 20.39154053]
[83.35900116 37.47454453]
[74.89473724 52.41595840]
[83.67533875 64.57741547]
[92.45594025 76.73886871]
[101.23654175 88.90032959]
[110.10743713 100.99607849]
[119.06813812 113.02545929]
[128.02882385 125.05483246]
[136.98953247 137.08421326]
[145.95022583 149.11358643]
[151.86044312 152.07684326]
[154.92666626 156.86174011]
[154.99227905 161.63717651]
[163.59085083 173.92800903]
[172.18940735 186.21885681]
[189.05136108 193.61859131]
[189.89041138 211.14750671]
[198.67102051 223.30897522]
[207.45161438 235.47042847]
[216.23222351 247.63188171]
[230.58360291 254.29135132]
[231.76068115 269.13937378]
[240.63157654 281.23510742]
[249.59226990 293.26449585]
[258.55297852 305.29388428]
[267.51367188 317.32324219]
[280.51638794 309.81024170]
[294.30343628 303.85757446]
[308.68832397 299.54574585]
[323.47650146 296.93313599]
[338.46801758 296.05502319]
[353.46011353 296.92327881]
[368.25003052 299.52618408]
[382.63772583 303.82852173]
[396.42868042 309.77212524]
[409.43634033 317.27658081]
[421.48483276 326.24044800]
[432.41116333 336.54244995]
[442.06762695 348.04330444]
[450.32357788 360.58746338]
[457.06738281 374.00527954]
[462.20782471 388.11526489]
[465.67544556 402.72665405]
[467.42327881 417.64178467]
[467.42770386 432.65899658]
[465.68869019 447.57516479]
[462.22973633 462.18859863]
[457.09759521 476.30163574]
[450.36172485 489.72341919]
[442.11318970 502.27246094]
[432.46353149 513.77899170]
[421.54327393 524.08746338]
[409.50012207 533.05847168]
[396.49688721 540.57061768]
[382.70944214 546.52233887]
[368.32427979 550.83319092]
[353.53591919 553.44482422]
[338.54434204 554.32196045]
[323.55230713 553.45269775]
[308.76257324 550.84881592]
[294.37515259 546.54553223]
[280.58459473 540.60101318]
[267.57742310 533.09564209]
[255.52955627 524.13098145]
[244.60389709 513.82824707]
[234.94821167 502.32675171]
[226.69309998 489.78204346]
[219.95019531 476.36380005]
[214.81066895 462.25344849]
[211.34405518 447.64184570]
[209.59721375 432.72659302]
[209.59376526 417.70938110]
[211.33378601 402.79330444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 163]
[6 162]
[7 161]
[8 160]
[10 159]
[12 157]
[13 156]
[14 155]
[15 154]
[18 152]
[19 151]
[20 150]
[21 147]
[22 146]
[23 145]
[24 144]
[25 143]
[27 142]
[28 141]
[29 140]
[30 139]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[53 128]
[54 127]
[56 124]
[57 123]
[60 119]
[61 118]
[62 117]
[64 115]
[65 114]
[66 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
