%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[71.16732788 638.32666016]
[63.41578674 624.74548340]
[66.25840759 609.36846924]
[78.35298920 599.45611572]
[78.35298920 584.45611572]
[70.61568451 571.72882080]
[78.35298920 557.92864990]
[78.35298920 542.92864990]
[78.35298920 527.92864990]
[70.02403259 519.15625000]
[69.90126801 506.65948486]
[78.59590149 497.13235474]
[78.81922913 482.13403320]
[70.62180328 473.23858643]
[70.68511200 460.74139404]
[79.52062988 451.34478760]
[79.96723175 436.35144043]
[80.41384125 421.35809326]
[73.05890656 408.40609741]
[81.20365906 394.84240723]
[66.56177521 391.67138672]
[52.74823380 385.86227417]
[40.23406219 377.61151123]
[29.44625473 367.19894409]
[20.75323296 354.97805786]
[14.45224571 341.36425781]
[10.75921631 326.82055664]
[9.80133915 311.84188843]
[11.61269855 296.93835449]
[16.13306046 282.61761475]
[23.20987320 269.36788940]
[32.60341263 257.64108276]
[43.99491119 247.83749390]
[56.99736786 240.29212952]
[71.16868591 235.26321411]
[86.02673340 232.92341614]
[86.47333527 217.93006897]
[86.91994476 202.93672180]
[78.85586548 193.92022705]
[79.10523224 181.42535400]
[88.07967377 172.16133118]
[88.74945831 157.17628479]
[89.41924286 142.19125366]
[90.08902740 127.20620728]
[88.29904175 125.04887390]
[87.25575256 122.05251312]
[87.28301239 118.49798584]
[88.59711456 114.77809143]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[93.15117645 63.30321121]
[97.06723785 57.03533936]
[98.84970093 42.14162064]
[100.63217163 27.24790382]
[102.41463470 12.35418606]
[91.76729584 22.91989326]
[77.12052917 26.15598297]
[63.01280212 21.05971718]
[53.81553650 9.21022987]
[52.37861252 -5.72078657]
[59.14727783 -19.10679436]
[72.02418518 -26.79999352]
[87.01927948 -26.41656113]
[99.48617554 -18.07531166]
[105.56190491 -4.36061144]
[109.31820679 -18.88267136]
[113.07450867 -33.40473175]
[116.83081055 -47.92678833]
[120.58710480 -62.44884872]
[124.34340668 -76.97090912]
[127.99149323 -91.52053070]
[131.53117371 -106.09690094]
[125.49935150 -117.49777985]
[128.74763489 -129.56561279]
[139.00799561 -135.97276306]
[142.76429749 -150.49481201]
[146.52059937 -165.01687622]
[150.27690125 -179.53894043]
[154.03320312 -194.06098938]
[141.95428467 -203.24659729]
[134.33291626 -216.32168579]
[132.30358887 -231.27813721]
[136.14468384 -245.83264160]
[145.24075317 -257.77526855]
[158.18093872 -265.30502319]
[172.97769165 -267.30139160]
[176.73397827 -281.82342529]
[180.49028015 -296.34548950]
[184.13836670 -310.89511108]
[187.67803955 -325.47149658]
[191.21771240 -340.04788208]
[194.75738525 -354.62423706]
[193.74143982 -363.70199585]
[198.45979309 -369.39050293]
[194.42486572 -384.68853760]
[205.10279846 -395.07269287]
[208.85910034 -409.59475708]
[195.34088135 -416.21615601]
[183.43247986 -425.42346191]
[173.62150574 -436.83969116]
[166.30975342 -449.99731445]
[161.79660034 -464.35754395]
[160.26687622 -479.33233643]
[161.78321838 -494.30850220]
[166.28352356 -508.67276001]
[173.58351135 -521.83691406]
[183.38426208 -533.26190186]
[195.28443909 -542.47985840]
[208.79672241 -549.11334229]
[223.36781311 -552.89068604]
[238.40101624 -553.65722656]
[253.28074646 -551.38153076]
[267.39767456 -546.15692139]
[280.17373657 -538.19714355]
[291.08575439 -527.82830811]
[299.68685913 -515.47497559]
[305.62490845 -501.64294434]
[308.65667725 -486.89868164]
[308.65802002 -471.84594727]
[305.62893677 -457.10113525]
[299.69342041 -443.26803589]
[291.09454346 -430.91311646]
[280.18441772 -420.54229736]
[267.40979004 -412.58023071]
[253.29382324 -407.35299683]
[238.41450500 -405.07464600]
[223.38116455 -405.83847046]
[219.62486267 -391.31640625]
[223.92846680 -377.05706787]
[212.98185730 -365.63418579]
[209.33377075 -351.08456421]
[205.79409790 -336.50820923]
[202.25442505 -321.93182373]
[198.71475220 -307.35543823]
[200.19105530 -300.11373901]
[195.01234436 -292.58920288]
[191.25604248 -278.06713867]
[187.49974060 -263.54507446]
[199.47267151 -254.62442017]
[207.13885498 -241.76460266]
[209.30332947 -226.90930176]
[205.60545349 -212.31774902]
[196.57853699 -200.22113037]
[183.57318115 -192.48138428]
[168.55526733 -190.30470276]
[164.79896545 -175.78263855]
[161.04266357 -161.26057434]
[157.28636169 -146.73852539]
[153.53005981 -132.21646118]
[159.12356567 -115.58277130]
[146.10754395 -102.55722809]
[142.56787109 -87.98085785]
[144.04417419 -80.73915100]
[138.86546326 -73.21460724]
[135.10916138 -58.69254684]
[131.35285950 -44.17049026]
[127.59656525 -29.64842987]
[123.84026337 -15.12637043]
[120.08396149 -0.60431099]
[117.30834961 14.13665199]
[115.52588654 29.03036880]
[113.74342346 43.92408752]
[111.96095276 58.81780243]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[105.07406616 127.87599182]
[104.40428162 142.86103821]
[103.73449707 157.84606934]
[103.06471252 172.83111572]
[111.92749786 188.97212219]
[101.91329193 203.38331604]
[101.46669006 218.37667847]
[101.02008057 233.37002563]
[115.71251678 236.59004211]
[129.55938721 242.45353699]
[142.08967590 250.75942993]
[152.87745667 261.22366333]
[161.55635071 273.48880005]
[167.83198547 287.13626099]
[171.49194336 301.70065308]
[172.41302490 316.68560791]
[170.56529236 331.58068848]
[166.01315308 345.87878418]
[158.91302490 359.09341431]
[149.50802612 370.77520752]
[138.11956787 380.52722168]
[125.13649750 388.01849365]
[111.00168610 392.99511719]
[96.19701385 395.28900146]
[103.51999664 409.31341553]
[95.40718842 421.80468750]
[94.96058655 436.79803467]
[94.51397705 451.79138184]
[103.61610413 467.79867554]
[93.81756592 482.35736084]
[93.59423828 497.35568237]
[102.93367767 513.22570801]
[93.35298920 527.92864990]
[93.35298920 542.92864990]
[93.35298920 557.92864990]
[101.09028625 571.72882080]
[93.35298920 584.45611572]
[93.35298920 599.45611572]
[105.44757080 609.36846924]
[108.29019165 624.74548340]
[100.53865051 638.32666016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[7 204]
[8 203]
[9 202]
[12 200]
[13 199]
[16 197]
[17 196]
[18 195]
[20 193]
[36 177]
[37 176]
[38 175]
[41 173]
[42 172]
[43 171]
[44 170]
[49 169]
[51 167]
[52 166]
[54 165]
[55 164]
[56 163]
[57 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 154]
[74 153]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[88 140]
[89 139]
[90 138]
[91 136]
[92 135]
[93 134]
[94 133]
[96 132]
[98 130]
[99 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
