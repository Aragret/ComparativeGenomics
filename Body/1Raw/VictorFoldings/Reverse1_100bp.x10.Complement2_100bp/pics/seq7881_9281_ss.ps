%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[189.00398254 601.61889648]
[192.15487671 586.91369629]
[197.81161499 572.97912598]
[205.80229187 560.23864746]
[215.88407898 549.07940674]
[227.75059509 539.84051514]
[241.04124451 532.80273438]
[236.42723083 518.53002930]
[231.81323242 504.25729370]
[227.19921875 489.98455811]
[222.58520508 475.71182251]
[208.94638062 464.66876221]
[212.95140076 446.69540405]
[208.12539673 432.49295044]
[203.29939270 418.29049683]
[198.47340393 404.08804321]
[185.04089355 397.75534058]
[179.94432068 383.42077637]
[186.67771912 369.37445068]
[181.85171509 355.17199707]
[176.81480408 341.04296875]
[171.56808472 326.99047852]
[166.32136536 312.93801880]
[155.45011902 307.63305664]
[150.96398926 295.96865845]
[155.77697754 284.00213623]
[150.74006653 269.87310791]
[145.70314026 255.74407959]
[131.55038452 256.07968140]
[117.96526337 252.02186584]
[106.27980042 243.95465088]
[97.64398956 232.65586853]
[92.91268158 219.22215271]
[92.56094360 204.96249390]
[96.63641357 191.27072144]
[104.75333405 179.48924255]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[56.29775238 47.60083008]
[39.77408981 40.03265762]
[27.44204521 26.72867203]
[21.17025566 9.74312496]
[21.89433289 -8.31486416]
[29.47739410 -24.68208313]
[42.73500061 -36.86404800]
[30.36041832 -46.72205353]
[32.72038269 -61.42850876]
[27.05759811 -75.31853485]
[22.07775307 -79.66741180]
[20.30746841 -85.06769562]
[21.43979645 -89.70740509]
[16.19307899 -103.75987244]
[10.94635963 -117.81234741]
[-3.52527642 -129.19888306]
[0.05200049 -146.37939453]
[-5.40335655 -160.35218811]
[-10.85871315 -174.32499695]
[-15.26151752 -159.98570251]
[-26.64878654 -150.22198486]
[-41.49205399 -148.05924988]
[-55.19196701 -154.16763306]
[-63.50346375 -166.65438843]
[-63.85113525 -181.65036011]
[-56.12725067 -194.50888062]
[-42.72513962 -201.24559021]
[-27.79759026 -199.77307129]
[-15.96992016 -190.54736328]
[-19.50959206 -205.12373352]
[-23.04926491 -219.70011902]
[-26.58893776 -234.27648926]
[-34.31797028 -221.42106628]
[-48.46065521 -216.42260742]
[-62.55113983 -221.56636047]
[-70.14745331 -234.50065613]
[-67.77665710 -249.31211853]
[-56.52264786 -259.22912598]
[-41.53060913 -259.71780396]
[-29.65370178 -250.55311584]
[-31.65771484 -265.41864014]
[-33.66172791 -280.28417969]
[-35.66574097 -295.14968872]
[-50.64463806 -296.90567017]
[-64.71595001 -302.33236694]
[-76.99515533 -311.08862305]
[-86.71035767 -322.62402344]
[-93.25085449 -336.21347046]
[-96.20551300 -351.00268555]
[-95.38858795 -366.06201172]
[-90.85144806 -380.44482422]
[-82.87928772 -393.24697876]
[-71.97325134 -403.66375732]
[-58.81889725 -411.04034424]
[-44.24312210 -414.91299438]
[-29.16217041 -415.03833008]
[-14.52404404 -411.40844727]
[-1.24890661 -404.25152588]
[9.82875538 -394.01745605]
[18.01259041 -381.34954834]
[22.78815460 -367.04415894]
[23.85525322 -352.00048828]
[21.14680672 -337.16418457]
[14.83307266 -323.46792603]
[5.31093502 -311.77264404]
[-6.82103586 -302.81350708]
[-20.80021286 -297.15371704]
[-18.79619980 -282.28817749]
[-16.79218674 -267.42266846]
[-14.78817272 -252.55712891]
[-12.01256180 -237.81616211]
[-8.47288895 -223.23979187]
[-4.93321657 -208.66340637]
[-1.39354432 -194.08703613]
[3.11408424 -179.78034973]
[8.56944084 -165.80755615]
[14.02479839 -151.83474731]
[24.97382545 -146.69224548]
[29.63312912 -135.09593201]
[24.99883080 -123.05906677]
[30.24555016 -109.00659180]
[35.49226761 -94.95412445]
[40.94762421 -80.98132324]
[46.61041260 -67.09129333]
[58.57995224 -58.22679901]
[56.62502670 -42.52683640]
[68.56030273 -43.68954468]
[80.40477753 -41.72567368]
[91.35236359 -36.76132584]
[100.65606689 -29.12706566]
[107.67894745 -19.33590698]
[111.93773651 -8.04885101]
[113.13607025 3.96974206]
[111.18511200 15.90391350]
[106.21008301 26.94149971]
[98.54227448 36.32940674]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[146.26173401 166.21012878]
[161.11532593 171.89842224]
[173.10290527 182.31140137]
[180.78715515 196.17620850]
[183.25508118 211.80760193]
[180.22644043 227.31274414]
[172.08546448 240.82049561]
[159.83216858 250.70715332]
[164.86909485 264.83618164]
[169.90600586 278.96520996]
[184.20651245 290.56594849]
[180.37384033 307.69131470]
[185.62055969 321.74377441]
[190.86727905 335.79623413]
[195.71542358 340.29144287]
[197.32414246 345.74206543]
[196.05416870 350.34600830]
[200.88017273 364.54846191]
[214.77735901 371.58450317]
[219.46928406 386.05654907]
[212.67585754 399.26202393]
[217.50186157 413.46447754]
[222.32785034 427.66693115]
[227.15385437 441.86941528]
[238.35748291 448.26013184]
[242.08467102 460.18875122]
[236.85794067 471.09780884]
[241.47195435 485.37054443]
[246.08595276 499.64328003]
[250.69996643 513.91601562]
[255.31398010 528.18872070]
[270.20925903 526.11468506]
[285.23840332 526.65893555]
[299.94467163 529.80480957]
[313.88116455 535.45678711]
[326.62438965 543.44317627]
[337.78704834 553.52111816]
[347.02996826 565.38452148]
[354.07223511 578.67279053]
[358.69985962 592.98205566]
[360.77221680 607.87756348]
[360.22631836 622.90667725]
[357.07873535 637.61260986]
[351.42517090 651.54846191]
[343.43737793 664.29077148]
[333.35812378 675.45227051]
[321.49371338 684.69384766]
[308.20465088 691.73461914]
[293.89483643 696.36059570]
[278.99908447 698.43127441]
[263.97006226 697.88366699]
[249.26449585 694.73443604]
[235.32928467 689.07928467]
[222.58787537 681.09002686]
[211.42749023 671.00952148]
[202.18727112 659.14404297]
[195.14801025 645.85418701]
[190.52363586 631.54382324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 183]
[8 182]
[9 181]
[10 180]
[11 179]
[13 176]
[14 175]
[15 174]
[16 173]
[19 170]
[20 169]
[21 166]
[22 165]
[23 164]
[26 162]
[27 161]
[28 160]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[43 146]
[44 145]
[45 144]
[46 143]
[53 132]
[55 130]
[56 129]
[59 128]
[60 127]
[61 126]
[63 123]
[64 122]
[65 121]
[75 120]
[76 119]
[77 118]
[78 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
