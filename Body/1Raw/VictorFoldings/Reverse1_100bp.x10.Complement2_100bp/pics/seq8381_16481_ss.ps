%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[-41.40508270 785.31353760]
[-51.37471771 796.53729248]
[-62.39648056 806.72985840]
[-74.36421967 815.79296875]
[-87.16268921 823.63934326]
[-100.66861725 830.19348145]
[-114.75193024 835.39221191]
[-129.27700806 839.18554688]
[-144.10394287 841.53680420]
[-159.08996582 842.42346191]
[-174.09071350 841.83697510]
[-188.96176147 839.78295898]
[-203.55984497 836.28118896]
[-217.74440002 831.36535645]
[-231.37882996 825.08288574]
[-244.33178711 817.49426270]
[-256.47854614 808.67248535]
[-267.70211792 798.70263672]
[-277.89443970 787.68066406]
[-286.95730591 775.71276855]
[-294.80343628 762.91412354]
[-301.35733032 749.40808105]
[-306.55578613 735.32464600]
[-310.34878540 720.79949951]
[-312.69979858 705.97253418]
[-313.58615112 690.98651123]
[-312.99932861 675.98571777]
[-310.94500732 661.11474609]
[-307.44293213 646.51672363]
[-302.52685547 632.33227539]
[-296.24411011 618.69799805]
[-288.65521240 605.74517822]
[-279.83322144 593.59857178]
[-269.86312866 582.37518311]
[-258.84097290 572.18310547]
[-246.87286377 563.12048340]
[-234.07408142 555.27459717]
[-220.56790161 548.72100830]
[-206.48437500 543.52282715]
[-191.95915222 539.73010254]
[-177.13211060 537.37939453]
[-162.14605713 536.49334717]
[-147.14532471 537.08044434]
[-132.27436829 539.13507080]
[-117.67642212 542.63745117]
[-103.49205780 547.55377197]
[-97.21469879 533.93048096]
[-90.93733215 520.30718994]
[-84.65997314 506.68383789]
[-78.38261414 493.06054688]
[-72.10525513 479.43722534]
[-81.84333038 471.03613281]
[-89.08065796 460.38827515]
[-93.31750488 448.21646118]
[-94.25807190 435.34918213]
[-91.83119202 422.66415405]
[-86.19564819 411.02844238]
[-77.72978973 401.23928833]
[-67.00613403 393.96942139]
[-54.75269699 389.72082520]
[-41.80350494 388.79003906]
[-29.04188728 391.24758911]
[-22.16247559 377.91815186]
[-15.28306198 364.58874512]
[-8.40364933 351.25930786]
[-1.52423704 337.92987061]
[5.35517550 324.60046387]
[11.83467102 311.07211304]
[17.90850449 297.35684204]
[23.98233986 283.64157104]
[30.05617332 269.92630005]
[36.13000870 256.21102905]
[42.20384216 242.49577332]
[48.27767563 228.78050232]
[53.62886047 214.76748657]
[58.24287033 200.49475098]
[50.82861710 189.95632935]
[50.83801270 176.87649536]
[58.49168396 166.03068542]
[71.17854309 161.50759888]
[76.00453949 147.30513000]
[80.83053589 133.10267639]
[85.65653229 118.90022278]
[90.48252869 104.69776917]
[94.45462799 90.23324585]
[97.55873871 75.55794525]
[100.55351257 60.85993958]
[103.43878174 46.14004898]
[97.06842804 28.86289406]
[109.10961151 16.09665871]
[111.77540588 1.33544219]
[114.44120026 -13.42577457]
[109.27963257 -28.38133430]
[119.15565491 -39.53093338]
[121.49114227 -54.34799957]
[123.49515533 -69.21353149]
[125.49916840 -84.07905579]
[111.42870331 -89.47523499]
[98.98229218 -97.97132874]
[88.83115387 -109.10915375]
[81.52273560 -122.28806305]
[77.45115662 -136.79733276]
[76.83600616 -151.85450745]
[79.71044922 -166.64755249]
[85.91947174 -180.37870789]
[95.12822723 -192.30747986]
[106.84011078 -201.79054260]
[120.42350006 -208.31651306]
[135.14587402 -211.53343201]
[150.21325684 -211.26782227]
[164.81309509 -207.53401184]
[178.15803528 -200.53335571]
[189.52841187 -190.64338684]
[198.31101990 -178.39746094]
[204.03222656 -164.45599365]
[206.38349915 -149.57083130]
[205.23803711 -134.54469299]
[200.65760803 -120.18794250]
[192.88922119 -107.27481079]
[182.35185242 -96.50167847]
[169.61372375 -88.44953918]
[155.36181641 -83.55263519]
[140.36470032 -82.07504272]
[138.36068726 -67.20951843]
[136.35667419 -52.34398651]
[138.19218445 -49.33346558]
[138.66072083 -45.28432846]
[137.28999329 -40.84874344]
[133.91687012 -36.86513901]
[139.26911926 -22.96539879]
[129.20242310 -10.75997925]
[126.53662109 4.00123787]
[123.87082672 18.76245499]
[130.50816345 28.87543106]
[128.40806580 41.19506073]
[118.15867615 49.02532196]
[115.27340698 63.74521255]
[117.07160187 70.91377258]
[112.23403931 78.66205597]
[109.12992859 93.33735657]
[121.12774658 84.33444977]
[136.12374878 83.98777008]
[148.52478027 92.42663574]
[153.70556641 106.50354004]
[149.73382568 120.96816254]
[138.09088135 130.42553711]
[123.11929321 131.34832764]
[110.40308380 123.39231873]
[104.68498993 109.52376556]
[99.85898590 123.72622681]
[95.03298950 137.92868042]
[90.20699310 152.13113403]
[85.38099670 166.33358765]
[93.39931488 181.88113403]
[87.80251312 198.09811401]
[72.51560211 205.10874939]
[67.90159607 219.38148499]
[81.21634674 212.47370911]
[95.88314819 215.61773682]
[105.19653320 227.37617493]
[104.89855957 242.37321472]
[95.12544250 253.75241089]
[80.34532928 256.31137085]
[67.31548309 248.88012695]
[61.99294281 234.85433960]
[55.91910934 248.56961060]
[49.84527588 262.28488159]
[43.77143860 276.00015259]
[37.69760513 289.71539307]
[31.62377167 303.43066406]
[25.54993820 317.14593506]
[26.16581535 321.44415283]
[25.45354080 325.32452393]
[23.70756149 328.42080688]
[21.31102180 330.50003052]
[18.68460464 331.47985840]
[11.80519199 344.80929565]
[4.92577982 358.13873291]
[-1.95363283 371.46813965]
[-8.83304501 384.79757690]
[-15.71245766 398.12701416]
[-3.75594592 410.59420776]
[3.20520425 426.37646484]
[4.34672546 443.56320190]
[-0.45224077 460.08007812]
[-10.59659672 473.93942261]
[-24.84902954 483.47937012]
[-41.48090744 487.56317139]
[-58.48193741 485.71456909]
[-64.75930023 499.33789062]
[-71.03665924 512.96118164]
[-77.31401825 526.58453369]
[-83.59137726 540.20782471]
[-89.86874390 553.83117676]
[-76.91547394 561.41931152]
[-64.76835632 570.24053955]
[-53.54438019 580.20996094]
[-43.35163879 591.23150635]
[-34.28829193 603.19903564]
[-26.44162941 615.99737549]
[-19.88722038 629.50317383]
[-14.68819141 643.58636475]
[-10.89461136 658.11138916]
[-8.54301453 672.93829346]
[-7.65605068 687.92425537]
[-8.24226093 702.92504883]
[-10.29599953 717.79614258]
[-13.79748821 732.39428711]
[-18.71300316 746.57891846]
[-24.99520683 760.21350098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 194]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[62 181]
[63 180]
[64 179]
[65 178]
[66 177]
[67 176]
[68 171]
[69 170]
[70 169]
[71 168]
[72 167]
[73 166]
[74 165]
[75 157]
[76 156]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 140]
[86 139]
[87 137]
[88 136]
[90 133]
[91 132]
[92 131]
[94 129]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
