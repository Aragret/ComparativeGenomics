%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[92.67546082 600.09283447]
[81.38214111 590.18603516]
[71.51007843 578.86236572]
[63.23545074 566.32385254]
[56.70592880 552.79431152]
[52.03804398 538.51513672]
[49.31509781 523.74121094]
[48.58568192 508.73617554]
[49.86281586 493.76779175]
[53.12370682 479.10321045]
[58.31016159 465.00411987]
[65.32962036 451.72216797]
[74.05681610 439.49435425]
[84.33599854 428.53890991]
[95.98372650 419.05133057]
[108.79212952 411.20095825]
[122.53262329 405.12789917]
[136.95999146 400.94049072]
[134.73487854 386.10644531]
[132.50976562 371.27239990]
[130.28465271 356.43835449]
[128.05952454 341.60430908]
[125.83441162 326.77026367]
[123.60929871 311.93621826]
[121.38417816 297.10220337]
[119.15905762 282.26815796]
[116.71333313 267.46887207]
[114.04753876 252.70765686]
[111.38174438 237.94644165]
[108.70918274 235.64648438]
[107.01785278 231.93778992]
[106.95772552 227.29562378]
[108.94194794 222.46759033]
[106.93792725 207.60206604]
[104.93391418 192.73652649]
[102.92990112 177.87100220]
[100.92588806 163.00547791]
[98.92187500 148.13995361]
[96.91786194 133.27441406]
[94.91384888 118.40888977]
[83.45516968 109.54069519]
[81.51935577 95.18106842]
[90.22062683 83.59512329]
[88.21660614 68.72959137]
[86.21259308 53.86406326]
[84.20858002 38.99853516]
[82.20456696 24.13300896]
[78.44826508 9.61094856]
[72.99291229 -4.36184883]
[67.53755188 -18.33464622]
[62.08219528 -32.30744553]
[56.62683868 -46.28024292]
[41.53493118 -45.44851303]
[26.94462204 -49.31702042]
[14.28155899 -57.49474716]
[4.77904892 -69.17024994]
[-0.64205730 -83.19216919]
[-1.46259129 -98.18275452]
[2.38523960 -112.67324066]
[10.51244259 -125.24777222]
[22.11252785 -134.68170166]
[16.65717125 -148.65449524]
[11.20181370 -162.62728882]
[5.74645615 -176.60009766]
[0.29109919 -190.57289124]
[-5.16425800 -204.54568481]
[-10.61961460 -218.51847839]
[-16.07497215 -232.49128723]
[-27.55278778 -238.37538147]
[-31.80890846 -250.12565613]
[-27.07450104 -261.25723267]
[-32.32122040 -275.30972290]
[-37.56793594 -289.36218262]
[-42.81465530 -303.41464233]
[-57.54530334 -300.42224121]
[-72.56271362 -299.77117920]
[-87.49707031 -301.47747803]
[-101.98059845 -305.49917603]
[-115.65663147 -311.73715210]
[-128.18838501 -320.03787231]
[-139.26724243 -330.19686890]
[-148.62039185 -341.96398926]
[-156.01750183 -355.04943848]
[-161.27641296 -369.13101196]
[-164.26760864 -383.86190796]
[-164.91743469 -398.87936401]
[-163.20988464 -413.81356812]
[-159.18701172 -428.29678345]
[-152.94789124 -441.97229004]
[-144.64614868 -454.50335693]
[-134.48623657 -465.58139038]
[-122.71834564 -474.93356323]
[-109.63227844 -482.32958984]
[-95.55027771 -487.58734131]
[-80.81913757 -490.57733154]
[-65.80162048 -491.22589111]
[-50.86754608 -489.51712036]
[-36.38468170 -485.49307251]
[-22.70967865 -479.25280762]
[-10.17929649 -470.95004272]
[0.89789188 -460.78921509]
[10.24910164 -449.02053833]
[17.64405060 -435.93386841]
[22.90062904 -421.85144043]
[25.88939285 -407.12005615]
[26.53674126 -392.10247803]
[24.82672882 -377.16854858]
[20.80146790 -362.68600464]
[14.56008434 -349.01153564]
[6.25627899 -336.48181152]
[-3.90546107 -325.40548706]
[-15.67489338 -316.05523682]
[-28.76218414 -308.66137695]
[-23.51546669 -294.60888672]
[-18.26874924 -280.55642700]
[-13.02202988 -266.50396729]
[1.09628594 -256.08090210]
[-2.10217404 -237.94664001]
[3.35318303 -223.97384644]
[8.80854034 -210.00103760]
[14.26389694 -196.02824402]
[19.71925354 -182.05545044]
[25.17461205 -168.08265686]
[30.62996864 -154.10984802]
[36.08532715 -140.13705444]
[51.00885010 -141.05865479]
[65.50618744 -137.31736755]
[78.15442657 -129.26737976]
[87.70812988 -117.68646240]
[93.22196198 -103.70074463]
[94.14422607 -88.67528534]
[90.37204742 -74.08079529]
[82.26266479 -61.34971619]
[70.59963989 -51.73559952]
[76.05499268 -37.76280212]
[81.51035309 -23.79000282]
[86.96570587 -9.81720638]
[92.42106628 4.15559196]
[94.40782928 -10.71225166]
[101.29848480 -24.03587341]
[112.28352356 -34.25002670]
[126.07243347 -40.15476227]
[141.04531860 -41.05640030]
[155.44316101 -36.84901428]
[167.57452393 -28.02688408]
[176.01423645 -15.62642670]
[179.77079773 -1.10443521]
[178.40289307 13.83306313]
[172.07121277 27.43122482]
[161.51962280 38.09255219]
[147.98770142 44.56455994]
[133.06515503 46.08692932]
[118.50507355 42.48080826]
[106.01796722 34.16984177]
[97.07009888 22.12899399]
[99.07411194 36.99452209]
[101.07812500 51.86005020]
[103.08213806 66.72557831]
[105.08615112 81.59111023]
[116.54483032 90.45930481]
[118.48064423 104.81893158]
[109.77937317 116.40487671]
[111.78339386 131.27040100]
[113.78740692 146.13594055]
[115.79141998 161.00146484]
[117.79543304 175.86698914]
[119.79944611 190.73251343]
[121.80345917 205.59805298]
[123.80747223 220.46357727]
[126.14295959 235.28063965]
[128.80876160 250.04185486]
[131.47454834 264.80307007]
[135.44664001 270.08834839]
[136.06106567 275.73806763]
[133.99310303 280.04302979]
[136.21821594 294.87707520]
[138.44334412 309.71112061]
[140.66845703 324.54516602]
[142.89356995 339.37921143]
[145.11868286 354.21325684]
[147.34381104 369.04730225]
[149.56892395 383.88134766]
[151.79403687 398.71539307]
[166.81504822 398.48550415]
[181.73266602 400.25982666]
[196.28065491 404.00671387]
[210.19941711 409.65930176]
[223.24053955 417.11666870]
[235.17127991 426.24578857]
[245.77874756 436.88369751]
[254.87361145 448.84057617]
[262.29357910 461.90301514]
[267.90621948 475.83795166]
[271.61138916 490.39660645]
[273.34295654 505.31924438]
[273.07000732 520.33953857]
[270.79742432 535.18939209]
[266.56576538 549.60388184]
[260.45053101 563.32568359]
[252.56086731 576.10992432]
[243.03759766 587.72845459]
[232.05064392 597.97393799]
[219.79608154 606.66357422]
[206.49263000 613.64221191]
[192.37770081 618.78533936]
[177.70317078 622.00122070]
[162.73094177 623.23242188]
[147.72821045 622.45690918]
[132.96270752 619.68859863]
[118.69794464 614.97692871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[27 172]
[28 171]
[29 170]
[33 169]
[34 168]
[35 167]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[61 125]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[71 116]
[72 115]
[73 114]
[74 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
