%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[80.91706848 504.87115479]
[66.10157776 511.02590942]
[52.12243652 503.15423584]
[49.70324707 487.29461670]
[60.69980240 475.61322021]
[61.59261703 460.63980103]
[54.62657547 447.47457886]
[63.17155838 434.15939331]
[64.06437683 419.18600464]
[64.95719147 404.21258545]
[65.62697601 389.22753906]
[66.07358551 374.23419189]
[58.71865082 361.28219604]
[66.86340332 347.71850586]
[67.31001282 332.72515869]
[67.75661469 317.73181152]
[55.21537781 325.96087646]
[40.91545105 321.43185425]
[35.39820862 307.48336792]
[42.73075485 294.39773560]
[57.50781250 291.82119751]
[68.83561707 301.65155029]
[70.39614105 286.73294067]
[60.96155167 277.95693970]
[58.26399612 265.15832520]
[63.50755310 252.96340942]
[74.98377228 245.91281128]
[76.76624298 231.01908875]
[70.59615326 217.46257019]
[79.91852570 204.67961121]
[81.70098877 189.78588867]
[83.48345184 174.89218140]
[85.26592255 159.99845886]
[79.09584045 146.44192505]
[88.41820526 133.65896606]
[90.20066833 118.76525879]
[79.70650482 106.02790070]
[81.54559326 89.62712097]
[94.60025024 79.53040314]
[96.16077423 64.61180115]
[97.72129822 49.69319534]
[99.28182220 34.77458954]
[100.84234619 19.85598564]
[102.40286255 4.93738031]
[94.90195465 -5.55543566]
[96.50885010 -17.94904900]
[105.82122803 -25.66955566]
[107.60369110 -40.56327438]
[109.38616180 -55.45698929]
[103.34356689 -70.07881165]
[112.53844452 -81.79647064]
[114.32090759 -96.69019318]
[116.10337830 -111.58390808]
[114.65395355 -126.51371765]
[110.03994751 -140.78645325]
[98.43284607 -151.53753662]
[101.88008881 -166.02772522]
[97.26608276 -180.30046082]
[91.64868164 -187.50341797]
[92.69133759 -194.82015991]
[88.29033661 -209.16000366]
[83.88934326 -223.49984741]
[80.06674194 -227.05439758]
[78.17864990 -231.29566956]
[78.16269684 -235.37179565]
[79.62746429 -238.57910156]
[75.87116241 -253.10116577]
[72.11486053 -267.62322998]
[68.35855865 -282.14529419]
[64.60225677 -296.66732788]
[60.84595871 -311.18939209]
[57.08965683 -325.71145630]
[53.33335876 -340.23352051]
[49.57705688 -354.75558472]
[45.82075500 -369.27764893]
[32.48537445 -377.32781982]
[28.88282394 -392.10876465]
[36.63962173 -404.77239990]
[32.88331985 -419.29446411]
[29.12701988 -433.81652832]
[25.37071800 -448.33856201]
[10.35408306 -447.39138794]
[-4.57040310 -449.30352783]
[-18.86322784 -454.00582886]
[-32.00771713 -461.32830811]
[-43.52870178 -471.00631714]
[-53.00970459 -482.68994141]
[-60.10800171 -495.95681763]
[-64.56698608 -510.32742310]
[-66.22547150 -525.28222656]
[-65.02349854 -540.28063965]
[-61.00452805 -554.78039551]
[-54.31383896 -568.25750732]
[-45.19329453 -580.22460938]
[-33.97259521 -590.24920654]
[-21.05736542 -597.96887207]
[-6.91448212 -603.10455322]
[7.94480038 -605.47064209]
[22.98332596 -604.98150635]
[37.65746307 -601.65490723]
[51.43675232 -595.61108398]
[63.82307434 -587.06854248]
[74.36868286 -576.33605957]
[82.69234467 -563.80157471]
[88.49317932 -549.91821289]
[91.56148529 -535.18792725]
[91.78634644 -520.14312744]
[89.15962982 -505.32769775]
[83.77629089 -491.27722168]
[75.83094025 -478.49957275]
[65.61078644 -467.45669556]
[53.48529053 -458.54779053]
[39.89277649 -452.09487915]
[43.64907837 -437.57281494]
[47.40538025 -423.05075073]
[51.16167831 -408.52868652]
[64.08598328 -401.21447754]
[68.10227966 -386.54055786]
[60.34281540 -373.03393555]
[64.09911346 -358.51187134]
[67.85541534 -343.98980713]
[71.61171722 -329.46777344]
[75.36801910 -314.94570923]
[79.12432098 -300.42364502]
[82.88061523 -285.90158081]
[86.63691711 -271.37951660]
[90.39321899 -256.85745239]
[94.14952087 -242.33540344]
[98.22918701 -227.90084839]
[102.63018799 -213.56100464]
[107.03118134 -199.22116089]
[111.53881073 -184.91447449]
[116.15282440 -170.64173889]
[127.42990112 -160.91154480]
[124.31268311 -145.40046692]
[128.92669678 -131.12773132]
[131.11189270 -145.96769714]
[136.20045471 -160.07821655]
[143.98971558 -172.89723206]
[154.16943359 -183.91419983]
[166.33413696 -192.69030762]
[179.99931335 -198.87599182]
[194.62069702 -202.22489929]
[209.61592102 -202.60363770]
[224.38771057 -199.99713135]
[238.34774780 -194.50917053]
[250.93997192 -186.35836792]
[261.66287231 -175.86933899]
[270.08932495 -163.45988464]
[275.88375854 -149.62425232]
[278.81530762 -134.91349792]
[278.76730347 -119.91358185]
[275.74157715 -105.22191620]
[269.85867310 -91.42367554]
[261.35290527 -79.06842804]
[250.56306458 -68.64829254]
[237.91889954 -60.57828903]
[223.92401123 -55.17984772]
[209.13581848 -52.66798401]
[194.14334106 -53.14274216]
[179.54370117 -56.58521652]
[165.91841125 -62.85829544]
[153.81016541 -71.71212006]
[143.70121765 -82.79405212]
[135.99420166 -95.66269684]
[130.99708557 -109.80144501]
[129.21463013 -94.90772247]
[127.43215942 -80.01400757]
[133.60224915 -66.45748138]
[124.27987671 -53.67452621]
[122.49741364 -38.78080750]
[120.71494293 -23.88709068]
[128.48059082 -8.14981747]
[117.32147217 6.49790335]
[115.76094818 21.41650772]
[114.20042419 36.33511353]
[112.63990021 51.25371933]
[111.07937622 66.17232513]
[109.51885223 81.09092712]
[118.61487579 89.91793060]
[121.03797150 102.35908508]
[115.91954041 113.95456696]
[105.09439087 120.54772186]
[103.31192017 135.44143677]
[109.35451508 150.06326294]
[100.15963745 161.78092957]
[98.37717438 176.67463684]
[96.59470367 191.56835938]
[94.81224060 206.46208191]
[100.85482788 221.08389282]
[91.65995789 232.80155945]
[89.87748718 247.69528198]
[100.93965912 261.24694824]
[98.81996155 278.27108765]
[85.31475067 288.29345703]
[83.75422668 303.21206665]
[82.74996185 318.17840576]
[82.30335999 333.17175293]
[81.85675049 348.16513062]
[89.17974091 362.18954468]
[81.06693268 374.68078613]
[80.62032318 389.67416382]
[83.41269684 395.66699219]
[82.84466553 401.32159424]
[79.93059540 405.10540771]
[79.03778076 420.07879639]
[78.14496613 435.05221558]
[85.04714966 449.28845215]
[76.56602478 461.53262329]
[75.67321014 476.50604248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 210]
[6 209]
[8 207]
[9 206]
[10 205]
[11 202]
[12 201]
[14 199]
[15 198]
[16 197]
[22 196]
[23 195]
[27 192]
[28 191]
[30 189]
[31 188]
[32 187]
[33 186]
[35 184]
[36 183]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[47 172]
[48 171]
[49 170]
[51 168]
[52 167]
[53 166]
[54 136]
[55 135]
[57 133]
[58 132]
[60 131]
[61 130]
[62 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
