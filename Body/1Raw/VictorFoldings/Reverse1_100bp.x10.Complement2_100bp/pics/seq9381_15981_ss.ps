%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[169.10633850 922.10723877]
[154.27197266 919.87048340]
[139.53971863 917.03820801]
[124.93344879 913.61505127]
[110.47686005 909.60650635]
[96.19340515 905.01910400]
[82.10624695 899.86035156]
[68.23824310 894.13848877]
[54.61187744 887.86285400]
[41.24925995 881.04364014]
[28.17206001 873.69189453]
[15.40149212 865.81958008]
[2.95826793 857.43939209]
[-9.13742828 848.56494141]
[-20.86597824 839.21069336]
[-32.20835876 829.39172363]
[-43.14616776 819.12402344]
[-53.66167068 808.42425537]
[-63.73780823 797.30975342]
[-73.35823059 785.79852295]
[-82.50734711 773.90924072]
[-91.17031097 761.66119385]
[-99.33306122 749.07427979]
[-106.98237610 736.16888428]
[-114.10583496 722.96594238]
[-120.69188690 709.48687744]
[-126.72985077 695.75354004]
[-132.20993042 681.78820801]
[-137.12324524 667.61358643]
[-141.46180725 653.25262451]
[-145.21861267 638.72857666]
[-148.38752747 624.06500244]
[-150.96343994 609.28576660]
[-152.94215393 594.41479492]
[-154.32048035 579.47619629]
[-155.09616089 564.49426270]
[-155.26795959 549.49316406]
[-154.83557129 534.49737549]
[-153.79972839 519.53112793]
[-152.16207886 504.61874390]
[-149.92530823 489.78439331]
[-147.09303284 475.05215454]
[-143.66984558 460.44589233]
[-139.66130066 445.98928833]
[-135.07388306 431.70584106]
[-129.91506958 417.61871338]
[-124.19319153 403.75070190]
[-117.91754913 390.12435913]
[-111.09832001 376.76174927]
[-103.74656677 363.68453979]
[-95.87420654 350.91400146]
[-87.49401093 338.47079468]
[-78.61957550 326.37509155]
[-69.26528931 314.64654541]
[-59.44633102 303.30419922]
[-49.17862320 292.36639404]
[-38.47882080 281.85092163]
[-27.36428070 271.77478027]
[-15.85303020 262.15438843]
[-3.96373963 253.00527954]
[8.28430557 244.34233093]
[20.87124062 236.17959595]
[33.77664566 228.53030396]
[46.97959518 221.40686035]
[60.45866394 214.82083130]
[74.19200134 208.78288269]
[88.15731812 203.30282593]
[102.33197021 198.38952637]
[116.69296265 194.05097961]
[112.93666840 179.52891541]
[109.18036652 165.00686646]
[105.42406464 150.48480225]
[101.66776276 135.96273804]
[97.91146088 121.44068146]
[94.15515900 106.91862488]
[91.14314270 104.51028442]
[89.20730591 100.78598022]
[88.91157532 96.25612640]
[90.57085419 91.66410828]
[87.46674347 76.98880768]
[84.36264038 62.31350327]
[81.25852966 47.63820267]
[78.15441895 32.96289825]
[63.10611343 33.14952087]
[48.31060791 30.39647865]
[34.33659744 24.80959320]
[21.72121048 16.60360909]
[10.94934273 6.09394169]
[2.43503928 -6.31544447]
[-3.49443340 -20.14756584]
[-6.61116171 -34.87075424]
[-6.79534721 -49.91908646]
[-4.03991032 -64.71414185]
[1.54923713 -78.68724823]
[9.75726318 -91.30130768]
[20.26867485 -102.07147980]
[32.67943954 -110.58377075]
[46.51251984 -116.51100922]
[61.23620987 -119.62535095]
[76.28457642 -119.80709839]
[91.07918549 -117.04927063]
[105.05138397 -111.45786285]
[117.66411591 -103.24779510]
[128.43258667 -92.73464203]
[136.94287109 -80.32249451]
[142.86785889 -66.48845673]
[145.97982788 -51.76426315]
[146.15913391 -36.71586990]
[143.39891052 -21.92170334]
[137.80523682 -7.95040798]
[129.59313965 4.66099501]
[119.07823944 15.42775822]
[106.66471863 23.93603516]
[92.82971954 29.85878944]
[95.93383026 44.53409195]
[99.03794098 59.20939636]
[102.14205170 73.88469696]
[105.24616241 88.55999756]
[108.67722321 103.16232300]
[112.43352509 117.68437958]
[116.18981934 132.20643616]
[119.94612122 146.72850037]
[123.70242310 161.25056458]
[127.45872498 175.77261353]
[131.21502686 190.29467773]
[145.87854004 187.12570190]
[160.65777588 184.54972839]
[175.52873230 182.57095337]
[190.46731567 181.19256592]
[205.44929504 180.41682434]
[220.45034790 180.24496460]
[235.44615173 180.67727661]
[250.41239929 181.71307373]
[265.32479858 183.35064697]
[280.15914917 185.58735657]
[294.89141846 188.41957092]
[309.49771118 191.84271240]
[323.95431519 195.85119629]
[338.23776245 200.43853760]
[352.32495117 205.59730530]
[366.19296265 211.31912231]
[379.81933594 217.59471130]
[393.18197632 224.41387939]
[406.25921631 231.76557922]
[419.02978516 239.63789368]
[431.47305298 248.01803589]
[443.56875610 256.89242554]
[455.29733276 266.24667358]
[466.63973999 276.06558228]
[477.57757568 286.33325195]
[488.09310913 297.03298950]
[498.16928101 308.14749146]
[507.78973389 319.65869141]
[516.93890381 331.54794312]
[525.60186768 343.79595947]
[533.76464844 356.38287354]
[541.41400146 369.28823853]
[548.53753662 382.49114990]
[555.12359619 395.97021484]
[561.16162109 409.70352173]
[566.64172363 423.66882324]
[571.55505371 437.84344482]
[575.89367676 452.20440674]
[579.65051270 466.72845459]
[582.81945801 481.39196777]
[585.39544678 496.17120361]
[587.37420654 511.04217529]
[588.75256348 525.98077393]
[589.52825928 540.96270752]
[589.70007324 555.96380615]
[589.26776123 570.95959473]
[588.23193359 585.92584229]
[586.59436035 600.83825684]
[584.35760498 615.67260742]
[581.52539062 630.40484619]
[578.10223389 645.01110840]
[574.09375000 659.46771240]
[569.50634766 673.75115967]
[564.34759521 687.83831787]
[558.62573242 701.70635986]
[552.35015869 715.33276367]
[545.53094482 728.69537354]
[538.17919922 741.77258301]
[530.30688477 754.54315186]
[521.92675781 766.98638916]
[513.05230713 779.08209229]
[503.69808960 790.81066895]
[493.87915039 802.15307617]
[483.61148071 813.09088135]
[472.91171265 823.60638428]
[461.79718018 833.68255615]
[450.28598022 843.30297852]
[438.39669800 852.45208740]
[426.14868164 861.11511230]
[413.56176758 869.27789307]
[400.65637207 876.92718506]
[387.45346069 884.05065918]
[373.97439575 890.63671875]
[360.24108887 896.67474365]
[346.27578735 902.15484619]
[332.10113525 907.06817627]
[317.74017334 911.40673828]
[303.21612549 915.16357422]
[288.55261230 918.33251953]
[273.77337646 920.90844727]
[258.90240479 922.88714600]
[243.96380615 924.26550293]
[228.98182678 925.04119873]
[213.98077393 925.21301270]
[198.98497009 924.78070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
