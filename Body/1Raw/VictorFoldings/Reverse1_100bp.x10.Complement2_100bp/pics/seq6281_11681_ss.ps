%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[149.94244385 566.64111328]
[138.82545471 556.54510498]
[128.95571899 545.22674561]
[120.46675110 532.83911133]
[113.47332764 519.54968262]
[108.07003021 505.53823853]
[104.32993317 490.99423218]
[102.30361938 476.11434937]
[102.01849365 461.09985352]
[103.47840881 446.15377808]
[106.66362000 431.47827148]
[111.53105164 417.27175903]
[118.01488495 403.72640991]
[126.02742004 391.02539062]
[135.46031189 379.34048462]
[146.18597412 368.82971191]
[158.05937195 359.63519287]
[170.91992188 351.88128662]
[184.59370422 345.67288208]
[198.89578247 341.09393311]
[196.01051331 326.37402344]
[193.12522888 311.65414429]
[190.23995972 296.93426514]
[187.35469055 282.21435547]
[184.46942139 267.49447632]
[181.58415222 252.77458191]
[176.86401367 238.53659058]
[170.38452148 225.00823975]
[163.90501404 211.47988892]
[157.42552185 197.95155334]
[150.94602966 184.42320251]
[144.46653748 170.89485168]
[136.51985168 158.17282104]
[127.20496368 146.41557312]
[117.89008331 134.65832520]
[108.57520294 122.90106964]
[99.26031494 111.14381409]
[89.85816193 99.45623779]
[80.36927032 87.83897400]
[80.59070587 102.83734131]
[72.75886536 115.63039398]
[59.30052567 122.25407410]
[44.38590240 120.65595245]
[32.63645172 111.33123779]
[27.69286728 97.16928101]
[31.08697701 82.55832672]
[41.76707458 72.02573395]
[56.42381668 68.83514404]
[70.51586151 73.97534180]
[62.66410828 61.19450378]
[54.81235123 48.41365814]
[46.96059799 35.63281631]
[39.10884094 22.85197449]
[34.57908249 37.15166855]
[21.32871628 44.18216324]
[6.94815922 39.91606903]
[-0.32475603 26.79720116]
[3.67622781 12.34064198]
[16.65916634 4.82776403]
[31.18607903 8.56171989]
[24.50588417 -4.86865664]
[19.21637917 -8.83509922]
[17.04934120 -14.08876228]
[17.83344841 -18.79983521]
[11.55608749 -32.42315292]
[5.27872658 -46.04646683]
[-0.99863410 -59.66978455]
[-15.33242130 -55.17858505]
[-30.12285995 -52.55727768]
[-45.12707901 -51.84890366]
[-60.09869003 -53.06509781]
[-74.79185486 -56.18589020]
[-88.96528625 -61.16003036]
[-102.38625336 -67.90583801]
[-114.83437347 -76.31254578]
[-126.10522461 -86.24210358]
[-136.01374817 -97.53146362]
[-144.39721680 -109.99523926]
[-151.11798096 -123.42877197]
[-156.06565857 -137.61146545]
[-159.15904236 -152.31042480]
[-160.34730530 -167.28427124]
[-159.61093140 -182.28713989]
[-156.96203613 -197.07266235]
[-152.44410706 -211.39805603]
[-146.13133240 -225.02806091]
[-138.12736511 -237.73887634]
[-128.56364441 -249.32177734]
[-117.59722900 -259.58657837]
[-105.40817261 -268.36468506]
[-92.19664001 -275.51196289]
[-78.17958069 -280.91110229]
[-63.58716965 -284.47335815]
[-48.65901947 -286.14028931]
[-33.64026642 -285.88452148]
[-18.77753639 -283.71023560]
[-4.31488276 -279.65313721]
[9.51020145 -273.77984619]
[22.47069550 -266.18682861]
[34.35377884 -256.99877930]
[44.96431351 -246.36651611]
[54.12807465 -234.46467590]
[61.69458008 -221.48867798]
[67.53958130 -207.65162659]
[71.56709290 -193.18070984]
[73.71099091 -178.31355286]
[73.93606567 -163.29431152]
[72.23861694 -148.36959839]
[68.64651489 -133.78450012]
[63.21875763 -119.77851105]
[56.04446793 -106.58161926]
[47.24145508 -94.41053772]
[36.95426941 -83.46511841]
[25.35183716 -73.92510223]
[12.62468243 -65.94714355]
[18.90204239 -52.32382965]
[25.17940331 -38.70051193]
[31.45676422 -25.07719612]
[37.93626022 -11.54885101]
[44.61645508 1.88152480]
[51.88968277 15.00021839]
[59.74143982 27.78106117]
[67.59319305 40.56190491]
[75.44495392 53.34274673]
[83.29670715 66.12358856]
[91.98653412 78.35007477]
[101.47542572 89.96733856]
[108.60821533 93.72178650]
[111.01757050 101.82893372]
[120.33245087 113.58618927]
[129.64733887 125.34343719]
[138.96221924 137.10069275]
[148.27709961 148.85794067]
[146.00099182 134.03163147]
[149.16325378 119.36875153]
[157.34785461 106.79845428]
[169.47793579 97.97457123]
[183.95761108 94.05803680]
[198.88180542 95.56414795]
[212.28698730 102.29473877]
[222.40950012 113.36428833]
[227.91751099 127.31641388]
[228.08638000 142.31546021]
[222.89389038 156.38806152]
[213.02317810 167.68270874]
[199.77291870 174.71339417]
[184.88641357 176.55513000]
[170.32223511 172.96559143]
[157.99487305 164.41535950]
[164.47438049 177.94371033]
[170.95387268 191.47206116]
[177.43336487 205.00039673]
[183.91285706 218.52874756]
[190.39236450 232.05709839]
[191.11056519 217.07429504]
[196.59350586 203.11230469]
[206.26257324 191.64454651]
[219.09733582 183.88125610]
[233.74334717 180.64170837]
[248.65493774 182.26779175]
[262.25848389 188.58787537]
[273.11837769 198.93499756]
[280.08850098 212.21720886]
[282.43331909 227.03280640]
[279.90539551 241.81825256]
[272.77145386 255.01321411]
[261.78439331 265.22518921]
[248.10369873 271.37649536]
[233.17311096 272.81796265]
[218.56831360 269.39746094]
[205.83056641 261.47598267]
[196.30403137 249.88929749]
[199.18931580 264.60919189]
[202.07458496 279.32907104]
[204.95985413 294.04898071]
[207.84512329 308.76885986]
[210.73040771 323.48876953]
[213.61567688 338.20864868]
[228.58807373 337.04946899]
[243.59381104 337.63635254]
[258.42993164 339.96136475]
[272.89584351 343.99307251]
[286.79583740 349.67694092]
[299.94198608 356.93609619]
[312.15649414 365.67236328]
[323.27416992 375.76760864]
[333.14462280 387.08529663]
[341.63442993 399.47238159]
[348.62875366 412.76132202]
[354.03298950 426.77243042]
[357.77404785 441.31619263]
[359.80136108 456.19592285]
[360.08749390 471.21041870]
[358.62857056 486.15658569]
[355.44433594 500.83230591]
[350.57785034 515.03912354]
[344.09490967 528.58489990]
[336.08322144 541.28643799]
[326.65112305 552.97198486]
[315.92614746 563.48352051]
[304.05337524 572.67883301]
[291.19332886 580.43353271]
[277.51998901 586.64288330]
[263.21820068 591.22277832]
[248.48143005 594.11138916]
[233.50894165 595.26953125]
[218.50325012 594.68170166]
[203.66726685 592.35565186]
[189.20166016 588.32299805]
[175.30201721 582.63824463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 154]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 133]
[34 132]
[35 131]
[36 130]
[37 129]
[38 127]
[39 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[60 120]
[61 119]
[64 118]
[65 117]
[66 116]
[67 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
