%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[51.55792236 780.70483398]
[43.06590652 768.23297119]
[38.09212494 753.98779297]
[36.97570419 738.94067383]
[39.79276276 724.11749268]
[46.35122681 710.52893066]
[56.20392990 699.10150146]
[68.67910004 690.61431885]
[82.92615509 685.64599609]
[81.81050873 670.68756104]
[80.69486237 655.72912598]
[79.57920837 640.77069092]
[78.46356201 625.81219482]
[77.34791565 610.85375977]
[76.23226166 595.89532471]
[75.11661530 580.93682861]
[74.00096893 565.97839355]
[71.58218384 563.41290283]
[70.28586578 559.54833984]
[70.70900726 554.92510986]
[73.18474579 550.32971191]
[72.73814392 535.33636475]
[72.29153442 520.34301758]
[71.84493256 505.34967041]
[60.00342941 503.21249390]
[48.76252365 498.90512085]
[38.51638412 492.57656860]
[29.62467003 484.44674683]
[22.39991760 474.79879761]
[17.09654999 463.96936035]
[13.90191460 452.33663940]
[12.92967319 440.30737305]
[14.21574974 428.30245972]
[17.71701431 416.74237061]
[23.31272316 406.03228760]
[30.80868340 396.54797363]
[39.94398499 388.62265015]
[50.40009689 382.53518677]
[61.81195831 378.50024414]
[73.78072357 376.66091919]
[74.67354584 361.68753052]
[75.56636047 346.71411133]
[76.45917511 331.74072266]
[77.35198975 316.76730347]
[78.24480438 301.79388428]
[71.27876282 288.62866211]
[79.82374573 275.31347656]
[80.71656036 260.34008789]
[81.60938263 245.36666870]
[82.50219727 230.39326477]
[83.39501190 215.41986084]
[84.28782654 200.44645691]
[85.06915283 185.46681213]
[85.73893738 170.48178101]
[86.40872192 155.49673462]
[73.74635315 163.53816223]
[59.51544189 158.79673767]
[54.20648193 144.76765442]
[61.73304367 131.79264832]
[76.54682159 129.43640137]
[87.72702026 139.43432617]
[89.50948334 124.54061127]
[91.29194641 109.64688873]
[92.63018036 94.70670319]
[93.52299500 79.73329926]
[94.41581726 64.75989532]
[95.30863190 49.78648758]
[96.20144653 34.81308365]
[97.09426117 19.83967781]
[82.79582977 15.04487610]
[70.23555756 6.71871376]
[60.26631546 -4.56623650]
[53.56317139 -18.03674126]
[50.57767868 -32.77188873]
[51.50746155 -47.76603699]
[56.28314590 -61.99745941]
[64.57349396 -74.49795532]
[75.80838013 -84.41873932]
[89.21797943 -91.08802795]
[103.88552856 -94.05659485]
[104.77834320 -109.02999878]
[94.56576538 -120.79183960]
[95.68450928 -135.96429443]
[106.96056366 -145.62794495]
[107.85337830 -160.60134888]
[108.74619293 -175.57475281]
[109.63900757 -190.54815674]
[101.01751709 -206.81933594]
[111.24517822 -221.07983398]
[111.91496277 -236.06488037]
[112.58474731 -251.04991150]
[113.25453186 -266.03494263]
[113.92431641 -281.01998901]
[106.81094360 -295.15188599]
[115.10882568 -307.52096558]
[107.99545288 -321.65286255]
[116.29334259 -334.02197266]
[116.96312714 -349.00701904]
[102.86766815 -354.53845215]
[91.33361053 -364.34884644]
[83.61208344 -377.37408447]
[80.54066467 -392.20126343]
[82.45250702 -407.22204590]
[89.14024353 -420.80706787]
[99.87841797 -431.48275757]
[113.50225830 -438.09106445]
[128.53393555 -439.91519165]
[143.34292603 -436.75729370]
[156.32286072 -428.95986938]
[166.06578064 -417.36874390]
[171.51484680 -403.24124146]
[172.07899475 -388.10980225]
[167.69699097 -373.61575317]
[158.84420776 -361.33132935]
[146.48091125 -352.58905029]
[131.94816589 -348.33721924]
[131.27838135 -333.35217285]
[138.43966675 -320.29211426]
[130.09387207 -306.85119629]
[137.25514221 -293.79113770]
[128.90934753 -280.35021973]
[128.23956299 -265.36517334]
[127.56978607 -250.38012695]
[126.90000153 -235.39509583]
[126.23021698 -220.41004944]
[134.15914917 -211.27449036]
[133.72378540 -198.78472900]
[124.61241913 -189.65533447]
[123.71959686 -174.68193054]
[122.82678223 -159.70852661]
[121.93396759 -144.73512268]
[131.98178101 -133.80000305]
[131.28964233 -118.60211945]
[119.75175476 -108.13718414]
[118.85893250 -93.16378021]
[133.06980896 -88.47328949]
[145.59187317 -80.25777435]
[155.56825256 -69.07223511]
[162.31440735 -55.67515564]
[165.36512756 -40.97706985]
[164.50654602 -25.97867584]
[159.79121399 -11.70270634]
[151.53485107 0.87581158]
[140.29524231 10.89614677]
[126.83455658 17.67076302]
[112.06766510 20.73249435]
[111.17485046 35.70589828]
[110.28203583 50.67930603]
[109.38922119 65.65270996]
[108.49640656 80.62611389]
[107.60359192 95.59952545]
[109.42616272 98.04241180]
[110.40015411 101.20246124]
[110.25822449 104.76662445]
[108.85242462 108.32752228]
[106.18566895 111.42935944]
[104.40319824 126.32307434]
[102.62073517 141.21679688]
[101.39376068 156.16651917]
[100.72397614 171.15156555]
[100.05419159 186.13659668]
[102.79728699 194.84942627]
[99.26123047 201.33926392]
[98.36841583 216.31268311]
[97.47560120 231.28608704]
[96.58278656 246.25949097]
[95.68997192 261.23287964]
[94.79715729 276.20629883]
[101.69933319 290.44253540]
[93.21821594 302.68670654]
[92.32539368 317.66012573]
[91.43257904 332.63351440]
[90.53976440 347.60693359]
[89.64694977 362.58032227]
[88.75413513 377.55374146]
[106.02085114 383.25674438]
[121.00920868 393.53134155]
[132.53961182 407.56072998]
[139.70693970 424.23278809]
[141.95152283 442.22851562]
[139.10292053 460.12615967]
[131.39277649 476.51367188]
[119.43600464 490.10000610]
[104.18181610 499.81695557]
[86.83827972 504.90304565]
[87.28488922 519.89642334]
[87.73149109 534.88977051]
[88.17810059 549.88311768]
[88.95941925 564.86273193]
[90.07506561 579.82122803]
[91.19071960 594.77966309]
[92.30636597 609.73809814]
[93.42201233 624.69653320]
[94.53766632 639.65502930]
[95.65331268 654.61346436]
[96.76895905 669.57189941]
[97.88461304 684.53039551]
[112.71104431 687.33026123]
[126.30718994 693.87298584]
[137.74604797 703.71246338]
[146.24769592 716.17779541]
[151.23246765 730.41906738]
[152.36050415 745.46533203]
[149.55490112 760.29064941]
[143.00692749 773.88427734]
[133.16305542 785.31933594]
[120.69444275 793.81616211]
[106.45122528 798.79547119]
[91.40453339 799.91766357]
[76.58026886 797.10632324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 197]
[10 196]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[21 188]
[22 187]
[23 186]
[24 185]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 161]
[54 160]
[55 159]
[61 158]
[62 157]
[63 156]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[80 135]
[81 134]
[84 131]
[85 130]
[86 129]
[87 128]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[95 119]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
