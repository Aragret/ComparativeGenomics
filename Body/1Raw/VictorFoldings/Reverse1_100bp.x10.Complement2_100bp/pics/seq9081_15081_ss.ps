%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[105.22700500 544.23114014]
[95.47580719 532.80871582]
[87.17256927 520.29418945]
[80.43836975 506.87002563]
[75.37140656 492.73202515]
[72.04558563 478.08633423]
[70.50939178 463.14654541]
[70.78524017 448.13052368]
[72.86910248 433.25720215]
[76.73059082 418.74356079]
[82.31339264 404.80117798]
[89.53609467 391.63342285]
[98.29336548 379.43231201]
[108.45750427 368.37573242]
[119.88028717 358.62496948]
[132.39512634 350.32220459]
[145.81953430 343.58850098]
[159.95773315 338.52206421]
[156.63546753 323.89459229]
[153.31321716 309.26715088]
[140.71398926 297.05130005]
[146.30653381 279.50692749]
[142.76686096 264.93057251]
[139.22718811 250.35418701]
[134.93305969 235.98196411]
[129.89614868 221.85293579]
[126.88435364 220.01951599]
[124.61095428 216.63623047]
[123.79473114 212.06599426]
[124.96519470 206.97903442]
[120.56420135 192.63919067]
[109.43324280 182.74217224]
[112.78105164 167.27922058]
[108.38005066 152.93937683]
[103.97905731 138.59951782]
[99.57805634 124.25968170]
[95.17705536 109.91983032]
[85.95019531 121.74628448]
[70.95345306 122.05882263]
[61.24187088 110.62705994]
[63.97446823 95.87806702]
[77.13687134 88.68424225]
[91.02513885 94.34739685]
[87.70288086 79.71994019]
[82.75049591 72.04454041]
[84.44176483 64.85000610]
[81.33765411 50.17470169]
[70.91202545 38.27441406]
[75.84804535 24.22148132]
[72.74393463 9.54617977]
[69.63982391 -5.12912273]
[66.14958954 -9.01053143]
[64.64741516 -13.40333939]
[64.99517822 -17.46463203]
[66.74024963 -20.52846718]
[64.29451752 -35.32773972]
[61.84879303 -50.12701035]
[59.40306473 -64.92627716]
[56.29895401 -79.60158539]
[52.54265594 -94.12364197]
[48.78635406 -108.64569855]
[37.83974457 -120.06858826]
[42.14334869 -134.32791138]
[38.38705063 -148.84997559]
[34.63074875 -163.37202454]
[30.87444878 -177.89408875]
[27.11814690 -192.41615295]
[12.27362061 -190.17025757]
[-2.72315526 -189.46261597]
[-17.71320534 -190.30072021]
[-32.53762436 -192.67572021]
[-47.03927231 -196.56239319]
[-61.06441498 -201.91957092]
[-74.46438599 -208.69046021]
[-87.09712982 -216.80328369]
[-98.82873535 -226.17202759]
[-109.53484344 -236.69738770]
[-119.10196686 -248.26779175]
[-127.42868042 -260.76058960]
[-134.42671204 -274.04333496]
[-140.02189636 -287.97525024]
[-144.15490723 -302.40859985]
[-146.78193665 -317.19046021]
[-147.87515259 -332.16406250]
[-147.42292786 -347.17071533]
[-145.43008423 -362.05133057]
[-141.91773987 -376.64816284]
[-136.92314148 -390.80645752]
[-130.49920654 -404.37619019]
[-122.71405792 -417.21343994]
[-113.65021515 -429.18218994]
[-103.40374756 -440.15551758]
[-92.08329010 -450.01712036]
[-79.80883789 -458.66247559]
[-66.71051025 -465.99987793]
[-52.92715454 -471.95162964]
[-38.60488129 -476.45455933]
[-23.89551544 -479.46099854]
[-8.95498562 -480.93902588]
[6.05833054 -480.87301636]
[20.98528481 -479.26364136]
[35.66764069 -476.12796021]
[49.94976044 -471.49923706]
[63.68024063 -465.42651367]
[76.71353149 -457.97418213]
[88.91148376 -449.22125244]
[100.14477539 -439.26046753]
[110.29433441 -428.19744873]
[119.25257874 -416.14944458]
[126.92453003 -403.24420166]
[133.22886658 -389.61853027]
[138.09877014 -375.41683960]
[141.48260498 -360.78967285]
[143.34449768 -345.89212036]
[143.66471863 -330.88208008]
[142.43988037 -315.91864014]
[139.68295288 -301.16049194]
[135.42317200 -286.76400757]
[129.70567322 -272.88186646]
[122.59109497 -259.66116333]
[114.15483093 -247.24208069]
[104.48632812 -235.75627136]
[93.68807220 -225.32546997]
[81.87451935 -216.06025696]
[69.17092133 -208.05885315]
[55.71192169 -201.40608215]
[41.64020538 -196.17243958]
[45.39650726 -181.65039062]
[49.15280914 -167.12832642]
[52.90910721 -152.60626221]
[56.66540909 -138.08421326]
[67.34334564 -127.70003510]
[63.30841446 -112.40200043]
[67.06471252 -97.87994385]
[70.82101440 -83.35788727]
[79.34694672 -95.69921875]
[94.07690430 -98.53263855]
[106.57289886 -90.23504639]
[109.67665863 -75.55966949]
[101.61020660 -62.91323090]
[86.99437714 -59.54019165]
[74.20233917 -67.37200928]
[76.64806366 -52.57273865]
[79.09378815 -37.77346802]
[81.53952026 -22.97419548]
[84.31513214 -8.23323250]
[87.41924286 6.44206953]
[90.52334595 21.11737251]
[100.72695160 31.96798134]
[96.01295471 47.07059097]
[99.11706543 61.74589157]
[102.33033752 76.39768219]
[105.65260315 91.02513885]
[109.51690674 105.51882935]
[113.91790009 119.85868073]
[118.31890106 134.19853210]
[122.71990204 148.53837585]
[127.12089539 162.87821960]
[138.56665039 173.80091858]
[134.90405273 188.23818970]
[139.30503845 202.57803345]
[144.02517700 216.81602478]
[149.06208801 230.94505310]
[155.41177368 217.35530090]
[168.95770264 210.91262817]
[183.50686646 214.56257629]
[192.40756226 226.63639832]
[191.59054565 241.61413574]
[181.42932129 252.64814758]
[166.56947327 254.69384766]
[153.80355835 246.81451416]
[157.34323120 261.39089966]
[160.88290405 275.96725464]
[171.47171021 283.33206177]
[174.11982727 295.54562378]
[167.94067383 305.94488525]
[171.26293945 320.57232666]
[174.58518982 335.19979858]
[189.52481079 333.66192627]
[204.54087830 333.93609619]
[219.41441345 336.01828003]
[233.92849731 339.87814331]
[247.87149048 345.45938110]
[261.04006958 352.68060303]
[273.24218750 361.43652344]
[284.29989624 371.59942627]
[294.05194092 383.02108765]
[302.35610962 395.53500366]
[309.09130859 408.95867920]
[314.15933228 423.09628296]
[317.48623657 437.74172974]
[319.02355957 452.68142700]
[318.74884033 467.69747925]
[316.66607666 482.57092285]
[312.80569458 497.08486938]
[307.22390747 511.02764893]
[300.00219727 524.19598389]
[291.24584961 536.39776611]
[281.08251953 547.45507812]
[269.66049194 557.20666504]
[257.14627075 565.51037598]
[243.72235107 572.24511719]
[229.58453369 577.31256104]
[214.93898010 580.63897705]
[199.99923706 582.17572021]
[184.98318481 581.90045166]
[170.10981750 579.81713867]
[155.59602356 575.95617676]
[141.65344238 570.37390137]
[128.48541260 563.15167236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 178]
[19 177]
[20 176]
[22 173]
[23 172]
[24 171]
[25 163]
[26 162]
[30 161]
[31 160]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[43 153]
[44 152]
[46 151]
[47 150]
[49 148]
[50 147]
[51 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 135]
[60 134]
[61 133]
[63 131]
[64 130]
[65 129]
[66 128]
[67 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
