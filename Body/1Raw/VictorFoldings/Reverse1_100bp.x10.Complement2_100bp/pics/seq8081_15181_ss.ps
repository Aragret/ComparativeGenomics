%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[206.04248047 365.77423096]
[214.65184021 353.46194458]
[224.85760498 342.43667603]
[236.46961975 332.90383911]
[228.61785889 320.12298584]
[220.76609802 307.34216309]
[212.91435242 294.56130981]
[205.06259155 281.78048706]
[189.20303345 274.26773071]
[188.85360718 255.85688782]
[180.81243896 243.19436646]
[172.77125549 230.53182983]
[164.73008728 217.86930847]
[156.68891907 205.20678711]
[148.64775085 192.54426575]
[135.29335022 185.94810486]
[134.42695618 170.15063477]
[128.18759155 166.18931580]
[126.36196136 157.23918152]
[118.51020050 144.45832825]
[110.65844727 131.67749023]
[95.87988281 133.16761780]
[81.91506958 128.10696411]
[71.52211761 117.49504089]
[66.75370026 103.42775726]
[68.55158997 88.68347168]
[76.56070709 76.17426300]
[68.70895386 63.39342117]
[60.85720062 50.61257553]
[53.00544357 37.83173370]
[42.33825684 38.01853180]
[32.62995529 33.79289246]
[25.60553932 25.97873306]
[22.48264122 16.03084564]
[23.76082039 5.76431274]
[29.14292336 -2.97662187]
[21.86969376 -16.09531593]
[14.59646416 -29.21401024]
[7.32323456 -42.33270264]
[-0.62344980 -55.05474091]
[-9.22201347 -67.34558105]
[-17.82057762 -79.63641357]
[-26.41914177 -91.92725372]
[-38.30504227 -91.67823792]
[-48.72860336 -97.14177704]
[-55.15405273 -106.85813141]
[-56.08160019 -118.34966278]
[-51.39611435 -128.75218201]
[-59.62492371 -141.29357910]
[-67.85372925 -153.83499146]
[-84.48788452 -161.73348999]
[-84.80466461 -179.27961731]
[-93.21928406 -191.69711304]
[-101.63390350 -204.11460876]
[-110.04851532 -216.53210449]
[-118.46313477 -228.94960022]
[-131.70411682 -221.87187195]
[-145.61239624 -216.21701050]
[-160.03558350 -212.04695129]
[-174.81565857 -209.40739441]
[-189.79066467 -208.32727051]
[-204.79655457 -208.81838989]
[-219.66888428 -210.87539673]
[-234.24473572 -214.47572327]
[-248.36437988 -219.57995605]
[-261.87313843 -226.13215637]
[-274.62298584 -234.06051636]
[-286.47424316 -243.27819824]
[-297.29702759 -253.68418884]
[-306.97280884 -265.16448975]
[-315.39553833 -277.59329224]
[-322.47293091 -290.83444214]
[-328.12747192 -304.74285889]
[-332.29718018 -319.16616821]
[-334.93637085 -333.94628906]
[-336.01614380 -348.92132568]
[-335.52465820 -363.92718506]
[-333.46728516 -378.79949951]
[-329.86660767 -393.37524414]
[-324.76202393 -407.49478149]
[-318.20950317 -421.00335693]
[-310.28082275 -433.75302124]
[-301.06286621 -445.60406494]
[-290.65658569 -456.42660522]
[-279.17605591 -466.10208130]
[-266.74703979 -474.52450562]
[-253.50572205 -481.60159302]
[-239.59718323 -487.25579834]
[-225.17378235 -491.42514038]
[-210.39358521 -494.06399536]
[-195.41851807 -495.14337158]
[-180.41265869 -494.65151978]
[-165.54042053 -492.59381104]
[-150.96475220 -488.99276733]
[-136.84535217 -483.88784790]
[-123.33691406 -477.33499146]
[-110.58744812 -469.40600586]
[-98.73664856 -460.18774414]
[-87.91435242 -449.78125000]
[-78.23914337 -438.30047607]
[-69.81701660 -425.87124634]
[-62.74026108 -412.62976074]
[-57.08640671 -398.72106934]
[-52.91740036 -384.29757690]
[-50.27892303 -369.51730347]
[-49.19988251 -354.54223633]
[-49.69210052 -339.53637695]
[-51.75018311 -324.66418457]
[-55.35158157 -310.08859253]
[-60.45683670 -295.96932983]
[-67.01001740 -282.46105957]
[-74.93931580 -269.71176147]
[-84.15785980 -257.86120605]
[-94.56464386 -247.03915405]
[-106.04563904 -237.36422729]
[-97.63101959 -224.94673157]
[-89.21640778 -212.52923584]
[-80.80178833 -200.11174011]
[-72.38716888 -187.69424438]
[-60.57108688 -185.10449219]
[-53.45910263 -174.82814026]
[-55.31233215 -162.06379700]
[-47.08352280 -149.52239990]
[-38.85471725 -136.98098755]
[-20.73932648 -134.34501648]
[-10.12144947 -119.04228210]
[-14.12830353 -100.52581787]
[-5.52973986 -88.23497772]
[3.06882429 -75.94414520]
[11.66738796 -63.65330505]
[14.19174004 -78.43936920]
[25.54804039 -88.23908234]
[40.54434204 -88.57215118]
[52.32453918 -79.28630829]
[55.50288010 -64.62689972]
[48.62627411 -51.29602432]
[34.83861160 -45.38837051]
[20.44192886 -49.60593414]
[27.71515846 -36.48723984]
[34.98838806 -23.36854553]
[42.26161575 -10.24985123]
[61.33198166 -6.27047443]
[71.48403168 10.71303368]
[65.78628540 29.97997856]
[73.63803864 42.76082230]
[81.48979950 55.54166412]
[89.34155273 68.32250977]
[104.12011719 66.83238220]
[118.08493042 71.89303589]
[128.47787476 82.50495911]
[133.24630737 96.57224274]
[131.44841003 111.31652832]
[123.43929291 123.82573700]
[131.29104614 136.60658264]
[139.14280701 149.38742065]
[147.08947754 162.10945129]
[161.01904297 169.61132812]
[161.31027222 184.50308228]
[169.35144043 197.16561890]
[177.39260864 209.82814026]
[185.43379211 222.49066162]
[193.47496033 235.15318298]
[201.51612854 247.81570435]
[213.91142273 251.38215637]
[220.34825134 262.09432983]
[217.84342957 273.92871094]
[225.69519043 286.70956421]
[233.54695129 299.49038696]
[241.39869690 312.27124023]
[249.25045776 325.05209351]
[263.00253296 319.00280762]
[277.45025635 314.88247681]
[292.32449341 312.76791382]
[307.34808350 312.69851685]
[322.24121094 314.67550659]
[336.72640991 318.66210938]
[350.53381348 324.58407593]
[363.40621948 332.33102417]
[375.10379028 341.75866699]
[385.40863037 352.69137573]
[394.12875366 364.92544556]
[401.10174561 378.23303223]
[406.19766235 392.36614990]
[409.32156372 407.06155396]
[410.41531372 422.04547119]
[409.45846558 437.03872681]
[406.46890259 451.76205444]
[401.50228882 465.94113159]
[394.65112305 479.31185913]
[386.04309082 491.62506104]
[375.83853149 502.65142822]
[364.22756958 512.18554688]
[351.42645264 520.04974365]
[337.67373657 526.09753418]
[323.22555542 530.21624756]
[308.35110474 532.32922363]
[293.32748413 532.39703369]
[278.43457031 530.41839600]
[263.94982910 526.43023682]
[250.14305115 520.50677490]
[237.27149963 512.75842285]
[225.57495117 503.32952881]
[215.27128601 492.39572144]
[206.55247498 480.16067505]
[199.58094788 466.85235596]
[194.48655701 452.71865845]
[191.36422729 438.02291870]
[190.27210999 423.03890991]
[191.23056030 408.04571533]
[194.22174072 393.32272339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[10 163]
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[17 156]
[19 155]
[20 154]
[21 153]
[27 147]
[28 146]
[29 145]
[30 144]
[36 141]
[37 140]
[38 139]
[39 138]
[40 130]
[41 129]
[42 128]
[43 127]
[48 124]
[49 123]
[50 122]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
