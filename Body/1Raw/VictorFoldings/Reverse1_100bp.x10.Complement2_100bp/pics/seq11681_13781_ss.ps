%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[17.16794586 720.15325928]
[3.10777164 725.47882080]
[-11.63722420 728.41735840]
[-26.66478920 728.88873291]
[-41.56495667 726.88000488]
[-55.93124390 722.44610596]
[-69.37172699 715.70788574]
[-81.51973724 706.84924316]
[-92.04386902 696.11181641]
[-100.65702057 683.78851318]
[-107.12421417 670.21557617]
[-111.26902008 655.76318359]
[-112.97836304 640.82574463]
[-112.20561218 625.81066895]
[-108.97185516 611.12756348]
[-103.36531067 597.17706299]
[-95.53891754 584.33972168]
[-85.70619202 572.96575928]
[-74.13538361 563.36541748]
[-61.14214706 555.80065918]
[-47.08094788 550.47784424]
[-32.33538437 547.54217529]
[-17.30773163 547.07366943]
[-15.30371761 532.20819092]
[-13.29970360 517.34265137]
[-11.29569054 502.47711182]
[-9.29167652 487.61157227]
[-11.42350388 483.33789062]
[-10.89326191 477.67965698]
[-7.00030184 472.33581543]
[-4.55457449 457.53656006]
[-2.10884714 442.73727417]
[-7.66744471 428.91876221]
[2.21641278 416.56481934]
[4.66213989 401.76556396]
[7.10786772 386.96627808]
[9.55359459 372.16702271]
[11.99932194 357.36773682]
[14.44505024 342.56848145]
[0.91683203 349.04824829]
[-12.64981747 342.64932251]
[-16.25407028 328.08877563]
[-7.23900414 316.10009766]
[7.74980879 315.52087402]
[17.66271973 326.77651978]
[21.20239258 312.20013428]
[24.74206352 297.62377930]
[28.28173637 283.04739380]
[26.60609055 278.57513428]
[27.72211075 273.00274658]
[32.14989090 268.09292603]
[36.12198639 253.62838745]
[40.09408188 239.16386414]
[44.06617737 224.69934082]
[48.03827286 210.23481750]
[35.52586365 218.50764465]
[20.53582382 217.96112061]
[8.65906620 208.79910278]
[4.32532930 194.43878174]
[9.15098953 180.23622131]
[21.33619499 171.48860168]
[36.33616257 171.45858765]
[48.55628204 180.15736389]
[53.43877029 194.34167480]
[59.10155487 180.45164490]
[53.10617065 166.86521912]
[58.65117264 152.69808960]
[72.94251251 146.50169373]
[78.60530090 132.61166382]
[84.26808929 118.72164154]
[89.93087769 104.83161926]
[95.49010468 90.89981842]
[95.69606018 81.76770782]
[101.13209534 76.76058960]
[106.79488373 62.87056351]
[106.08292389 57.69947052]
[107.30362701 53.22027588]
[109.86980438 50.05329132]
[113.03315735 48.49588776]
[119.31051636 34.87257004]
[125.58788300 21.24925423]
[131.86523438 7.62593842]
[136.90216064 -6.50309134]
[140.65846252 -21.02515030]
[144.41476440 -35.54721069]
[148.17105103 -50.06926727]
[144.13612366 -65.36730194]
[154.81405640 -75.75148010]
[158.57035828 -90.27353668]
[162.32666016 -104.79559326]
[154.56719971 -118.30220032]
[158.58349609 -132.97612000]
[171.50779724 -140.29035950]
[175.26409912 -154.81240845]
[178.69515991 -169.41473389]
[181.79927063 -184.09004211]
[184.90338135 -198.76533508]
[171.06837463 -204.68809509]
[158.65486145 -213.19636536]
[148.13996887 -223.96313477]
[139.92785645 -236.57453918]
[134.33418274 -250.54583740]
[131.57395935 -265.33999634]
[131.75328064 -280.38839722]
[134.86523438 -295.11257935]
[140.79023743 -308.94662476]
[149.30052185 -321.35876465]
[160.06898499 -331.87191772]
[172.68171692 -340.08200073]
[186.65391541 -345.67340088]
[201.44853210 -348.43124390]
[216.49688721 -348.24948120]
[231.22058105 -345.13513184]
[245.05366516 -339.20791626]
[257.46441650 -330.69561768]
[267.97583008 -319.92544556]
[276.18386841 -307.31137085]
[281.77301025 -293.33828735]
[284.52844238 -278.54321289]
[284.34426880 -263.49487305]
[281.22753906 -248.77169800]
[275.29806519 -234.93957520]
[266.78375244 -222.53018188]
[256.01190186 -212.02052307]
[243.39649963 -203.81454468]
[229.42248535 -198.22764587]
[214.62698364 -195.47460938]
[199.57868958 -195.66122437]
[196.47457886 -180.98593140]
[193.37046814 -166.31062317]
[194.97697449 -163.17192078]
[195.14305115 -159.09915161]
[193.44622803 -154.77780151]
[189.78616333 -151.05610657]
[186.02986145 -136.53405762]
[193.78665161 -123.87041473]
[190.18409729 -109.08946991]
[176.84872437 -101.03929138]
[173.09242249 -86.51723480]
[169.33612061 -71.99517822]
[173.63972473 -57.73585510]
[162.69311523 -46.31296921]
[158.93681335 -31.79090881]
[155.18051147 -17.26885033]
[151.42420959 -2.74679065]
[162.45114136 -12.91571712]
[176.77267456 -17.37592697]
[191.62356567 -15.26622581]
[204.13635254 -6.99396086]
[211.89498901 5.84362173]
[213.40141296 20.76778603]
[208.36476135 34.89690781]
[197.75753784 45.50288010]
[183.62780762 50.53784943]
[168.70382690 49.02964783]
[155.86715698 41.26948166]
[147.59638977 28.75571823]
[145.48855591 13.90329933]
[139.21119690 27.52661514]
[132.93383789 41.14993286]
[126.65647125 54.77324677]
[120.68491364 68.53334808]
[115.02212524 82.42337799]
[109.46289825 96.35517883]
[109.69788361 104.41230774]
[103.82089996 110.49440002]
[98.15811157 124.38442993]
[92.49533081 138.27445984]
[86.83254242 152.16448975]
[92.71794891 166.58668518]
[86.77721405 180.59246826]
[72.99158478 186.11442566]
[67.32879639 200.00445557]
[62.50279617 214.20690918]
[58.53070068 228.67143250]
[54.55860519 243.13595581]
[50.58650970 257.60049438]
[46.61441422 272.06500244]
[42.85811234 286.58706665]
[39.31843948 301.16345215]
[35.77876663 315.73980713]
[32.23909378 330.31619263]
[29.24431992 345.01419067]
[26.79859352 359.81347656]
[24.35286522 374.61273193]
[21.90713882 389.41201782]
[19.46141052 404.21127319]
[17.01568413 419.01055908]
[22.39934731 433.88760376]
[12.69042397 445.18301392]
[10.24469662 459.98226929]
[7.79896879 474.78155518]
[5.57385159 489.61560059]
[3.56983805 504.48110962]
[1.56582439 519.34667969]
[-0.43818930 534.21215820]
[-2.44220304 549.07769775]
[11.92493820 553.50885010]
[25.36671829 560.24444580]
[37.51643372 569.10076904]
[48.04263687 579.83618164]
[56.65816116 592.15783691]
[63.12796783 605.72955322]
[67.27555847 620.18109131]
[68.98777771 635.11822510]
[68.21792603 650.13348389]
[64.98699188 664.81713867]
[59.38313293 678.76873779]
[51.55921555 691.60760498]
[41.72868347 702.98345947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[30 192]
[31 191]
[32 190]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[45 182]
[46 181]
[47 180]
[48 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 174]
[64 173]
[65 172]
[68 169]
[69 168]
[70 167]
[71 166]
[72 164]
[74 163]
[75 162]
[79 161]
[80 160]
[81 159]
[82 158]
[83 145]
[84 144]
[85 143]
[86 142]
[88 140]
[89 139]
[90 138]
[93 135]
[94 134]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
