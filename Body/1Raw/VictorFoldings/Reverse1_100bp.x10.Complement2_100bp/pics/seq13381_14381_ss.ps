%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[217.64997864 331.40777588]
[208.86936951 319.24630737]
[200.08876038 307.08486938]
[191.30816650 294.92340088]
[189.91120911 309.85821533]
[180.08947754 321.19546509]
[165.50621033 324.70666504]
[151.60061646 319.08218384]
[143.55914307 306.41986084]
[144.38105774 291.44238281]
[153.75979614 279.73602295]
[168.19734192 275.66693115]
[182.30975342 280.75350952]
[175.03652954 267.63479614]
[167.76329041 254.51611328]
[160.49006653 241.39741516]
[153.91030884 254.87728882]
[139.30285645 258.28649902]
[127.43580627 249.11190796]
[127.05708313 234.11669922]
[138.44587708 224.35475159]
[153.20544434 227.02127075]
[146.92808533 213.39796448]
[140.65072632 199.77464294]
[134.37336731 186.15132141]
[122.01994324 177.83013916]
[123.27188110 162.05854797]
[116.69184875 148.57881165]
[109.81243896 135.24937439]
[102.93302917 121.91995239]
[96.05361176 108.59052277]
[91.54738617 105.90576935]
[88.86615753 100.88736725]
[89.17449951 94.76023102]
[82.69500732 81.23188782]
[76.21550751 67.70353699]
[69.73601532 54.17519379]
[63.25651932 40.64684677]
[56.17941284 27.42131996]
[48.51881790 14.52499294]
[40.85821915 1.62866652]
[33.19762039 -11.26766014]
[25.53702354 -24.16398811]
[17.87642670 -37.06031418]
[4.17640543 -44.97359467]
[4.32868862 -59.86742020]
[-3.80652714 -72.46973419]
[-12.40509129 -84.76056671]
[-21.00365448 -97.05140686]
[-35.25429153 -103.92380524]
[-36.21018219 -118.78771210]
[-44.80874634 -131.07855225]
[-53.40731049 -143.36938477]
[-62.00587463 -155.66021729]
[-75.10248566 -148.32145691]
[-88.86473083 -142.32318115]
[-103.15582275 -137.72502136]
[-117.83374023 -134.57264709]
[-132.75259399 -132.89741516]
[-147.76411438 -132.71595764]
[-162.71910095 -134.03009033]
[-177.46891785 -136.82675171]
[-191.86698914 -141.07814026]
[-205.77020264 -146.74200439]
[-219.04037476 -153.76205444]
[-231.54562378 -162.06852722]
[-243.16165161 -171.57884216]
[-253.77304077 -182.19851685]
[-263.27429199 -193.82196045]
[-271.57098389 -206.33369446]
[-278.58068848 -219.60934448]
[-284.23370361 -233.51696777]
[-288.47384644 -247.91835022]
[-291.25897217 -262.67034912]
[-292.56143188 -277.62637329]
[-292.36828613 -292.63772583]
[-290.68139648 -307.55526733]
[-287.51757812 -322.23071289]
[-282.90823364 -336.51821899]
[-276.89923096 -350.27578735]
[-269.55026245 -363.36666870]
[-260.93432617 -375.66076660]
[-251.13713074 -387.03588867]
[-240.25599670 -397.37896729]
[-228.39907837 -406.58724976]
[-215.68423462 -414.56915283]
[-202.23780823 -421.24542236]
[-188.19346619 -426.54965210]
[-173.69076538 -430.42913818]
[-158.87385559 -432.84530640]
[-143.89001465 -433.77420044]
[-128.88812256 -433.20651245]
[-114.01732635 -431.14794922]
[-99.42538452 -427.61892700]
[-85.25734711 -422.65451050]
[-71.65400696 -416.30410767]
[-58.75057983 -408.63076782]
[-46.67529678 -399.71078491]
[-35.54817963 -389.63278198]
[-25.47981453 -378.49694824]
[-16.57026672 -366.41397095]
[-8.90808582 -353.50390625]
[-2.56942534 -339.89508057]
[2.38271713 -325.72274780]
[5.89912367 -311.12777710]
[7.94484520 -296.25518799]
[8.49955082 -281.25283813]
[7.55772686 -266.26980591]
[5.12873411 -251.45498657]
[1.23671317 -236.95564270]
[-4.07965374 -222.91589355]
[-10.76752853 -209.47523499]
[-18.76044273 -196.76728821]
[-27.97895813 -184.91835022]
[-38.33145142 -174.04615784]
[-49.71503830 -164.25878906]
[-41.11647415 -151.96795654]
[-32.51791000 -139.67710876]
[-23.91934586 -127.38627625]
[-10.28373432 -121.39299774]
[-8.71281719 -105.64997101]
[-0.11425312 -93.35913086]
[8.48431110 -81.06829834]
[13.62599277 -95.15953827]
[27.79948997 -100.06993103]
[40.55662537 -92.17972565]
[42.49331665 -77.30527496]
[32.18190765 -66.41147614]
[17.22501564 -67.52801514]
[30.37709999 -60.53717041]
[30.77275276 -44.72091293]
[38.43334961 -31.82458496]
[46.09394836 -18.92825699]
[53.75454712 -6.03193092]
[61.41514206 6.86439610]
[69.07573700 19.76072311]
[73.81790161 5.53005457]
[87.17147064 -1.30238211]
[101.48691559 3.17734313]
[108.56370544 16.40303993]
[104.34793091 30.79842949]
[91.25457764 38.11717606]
[76.78486633 34.16735077]
[83.26435852 47.69569778]
[89.74385834 61.22404480]
[96.22335052 74.75238800]
[102.70285034 88.28073120]
[109.38304138 101.71111298]
[116.26245880 115.04054260]
[123.14186859 128.36996460]
[130.02128601 141.69940186]
[134.41474915 144.51800537]
[137.02653503 148.35621643]
[137.76664734 152.36462402]
[136.89520264 155.78118896]
[149.69761658 165.07679749]
[147.99668884 179.87396240]
[154.27404785 193.49728394]
[160.55140686 207.12060547]
[166.82876587 220.74391174]
[173.60876465 234.12419128]
[180.88198853 247.24288940]
[188.15521240 260.36157227]
[195.42845154 273.48028564]
[203.46961975 286.14279175]
[212.25022888 298.30426025]
[221.03082275 310.46569824]
[229.81143188 322.62716675]
[243.09774780 315.61148071]
[257.23120117 310.51327515]
[271.93664551 307.43173218]
[286.92785645 306.42684937]
[301.91302490 307.51821899]
[316.60043335 310.68457031]
[330.70422363 315.86425781]
[343.94985962 322.95648193]
[356.07946777 331.82318115]
[366.85699463 342.29177856]
[376.07263184 354.15847778]
[383.54696655 367.19226074]
[389.13455200 381.13949585]
[392.72659302 395.72863770]
[394.25320435 410.67575073]
[393.68463135 425.68981934]
[391.03195190 440.47866821]
[386.34683228 454.75436401]
[379.72042847 468.23904419]
[371.28173828 480.67025757]
[361.19503784 491.80599976]
[349.65664673 501.42947388]
[336.89117432 509.35342407]
[323.14709473 515.42358398]
[308.69195557 519.52178955]
[293.80712891 521.56823730]
[278.78234863 521.52319336]
[263.91009521 519.38739014]
[249.47981262 515.20251465]
[235.77241516 509.04998779]
[223.05473328 501.04956055]
[211.57432556 491.35699463]
[201.55462646 480.16091919]
[193.19070435 467.67929077]
[186.64535522 454.15505981]
[182.04598999 439.85150146]
[179.48213196 425.04702759]
[179.00367737 410.02978516]
[180.61996460 395.09213257]
[184.29949951 380.52481079]
[189.97068787 366.61135864]
[197.52313232 353.62265015]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[13 164]
[14 163]
[15 162]
[16 161]
[22 160]
[23 159]
[24 158]
[25 157]
[27 155]
[28 151]
[29 150]
[30 149]
[31 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 143]
[39 136]
[40 135]
[41 134]
[42 133]
[43 132]
[44 131]
[46 129]
[47 123]
[48 122]
[49 121]
[51 119]
[52 118]
[53 117]
[54 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
