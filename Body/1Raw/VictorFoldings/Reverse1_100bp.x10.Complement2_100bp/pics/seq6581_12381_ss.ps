%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[200.97883606 589.28460693]
[209.84230042 577.14801025]
[220.41571045 566.46813965]
[232.46284485 557.48345947]
[225.38574219 544.25793457]
[218.30863953 531.03240967]
[211.23152161 517.80688477]
[204.15441895 504.58132935]
[189.86912537 500.52352905]
[182.50352478 487.21179199]
[186.85658264 472.25555420]
[179.77947998 459.03002930]
[172.70237732 445.80450439]
[165.62527466 432.57897949]
[158.54817200 419.35345459]
[158.49969482 434.35336304]
[153.64566040 448.54626465]
[144.49830627 460.43432617]
[132.02297974 468.76296997]
[117.53623962 472.65325928]
[102.56690216 471.69464111]
[88.69471741 465.98831177]
[77.38364410 456.13641357]
[69.82737732 443.17868042]
[66.82334137 428.48257446]
[68.68856049 413.59899902]
[75.22619629 400.09863281]
[85.74630737 389.40625000]
[99.13869476 382.65020752]
[113.99001312 380.54351807]
[128.73298645 383.30844116]
[141.81173706 390.65325928]
[151.84613037 401.80300903]
[148.30645752 387.22662354]
[144.76678467 372.65023804]
[141.22711182 358.07388306]
[138.42240906 355.93707275]
[136.51332092 352.33563232]
[136.17698669 347.70526123]
[137.87033081 342.76766968]
[134.98506165 328.04779053]
[132.09977722 313.32791138]
[129.21450806 298.60800171]
[114.76889801 298.12612915]
[100.78730011 294.43289185]
[87.97481537 287.71109009]
[76.97837067 278.29629517]
[68.35403442 266.66018677]
[62.53890991 253.38691711]
[59.82896423 239.14369202]
[60.36399841 224.64729309]
[64.12041473 210.62806702]
[70.91223145 197.79299927]
[80.40032196 186.79016113]
[92.10929871 178.17596436]
[105.45137787 172.38699341]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[80.38389587 77.11824799]
[85.73613739 63.21850586]
[83.07034302 48.45729065]
[80.40454865 33.69607162]
[74.28287506 47.39005280]
[62.55581665 56.74291992]
[47.84323502 59.66522217]
[33.43194962 55.50410461]
[22.54148293 45.18917847]
[17.60479355 31.02481651]
[19.72474861 16.17538071]
[28.42774773 3.95826745]
[41.76951599 -2.89718556]
[56.76946640 -2.85945392]
[70.07657623 4.06303310]
[78.71800995 16.32379532]
[78.49468231 1.32545793]
[78.27135468 -13.67287922]
[78.04802704 -28.67121696]
[75.36956024 -33.15149689]
[74.74040222 -37.75122070]
[75.86286926 -41.66978073]
[78.16468048 -44.34073639]
[78.61128998 -59.33408356]
[79.05789185 -74.32743835]
[79.50450134 -89.32078552]
[76.63198853 -97.99179840]
[80.07102203 -104.53357697]
[80.74080658 -119.51861572]
[81.41059113 -134.50364685]
[82.08037567 -149.48869324]
[82.75016022 -164.47372437]
[83.41994476 -179.45877075]
[84.08972931 -194.44380188]
[84.75951385 -209.42884827]
[85.42929840 -224.41387939]
[71.33384705 -229.94532776]
[59.79978943 -239.75573730]
[52.07826233 -252.78097534]
[49.00683975 -267.60815430]
[50.91868591 -282.62890625]
[57.60641861 -296.21395874]
[68.34459686 -306.88961792]
[81.96842957 -313.49795532]
[97.00010681 -315.32208252]
[111.80909729 -312.16415405]
[124.78903961 -304.36672974]
[134.53196716 -292.77560425]
[139.98103333 -278.64810181]
[140.54516602 -263.51666260]
[136.16317749 -249.02264404]
[127.31038666 -236.73822021]
[114.94708252 -227.99594116]
[100.41433716 -223.74409485]
[99.74455261 -208.75906372]
[99.07476807 -193.77401733]
[98.40498352 -178.78898621]
[97.73519897 -163.80393982]
[97.06541443 -148.81890869]
[96.39562988 -133.83386230]
[95.72584534 -118.84882355]
[95.05606079 -103.86378479]
[94.49784851 -88.87417603]
[94.05124664 -73.88082886]
[93.60463715 -58.88747787]
[93.15802765 -43.89413071]
[93.04636383 -28.89454460]
[93.26969147 -13.89620686]
[93.49301910 1.10213029]
[93.71634674 16.10046768]
[95.16576385 31.03027534]
[97.83155823 45.79149246]
[100.49736023 60.55271149]
[110.37337494 71.70230865]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[120.21259308 169.72120667]
[135.77444458 170.65899658]
[150.65362549 175.28378296]
[163.99017334 183.32391357]
[175.01429749 194.31044006]
[183.09088135 207.60450745]
[187.75601196 222.43449402]
[188.74363708 237.94079590]
[186.00077820 253.22563171]
[179.69027710 267.40505981]
[170.18119812 279.66006470]
[158.02720642 289.28387451]
[143.93440247 295.72274780]
[146.81967163 310.44262695]
[149.70494080 325.16250610]
[152.59022522 339.88241577]
[155.80349731 354.53421021]
[159.34317017 369.11056519]
[162.88284302 383.68695068]
[166.42251587 398.26333618]
[171.77369690 412.27633667]
[178.85079956 425.50186157]
[185.92790222 438.72738647]
[193.00500488 451.95294189]
[200.08212280 465.17846680]
[214.94055176 469.85443115]
[221.92933655 483.36779785]
[217.37994385 497.50424194]
[224.45706177 510.72976685]
[231.53416443 523.95532227]
[238.61126709 537.18084717]
[245.68836975 550.40637207]
[259.84719849 545.36798096]
[274.59881592 542.49621582]
[289.61370850 541.85522461]
[304.55642700 543.45941162]
[319.09310913 547.27282715]
[332.89904785 553.21032715]
[345.66577148 561.13928223]
[357.10809326 570.88256836]
[366.97036743 582.22241211]
[375.03231812 594.90557861]
[381.11376953 608.64874268]
[385.07888794 623.14477539]
[386.83911133 638.06988525]
[386.35510254 653.09063721]
[383.63766479 667.87152100]
[378.74749756 682.08221436]
[371.79388428 695.40527344]
[362.93212891 707.54315186]
[352.36022949 718.22454834]
[340.31439209 727.21093750]
[327.06369019 734.30151367]
[312.90414429 739.33789062]
[298.15209961 742.20758057]
[283.13711548 742.84637451]
[268.19464111 741.24011230]
[253.65849304 737.42456055]
[239.85340881 731.48510742]
[227.08781433 723.55432129]
[215.64688110 713.80944824]
[205.78620911 702.46820068]
[197.72608948 689.78387451]
[191.64657593 676.03985596]
[187.68351746 661.54327393]
[185.92543030 646.61785889]
[186.41157532 631.59716797]
[189.13113403 616.81671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[11 167]
[12 166]
[13 165]
[14 164]
[15 163]
[33 162]
[34 161]
[35 160]
[36 159]
[40 158]
[41 157]
[42 156]
[43 155]
[56 143]
[57 142]
[58 141]
[59 140]
[60 139]
[62 137]
[64 135]
[65 134]
[66 133]
[78 132]
[79 131]
[80 130]
[81 129]
[85 128]
[86 127]
[87 126]
[88 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
