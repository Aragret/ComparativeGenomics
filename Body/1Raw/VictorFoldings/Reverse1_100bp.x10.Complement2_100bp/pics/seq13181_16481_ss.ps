%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[39.94431686 557.36285400]
[30.09514236 568.68975830]
[19.27027130 579.08825684]
[7.55685520 588.47454834]
[-4.95079184 596.77301025]
[-18.15196419 603.91693115]
[-31.94037247 609.84869385]
[-46.20499802 614.52062988]
[-60.83098602 617.89501953]
[-75.70057678 619.94482422]
[-90.69404602 620.65338135]
[-105.69067383 620.01513672]
[-120.56970978 618.03509521]
[-135.21136475 614.72930908]
[-149.49774170 610.12432861]
[-163.31381226 604.25726318]
[-176.54833984 597.17535400]
[-189.09475708 588.93560791]
[-200.85205078 579.60437012]
[-211.72557068 569.25671387]
[-221.62774658 557.97607422]
[-230.47885132 545.85321045]
[-238.20764160 532.98571777]
[-244.75186157 519.47723389]
[-250.05883789 505.43649292]
[-254.08583069 490.97656250]
[-256.80041504 476.21386719]
[-258.18075562 461.26727295]
[-258.21572876 446.25711060]
[-256.90502930 431.30422974]
[-254.25924683 416.52905273]
[-250.29965210 402.05053711]
[-245.05813599 387.98522949]
[-238.57691956 374.44638062]
[-230.90815735 361.54302979]
[-222.11361694 349.37905884]
[-212.26409912 338.05239868]
[-201.43890381 327.65426636]
[-189.72520447 318.26834106]
[-177.21730042 309.97021484]
[-164.01591492 302.82672119]
[-150.22732544 296.89535522]
[-135.96255493 292.22390747]
[-121.33646393 288.84991455]
[-106.46681213 286.80062866]
[-91.47332001 286.09249878]
[-76.47671509 286.73123169]
[-61.59773636 288.71170044]
[-46.95618439 292.01794434]
[-32.66995239 296.62335205]
[-18.85405922 302.49081421]
[-11.77695465 289.26528931]
[-4.69984865 276.03976440]
[2.37725663 262.81423950]
[9.45436192 249.58871460]
[16.53146744 236.36318970]
[23.60857201 223.13766479]
[30.48798561 209.80822754]
[37.16817856 196.37785339]
[43.84837341 182.94747925]
[50.52856827 169.51710510]
[35.69456863 171.74250793]
[24.60243034 161.64477539]
[25.42886162 146.66755676]
[37.56465149 137.85151672]
[52.06374741 141.69549561]
[58.23798370 155.36422729]
[65.89858246 142.46789551]
[73.55918121 129.57157898]
[81.21977997 116.67524719]
[88.88037109 103.77891541]
[75.60221100 110.75676727]
[60.63936996 111.81192017]
[46.51334763 106.76657104]
[35.60463715 96.47093964]
[29.75153732 82.66002655]
[29.94040489 67.66121674]
[36.13941193 54.00206757]
[47.30391312 43.98439026]
[61.55249405 39.29633331]
[76.48402405 40.72792053]
[89.58227539 48.03790665]
[98.63996124 59.99442673]
[102.13069916 74.58259583]
[99.46562195 89.34558868]
[109.46379089 78.16362000]
[119.46196747 66.98164368]
[129.46014404 55.79966736]
[132.84732056 47.31646347]
[139.69137573 44.52706146]
[143.35148621 29.13504601]
[157.66557312 25.01722527]
[167.82911682 13.98534870]
[177.99266052 2.95347166]
[188.15620422 -8.07840538]
[178.04531860 -19.17161942]
[168.93975830 -31.10384941]
[160.90882874 -43.78428268]
[154.01362610 -57.11640930]
[148.30665588 -70.99876404]
[143.83132935 -85.32569122]
[140.62171936 -99.98815155]
[138.70225525 -114.87455750]
[138.08753967 -129.87161255]
[138.78225708 -144.86515808]
[140.78111267 -159.74111938]
[144.06890869 -174.38624573]
[148.62060547 -188.68908691]
[154.40156555 -202.54080200]
[161.36779785 -215.83595276]
[169.46627808 -228.47335815]
[178.63537598 -240.35682678]
[188.80529785 -251.39593506]
[199.89865112 -261.50668335]
[211.83100891 -270.61206055]
[224.51155090 -278.64282227]
[237.84378052 -285.53784180]
[251.72621155 -291.24462891]
[266.05319214 -295.71972656]
[280.71569824 -298.92913818]
[295.60214233 -300.84838867]
[310.59921265 -301.46289062]
[325.59274292 -300.76797485]
[340.46865845 -298.76889038]
[355.11373901 -295.48089600]
[369.41653442 -290.92901611]
[383.26815796 -285.14785767]
[396.56320190 -278.18142700]
[409.20050049 -270.08279419]
[421.08386230 -260.91351318]
[432.12283325 -250.74343872]
[442.23339844 -239.64994812]
[451.33862305 -227.71745300]
[459.36920166 -215.03680420]
[466.26403809 -201.70448303]
[471.97061157 -187.82196045]
[476.44555664 -173.49491882]
[479.65472412 -158.83236694]
[481.57379150 -143.94590759]
[482.18807983 -128.94883728]
[481.49295044 -113.95529938]
[479.49365234 -99.07940674]
[476.20547485 -84.43436432]
[471.65335083 -70.13164520]
[465.87200928 -56.28010178]
[458.90539551 -42.98514557]
[450.80657959 -30.34797096]
[441.63714600 -18.46474838]
[431.46691895 -7.42592239]
[420.37326050 2.68449473]
[408.44067383 11.78955460]
[395.75988770 19.81996155]
[382.42745972 26.71459961]
[368.54489136 32.42098999]
[354.21777344 36.89570999]
[339.55517578 40.10470200]
[324.66867065 42.02354050]
[309.67160034 42.63761902]
[294.67807007 41.94227219]
[279.80221558 39.94278717]
[265.15722656 36.65438080]
[250.85456848 32.10208130]
[237.00309753 26.32053757]
[223.70823669 19.35374832]
[211.07118225 11.25473595]
[199.18807983 2.08514118]
[189.02453613 13.11701870]
[178.86099243 24.14889526]
[168.69744873 35.18077469]
[165.76429749 49.78371429]
[150.72325134 54.69060516]
[140.64212036 65.79784393]
[130.64393616 76.97981262]
[120.64576721 88.16178894]
[110.64759827 99.34376526]
[101.77670288 111.43951416]
[94.11610413 124.33584595]
[86.45550537 137.23216248]
[78.79490662 150.12849426]
[71.13431549 163.02482605]
[63.95894623 176.19729614]
[57.27875137 189.62767029]
[50.59855652 203.05804443]
[43.91836166 216.48843384]
[43.94650269 223.09983826]
[41.06420898 227.99774170]
[36.83409882 230.21476746]
[29.75699425 243.44029236]
[22.67988968 256.66583252]
[15.60278416 269.89135742]
[8.52567863 283.11688232]
[1.44857335 296.34240723]
[-5.62853193 309.56793213]
[6.91814041 317.80731201]
[18.67572403 327.13818359]
[29.54955292 337.48547363]
[39.45207214 348.76580811]
[48.30355453 360.88842773]
[56.03273010 373.75567627]
[62.57736969 387.26397705]
[67.88477325 401.30453491]
[71.91220856 415.76434326]
[74.62725830 430.52694702]
[76.00804901 445.47351074]
[76.04346466 460.48367310]
[74.73323059 475.43658447]
[72.08789062 490.21185303]
[68.12873840 504.69052124]
[62.88766098 518.75598145]
[56.40684891 532.29498291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 184]
[59 183]
[60 182]
[61 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[85 175]
[86 174]
[87 173]
[88 172]
[90 171]
[92 169]
[93 168]
[94 167]
[95 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
