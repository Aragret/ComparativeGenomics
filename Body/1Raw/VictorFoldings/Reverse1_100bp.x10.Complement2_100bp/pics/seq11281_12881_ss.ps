%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[99.97503662 822.70837402]
[85.36987305 819.25701904]
[71.07176208 814.69781494]
[57.16461182 809.05743408]
[43.73003769 802.36901855]
[30.84688187 794.67175293]
[18.59074783 786.01092529]
[7.03355980 776.43731689]
[-3.75685906 766.00708008]
[-13.71718597 754.78149414]
[-22.78896713 742.82635498]
[-30.91896820 730.21185303]
[-38.05947495 717.01196289]
[-44.16858673 703.30426025]
[-49.21045303 689.16912842]
[-53.15547943 674.68951416]
[-55.98052216 659.95037842]
[-57.66899872 645.03820801]
[-58.21100235 630.04058838]
[-57.60335159 615.04547119]
[-55.84960938 600.14086914]
[-52.96007156 585.41424561]
[-48.95169449 570.95202637]
[-43.84799957 556.83911133]
[-37.67893982 543.15826416]
[-30.48071480 529.98980713]
[-22.29557037 517.41101074]
[-13.17154026 505.49569702]
[-3.16216779 494.31378174]
[7.67380762 483.93087769]
[19.27279472 474.40795898]
[31.56672478 465.80087280]
[44.48345184 458.16012573]
[57.94717789 451.53057861]
[71.87888336 445.95114136]
[86.19681549 441.45452881]
[100.81695557 438.06713867]
[115.65349579 435.80886841]
[114.53784943 420.85040283]
[113.42219543 405.89193726]
[112.30654907 390.93350220]
[103.34819794 382.80487061]
[102.29631805 370.35186768]
[110.25827026 360.20443726]
[109.36545563 345.23104858]
[108.47264099 330.25762939]
[107.57981873 315.28424072]
[106.68700409 300.31082153]
[98.20588684 288.06665039]
[105.10806274 273.83041382]
[104.21524811 258.85702515]
[103.21099091 243.89067078]
[102.09533691 228.93220520]
[100.97969055 213.97375488]
[99.86404419 199.01530457]
[91.20156097 186.89875793]
[97.89102173 172.56134033]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.04804993 58.49986267]
[87.26558685 43.60614777]
[85.48311615 28.71242905]
[82.70751190 13.97146606]
[71.76090240 2.54858017]
[76.06450653 -11.71074104]
[72.30820465 -26.23280144]
[58.97282410 -34.28297806]
[55.37027359 -49.06392288]
[63.12706757 -61.72755814]
[59.37076950 -76.24961853]
[55.61446762 -90.77167511]
[51.85816574 -105.29373932]
[47.93582535 -90.81564331]
[39.10707855 -78.68909454]
[26.53349304 -70.50954437]
[11.86934471 -67.35316467]
[-2.95604610 -69.63521576]
[-15.99214458 -77.05546570]
[-25.52382851 -88.63765717]
[-30.29704094 -102.85794067]
[-29.68378258 -117.84539795]
[-23.76473808 -131.62817383]
[-13.31866074 -142.39289856]
[0.28008932 -148.72331238]
[15.24236202 -149.78651428]
[29.59961319 -145.44262695]
[41.46289825 -136.26316833]
[49.27225113 -123.45362854]
[48.82564545 -138.44697571]
[48.37903976 -153.44032288]
[47.93243408 -168.43368530]
[47.48582840 -183.42703247]
[47.03922272 -198.42037964]
[33.07566833 -204.58332825]
[23.17547989 -216.20008850]
[19.30434418 -230.96412659]
[22.23087692 -245.94406128]
[31.37401581 -258.16558838]
[44.91838074 -265.20211792]
[60.17473221 -265.65655518]
[74.11390686 -259.43865967]
[83.96827698 -247.78302002]
[87.78124237 -233.00384521]
[84.79573822 -218.03556824]
[75.60454559 -205.85012817]
[62.03257370 -198.86698914]
[62.47917938 -183.87364197]
[62.92578506 -168.88027954]
[63.37239075 -153.88693237]
[63.81899643 -138.89358521]
[64.26560211 -123.90023804]
[66.38022614 -109.05004120]
[70.13652802 -94.52797699]
[73.89282990 -80.00592041]
[77.64913177 -65.48385620]
[90.57343292 -58.16963196]
[94.58972931 -43.49570847]
[86.83026123 -29.98910141]
[90.58656311 -15.46704197]
[101.26449585 -5.08287048]
[97.22956848 10.21516609]
[103.30513000 -3.49933600]
[115.77194977 -11.84070683]
[130.76704407 -12.22428131]
[143.64402771 -4.53120565]
[150.41281128 8.85473728]
[148.97602844 23.78576660]
[139.77888489 35.63534164]
[125.67119598 40.73174286]
[111.02439880 37.49579239]
[100.37683868 26.92996407]
[102.15930176 41.82368088]
[103.94177246 56.71739960]
[106.47269440 59.17234421]
[107.94028473 62.97513580]
[107.72399902 67.61264801]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[112.84947968 171.44569397]
[121.59175873 184.63215637]
[114.82249451 197.89965820]
[115.93814850 212.85810852]
[117.05379486 227.81655884]
[118.16944122 242.77502441]
[121.92845917 251.10014343]
[119.18865204 257.96420288]
[120.08147430 272.93759155]
[128.62644958 286.25277710]
[121.66041565 299.41799927]
[122.55323029 314.39141846]
[123.44604492 329.36483765]
[124.33885956 344.33822632]
[125.23167419 359.31164551]
[135.72560120 374.44302368]
[127.26500702 389.81784058]
[128.38064575 404.77630615]
[129.49630737 419.73474121]
[130.61195374 434.69320679]
[145.61933899 434.72561646]
[160.58021545 435.90676880]
[175.40676880 438.22970581]
[190.01199341 441.68075562]
[204.31019592 446.23974609]
[218.21745300 451.87985229]
[231.65216064 458.56802368]
[244.53546143 466.26498413]
[256.79174805 474.92559814]
[268.34912109 484.49899292]
[279.13973999 494.92901611]
[289.10028076 506.15444946]
[298.17230225 518.10943604]
[306.30252075 530.72375488]
[313.44329834 543.92346191]
[319.55264282 557.63110352]
[324.59478760 571.76611328]
[328.54010010 586.24566650]
[331.36541748 600.98474121]
[333.05416870 615.89685059]
[333.59646606 630.89447021]
[332.98910522 645.88958740]
[331.23562622 660.79425049]
[328.34637451 675.52093506]
[324.33828735 689.98321533]
[319.23483276 704.09625244]
[313.06604004 717.77722168]
[305.86807251 730.94580078]
[297.68316650 743.52478027]
[288.55935669 755.44024658]
[278.55020142 766.62237549]
[267.71441650 777.00543213]
[256.11560059 786.52862549]
[243.82185364 795.13592529]
[230.90525818 802.77691650]
[217.44166565 809.40673828]
[203.51007080 814.98645020]
[189.19221497 819.48333740]
[174.57214355 822.87097168]
[159.73564148 825.12951660]
[144.76979065 826.24572754]
[129.76240540 826.21301270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 168]
[39 167]
[40 166]
[41 165]
[44 163]
[45 162]
[46 161]
[47 160]
[48 159]
[50 157]
[51 156]
[52 154]
[53 153]
[54 152]
[55 151]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[63 143]
[64 142]
[65 138]
[66 137]
[67 136]
[68 126]
[70 124]
[71 123]
[74 120]
[75 119]
[76 118]
[77 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
