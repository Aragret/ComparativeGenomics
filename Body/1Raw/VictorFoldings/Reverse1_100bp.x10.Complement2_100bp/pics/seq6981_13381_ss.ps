%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[2.70518470 500.74639893]
[7.82869482 514.90844727]
[9.78754807 529.84088135]
[8.49012661 544.84521484]
[3.99711227 559.21972656]
[-3.48134804 572.29211426]
[-13.59547329 583.45086670]
[-25.87220764 592.17419434]
[-39.73734665 598.05401611]
[-54.54239273 600.81530762]
[-69.59488678 600.32891846]
[-84.19078827 596.61761475]
[-97.64743805 589.85504150]
[-109.33542633 580.35742188]
[-118.70809937 568.56896973]
[-125.32706451 555.04107666]
[-128.88275146 540.40649414]
[-129.20886230 525.34973145]
[-126.29013062 510.57489014]
[-120.26306915 496.77313232]
[-111.40958405 484.58993530]
[-100.14376068 474.59518433]
[-86.99253082 467.25628662]
[-72.57099152 462.91656494]
[-57.55367279 461.77893066]
[-42.64295959 463.89663696]
[-37.39624023 449.84414673]
[-40.19302750 435.21447754]
[-28.11743927 424.99243164]
[-22.87072182 410.93994141]
[-17.62400246 396.88748169]
[-20.42078781 382.25781250]
[-8.34520149 372.03573608]
[-3.09848356 357.98327637]
[-5.89526892 343.35357666]
[6.18031788 333.13153076]
[11.42703629 319.07904053]
[16.67375374 305.02658081]
[21.92047310 290.97409058]
[10.16111565 280.35131836]
[3.36207223 265.99435425]
[2.59117675 250.08900452]
[7.99601603 235.06930542]
[18.77680588 223.24516296]
[33.30459595 216.44708252]
[49.36735916 215.74281311]
[54.40427399 201.61378479]
[59.44118881 187.48475647]
[54.54157639 176.42491150]
[58.62228012 164.61254883]
[70.01121521 158.55822754]
[67.21443176 143.92855835]
[79.29001617 133.70648193]
[84.53673553 119.65401459]
[89.78345490 105.60153961]
[77.75845337 114.56809998]
[63.05060577 117.51416779]
[48.49977875 113.87090302]
[36.91550064 104.34176636]
[30.53452110 90.76667023]
[30.58890152 75.76676941]
[37.06814575 62.23830414]
[48.72121048 52.79340744]
[63.29807281 49.25574112]
[77.98416901 52.30837631]
[89.94384003 61.36189270]
[96.86787415 74.66820526]
[97.41909790 89.65931702]
[97.81475067 73.84305573]
[110.96683502 66.85221100]
[118.62743378 53.95588303]
[118.52667999 49.61493683]
[119.69501495 45.84671021]
[121.79655457 42.97984314]
[124.42319489 41.20012665]
[127.14743805 40.53933716]
[135.56205750 28.12183952]
[136.89840698 12.35717297]
[150.44328308 6.16154575]
[158.85789490 -6.25594950]
[167.27250671 -18.67344475]
[175.68713379 -31.09094048]
[177.02348328 -46.85560608]
[190.56835938 -53.05123520]
[198.98297119 -65.46872711]
[200.31932068 -81.23339844]
[213.86419678 -87.42902374]
[222.27880859 -99.84651947]
[223.61517334 -115.61119080]
[237.16003418 -121.80681610]
[245.57464600 -134.22430420]
[253.98927307 -146.64179993]
[262.40390015 -159.05929565]
[259.63043213 -174.38723755]
[268.34094238 -186.86047363]
[282.97085571 -189.41009521]
[291.38549805 -201.82759094]
[299.80010986 -214.24508667]
[308.21472168 -226.66258240]
[316.62933350 -239.08007812]
[305.30194092 -248.94148254]
[295.24581909 -260.09637451]
[286.60763550 -272.38211060]
[279.51336670 -285.61950684]
[274.06643677 -299.61550903]
[270.34628296 -314.16604614]
[268.40719604 -329.05889893]
[268.27740479 -344.07690430]
[269.95883179 -359.00106812]
[273.42694092 -373.61370850]
[278.63116455 -387.70175171]
[285.49563599 -401.05978394]
[293.92019653 -413.49295044]
[303.78204346 -424.82000732]
[314.93731689 -434.87570190]
[327.22335815 -443.51342773]
[340.46099854 -450.60720825]
[354.45721436 -456.05361938]
[369.00790405 -459.77322388]
[383.90081787 -461.71176147]
[398.91885376 -461.84097290]
[413.84292603 -460.15899658]
[428.45544434 -456.69033813]
[442.54330444 -451.48556519]
[455.90106201 -444.62063599]
[468.33392334 -436.19558716]
[479.66058350 -426.33334351]
[489.71588135 -415.17767334]
[498.35314941 -402.89129639]
[505.44644165 -389.65338135]
[510.89233398 -375.65695190]
[514.61138916 -361.10617065]
[516.54937744 -346.21316528]
[516.67803955 -331.19512939]
[514.99548340 -316.27111816]
[511.52627563 -301.65872192]
[506.32098389 -287.57104492]
[499.45553589 -274.21356201]
[491.03002930 -261.78100586]
[481.16735840 -250.45471191]
[470.01132202 -240.39984131]
[457.72463989 -231.76303101]
[444.48645020 -224.67022705]
[430.48980713 -219.22486877]
[415.93887329 -215.50636292]
[401.04580688 -213.56893921]
[386.02777100 -213.44084167]
[371.10382080 -215.12394714]
[356.49154663 -218.59368896]
[342.40408325 -223.79951477]
[329.04684448 -230.66545105]
[320.63223267 -218.24795532]
[312.21759033 -205.83045959]
[303.80297852 -193.41296387]
[295.38836670 -180.99546814]
[298.44238281 -166.46246338]
[290.08566284 -153.74948120]
[274.82138062 -150.64468384]
[266.40676880 -138.22718811]
[257.99215698 -125.80969238]
[249.57752991 -113.39219666]
[248.84304810 -98.51570892]
[234.69630432 -91.43190002]
[226.28169250 -79.01440430]
[225.54721069 -64.13792419]
[211.40046692 -57.05411148]
[202.98585510 -44.63661575]
[202.25137329 -29.76013184]
[188.10462952 -22.67632294]
[179.69000244 -10.25882626]
[171.27539062 2.15866899]
[162.86077881 14.57616425]
[162.12628174 29.45265007]
[147.97955322 36.53646088]
[139.56492615 48.95395279]
[131.52375793 61.61647797]
[123.86315918 74.51280975]
[124.01544189 89.40663147]
[110.31542206 97.31991577]
[103.83592987 110.84825897]
[98.58921051 124.90072632]
[93.34249115 138.95320129]
[95.76399994 154.58799744]
[84.06369019 163.80494690]
[87.53178406 181.88957214]
[73.57022095 192.52166748]
[68.53330231 206.65069580]
[63.49638748 220.77973938]
[74.33528137 230.01928711]
[81.35459900 242.37771606]
[83.72889709 256.36041260]
[81.19308472 270.28436279]
[74.07182312 282.48065186]
[63.23813248 291.49456787]
[50.00640106 296.25900269]
[35.97294235 296.22082520]
[30.72622490 310.27328491]
[25.47950745 324.32577515]
[20.23278999 338.37823486]
[22.65429497 354.01303101]
[10.95398808 363.22998047]
[5.70726967 377.28244019]
[8.12877464 392.91723633]
[-3.57153201 402.13418579]
[-8.81825066 416.18667603]
[-14.06496811 430.23913574]
[-11.64346313 445.87393188]
[-23.34376907 455.09088135]
[-28.59048843 469.14334106]
[-15.94045162 477.31591797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[29 206]
[30 205]
[31 204]
[33 202]
[34 201]
[36 199]
[37 198]
[38 197]
[39 196]
[46 188]
[47 187]
[48 186]
[51 184]
[53 182]
[54 181]
[55 180]
[68 179]
[70 177]
[71 176]
[76 175]
[77 174]
[79 172]
[80 171]
[81 170]
[82 169]
[84 167]
[85 166]
[87 164]
[88 163]
[90 161]
[91 160]
[92 159]
[93 158]
[96 155]
[97 154]
[98 153]
[99 152]
[100 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
