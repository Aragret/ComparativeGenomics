%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[222.02864075 587.92517090]
[234.54104614 579.55706787]
[228.87825012 565.66705322]
[223.21546936 551.77703857]
[217.55268860 537.88702393]
[211.88989258 523.99700928]
[206.22711182 510.10696411]
[200.56431580 496.21694946]
[192.42935181 508.81939697]
[177.52029419 510.46865845]
[166.82754517 499.94888306]
[168.23341370 485.01492310]
[180.70152283 476.67550659]
[195.03965759 481.07702637]
[190.42564392 466.80429077]
[185.81163025 452.53155518]
[181.19763184 438.25881958]
[176.58361816 423.98608398]
[167.53385925 435.94860840]
[152.54342651 436.48437500]
[142.66271973 425.19848633]
[145.17543030 410.41043091]
[158.22926331 403.02145386]
[172.20030212 408.47720337]
[168.66064453 393.90081787]
[165.12097168 379.32443237]
[161.58129883 364.74807739]
[158.04162598 350.17169189]
[154.50195312 335.59530640]
[150.96228027 321.01895142]
[146.13627625 306.81649780]
[140.06243896 293.10122681]
[133.98861694 279.38595581]
[127.91477203 265.67068481]
[125.19747162 280.42251587]
[116.00867462 292.27856445]
[102.40119934 298.59017944]
[87.41497803 297.94732666]
[74.39797974 290.49362183]
[66.25823212 277.89425659]
[64.81417084 262.96392822]
[70.38841248 249.03811646]
[81.73564911 239.22790527]
[96.32088470 235.72491455]
[110.88573456 239.31170654]
[122.17639160 249.18701172]
[118.42008972 234.66496277]
[114.66378784 220.14289856]
[104.91804504 231.54554749]
[89.92230225 231.18814087]
[80.73086548 219.33413696]
[84.11931610 204.72186279]
[97.58981323 198.12295532]
[111.21135712 204.40060425]
[108.54556274 189.63938904]
[105.87976837 174.87817383]
[103.21396637 160.11695862]
[100.54817200 145.35574341]
[88.20367432 137.10049438]
[85.28990173 122.16850281]
[94.03244781 109.27642822]
[83.46560669 119.92264557]
[68.53798676 118.45089722]
[60.25366592 105.94609070]
[64.71954346 91.62631989]
[78.64353180 86.04757690]
[91.76043701 93.32096100]
[90.19991302 78.40235138]
[86.19469452 70.19284821]
[88.72891235 63.25025558]
[87.39067841 48.31007004]
[86.05244446 33.36988831]
[76.67330170 24.51582336]
[75.86625671 12.04455853]
[83.51968384 2.67697453]
[82.40402985 -12.28147888]
[73.66175079 -25.46795464]
[80.43101501 -38.73544693]
[79.31536102 -53.69390106]
[78.19971466 -68.65235138]
[77.08406830 -83.61080933]
[73.32505035 -91.93592834]
[76.06485748 -98.79998779]
[75.17203522 -113.77339172]
[64.67810822 -128.90478516]
[73.13871002 -144.27960205]
[72.02306366 -159.23805237]
[70.90741730 -174.19651794]
[69.79176331 -189.15496826]
[68.56478882 -204.10470581]
[67.22655487 -219.04487610]
[52.36008072 -221.62371826]
[38.66802979 -227.96328735]
[27.08394623 -237.63134766]
[18.39765167 -249.96871948]
[13.20139503 -264.13421631]
[11.84946442 -279.16201782]
[14.43403625 -294.02749634]
[20.77889061 -307.71710205]
[30.45142365 -319.29745483]
[42.79214859 -327.97897339]
[56.95965195 -333.16976929]
[71.98796844 -334.51589966]
[86.85244751 -331.92556763]
[100.53959656 -325.57543945]
[112.11621094 -315.89843750]
[120.79297638 -303.55435181]
[125.97829437 -289.38485718]
[127.31861877 -274.35601807]
[124.72257233 -259.49252319]
[118.36714172 -245.80783081]
[108.68566895 -234.23495483]
[96.33824921 -225.56295776]
[82.16674042 -220.38311768]
[83.50497437 -205.44293213]
[87.23268890 -199.06124878]
[84.75022125 -190.27061462]
[85.86586761 -175.31216431]
[86.98151398 -160.35371399]
[88.09716797 -145.39524841]
[97.05551147 -137.26663208]
[98.10739899 -124.81362152]
[90.14544678 -114.66620636]
[91.03826141 -99.69280243]
[92.04251862 -84.72645569]
[93.15817261 -69.76800537]
[94.27381897 -54.80955124]
[95.38946533 -39.85109711]
[104.05194855 -27.73455048]
[97.36248779 -13.39712715]
[98.47813416 1.56132579]
[109.12584686 15.51099014]
[100.99263000 32.03165054]
[102.33086395 46.97183609]
[103.66909790 61.91202164]
[105.11851501 76.84182739]
[106.67903900 91.76043701]
[108.79366302 106.61063385]
[121.49336243 115.63035583]
[123.98657990 130.63830566]
[115.30939484 142.68994141]
[117.97518921 157.45115662]
[120.64098358 172.21237183]
[123.30677795 186.97358704]
[125.97257233 201.73480225]
[129.18585205 216.38659668]
[132.94215393 230.90866089]
[136.69845581 245.43070984]
[141.63003540 259.59686279]
[147.70387268 273.31210327]
[153.77770996 287.02737427]
[159.85154724 300.74264526]
[162.17980957 285.92443848]
[170.63551331 273.53488159]
[183.58599854 265.96621704]
[198.53074646 264.67980957]
[212.58412170 269.92407227]
[223.03268433 280.68640137]
[227.85894775 294.88876343]
[226.13104248 309.78890991]
[218.18260193 322.50985718]
[205.54835510 330.59539795]
[190.66777039 332.48431396]
[176.41404724 327.81188965]
[165.53865051 317.47927856]
[169.07832336 332.05563354]
[172.61799622 346.63201904]
[176.15766907 361.20840454]
[179.69734192 375.78475952]
[183.23701477 390.36114502]
[186.77668762 404.93753052]
[190.85635376 419.37207031]
[195.47036743 433.64480591]
[200.08436584 447.91754150]
[204.69837952 462.19027710]
[209.31239319 476.46301270]
[214.45434570 490.55413818]
[220.11714172 504.44418335]
[225.77992249 518.33422852]
[231.44270325 532.22424316]
[237.10549927 546.11425781]
[242.76828003 560.00427246]
[248.43106079 573.89428711]
[263.22760010 571.12890625]
[278.27792358 571.39892578]
[292.96569824 574.69335938]
[306.68954468 580.87738037]
[318.88742065 589.69757080]
[329.05984497 600.79296875]
[336.79025269 613.70904541]
[341.76211548 627.91699219]
[343.77182007 642.83496094]
[342.73706055 657.85211182]
[338.70025635 672.35345459]
[331.82666016 685.74517822]
[322.39776611 697.47888184]
[310.79965210 707.07415771]
[297.50729370 714.13806152]
[283.06500244 718.38122559]
[268.06414795 719.63000488]
[253.11903381 717.83325195]
[238.84164429 713.06451416]
[225.81663513 705.51904297]
[214.57734680 695.50585938]
[205.58406067 683.43505859]
[199.20501709 669.80078125]
[195.70144653 655.16143799]
[195.21681213 640.11651611]
[197.77095032 625.28204346]
[203.25929260 611.26556396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 152]
[32 151]
[33 150]
[34 149]
[46 148]
[47 147]
[48 146]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[61 138]
[67 137]
[68 136]
[70 135]
[71 134]
[72 133]
[75 131]
[76 130]
[78 128]
[79 127]
[80 126]
[81 125]
[83 124]
[84 123]
[86 120]
[87 119]
[88 118]
[89 117]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
