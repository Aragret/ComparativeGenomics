%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[87.30062103 684.12207031]
[73.42040253 678.33868408]
[60.71733475 670.29254150]
[49.55690384 660.21520996]
[40.26021576 648.39660645]
[33.09475708 635.17675781]
[28.26669121 620.93609619]
[25.91493225 606.08422852]
[26.10714340 591.04858398]
[28.83779716 576.26171875]
[34.02832413 562.14904785]
[41.52938461 549.11669922]
[51.12515640 537.53961182]
[62.53955078 527.75085449]
[75.44415283 520.03210449]
[89.46767426 514.60540771]
[104.20662689 511.62695312]
[103.76002502 496.63360596]
[103.31341553 481.64025879]
[102.75520325 466.65063477]
[102.08541870 451.66561890]
[101.41563416 436.68057251]
[100.74584961 421.69552612]
[100.07606506 406.71047974]
[99.40628052 391.72546387]
[98.73649597 376.74041748]
[84.84148407 374.53396606]
[71.64432526 369.64315796]
[59.65844727 362.25604248]
[49.35055923 352.65795898]
[41.12252045 341.22027588]
[35.29562759 328.38616943]
[32.09811020 314.65341187]
[31.65616226 300.55508423]
[33.98897934 286.63882446]
[39.00793076 273.44564819]
[46.51992035 261.48883057]
[56.23481750 251.23396301]
[67.77666473 243.08085632]
[80.69822693 237.34793091]
[94.49832153 234.25973511]
[94.27499390 219.26139832]
[83.44168854 209.10388184]
[83.00154114 193.89662170]
[93.72913361 182.60252380]
[93.50580597 167.60418701]
[93.28247833 152.60585022]
[93.05915070 137.60751343]
[92.83582306 122.60916901]
[92.61249542 107.61083221]
[91.71968079 92.63742828]
[90.15915680 77.71881866]
[88.59863281 62.80021667]
[87.03810883 47.88161469]
[84.59238434 33.08234024]
[81.27012634 18.45488167]
[77.94786072 3.82742167]
[74.62560272 -10.80003834]
[71.30334473 -25.42749786]
[67.98108673 -40.05495834]
[64.65882874 -54.68241882]
[61.33656693 -69.30987549]
[58.01430511 -83.93733978]
[43.76138687 -85.40565491]
[30.67830086 -91.19532776]
[20.03880882 -100.72817993]
[12.87428379 -113.06232452]
[9.87373829 -126.98521423]
[11.31758118 -141.13282776]
[17.05146980 -154.12330627]
[26.50268364 -164.69192505]
[38.73730850 -171.81423950]
[35.63320160 -186.48954773]
[32.52909088 -201.16484070]
[28.42097092 -186.73835754]
[20.10814285 -174.25250244]
[8.38292980 -164.89732361]
[-5.63709402 -159.56449890]
[-20.61562920 -158.76234436]
[-35.12501907 -162.56729126]
[-47.78231812 -170.61668396]
[-57.38111877 -182.14331055]
[-63.00651550 -196.04852295]
[-64.12233734 -211.00695801]
[-60.62223434 -225.59288025]
[-52.83980560 -238.41606140]
[-41.51683044 -248.25425720]
[-27.73253822 -254.16976929]
[-12.80076122 -255.59877014]
[1.85529935 -252.40504456]
[14.83872032 -244.89299011]
[24.91200638 -233.77864075]
[31.11533737 -220.12022400]
[32.00815201 -235.09362793]
[32.90097046 -250.06703186]
[33.79378510 -265.04043579]
[34.68659973 -280.01385498]
[35.57941818 -294.98724365]
[36.47223282 -309.96066284]
[37.36504745 -324.93405151]
[23.67710114 -331.54531860]
[13.56483269 -342.89477539]
[8.57028961 -357.25177002]
[9.45510387 -372.42691040]
[16.08434677 -386.10617065]
[27.44710922 -396.20349121]
[41.81064987 -401.17913818]
[56.98463440 -400.27438354]
[70.65514374 -393.62713623]
[80.73751831 -382.25109863]
[85.69426727 -367.88104248]
[84.76953125 -352.70825195]
[78.10432434 -339.04650879]
[66.71503448 -328.97909546]
[52.33845520 -324.04125977]
[51.44564056 -309.06784058]
[50.55282211 -294.09445190]
[49.66000748 -279.12103271]
[48.76719284 -264.14761353]
[47.87437439 -249.17422485]
[46.98155975 -234.20082092]
[46.08874512 -219.22740173]
[47.20439148 -204.26895142]
[50.30850220 -189.59365845]
[53.41261292 -174.91835022]
[69.02828217 -172.90834045]
[83.03549194 -165.66038513]
[93.73223114 -154.03446960]
[99.81167603 -139.42381287]
[100.52179718 -123.58789062]
[95.75838470 -108.44053650]
[86.07983398 -95.81868744]
[72.64176941 -87.25959778]
[75.96402740 -72.63214111]
[79.28628540 -58.00467682]
[82.60854340 -43.37722015]
[85.93080139 -28.74975777]
[89.25306702 -14.12229824]
[92.57532501 0.50516218]
[95.89758301 15.13262272]
[99.21984100 29.76008224]
[106.34888458 16.56247520]
[119.82347870 9.97193527]
[134.61795044 12.44656849]
[145.21430969 23.06340027]
[147.66038513 37.86261368]
[141.04385376 51.32446671]
[127.83251190 58.42802429]
[112.95387268 56.52383041]
[101.95671844 46.32109070]
[103.51723480 61.23969650]
[105.07775879 76.15830231]
[106.63828278 91.07690430]
[116.90061188 80.13686371]
[131.88792419 79.51984406]
[143.01478577 89.57930756]
[143.90724182 104.55273438]
[134.05404663 115.86266327]
[119.09956360 117.03025818]
[107.61083221 107.38750458]
[107.83415985 122.38584137]
[108.05748749 137.38418579]
[108.28081512 152.38252258]
[108.50414276 167.38085938]
[108.72747040 182.37919617]
[119.78657532 193.34887695]
[119.79940033 208.56251526]
[109.27333069 219.03807068]
[109.49665833 234.03640747]
[125.14868927 237.26316833]
[139.69195557 243.87194824]
[152.40608215 253.53211975]
[162.66197205 265.76196289]
[169.95304871 279.95272827]
[173.92015076 295.39892578]
[174.36935425 311.33337402]
[171.28132629 326.96533203]
[164.81222534 341.51968384]
[155.28576660 354.27551270]
[143.17704773 364.60165405]
[129.08882141 371.98797607]
[113.72153473 376.07061768]
[114.39131927 391.05566406]
[115.06110382 406.04071045]
[115.73088837 421.02575684]
[116.40067291 436.01077271]
[117.07045746 450.99581909]
[117.74024200 465.98086548]
[121.24972534 474.41421509]
[118.30676270 481.19363403]
[118.75337219 496.18701172]
[119.19998169 511.18035889]
[134.09008789 513.27624512]
[148.41174316 517.85864258]
[161.75289917 524.79559326]
[173.72969055 533.88763428]
[183.99752808 544.87304688]
[192.26098633 557.43579102]
[198.28231812 571.21447754]
[201.88825989 585.81256104]
[202.97506714 600.81011963]
[201.51147461 615.77563477]
[197.53958130 630.27844238]
[191.17369080 643.90136719]
[182.59693909 656.25238037]
[172.05610657 666.97613525]
[159.85447693 675.76409912]
[146.34310913 682.36340332]
[131.91075134 686.58416748]
[116.97264862 688.30499268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 192]
[18 191]
[19 190]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[41 169]
[42 168]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 153]
[52 152]
[53 151]
[54 150]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[72 125]
[73 124]
[74 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
