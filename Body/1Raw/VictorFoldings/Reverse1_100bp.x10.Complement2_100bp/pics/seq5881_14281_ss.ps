%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-61.07569504 363.41293335]
[-53.59910965 376.44421387]
[-47.96665192 390.37222290]
[-44.28325653 404.93746948]
[-42.61753464 419.86862183]
[-43.00052643 434.88751221]
[-45.42509079 449.71435547]
[-49.84606171 464.07290649]
[-56.18107986 477.69573975]
[-64.31212616 490.32904053]
[-74.08773041 501.73742676]
[-85.32576752 511.70837402]
[-97.81688690 520.05621338]
[-111.32838440 526.62530518]
[-125.60855103 531.29333496]
[-140.39135742 533.97332764]
[-155.40139771 534.61541748]
[-170.35906982 533.20751953]
[-184.98568726 529.77593994]
[-199.00878906 524.38464355]
[-212.16712952 517.13397217]
[-224.21557617 508.15908813]
[-234.92967224 497.62713623]
[-244.10980225 485.73434448]
[-251.58499146 472.70223999]
[-257.21594238 458.77365112]
[-260.89776611 444.20800781]
[-262.56185913 429.27667236]
[-262.17724609 414.25781250]
[-259.75106812 399.43124390]
[-255.32853699 385.07315063]
[-248.99205017 371.45098877]
[-240.85963440 358.81860352]
[-231.08280945 347.41125488]
[-219.84368896 337.44149780]
[-207.35166931 329.09506226]
[-193.83944702 322.52743530]
[-179.55877686 317.86093140]
[-164.77568054 315.18252563]
[-149.76556396 314.54208374]
[-134.80805969 315.95159912]
[-120.18180847 319.38473511]
[-106.15928650 324.77755737]
[-93.00173187 332.02963257]
[-84.04103851 320.00024414]
[-75.08034515 307.97088623]
[-78.70982361 295.60736084]
[-74.49271393 283.22601318]
[-63.75651932 275.41931152]
[-50.28899384 275.21850586]
[-41.15019226 263.32385254]
[-32.01139069 251.42922974]
[-22.87258720 239.53459167]
[-21.29012489 232.31533813]
[-13.50810814 227.53224182]
[-4.19322491 215.77499390]
[-2.35431409 200.99433899]
[12.28011036 194.98233032]
[21.59499359 183.22508240]
[30.90987587 171.46783447]
[40.22475815 159.71058655]
[40.57450867 154.94752502]
[43.92009354 150.35360718]
[49.99620819 147.74739075]
[59.65702057 136.27268982]
[61.93518829 121.55334473]
[76.74212646 115.97972870]
[86.40293884 104.50502777]
[89.04246521 90.77460480]
[102.12236023 85.83415985]
[111.78317261 74.35945892]
[121.44398499 62.88476181]
[131.10479736 51.41006088]
[140.76560974 39.93535995]
[150.42642212 28.46066093]
[159.74130249 16.70340919]
[168.70199585 4.67403221]
[177.66268921 -7.35534525]
[179.70164490 -23.04461670]
[193.50964355 -28.62925529]
[191.42337036 -44.06574631]
[200.68215942 -56.13759613]
[215.41134644 -58.03141022]
[224.37203979 -70.06079102]
[233.33273315 -82.09016418]
[242.20362854 -94.18592072]
[250.98423767 -106.34737396]
[259.76483154 -118.50882721]
[268.54544067 -130.67028809]
[277.32604980 -142.83174133]
[285.74066162 -155.24923706]
[293.78182983 -167.91175842]
[301.82299805 -180.57427979]
[309.86419678 -193.23681641]
[317.90536499 -205.89933777]
[325.94653320 -218.56185913]
[314.21551514 -227.93365479]
[303.56652832 -238.51885986]
[294.12448120 -250.19340515]
[286.00003052 -262.82037354]
[279.28845215 -276.25177002]
[274.06845093 -290.33007812]
[270.40118408 -304.89022827]
[268.32968140 -319.76156616]
[267.87823486 -334.76965332]
[269.05209351 -349.73861694]
[271.83755493 -364.49288940]
[276.20193481 -378.85949707]
[282.09402466 -392.67001343]
[289.44482422 -405.76248169]
[298.16806030 -417.98345947]
[308.16152954 -429.18963623]
[319.30801392 -439.24960327]
[331.47686768 -448.04541016]
[344.52539062 -455.47396851]
[358.30059814 -461.44815063]
[372.64096069 -465.89791870]
[387.37841797 -468.77111816]
[402.34008789 -470.03405762]
[417.35061646 -469.67190552]
[432.23400879 -467.68893433]
[446.81573486 -464.10839844]
[460.92486572 -458.97225952]
[474.39593506 -452.34072876]
[487.07104492 -444.29156494]
[498.80157471 -434.91912842]
[509.44995117 -424.33334351]
[518.89135742 -412.65829468]
[527.01513672 -400.03088379]
[533.72601318 -386.59915161]
[538.94525146 -372.52056885]
[542.61175537 -357.96020508]
[544.68243408 -343.08877563]
[545.13311768 -328.08062744]
[543.95843506 -313.11175537]
[541.17218018 -298.35763550]
[536.80700684 -283.99124146]
[530.91418457 -270.18106079]
[523.56268311 -257.08895874]
[514.83880615 -244.86845398]
[504.84472656 -233.66284180]
[493.69769287 -223.60346985]
[481.52838135 -214.80830383]
[468.47946167 -207.38044739]
[454.70391846 -201.40699768]
[440.36328125 -196.95799255]
[425.62570190 -194.08558655]
[410.66394043 -192.82345581]
[395.65344238 -193.18641663]
[380.77017212 -195.17018127]
[366.18862915 -198.75152588]
[352.07977295 -203.88842773]
[338.60903931 -210.52069092]
[330.56787109 -197.85816956]
[322.52670288 -185.19563293]
[314.48553467 -172.53311157]
[306.44436646 -159.87059021]
[298.40319824 -147.20806885]
[298.88156128 -144.44593811]
[298.29461670 -141.32791138]
[296.50137329 -138.25877380]
[293.50973511 -135.68685913]
[289.48748779 -134.05113220]
[280.70690918 -121.88968658]
[271.92630005 -109.72822571]
[263.14569092 -97.56677246]
[254.36508179 -85.40531921]
[252.99827576 -78.14215088]
[245.36212158 -73.12947083]
[236.40141296 -61.10009384]
[227.44071960 -49.07071686]
[229.84275818 -34.41582489]
[220.92671204 -22.08867836]
[205.53903198 -19.66855812]
[204.14100647 -4.83970833]
[189.69206238 1.60535073]
[180.73136902 13.63472843]
[171.77067566 25.66410637]
[172.04226685 28.45415497]
[171.22506714 31.51989746]
[169.20849609 34.44715881]
[166.03387451 36.78943634]
[161.90110779 38.12147141]
[152.24031067 49.59617233]
[142.57949829 61.07087326]
[132.91868591 72.54557037]
[123.25787354 84.02027130]
[113.59706116 95.49497223]
[110.95753479 109.22539520]
[97.87763977 114.16584015]
[88.21682739 125.64054108]
[85.24765015 141.18063354]
[71.13172150 145.93350220]
[61.47090912 157.40820312]
[51.98200989 169.02546692]
[42.66712952 180.78271484]
[33.35224533 192.53996277]
[24.03736305 204.29722595]
[21.53218842 219.91882324]
[7.56402636 225.08987427]
[-1.75085640 236.84712219]
[-10.97795486 248.67340088]
[-20.11675644 260.56802368]
[-29.25555992 272.46267700]
[-38.39436340 284.35729980]
[-35.80453110 301.65792847]
[-46.32129669 315.21200562]
[-63.05096436 316.93157959]
[-72.01165771 328.96096802]
[-80.97235870 340.99032593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[45 209]
[46 208]
[50 205]
[51 204]
[52 203]
[53 202]
[55 201]
[56 200]
[58 198]
[59 197]
[60 196]
[61 195]
[64 194]
[65 193]
[67 191]
[68 190]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[75 183]
[76 178]
[77 177]
[78 176]
[80 174]
[83 171]
[84 170]
[85 169]
[86 167]
[87 166]
[88 165]
[89 164]
[90 163]
[91 158]
[92 157]
[93 156]
[94 155]
[95 154]
[96 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
