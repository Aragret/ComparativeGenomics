%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[14.06304073 381.21716309]
[11.35526371 395.98358154]
[7.19066429 410.40698242]
[1.61063373 424.34405518]
[-5.32937002 437.65625000]
[-13.56037235 450.21130371]
[-23.00056839 461.88439941]
[-33.55613327 472.55957031]
[-45.12215805 482.13064575]
[-57.58369064 490.50253296]
[-70.81688690 497.59207153]
[-84.69021606 503.32873535]
[-99.06579590 507.65551758]
[-113.80075836 510.52947998]
[-128.74865723 511.92196655]
[-143.76091003 511.81921387]
[-158.68833923 510.22219849]
[-173.38258362 507.14682007]
[-187.69758606 502.62362671]
[-201.49108887 496.69757080]
[-214.62597656 489.42755127]
[-226.97174072 480.88586426]
[-238.40565491 471.15731812]
[-248.81408691 460.33868408]
[-258.09359741 448.53744507]
[-266.15194702 435.87088013]
[-272.90908813 422.46493530]
[-278.29779053 408.45275879]
[-282.26455688 393.97369385]
[-284.76992798 379.17163086]
[-285.78900146 364.19363403]
[-285.31170654 349.18859863]
[-283.34271240 334.30566406]
[-279.90164185 319.69274902]
[-275.02267456 305.49505615]
[-268.75427246 291.85372925]
[-261.15881348 278.90432739]
[-252.31169128 266.77554321]
[-242.30090332 255.58793640]
[-231.22592163 245.45268250]
[-219.19680786 236.47052002]
[-206.33312988 228.73072815]
[-192.76272583 222.31022644]
[-178.62048340 217.27282715]
[-164.04693604 213.66857910]
[-149.18695068 211.53332520]
[-134.18820190 210.88827515]
[-119.19975281 211.73985291]
[-104.37058258 214.07957458]
[-89.84806824 217.88420105]
[-75.77655029 223.11592102]
[-62.29586792 229.72273254]
[-49.54001617 237.63896179]
[-40.40121460 225.74433899]
[-31.26241112 213.84970093]
[-22.12360764 201.95506287]
[-12.98480606 190.06044006]
[-11.40234280 182.84118652]
[-3.62032580 178.05809021]
[5.69455719 166.30082703]
[15.00943947 154.54357910]
[1.32586813 160.68849182]
[-13.55354500 162.58666992]
[-28.34158134 160.07389832]
[-41.75892639 153.36756897]
[-52.64484787 143.04785156]
[-60.05760574 130.00749207]
[-63.35591888 115.37460327]
[-62.25445175 100.41510010]
[-56.84849167 86.42311859]
[-47.60570908 74.60910034]
[-35.32569504 65.99508667]
[-21.07079887 61.32626343]
[-6.07420683 61.00653839]
[8.36672497 65.06356812]
[21.00271034 73.14638519]
[30.74061203 84.55573273]
[36.73800278 98.30459595]
[38.47604752 113.20356750]
[35.80438995 127.96372223]
[28.95620155 141.30531311]
[41.18268585 132.61547852]
[53.40917206 123.92565918]
[65.63565826 115.23583984]
[77.86214447 106.54601288]
[90.08863068 97.85618591]
[94.31219482 90.99076843]
[102.56246185 89.12960052]
[114.91697693 80.62277222]
[127.07843018 71.84217072]
[139.04077148 62.79217148]
[151.00309753 53.74217224]
[162.96543884 44.69216919]
[174.92778015 35.64216995]
[177.84695435 29.71005630]
[182.60890198 26.60830116]
[187.38369751 26.50712585]
[199.61018372 17.81730270]
[211.83666992 9.12747765]
[204.15437317 -3.76548839]
[197.53443909 -17.23481941]
[192.01982117 -31.19315720]
[187.64627075 -45.54998016]
[184.44215393 -60.21217346]
[182.42823792 -75.08464813]
[181.61761475 -90.07095337]
[182.01551819 -105.07388306]
[183.61936951 -119.99614716]
[186.41877747 -134.74096680]
[190.39558411 -149.21270752]
[195.52398682 -163.31752014]
[201.77073669 -176.96392822]
[209.09532166 -190.06343079]
[217.45024109 -202.53105164]
[226.78128052 -214.28596497]
[237.02796936 -225.25190735]
[248.12380981 -235.35777283]
[259.99685669 -244.53800964]
[272.57012939 -252.73309326]
[285.76205444 -259.88986206]
[299.48709106 -265.96191406]
[313.65621948 -270.90988159]
[328.17755127 -274.70162964]
[342.95687866 -277.31259155]
[357.89840698 -278.72583008]
[372.90521240 -278.93218994]
[387.87994385 -277.93032837]
[402.72549438 -275.72674561]
[417.34558105 -272.33575439]
[431.64541626 -267.77929688]
[445.53222656 -262.08694458]
[458.91595459 -255.29560852]
[471.70980835 -247.44935608]
[483.83081055 -238.59907532]
[495.20034790 -228.80213928]
[505.74468994 -218.12210083]
[515.39544678 -206.62821960]
[524.09002686 -194.39505005]
[531.77203369 -181.50190735]
[538.39166260 -168.03242493]
[543.90600586 -154.07397461]
[548.27923584 -139.71705627]
[551.48303223 -125.05478668]
[553.49658203 -110.18226624]
[554.30688477 -95.19594574]
[553.90869141 -80.19302368]
[552.30450439 -65.27079773]
[549.50476074 -50.52603912]
[545.52764893 -36.05438614]
[540.39892578 -21.94968414]
[534.15185547 -8.30341530]
[526.82696533 4.79591990]
[518.47180176 17.26336670]
[509.14047241 29.01806641]
[498.89355469 39.98378754]
[487.79748535 50.08940506]
[475.92425537 59.26938629]
[463.35079956 67.46419525]
[450.15872192 74.62067413]
[436.43353271 80.69242096]
[422.26431274 85.64006042]
[407.74288940 89.43148804]
[392.96350098 92.04212952]
[378.02194214 93.45504761]
[363.01513672 93.66108704]
[348.04043579 92.65889740]
[333.19491577 90.45498657]
[318.57489014 87.06364441]
[304.27517700 82.50687408]
[290.38848877 76.81421661]
[277.00491333 70.02259827]
[264.21124268 62.17607117]
[252.09042358 53.32551193]
[240.72109985 43.52832794]
[230.17700195 32.84805679]
[220.52650452 21.35396385]
[208.30001831 30.04378700]
[196.07353210 38.73361206]
[183.97778320 47.60450745]
[172.01544189 56.65450668]
[160.05310059 65.70450592]
[148.09075928 74.75450897]
[136.12843323 83.80450439]
[135.28482056 87.22805786]
[132.74108887 90.41308594]
[128.62736511 92.56497192]
[123.42379761 92.97727966]
[111.06929016 101.48410797]
[98.77845001 110.08267212]
[86.55197144 118.77249908]
[74.32548523 127.46232605]
[62.09899521 136.15214539]
[49.87251282 144.84196472]
[37.64602661 153.53179932]
[26.76669121 163.85845947]
[17.45180893 175.61572266]
[8.13692570 187.37297058]
[-1.09017289 199.19923401]
[-10.22897530 211.09387207]
[-19.36777687 222.98851013]
[-28.50658035 234.88313293]
[-37.64538193 246.77777100]
[-26.71018028 257.06369019]
[-16.85348129 268.38729858]
[-8.17324448 280.63604736]
[-0.75574118 293.68823242]
[5.32530737 307.41409302]
[10.00946331 321.67724609]
[13.25017262 336.33590698]
[15.01522732 351.24438477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 202]
[54 201]
[55 200]
[56 199]
[57 198]
[59 197]
[60 196]
[61 195]
[81 194]
[82 193]
[83 192]
[84 191]
[85 190]
[86 189]
[88 188]
[89 187]
[90 183]
[91 182]
[92 181]
[93 180]
[94 179]
[97 178]
[98 177]
[99 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
