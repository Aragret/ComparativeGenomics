%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[42.73029327 549.69073486]
[40.72605133 564.91833496]
[31.36382103 577.09387207]
[17.16199303 582.94226074]
[1.94079077 580.89031982]
[-10.20536137 571.48992920]
[-16.00920868 557.26989746]
[-13.90954590 542.05517578]
[-4.47117138 529.93853760]
[9.76703930 524.17932129]
[11.77105331 509.31378174]
[13.77506733 494.44824219]
[11.55337906 487.39941406]
[15.92117596 479.37695312]
[8.62753582 463.41543579]
[20.21781921 449.10644531]
[22.22183228 434.24093628]
[24.22584724 419.37539673]
[15.01917744 407.72323608]
[16.83976746 392.61892700]
[29.12404823 383.04113770]
[31.12806129 368.17559814]
[33.13207626 353.31008911]
[35.13608932 338.44454956]
[37.14010239 323.57901001]
[39.14411545 308.71350098]
[25.81482315 315.59317017]
[12.06366920 309.60101318]
[8.02749348 295.15426636]
[16.68161392 282.90246582]
[31.64653587 281.87722778]
[41.89017487 292.83273315]
[44.99428558 278.15744019]
[48.09839630 263.48214722]
[51.09317017 248.78413391]
[53.97844315 234.06423950]
[40.95795059 241.51184082]
[26.44920731 237.70443726]
[18.76347923 224.82307434]
[22.30350113 210.24678040]
[35.04138565 202.32553101]
[49.68029785 205.59696960]
[57.83422470 218.18612671]
[62.02123642 203.78234863]
[66.20824432 189.37857056]
[70.39525604 174.97477722]
[66.51811218 160.59364319]
[77.79997253 149.50175476]
[73.92282867 135.12062073]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[107.46381378 42.66060257]
[109.02433777 27.74199867]
[102.76472473 13.21176147]
[111.78411865 1.35850084]
[113.34464264 -13.56010437]
[114.90516663 -28.47870827]
[116.46569061 -43.39731216]
[118.02621460 -58.31591797]
[108.39661407 -67.73320770]
[105.98426056 -80.78659821]
[111.44950867 -92.66991425]
[122.59352112 -99.13832855]
[124.37599182 -114.03205109]
[126.04753113 -128.93862915]
[127.60805511 -143.85722351]
[125.26914215 -150.04116821]
[126.25617218 -155.63783264]
[129.44360352 -159.19444275]
[131.44761658 -174.05996704]
[133.45162964 -188.92549133]
[135.45564270 -203.79101562]
[137.45965576 -218.65655518]
[139.24211121 -233.55026245]
[140.80264282 -248.46887207]
[134.54302979 -262.99911499]
[143.56242371 -274.85235596]
[145.12294006 -289.77096558]
[145.23460388 -304.77056885]
[143.89637756 -319.71075439]
[142.55813599 -334.65093994]
[141.21990967 -349.59112549]
[139.88166809 -364.53131104]
[138.54344177 -379.47149658]
[137.20520020 -394.41168213]
[135.86697388 -409.35186768]
[120.96499634 -411.63101196]
[107.04174805 -417.41085815]
[94.90671539 -426.35537720]
[85.26540375 -437.94451904]
[78.67835236 -451.50454712]
[75.52851868 -466.24707031]
[75.99903870 -481.31500244]
[80.06254578 -495.83227539]
[87.48280334 -508.95489502]
[97.82839966 -519.91992188]
[110.49785614 -528.08990479]
[124.75459290 -532.98980713]
[139.76974487 -534.33471680]
[154.67033386 -532.04656982]
[168.59007263 -526.25823975]
[180.71968079 -517.30639648]
[190.35395813 -505.71136475]
[196.93278503 -492.14736938]
[200.07368469 -477.40292358]
[199.59402466 -462.33529663]
[195.52172852 -447.82049561]
[188.09350586 -434.70236206]
[177.74127197 -423.74362183]
[165.06686401 -415.58132935]
[150.80715942 -410.69009399]
[152.14538574 -395.74990845]
[153.48362732 -380.80972290]
[154.82185364 -365.86953735]
[156.16009521 -350.92935181]
[157.49832153 -335.98916626]
[158.83656311 -321.04898071]
[160.17478943 -306.10879517]
[166.85560608 -319.53884888]
[178.36927795 -329.15319824]
[192.77555847 -333.33160400]
[207.64672852 -331.36996460]
[220.47674561 -323.59881592]
[229.10353088 -311.32775879]
[232.07330322 -296.62469482]
[228.88562012 -281.96731567]
[220.07765198 -269.82568359]
[207.13369751 -262.24581909]
[192.23503113 -260.50512695]
[177.89236450 -264.89691162]
[166.52265930 -274.68109131]
[160.04154968 -288.21044922]
[158.48101807 -273.29183960]
[164.85226440 -259.82867432]
[155.72125244 -246.90835571]
[154.16072083 -231.98974609]
[156.41885376 -227.78143311]
[156.05731201 -222.10989380]
[152.32518005 -216.65254211]
[150.32116699 -201.78700256]
[148.31715393 -186.92147827]
[146.31314087 -172.05595398]
[144.30912781 -157.19042969]
[142.52665710 -142.29670715]
[140.96614075 -127.37809753]
[143.39671326 -120.39855194]
[139.26971436 -112.24958038]
[137.48724365 -97.35586548]
[148.43725586 -84.59122467]
[146.73371887 -67.52040100]
[132.94480896 -56.75539398]
[131.38429260 -41.83679199]
[129.82377625 -26.91818619]
[128.26324463 -11.99958134]
[126.70272064 2.91902375]
[133.07395935 16.38218117]
[123.94294739 29.30252075]
[122.38242340 44.22112656]
[131.77886963 32.52896118]
[145.28033447 25.99362183]
[160.27987671 25.87698364]
[173.88133240 32.20156479]
[183.45848083 43.74619293]
[187.16209412 58.28177261]
[184.27709961 73.00171661]
[175.36053467 85.06383514]
[162.13403320 92.13912201]
[147.15142822 92.86144257]
[133.30563354 87.09133911]
[123.27006531 75.94292450]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[103.18612671 143.62710571]
[92.20375061 153.68876648]
[95.78141785 169.10014343]
[84.79904175 179.16178894]
[80.61203003 193.56558228]
[76.42501831 207.96936035]
[72.23800659 222.37313843]
[68.69833374 236.94950867]
[65.81306458 251.66940308]
[67.23333740 260.69274902]
[62.77369690 266.58624268]
[59.66958618 281.26156616]
[56.56547546 295.93685913]
[54.00964355 310.71749878]
[52.00563049 325.58303833]
[50.00161743 340.44857788]
[47.99760437 355.31408691]
[45.99359131 370.17962646]
[43.98957825 385.04513550]
[53.29906845 397.53399658]
[51.05494690 412.58120728]
[39.09137344 421.37942505]
[37.08736038 436.24493408]
[35.08334732 451.11047363]
[42.26852036 461.82196045]
[40.29333496 474.16223145]
[30.75521851 481.60205078]
[28.64059448 496.45227051]
[26.63658142 511.31777954]
[24.63256836 526.18328857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[14 207]
[16 204]
[17 203]
[18 202]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[32 193]
[33 192]
[34 191]
[35 189]
[36 188]
[43 187]
[44 186]
[45 185]
[46 184]
[48 182]
[50 180]
[51 179]
[53 177]
[54 176]
[55 175]
[56 162]
[57 161]
[59 159]
[60 158]
[61 157]
[62 156]
[63 155]
[67 152]
[68 151]
[69 149]
[70 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 140]
[79 139]
[81 137]
[82 136]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
