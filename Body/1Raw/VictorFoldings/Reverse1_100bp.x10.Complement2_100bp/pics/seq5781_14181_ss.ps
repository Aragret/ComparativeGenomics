%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[25.44709206 549.38287354]
[26.38025665 564.38238525]
[25.06732941 579.35351562]
[21.53763962 593.96166992]
[15.87004185 607.88061523]
[8.19115448 620.79925537]
[-1.32747507 632.42913818]
[-12.47319603 642.51031494]
[-24.99701118 650.81762695]
[-38.61912918 657.16552734]
[-53.03523254 661.41210938]
[-67.92325592 663.46258545]
[-82.95059967 663.27111816]
[-97.78153992 660.84197998]
[-112.08475494 656.22943115]
[-125.54070282 649.53649902]
[-137.84877014 640.91271973]
[-148.73400879 630.55084229]
[-157.95320129 618.68218994]
[-165.30043030 605.57202148]
[-170.61151123 591.51324463]
[-173.76783752 576.81988525]
[-174.69886780 561.82019043]
[-173.38380432 546.84924316]
[-169.85203552 532.24157715]
[-164.18244934 518.32348633]
[-156.50172424 505.40588379]
[-146.98144531 493.77740479]
[-135.83428955 483.69778442]
[-123.30928802 475.39224243]
[-109.68626404 469.04632568]
[-95.26955414 464.80175781]
[-80.38124084 462.75341797]
[-65.35392761 462.94705200]
[-50.52332687 465.37829590]
[-36.22077179 469.99288940]
[-29.54057503 456.56253052]
[-22.86038017 443.13214111]
[-16.18018723 429.70178223]
[-9.49999142 416.27139282]
[-3.63103104 402.46722412]
[1.40588522 388.33819580]
[6.44280148 374.20916748]
[11.26879883 360.00671387]
[15.88280869 345.73397827]
[20.49681854 331.46124268]
[17.04957199 316.97103882]
[28.65667534 306.21997070]
[33.27068329 291.94723511]
[26.28139496 278.84436035]
[30.75733566 264.30404663]
[44.54822922 257.06185913]
[49.16223907 242.78913879]
[53.77624512 228.51640320]
[50.32900238 214.02621460]
[61.93610382 203.27513123]
[66.33710480 188.93528748]
[70.52411652 174.53150940]
[74.71112823 160.12771606]
[78.89813995 145.72393799]
[83.08514404 131.32015991]
[87.27215576 116.91637421]
[79.88967133 106.61334229]
[79.71617889 93.93960571]
[86.81388092 83.43836212]
[98.63844299 78.87400055]
[103.03944397 64.53415680]
[107.44043732 50.19430542]
[111.84143829 35.85446167]
[116.24243164 21.51461220]
[119.89052582 6.96499252]
[122.77579498 -7.75489902]
[117.83746338 -22.78565025]
[127.87838745 -33.78697205]
[130.76365662 -48.50686264]
[131.99063110 -63.45659637]
[131.54403687 -78.44994354]
[131.09742737 -93.44329834]
[130.65081787 -108.43664551]
[130.20420837 -123.43000031]
[129.75761414 -138.42333984]
[129.08782959 -153.40838623]
[128.19500732 -168.38179016]
[127.30219269 -183.35519409]
[126.40937805 -198.32859802]
[114.87148285 -208.79353333]
[114.17934418 -223.99140930]
[124.22715759 -234.92654419]
[123.33434296 -249.89994812]
[122.44152832 -264.87335205]
[113.89654541 -278.18853760]
[120.86258698 -291.35375977]
[106.07948303 -294.37408447]
[92.58225250 -301.11849976]
[81.29116058 -311.12716675]
[72.97604370 -323.71771240]
[68.20384979 -338.03164673]
[67.29995728 -353.09301758]
[70.32598114 -367.87496948]
[77.07561493 -381.36956787]
[87.08864594 -392.65679932]
[99.68238068 -400.96707153]
[113.99815369 -405.73373413]
[129.05989075 -406.63180542]
[143.84065247 -403.60006714]
[157.33267212 -396.84524536]
[168.61602783 -386.82785034]
[176.92141724 -374.23089600]
[181.68255615 -359.91329956]
[182.57482910 -344.85119629]
[179.53738403 -330.07162476]
[172.77732849 -316.58221436]
[162.75558472 -305.30270386]
[150.15544128 -297.00219727]
[135.83598328 -292.24658203]
[144.31710815 -280.00241089]
[137.41493225 -265.76617432]
[138.30775452 -250.79275513]
[139.20056152 -235.81935120]
[150.47662354 -226.15570068]
[151.59536743 -210.98326111]
[141.38278198 -199.22142029]
[142.27558899 -184.24801636]
[143.16841125 -169.27461243]
[144.06123352 -154.30120850]
[146.97529602 -150.51737976]
[147.54333496 -144.86279297]
[144.75096130 -138.86994934]
[145.19757080 -123.87660217]
[145.64416504 -108.88325500]
[146.09077454 -93.88990021]
[146.53738403 -78.89655304]
[146.98399353 -63.90320206]
[154.01557922 -77.15298462]
[165.31089783 -87.02293396]
[179.38383484 -92.21448517]
[194.38287354 -92.04460144]
[208.33462524 -86.53563690]
[219.40348816 -76.41239166]
[226.13317871 -63.00674438]
[227.63827515 -48.08244705]
[223.72076416 -33.60304260]
[214.89607239 -21.47354889]
[202.32521057 -13.28980827]
[187.66212463 -10.12853146]
[172.83596802 -12.40564060]
[159.79739380 -19.82154083]
[150.26184082 -31.40054512]
[145.48355103 -45.62158966]
[142.59828186 -30.90169907]
[147.74298096 -16.92381477]
[137.49568176 -4.86962652]
[134.61041260 9.85026455]
[147.00996399 1.40922308]
[161.94645691 2.78810525]
[172.59111023 13.35650539]
[174.07736206 28.28269196]
[165.72569275 40.74261475]
[151.35438538 45.03976440]
[137.53381348 39.20954132]
[130.58227539 25.91561127]
[126.18128204 40.25545883]
[121.78028870 54.59530640]
[117.37928772 68.93515015]
[112.97828674 83.27500153]
[121.04172516 97.67461395]
[116.31716919 113.48746490]
[101.67594147 121.10338593]
[97.48892975 135.50717163]
[93.30191803 149.91094971]
[89.11490631 164.31472778]
[84.92789459 178.71852112]
[80.74088287 193.12229919]
[81.94355774 199.62345886]
[79.97760010 204.95562744]
[76.20883942 207.88914490]
[79.32605743 223.40022278]
[68.04898071 233.13041687]
[63.43497086 247.40315247]
[58.82096100 261.67587280]
[65.76274109 275.62039185]
[60.88016129 290.02923584]
[47.54341888 296.56124878]
[42.92940903 310.83398438]
[46.04663086 326.34506226]
[34.76955032 336.07525635]
[30.15554237 350.34799194]
[25.54153252 364.62072754]
[26.55010605 371.15481567]
[24.42626190 376.42608643]
[20.57183075 379.24609375]
[15.53491497 393.37512207]
[10.49799824 407.50415039]
[23.59105492 400.18484497]
[38.49892807 401.84475708]
[49.66135025 411.86477661]
[52.91501236 426.50762939]
[47.04637909 440.31195068]
[34.24430847 448.12905884]
[19.28365326 447.04333496]
[7.74436760 437.45974731]
[3.93038416 422.95159912]
[-2.74981046 436.38195801]
[-9.43000507 449.81234741]
[-16.11019897 463.24273682]
[-22.79039383 476.67309570]
[-10.48109531 485.29510498]
[0.40560773 495.65545654]
[9.62650108 507.52276611]
[16.97558594 520.63189697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 206]
[37 205]
[38 204]
[39 203]
[40 202]
[41 193]
[42 192]
[43 191]
[44 188]
[45 187]
[46 186]
[48 184]
[49 183]
[52 180]
[53 179]
[54 178]
[56 176]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[66 165]
[67 164]
[68 163]
[69 162]
[70 161]
[71 153]
[72 152]
[74 150]
[75 149]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 125]
[83 124]
[84 123]
[85 122]
[88 119]
[89 118]
[90 117]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
