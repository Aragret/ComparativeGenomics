%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[113.42712402 602.06048584]
[98.85010529 605.65234375]
[83.98448181 607.75097656]
[68.98281860 608.33496094]
[53.99904251 607.39819336]
[39.18692017 604.95037842]
[24.69844055 601.01654053]
[10.68228531 595.63708496]
[-2.71771836 588.86724854]
[-15.36406517 580.77642822]
[-27.12698364 571.44775391]
[-37.88576508 560.97686768]
[-47.53000641 549.47119141]
[-55.96074295 537.04888916]
[-63.09146500 523.83740234]
[-68.84899139 509.97225952]
[-73.17424774 495.59579468]
[-76.02285004 480.85546875]
[-77.36556244 465.90261841]
[-77.18860626 450.89062500]
[-75.49379730 435.97357178]
[-72.29853058 421.30450439]
[-67.63559723 407.03399658]
[-61.55284119 393.30841064]
[-54.11268234 380.26867676]
[-45.39147186 368.04855347]
[-35.47869873 356.77343750]
[-24.47608948 346.55905151]
[-12.49654388 337.51022339]
[0.33700430 329.71978760]
[13.89286327 323.26766968]
[28.03192711 318.22009277]
[42.60910797 314.62887573]
[57.47481537 312.53088379]
[72.47650909 311.94757080]
[87.46024323 312.88497925]
[89.90596771 298.08572388]
[92.35169983 283.28643799]
[90.34086609 276.17459106]
[94.94558716 268.28573608]
[97.61138153 253.52450562]
[100.27717590 238.76329041]
[101.05849457 223.78364563]
[99.94284821 208.82519531]
[98.82720184 193.86674500]
[97.71154785 178.90829468]
[96.59590149 163.94982910]
[85.75183105 156.99026489]
[80.82264709 144.87477112]
[83.81546021 131.94210815]
[93.85595703 122.96419525]
[92.96314240 107.99079132]
[90.84851837 93.14059448]
[87.52626038 78.51313782]
[84.20400238 63.88567352]
[80.88174438 49.25821304]
[77.55947876 34.63075256]
[73.91139221 20.08113289]
[69.93930054 5.61660910]
[65.96720123 -8.84791470]
[61.99510574 -23.31243896]
[57.59410858 -37.65228653]
[52.76811218 -51.85474014]
[47.94211197 -66.05719757]
[42.90519714 -80.18622589]
[37.65847778 -94.23870087]
[32.41175842 -108.29116821]
[27.16504097 -122.34364319]
[21.91832352 -136.39611816]
[16.67160606 -150.44857788]
[11.42488766 -164.50105286]
[-3.23398209 -161.20996094]
[-18.20446205 -159.94563293]
[-33.20766068 -160.73164368]
[-47.96407700 -163.55332947]
[-62.19880676 -168.35813904]
[-75.64666748 -175.05654907]
[-88.05713654 -183.52377319]
[-99.19901276 -193.60209656]
[-108.86473083 -205.10372925]
[-116.87422180 -217.81443787]
[-123.07826996 -231.49739075]
[-127.36130524 -245.89772034]
[-129.64352417 -260.74713135]
[-129.88243103 -275.76901245]
[-128.07356262 -290.68350220]
[-124.25061798 -305.21273804]
[-118.48481750 -319.08605957]
[-110.88357544 -332.04504395]
[-101.58850098 -343.84820557]
[-90.77274323 -354.27575684]
[-78.63780212 -363.13333130]
[-65.40975189 -370.25601196]
[-51.33500671 -375.51104736]
[-36.67578125 -378.80053711]
[-21.70516396 -380.06323242]
[-6.70205164 -379.27560425]
[8.05405998 -376.45233154]
[22.28827095 -371.64599609]
[35.73540878 -364.94610596]
[48.14496231 -356.47753906]
[59.28574753 -346.39801025]
[68.95021820 -334.89532471]
[76.95832825 -322.18377686]
[83.16089630 -308.50012207]
[87.44237518 -294.09933472]
[89.72299194 -279.24969482]
[89.96027374 -264.22778320]
[88.14978790 -249.31349182]
[84.32527161 -234.78466797]
[78.55796814 -220.91195679]
[70.95532227 -207.95381165]
[61.65896606 -196.15164185]
[50.84208298 -185.72528076]
[38.70618439 -176.86900330]
[25.47735786 -169.74777222]
[30.72407722 -155.69529724]
[35.97079468 -141.64283752]
[41.21751404 -127.59035492]
[46.46422958 -113.53788757]
[51.71094894 -99.48541260]
[56.95766830 -85.43294525]
[60.85365677 -82.67063904]
[63.05574799 -77.43157196]
[62.14456940 -70.88319397]
[66.97056580 -56.68074036]
[71.79656219 -42.47828293]
[74.24857330 -41.11968231]
[76.31016541 -38.70795059]
[77.57751465 -35.38692474]
[77.70629883 -31.44383621]
[76.45963287 -27.28453445]
[80.43172455 -12.82001114]
[84.40382385 1.64451277]
[88.37591553 16.10903740]
[91.24301147 18.16138268]
[93.25847626 21.70439720]
[93.73251343 26.32268524]
[92.18694305 31.30849457]
[95.50920105 45.93595505]
[98.83145905 60.56341553]
[102.15372467 75.19087219]
[105.47598267 89.81833649]
[110.98007965 75.86466217]
[122.27780914 65.99748230]
[136.84523010 62.42114639]
[151.42794800 65.93461609]
[162.76814270 75.75296783]
[168.33238220 89.68276978]
[166.87759399 104.61205292]
[158.72880554 117.20558929]
[145.70645142 124.64994812]
[130.71977234 125.28203583]
[117.11683655 118.96064758]
[107.93654633 107.09797668]
[108.82936859 122.07138062]
[122.12383270 133.44136047]
[123.06341553 150.57121277]
[111.55435181 162.83418274]
[112.67000580 177.79263306]
[113.78565216 192.75109863]
[114.90129852 207.70954895]
[116.01695251 222.66799927]
[122.13507080 208.97242737]
[132.32038879 197.96064758]
[145.49801636 190.79475403]
[160.27729797 188.23098755]
[175.09854126 190.53990173]
[188.39759827 197.47782898]
[198.77102661 208.31259155]
[205.12405396 221.90078735]
[206.78627014 236.80839539]
[203.58222961 251.46220398]
[195.85006714 264.31576538]
[184.40579224 274.01257324]
[170.45712280 279.52935791]
[155.47612000 280.28387451]
[141.04373169 276.19650269]
[128.68307495 267.69860840]
[119.69858551 255.68699646]
[115.03839111 241.42907715]
[112.37259674 256.19030762]
[109.70680237 270.95150757]
[107.15097046 285.73217773]
[104.70523834 300.53143311]
[102.25951385 315.33071899]
[116.74816132 319.26391602]
[130.76455688 324.64273071]
[144.16485596 331.41198730]
[156.81156921 339.50222778]
[168.57489014 348.83041382]
[179.33413696 359.30084229]
[188.97888184 370.80606079]
[197.41017151 383.22799683]
[204.54147339 396.43917847]
[210.29960632 410.30404663]
[214.62548828 424.68032837]
[217.47474670 439.42053223]
[218.81811523 454.37332153]
[218.64181519 469.38531494]
[216.94766235 484.30245972]
[213.75305176 498.97164917]
[209.09074402 513.24237061]
[203.00859070 526.96820068]
[195.56900024 540.00830078]
[186.84832764 552.22882080]
[176.93605042 563.50433350]
[165.93389893 573.71917725]
[153.95474243 582.76855469]
[141.12153625 590.55957031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 186]
[37 185]
[38 184]
[40 183]
[41 182]
[42 181]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[51 156]
[52 155]
[53 143]
[54 142]
[55 141]
[56 140]
[57 139]
[58 135]
[59 134]
[60 133]
[61 132]
[62 127]
[63 126]
[64 125]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
