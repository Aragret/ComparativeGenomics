%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[97.12533569 501.23117065]
[92.04273224 515.42376709]
[83.71071625 527.98724365]
[72.61370087 538.19116211]
[59.39685059 545.44226074]
[44.82857895 549.31896973]
[29.75586128 549.59588623]
[15.05501175 546.25695801]
[1.58071482 539.49627686]
[-9.88365078 529.70690918]
[-18.67156219 517.45800781]
[-24.27210236 503.46166992]
[-26.35966301 488.53164673]
[-24.81287384 473.53594971]
[-19.72166634 459.34643555]
[-11.38203526 446.78799438]
[-0.27883592 436.59082031]
[12.94240665 429.34774780]
[27.51302719 425.47985840]
[42.58590698 425.21206665]
[45.90816498 410.58459473]
[49.23042679 395.95715332]
[52.55268478 381.32968140]
[55.87494278 366.70220947]
[58.65055466 351.96127319]
[52.88683701 338.22705078]
[62.58566666 325.72729492]
[64.81078339 310.89328003]
[57.51714325 294.93176270]
[69.10742950 280.62277222]
[71.11144257 265.75726318]
[73.11545563 250.89172363]
[75.11946869 236.02619934]
[77.12348175 221.16065979]
[79.12749481 206.29513550]
[81.13150787 191.42961121]
[68.90201569 180.47894287]
[65.57617188 164.23393250]
[72.65876770 149.05703735]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[101.13316345 27.41686630]
[102.91562653 12.52314949]
[102.24584198 -2.46188951]
[99.14173126 -17.13719177]
[96.03762054 -31.81249428]
[85.61199188 -43.71278000]
[90.54801178 -57.76571274]
[87.44390106 -72.44101715]
[84.33979034 -87.11631775]
[79.83216095 -101.42300415]
[73.96320343 -115.22718048]
[68.09424591 -129.03135681]
[62.22528076 -142.83554077]
[56.35631943 -156.63970947]
[50.48736191 -170.44389343]
[49.65325165 -155.46710205]
[45.66190720 -141.00787354]
[38.69491196 -127.72401428]
[29.06921196 -116.21984100]
[17.22271538 -107.01873016]
[3.69435740 -100.53925323]
[-10.90041065 -97.07620239]
[-25.89762497 -96.78710938]
[-40.61501312 -99.68512726]
[-54.38302994 -105.63842010]
[-66.57532501 -114.37615204]
[-76.63722229 -125.50081635]
[-84.11098480 -138.50631714]
[-88.65660858 -152.80097961]
[-90.06727600 -167.73449707]
[-88.27883911 -182.62748718]
[-83.37263489 -196.80244446]
[-75.57187653 -209.61447144]
[-65.23145294 -220.48072815]
[-52.82176590 -228.90686035]
[-38.90738678 -234.50955200]
[-24.12132263 -237.03388977]
[-9.13624096 -236.36505127]
[5.36613607 -232.53346252]
[18.72604752 -225.71343994]
[30.33570671 -216.21524048]
[39.66695404 -204.47097778]
[46.29676437 -191.01084900]
[46.29676437 -206.01084900]
[46.29676437 -221.01084900]
[46.29676437 -236.01084900]
[46.29676437 -251.01084900]
[31.71964264 -254.90571594]
[18.64777946 -262.44155884]
[7.97243071 -273.10455322]
[0.42146161 -286.16766357]
[-3.49029088 -300.74026489]
[-3.49611664 -315.82876587]
[0.40438125 -330.40435791]
[7.94526052 -343.47332764]
[18.61237144 -354.14456177]
[31.67841339 -361.69049072]
[46.25252151 -365.59658813]
[61.34100723 -365.59658813]
[75.91511536 -361.69049072]
[88.98115540 -354.14456177]
[99.64826202 -343.47332764]
[107.18914795 -330.40435791]
[111.08964539 -315.82876587]
[111.08381653 -300.74026489]
[107.17206573 -286.16766357]
[99.62109375 -273.10455322]
[88.94574738 -262.44155884]
[75.87387848 -254.90571594]
[61.29676437 -251.01084900]
[61.29676437 -236.01084900]
[61.29676437 -221.01084900]
[61.29676437 -206.01084900]
[61.29676437 -191.01084900]
[64.29153442 -176.31285095]
[70.16049957 -162.50866699]
[76.02945709 -148.70449829]
[81.89842224 -134.90031433]
[87.76737976 -121.09613800]
[93.63633728 -107.29196167]
[95.86213684 -122.12590790]
[103.86019897 -134.81570435]
[116.28271484 -143.22290039]
[131.03627014 -145.93075562]
[145.63464355 -142.48291016]
[157.61775208 -133.46041870]
[164.96620178 -120.38372040]
[166.44169617 -105.45646667]
[161.79554749 -91.19416046]
[151.81072998 -80.00025940]
[138.16987610 -73.76111603]
[123.17168427 -73.52815247]
[109.34362030 -79.34062195]
[99.01509857 -90.22042847]
[102.11920166 -75.54512787]
[105.22331238 -60.86982346]
[115.42691803 -50.01921463]
[110.71292114 -34.91660309]
[113.81703186 -20.24130249]
[116.92114258 -5.56599998]
[120.72024536 -20.07691956]
[128.09938049 -33.13633728]
[138.56910706 -43.87807083]
[151.43501282 -51.58965683]
[165.84373474 -55.75961685]
[180.83961487 -56.11137009]
[195.42800903 -52.62158585]
[208.64134216 -45.52172852]
[219.60321045 -35.28271103]
[227.58654785 -22.58364296]
[232.06184387 -8.26681328]
[232.73229980 6.71819592]
[229.55340576 21.37748337]
[222.73603821 34.73875046]
[212.73234558 45.91579056]
[200.20585632 54.16727448]
[185.98739624 58.94590759]
[171.02001953 59.93474197]
[156.29647827 57.06819153]
[142.79330444 50.53638458]
[131.40614319 40.77255249]
[122.89024353 28.42429543]
[117.80934143 14.30561543]
[116.02687836 29.19933319]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[113.21039581 151.38710022]
[118.29601288 164.08177185]
[116.45954132 177.52413940]
[108.28662872 188.21748352]
[95.99703979 193.43362427]
[93.99302673 208.29914856]
[91.98901367 223.16467285]
[89.98500061 238.03021240]
[87.98097992 252.89573669]
[85.97696686 267.76126099]
[83.97295380 282.62680054]
[91.15812683 293.33828735]
[89.18294525 305.67855835]
[79.64482880 313.11837769]
[77.41970825 327.95242310]
[83.02427673 342.74768066]
[73.48459625 354.18637085]
[86.91484070 347.50592041]
[100.57525635 353.70211792]
[104.39589691 368.20739746]
[95.56032562 380.32897949]
[80.58179474 381.13128662]
[70.50240326 370.02447510]
[67.18014526 384.65194702]
[63.85788727 399.27938843]
[60.53562546 413.90686035]
[57.21336746 428.53433228]
[70.69175720 435.28683472]
[82.16205597 445.06924438]
[90.95739746 457.31283569]
[96.56642151 471.30578613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 206]
[21 205]
[22 204]
[23 203]
[24 202]
[25 196]
[27 194]
[28 193]
[30 190]
[31 189]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[40 179]
[41 178]
[42 177]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 147]
[51 146]
[52 145]
[54 143]
[55 142]
[56 141]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
