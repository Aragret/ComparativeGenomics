%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[104.25787354 456.35067749]
[98.92804718 470.65298462]
[87.91455841 481.22018433]
[73.40414429 485.95419312]
[58.27785873 483.91500854]
[45.53903580 475.50756836]
[37.71697617 462.40115356]
[36.36475754 447.19805908]
[41.75086212 432.91683960]
[52.80587769 422.39309692]
[67.33482361 417.71627808]
[69.33883667 402.85076904]
[71.34284973 387.98522949]
[73.34686279 373.11972046]
[75.35087585 358.25418091]
[68.26858521 348.44766235]
[69.81650543 336.04653931]
[79.70602417 327.76644897]
[81.93114471 312.93240356]
[84.15625763 298.09835815]
[85.93872833 283.20462036]
[87.27696228 268.26443481]
[88.61519623 253.32426453]
[77.28999329 240.89129639]
[78.48449707 223.77732849]
[91.94677734 212.60653687]
[93.06242371 197.64808655]
[94.17807770 182.68963623]
[94.51305389 167.69337463]
[94.06644440 152.70002747]
[93.61984253 137.70668030]
[93.17323303 122.71332550]
[92.72663116 107.71997833]
[91.49964905 92.77024841]
[89.49563599 77.90471649]
[87.49162292 63.03918839]
[85.37699890 48.18899155]
[83.15188599 33.35494614]
[80.92676544 18.52090263]
[78.15115356 3.77994061]
[74.82889557 -10.84751987]
[71.50663757 -25.47497940]
[68.18437958 -40.10243988]
[64.86212158 -54.72990036]
[49.82075119 -54.34362030]
[34.99780273 -56.89853668]
[20.96265030 -62.29460526]
[8.25404358 -70.32268524]
[-2.64057612 -80.67264557]
[-11.30378056 -92.94534302]
[-17.40414047 -106.66800690]
[-20.70890808 -121.31247711]
[-21.09289551 -136.31549072]
[-18.54321861 -151.10037231]
[-13.15971565 -165.09921265]
[-5.15104198 -177.77465820]
[5.17341518 -188.64053345]
[17.41549110 -197.28053284]
[31.10359764 -203.36410522]
[27.78133965 -217.99156189]
[24.45907974 -232.61901855]
[21.13681984 -247.24649048]
[17.81455994 -261.87393188]
[7.21290636 -273.61767578]
[11.93915653 -287.74255371]
[8.61689663 -302.37002563]
[5.29463768 -316.99746704]
[-9.60336971 -315.14599609]
[-24.61169434 -314.78707886]
[-39.58117294 -315.92434692]
[-54.36302567 -318.54641724]
[-68.81034851 -322.62731934]
[-82.77954102 -328.12640381]
[-96.13177490 -334.98910522]
[-108.73434448 -343.14715576]
[-120.46200562 -352.51950073]
[-131.19818115 -363.01296997]
[-140.83618164 -374.52328491]
[-149.28021240 -386.93606567]
[-156.44636536 -400.12792969]
[-162.26338196 -413.96774292]
[-166.67349243 -428.31799316]
[-169.63282776 -443.03604126]
[-171.11201477 -457.97561646]
[-171.09631348 -472.98822021]
[-169.58590698 -487.92465210]
[-166.59577942 -502.63647461]
[-162.15568542 -516.97747803]
[-156.30973816 -530.80511475]
[-149.11601257 -543.98193359]
[-140.64604187 -556.37701416]
[-130.98399353 -567.86718750]
[-120.22589874 -578.33819580]
[-108.47867584 -587.68597412]
[-95.85906982 -595.81762695]
[-82.49251556 -602.65240479]
[-68.51184845 -608.12231445]
[-54.05603027 -612.17297363]
[-39.26872635 -614.76416016]
[-24.29690170 -615.87005615]
[-9.28936100 -615.47979736]
[5.60474157 -613.59716797]
[20.23737907 -610.24090576]
[34.46311951 -605.44433594]
[48.14057541 -599.25518799]
[61.13381577 -591.73492432]
[73.31370544 -582.95831299]
[84.55918121 -573.01257324]
[94.75849152 -561.99652100]
[103.81025696 -550.01971436]
[111.62452698 -537.20111084]
[118.12361908 -523.66821289]
[123.24295807 -509.55538940]
[126.93165588 -495.00302124]
[129.15306091 -480.15567017]
[129.88508606 -465.16088867]
[129.12045288 -450.16775513]
[126.86676025 -435.32528687]
[123.14642334 -420.78094482]
[117.99639893 -406.67932129]
[111.46788788 -393.16055298]
[103.62575531 -380.35900879]
[94.54796600 -368.40188599]
[84.32472229 -357.40808105]
[73.05763245 -347.48681641]
[60.85868835 -338.73672485]
[47.84912491 -331.24475098]
[34.15823746 -325.08532715]
[19.92209816 -320.31973267]
[23.24435806 -305.69226074]
[26.56661606 -291.06481934]
[36.93064117 -280.36730957]
[32.44202042 -265.19619751]
[35.76427841 -250.56874084]
[39.08654022 -235.94128418]
[42.40879822 -221.31382751]
[45.73106003 -206.68637085]
[60.70412064 -207.11245728]
[75.47731018 -204.60830688]
[89.48252869 -199.26829529]
[102.18083191 -191.29591370]
[113.08319092 -180.99600220]
[121.76928711 -168.76303101]
[127.90377045 -155.06610107]
[131.24914551 -140.43086243]
[131.67503357 -125.41938019]
[129.16316223 -110.60855103]
[123.80825806 -96.56791687]
[115.81436157 -83.83778381]
[105.48712158 -72.90840912]
[93.22209167 -64.20114136]
[79.48957825 -58.05215836]
[82.81183624 -43.42469788]
[86.13409424 -28.79723930]
[89.45635986 -14.16977882]
[92.77861786 0.45768115]
[102.85953522 -10.64975166]
[117.83798981 -9.84602070]
[126.67241669 2.27639246]
[122.85040283 16.78129768]
[109.18939972 22.97621536]
[95.76081085 16.29578590]
[97.98593140 31.12982941]
[100.21104431 45.96387482]
[104.31198883 52.11236954]
[102.35715485 61.03517532]
[104.36116791 75.90070343]
[106.36518097 90.76622772]
[115.38968658 78.78465271]
[129.97564697 75.28465271]
[143.45454407 81.86639404]
[149.66401672 95.52078247]
[145.76516724 110.00522614]
[133.54051208 118.69762421]
[118.57899475 117.62393188]
[107.71997833 107.27336884]
[108.16658020 122.26672363]
[108.61318970 137.26007080]
[109.05979919 152.25341797]
[109.50640106 167.24676514]
[119.72843933 156.26907349]
[134.59936523 154.30551147]
[147.32038879 162.25381470]
[152.07563782 176.48011780]
[146.69107056 190.48034668]
[133.62843323 197.85379028]
[118.85980225 195.22940063]
[109.13652802 183.80528259]
[108.02088165 198.76373291]
[106.90523529 213.72219849]
[116.81095123 222.84860229]
[119.61088562 235.82438660]
[114.50186157 247.86514282]
[103.55538177 254.66249084]
[102.21714020 269.60269165]
[100.87890625 284.54287720]
[102.84491730 288.41439819]
[103.41895294 292.31759644]
[102.76198578 295.81100464]
[101.16182709 298.55072021]
[98.99030304 300.32345581]
[96.76518250 315.15750122]
[94.54006958 329.99154663]
[101.67553711 346.96701050]
[90.21640778 360.25817871]
[88.21239471 375.12371826]
[86.20837402 389.98925781]
[84.20436096 404.85476685]
[82.20034790 419.72030640]
[94.97218323 428.07751465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[18 203]
[19 202]
[20 201]
[21 196]
[22 195]
[23 194]
[26 190]
[27 189]
[28 188]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 168]
[35 167]
[36 166]
[37 164]
[38 163]
[39 162]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[65 131]
[66 130]
[67 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
