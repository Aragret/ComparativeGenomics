%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[105.24136353 544.19439697]
[108.39226532 529.48919678]
[114.04900360 515.55462646]
[122.03968048 502.81414795]
[132.12145996 491.65490723]
[143.98799133 482.41601562]
[157.27862549 475.37826538]
[152.66461182 461.10552979]
[148.05061340 446.83279419]
[143.43659973 432.56005859]
[138.82258606 418.28732300]
[134.20858765 404.01458740]
[123.58505249 398.22952271]
[119.62423706 386.37643433]
[124.96676636 374.63674927]
[120.56576538 360.29690552]
[116.16477203 345.95706177]
[102.92675781 339.22720337]
[98.25923920 324.74725342]
[105.40786743 310.90765381]
[101.00686646 296.56781006]
[96.60587311 282.22796631]
[93.99303436 296.99862671]
[87.37631226 310.46038818]
[77.27751160 321.55157471]
[64.49308014 329.39749146]
[50.03124619 333.37936401]
[35.03252792 333.18316650]
[20.67979050 328.82440186]
[8.10494900 320.64678955]
[-1.70029116 309.29525757]
[-7.96264887 295.66503906]
[-10.18824768 280.83105469]
[-8.20156765 265.96319580]
[-2.15928793 252.23400879]
[7.46207380 240.72621155]
[19.90373611 232.34736633]
[34.18449783 227.75827026]
[49.17811584 227.32083130]
[63.70213699 231.06953430]
[76.61112976 238.70877075]
[86.88703918 249.63606262]
[93.72060394 262.99291992]
[93.72060394 247.99291992]
[93.60893250 232.99333191]
[93.38560486 217.99499512]
[93.16227722 202.99665833]
[92.93894958 187.99832153]
[92.71562195 172.99998474]
[84.25698090 164.35255432]
[83.94817352 151.85902405]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[84.76270294 58.99632645]
[92.50000000 46.26905823]
[91.38435364 31.31060219]
[81.68552399 18.81087303]
[87.44924164 5.07665157]
[85.22412109 -9.75739193]
[82.99900818 -24.59143639]
[80.77388763 -39.42547989]
[78.43840027 -54.24254608]
[75.99267578 -69.04181671]
[73.54694366 -83.84108734]
[71.10121918 -98.64035797]
[58.53721619 -107.84815979]
[56.26772308 -122.89156342]
[65.12338257 -134.81268311]
[62.67765427 -149.61195374]
[60.23192596 -164.41122437]
[45.22946167 -163.73118591]
[30.25187492 -164.83035278]
[15.50942135 -167.69329834]
[1.20906520 -172.27981567]
[-12.44843864 -178.52554321]
[-25.27136040 -186.34275818]
[-37.07968521 -195.62176514]
[-47.70764542 -206.23226929]
[-57.00604248 -218.02532959]
[-64.84432983 -230.83537292]
[-71.11248779 -244.48260498]
[-75.72251129 -258.77539062]
[-78.60968018 -273.51312256]
[-79.73346710 -288.48889160]
[-79.07809448 -303.49246216]
[-76.65276337 -318.31317139]
[-72.49152374 -332.74301147]
[-66.65279388 -346.57940674]
[-59.21853256 -359.62808228]
[-50.29310989 -371.70590210]
[-40.00182724 -382.64324951]
[-28.48915672 -392.28662109]
[-15.91671658 -400.50064087]
[-2.46100545 -407.17001343]
[11.68907928 -412.20104980]
[26.33489227 -415.52316284]
[41.27083206 -417.08972168]
[56.28721619 -416.87872314]
[71.17324066 -414.89312744]
[85.71993256 -411.16082764]
[99.72307587 -405.73419189]
[112.98608398 -398.68942261]
[125.32277679 -390.12539673]
[136.55995178 -380.16235352]
[146.53987122 -368.94015503]
[155.12242126 -356.61633301]
[162.18711853 -343.36392212]
[167.63478088 -329.36895752]
[171.38894653 -314.82788086]
[173.39689636 -299.94485474]
[173.63046265 -284.92880249]
[172.08634949 -269.99053955]
[168.78622437 -255.33975220]
[163.77644348 -241.18212891]
[157.12731934 -227.71641541]
[148.93220520 -215.13163757]
[139.30613708 -203.60449219]
[128.38424683 -193.29679871]
[116.31987000 -184.35324097]
[103.28237152 -176.89938354]
[89.45477295 -171.03985596]
[75.03119659 -166.85694885]
[77.47692871 -152.05767822]
[79.92265320 -137.25840759]
[92.14287567 -128.82029724]
[94.83401489 -113.84657288]
[85.90048981 -101.08609009]
[88.34621429 -86.28681946]
[90.79194641 -71.48754883]
[93.23767090 -56.68827438]
[97.42971039 -50.60151672]
[95.60793304 -41.65059662]
[97.83304596 -26.81655312]
[100.05816650 -11.98250866]
[102.28328705 2.85153461]
[111.82295990 14.29023552]
[106.21839142 29.08548546]
[113.17320251 15.79524040]
[125.78816986 7.67965555]
[140.76576233 6.86012697]
[154.19088745 13.55087662]
[162.55422974 26.00295830]
[163.66966248 40.96142960]
[157.24557495 54.51617813]
[144.96124268 63.12403107]
[130.02774048 64.53491211]
[116.34866333 58.38002014]
[107.50000000 46.26905823]
[115.23729706 58.99632645]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[117.07468414 157.93267822]
[107.71395874 172.77665710]
[107.93728638 187.77499390]
[108.16061401 202.77333069]
[108.38394165 217.77166748]
[108.60726929 232.77000427]
[111.86409760 241.30410767]
[108.72060394 247.99291992]
[108.72060394 262.99291992]
[110.94571686 277.82696533]
[115.34671783 292.16680908]
[119.74771118 306.50665283]
[133.42926025 313.95333862]
[137.68821716 328.55868530]
[130.50462341 341.55606079]
[134.90560913 355.89590454]
[139.30661011 370.23574829]
[153.07485962 382.46347046]
[148.48130798 399.40060425]
[153.09532166 413.67330933]
[157.70933533 427.94604492]
[162.32334900 442.21878052]
[166.93734741 456.49151611]
[171.55136108 470.76425171]
[186.44664001 468.69021606]
[201.47578430 469.23440552]
[216.18205261 472.38031006]
[230.11856079 478.03231812]
[242.86177063 486.01867676]
[254.02444458 496.09664917]
[263.26736450 507.96002197]
[270.30963135 521.24829102]
[274.93725586 535.55755615]
[277.00961304 550.45312500]
[276.46368408 565.48217773]
[273.31613159 580.18811035]
[267.66253662 594.12396240]
[259.67477417 606.86627197]
[249.59550476 618.02777100]
[237.73107910 627.26934814]
[224.44203186 634.31011963]
[210.13220215 638.93609619]
[195.23645020 641.00677490]
[180.20744324 640.45916748]
[165.50187683 637.30993652]
[151.56666565 631.65478516]
[138.82527161 623.66552734]
[127.66487885 613.58502197]
[118.42465210 601.71954346]
[111.38539124 588.42968750]
[106.76101685 574.11932373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 183]
[8 182]
[9 181]
[10 180]
[11 179]
[12 178]
[15 176]
[16 175]
[17 174]
[20 171]
[21 170]
[22 169]
[43 168]
[44 167]
[45 165]
[46 164]
[47 163]
[48 162]
[49 161]
[52 159]
[53 158]
[54 157]
[56 155]
[57 154]
[59 152]
[60 141]
[62 139]
[63 138]
[64 137]
[65 136]
[66 134]
[67 133]
[68 132]
[69 131]
[72 128]
[73 127]
[74 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
