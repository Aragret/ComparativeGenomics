%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[-35.67182541 523.71820068]
[-30.18348312 537.73474121]
[-27.62933350 552.56921387]
[-28.11396790 567.61413574]
[-31.61754227 582.25341797]
[-37.99658585 595.88769531]
[-46.98987961 607.95855713]
[-58.22915649 617.97174072]
[-71.25417328 625.51715088]
[-85.53157043 630.28588867]
[-100.47668457 632.08270264]
[-115.47753143 630.83392334]
[-129.91983032 626.59069824]
[-143.21218872 619.52685547]
[-154.81028748 609.93157959]
[-164.23918152 598.19781494]
[-171.11277771 584.80609131]
[-175.14959717 570.30474854]
[-176.18434143 555.28759766]
[-174.17463684 540.36962891]
[-169.20277405 526.16168213]
[-161.47236633 513.24560547]
[-151.29994202 502.15026855]
[-139.10206604 493.33001709]
[-125.37823486 487.14605713]
[-110.69043732 483.85159302]
[-95.64012146 483.58154297]
[-80.84359741 486.34698486]
[-75.18080902 472.45693970]
[-69.51802063 458.56692505]
[-63.85523605 444.67687988]
[-58.19244766 430.78686523]
[-52.52966309 416.89685059]
[-54.88962936 402.19036865]
[-42.51504517 392.33236694]
[-43.53818130 388.95812988]
[-42.97779846 384.92068481]
[-40.53999710 380.96966553]
[-36.27677155 377.95770264]
[-29.99941063 364.33438110]
[-23.72205162 350.71105957]
[-17.44469070 337.08773804]
[-29.67860222 328.44070435]
[-40.11800385 317.68994141]
[-48.40630722 305.20062256]
[-54.26002121 291.39724731]
[-57.47843170 276.74935913]
[-57.95050430 261.75552368]
[-55.65869141 246.92633057]
[-50.67959595 232.76701355]
[-43.18141556 219.76031494]
[-33.41823578 208.34989929]
[-21.72145271 198.92536926]
[-8.48850250 191.80879211]
[5.83063650 187.24385071]
[20.74874306 185.38740540]
[35.75793457 186.30413818]
[50.34695435 189.96429443]
[56.62431717 176.34097290]
[62.90167618 162.71765137]
[69.17903900 149.09434509]
[63.79629898 135.25375366]
[69.96836853 121.34835815]
[84.52214050 115.79628754]
[90.79949951 102.17297363]
[90.14424896 96.96868134]
[92.45150757 91.76773071]
[97.47193146 88.24179077]
[104.15213013 74.81141663]
[110.83232117 61.38103867]
[117.51251984 47.95066452]
[124.19271088 34.52028656]
[130.87290955 21.08991241]
[137.55310059 7.65953588]
[144.23329163 -5.77084017]
[149.99932861 -19.61832619]
[154.82533264 -33.82078171]
[159.65132141 -48.02323532]
[164.47732544 -62.22569275]
[161.59138489 -77.78146362]
[173.01208496 -87.34268188]
[175.01609802 -102.20821381]
[174.12327576 -117.18161774]
[173.23046875 -132.15502930]
[159.93598938 -143.52499390]
[158.99641418 -160.65486145]
[170.50547791 -172.91783142]
[169.38983154 -187.87628174]
[168.27416992 -202.83473206]
[167.15852356 -217.79318237]
[166.04287720 -232.75164795]
[164.92723083 -247.71009827]
[163.81158447 -262.66854858]
[162.69593811 -277.62701416]
[161.58029175 -292.58544922]
[147.05033875 -296.97238159]
[135.08872986 -306.31500244]
[127.31314850 -319.34976196]
[124.77519226 -334.31381226]
[127.81809235 -349.18341064]
[136.03031921 -361.94757080]
[148.30125427 -370.88003540]
[162.97132874 -374.77276611]
[178.05654907 -373.09927368]
[191.51676941 -366.08593750]
[201.53158569 -354.68121338]
[206.74659729 -340.42749023]
[206.45649719 -325.25250244]
[200.70054626 -311.20852661]
[190.25715637 -300.19488525]
[176.53874207 -293.70111084]
[177.65438843 -278.74264526]
[178.77003479 -263.78421021]
[179.88568115 -248.82574463]
[181.00132751 -233.86729431]
[182.11697388 -218.90884399]
[183.23263550 -203.95037842]
[184.34828186 -188.99192810]
[185.46392822 -174.03347778]
[196.30799866 -167.07389832]
[201.23718262 -154.95840454]
[198.24436951 -142.02575684]
[188.20387268 -133.04783630]
[189.09667969 -118.07443237]
[189.98950195 -103.10102844]
[195.80601501 -116.92739105]
[204.51602173 -129.13949585]
[215.69458008 -139.14149475]
[228.79624939 -146.44535828]
[243.18176270 -150.69471741]
[258.14920044 -151.68223572]
[272.96832275 -149.35974121]
[286.91601562 -143.84054565]
[299.31179810 -135.39393616]
[309.55078125 -124.43205261]
[317.13345337 -111.48974609]
[321.68975830 -97.19849396]
[322.99746704 -82.25560760]
[320.99273682 -67.39017487]
[315.77337646 -53.32751846]
[307.59405518 -40.75378799]
[296.85385132 -30.28248024]
[284.07684326 -22.42451286]
[269.88641357 -17.56329727]
[254.97492981 -15.93601990]
[240.06999207 -17.62207985]
[225.89883423 -22.53921127]
[213.15289307 -30.44749641]
[202.45407104 -40.96107101]
[194.32438660 -53.56695557]
[189.16052246 -67.65007782]
[187.21453857 -82.51668549]
[190.44566345 -67.97676849]
[178.67977905 -57.39969635]
[173.85377502 -43.19723892]
[169.02778625 -28.99478340]
[164.20178223 -14.79232788]
[176.80511475 -22.92595673]
[191.80451965 -23.06098557]
[204.55223083 -15.15557289]
[211.09826660 -1.65929735]
[209.41426086 13.24587250]
[200.02200317 24.94140816]
[185.83180237 29.80331993]
[171.24064636 26.32509422]
[160.76974487 15.58449268]
[157.66366577 0.90935433]
[150.98347473 14.33973026]
[144.30328369 27.77010727]
[137.62309265 41.20048141]
[130.94288635 54.63085938]
[124.26269531 68.06123352]
[117.58250427 81.49160767]
[110.90231323 94.92198944]
[104.42281342 108.45033264]
[98.14545441 122.07364655]
[103.38100433 136.74426270]
[96.82080078 150.47080994]
[82.80235291 155.37170410]
[76.52499390 168.99502563]
[70.24763489 182.61833191]
[63.97027206 196.24165344]
[76.23152161 204.95358276]
[86.68032837 215.76741028]
[94.96188354 228.31381226]
[100.79537201 242.16468811]
[103.98346710 256.84774780]
[104.41902924 271.86264038]
[102.08869171 286.69796753]
[97.07325745 300.84866333]
[89.54492950 313.83334351]
[79.76136017 325.21051025]
[68.05686188 334.59359741]
[54.83097076 341.66427612]
[40.53480911 346.18295288]
[25.65570068 347.99719238]
[10.70056248 347.04663086]
[-3.82137394 343.36511230]
[-10.09873486 356.98843384]
[-16.37609482 370.61175537]
[-22.65345573 384.23504639]
[-28.62501907 397.99514771]
[-26.67009354 413.69512939]
[-38.63963699 422.55963135]
[-44.30242157 436.44964600]
[-49.96520996 450.33969116]
[-55.62799454 464.22970581]
[-61.29078293 478.11972046]
[-66.95356750 492.00976562]
[-54.44116592 500.37783813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 209]
[29 208]
[30 207]
[31 206]
[32 205]
[33 204]
[35 202]
[39 201]
[40 200]
[41 199]
[42 198]
[58 182]
[59 181]
[60 180]
[61 179]
[64 176]
[65 175]
[68 174]
[69 173]
[70 172]
[71 171]
[72 170]
[73 169]
[74 168]
[75 167]
[76 157]
[77 156]
[78 155]
[79 154]
[81 152]
[82 125]
[83 124]
[84 123]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
