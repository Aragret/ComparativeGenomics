%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[51.93848038 714.16308594]
[37.38633347 717.82757568]
[22.60984421 720.44451904]
[7.68430901 722.00073242]
[-7.31421375 722.48815918]
[-22.30929375 721.90429688]
[-37.22451782 720.25225830]
[-51.98388672 717.54034424]
[-66.51217651 713.78247070]
[-80.73536682 708.99768066]
[-94.58097839 703.21038818]
[-107.97844696 696.45013428]
[-120.85950470 688.75134277]
[-133.15850830 680.15325928]
[-144.81280518 670.69958496]
[-155.76298523 660.43865967]
[-165.95324707 649.42272949]
[-175.33168030 637.70782471]
[-183.85047913 625.35375977]
[-191.46623230 612.42340088]
[-198.14015198 598.98272705]
[-203.83821106 585.10015869]
[-208.53137207 570.84649658]
[-212.19572449 556.29431152]
[-214.81259155 541.51782227]
[-216.36863708 526.59222412]
[-216.85595703 511.59371948]
[-216.27203369 496.59863281]
[-214.61985779 481.68344116]
[-211.90785217 466.92407227]
[-208.14982605 452.39581299]
[-203.36492920 438.17266846]
[-197.57756042 424.32711792]
[-190.81719971 410.92968750]
[-183.11830139 398.04867554]
[-174.52008057 385.74975586]
[-165.06637573 374.09552002]
[-154.80535889 363.14541626]
[-143.78930664 352.95523071]
[-132.07435608 343.57690430]
[-119.72020721 335.05819702]
[-106.78981781 327.44253540]
[-93.34907532 320.76873779]
[-79.46647644 315.07077026]
[-65.21275330 310.37771606]
[-50.66055298 306.71350098]
[-35.88402557 304.09674072]
[-20.95846558 302.54080200]
[-5.95993471 302.05358887]
[9.03513622 302.63763428]
[23.95033646 304.28991699]
[38.70965958 307.00204468]
[42.46596146 292.47998047]
[46.22226334 277.95791626]
[49.97856140 263.43588257]
[53.73486328 248.91381836]
[49.43125916 234.65449524]
[60.37786865 223.23159790]
[64.13417053 208.70954895]
[67.89047241 194.18748474]
[71.64676666 179.66542053]
[75.40306854 165.14337158]
[67.64627075 152.47973633]
[71.24882507 137.69879150]
[84.58420563 129.64860535]
[88.34050751 115.12654877]
[81.07765961 102.58871460]
[84.70613098 88.56086731]
[97.13743591 81.11714935]
[100.89373779 66.59509277]
[104.65003967 52.07303238]
[108.40633392 37.55097198]
[111.72859955 22.92351341]
[114.61386871 8.20362186]
[117.49913788 -6.51626968]
[108.74810791 -16.75511932]
[107.50994110 -29.97167778]
[114.01358032 -41.32001495]
[125.69023895 -46.76842117]
[128.79434204 -61.44372559]
[131.89845276 -76.11902618]
[135.00256348 -90.79432678]
[138.10667419 -105.46963501]
[141.21078491 -120.14493561]
[144.31489563 -134.82023621]
[147.41900635 -149.49554443]
[133.18669128 -154.28694153]
[119.60685730 -160.69824219]
[106.86318207 -168.64274597]
[95.12799835 -178.01301575]
[84.56000519 -188.68232727]
[75.30213165 -200.50637817]
[67.47958374 -213.32528687]
[61.19813919 -226.96566772]
[56.54275894 -241.24305725]
[53.57639694 -255.96437073]
[52.33916855 -270.93054199]
[52.84780502 -285.93911743]
[55.09543228 -300.78717041]
[59.05165482 -315.27389526]
[64.66296387 -329.20333862]
[71.85346985 -342.38714600]
[80.52593994 -354.64703369]
[90.56307983 -365.81719971]
[101.82915497 -375.74655151]
[114.17180634 -384.30081177]
[127.42410278 -391.36431885]
[141.40682983 -396.84155273]
[155.93089294 -400.65838623]
[170.79985046 -402.76324463]
[185.81263733 -403.12765503]
[200.76620483 -401.74670410]
[215.45834351 -398.63903809]
[229.69035339 -393.84667969]
[243.26974487 -387.43447876]
[256.01290894 -379.48910522]
[267.74746704 -370.11807251]
[278.31472778 -359.44805908]
[287.57180786 -347.62338257]
[295.39352417 -334.80395508]
[301.67404175 -321.16314697]
[306.32849121 -306.88543701]
[309.29385376 -292.16394043]
[310.53009033 -277.19769287]
[310.02044678 -262.18914795]
[307.77182007 -247.34123230]
[303.81463623 -232.85478210]
[298.20239258 -218.92570496]
[291.01101685 -205.74235535]
[282.33773804 -193.48304749]
[272.29983521 -182.31356812]
[261.03311157 -172.38496399]
[248.68988037 -163.83151245]
[235.43711853 -156.76889038]
[221.45402527 -151.29261780]
[206.92971802 -147.47674561]
[192.06060791 -145.37286377]
[177.04779053 -145.00946045]
[162.09431458 -146.39143372]
[158.99020386 -131.71612549]
[155.88609314 -117.04082489]
[152.78198242 -102.36552429]
[149.67787170 -87.69021606]
[146.57376099 -73.01491547]
[143.46965027 -58.33961487]
[140.36553955 -43.66431046]
[150.13307190 -29.97365761]
[146.91336060 -13.12289238]
[132.21903992 -3.63099694]
[129.33375549 11.08889484]
[126.44848633 25.80878639]
[127.89865112 28.20778084]
[128.48591614 31.32575035]
[127.93167114 34.83690643]
[126.08029175 38.32071686]
[122.92839813 41.30727386]
[119.17209625 55.82933426]
[115.41579437 70.35139465]
[111.65949249 84.87345123]
[118.92234039 97.41128540]
[115.29386902 111.43913269]
[102.86256409 118.88285065]
[99.10626221 133.40490723]
[106.86573029 146.91151428]
[102.84943390 161.58543396]
[89.92513275 168.89967346]
[86.16883087 183.42172241]
[82.41252899 197.94378662]
[78.65622711 212.46585083]
[74.89992523 226.98789978]
[78.93485260 242.28593445]
[68.25691986 252.67010498]
[64.50062561 267.19216919]
[60.74431992 281.71423340]
[56.98802185 296.23629761]
[53.23171997 310.75836182]
[67.45498657 315.54290771]
[81.30068207 321.32995605]
[94.69824982 328.09002686]
[107.57942963 335.78863525]
[119.87857056 344.38653564]
[131.53300476 353.83999634]
[142.48333740 364.10076904]
[152.67378235 375.11657715]
[162.05238342 386.83129883]
[170.57138062 399.18527222]
[178.18733215 412.11547852]
[184.86145020 425.55606079]
[190.55972290 439.43853760]
[195.25309753 453.69213867]
[198.91767883 468.24426270]
[201.53477478 483.02072144]
[203.09104919 497.94625854]
[203.57859802 512.94476318]
[202.99490356 527.93988037]
[201.34295654 542.85510254]
[198.63116455 557.61450195]
[194.87336731 572.14282227]
[190.08869934 586.36602783]
[184.30152893 600.21166992]
[177.54138184 613.60919189]
[169.84268188 626.49035645]
[161.24465942 638.78942871]
[151.79112244 650.44378662]
[141.53027344 661.39404297]
[130.51437378 671.58435059]
[118.79956818 680.96289062]
[106.44555664 689.48181152]
[93.51528168 697.09765625]
[80.07464600 703.77166748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 176]
[53 175]
[54 174]
[55 173]
[56 172]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[65 163]
[66 162]
[69 159]
[70 158]
[71 157]
[72 156]
[73 151]
[74 150]
[75 149]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
