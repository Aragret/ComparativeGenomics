%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[293.26934814 437.83666992]
[302.70590210 426.15100098]
[313.53268433 415.74023438]
[304.57196045 403.71084595]
[295.61126709 391.68148804]
[286.65057373 379.65209961]
[277.68988037 367.62271118]
[266.22433472 372.13677979]
[253.99967957 373.76971436]
[241.72930908 372.42083740]
[230.13056946 368.16366577]
[219.88278198 361.24191284]
[211.58752441 352.05551147]
[205.73329163 341.13751221]
[202.66673279 329.12313843]
[202.57208252 316.71289062]
[205.46020508 304.63162231]
[211.16752625 293.58630371]
[219.36541748 284.22454834]
[211.13661194 271.68316650]
[202.90779114 259.14175415]
[194.67898560 246.60035706]
[186.45018005 234.05895996]
[178.03556824 221.64146423]
[169.43699646 209.35061646]
[153.15838623 202.79518127]
[151.71376038 184.43777466]
[142.93315125 172.27630615]
[134.15254211 160.11485291]
[125.37194824 147.95339966]
[111.64861298 142.16380310]
[109.84348297 126.44591522]
[101.06288147 114.28445435]
[88.38666534 108.38485718]
[86.77566528 94.49614716]
[88.57541656 109.38778687]
[85.24081421 124.01243591]
[77.16362000 136.65200806]
[65.29272461 145.82162476]
[51.02270889 150.44404602]
[36.03000641 149.97622681]
[22.07594109 144.47312927]
[10.79982185 134.58126831]
[3.52635765 121.46269989]
[1.11002672 106.65859985]
[3.83469748 91.90813446]
[11.38027859 78.94417572]
[22.86032295 69.28971863]
[36.92616272 64.07894897]
[51.92536545 63.92403412]
[66.09583282 68.84317017]
[77.77386475 78.25963593]
[72.11107635 64.36960602]
[66.44829559 50.47958374]
[60.78550720 36.58955383]
[55.90371704 50.77293015]
[43.68401337 59.47229004]
[28.68404388 59.44298935]
[16.49842262 50.69595337]
[11.67208672 36.49361038]
[16.00514030 22.13308716]
[27.88146210 12.97050095]
[42.87147522 12.42327023]
[55.38500977 20.69640923]
[51.41291428 6.23188591]
[47.44081879 -8.23263836]
[43.46872330 -22.69716263]
[39.49662781 -37.16168594]
[28.38116074 -48.42032623]
[32.47198868 -62.74214172]
[28.49989319 -77.20666504]
[24.20576859 -91.57888031]
[19.59176064 -105.85161591]
[14.97775078 -120.12434387]
[10.36374187 -134.39707947]
[-1.24336171 -145.14816284]
[2.20388317 -159.63835144]
[-12.67941093 -157.49462891]
[-27.71090889 -157.89718628]
[-42.45812607 -160.83447266]
[-56.49675369 -166.22193909]
[-69.42287445 -173.90461731]
[-80.86457825 -183.66142273]
[-90.49266815 -195.21166992]
[-98.03011322 -208.22300720]
[-103.26005554 -222.32107544]
[-106.03201294 -237.10026550]
[-106.26624298 -252.13533020]
[-103.95599365 -266.99368286]
[-99.16773224 -281.24783325]
[-92.03924561 -294.48764038]
[-82.77561951 -306.33218384]
[-71.64338684 -316.44067383]
[-58.96285248 -324.52224731]
[-45.09885025 -330.34442139]
[-30.45028687 -333.73962402]
[-15.43862152 -334.61022949]
[-0.49577382 -332.93115234]
[13.94832134 -328.75070190]
[27.47807884 -322.18917847]
[39.70421982 -313.43536377]
[50.27497864 -302.74108887]
[58.88620377 -290.41409302]
[65.29013824 -276.80905151]
[69.30253601 -262.31735229]
[70.80793762 -247.35601807]
[69.76303864 -232.35548401]
[66.19790649 -217.74734497]
[60.21510696 -203.95190430]
[51.98678207 -191.36608887]
[41.74967575 -180.35202026]
[29.79833412 -171.22659302]
[16.47661591 -164.25236511]
[27.75369453 -154.52217102]
[24.63647461 -139.01109314]
[29.25048447 -124.73835754]
[33.86449432 -110.46562195]
[38.47850418 -96.19288635]
[41.43437576 -94.27061462]
[43.60603333 -90.82112885]
[44.28582001 -86.22861481]
[42.96441650 -81.17876434]
[46.93651199 -66.71424103]
[57.76786804 -56.49019623]
[53.96115112 -41.13378143]
[57.93324661 -26.66925812]
[61.90534210 -12.20473480]
[65.87744141 2.25978947]
[69.84953308 16.72431374]
[74.67552948 30.92676926]
[80.33831787 44.81679535]
[86.00110626 58.70682144]
[91.66389465 72.59684753]
[98.93711853 85.71554565]
[111.61333466 91.61514282]
[113.22433472 105.50385284]
[122.00493622 117.66530609]
[136.35630798 124.32477570]
[137.53340149 139.17279053]
[146.31401062 151.33425903]
[155.09460449 163.49571228]
[163.87521362 175.65716553]
[176.46080017 178.47950745]
[183.52381897 188.78956604]
[181.72784424 200.75205994]
[190.32640076 213.04289246]
[196.14576721 216.18080139]
[199.06816101 221.05487061]
[198.99157715 225.83013916]
[207.22038269 238.37155151]
[215.44920349 250.91294861]
[223.67800903 263.45434570]
[231.90681458 275.99575806]
[249.17297363 271.46716309]
[266.92388916 273.10537720]
[283.02655029 280.69720459]
[295.55154419 293.31500244]
[303.00430298 309.43011475]
[304.50335693 327.09780884]
[299.88464355 344.19223022]
[289.71926880 358.66201782]
[298.67996216 370.69140625]
[307.64065552 382.72076416]
[316.60134888 394.75015259]
[325.56204224 406.77954102]
[338.63653564 399.38623047]
[352.53457642 393.68994141]
[367.03698730 389.78051758]
[381.91500854 387.71957397]
[396.93402100 387.53967285]
[411.85714722 389.24359131]
[426.44903564 392.80450439]
[440.47955322 398.16622925]
[453.72738647 405.24423218]
[465.98364258 413.92681885]
[477.05499268 424.07711792]
[486.76681519 435.53503418]
[494.96597290 448.11981201]
[501.52316284 461.63302612]
[506.33489990 475.86151123]
[509.32537842 490.58090210]
[510.44738770 505.55905151]
[509.68322754 520.55969238]
[507.04498291 535.34625244]
[502.57424927 549.68554688]
[496.34152222 563.35144043]
[488.44509888 576.12835693]
[479.00952148 587.81481934]
[468.18362427 598.22650146]
[456.13815308 607.19921875]
[443.06301880 614.59143066]
[429.16452026 620.28656006]
[414.66177368 624.19476318]
[399.78356934 626.25445557]
[384.76455688 626.43310547]
[369.84155273 624.72790527]
[355.24996948 621.16577148]
[341.21990967 615.80285645]
[327.97265625 608.72375488]
[315.71716309 600.04010010]
[304.64666748 589.88885498]
[294.93579102 578.43017578]
[286.73770142 565.84466553]
[280.18164062 552.33093262]
[275.37109375 538.10198975]
[272.38186646 523.38238525]
[271.26110840 508.40414429]
[272.02651978 493.40356445]
[274.66601562 478.61721802]
[279.13796997 464.27828979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[6 162]
[7 161]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 146]
[25 145]
[27 142]
[28 141]
[29 140]
[30 139]
[32 137]
[33 136]
[35 134]
[52 133]
[53 132]
[54 131]
[55 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[70 123]
[71 122]
[72 118]
[73 117]
[74 116]
[75 115]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
