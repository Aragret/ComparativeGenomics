%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[91.37737274 397.35009766]
[83.62583160 383.76895142]
[86.46845245 368.39190674]
[98.56303406 358.47955322]
[98.56303406 343.47955322]
[98.56303406 328.47955322]
[98.56303406 313.47955322]
[98.56303406 298.47955322]
[98.56303406 283.47955322]
[98.56303406 268.47955322]
[96.67850494 266.40429688]
[95.50246429 263.45751953]
[95.37097931 259.90530396]
[96.51766968 256.13043213]
[99.03623199 252.59338379]
[99.81755829 237.61373901]
[100.48734283 222.62870789]
[101.15712738 207.64366150]
[100.82215118 192.64739990]
[99.48391724 177.70721436]
[98.14568329 162.76702881]
[96.80744934 147.82684326]
[87.96553040 135.84062195]
[94.44078827 121.40518951]
[93.10255432 106.46500397]
[89.94332886 102.27773285]
[89.35504150 96.61846924]
[91.95368195 91.06113434]
[91.06086731 76.08772278]
[90.16805267 61.11431885]
[75.79391479 52.19914627]
[69.62722778 36.62759399]
[73.91409302 20.60933876]
[86.77370453 10.40600491]
[85.65805054 -4.55244875]
[84.54240417 -19.51090240]
[83.42675781 -34.46935654]
[82.19978333 -49.41909027]
[80.86154175 -64.35927582]
[79.07907867 -79.25299072]
[76.85396576 -94.08703613]
[74.62884521 -108.92108154]
[70.26104736 -116.94355774]
[72.48273468 -123.99237823]
[70.47872162 -138.85791016]
[68.47470856 -153.72343445]
[66.47069550 -168.58895874]
[51.51023483 -167.44427490]
[36.50867462 -167.16339111]
[21.51584816 -167.74723816]
[6.58156157 -169.19389343]
[-8.24457455 -171.49853516]
[-22.91331100 -174.65351868]
[-37.37591553 -178.64836121]
[-51.58435059 -183.46978760]
[-65.49140930 -189.10179138]
[-79.05090332 -195.52563477]
[-92.21777344 -202.72001648]
[-104.94830322 -210.66102600]
[-117.20018005 -219.32226562]
[-128.93272400 -228.67497253]
[-140.10693359 -238.68809509]
[-150.68572998 -249.32835388]
[-160.63392639 -260.56039429]
[-169.91850281 -272.34692383]
[-178.50862122 -284.64877319]
[-186.37573242 -297.42510986]
[-193.49369812 -310.63345337]
[-199.83888245 -324.22991943]
[-205.39021301 -338.16937256]
[-210.12922668 -352.40551758]
[-214.04020691 -366.89102173]
[-217.11013794 -381.57778931]
[-219.32884216 -396.41702271]
[-220.68894958 -411.35946655]
[-221.18592834 -426.35540771]
[-220.81813049 -441.35510254]
[-219.58677673 -456.30865479]
[-217.49595642 -471.16647339]
[-214.55262756 -485.87911987]
[-210.76655579 -500.39779663]
[-206.15032959 -514.67419434]
[-200.71926880 -528.66094971]
[-194.49142456 -542.31158447]
[-187.48747253 -555.58074951]
[-179.73069763 -568.42437744]
[-171.24687195 -580.79974365]
[-162.06414795 -592.66577148]
[-152.21305847 -603.98309326]
[-141.72630310 -614.71411133]
[-130.63873291 -624.82305908]
[-118.98719025 -634.27648926]
[-106.81036377 -643.04296875]
[-94.14870453 -651.09332275]
[-81.04428101 -658.40081787]
[-67.54062653 -664.94122314]
[-53.68258667 -670.69281006]
[-39.51620483 -675.63641357]
[-25.08854485 -679.75567627]
[-10.44752598 -683.03686523]
[4.35821056 -685.46911621]
[19.27948380 -687.04437256]
[34.26672363 -687.75732422]
[49.27014923 -687.60565186]
[64.23991394 -686.58984375]
[79.12628937 -684.71331787]
[93.87983704 -681.98223877]
[108.45153046 -678.40570068]
[122.79296875 -673.99566650]
[136.85650635 -668.76666260]
[150.59544373 -662.73608398]
[163.96412659 -655.92407227]
[176.91815186 -648.35308838]
[189.41447449 -640.04846191]
[201.41159058 -631.03759766]
[212.86965942 -621.35058594]
[223.75059509 -611.01953125]
[234.01826477 -600.07873535]
[243.63854980 -588.56457520]
[252.57951355 -576.51531982]
[260.81143188 -563.97094727]
[268.30700684 -550.97314453]
[275.04125977 -537.56512451]
[280.99188232 -523.79138184]
[286.13906860 -509.69772339]
[290.46575928 -495.33090210]
[293.95755005 -480.73867798]
[296.60284424 -465.96951294]
[298.39288330 -451.07247925]
[299.32168579 -436.09704590]
[299.38616943 -421.09301758]
[298.58615112 -406.11016846]
[296.92425537 -391.19830322]
[294.40600586 -376.40695190]
[291.03979492 -361.78521729]
[286.83679199 -347.38174438]
[281.81094360 -333.24432373]
[275.97894287 -319.41995239]
[269.36019897 -305.95449829]
[261.97665405 -292.89276123]
[253.85289001 -280.27810669]
[245.01583862 -268.15240479]
[235.49488831 -256.55596924]
[225.32165527 -245.52732849]
[214.52992249 -235.10310364]
[203.15556335 -225.31793213]
[191.23635864 -216.20431519]
[178.81188965 -207.79252625]
[165.92343140 -200.11050415]
[152.61380005 -193.18377686]
[138.92721558 -187.03533936]
[124.90914917 -181.68563843]
[110.60614777 -177.15243530]
[96.06574249 -173.45077515]
[81.33622742 -170.59297180]
[83.34024048 -155.72744751]
[85.34425354 -140.86192322]
[87.34826660 -125.99639130]
[89.46289062 -111.14619446]
[91.68800354 -96.31214905]
[93.91312408 -81.47811127]
[96.08464813 -79.70536804]
[97.68480682 -76.96563721]
[98.34177399 -73.47224426]
[97.76773834 -69.56903839]
[95.80172729 -65.69750977]
[97.13996124 -50.75732422]
[100.86767578 -44.37563324]
[98.38520813 -35.58500290]
[99.50085449 -20.62655067]
[100.61650848 -5.66809750]
[101.73215485 9.29035568]
[113.68948364 15.22873974]
[121.21142578 26.38958740]
[122.24454498 39.91741943]
[116.41233826 52.28689575]
[105.14145660 60.22150421]
[106.03427124 75.19490814]
[106.92708588 90.16831207]
[108.04273987 105.12677002]
[109.38097382 120.06695557]
[118.31861115 133.12181091]
[111.74763489 146.48861694]
[113.08586884 161.42880249]
[114.42410278 176.36898804]
[115.76233673 191.30917358]
[123.99272156 178.76881409]
[137.65275574 172.57176208]
[152.50973511 174.63824463]
[163.96005249 184.32794189]
[168.45570374 198.63839722]
[164.60366821 213.13536072]
[153.59753418 223.32678223]
[138.84768677 226.05474854]
[124.92450714 220.47395325]
[116.14216614 208.31344604]
[115.47238159 223.29849243]
[114.80259705 238.28352356]
[117.54569244 246.99635315]
[114.00964355 253.48619080]
[113.56303406 268.47955322]
[113.56303406 283.47955322]
[113.56303406 298.47955322]
[113.56303406 313.47955322]
[113.56303406 328.47955322]
[113.56303406 343.47955322]
[113.56303406 358.47955322]
[125.65761566 368.39190674]
[128.50024414 383.76895142]
[120.74869537 397.35009766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[15 200]
[16 198]
[17 197]
[18 196]
[19 186]
[20 185]
[21 184]
[22 183]
[24 181]
[25 180]
[28 179]
[29 178]
[30 177]
[34 172]
[35 171]
[36 170]
[37 169]
[38 167]
[39 166]
[40 161]
[41 160]
[42 159]
[44 158]
[45 157]
[46 156]
[47 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
