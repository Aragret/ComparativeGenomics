%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[89.00654602 418.59890747]
[85.40158844 433.18487549]
[79.80167389 447.12713623]
[72.31579590 460.15435791]
[63.08967972 472.01287842]
[52.30290222 482.47192383]
[40.16544342 491.32788086]
[26.91355324 498.40838623]
[12.80518627 503.57562256]
[-1.88503134 506.72897339]
[-16.87115288 507.80706787]
[-31.86146736 506.78894043]
[-46.56418610 503.69439697]
[-60.69311523 498.58367920]
[-73.97322845 491.55624390]
[-86.14602661 482.74890137]
[-96.97456360 472.33309937]
[-106.24806213 460.51159668]
[-113.78600311 447.51443481]
[-119.44165802 433.59469604]
[-123.10494995 419.02325439]
[-124.70455933 404.08380127]
[-124.20935059 389.06710815]
[-121.62896729 374.26550293]
[-117.01364136 359.96707153]
[-110.45320129 346.45016479]
[-102.07535553 333.97790527]
[-92.04318237 322.79302979]
[-80.55194855 313.11325073]
[-67.82534790 305.12704468]
[-54.11110306 298.98980713]
[-39.67616653 294.82101440]
[-24.80151367 292.70184326]
[-9.77669048 292.67352295]
[5.10584402 294.73660278]
[19.55639648 298.85095215]
[25.63022995 285.13568115]
[31.70406342 271.42041016]
[37.15942001 257.44760132]
[41.98542023 243.24514771]
[46.81141663 229.04269409]
[43.58029175 214.50277710]
[55.34617615 203.92570496]
[60.17217255 189.72325134]
[59.34782410 182.37870789]
[65.17719269 175.34619141]
[70.21411133 161.21716309]
[75.25102234 147.08813477]
[80.28794098 132.95910645]
[85.32485962 118.83007812]
[77.07748413 106.67006683]
[77.51295471 91.98349762]
[86.46631622 80.33350372]
[100.54611206 76.13300323]
[105.58303070 62.00397491]
[110.61994934 47.87494659]
[105.80695343 35.90841293]
[110.29308319 24.24400902]
[121.16433716 18.93905830]
[126.41105652 4.88658762]
[131.65777588 -9.16588306]
[136.90449524 -23.21835518]
[142.15121460 -37.27082443]
[147.29316711 -51.36196518]
[152.33007812 -65.49099731]
[140.70265198 -75.18781281]
[133.10862732 -88.25313568]
[130.44787598 -103.10037994]
[133.02252197 -117.93416595]
[140.50282288 -130.96745300]
[151.96920776 -140.63682556]
[166.02531433 -145.78997803]
[180.96801758 -145.82310486]
[186.00492859 -159.95213318]
[191.04183960 -174.08116150]
[196.07876587 -188.21020508]
[201.11567688 -202.33923340]
[187.41238403 -208.45872498]
[174.22453308 -215.62173462]
[161.63140869 -223.78517151]
[149.70877075 -232.89993286]
[138.52830505 -242.91120911]
[128.15727234 -253.75878906]
[118.65802765 -265.37741089]
[110.08771515 -277.69723511]
[102.49787140 -290.64416504]
[95.93414307 -304.14028931]
[90.43601227 -318.10449219]
[86.03653717 -332.45275879]
[82.76218414 -347.09881592]
[80.63264465 -361.95458984]
[79.66072083 -376.93069458]
[79.85226440 -391.93707275]
[81.20611572 -406.88348389]
[83.71414185 -421.68005371]
[87.36125183 -436.23776245]
[92.12551117 -450.46905518]
[97.97827148 -464.28839111]
[104.88433075 -477.61257935]
[112.80215454 -490.36157227]
[121.68412781 -502.45861816]
[131.47682190 -513.83099365]
[142.12135315 -524.41033936]
[153.55369568 -534.13299561]
[165.70510864 -542.94049072]
[178.50248718 -550.77984619]
[191.86886597 -557.60388184]
[205.72389221 -563.37164307]
[219.98419189 -568.04840088]
[234.56404114 -571.60601807]
[249.37571716 -574.02307129]
[264.33016968 -575.28509521]
[279.33746338 -575.38439941]
[294.30731201 -574.32049561]
[309.14968872 -572.09973145]
[323.77536011 -568.73547363]
[338.09634399 -564.24792480]
[352.02648926 -558.66406250]
[365.48205566 -552.01757812]
[378.38208008 -544.34832764]
[390.64901733 -535.70251465]
[402.20907593 -526.13201904]
[412.99273682 -515.69458008]
[422.93511963 -504.45278931]
[431.97647095 -492.47439575]
[440.06237793 -479.83135986]
[447.14422607 -466.59973145]
[453.17944336 -452.85910034]
[458.13168335 -438.69210815]
[461.97119141 -424.18395996]
[464.67489624 -409.42190552]
[466.22650146 -394.49472046]
[466.61669922 -379.49218750]
[465.84310913 -364.50454712]
[463.91043091 -349.62188721]
[460.83026123 -334.93377686]
[456.62112427 -320.52850342]
[451.30834961 -306.49273682]
[444.92385864 -292.91088867]
[437.50607300 -279.86462402]
[429.09960938 -267.43243408]
[419.75503540 -255.68905640]
[409.52850342 -244.70513916]
[398.48156738 -234.54672241]
[386.68063354 -225.27491760]
[374.19668579 -216.94548035]
[361.10479736 -209.60850525]
[347.48373413 -203.30813599]
[333.41540527 -198.08222961]
[318.98437500 -193.96224976]
[304.27749634 -190.97294617]
[289.38320923 -189.13232422]
[274.39105225 -188.45143127]
[259.39120483 -188.93437195]
[244.47389221 -190.57824707]
[229.72883606 -193.37316895]
[215.24470520 -197.30230713]
[210.20779419 -183.17327881]
[205.17086792 -169.04425049]
[200.13395691 -154.91522217]
[195.09704590 -140.78619385]
[206.64897156 -131.30789185]
[214.27534485 -118.42504883]
[217.03909302 -103.68272400]
[214.58770752 -88.85665894]
[207.19798279 -75.73941803]
[195.74501038 -65.92363739]
[181.59851074 -60.60867691]
[166.45910645 -60.45407867]
[161.42219543 -46.32505035]
[162.13710022 -38.96905136]
[156.20367432 -32.02410889]
[150.95695496 -17.97163582]
[145.71023560 -3.91916513]
[140.46353149 10.13330650]
[135.21681213 24.18577766]
[139.04948425 41.31112671]
[124.74897766 52.91186142]
[119.71205902 67.04089355]
[114.67514038 81.16992188]
[122.92251587 93.32993317]
[122.48704529 108.01650238]
[113.53368378 119.66649628]
[99.45388794 123.86699677]
[94.41696930 137.99601746]
[89.38005066 152.12504578]
[84.34313965 166.25408936]
[79.30622101 180.38311768]
[74.37462616 194.54924011]
[69.54862976 208.75170898]
[72.43457031 224.30746460]
[61.01387024 233.86869812]
[56.18787384 248.07115173]
[51.36187744 262.27359009]
[65.26065063 256.63232422]
[79.13065338 262.34396362]
[85.02651215 276.13668823]
[79.57082367 290.10934448]
[65.88883972 296.25781250]
[51.81823349 291.05990601]
[45.41933060 277.49423218]
[39.34549713 291.20950317]
[33.27166367 304.92477417]
[46.03011703 312.86001587]
[57.55998611 322.49371338]
[67.63683319 333.63836670]
[76.06452179 346.07702637]
[82.67899323 359.56756592]
[87.35149384 373.84741211]
[89.99108124 388.63858032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 203]
[37 202]
[38 201]
[39 194]
[40 193]
[41 192]
[43 190]
[44 189]
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[54 180]
[55 179]
[56 178]
[59 176]
[60 175]
[61 174]
[62 173]
[63 172]
[64 170]
[65 169]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
