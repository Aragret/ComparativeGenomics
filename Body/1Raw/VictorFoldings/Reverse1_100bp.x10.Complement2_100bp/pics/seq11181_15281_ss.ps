%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[91.83483887 696.86132812]
[78.59804535 686.26776123]
[85.11328888 670.61566162]
[85.55989838 655.62231445]
[86.00650024 640.62896729]
[86.45310974 625.63562012]
[77.31442261 610.65393066]
[87.12223816 595.06903076]
[87.34556580 580.07073975]
[87.56889343 565.07238770]
[87.79222107 550.07403564]
[88.01554871 535.07568359]
[88.23887634 520.07739258]
[88.46220398 505.07904053]
[80.91524506 492.23797607]
[88.85715485 478.55453491]
[89.08048248 463.55618286]
[89.30381012 448.55786133]
[89.52713776 433.55950928]
[89.75046539 418.56118774]
[74.71574402 414.98602295]
[60.84352493 408.15951538]
[48.82738876 398.41949463]
[39.26889038 386.24963379]
[32.64743805 372.25521851]
[29.29623413 357.13333130]
[29.38552475 341.63784790]
[32.91394806 326.54199219]
[39.70844269 312.59979248]
[49.43275070 300.50830078]
[61.60403442 290.87283325]
[75.61686707 284.17660522]
[90.77333832 280.75656128]
[90.77333832 265.75656128]
[90.77333832 250.75654602]
[90.77333832 235.75654602]
[80.47693634 228.00970459]
[76.46250916 215.56115723]
[80.40892029 202.88691711]
[91.08935547 194.68064880]
[91.31268311 179.68231201]
[83.76573181 166.84124756]
[91.70764160 153.15780640]
[91.93096924 138.15946960]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[84.36644745 70.92938995]
[81.62219238 60.63137054]
[84.92926788 50.73128891]
[92.96672821 44.42159271]
[93.41333008 29.42824173]
[93.85993958 14.43489170]
[94.30654144 -0.55845797]
[94.75315094 -15.55180836]
[85.65102386 -31.55908203]
[95.44956207 -46.11777878]
[95.67288971 -61.11611557]
[95.89621735 -76.11444855]
[96.11954498 -91.11279297]
[96.34287262 -106.11112976]
[96.56620026 -121.10946655]
[96.78952789 -136.10780334]
[97.01285553 -151.10614014]
[84.64832306 -157.64686584]
[76.34777832 -168.82350159]
[73.68531799 -182.42091370]
[77.12459564 -195.77458191]
[85.93920135 -206.29272461]
[98.36525726 -211.95932007]
[98.81185913 -226.95266724]
[99.25846863 -241.94601440]
[99.70507812 -256.93936157]
[90.60295105 -272.94665527]
[100.40148926 -287.50534058]
[100.62481689 -302.50366211]
[100.84814453 -317.50201416]
[101.07147217 -332.50033569]
[93.61882782 -319.48272705]
[82.20814514 -309.74639893]
[68.17994690 -304.43515015]
[53.18223572 -304.17291260]
[38.97694016 -308.99053955]
[27.23287773 -318.32205200]
[19.32973480 -331.07119751]
[16.19595909 -345.74017334]
[18.19970703 -360.60574341]
[25.10557747 -373.92147827]
[36.10227966 -384.12307739]
[49.89792633 -390.01205444]
[64.87182617 -390.89660645]
[79.26485443 -386.67276001]
[91.38613129 -377.83679199]
[99.81166840 -365.42669678]
[103.55175781 -350.89886475]
[107.30805969 -365.42089844]
[111.06436157 -379.94296265]
[97.47184753 -386.39587402]
[85.34635162 -395.30480957]
[75.12620544 -406.34768677]
[67.18084717 -419.12530518]
[61.79751205 -433.17578125]
[59.17079544 -447.99121094]
[59.39565277 -463.03601074]
[62.46395874 -477.76632690]
[68.26479340 -491.64965820]
[76.58846283 -504.18414307]
[87.13406372 -514.91662598]
[99.52038574 -523.45922852]
[113.29967499 -529.50305176]
[127.97381592 -532.82958984]
[143.01234436 -533.31872559]
[157.87162781 -530.95263672]
[172.01451111 -525.81695557]
[184.92973328 -518.09729004]
[196.15043640 -508.07269287]
[205.27098083 -496.10559082]
[211.96166992 -482.62850952]
[215.98063660 -468.12872314]
[217.18260193 -453.13031006]
[215.52412415 -438.17553711]
[211.06513977 -423.80493164]
[203.96684265 -410.53802490]
[194.48583984 -398.85440063]
[182.96485901 -389.17642212]
[169.82037354 -381.85391235]
[155.52754211 -377.15161133]
[140.60305786 -375.23950195]
[125.58641815 -376.18667603]
[121.83012390 -361.66461182]
[118.07382202 -347.14254761]
[116.06980896 -332.27700806]
[115.84648132 -317.27868652]
[115.62315369 -302.28033447]
[115.39982605 -287.28201294]
[123.59725189 -278.38656616]
[123.53393555 -265.88937378]
[114.69842529 -256.49276733]
[114.25181580 -241.49940491]
[113.80521393 -226.50605774]
[113.35860443 -211.51271057]
[127.30942535 -203.35874939]
[135.29048157 -189.20040894]
[135.04096985 -172.85554504]
[126.53428650 -158.78671265]
[112.01119232 -150.88281250]
[111.78786469 -135.88447571]
[111.56453705 -120.88613892]
[111.34120941 -105.88780212]
[111.11788177 -90.88946533]
[110.89455414 -75.89112091]
[110.67122650 -60.89278793]
[110.44789886 -45.89445114]
[118.64532471 -36.99901581]
[118.58201599 -24.50182343]
[109.74649811 -15.10520172]
[109.29989624 -0.11185205]
[108.85328674 14.88149834]
[108.40668488 29.87484741]
[107.96007538 44.86819839]
[118.34616852 61.17819595]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[106.92930603 138.38279724]
[106.70597839 153.38113403]
[114.23695374 167.29496765]
[106.31101990 179.90563965]
[106.08769226 194.90397644]
[118.49967957 207.23126221]
[118.16259766 224.38354492]
[105.77333832 235.75654602]
[105.77333832 250.75654602]
[105.77333832 265.75656128]
[105.77333832 280.75656128]
[120.01697540 283.86672974]
[133.29388428 289.87515259]
[145.02182007 298.51556396]
[154.68702698 309.40628052]
[161.86677551 322.06716919]
[166.24784851 335.94076538]
[167.64016724 350.41677856]
[165.98510742 364.85900879]
[161.35786438 378.63327026]
[153.96414185 391.13516235]
[144.13096619 401.81677246]
[132.29216003 410.21051025]
[118.96933746 415.94967651]
[104.74880219 418.78451538]
[104.52547455 433.78283691]
[104.30214691 448.78118896]
[104.07881927 463.77951050]
[103.85549164 478.77786255]
[111.38647461 492.69168091]
[103.46054077 505.30236816]
[103.23721313 520.30072021]
[103.01388550 535.29901123]
[102.79055786 550.29736328]
[102.56723022 565.29571533]
[102.34390259 580.29406738]
[102.12057495 595.29235840]
[110.52769470 605.07415771]
[110.03291321 617.56170654]
[101.44645691 626.08221436]
[100.99985504 641.07556152]
[100.55324554 656.06890869]
[100.10664368 671.06225586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[16 196]
[17 195]
[18 194]
[19 193]
[20 192]
[33 178]
[34 177]
[35 176]
[36 175]
[40 172]
[41 171]
[43 169]
[44 168]
[45 167]
[46 166]
[47 164]
[48 163]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[65 147]
[71 142]
[72 141]
[73 140]
[74 139]
[76 136]
[77 135]
[78 134]
[79 133]
[96 132]
[97 131]
[98 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
