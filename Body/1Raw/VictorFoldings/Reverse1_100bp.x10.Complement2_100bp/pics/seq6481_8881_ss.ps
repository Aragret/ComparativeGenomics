%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[111.98357391 504.30895996]
[108.43000031 489.71755981]
[106.62718201 474.80828857]
[106.60041809 459.79046631]
[108.35009003 444.87484741]
[111.85163879 430.27090454]
[117.05590057 416.18359375]
[123.88981628 402.81072998]
[132.25746155 390.33999634]
[142.04135132 378.94650269]
[153.10414124 368.79016113]
[165.29052734 360.01358032]
[178.42942810 352.73995972]
[172.76664734 338.84994507]
[167.10385132 324.95993042]
[161.44107056 311.06988525]
[155.67503357 297.22241211]
[147.72860718 309.94461060]
[132.84574890 311.81564331]
[121.99756622 301.45623779]
[123.18092346 286.50299072]
[135.52349854 277.97885132]
[149.92556763 282.16641235]
[145.09957886 267.96395874]
[140.27357483 253.76150513]
[135.44757080 239.55905151]
[130.31919861 234.23725891]
[130.65716553 225.10906982]
[126.04315948 210.83634949]
[121.42914581 196.56361389]
[116.81513977 182.29087830]
[112.20112610 168.01814270]
[108.43236542 165.08462524]
[106.46640778 159.75245667]
[107.66908264 153.25129700]
[103.48207092 138.84751892]
[99.29505920 124.44373322]
[95.10804749 110.03994751]
[90.81392670 95.66773987]
[86.41292572 81.32788849]
[82.01192474 66.98804474]
[70.62570953 63.56887817]
[62.38811874 55.16394043]
[59.26296234 43.94220734]
[61.91518784 32.72251892]
[69.57331848 24.26561546]
[65.60122681 9.80109215]
[61.62912750 -4.66343212]
[50.82574463 -11.70969009]
[47.81515884 -23.83899879]
[53.68194580 -34.41762543]
[49.92564774 -48.93968582]
[46.16934586 -63.46174622]
[33.00423431 -67.54471588]
[23.64994621 -77.52047729]
[20.47180176 -90.71020508]
[24.19596481 -103.64368439]
[33.74689865 -112.97222900]
[30.20722580 -127.54860687]
[26.66755295 -142.12498474]
[23.12788200 -156.70135498]
[19.58820915 -171.27772522]
[12.65645313 -157.97544861]
[-0.71852684 -151.18501282]
[-15.54819584 -153.43910217]
[-26.30145264 -163.89700317]
[-28.96759987 -178.65815735]
[-22.55222893 -192.21702576]
[-9.44811535 -199.51649475]
[5.45723057 -197.83403015]
[16.60507202 -187.79615784]
[14.82260513 -202.68986511]
[13.04013920 -217.58358765]
[11.25767326 -232.47731018]
[9.47520733 -247.37101746]
[7.69274187 -262.26473999]
[5.91027594 -277.15844727]
[4.12781000 -292.05218506]
[-10.89298058 -292.22787476]
[-25.76232529 -294.36273193]
[-40.22579193 -298.42019653]
[-54.03588867 -304.33090210]
[-66.95630646 -311.99365234]
[-78.76596069 -321.27734375]
[-89.26277924 -332.02313232]
[-98.26713562 -344.04711914]
[-105.62496948 -357.14358521]
[-111.21035767 -371.08840942]
[-114.92774200 -385.64300537]
[-116.71351624 -400.55831909]
[-116.53710938 -415.57910156]
[-114.40155029 -430.44833374]
[-110.34337616 -444.91159058]
[-104.43202972 -458.72143555]
[-96.76866150 -471.64147949]
[-87.48439789 -483.45068359]
[-76.73812103 -493.94699097]
[-64.71369171 -502.95077515]
[-51.61687469 -510.30798340]
[-37.67177582 -515.89270020]
[-23.11701012 -519.60943604]
[-8.20162868 -521.39447021]
[6.81914473 -521.21734619]
[21.68828583 -519.08105469]
[36.15136719 -515.02221680]
[49.96089935 -509.11019897]
[62.88058853 -501.44622803]
[74.68936157 -492.16140747]
[85.18515778 -481.41461182]
[94.18836975 -469.38977051]
[101.54495239 -456.29260254]
[107.12901306 -442.34722900]
[110.84501648 -427.79229736]
[112.62936401 -412.87683105]
[112.45153046 -397.85607910]
[110.31455231 -382.98703003]
[106.25500488 -368.52413940]
[100.34233856 -354.71487427]
[92.67774200 -341.79556274]
[83.39236450 -329.98724365]
[72.64508057 -319.49194336]
[60.61979294 -310.48931885]
[47.52227783 -303.13336182]
[33.57664871 -297.54995728]
[19.02152634 -293.83465576]
[20.80399323 -278.94091797]
[22.58645821 -264.04721069]
[24.36892509 -249.15348816]
[26.15139008 -234.25976562]
[27.93385696 -219.36605835]
[29.71632195 -204.47233582]
[31.49878883 -189.57861328]
[34.16458511 -174.81739807]
[37.70425797 -160.24102783]
[41.24393082 -145.66465759]
[44.78359985 -131.08827209]
[48.32327271 -116.51190186]
[63.69794083 -110.75889587]
[72.70418549 -96.83591461]
[71.62630463 -80.12246704]
[60.69140625 -67.21804810]
[64.44770813 -52.69598770]
[68.20401001 -38.17392731]
[81.16135406 -26.33863449]
[76.09365082 -8.63552856]
[80.06575012 5.82899570]
[84.03784180 20.29351997]
[100.46408844 28.37400055]
[105.86003876 46.20085144]
[96.35177612 62.58704376]
[100.75276947 76.92689514]
[105.15377045 91.26673889]
[110.34136963 97.43612671]
[109.51183319 105.85293579]
[113.69883728 120.25672150]
[117.88584900 134.66050720]
[122.07286072 149.06428528]
[126.47386169 163.40412903]
[131.08787537 177.67686462]
[135.70187378 191.94960022]
[140.31588745 206.22233582]
[144.92990112 220.49507141]
[149.65003967 234.73304749]
[154.47602844 248.93551636]
[159.30203247 263.13796997]
[164.12802124 277.34042358]
[169.47921753 291.35345459]
[175.71682739 298.02651978]
[175.33110046 305.40710449]
[180.99388123 319.29711914]
[186.65666199 333.18716431]
[192.31945801 347.07717896]
[206.79870605 343.09124756]
[221.64775085 340.84582520]
[236.65815735 340.37243652]
[251.61920166 341.67773438]
[266.32083130 344.74340820]
[280.55667114 349.52642822]
[294.12686157 355.95962524]
[306.84094238 363.95266724]
[318.52035522 373.39340210]
[329.00122070 384.14926147]
[338.13632202 396.06924438]
[345.79748535 408.98599243]
[351.87710571 422.71826172]
[356.28988647 437.07318115]
[358.97384644 451.84924316]
[359.89129639 466.83908081]
[359.02938843 481.83218384]
[356.40020752 496.61813354]
[352.04064941 510.98928833]
[346.01193237 524.74395752]
[338.39871216 537.68902588]
[329.30780029 549.64276123]
[318.86688232 560.43737793]
[307.22253418 569.92132568]
[294.53817749 577.96142578]
[280.99188232 584.44488525]
[266.77386475 589.28057861]
[252.08369446 592.40075684]
[237.12760925 593.76147461]
[222.11555481 593.34368896]
[207.25827026 591.15332031]
[192.76435852 587.22106934]
[178.83728027 581.60211182]
[165.67253113 574.37536621]
[153.45494080 565.64227295]
[142.35601807 555.52545166]
[132.53158569 544.16687012]
[124.11955261 531.72607422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 172]
[14 171]
[15 170]
[16 169]
[17 167]
[23 166]
[24 165]
[25 164]
[26 163]
[28 162]
[29 161]
[30 160]
[31 159]
[32 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 152]
[40 151]
[41 150]
[46 147]
[47 146]
[48 145]
[51 143]
[52 142]
[53 141]
[58 137]
[59 136]
[60 135]
[61 134]
[62 133]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
