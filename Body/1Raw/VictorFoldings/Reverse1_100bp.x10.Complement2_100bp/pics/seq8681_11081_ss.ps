%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[241.93054199 385.79498291]
[252.09281921 374.72491455]
[263.75866699 365.25256348]
[256.09805298 352.35623169]
[249.97940063 348.21087646]
[248.42105103 339.21035767]
[240.95332336 326.20141602]
[227.90676880 319.01553345]
[227.74664307 303.19512939]
[220.27890015 290.18618774]
[205.87911987 286.55551147]
[198.12045288 273.46896362]
[202.02627563 258.38973999]
[194.55853271 245.38079834]
[187.09080505 232.37184143]
[179.62306213 219.36289978]
[172.15531921 206.35394287]
[164.68757629 193.34498596]
[156.27294922 180.92749023]
[146.87080383 169.23991394]
[137.38191223 157.62265015]
[127.89300537 146.00538635]
[118.40411377 134.38812256]
[108.91521454 122.77085876]
[99.42631531 111.15359497]
[89.85119629 99.60729218]
[80.19038391 88.13259125]
[70.52957153 76.65789032]
[60.86876297 65.18319702]
[51.20795059 53.70849228]
[41.54714203 42.23379135]
[31.88633156 30.75909233]
[35.48311996 45.32147980]
[35.90977097 60.31541061]
[33.14687729 75.05876160]
[27.32012749 88.88081360]
[18.69460297 101.15274048]
[7.66270733 111.31626892]
[-5.27368212 118.90901947]
[-19.52604675 123.58557129]
[-34.44599533 125.13317108]
[-49.35477448 123.48141479]
[-63.57413483 118.70545197]
[-76.45718384 111.02254486]
[-87.41783905 100.78222656]
[-95.95745087 88.45036316]
[-101.68753815 74.58795929]
[-104.34740448 59.82567596]
[-103.81605530 44.83509064]
[-100.11766052 30.29817581]
[-93.42047882 16.87626457]
[-84.02917480 5.17996645]
[-72.37099457 -4.25861740]
[-58.97630692 -11.01009274]
[-44.45448685 -14.76731396]
[-29.46617508 -15.35935211]
[-14.69324017 -12.75927258]
[-0.80775315 -7.08536291]
[11.55858898 1.40425253]
[21.84581757 12.32680511]
[17.44482040 -2.01304221]
[13.04382133 -16.35289001]
[8.64282322 -30.69273567]
[4.24182558 -45.03258514]
[0.41922438 -48.58713150]
[-1.46886873 -52.82840347]
[-1.48481834 -56.90452957]
[-0.02005331 -60.11183548]
[-3.77635407 -74.63389587]
[-7.53265476 -89.15595245]
[-20.74116516 -101.98625946]
[-15.39592838 -118.70138550]
[-19.36802483 -133.16590881]
[-23.34012032 -147.63043213]
[-27.31221771 -162.09495544]
[-38.42768097 -173.35359192]
[-34.33685303 -187.67541504]
[-38.30895233 -202.13993835]
[-42.28104782 -216.60446167]
[-47.57121658 -224.05107117]
[-46.20288849 -231.31394958]
[-49.95918655 -245.83601379]
[-53.71548843 -260.35806274]
[-68.76560974 -259.80310059]
[-83.58308411 -262.49685669]
[-97.47488403 -268.31341553]
[-109.79125214 -276.98065186]
[-119.95613098 -288.09323120]
[-127.49410248 -301.13134766]
[-132.05259705 -315.48526001]
[-133.41839600 -330.48355103]
[-131.52761841 -345.42471313]
[-126.46871948 -359.60998535]
[-118.47829437 -372.37585449]
[-107.93007660 -383.12521362]
[-95.31742859 -391.35534668]
[-81.23025513 -396.68130493]
[-66.32744598 -398.85394287]
[-51.30603790 -397.77169800]
[-36.86859894 -393.48513794]
[-23.69040298 -386.19479370]
[-12.38781261 -376.24163818]
[-3.48947334 -364.09118652]
[2.58842468 -350.31173706]
[5.56160688 -335.54779053]
[5.29101181 -320.48986816]
[1.78929591 -305.84225464]
[-4.77975893 -292.29006958]
[-14.10890675 -280.46719360]
[-25.76180649 -270.92654419]
[-39.19342804 -264.11437988]
[-35.43712997 -249.59230042]
[-31.68082809 -235.07025146]
[-27.81652260 -220.57655334]
[-23.84442711 -206.11203003]
[-19.87232971 -191.64750671]
[-9.04097652 -181.42346191]
[-12.84769344 -166.06704712]
[-8.87559700 -151.60252380]
[-4.90350056 -137.13800049]
[-0.93140435 -122.67347717]
[9.42321014 -116.41979980]
[12.85080814 -104.40167236]
[6.98940468 -92.91225433]
[10.74570560 -78.39019775]
[14.50200558 -63.86813354]
[18.58167267 -49.43358231]
[22.98266983 -35.09373474]
[27.38366890 -20.75388718]
[31.78466606 -6.41404057]
[36.18566513 7.92580700]
[43.36103058 21.09828186]
[53.02184296 32.57298279]
[62.68265152 44.04768372]
[72.34346008 55.52238464]
[82.00427246 66.99708557]
[91.66508484 78.47178650]
[101.32589722 89.94647980]
[108.51379395 93.59431458]
[111.04357910 101.66469574]
[120.53247833 113.28195953]
[130.02137756 124.89922333]
[139.51026917 136.51647949]
[148.99917603 148.13374329]
[158.48806763 159.75100708]
[166.34043884 164.41772461]
[168.03021240 171.61260986]
[167.44531250 156.62402344]
[174.34547424 143.30531311]
[186.92700195 135.13798523]
[201.90109253 134.25694275]
[215.35359192 140.89248657]
[223.76802063 153.31010437]
[224.94488525 168.26387024]
[218.57653809 181.84489441]
[206.32766724 190.50312805]
[191.40008545 191.97534180]
[177.69653320 185.87724304]
[185.16427612 198.88619995]
[192.63200378 211.89515686]
[200.09974670 224.90409851]
[207.56748962 237.91305542]
[215.03523254 250.92201233]
[230.02630615 255.15351868]
[237.41433716 268.45281982]
[233.28785706 282.71844482]
[240.75559998 295.72738647]
[254.33628845 303.84378052]
[253.96226501 318.73367310]
[261.43002319 331.74261475]
[268.99438477 344.69561768]
[276.65499878 357.59194946]
[290.55374146 351.87860107]
[305.13629150 348.24990845]
[320.09176636 346.78320312]
[335.10144043 347.50973511]
[349.84533691 350.41406250]
[364.00921631 355.43426514]
[377.29116821 362.46331787]
[389.40808105 371.35140991]
[400.10168457 381.90908813]
[409.14407349 393.91131592]
[416.34243774 407.10226440]
[421.54342651 421.20077515]
[424.63610840 435.90631104]
[425.55462646 450.90545654]
[424.27935791 465.87847900]
[420.83749390 480.50625610]
[415.30239868 494.47695923]
[407.79208374 507.49282837]
[398.46658325 519.27642822]
[387.52468872 529.57653809]
[375.19964600 538.17370605]
[361.75415039 544.88464355]
[347.47479248 549.56622314]
[332.66592407 552.11877441]
[317.64321899 552.48785400]
[302.72686768 550.66558838]
[288.23483276 546.69079590]
[274.47601318 540.64825439]
[261.74368286 532.66668701]
[250.30918884 522.91625977]
[240.41630554 511.60485840]
[232.27587891 498.97348022]
[226.06143188 485.29144287]
[221.90542603 470.85034180]
[219.89643860 455.95797729]
[220.07728577 440.93185425]
[222.44412231 426.09216309]
[226.94651794 411.75527954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[6 170]
[7 169]
[9 167]
[10 166]
[13 163]
[14 162]
[15 161]
[16 160]
[17 159]
[18 158]
[19 147]
[20 145]
[21 144]
[22 143]
[23 142]
[24 141]
[25 140]
[26 138]
[27 137]
[28 136]
[29 135]
[30 134]
[31 133]
[32 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[68 126]
[69 125]
[70 124]
[72 121]
[73 120]
[74 119]
[75 118]
[77 116]
[78 115]
[79 114]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
