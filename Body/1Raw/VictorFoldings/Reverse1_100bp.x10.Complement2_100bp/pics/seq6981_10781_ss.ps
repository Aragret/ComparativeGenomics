%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[36.75769806 588.89715576]
[25.62473106 578.71289062]
[17.50781250 565.99371338]
[12.96037006 551.60681152]
[12.29245377 536.53308105]
[15.54960442 521.80035400]
[22.50974274 508.41308594]
[32.69831467 497.28405762]
[45.42065048 489.17205811]
[59.80931473 484.63015747]
[59.13953018 469.64514160]
[58.46974564 454.66009521]
[57.79995728 439.67504883]
[57.13017273 424.69000244]
[56.46038818 409.70498657]
[53.02135086 403.16320801]
[55.89386749 394.49218750]
[47.78105927 382.00091553]
[55.10404587 367.97650146]
[54.65744019 352.98315430]
[54.21083450 337.98980713]
[53.76422882 322.99645996]
[38.64280701 310.71408081]
[37.41051102 290.96603394]
[51.31003952 276.45800781]
[50.19438934 261.49957275]
[49.07874298 246.54110718]
[43.41359329 260.43017578]
[34.51343918 272.50442505]
[22.92252922 282.02548218]
[9.34965134 288.41116333]
[-5.37520790 291.27099609]
[-20.35161591 290.43005371]
[-34.66376114 285.93978882]
[-47.43645096 278.07476807]
[-57.88862991 267.31594849]
[-65.38114166 254.32125854]
[-69.45581818 239.88529968]
[-69.86349487 224.89083862]
[-66.57923126 210.25480652]
[-59.80387497 196.87217712]
[-49.95173264 185.56134033]
[-37.62526703 177.01391602]
[-23.57824898 171.75262451]
[-8.66965771 170.09916687]
[6.18883944 172.15466309]
[20.08864021 177.79341125]
[32.17976761 186.67060852]
[41.72284317 198.24340820]
[48.13430405 211.80412292]
[51.02209091 226.52355957]
[54.99418640 212.05903625]
[58.96628189 197.59451294]
[62.93838120 183.12998962]
[66.91047668 168.66546631]
[70.88256836 154.20094299]
[58.37016296 162.47375488]
[43.38012314 161.92724609]
[31.50336456 152.76522827]
[27.16962814 138.40490723]
[31.99528694 124.20233154]
[44.18049240 115.45471954]
[59.18046188 115.42469788]
[71.40058136 124.12348175]
[76.28306580 138.30778503]
[81.94585419 124.41776276]
[87.60864258 110.52774048]
[83.74676514 99.54014587]
[88.22370911 88.78848267]
[98.74255371 83.78895569]
[104.61151123 69.98477936]
[110.48047638 56.18060303]
[116.34943390 42.37642670]
[120.96344757 28.10369301]
[124.28570557 13.47623348]
[127.60796356 -1.15122652]
[130.93022156 -15.77868652]
[134.25248718 -30.40614700]
[136.58796692 -45.22321320]
[137.92620850 -60.16339874]
[139.26443481 -75.10358429]
[136.91313171 -83.93019867]
[140.73544312 -90.25568390]
[138.51579285 -99.11632538]
[142.43186951 -105.38420105]
[144.21432495 -120.27791595]
[145.99679565 -135.17163086]
[147.77926636 -150.06535339]
[149.56172180 -164.95907593]
[147.47425842 -173.85177612]
[151.48321533 -180.06065369]
[153.48722839 -194.92617798]
[155.49124146 -209.79170227]
[157.49525452 -224.65724182]
[159.49926758 -239.52276611]
[161.50328064 -254.38829041]
[159.54844666 -263.31109619]
[163.64938354 -269.45959473]
[165.87449646 -284.29364014]
[168.09962463 -299.12768555]
[154.39183044 -305.47378540]
[143.02812195 -315.42581177]
[134.92970276 -328.17700195]
[130.75305176 -342.69360352]
[130.83679199 -357.79888916]
[135.17410278 -372.26834106]
[143.41339111 -384.92892456]
[154.88671875 -394.75436401]
[168.66401672 -400.94812012]
[183.62841797 -403.00811768]
[198.56680298 -400.76736450]
[212.26821899 -394.40747070]
[223.62191772 -384.44403076]
[231.70753479 -371.68475342]
[235.86958313 -357.16394043]
[235.77067566 -342.05874634]
[231.41883850 -327.59365845]
[223.16683960 -314.94134521]
[211.68363953 -305.12744141]
[197.90011597 -298.94754028]
[182.93367004 -296.90255737]
[180.70854187 -282.06851196]
[178.48342896 -267.23446655]
[176.36880493 -252.38427734]
[174.36479187 -237.51875305]
[172.36077881 -222.65322876]
[170.35676575 -207.78768921]
[168.35275269 -192.92216492]
[166.34873962 -178.05664062]
[164.45544434 -163.17660522]
[162.67297363 -148.28288269]
[160.89051819 -133.38917542]
[159.10804749 -118.49545288]
[157.32557678 -103.60173035]
[155.65403748 -88.69515991]
[154.20462036 -73.76535034]
[152.86639404 -58.82516479]
[151.52815247 -43.88497925]
[161.85618591 -54.76301575]
[176.40011597 -58.43375778]
[190.65332031 -53.75979233]
[200.19931030 -42.18939590]
[202.08015442 -27.30777931]
[195.71304321 -13.72617817]
[183.07090759 -5.65299702]
[168.07102966 -5.58979845]
[155.36131287 -13.55616570]
[148.87994385 -27.08388710]
[145.55767822 -12.45642757]
[142.23542786 2.17103314]
[138.91316223 16.79849243]
[135.59089661 31.42595291]
[146.31016541 20.93322182]
[160.49255371 16.04858398]
[175.39968872 17.71518326]
[188.15321350 25.61122894]
[196.29063416 38.21211624]
[198.24073792 53.08481216]
[193.62699890 67.35763550]
[183.34025574 78.27471924]
[169.36669922 83.72814941]
[154.40443420 82.66496277]
[141.34240723 75.29042816]
[132.70272827 63.02846527]
[130.15361023 48.24538803]
[124.28465271 62.04956436]
[118.41568756 75.85374451]
[112.54673004 89.65792084]
[115.01042938 106.25028229]
[101.49866486 116.19052124]
[95.83587646 130.08055115]
[90.17309570 143.97058105]
[85.34709930 158.17303467]
[81.37500000 172.63755798]
[77.40290070 187.10208130]
[73.43080902 201.56660461]
[69.45870972 216.03112793]
[65.48661804 230.49565125]
[64.03719330 245.42546082]
[65.15284729 260.38391113]
[66.26849365 275.34237671]
[75.83333588 280.06863403]
[82.52240753 288.27615356]
[85.18071747 298.44161987]
[83.39344025 308.71386719]
[77.54910278 317.25079346]
[68.75757599 322.54983521]
[69.20418549 337.54321289]
[69.65078735 352.53656006]
[70.09739685 367.52990723]
[78.24214935 381.09359741]
[70.88721466 394.04559326]
[71.44542694 409.03518677]
[72.11521149 424.02023315]
[72.78499603 439.00527954]
[73.45478058 453.99029541]
[74.12456512 468.97534180]
[74.79434967 483.96038818]
[89.53084564 487.20046997]
[102.92617035 494.14511108]
[114.06699371 504.32077026]
[122.19373322 517.03369141]
[126.75228119 531.41711426]
[127.43183899 546.49029541]
[124.18606567 561.22552490]
[117.23626709 574.61816406]
[107.05628967 585.75506592]
[94.34022522 593.87689209]
[79.95507050 598.42987061]
[64.88163757 599.10363770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[17 192]
[19 190]
[20 189]
[21 188]
[22 187]
[25 181]
[26 180]
[27 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 174]
[56 173]
[65 172]
[66 171]
[67 170]
[70 168]
[71 167]
[72 166]
[73 165]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 138]
[80 137]
[81 136]
[83 135]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
