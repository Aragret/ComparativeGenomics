%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[98.59593964 459.65438843]
[87.64834595 448.25588989]
[88.05071259 432.45672607]
[99.56431580 421.63024902]
[99.78764343 406.63192749]
[100.01097107 391.63357544]
[100.23429871 376.63525391]
[100.45762634 361.63690186]
[100.68095398 346.63858032]
[100.23434448 331.64523315]
[99.11869812 316.68676758]
[90.45621490 304.57022095]
[97.14567566 290.23278809]
[96.03002930 275.27435303]
[87.36754608 263.15780640]
[94.05700684 248.82037354]
[91.63822937 246.25486755]
[90.34190369 242.39033508]
[90.76505280 237.76710510]
[93.24079132 233.17169189]
[92.79418182 218.17834473]
[92.34757996 203.18499756]
[91.90097046 188.19165039]
[89.95549011 186.17341614]
[88.69223022 183.26295471]
[88.45503998 179.71624756]
[89.48883057 175.90890503]
[91.90097046 172.29843140]
[92.34757996 157.30508423]
[92.79418182 142.31173706]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.87248230 57.91284180]
[91.31427002 42.92323303]
[90.42145538 27.94982719]
[89.52864075 12.97642136]
[88.63582611 -1.99698472]
[87.74301147 -16.97039032]
[86.85019684 -31.94379616]
[85.95737457 -46.91720200]
[84.50795746 -61.84701157]
[82.50394440 -76.71253967]
[80.49993134 -91.57806396]
[76.96025848 -106.15444183]
[71.92333984 -120.28347015]
[66.88642883 -134.41250610]
[61.84951019 -148.54153442]
[56.81259537 -162.67056274]
[51.77567673 -176.79959106]
[46.73876190 -190.92861938]
[31.99680138 -195.39860535]
[22.82088852 -207.54998779]
[22.56267357 -222.59649658]
[31.11163330 -234.76420593]
[26.07471657 -248.89323425]
[24.31367874 -233.99696350]
[19.71880150 -219.71806335]
[12.46186447 -206.59034729]
[2.81417680 -195.10461426]
[-8.86357784 -185.69026184]
[-22.13481712 -178.69924927]
[-36.50338364 -174.39294434]
[-51.43210220 -172.93234253]
[-66.36285400 -174.37205505]
[-80.73743439 -178.65824890]
[-94.01844025 -185.63067627]
[-105.70935822 -195.02868652]
[-115.37310791 -206.50091553]
[-122.64840698 -219.61845398]
[-127.26325989 -233.89091492]
[-129.04513550 -248.78469849]
[-127.92742920 -263.74301147]
[-123.95191193 -278.20657349]
[-117.26721954 -291.63473511]
[-108.12326813 -303.52539062]
[-96.86190033 -313.43405151]
[-83.90412903 -320.99026489]
[-69.73440552 -325.91152954]
[-54.88246155 -328.01385498]
[-39.90355682 -327.21865845]
[-25.35768127 -323.55566406]
[-11.78864670 -317.16183472]
[0.29625884 -308.27615356]
[10.44523239 -297.23086548]
[18.27884674 -284.43890381]
[23.50267601 -270.38439941]
[25.06319809 -285.30300903]
[26.62372208 -300.22158813]
[28.07314110 -315.15139771]
[29.41137505 -330.09158325]
[30.74960899 -345.03176880]
[16.35865593 -349.45831299]
[3.20270133 -356.78051758]
[-8.14313507 -366.67825317]
[-17.18286133 -378.71890259]
[-23.52130127 -392.37606812]
[-26.88136292 -407.05270386]
[-27.11615944 -422.10720825]
[-24.21542740 -436.88150024]
[-18.30597496 -450.72967529]
[-9.64613533 -463.04638672]
[1.38551807 -473.29315186]
[14.30672932 -481.02203369]
[28.55263901 -485.89520264]
[43.50047684 -487.69961548]
[58.49678802 -486.35635376]
[72.88599396 -481.92416382]
[86.03907013 -474.59677124]
[97.38101196 -464.69454956]
[106.41600037 -452.65036011]
[112.74906921 -438.99072266]
[116.10335541 -424.31274414]
[116.33222961 -409.25814819]
[113.42568207 -394.48501587]
[107.51078796 -380.63916016]
[98.84609985 -368.32586670]
[87.81041718 -358.08343506]
[74.88616943 -350.35961914]
[60.63834000 -345.49206543]
[45.68979263 -343.69354248]
[44.35155869 -328.75335693]
[43.01332474 -313.81317139]
[45.54754257 -306.87057495]
[41.54232788 -298.66107178]
[39.98180389 -283.74246216]
[38.42127991 -268.82385254]
[40.20374680 -253.93014526]
[45.24066162 -239.80111694]
[59.55891037 -235.78543091]
[68.87724304 -223.96881104]
[69.45752716 -208.75312805]
[60.86779022 -195.96553040]
[65.90470886 -181.83650208]
[70.94162750 -167.70747375]
[75.97853851 -153.57844543]
[81.01545715 -139.44941711]
[86.05237579 -125.32038879]
[91.08928680 -111.19136047]
[93.92749023 -125.92039490]
[102.12194824 -138.48426819]
[114.45706177 -147.01919556]
[129.10299683 -150.25907898]
[143.88710022 -147.72328186]
[156.61624146 -139.78800964]
[165.40214539 -127.63037109]
[168.94146729 -113.05390930]
[166.70915222 -98.22094727]
[159.03637695 -85.33186340]
[147.06134033 -76.29868317]
[132.56045532 -72.46141815]
[117.68486786 -74.38930511]
[104.64125824 -81.79635620]
[95.36546326 -93.58207703]
[97.36947632 -78.71655273]
[99.37348938 -63.85102463]
[110.40516663 -74.01478577]
[125.25218201 -71.87795258]
[132.96986389 -59.01570892]
[127.86904144 -44.90962982]
[113.70983124 -39.95818710]
[100.93078613 -47.81001663]
[101.82360077 -32.83661270]
[102.71641541 -17.86320686]
[103.60923004 -2.88980055]
[104.50204468 12.08360481]
[105.39485931 27.05701065]
[106.28768158 42.03041840]
[108.66799164 44.63165283]
[109.90663910 48.51505661]
[109.41470337 53.13147354]
[106.87081909 57.68951416]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[110.58265686 131.56910706]
[111.21181488 136.16882324]
[110.08934784 140.08738708]
[107.78753662 142.75833130]
[107.34092712 157.75169373]
[106.89432526 172.74504089]
[106.89432526 187.74504089]
[107.34092712 202.73838806]
[107.78753662 217.73173523]
[108.23413849 232.72508240]
[109.01546478 247.70472717]
[117.75774384 260.89120483]
[110.98847961 274.15869141]
[112.10413361 289.11715698]
[120.84641266 302.30361938]
[114.07714844 315.57110596]
[115.19280243 330.52957153]
[125.77630615 319.89993286]
[140.77534485 319.72940063]
[151.59776306 330.11569214]
[152.04400635 345.10906982]
[141.85844421 356.12060547]
[126.87582397 356.84243774]
[115.67929077 346.86190796]
[115.45596313 361.86022949]
[115.23263550 376.85858154]
[115.00930786 391.85690308]
[114.78598022 406.85525513]
[114.56265259 421.85357666]
[125.74880981 433.01806641]
[125.68059540 448.82220459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[10 196]
[11 195]
[13 193]
[14 192]
[16 190]
[20 189]
[21 188]
[22 187]
[23 186]
[28 185]
[29 184]
[30 183]
[31 179]
[32 178]
[34 176]
[35 175]
[36 174]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 158]
[45 157]
[46 156]
[47 141]
[48 140]
[49 139]
[50 138]
[51 137]
[52 136]
[53 135]
[57 131]
[58 130]
[89 129]
[90 128]
[91 127]
[92 125]
[93 124]
[94 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
