%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[197.01377869 537.35363770]
[191.10595703 523.55755615]
[186.29878235 509.34045410]
[182.62190247 494.79003906]
[180.09797668 479.99600220]
[178.74255371 465.04953003]
[178.56401062 450.04278564]
[179.56344604 435.06829834]
[181.73468018 420.21838379]
[185.06434631 405.58462524]
[189.53192139 391.25720215]
[195.10983276 377.32446289]
[201.76370239 363.87234497]
[209.45251465 350.98373413]
[218.12886047 338.73809814]
[227.73924255 327.21096802]
[238.22442627 316.47341919]
[249.51972961 306.59161377]
[240.55903625 294.56225586]
[226.75103760 288.97760010]
[224.71208191 273.28833008]
[215.75138855 261.25894165]
[201.09214783 267.61672974]
[185.33201599 270.30032349]
[169.37792969 269.15124512]
[154.14900208 264.23168945]
[140.52349854 255.82110596]
[129.28823853 244.40046692]
[121.09310150 230.62469482]
[116.41352844 215.28507996]
[115.52284241 199.26388550]
[118.47634888 183.48353577]
[125.10790253 168.85356140]
[135.03924561 156.21820068]
[125.72435760 144.46095276]
[116.40947723 132.70370483]
[107.09458923 120.94644928]
[97.77970886 109.18919373]
[92.84121704 107.42135620]
[89.24475861 103.01241302]
[88.36878204 96.94037628]
[79.40808105 84.91100311]
[74.61384583 82.84645844]
[71.41118622 79.48545837]
[70.02742004 75.65136719]
[70.33013916 72.13843536]
[61.91552353 59.72093964]
[53.50090408 47.30344772]
[45.08628464 34.88595200]
[36.67166519 22.46845436]
[28.16484070 10.11394596]
[19.56627655 -2.17689204]
[10.96771240 -14.46772957]
[2.36914802 -26.75856781]
[-10.72746181 -19.41980553]
[-24.48970413 -13.42153168]
[-38.78079987 -8.82336044]
[-53.45871353 -5.67099190]
[-68.37757111 -3.99575591]
[-83.38908386 -3.81430292]
[-98.34407806 -5.12843609]
[-113.09390259 -7.92509413]
[-127.49196625 -12.17648315]
[-141.39517212 -17.84034920]
[-154.66534424 -24.86039925]
[-167.17059326 -33.16686630]
[-178.78663635 -42.67718887]
[-189.39801025 -53.29685593]
[-198.89926147 -64.92031097]
[-207.19596863 -77.43203735]
[-214.20565796 -90.70768738]
[-219.85867310 -104.61531830]
[-224.09881592 -119.01669312]
[-226.88395691 -133.76869202]
[-228.18641663 -148.72470093]
[-227.99325562 -163.73608398]
[-226.30636597 -178.65362549]
[-223.14254761 -193.32907104]
[-218.53321838 -207.61657715]
[-212.52420044 -221.37413025]
[-205.17523193 -234.46501160]
[-196.55931091 -246.75909424]
[-186.76210022 -258.13421631]
[-175.88098145 -268.47732544]
[-164.02406311 -277.68557739]
[-151.30920410 -285.66751099]
[-137.86279297 -292.34375000]
[-123.81843567 -297.64797974]
[-109.31574249 -301.52746582]
[-94.49883270 -303.94366455]
[-79.51498413 -304.87252808]
[-64.51310730 -304.30487061]
[-49.64229965 -302.24627686]
[-35.05036163 -298.71725464]
[-20.88232040 -293.75286865]
[-7.27898502 -287.40243530]
[5.62444496 -279.72909546]
[17.69972610 -270.80911255]
[28.82684326 -260.73114014]
[38.89521027 -249.59530640]
[47.80475616 -237.51231384]
[55.46693802 -224.60224915]
[61.80559921 -210.99343872]
[66.75774384 -196.82110596]
[70.27414703 -182.22612000]
[72.31987000 -167.35354614]
[72.87457275 -152.35118103]
[71.93274689 -137.36813354]
[69.50375366 -122.55332947]
[65.61174011 -108.05399323]
[60.29536819 -94.01422882]
[53.60749435 -80.57358551]
[45.61457825 -67.86563873]
[36.39606476 -56.01668930]
[26.04356956 -45.14450073]
[14.65998554 -35.35713196]
[23.25855064 -23.06629372]
[31.85711479 -10.77545547]
[40.45567703 1.51538205]
[46.86570740 5.19414902]
[49.08916092 14.05383682]
[57.50378036 26.47133255]
[65.91839600 38.88882828]
[74.33301544 51.30632401]
[82.74763489 63.72381973]
[91.43746185 75.95030212]
[100.39815521 87.97968292]
[109.53695679 99.87431335]
[118.85184479 111.63156891]
[128.16671753 123.38881683]
[137.48161316 135.14607239]
[146.79649353 146.90332031]
[159.46118164 140.77839661]
[173.11981201 137.43572998]
[187.16903687 137.02027893]
[200.98889160 139.54769897]
[213.97001648 144.90390015]
[225.54063416 152.85009766]
[235.19168091 163.03346252]
[242.49922180 175.00285339]
[247.14306641 188.22872925]
[248.92077637 202.12663269]
[247.75656128 216.08297729]
[243.70439148 229.48216248]
[236.94560242 241.73370361]
[227.78076172 252.29826355]
[236.74145508 264.32763672]
[251.19039917 270.77270508]
[252.58840942 285.60153198]
[261.54910278 297.63092041]
[274.25088501 289.63726807]
[287.54071045 282.66479492]
[301.33660889 276.75656128]
[315.55352783 271.94897461]
[330.10385132 268.27163696]
[344.89779663 265.74725342]
[359.84423828 264.39138794]
[374.85098267 264.21237183]
[389.82550049 265.21133423]
[404.67547607 267.38214111]
[419.30932617 270.71133423]
[433.63690186 275.17846680]
[447.56979370 280.75595093]
[461.02215576 287.40942383]
[473.91098022 295.09783936]
[486.15686035 303.77380371]
[497.68429565 313.38385010]
[508.42218018 323.86868286]
[518.30432129 335.16369629]
[527.26977539 347.19924927]
[535.26330566 359.90112305]
[542.23565674 373.19097900]
[548.14373779 386.98693848]
[552.95123291 401.20391846]
[556.62835693 415.75427246]
[559.15264893 430.54824829]
[560.50836182 445.49468994]
[560.68719482 460.50143433]
[559.68804932 475.47595215]
[557.51715088 490.32589722]
[554.18774414 504.95974731]
[549.72052002 519.28723145]
[544.14288330 533.22009277]
[537.48925781 546.67236328]
[529.80072021 559.56115723]
[521.12463379 571.80694580]
[511.51446533 583.33422852]
[501.02951050 594.07202148]
[489.73440552 603.95404053]
[477.69876099 612.91943359]
[464.99682617 620.91284180]
[451.70684814 627.88500977]
[437.91085815 633.79296875]
[423.69381714 638.60028076]
[409.14343262 642.27728271]
[394.34942627 644.80139160]
[379.40295410 646.15698242]
[364.39624023 646.33563232]
[349.42172241 645.33636475]
[334.57180786 643.16528320]
[319.93798828 639.83575439]
[305.61053467 635.36834717]
[291.67773438 629.79058838]
[278.22552490 623.13684082]
[265.33685303 615.44818115]
[253.09114075 606.77197266]
[241.56391907 597.16168213]
[230.82624817 586.67663574]
[220.94433594 575.38140869]
[211.97909546 563.34570312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 150]
[19 149]
[21 147]
[22 146]
[34 132]
[35 131]
[36 130]
[37 129]
[38 128]
[41 127]
[42 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 119]
[52 118]
[53 117]
[54 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
