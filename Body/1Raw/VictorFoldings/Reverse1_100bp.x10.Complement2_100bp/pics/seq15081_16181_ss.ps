%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACACCGGGGAGUCUUACUAUAAACCGGAGUGCCCUCCUGUAUCGGAUACUUCCGACAACGAUAUCAACGUUCGUCCUCCUAUUACGGCUACAAAGUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[153.37989807 446.23699951]
[159.74644470 432.58850098]
[168.89852905 420.62802124]
[180.40809631 410.91491699]
[193.73680115 403.90353394]
[189.76470947 389.43902588]
[185.79261780 374.97448730]
[181.82052612 360.50997925]
[177.84841919 346.04544067]
[173.87632751 331.58093262]
[169.90423584 317.11639404]
[165.29022217 302.84365845]
[153.58992004 293.62670898]
[156.01141357 277.99191284]
[150.76469421 263.93945312]
[145.51799011 249.88697815]
[134.64672852 244.58203125]
[130.16059875 232.91761780]
[134.97358704 220.95109558]
[129.93667603 206.82206726]
[124.89975739 192.69303894]
[119.86284637 178.56401062]
[114.82592773 164.43496704]
[109.78900909 150.30593872]
[98.22722626 140.91581726]
[100.88124847 125.31880951]
[95.84432983 111.18978119]
[93.22930145 125.96007538]
[85.51763916 138.82592773]
[73.72393036 148.09461975]
[59.39986038 152.54669189]
[44.42999268 151.59638977]
[30.78387451 145.36874390]
[20.25688934 134.68312073]
[14.23404026 120.94538879]
[13.50773716 105.96298981]
[18.17354012 91.70709991]
[27.61758041 80.05333710]
[40.59733200 72.53495789]
[55.40508652 70.14112854]
[70.09262848 73.18680573]
[82.72755432 81.27126312]
[91.64858246 93.33300781]
[89.86611176 78.43928528]
[88.08364868 63.54557037]
[86.30118561 48.65185547]
[84.51871490 33.75813675]
[81.38867950 29.58082199]
[80.28440094 25.07151413]
[80.99311066 21.05744171]
[83.00456238 18.16151047]
[81.88891602 3.20305705]
[80.77326202 -11.75539589]
[79.65761566 -26.71385002]
[78.54196930 -41.67230225]
[77.42631531 -56.63075638]
[76.31066895 -71.58921051]
[75.19502258 -86.54766083]
[74.07936859 -101.50611877]
[72.85239410 -116.45584869]
[71.51416016 -131.39604187]
[70.17592621 -146.33622742]
[68.83769226 -161.27639771]
[67.49945831 -176.21658325]
[66.16122437 -191.15676880]
[64.82299042 -206.09695435]
[63.48475647 -221.03713989]
[54.54711914 -234.09199524]
[61.11809540 -247.45880127]
[59.77986145 -262.39898682]
[58.44162750 -277.33917236]
[57.10339355 -292.27935791]
[55.32092667 -307.17306519]
[53.09580994 -322.00711060]
[50.87069321 -336.84115601]
[48.64557648 -351.67520142]
[46.42045975 -366.50924683]
[43.86462402 -381.28991699]
[40.97935486 -396.00979614]
[38.09408188 -410.72970581]
[35.20880890 -425.44958496]
[32.32353592 -440.16946411]
[17.28379822 -439.95483398]
[2.44746327 -442.42929077]
[-11.70854187 -447.51330566]
[-24.72916031 -455.04345703]
[-36.19583511 -464.77767944]
[-45.73995590 -476.40307617]
[-53.05472183 -489.54589844]
[-57.90499115 -503.78369141]
[-60.13484955 -518.65875244]
[-59.67261887 -533.69293213]
[-56.53315353 -548.40289307]
[-50.81737518 -562.31585693]
[-42.70902252 -574.98449707]
[-32.46874619 -586.00158691]
[-20.42573166 -595.01300049]
[-6.96710587 -601.72900391]
[7.47448778 -605.93377686]
[22.43481255 -607.49212646]
[37.43295670 -606.35400391]
[51.98679352 -602.55584717]
[65.62847137 -596.21990967]
[77.91947174 -587.54980469]
[88.46469116 -576.82421875]
[96.92514038 -564.38793945]
[103.02885437 -550.64074707]
[106.57962036 -536.02459717]
[107.46330261 -521.00933838]
[105.65148163 -506.07757568]
[101.20241547 -491.70938110]
[94.25910950 -478.36657715]
[85.04476929 -466.47808838]
[73.85559845 -456.42611694]
[61.05128479 -448.53378296]
[47.04342651 -443.05474854]
[49.92869949 -428.33486938]
[52.81397247 -413.61495972]
[55.69924545 -398.89508057]
[58.58451843 -384.17517090]
[61.29102325 -381.91528320]
[63.03738403 -378.23217773]
[63.16662216 -373.59143066]
[61.25450134 -368.73437500]
[63.47961807 -353.90032959]
[65.70473480 -339.06628418]
[67.92985535 -324.23223877]
[70.15496826 -309.39819336]
[72.32649994 -307.62545776]
[73.92665863 -304.88574219]
[74.58362579 -301.39233398]
[74.00959015 -297.48913574]
[72.04357910 -293.61758423]
[73.38181305 -278.67739868]
[74.72004700 -263.73721313]
[76.05828094 -248.79704285]
[84.90019989 -236.81080627]
[78.42494202 -222.37538147]
[79.76317596 -207.43519592]
[81.10140991 -192.49501038]
[82.43964386 -177.55482483]
[83.77787781 -162.61463928]
[85.11611176 -147.67445374]
[86.45434570 -132.73426819]
[87.79257965 -117.79408264]
[91.52029419 -111.41239166]
[89.03782654 -102.62176514]
[90.15347290 -87.66331482]
[91.26911926 -72.70485687]
[92.38477325 -57.74640656]
[93.50041962 -42.78795242]
[94.61606598 -27.82949829]
[95.73171997 -12.87104511]
[96.84736633 2.08740854]
[97.96301270 17.04586220]
[99.41242981 31.97566986]
[101.19490051 46.86938858]
[102.97736359 61.76310349]
[104.75983429 76.65682220]
[106.54229736 91.55053711]
[109.97335815 106.15286255]
[115.01027679 120.28189087]
[126.93233490 130.68261719]
[123.91804504 145.26902771]
[128.95495605 159.39805603]
[133.99186707 173.52708435]
[139.02879333 187.65611267]
[144.06570435 201.78514099]
[149.10263062 215.91416931]
[163.40312195 227.51490784]
[159.57044983 244.64025879]
[164.81716919 258.69271851]
[170.06388855 272.74520874]
[182.13948059 282.96728516]
[179.34269714 297.59695435]
[186.53843689 284.43557739]
[200.89369202 280.08511353]
[214.18511963 287.03765869]
[218.79878235 301.31051636]
[212.09176636 314.72750854]
[197.90615845 319.60281372]
[184.36875916 313.14428711]
[188.34085083 327.60882568]
[192.31294250 342.07336426]
[196.28504944 356.53787231]
[200.25714111 371.00241089]
[204.22923279 385.46691895]
[208.20132446 399.93145752]
[223.24151611 399.15246582]
[238.09745789 401.62533569]
[252.07431030 407.23440552]
[264.51837158 415.71731567]
[274.84756470 426.67730713]
[282.57882690 439.60177612]
[287.35052490 453.88619995]
[288.93945312 468.86248779]
[287.27136230 483.83016968]
[282.42422485 498.08917236]
[274.62472534 510.97259521]
[264.23773193 521.87780762]
[251.74900818 530.29479980]
[237.74269104 535.82989502]
[222.87388611 538.22418213]
[207.83802795 537.36572266]
[193.33837891 533.29461670]
[180.05310059 526.20123291]
[168.60357666 516.41748047]
[159.52531433 504.40084839]
[153.24293518 490.71340942]
[150.05026245 475.99536133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[12 175]
[14 173]
[15 172]
[16 171]
[19 169]
[20 168]
[21 167]
[22 166]
[23 165]
[24 164]
[26 162]
[27 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[69 136]
[70 135]
[71 134]
[72 133]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 120]
[79 119]
[80 118]
[81 117]
[82 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
