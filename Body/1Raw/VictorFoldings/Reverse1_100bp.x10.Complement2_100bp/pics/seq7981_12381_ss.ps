%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[76.91961670 724.92803955]
[61.91131210 725.08508301]
[46.94375610 723.96875000]
[32.12479782 721.58709717]
[17.56120491 717.95727539]
[3.35790992 713.10540771]
[-10.38274860 707.06652832]
[-23.56176758 699.88409424]
[-36.08419037 691.60986328]
[-47.85979462 682.30346680]
[-58.80373001 672.03198242]
[-68.83714294 660.86932373]
[-77.88774872 648.89599609]
[-85.89032745 636.19830322]
[-92.78723145 622.86761475]
[-98.52875519 609.00006104]
[-103.07353973 594.69555664]
[-106.38883209 580.05718994]
[-108.45074463 565.19036865]
[-109.24443054 550.20220947]
[-108.76416016 535.20080566]
[-107.01339722 520.29412842]
[-104.00476074 505.58963013]
[-99.75992584 491.19326782]
[-94.30947876 477.20877075]
[-87.69268036 463.73687744]
[-79.95722198 450.87466431]
[-71.15882874 438.71481323]
[-61.36089325 427.34490967]
[-50.63401413 416.84692383]
[-39.05548096 407.29644775]
[-26.70871735 398.76232910]
[-13.68268299 391.30603027]
[-0.07123362 384.98129272]
[14.02755928 379.83370972]
[28.51211166 375.90029907]
[43.27806091 373.20947266]
[58.21901321 371.78057861]
[73.22731781 371.62393188]
[74.34297180 356.66546631]
[75.45861816 341.70700073]
[68.68936157 328.43951416]
[77.43164062 315.25305176]
[78.54728699 300.29458618]
[79.66293335 285.33612061]
[71.20233917 269.96130371]
[81.69626617 254.82992554]
[82.58908081 239.85652161]
[83.48189545 224.88310242]
[84.37471008 209.90969849]
[85.26752472 194.93629456]
[86.16034698 179.96289062]
[87.05316162 164.98948669]
[87.94597626 150.01608276]
[88.83879089 135.04267883]
[87.08112335 132.85893250]
[86.08256531 129.84736633]
[86.16274261 126.29364014]
[87.53208160 122.59371948]
[90.25671387 119.21283722]
[92.03917694 104.31912231]
[90.10931396 100.98026276]
[89.66053772 96.80695343]
[91.03252411 92.47975159]
[94.24825287 88.80566406]
[96.69397736 74.00639343]
[99.13970184 59.20712280]
[101.58543396 44.40785217]
[86.77302551 38.17274475]
[73.87940216 28.59319878]
[63.64471817 16.22412682]
[56.65530014 1.78043067]
[53.31005859 -13.90432167]
[53.79772568 -29.92600060]
[58.08620834 -45.36203003]
[65.92465210 -59.32451248]
[76.85815430 -71.01131439]
[90.25409698 -79.75211334]
[105.33882904 -85.04689789]
[121.24226379 -86.59451294]
[123.24627686 -101.46004486]
[125.25028992 -116.32556915]
[127.25430298 -131.19110107]
[129.25831604 -146.05662537]
[131.26232910 -160.92214966]
[133.26634216 -175.78768921]
[131.28211975 -180.61572266]
[131.34225464 -185.25788879]
[133.03358459 -188.96658325]
[135.70614624 -191.26652527]
[138.37193298 -206.02775574]
[141.03773499 -220.78897095]
[139.48326111 -229.79016113]
[143.85467529 -235.74940491]
[146.73994446 -250.46929932]
[141.80160522 -265.50006104]
[151.84252930 -276.50137329]
[154.72781372 -291.22125244]
[157.61308289 -305.94116211]
[143.88874817 -312.16525269]
[131.97010803 -321.38711548]
[122.49990082 -333.10940552]
[115.98886108 -346.69995117]
[112.78810883 -361.42584229]
[113.07026672 -376.49291992]
[116.82010651 -391.08865356]
[123.83541870 -404.42590332]
[133.73785400 -415.78540039]
[145.99342346 -424.55456543]
[159.94116211 -430.26043701]
[174.82890320 -432.59536743]
[189.85375977 -431.43341064]
[204.20547485 -426.83721924]
[217.11007690 -419.05465698]
[227.87162781 -408.50546265]
[235.90977478 -395.75851440]
[240.79103088 -381.50122070]
[242.25215149 -366.50250244]
[240.21434021 -351.57116699]
[234.78750610 -337.51251221]
[226.26429749 -325.08465576]
[215.10437012 -314.95782471]
[201.90956116 -307.67813110]
[187.39144897 -303.63821411]
[172.33297729 -303.05587769]
[169.44769287 -288.33599854]
[166.56242371 -273.61608887]
[171.70713806 -259.63821411]
[161.45983887 -247.58403015]
[158.57455444 -232.86413574]
[155.79895020 -218.12316895]
[153.13314819 -203.36195374]
[150.46736145 -188.60073853]
[148.13186646 -173.78367615]
[146.12785339 -158.91813660]
[144.12384033 -144.05261230]
[142.11982727 -129.18708801]
[140.11581421 -114.32155609]
[138.11180115 -99.45602417]
[136.10778809 -84.59049988]
[149.24574280 -79.79481506]
[161.09738159 -72.35708618]
[171.13835144 -62.60326004]
[178.92373657 -50.96183395]
[184.10781860 -37.94502640]
[186.45941162 -24.12622452]
[185.87211609 -10.11474705]
[182.36924744 3.47103810]
[176.10278320 16.03099442]
[167.34687805 27.00973129]
[156.48582458 35.92116547]
[143.99719238 42.37003326]
[130.43084717 46.06943130]
[116.38470459 46.85357666]
[113.93897247 61.65284729]
[111.49324799 76.45211792]
[109.04752350 91.25138855]
[106.93289948 106.10158539]
[105.15042877 120.99530792]
[103.81219482 135.93548584]
[102.91938019 150.90888977]
[102.02656555 165.88230896]
[101.13375092 180.85571289]
[100.24093628 195.82911682]
[99.34811401 210.80252075]
[98.45529938 225.77592468]
[97.56248474 240.74932861]
[96.66967010 255.72273254]
[104.63162231 265.87014771]
[103.57973480 278.32315063]
[94.62139130 286.45178223]
[93.50574493 301.41024780]
[92.39009094 316.36868286]
[99.07955170 330.70611572]
[90.41706848 342.82266235]
[89.30142212 357.78109741]
[88.18577576 372.73956299]
[103.00479889 375.12084961]
[117.56848145 378.75027466]
[131.77189636 383.60174561]
[145.51271057 389.64028931]
[158.69192505 396.82235718]
[171.21455383 405.09625244]
[182.99040222 414.40234375]
[193.93460083 424.67358398]
[203.96830750 435.83596802]
[213.01922607 447.80905151]
[221.02212524 460.50659180]
[227.91937256 473.83706665]
[233.66125488 487.70446777]
[238.20640564 502.00885010]
[241.52207947 516.64715576]
[243.58438110 531.51391602]
[244.37844849 546.50201416]
[243.89855957 561.50347900]
[242.14819336 576.41021729]
[239.13993835 591.11474609]
[234.89547729 605.51123047]
[229.44537354 619.49591064]
[222.82893372 632.96795654]
[215.09381104 645.83038330]
[206.29573059 657.99041748]
[196.49807739 669.36059570]
[185.77148438 679.85882568]
[174.19319153 689.40960693]
[161.84664917 697.94403076]
[148.82080078 705.40069580]
[135.20951843 711.72576904]
[121.11086273 716.87377930]
[106.62641144 720.80749512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 177]
[40 176]
[41 175]
[43 173]
[44 172]
[45 171]
[47 168]
[48 167]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[60 159]
[61 158]
[65 157]
[66 156]
[67 155]
[68 154]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[90 133]
[91 132]
[92 131]
[94 130]
[95 129]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
