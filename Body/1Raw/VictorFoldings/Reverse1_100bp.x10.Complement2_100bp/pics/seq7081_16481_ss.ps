%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[56.90455246 672.32824707]
[44.69184875 681.06811523]
[31.53114700 688.30224609]
[17.60720444 693.92895508]
[3.11548853 697.86932373]
[-11.74055672 700.06805420]
[-26.75237846 700.49420166]
[-41.70922852 699.14184570]
[-56.40114594 696.02990723]
[-70.62187195 691.20214844]
[-84.17176819 684.72631836]
[-96.86061859 676.69329834]
[-108.51029205 667.21582031]
[-118.95723724 656.42706299]
[-128.05480957 644.47839355]
[-135.67529297 631.53759766]
[-141.71168518 617.78631592]
[-146.07926941 603.41754150]
[-148.71672058 588.63311768]
[-149.58702087 573.64050293]
[-148.67794800 558.65014648]
[-146.00225830 543.87255859]
[-141.59751892 529.51519775]
[-135.52555847 515.77954102]
[-127.87162781 502.85848999]
[-118.74317932 490.93338013]
[-108.26834869 480.17169189]
[-96.59420013 470.72442627]
[-83.88461304 462.72427368]
[-70.31800842 456.28347778]
[-56.08484268 451.49252319]
[-41.38492584 448.41864014]
[-26.42462540 447.10494995]
[-11.41395664 447.56994629]
[3.43635106 449.80706787]
[7.40844727 435.34252930]
[11.38054371 420.87802124]
[15.35264015 406.41348267]
[3.10653305 396.14782715]
[-3.46071196 381.51620483]
[-2.98801565 365.42706299]
[4.48071575 351.10302734]
[17.49522781 341.43521118]
[33.48025131 338.39993286]
[37.23654938 323.87786865]
[40.99285126 309.35583496]
[44.74915314 294.83377075]
[39.15564346 278.20007324]
[52.17166519 265.17453003]
[55.71133804 250.59815979]
[51.19591141 236.40449524]
[61.97123718 224.81988525]
[52.20280075 213.60758972]
[50.89425278 198.61587524]
[58.75620651 185.57582092]
[72.95314026 179.59640503]
[76.49281311 165.02003479]
[71.97737885 150.82637024]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[101.19974518 52.21029282]
[101.74249268 47.59957504]
[103.81048584 44.08695984]
[106.70781708 42.07752991]
[103.13015747 26.66613960]
[114.11252594 16.60449409]
[118.29953766 2.20071149]
[122.48654938 -12.20307064]
[125.59066010 -26.87837219]
[127.59467316 -41.74390030]
[129.59869385 -56.60942841]
[131.60270691 -71.47496033]
[133.60671997 -86.34048462]
[131.65187073 -95.26329041]
[135.75282288 -101.41178894]
[137.97793579 -116.24583435]
[140.20306396 -131.07987976]
[142.42817688 -145.91392517]
[144.65328979 -160.74795532]
[146.87841797 -175.58200073]
[147.88267517 -190.54835510]
[147.65934753 -205.54669189]
[147.43601990 -220.54502869]
[136.75558472 -228.75129700]
[132.80917358 -241.42553711]
[136.82359314 -253.87408447]
[147.11999512 -261.62094116]
[147.11999512 -276.62094116]
[147.11999512 -291.62094116]
[147.11999512 -306.62094116]
[132.62248230 -310.86340332]
[119.90819550 -319.01962280]
[110.00785065 -330.42837524]
[103.72400665 -344.16482544]
[101.56607819 -359.11541748]
[103.70898438 -374.06814575]
[109.97902679 -387.81091309]
[119.86791229 -399.22961426]
[132.57398987 -407.39859009]
[147.06723022 -411.65563965]
[162.17276001 -411.65563965]
[176.66600037 -407.39859009]
[189.37208557 -399.22961426]
[199.26097107 -387.81091309]
[205.53100586 -374.06814575]
[207.67391968 -359.11541748]
[205.51599121 -344.16482544]
[199.23214722 -330.42837524]
[189.33180237 -319.01962280]
[176.61752319 -310.86340332]
[162.11999512 -306.62094116]
[162.11999512 -291.62094116]
[162.11999512 -276.62094116]
[162.11999512 -261.62094116]
[174.50924683 -250.24792480]
[174.84634399 -233.09564209]
[162.43435669 -220.76835632]
[162.65768433 -205.77001953]
[162.88101196 -190.77168274]
[171.15354919 -203.28427124]
[184.24864197 -210.59989929]
[199.24081421 -211.08424377]
[212.78079224 -204.62905884]
[221.84368896 -192.67649841]
[224.40483093 -177.89675903]
[219.89207458 -163.59169006]
[209.31355286 -152.95707703]
[195.03256226 -148.36872864]
[180.23948669 -150.85166931]
[168.23915100 -159.85122681]
[161.71244812 -173.35688782]
[159.48733521 -158.52284241]
[157.26222229 -143.68879700]
[155.03710938 -128.85475159]
[152.81198120 -114.02071381]
[150.58686829 -99.18666840]
[148.47224426 -84.33647156]
[146.46823120 -69.47094727]
[144.46421814 -54.60541534]
[142.46020508 -39.73988724]
[140.45619202 -24.87435913]
[150.84431458 -35.69502258]
[165.22320557 -39.96676254]
[179.83422852 -36.57295990]
[190.85810852 -26.40074539]
[195.41323853 -12.10910988]
[192.30891418 2.56614566]
[182.35658264 13.78894520]
[168.15777588 18.62567520]
[153.42402649 15.81202793]
[142.00669861 6.08348179]
[136.89033508 -8.01605892]
[132.70332336 6.38772249]
[128.51631165 20.79150391]
[132.39344788 35.17263794]
[121.11159515 46.26454163]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[101.59133148 158.01770020]
[91.06918335 168.55970764]
[87.52951050 183.13607788]
[97.40299225 194.96066284]
[98.40882111 210.15412903]
[90.37039185 222.87606812]
[76.54761505 228.35955811]
[80.80986023 243.59582520]
[70.28771210 254.13783264]
[66.74803925 268.71420288]
[72.77985382 280.11508179]
[69.53157043 292.18292236]
[59.27120972 298.59005737]
[55.51491165 313.11212158]
[51.75860977 327.63418579]
[48.00230789 342.15625000]
[59.13509750 350.86300659]
[66.08746338 363.11816406]
[67.83847046 377.05514526]
[64.15650940 390.56564331]
[55.62933350 401.61856079]
[43.57051468 408.56524658]
[29.81716347 410.38558960]
[25.84506798 424.85009766]
[21.87297058 439.31463623]
[17.90087509 453.77914429]
[31.81101608 459.43991089]
[44.95398712 466.70620728]
[57.14527893 475.47595215]
[68.21374512 485.62609863]
[78.00400543 497.01412964]
[86.37861633 509.48016357]
[93.22001648 522.84924316]
[98.43215179 536.93359375]
[101.94186401 551.53558350]
[103.69987488 566.45019531]
[103.68151093 581.46807861]
[101.88702393 596.37835693]
[98.34161377 610.97174072]
[93.09503937 625.04333496]
[86.22097015 638.39562988]
[77.81589508 650.84112549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 194]
[36 193]
[37 192]
[38 191]
[44 184]
[45 183]
[46 182]
[47 181]
[49 178]
[50 177]
[52 175]
[56 171]
[57 170]
[59 168]
[60 167]
[61 166]
[63 164]
[64 163]
[65 162]
[69 161]
[71 159]
[72 158]
[73 157]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[86 124]
[87 123]
[88 122]
[92 119]
[93 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
