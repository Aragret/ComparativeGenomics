%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[226.35673523 556.18218994]
[237.12496948 545.61303711]
[250.26226807 538.19183350]
[246.50598145 523.66979980]
[242.74967957 509.14773560]
[238.03132629 503.45922852]
[239.04727173 494.38146973]
[235.50759888 479.80508423]
[221.17701721 475.74310303]
[210.73426819 464.98181152]
[207.05578613 450.34161377]
[211.22657776 435.72994995]
[222.22282410 425.09838867]
[218.68315125 410.52203369]
[215.14347839 395.94564819]
[211.60380554 381.36926270]
[208.06413269 366.79290771]
[203.66314697 352.45306396]
[198.41642761 338.40057373]
[193.16970825 324.34811401]
[187.92298889 310.29562378]
[182.67626953 296.24316406]
[177.42955017 282.19070435]
[171.45799255 268.43060303]
[158.86228943 260.48089600]
[159.64408875 244.67901611]
[152.96389771 231.24864197]
[146.28369141 217.81826782]
[142.12147522 215.47627258]
[139.38629150 210.49473572]
[139.61126709 203.88708496]
[133.33390808 190.26377869]
[127.05654144 176.64045715]
[114.70311737 168.31927490]
[115.95504761 152.54766846]
[109.67768860 138.92436218]
[103.40032959 125.30104065]
[97.12297058 111.67772675]
[90.64347076 98.14938354]
[83.96327972 84.71900177]
[70.88976288 75.80868530]
[72.14937592 60.96743393]
[65.46918488 47.53705597]
[58.78899002 34.10668182]
[52.10879517 20.67630577]
[45.42860031 7.24592972]
[32.35508728 -1.66439223]
[33.61470032 -16.50564003]
[26.93450737 -29.93601608]
[20.25431252 -43.36639404]
[7.18079901 -52.27671432]
[8.44041252 -67.11796570]
[1.76021779 -80.54833984]
[-11.31329441 -89.45866394]
[-10.05368137 -104.29991150]
[-23.12719345 -113.21022797]
[-21.86758041 -128.05148315]
[-28.54777527 -141.48185730]
[-35.22797012 -154.91223145]
[-41.85171509 -161.20220947]
[-41.90596771 -168.59266663]
[-54.84537125 -177.69664001]
[-53.36493301 -192.51748657]
[-59.84442902 -206.04583740]
[-66.32392120 -219.57418823]
[-72.80342102 -233.10252380]
[-79.28291321 -246.63087463]
[-93.56158447 -241.96453857]
[-108.32717896 -239.20191956]
[-123.32705688 -238.39028931]
[-138.30453491 -239.54354858]
[-153.00334167 -242.64195251]
[-167.17196655 -247.63247681]
[-180.56794739 -254.42973328]
[-192.96206665 -262.91741943]
[-204.14224243 -272.95028687]
[-213.91717529 -284.35668945]
[-222.11961365 -296.94140625]
[-228.60917664 -310.48910522]
[-233.27482605 -324.76800537]
[-236.03674316 -339.53372192]
[-236.84765625 -354.53366089]
[-235.69369507 -369.51107788]
[-232.59458923 -384.20974731]
[-227.60339355 -398.37811279]
[-220.80549622 -411.77377319]
[-212.31721497 -424.16748047]
[-202.28381348 -435.34719849]
[-190.87695312 -445.12158203]
[-178.29185486 -453.32342529]
[-164.74382019 -459.81234741]
[-150.46472168 -464.47732544]
[-135.69885254 -467.23852539]
[-120.69889832 -468.04873657]
[-105.72152710 -466.89404297]
[-91.02301025 -463.79425049]
[-76.85487366 -458.80236816]
[-63.45954132 -452.00384521]
[-51.06623077 -443.51495361]
[-39.88700104 -433.48101807]
[-30.11315346 -422.07369995]
[-21.91192245 -409.48822021]
[-15.42364788 -395.93988037]
[-10.75934887 -381.66055298]
[-7.99883938 -366.89456177]
[-7.18935490 -351.89456177]
[-8.34474754 -336.91723633]
[-11.44524574 -322.21887207]
[-16.43779564 -308.05096436]
[-23.23697090 -294.65597534]
[-31.72642517 -282.26306152]
[-41.76089478 -271.08432007]
[-53.16867828 -261.31100464]
[-65.75457001 -253.11036682]
[-59.27507401 -239.58203125]
[-52.79557800 -226.05368042]
[-46.31608200 -212.52532959]
[-39.83658600 -198.99699402]
[-27.36064148 -190.86064148]
[-28.37762260 -175.07215881]
[-21.79759407 -161.59242249]
[-15.11739922 -148.16204834]
[-8.43720531 -134.73167419]
[4.15849543 -126.78198242]
[3.37669444 -110.98010254]
[15.97239494 -103.03041077]
[15.19059372 -87.22853088]
[21.87078857 -73.79815674]
[34.46648788 -65.84846497]
[33.68468857 -50.04658508]
[40.36488342 -36.61621094]
[47.04507828 -23.18583488]
[59.64077759 -15.23614311]
[58.85897827 0.56573516]
[65.53916931 13.99611092]
[72.21936798 27.42648697]
[78.89955902 40.85686493]
[85.57975769 54.28723907]
[98.17545319 62.23693085]
[97.39365387 78.03881073]
[104.07385254 91.46918488]
[108.53960419 94.22073364]
[111.14582062 99.27849579]
[110.74628448 105.40036774]
[117.02364349 119.02368164]
[123.30101013 132.64700317]
[129.57836914 146.27030945]
[142.38078308 155.56593323]
[140.67985535 170.36309814]
[146.95721436 183.98641968]
[153.23457336 197.60972595]
[159.71408081 211.13807678]
[166.39427185 224.56845093]
[173.07446289 237.99882507]
[186.14797974 246.90914917]
[184.88836670 261.75039673]
[189.57817078 247.50239563]
[202.26252747 239.49569702]
[217.14231873 241.39088440]
[227.41470337 252.32148743]
[228.38330078 267.29019165]
[219.60525513 279.45349121]
[205.09378052 283.25048828]
[191.48202515 276.94396973]
[196.72874451 290.99645996]
[201.97546387 305.04891968]
[207.22216797 319.10137939]
[212.46888733 333.15386963]
[217.71560669 347.20632935]
[223.01753235 333.17459106]
[235.49082947 324.84292603]
[250.48327637 325.31881714]
[262.40304565 334.42477417]
[266.80441284 348.76452637]
[262.04571533 362.98968506]
[249.90184021 371.79458618]
[234.90217590 371.89526367]
[222.64051819 363.25323486]
[226.18019104 377.82958984]
[229.71986389 392.40597534]
[233.25953674 406.98236084]
[236.79920959 421.55871582]
[251.44670105 425.96304321]
[261.85430908 437.03454590]
[265.29989624 451.73129272]
[260.95559692 466.08340454]
[250.08396912 476.26541138]
[253.62364197 490.84179688]
[257.27172852 505.39141846]
[261.02804565 519.91345215]
[264.78433228 534.43554688]
[279.87234497 534.55590820]
[294.41482544 538.57818604]
[307.42025757 546.22808838]
[318.00189209 556.98406982]
[325.43829346 570.11279297]
[329.22238159 584.71905518]
[329.09619141 599.80700684]
[325.06829834 614.34790039]
[317.41336060 627.35040283]
[306.65328979 637.92785645]
[293.52172852 645.35919189]
[278.91400146 649.13763428]
[263.82611084 649.00561523]
[249.28672791 644.97216797]
[236.28721619 637.31219482]
[225.71388245 626.54803467]
[218.28762817 613.41357422]
[214.51481628 598.80444336]
[214.65266418 583.71655273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[7 188]
[8 187]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 156]
[26 154]
[27 153]
[28 152]
[31 151]
[32 150]
[33 149]
[35 147]
[36 146]
[37 145]
[38 144]
[39 141]
[40 140]
[42 138]
[43 137]
[44 136]
[45 135]
[46 134]
[48 132]
[49 131]
[50 130]
[52 128]
[53 127]
[55 125]
[57 123]
[58 122]
[59 121]
[61 120]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
