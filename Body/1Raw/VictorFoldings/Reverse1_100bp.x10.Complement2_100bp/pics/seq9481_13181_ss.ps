%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[22.88480377 656.63415527]
[13.98168373 668.73022461]
[3.65954900 679.64044189]
[-7.92511845 689.19946289]
[-20.59669876 697.26239014]
[-34.16309357 703.70697021]
[-48.41863632 708.43548584]
[-63.14722443 711.37634277]
[-78.12557220 712.48480225]
[-93.12660980 711.74420166]
[-107.92292023 709.16571045]
[-122.29021454 704.78845215]
[-136.01066589 698.67871094]
[-148.87628174 690.92913818]
[-160.69204712 681.65728760]
[-171.27879333 671.00366211]
[-180.47605896 659.12969971]
[-188.14440918 646.21551514]
[-194.16760254 632.45684814]
[-198.45431519 618.06231689]
[-200.93955994 603.25006104]
[-201.58567810 588.24462891]
[-200.38285828 573.27355957]
[-197.34933472 558.56378174]
[-192.53109741 544.33831787]
[-186.00120544 530.81280518]
[-177.85862732 518.19226074]
[-168.22682190 506.66799927]
[-157.25180054 496.41479492]
[-145.09992981 487.58804321]
[-131.95542908 480.32156372]
[-118.01757812 474.72549438]
[-103.49767303 470.88467407]
[-88.61581421 468.85736084]
[-73.59762573 468.67425537]
[-58.67076492 470.33813477]
[-44.06152725 473.82379150]
[-38.81481171 459.77133179]
[-33.56809235 445.71884155]
[-28.32137489 431.66638184]
[-23.07465553 417.61392212]
[-17.82793808 403.56143188]
[-12.58121967 389.50897217]
[-7.33450127 375.45648193]
[-2.08778310 361.40402222]
[-13.06768894 351.28616333]
[-19.35440254 337.69857788]
[-19.96166229 322.69869995]
[-14.76581860 308.57104492]
[-4.52940989 297.47918701]
[9.21058178 291.13442993]
[24.37345505 290.53195190]
[29.62017250 276.47949219]
[34.76213074 262.38833618]
[39.79904938 248.25930786]
[31.25008774 236.09159851]
[31.50830460 221.04508972]
[40.68421555 208.89370728]
[55.42617798 204.42372131]
[60.46309280 190.29469299]
[65.50000763 176.16566467]
[70.53692627 162.03663635]
[75.57384491 147.90760803]
[71.48662567 130.84121704]
[85.61282349 119.02886200]
[90.43881989 104.82640076]
[93.32409668 90.10651398]
[94.21691132 75.13310242]
[95.10972595 60.15969849]
[92.49665070 51.40700531]
[96.12893677 44.97052383]
[97.24459076 30.01206970]
[98.36023712 15.05361557]
[90.55024719 4.78878164]
[91.78742218 -7.64718056]
[100.86579895 -15.64152813]
[102.20403290 -30.58171272]
[103.54226685 -45.52190018]
[97.06700897 -59.95732880]
[105.90892792 -71.94355774]
[107.24716187 -86.88374329]
[108.58539581 -101.82392883]
[109.92362976 -116.76411438]
[100.10772705 -122.68546295]
[93.24137115 -131.80102539]
[90.28594971 -142.77087402]
[91.63145447 -154.00022888]
[97.04549408 -163.87135315]
[105.71231842 -170.97657776]
[116.35557556 -174.31901550]
[118.35958862 -189.18453979]
[120.36360168 -204.05006409]
[122.36761475 -218.91560364]
[124.37162781 -233.78112793]
[126.37564087 -248.64665222]
[128.15811157 -263.54037476]
[129.71862793 -278.45898438]
[131.27915955 -293.37759399]
[117.24068451 -298.92950439]
[105.22138977 -308.06402588]
[96.11317444 -320.10324097]
[90.59194946 -334.15380859]
[89.06739807 -349.17309570]
[91.65267944 -364.04650879]
[98.15592957 -377.67041016]
[108.09456635 -389.03375244]
[120.73108673 -397.29336548]
[135.12776184 -401.83627319]
[150.21627808 -402.32540894]
[164.87696838 -398.72445679]
[178.02189636 -391.30059814]
[188.67562866 -380.60479736]
[196.04759216 -367.43069458]
[199.59072876 -352.75592041]
[199.04212952 -337.66946411]
[194.44248962 -323.29080200]
[186.13313293 -310.68695068]
[174.73068237 -300.79318237]
[161.08126831 -294.34368896]
[146.19775391 -291.81704712]
[144.63723755 -276.89846802]
[143.07670593 -261.97985840]
[145.33483887 -257.77154541]
[144.97329712 -252.10000610]
[141.24116516 -246.64263916]
[139.23715210 -231.77711487]
[137.23313904 -216.91159058]
[135.22912598 -202.04605103]
[133.22511292 -187.18052673]
[131.22109985 -172.31500244]
[145.46231079 -160.21206665]
[149.56425476 -141.82450867]
[141.69274902 -124.54304504]
[124.86381531 -115.42588043]
[123.52558136 -100.48569489]
[122.18734741 -85.54550934]
[120.84911346 -70.60532379]
[127.42008972 -57.23851776]
[118.48245239 -44.18366623]
[117.14421844 -29.24347878]
[115.80598450 -14.30329418]
[124.03673553 1.19578969]
[113.31868744 16.16926384]
[112.20304108 31.12771797]
[111.08739471 46.08617020]
[110.08312988 61.05251694]
[109.19031525 76.02592468]
[108.29750061 90.99932861]
[116.07919312 78.17570496]
[127.40160370 68.33685303]
[141.18556213 62.42055130]
[156.11724854 60.99069977]
[170.77349854 64.18358612]
[183.75733948 71.69487762]
[193.83126831 82.80866241]
[200.03507996 96.46562195]
[201.77748108 111.36408234]
[198.89237976 126.08400726]
[191.65476990 139.22239685]
[180.75450134 149.52696228]
[167.23051453 156.01556396]
[152.37184143 158.06973267]
[137.59469604 155.49368286]
[124.30755615 148.53294373]
[113.77685547 137.85098267]
[107.00632477 124.46591187]
[104.64128113 109.65239716]
[99.81527710 123.85485840]
[104.80590820 135.74839783]
[100.49393463 147.47830200]
[89.70287323 152.94451904]
[84.66595459 167.07356262]
[79.62903595 181.20259094]
[74.59212494 195.33161926]
[69.55520630 209.46064758]
[78.14494324 222.24824524]
[77.56465912 237.46391296]
[68.24632263 249.28054810]
[53.92807770 253.29623413]
[48.89116287 267.42526245]
[48.95719528 276.55944824]
[43.67264175 281.72619629]
[38.42592621 295.77868652]
[49.48368073 306.17105103]
[55.70342255 319.96807861]
[56.16574097 335.05450439]
[50.83132172 349.13043213]
[40.54216003 360.06192017]
[26.88883781 366.20458984]
[11.96468830 366.65075684]
[6.71796989 380.70321655]
[1.47125185 394.75567627]
[-3.77546644 408.80816650]
[-9.02218437 422.86062622]
[-14.26890278 436.91308594]
[-19.51562119 450.96557617]
[-24.76233864 465.01803589]
[-30.00905800 479.07052612]
[-16.69020653 486.01226807]
[-4.32539129 494.53814697]
[6.89794016 504.51895142]
[16.80964470 515.80334473]
[25.25946617 528.22027588]
[32.11930466 541.58154297]
[37.28516769 555.68444824]
[40.67874146 570.31536865]
[42.24858093 585.25244141]
[41.97088623 600.26916504]
[39.84986877 615.13793945]
[35.91768646 629.63336182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 198]
[38 197]
[39 196]
[40 195]
[41 194]
[42 193]
[43 192]
[44 191]
[45 190]
[52 183]
[53 182]
[54 180]
[55 179]
[59 175]
[60 174]
[61 173]
[62 172]
[63 171]
[65 168]
[66 167]
[67 148]
[68 147]
[69 146]
[71 145]
[72 144]
[73 143]
[76 141]
[77 140]
[78 139]
[80 137]
[81 136]
[82 135]
[83 134]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
