%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[41.31515884 432.80316162]
[35.07241821 447.00909424]
[21.65496635 454.80340576]
[6.22209263 453.18911743]
[-5.29195070 442.78686523]
[-8.45977974 427.59658813]
[-2.06329775 413.45925903]
[11.43791580 405.81091309]
[12.99843884 390.89230347]
[14.55896187 375.97372437]
[16.11948586 361.05511475]
[17.68000793 346.13650513]
[5.37588024 354.71603394]
[-9.41468716 352.21823120]
[-18.21898651 340.07391357]
[-15.99351311 325.23992920]
[-4.01312160 316.21383667]
[10.85927773 318.16619873]
[20.10383797 329.97772217]
[22.98911095 315.25781250]
[25.87438393 300.53793335]
[28.75965691 285.81802368]
[17.35596657 295.56256104]
[2.50908065 297.70031738]
[-11.18053246 291.56887817]
[-19.47099686 279.06814575]
[-19.79342270 264.07162476]
[-12.04790211 251.22612000]
[1.36553121 244.51196289]
[16.29057884 246.00961304]
[28.10255241 255.25502014]
[33.14139938 269.38360596]
[37.96739578 255.18116760]
[34.73627090 240.64125061]
[46.50215530 230.06417847]
[51.32815170 215.86170959]
[56.15414810 201.65925598]
[60.98014832 187.45680237]
[60.15579987 180.11225891]
[65.98516846 173.07975769]
[62.97087860 158.49334717]
[74.89293671 148.09262085]
[79.92984772 133.96359253]
[76.91555786 119.37717438]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[99.03736877 71.12110901]
[97.92171478 56.16265488]
[96.80606842 41.20420074]
[95.69042206 26.24574661]
[93.90795135 11.35202885]
[91.46222687 -3.44724154]
[89.01650238 -18.24651146]
[86.57077026 -33.04578400]
[76.68691254 -45.39972687]
[82.24551392 -59.21823883]
[79.79978180 -74.01750946]
[77.35405731 -88.81678009]
[74.90833282 -103.61605072]
[71.59488678 -107.64943695]
[70.29035950 -112.10493469]
[70.81912994 -116.14665222]
[72.69925690 -119.12950897]
[70.91679382 -134.02322388]
[61.59442520 -146.80618286]
[67.76451111 -160.36271667]
[65.98204041 -175.25642395]
[50.52655411 -176.85118103]
[35.81728745 -181.83480835]
[22.58725166 -189.95568848]
[11.49500084 -200.80595398]
[3.09187913 -213.84197998]
[-2.20539689 -228.41157532]
[-4.13539982 -243.78665161]
[-2.60489202 -259.19964600]
[2.30667686 -273.88168335]
[10.35128593 -287.10119629]
[21.12486458 -298.20007324]
[34.08759689 -306.62667847]
[48.59094620 -311.96307373]
[46.58693314 -326.82861328]
[44.58292007 -341.69415283]
[42.57890701 -356.55966187]
[38.33103561 -364.64630127]
[40.65742493 -371.66125488]
[38.87495804 -386.55496216]
[37.09249496 -401.44869995]
[35.31002808 -416.34240723]
[20.34679794 -418.17684937]
[6.25763845 -423.53961182]
[-6.13832855 -432.11883545]
[-16.12041664 -443.41580200]
[-23.10828018 -456.77371216]
[-26.69565392 -471.41589355]
[-26.67397308 -486.49114990]
[-23.04449844 -501.12298584]
[-16.01824188 -514.46069336]
[-6.00370216 -525.72888184]
[6.41688967 -534.27246094]
[20.52141571 -539.59466553]
[35.48986053 -541.38604736]
[50.45197296 -539.54254150]
[64.53787994 -534.17126465]
[76.92864227 -525.58447266]
[86.90387726 -514.28149414]
[93.88364410 -500.91937256]
[97.46214294 -486.27499390]
[97.43132019 -471.19976807]
[93.79297638 -456.57012939]
[86.75863647 -443.23666382]
[76.73726654 -431.97454834]
[64.31149292 -423.43850708]
[50.20374298 -418.12487793]
[51.98620987 -403.23114014]
[53.76867676 -388.33743286]
[55.55114365 -373.44372559]
[57.44443512 -358.56369019]
[59.44844818 -343.69815063]
[61.45246124 -328.83264160]
[63.45647430 -313.96710205]
[77.91311646 -312.84222412]
[91.82353210 -308.72686768]
[104.57588196 -301.79940796]
[115.60870361 -292.36196899]
[124.43564606 -280.82727051]
[130.66690063 -267.70046997]
[134.02642822 -253.55725098]
[134.36418152 -239.01834106]
[131.66276550 -224.72244263]
[126.03839111 -211.29808044]
[117.73582458 -199.33599854]
[107.11773682 -189.36318970]
[94.64888763 -181.81962585]
[80.87576294 -177.03889465]
[82.65822601 -162.14517212]
[91.85309601 -150.42752075]
[85.81050873 -135.80569458]
[87.59297943 -120.91197968]
[89.70760345 -106.06177521]
[92.15332794 -91.26250458]
[94.59905243 -76.46323395]
[97.04478455 -61.66396713]
[106.75370789 -50.36856461]
[101.37004089 -35.49151230]
[103.81577301 -20.69223976]
[106.26149750 -5.89296913]
[108.70722198 8.90630150]
[118.30020142 -2.62517023]
[133.22421265 -4.13315487]
[144.93009949 5.24619055]
[146.71220398 20.13994980]
[137.54965210 32.01630402]
[122.69118500 34.07193375]
[110.64887238 25.13009834]
[111.76451874 40.08855057]
[112.88017273 55.04700470]
[113.99581909 70.00545502]
[119.60951233 56.09551620]
[127.95686340 43.63270569]
[138.68295288 33.14695358]
[151.33169556 25.08411407]
[165.36524963 19.78702736]
[180.18692017 17.48092651]
[195.16647339 18.26386833]
[209.66697693 22.10256386]
[223.07185364 28.83378601]
[234.81111145 38.17132568]
[244.38562012 49.71813965]
[251.38824463 62.98325348]
[255.52124023 77.40262604]
[256.60885620 92.36314392]
[254.60485840 107.22867584]
[249.59445190 121.36712646]
[241.79069519 134.17733765]
[231.52539062 145.11459351]
[219.23503113 153.71383667]
[205.44221497 159.60943604]
[190.73341370 162.55070496]
[175.73405457 162.41258240]
[161.08190918 159.20092773]
[147.39999390 153.05230713]
[135.27009583 144.22816467]
[125.20796204 133.10371399]
[117.64144135 120.15196991]
[112.89226532 105.92364502]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[105.62066650 129.61038208]
[94.05888367 139.00050354]
[89.02196503 153.12953186]
[91.67597961 168.72654724]
[80.11419678 178.11666870]
[75.18260193 192.28280640]
[70.35660553 206.48526001]
[65.53060913 220.68771362]
[60.70460892 234.89016724]
[63.59054947 250.44593811]
[52.16984940 260.00717163]
[47.34385300 274.20962524]
[43.47954941 288.70330811]
[40.59427643 303.42318726]
[37.70900345 318.14309692]
[34.82373047 332.86297607]
[32.59861374 347.69702148]
[31.03808975 362.61563110]
[29.47756767 377.53424072]
[27.91704369 392.45285034]
[26.35652161 407.37145996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[19 205]
[20 204]
[21 203]
[22 202]
[32 201]
[33 200]
[35 198]
[36 197]
[37 196]
[38 195]
[40 194]
[42 192]
[43 191]
[45 189]
[47 187]
[48 158]
[49 157]
[50 156]
[51 155]
[52 148]
[53 147]
[54 146]
[55 145]
[57 143]
[58 142]
[59 141]
[60 140]
[64 139]
[65 138]
[67 136]
[68 135]
[81 121]
[82 120]
[83 119]
[84 118]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
