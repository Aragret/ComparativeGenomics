%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[0.75105697 526.72784424]
[7.84577322 540.03637695]
[11.40710926 554.69128418]
[11.21119785 569.77148438]
[7.27035189 584.32897949]
[-0.16770165 597.44866943]
[-10.63540173 608.30584717]
[-23.47473907 616.21801758]
[-37.87862396 620.68780518]
[-52.94161224 621.43420410]
[-67.71683502 618.41040039]
[-81.27551270 611.80633545]
[-92.76532745 602.03729248]
[-101.46401978 589.71722412]
[-106.82479095 575.62066650]
[-108.51065826 560.63372803]
[-106.41563416 545.69848633]
[-100.67142487 531.75378418]
[-91.63911438 519.67614746]
[-79.88648224 510.22491455]
[-66.15230560 503.99407959]
[-51.29992294 501.37536621]
[-36.26297379 502.53338623]
[-31.43697739 488.33093262]
[-26.61097908 474.12847900]
[-21.78498268 459.92602539]
[-16.95898438 445.72357178]
[-12.23884964 431.48559570]
[-7.62484074 417.21286011]
[-3.01083136 402.94012451]
[1.60317791 388.66738892]
[-1.84406698 374.17718506]
[9.76303577 363.42611694]
[14.37704563 349.15338135]
[13.44343853 341.82192993]
[19.16745758 334.70339966]
[23.99345589 320.50094604]
[28.81945229 306.29849243]
[22.02601814 293.09298706]
[26.71794701 278.62094116]
[40.61513519 271.58489990]
[45.44113541 257.38244629]
[50.26713181 243.17999268]
[55.09312820 228.97753906]
[51.86200333 214.43762207]
[63.62788773 203.86054993]
[68.45388794 189.65808105]
[72.74800873 175.28587341]
[76.50431061 160.76380920]
[80.26061249 146.24176025]
[75.95700836 131.98243713]
[86.90361786 120.55954742]
[90.65991211 106.03749084]
[77.21922302 112.69689178]
[62.96282196 108.03266144]
[56.05743027 94.71666718]
[60.45877457 80.37693024]
[73.64555359 73.22789001]
[88.06379700 77.36485291]
[95.45394135 90.41703033]
[100.49085999 76.28799438]
[105.52777863 62.15896606]
[102.87376404 46.56195450]
[114.43554688 37.17183304]
[111.78152466 21.57481956]
[123.34330750 12.18469524]
[128.38023376 -1.94433415]
[133.41714478 -16.07336426]
[130.76312256 -31.67037582]
[142.32490540 -41.06050110]
[147.36183167 -55.18952942]
[152.39874268 -69.31855774]
[157.43565369 -83.44758606]
[162.47257996 -97.57661438]
[159.81855774 -113.17362976]
[171.38034058 -122.56375122]
[176.41726685 -136.69277954]
[181.45417786 -150.82180786]
[185.53384399 -165.25636292]
[188.63795471 -179.93167114]
[191.74206543 -194.60696411]
[194.84617615 -209.28227234]
[197.73144531 -224.00216675]
[200.39724731 -238.76338196]
[203.06303406 -253.52459717]
[205.50875854 -268.32388306]
[207.73388672 -283.15792847]
[209.95899963 -297.99194336]
[210.74032593 -312.97158813]
[210.07054138 -327.95663452]
[209.40075684 -342.94168091]
[194.59526062 -345.75134277]
[180.83706665 -351.90020752]
[168.86811829 -361.05670166]
[159.33387756 -372.72695923]
[152.74853516 -386.28164673]
[149.46722412 -400.98980713]
[149.66688538 -416.05822754]
[153.33677673 -430.67425537]
[160.27896118 -444.04971313]
[170.11907959 -455.46325684]
[182.32644653 -464.29937744]
[196.24273682 -470.08154297]
[211.11747742 -472.49792480]
[226.14846802 -471.41821289]
[240.52513123 -466.90066528]
[253.47213745 -459.18887329]
[264.29129028 -448.69873047]
[272.39907837 -435.99597168]
[277.35830688 -421.76562500]
[278.90151978 -406.77511597]
[276.94549561 -391.83288574]
[271.59570312 -377.74472046]
[263.14065552 -365.27038574]
[252.03633118 -355.08261108]
[238.88157654 -347.73080444]
[224.38578796 -343.61145020]
[225.05557251 -328.62640381]
[225.72535706 -313.64138794]
[232.99919128 -326.75973511]
[244.93067932 -335.85037231]
[259.50915527 -339.38134766]
[274.27792358 -336.75762939]
[286.74813843 -328.42132568]
[294.81838989 -315.77731323]
[297.12866211 -300.95629883]
[293.28967285 -286.45587158]
[283.94833374 -274.71963501]
[270.67883301 -267.72534180]
[255.71731567 -266.65164185]
[241.58505249 -271.67947388]
[230.66357422 -281.96157837]
[224.79304504 -295.76684570]
[222.56793213 -280.93280029]
[220.34280396 -266.09875488]
[222.41076660 -261.79379272]
[221.79634094 -256.14407349]
[217.82424927 -250.85881042]
[215.15846252 -236.09757996]
[212.49266052 -221.33636475]
[214.43153381 -216.97175598]
[213.64916992 -211.34281921]
[209.52146912 -206.17816162]
[206.41735840 -191.50285339]
[203.31324768 -176.82756042]
[200.20915222 -162.15225220]
[211.75665283 -171.72592163]
[226.63372803 -173.64237976]
[240.23052979 -167.30781555]
[248.33395386 -154.68504333]
[248.43307495 -139.68536377]
[240.49716187 -126.95660400]
[226.98524475 -120.44290924]
[212.08415222 -122.16260529]
[200.41113281 -131.58283997]
[195.58320618 -145.78489685]
[190.54629517 -131.65586853]
[185.50936890 -117.52684021]
[188.52366638 -102.94042969]
[176.60160828 -92.53970337]
[171.56468201 -78.41067505]
[166.52777100 -64.28163910]
[161.49085999 -50.15261459]
[156.45393372 -36.02358246]
[159.46823120 -21.43717384]
[147.54617310 -11.03644753]
[142.50926208 3.09258199]
[137.47233582 17.22161102]
[140.48663330 31.80801964]
[128.56457520 42.20874786]
[131.57885742 56.79515839]
[119.65680695 67.19588470]
[114.61988831 81.32491302]
[109.58296967 95.45394135]
[105.18197632 109.79379272]
[101.42567444 124.31584930]
[105.46060181 139.61389160]
[94.78266907 149.99806213]
[91.02636719 164.52011108]
[87.27007294 179.04217529]
[101.32243347 173.79518127]
[114.26410675 181.37892151]
[116.55495453 196.20295715]
[106.50626373 207.33955383]
[91.52554321 206.57922363]
[82.65634155 194.48408508]
[77.83034515 208.68653870]
[80.71628571 224.24230957]
[69.29558563 233.80352783]
[64.46958923 248.00598145]
[59.64358902 262.20843506]
[54.81759262 276.41088867]
[61.55099106 290.45721436]
[56.45442200 304.79177856]
[43.02190781 311.12448120]
[38.19591141 325.32693481]
[33.36991119 339.52938843]
[28.64977837 353.76739502]
[24.03577042 368.04013062]
[27.15299034 383.55120850]
[15.87591171 393.28140259]
[11.26190186 407.55413818]
[6.64789295 421.82687378]
[2.03388333 436.09957886]
[2.37184572 445.22778320]
[-2.75652862 450.54956055]
[-7.58252621 464.75201416]
[-12.40852356 478.95446777]
[-17.23452187 493.15695190]
[-22.06051826 507.35940552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 210]
[24 209]
[25 208]
[26 207]
[27 206]
[28 204]
[29 203]
[30 202]
[31 201]
[33 199]
[34 198]
[36 197]
[37 196]
[38 195]
[41 192]
[42 191]
[43 190]
[44 189]
[46 187]
[47 186]
[48 180]
[49 179]
[50 178]
[52 176]
[53 175]
[60 174]
[61 173]
[62 172]
[64 170]
[66 168]
[67 167]
[68 166]
[70 164]
[71 163]
[72 162]
[73 161]
[74 160]
[76 158]
[77 157]
[78 156]
[79 146]
[80 145]
[81 144]
[82 143]
[83 140]
[84 139]
[85 138]
[86 135]
[87 134]
[88 133]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
