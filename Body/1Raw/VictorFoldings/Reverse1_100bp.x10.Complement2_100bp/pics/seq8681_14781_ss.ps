%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[-15.27706432 376.25173950]
[-7.52588177 389.15957642]
[-2.62814951 403.39706421]
[-0.79797560 418.34176636]
[-2.11536717 433.34039307]
[-6.52273369 447.73721313]
[-13.82740402 460.90289307]
[-23.71004868 472.26190186]
[-35.73864365 481.31765747]
[-49.38734436 487.67428589]
[-64.05949402 491.05389404]
[-79.11368561 491.30871582]
[-93.89182281 488.42767334]
[-107.74785614 482.53665161]
[-120.07606506 473.89321899]
[-130.33752441 462.87524414]
[-138.08361816 449.96432495]
[-142.97575378 435.72491455]
[-144.80004883 420.77947998]
[-143.47676086 405.78140259]
[-139.06372070 391.38632202]
[-131.75387573 378.22348022]
[-121.86676025 366.86837769]
[-109.83460999 357.81735229]
[-96.18340302 351.46609497]
[-81.50992584 348.09228516]
[-66.45563507 347.84335327]
[-51.67863464 350.73022461]
[-45.80967712 336.92605591]
[-39.94071579 323.12188721]
[-34.07175446 309.31768799]
[-38.30438614 297.98580933]
[-33.52783585 286.43731689]
[-21.79872894 281.07159424]
[-15.72489452 267.35632324]
[-9.65106010 253.64105225]
[-22.18844604 261.87597656]
[-37.04556656 263.94140625]
[-51.35374451 259.43850708]
[-62.35029984 249.23675537]
[-67.91196442 235.30593872]
[-66.96486664 220.33586121]
[-59.69188309 207.21702576]
[-47.49731064 198.48248291]
[-32.73572540 195.81872559]
[-18.25736237 199.74006653]
[-6.85776663 209.48939514]
[-0.73802042 223.18423462]
[-1.08005953 238.18157959]
[7.33455896 225.76408386]
[15.74917793 213.34658813]
[24.16379547 200.92909241]
[32.57841492 188.51159668]
[40.99303436 176.09410095]
[49.40765381 163.67660522]
[57.82226944 151.25910950]
[53.29212189 133.52232361]
[63.33754349 117.83786011]
[81.97154999 114.41908264]
[90.01272583 101.75656128]
[91.33192444 93.80468750]
[98.26906586 88.96661377]
[106.49787140 76.42520905]
[100.29615784 60.68879318]
[104.65285492 44.51720047]
[117.65972900 34.23211288]
[134.06785583 33.73152924]
[142.10903931 21.06900406]
[150.15020752 8.40647984]
[158.19137573 -4.25604486]
[147.61126709 -14.97365856]
[139.68536377 -27.77086067]
[134.80844116 -42.00414658]
[133.22203064 -56.95863724]
[135.00250244 -71.88399506]
[140.05737305 -86.03204346]
[148.13011169 -98.69431305]
[158.81311035 -109.23748779]
[171.56834412 -117.13508606]
[185.75442505 -121.99375916]
[200.65882874 -123.57287598]
[215.53372192 -121.79644012]
[229.63348389 -116.75672913]
[237.67466736 -129.41925049]
[245.71583557 -142.08177185]
[253.75700378 -154.74430847]
[261.79818726 -167.40682983]
[268.97354126 -180.57929993]
[275.25091553 -194.20262146]
[281.52825928 -207.82594299]
[275.44052124 -219.84068298]
[277.35614014 -232.97616577]
[286.35406494 -242.46928406]
[298.98666382 -245.00837708]
[305.46615601 -258.53671265]
[311.94564819 -272.06506348]
[318.42514038 -285.59341431]
[324.90466309 -299.12176514]
[331.38415527 -312.65011597]
[318.89303589 -321.00192261]
[307.71768188 -331.04644775]
[298.08566284 -342.57922363]
[290.19302368 -355.36541748]
[284.20043945 -369.14474487]
[280.22998047 -383.63668823]
[278.36239624 -398.54617310]
[278.63577271 -413.56970215]
[281.04452515 -428.40136719]
[285.53958130 -442.73925781]
[292.02947998 -456.29147339]
[300.38204956 -468.78207397]
[310.42727661 -479.95678711]
[321.96066284 -489.58810425]
[334.74734497 -497.47994995]
[348.52703857 -503.47164917]
[363.01922607 -507.44122314]
[377.92883301 -509.30789185]
[392.95233154 -509.03356934]
[407.78384399 -506.62393188]
[422.12145996 -502.12796021]
[435.67327881 -495.63723755]
[448.16336060 -487.28387451]
[459.33743286 -477.23794556]
[468.96804810 -465.70401001]
[476.85910034 -452.91680908]
[482.84997559 -439.13674927]
[486.81866455 -424.64431763]
[488.68435669 -409.73458862]
[488.40914917 -394.71112061]
[485.99856567 -379.87973022]
[481.50170898 -365.54241943]
[475.01016235 -351.99099731]
[466.65603638 -339.50143433]
[456.60940552 -328.32797241]
[445.07485962 -318.69808960]
[432.28720093 -310.80780029]
[418.50674438 -304.81781006]
[404.01406860 -300.85003662]
[389.10424805 -298.98522949]
[374.08078003 -299.26138306]
[359.24954224 -301.67288208]
[344.91247559 -306.17062378]
[338.43298340 -292.64227295]
[331.95349121 -279.11392212]
[325.47399902 -265.58557129]
[318.99450684 -252.05723572]
[312.51501465 -238.52888489]
[318.77600098 -222.91995239]
[311.67080688 -207.30487061]
[295.15158081 -201.54858398]
[288.87423706 -187.92526245]
[282.59686279 -174.30194092]
[295.97799683 -181.08024597]
[310.91003418 -179.65408325]
[322.76614380 -170.46536255]
[327.87258911 -156.36131287]
[324.64703369 -141.71221924]
[314.08901978 -131.05726624]
[299.47000122 -127.69801331]
[285.31988525 -132.67535400]
[276.02319336 -144.44700623]
[274.46069336 -159.36566162]
[266.41952515 -146.70312500]
[258.37835693 -134.04060364]
[250.33718872 -121.37808228]
[242.29602051 -108.71555328]
[252.85314941 -98.09722900]
[260.78637695 -85.38966370]
[265.69509888 -71.22846985]
[267.33010864 -56.32282639]
[265.60617065 -41.41992950]
[260.60659790 -27.26756859]
[252.57907104 -14.57659054]
[241.92349243 -3.98520088]
[229.17196655 3.97313571]
[214.96234131 8.89655972]
[200.00621033 10.53511143]
[185.05329895 8.80341625]
[170.85391235 3.78512812]
[162.81272888 16.44765282]
[154.77156067 29.11017799]
[146.73039246 41.77270126]
[152.77220154 53.67810822]
[152.13722229 67.12210083]
[144.88449097 78.58802032]
[132.81802368 85.02378845]
[119.03926849 84.65402222]
[110.81046295 97.19541931]
[102.67524719 109.79772949]
[94.63407135 122.46025848]
[99.43292236 133.33718872]
[98.39601898 145.06005859]
[91.89616394 154.72680664]
[81.64412689 160.00045776]
[70.23976898 159.67372131]
[61.82514572 172.09121704]
[53.41053009 184.50871277]
[44.99591064 196.92620850]
[36.58129120 209.34370422]
[28.16667366 221.76119995]
[19.75205421 234.17869568]
[11.33743572 246.59619141]
[4.06420660 259.71490479]
[-2.00962758 273.43014526]
[-8.08346176 287.14541626]
[-5.69792891 305.40441895]
[-20.26757622 315.18664551]
[-26.13653755 328.99084473]
[-32.00549698 342.79501343]
[-37.87445831 356.59918213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 210]
[29 209]
[30 208]
[31 207]
[34 205]
[35 204]
[36 203]
[49 202]
[50 201]
[51 200]
[52 199]
[53 198]
[54 197]
[55 196]
[56 195]
[59 190]
[60 189]
[62 188]
[63 187]
[67 182]
[68 181]
[69 180]
[70 179]
[83 166]
[84 165]
[85 164]
[86 163]
[87 162]
[88 152]
[89 151]
[90 150]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
