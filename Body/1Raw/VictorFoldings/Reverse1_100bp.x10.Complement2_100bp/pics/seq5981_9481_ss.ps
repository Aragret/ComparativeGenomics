%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[73.36622620 544.26098633]
[68.15650177 558.34777832]
[61.25511932 571.68762207]
[52.76669693 584.07818604]
[42.81992722 595.33166504]
[31.56558990 605.27752686]
[19.17430305 613.76489258]
[5.83391476 620.66516113]
[-8.25333786 625.87371826]
[-22.87389565 629.31158447]
[-37.80611420 630.92663574]
[-52.82362747 630.69439697]
[-67.69877625 628.61840820]
[-82.20604706 624.73016357]
[-96.12551880 619.08856201]
[-109.24617767 611.77911377]
[-121.36911774 602.91265869]
[-132.31056213 592.62359619]
[-141.90461731 581.06793213]
[-150.00587463 568.42083740]
[-156.49150085 554.87402344]
[-161.26318359 540.63281250]
[-164.24858093 525.91320801]
[-165.40243530 510.93829346]
[-164.70724487 495.93508911]
[-162.17356873 481.13104248]
[-157.83981323 466.75054932]
[-151.77165222 453.01165771]
[-144.06111145 440.12265015]
[-134.82505798 428.27886963]
[-124.20352173 417.65988159]
[-112.35750580 408.42672729]
[-99.46660614 400.71929932]
[-85.72624969 394.65447998]
[-71.34471893 390.32418823]
[-56.54005051 387.79409790]
[-41.53667068 387.10256958]
[-26.56202888 388.26004028]
[-11.84313965 391.24899292]
[2.39686513 396.02413940]
[8.87636089 382.49578857]
[15.35585690 368.96743774]
[21.63321686 355.34411621]
[27.70705223 341.62887573]
[33.78088379 327.91360474]
[39.85472107 314.19833374]
[45.92855453 300.48306274]
[51.38391113 286.51025391]
[56.20990753 272.30780029]
[61.03590393 258.10534668]
[56.69504547 241.10171509]
[70.64381409 229.08033752]
[75.15144348 214.77365112]
[79.55243683 200.43380737]
[83.95343781 186.09394836]
[88.35443878 171.75410461]
[90.80016327 156.95483398]
[91.24677277 141.96148682]
[91.69337463 126.96813965]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[86.88349915 28.57413483]
[94.99630737 16.08287430]
[95.44291687 1.08952439]
[95.88951874 -13.90382576]
[96.00118256 -28.90340996]
[95.77785492 -43.90174866]
[95.55452728 -58.90008545]
[86.85990143 -68.42721558]
[86.98265839 -80.92395782]
[95.31161499 -89.69636536]
[95.31161499 -104.69636536]
[95.31161499 -119.69636536]
[95.31161499 -134.69636536]
[95.31161499 -149.69636536]
[87.57431793 -163.49653625]
[95.31161499 -176.22380066]
[95.31161499 -191.22380066]
[95.31161499 -206.22380066]
[79.01860046 -214.90509033]
[69.43225098 -230.58287048]
[69.13282776 -248.87167358]
[78.11682892 -264.70678711]
[93.82183838 -273.74685669]
[93.15205383 -288.73190308]
[92.48226929 -303.71694946]
[81.10146332 -314.35250854]
[80.63567352 -329.55899048]
[90.84518433 -340.34332275]
[90.17539978 -355.32836914]
[75.54251099 -359.11914062]
[62.67794037 -367.05603027]
[52.72560501 -378.43328857]
[46.57045364 -392.23928833]
[44.75980377 -407.24639893]
[47.45465088 -422.12017822]
[54.41537094 -435.53805542]
[65.02302551 -446.30694580]
[78.33438873 -453.46929932]
[93.16582489 -456.38818359]
[108.19852448 -454.80410767]
[122.09579468 -448.85794067]
[133.62190247 -439.07833862]
[141.75195312 -426.33496094]
[145.76303101 -411.76092529]
[145.29846191 -396.65213013]
[140.39956665 -382.35205078]
[131.50195312 -370.13223267]
[119.39678192 -361.07928467]
[105.16043854 -355.99813843]
[105.83022308 -341.01309204]
[116.96115112 -331.18264771]
[117.85387421 -315.99520874]
[107.46730804 -304.38671875]
[108.13709259 -289.40170288]
[108.80687714 -274.41665649]
[119.91355133 -270.50183105]
[129.07653809 -263.04931641]
[135.20782471 -252.91392517]
[137.56930542 -241.27075195]
[135.86146545 -229.47894287]
[130.26129150 -218.92303467]
[121.40409088 -210.85038757]
[110.31161499 -206.22380066]
[110.31161499 -191.22380066]
[110.31161499 -176.22380066]
[118.04891968 -163.49653625]
[110.31161499 -149.69636536]
[110.31161499 -134.69636536]
[110.31161499 -119.69636536]
[110.31161499 -104.69636536]
[110.31161499 -89.69636536]
[119.89231110 -74.99339294]
[110.55287170 -59.12341309]
[110.77619934 -44.12507629]
[110.99952698 -29.12673759]
[113.26131439 -26.42180824]
[114.32531738 -22.48697090]
[113.62774658 -17.89712524]
[110.88286591 -13.45722008]
[110.43626404 1.53613031]
[109.98965454 16.52947998]
[117.34458923 29.48147774]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.68672180 127.41474152]
[106.24011993 142.40809631]
[105.79351044 157.40144348]
[113.18994904 144.35182190]
[124.21440125 134.18022156]
[137.81608582 127.85613251]
[152.69859314 125.98234558]
[167.44340515 128.73744202]
[180.64514160 135.85882568]
[191.04550171 146.66773987]
[197.65318298 160.13394165]
[199.83837891 174.97392273]
[197.39282227 189.77322388]
[190.54960632 203.12127686]
[179.96098328 213.74581909]
[166.63618469 220.63420105]
[151.84524536 223.12985229]
[136.99795532 220.99491882]
[123.50946045 214.43287659]
[112.66539001 204.06918335]
[105.49933624 190.89163208]
[102.69428253 176.15510559]
[98.29328156 190.49494934]
[93.89228821 204.83479309]
[89.49128723 219.17465210]
[89.96511841 228.29678345]
[84.91654968 233.69435120]
[90.08369446 245.51226807]
[85.94684601 257.30508423]
[75.23836517 262.93133545]
[70.41236115 277.13381958]
[65.58636475 291.33627319]
[79.48513794 285.69497681]
[93.35514069 291.40664673]
[99.25100708 305.19934082]
[93.79531097 319.17199707]
[80.11333466 325.32046509]
[66.04272461 320.12258911]
[59.64382172 306.55688477]
[53.56998444 320.27215576]
[47.49615097 333.98742676]
[41.42231750 347.70269775]
[35.34848404 361.41796875]
[35.67181015 368.02151489]
[33.01109695 373.04324341]
[28.88420296 375.44692993]
[22.40470695 388.97528076]
[15.92521095 402.50363159]
[28.57163811 410.60595703]
[40.12650299 420.20098877]
[50.41463470 431.14328003]
[59.28007126 443.26696777]
[66.58841705 456.38824463]
[72.22886658 470.30816650]
[76.11592865 484.81576538]
[78.19066620 499.69110107]
[78.42162323 514.70861816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 201]
[41 200]
[42 199]
[43 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 185]
[49 184]
[50 183]
[52 180]
[53 178]
[54 177]
[55 176]
[56 175]
[57 156]
[58 155]
[59 154]
[60 153]
[62 151]
[63 150]
[64 149]
[65 148]
[67 146]
[68 145]
[69 144]
[70 140]
[71 139]
[72 138]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[81 130]
[82 129]
[83 128]
[88 120]
[89 119]
[90 118]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
