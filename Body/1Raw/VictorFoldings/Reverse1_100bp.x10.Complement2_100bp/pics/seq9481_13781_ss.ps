%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[162.04411316 650.93060303]
[147.25273132 648.23529053]
[133.10678101 643.14196777]
[119.99215698 635.78961182]
[108.26665497 626.37890625]
[98.25014496 615.16638184]
[90.21588898 602.45812988]
[84.38306427 588.60070801]
[80.91078949 573.97222900]
[79.89380646 558.97167969]
[81.35984802 544.00836182]
[85.26891327 529.49047852]
[91.51438141 515.81408691]
[99.92584991 503.35226440]
[110.27385712 492.44497681]
[122.27610016 483.38983154]
[135.60514832 476.43380737]
[149.89738464 471.76669312]
[164.76289368 469.51577759]
[164.98622131 454.51745605]
[165.20954895 439.51910400]
[165.43287659 424.52078247]
[165.65620422 409.52243042]
[165.87953186 394.52410889]
[164.09706116 379.63037109]
[160.34075928 365.10833740]
[156.58445740 350.58627319]
[152.82815552 336.06420898]
[137.18525696 335.27319336]
[122.53426361 329.67999268]
[110.31365967 319.82086182]
[101.72724915 306.65161133]
[97.62562561 291.45477295]
[98.42187500 275.71481323]
[104.05006409 260.97317505]
[113.97045898 248.67715454]
[127.22131348 240.03796387]
[123.24921417 225.57344055]
[119.27712250 211.10891724]
[115.30502319 196.64439392]
[111.33292389 182.17987061]
[108.46583557 180.12753296]
[106.45037079 176.58451843]
[105.97632599 171.96623230]
[107.52190399 166.98042297]
[104.19964600 152.35295105]
[89.28503418 151.41651917]
[75.23789215 146.31745911]
[63.19546509 137.46859741]
[54.13269043 125.58631134]
[48.78328323 111.63259125]
[47.58032227 96.73710632]
[50.62119675 82.10578156]
[57.65972519 68.92315674]
[68.12606812 58.25647354]
[81.17289734 50.96930313]
[77.85063934 36.34184265]
[67.24898529 24.59809685]
[71.97523499 10.47323227]
[68.65297699 -4.15422773]
[65.33071136 -18.78168869]
[61.89965439 -33.38401031]
[58.35998154 -47.96038437]
[54.82030869 -62.53676224]
[51.17222214 -77.08638000]
[47.41592026 -91.60844421]
[43.65961838 -106.13050079]
[39.90332031 -120.65255737]
[35.71630859 -135.05633545]
[31.10229874 -149.32907104]
[26.48828888 -163.60180664]
[21.87427902 -177.87454224]
[17.26027107 -192.14727783]
[12.64626122 -206.42001343]
[8.03225231 -220.69274902]
[3.41824269 -234.96546936]
[-1.19576657 -249.23820496]
[-16.07905960 -247.09448242]
[-31.11055946 -247.49703979]
[-45.85777664 -250.43432617]
[-59.89640427 -255.82179260]
[-72.82252502 -263.50445557]
[-84.26422882 -273.26129150]
[-93.89231110 -284.81152344]
[-101.42976379 -297.82284546]
[-106.65970612 -311.92092896]
[-109.43166351 -326.70010376]
[-109.66588593 -341.73516846]
[-107.35563660 -356.59353638]
[-102.56738281 -370.84768677]
[-95.43889618 -384.08749390]
[-86.17527008 -395.93203735]
[-75.04303741 -406.04052734]
[-62.36249924 -414.12210083]
[-48.49850082 -419.94427490]
[-33.84993744 -423.33947754]
[-18.83827209 -424.21008301]
[-3.89542365 -422.53100586]
[10.54867172 -418.35055542]
[24.07843018 -411.78903198]
[36.30457306 -403.03521729]
[46.87532806 -392.34094238]
[55.48655319 -380.01394653]
[61.89049149 -366.40890503]
[65.90288544 -351.91720581]
[67.40828705 -336.95587158]
[66.36338806 -321.95532227]
[62.79825592 -307.34719849]
[56.81545639 -293.55175781]
[48.58713150 -280.96594238]
[38.35002518 -269.95187378]
[26.39868355 -260.82644653]
[13.07696724 -253.85221863]
[17.69097519 -239.57948303]
[22.30498505 -225.30674744]
[26.91899490 -211.03401184]
[31.53300476 -196.76129150]
[36.14701462 -182.48855591]
[40.76102066 -168.21582031]
[45.37503052 -153.94308472]
[49.98904037 -139.67034912]
[52.42055130 -138.27539062]
[54.44600677 -135.83323669]
[55.66377640 -132.49371338]
[55.73382950 -128.54913330]
[54.42537689 -124.40885925]
[58.18167877 -109.88680267]
[61.93798065 -95.36473846]
[65.69428253 -80.84268188]
[70.41263580 -75.15419006]
[69.39668274 -66.07643127]
[72.93635559 -51.50005722]
[76.47602844 -36.92368317]
[81.10916138 -31.16557121]
[79.95817566 -22.10394859]
[83.28043365 -7.47648764]
[86.60269165 7.15097284]
[96.96672058 17.84846306]
[92.47809601 33.01958084]
[95.80035400 47.64704132]
[110.71496582 48.58347702]
[124.76210785 53.68253708]
[136.80453491 62.53140640]
[145.86730957 74.41368866]
[151.21672058 88.36740875]
[152.41967773 103.26289368]
[149.37879944 117.89421844]
[142.34027100 131.07684326]
[131.87393188 141.74353027]
[118.82710266 149.03070068]
[122.14936066 163.65815735]
[125.79744720 178.20777893]
[129.76954651 192.67230225]
[133.74163818 207.13682556]
[137.71374512 221.60134888]
[141.68583679 236.06587219]
[156.07798767 236.46176147]
[169.75991821 240.89315796]
[181.62500000 248.99221802]
[190.71620178 260.09481812]
[196.30332947 273.29504395]
[197.94160461 287.51901245]
[195.50708008 301.61236572]
[189.20603943 314.43386841]
[179.55743408 324.94787598]
[167.35021973 332.30789185]
[171.10652161 346.82995605]
[174.86282349 361.35202026]
[178.61912537 375.87408447]
[182.07896423 361.27856445]
[189.82598877 348.43395996]
[201.12176514 338.56454468]
[214.88969421 332.61102295]
[229.81745911 331.14083862]
[244.48228455 334.29409790]
[257.48638916 341.77029419]
[267.59030151 352.85681152]
[273.83099365 366.49697876]
[275.61361694 381.39065552]
[272.76831055 396.11834717]
[265.56622314 409.27621460]
[254.69384766 419.61019897]
[241.18743896 426.13531494]
[226.33436584 428.22961426]
[211.55030823 425.69351196]
[198.24441528 418.76870728]
[187.68489075 408.11523438]
[180.87786865 394.74743652]
[180.65454102 409.74575806]
[180.43121338 424.74411011]
[180.20788574 439.74243164]
[179.98455811 454.74078369]
[179.76123047 469.73910522]
[194.55313110 472.43161011]
[208.70007324 477.52218628]
[221.81610107 484.87197876]
[233.54342651 494.28048706]
[243.56208801 505.49102783]
[251.59880066 518.19775391]
[257.43429565 532.05407715]
[260.90939331 546.68188477]
[261.92926025 561.68218994]
[260.46609497 576.64581299]
[256.55981445 591.16442871]
[250.31700134 604.84204102]
[241.90792847 617.30548096]
[231.56202698 628.21478271]
[219.56152344 637.27221680]
[206.23381042 644.23083496]
[191.94247437 648.90069580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 169]
[26 168]
[27 167]
[28 166]
[37 156]
[38 155]
[39 154]
[40 153]
[41 152]
[45 151]
[46 150]
[56 140]
[57 139]
[59 137]
[60 136]
[61 135]
[62 133]
[63 132]
[64 131]
[65 129]
[66 128]
[67 127]
[68 126]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
