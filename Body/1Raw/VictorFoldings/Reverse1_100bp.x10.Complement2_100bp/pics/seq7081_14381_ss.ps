%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[95.79050446 664.51367188]
[82.05070496 658.39343262]
[69.62464905 649.91796875]
[58.91177368 639.35986328]
[50.25646210 627.05841064]
[43.93694305 613.40911865]
[40.15636444 598.85070801]
[39.03625488 583.85119629]
[40.61262131 568.89276123]
[44.83479309 554.45623779]
[51.56703949 541.00573730]
[60.59295273 528.97357178]
[71.62238312 518.74658203]
[84.30078125 510.65350342]
[98.22058105 504.95449829]
[112.93433380 501.83273315]
[112.48773193 486.83938599]
[112.04112244 471.84603882]
[111.48291016 456.85644531]
[110.81312561 441.87139893]
[107.37409210 435.32962036]
[110.24660492 426.65859985]
[109.80000305 411.66525269]
[109.35339355 396.67190552]
[108.90679169 381.67855835]
[108.46018219 366.68521118]
[107.79039764 351.70016479]
[106.89758301 336.72677612]
[103.36152649 330.23690796]
[106.10462952 321.52407837]
[105.43483734 306.53906250]
[104.76505280 291.55401611]
[94.53739929 277.29351807]
[103.15888977 261.02233887]
[102.26607513 246.04891968]
[101.37326050 231.07551575]
[86.12563324 228.07052612]
[72.16256714 221.22224426]
[60.43523788 210.99078369]
[51.74420929 198.06695557]
[46.68472290 183.32556152]
[45.60597610 167.76631165]
[48.58699417 152.44590759]
[55.43090439 138.40631104]
[65.67789459 126.60391235]
[78.63612366 117.84434509]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[81.75518799 60.24319839]
[88.52445221 46.97570419]
[87.40879822 32.01725006]
[85.95938110 17.08744049]
[84.17691803 2.19372392]
[82.39444733 -12.69999313]
[80.61198425 -27.59370995]
[78.82952118 -42.48742676]
[67.45355988 -56.96738052]
[74.98403168 -72.81852722]
[72.98001862 -87.68405914]
[70.97600555 -102.54958344]
[68.97199249 -117.41511536]
[66.96797943 -132.28063965]
[57.20283508 -140.70707703]
[55.83972168 -153.12986755]
[63.06723022 -162.82984924]
[61.28476715 -177.72357178]
[59.50230026 -192.61727905]
[57.71983337 -207.51100159]
[53.59283066 -215.65997314]
[56.02340698 -222.63951111]
[54.46288300 -237.55812073]
[52.90235901 -252.47673035]
[38.76735306 -255.21392822]
[25.99104500 -261.81686401]
[15.60528183 -271.74212646]
[8.44599247 -284.17846680]
[5.08590841 -298.11297607]
[5.78876066 -312.41372681]
[10.48859596 -325.92153931]
[18.79585266 -337.54409790]
[30.02963829 -346.34420776]
[43.27352905 -351.61538696]
[41.93529510 -366.55557251]
[40.59706116 -381.49575806]
[39.25882721 -396.43594360]
[24.29497337 -398.03884888]
[9.93144894 -402.53054810]
[-3.27965164 -409.73840332]
[-14.83052826 -419.38534546]
[-24.27719688 -431.10058594]
[-31.25655174 -444.43380737]
[-35.50032425 -458.87252808]
[-36.84539795 -473.86175537]
[-35.24007034 -488.82534790]
[-30.74604416 -503.18814087]
[-23.53605843 -516.39807129]
[-13.88724804 -527.94738770]
[-2.17048621 -537.39215088]
[11.16386604 -544.36938477]
[25.60327339 -548.61077881]
[40.59272003 -549.95343018]
[55.55605316 -548.34570312]
[69.91812134 -543.84936523]
[83.12689209 -536.63720703]
[94.67464447 -526.98651123]
[104.11752319 -515.26824951]
[111.09255981 -501.93276978]
[115.33165741 -487.49267578]
[116.67187500 -472.50302124]
[115.06170654 -457.53994751]
[110.56302643 -443.17858887]
[103.34877014 -429.97097778]
[93.69622040 -418.42480469]
[81.97640228 -408.98382568]
[68.63979340 -402.01095581]
[54.19901276 -397.77416992]
[55.53724670 -382.83398438]
[56.87548065 -367.89379883]
[58.21371460 -352.95361328]
[73.51831818 -349.62265015]
[87.06128693 -341.71548462]
[97.51084137 -329.99572754]
[103.83511353 -315.60269165]
[105.40403748 -299.94046021]
[102.05206299 -284.54095459]
[94.09558868 -270.91427612]
[82.30310059 -260.40029907]
[67.82096100 -254.03724670]
[69.38148499 -239.11863708]
[70.94200897 -224.20004272]
[72.61354828 -209.29347229]
[74.39601898 -194.39974976]
[76.17848206 -179.50602722]
[77.96094513 -164.61231995]
[89.22092438 -151.15200806]
[81.83350372 -134.28465271]
[83.83752441 -119.41912842]
[85.84153748 -104.55359650]
[87.84555054 -89.68807220]
[89.84956360 -74.82254028]
[99.27585602 -67.24153900]
[101.06709290 -54.87322235]
[93.72323608 -44.26989365]
[95.50569916 -29.37617683]
[97.28816986 -14.48245907]
[99.07063293 0.41125804]
[100.85309601 15.30497551]
[103.38402557 17.75992203]
[104.85161591 21.56271362]
[104.63533020 26.20022583]
[102.36725616 30.90160179]
[103.48290253 45.86005402]
[112.14538574 57.97660065]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[122.66956329 114.12923431]
[135.92356873 119.99345398]
[147.37770081 128.85836792]
[156.36666870 140.20333862]
[162.36973572 153.36384583]
[165.04092407 167.57043457]
[164.22888184 181.99366760]
[159.98548889 195.79257202]
[152.56260681 208.16363525]
[142.39703369 218.38768005]
[130.08489990 225.87158203]
[116.34666443 230.18270874]
[117.23947906 245.15611267]
[118.13229370 260.12951660]
[127.24366760 269.25891113]
[127.67903900 281.74865723]
[119.75009155 290.88421631]
[120.41987610 305.86926270]
[121.08966827 320.85430908]
[121.87098694 335.83395386]
[122.76380157 350.80734253]
[126.07969666 356.52719116]
[126.01840210 362.20989990]
[123.45352936 366.23858643]
[123.90013885 381.23196411]
[124.34674072 396.22531128]
[124.79335022 411.21865845]
[125.23995972 426.21200562]
[125.79816437 441.20159912]
[126.46794891 456.18664551]
[129.97743225 464.61999512]
[127.03447723 471.39944458]
[127.48107910 486.39279175]
[127.92768860 501.38613892]
[142.80116272 503.62655640]
[157.03550720 508.48696899]
[170.17312622 515.81103516]
[181.79171753 525.36346436]
[191.51780701 536.83703613]
[199.03869629 549.86297607]
[204.11265564 564.02258301]
[206.57658386 578.86071777]
[206.35124207 593.90026855]
[203.44389343 608.65789795]
[197.94799805 622.65911865]
[190.04022217 635.45391846]
[179.97477722 646.63098145]
[168.07521057 655.83099365]
[154.72406006 662.75823975]
[140.35049438 667.19000244]
[125.41658020 668.98382568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 193]
[17 192]
[18 191]
[19 189]
[20 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 180]
[28 179]
[30 178]
[31 177]
[32 176]
[34 173]
[35 172]
[36 171]
[47 159]
[49 157]
[50 156]
[52 154]
[53 153]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[67 136]
[68 135]
[69 134]
[70 133]
[72 132]
[73 131]
[74 130]
[84 121]
[85 120]
[86 119]
[87 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
