%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[207.59278870 346.05508423]
[217.75506592 334.98504639]
[229.42089844 325.51266479]
[221.76029968 312.61633301]
[214.09971619 299.72000122]
[200.94763184 292.72915649]
[200.55197144 276.91290283]
[192.89137268 264.01657104]
[185.23077393 251.12023926]
[177.57017517 238.22392273]
[169.90957642 225.32759094]
[162.24897766 212.43125916]
[154.39723206 199.65042114]
[146.35604858 186.98789978]
[138.31488037 174.32537842]
[124.96048737 167.72920227]
[124.09410095 151.93174744]
[116.05292511 139.26921082]
[108.01174927 126.60668945]
[90.50277710 126.11334991]
[76.76766968 115.24346161]
[72.26428986 98.31635284]
[78.78211975 82.05825806]
[70.36750793 69.64076233]
[61.95288467 57.22327042]
[53.53826904 44.80577469]
[45.12364960 32.38827896]
[44.59211731 47.37886047]
[36.72047043 60.14746094]
[23.56634140 67.35639954]
[8.56818390 67.12128448]
[-4.35351753 59.50356674]
[-11.82106209 46.49450302]
[-11.88245106 31.49462891]
[-4.52163744 18.42487717]
[8.33727932 10.70164776]
[23.33300972 10.34377670]
[36.54505920 17.44420433]
[29.96503067 3.96446967]
[23.28483582 -9.46590614]
[17.99532890 -13.43234921]
[15.82829189 -18.68601227]
[16.61240005 -23.39708519]
[10.33503819 -37.02040100]
[4.05767775 -50.64371872]
[-9.03089237 -53.82238388]
[-17.77137756 -63.81309891]
[-19.14148140 -76.82097626]
[-12.86382198 -88.07355499]
[-18.93765640 -101.78881836]
[-25.01148987 -115.50408936]
[-31.08532524 -129.21936035]
[-37.15915680 -142.93461609]
[-43.23299408 -156.64988708]
[-49.30682755 -170.36515808]
[-55.38066101 -184.08042908]
[-61.45449448 -197.79568481]
[-67.52832794 -211.51095581]
[-81.75560760 -206.72460938]
[-96.36383057 -203.27142334]
[-111.22835541 -201.18084717]
[-126.22236633 -200.47074890]
[-141.21794128 -201.14715576]
[-156.08712769 -203.20431519]
[-170.70307922 -206.62466431]
[-184.94107056 -211.37901306]
[-198.67965698 -217.42683411]
[-211.80160522 -224.71649170]
[-224.19496155 -233.18580627]
[-235.75399780 -242.76252747]
[-246.38006592 -253.36492920]
[-255.98254395 -264.90255737]
[-264.47949219 -277.27700806]
[-271.79840088 -290.38265991]
[-277.87686157 -304.10769653]
[-282.66296387 -318.33508301]
[-286.11590576 -332.94335938]
[-288.20623779 -347.80792236]
[-288.91607666 -362.80194092]
[-288.23941040 -377.79748535]
[-286.18200684 -392.66665649]
[-282.76141357 -407.28253174]
[-278.00683594 -421.52044678]
[-271.95880127 -435.25894165]
[-264.66891479 -448.38076782]
[-256.19937134 -460.77398682]
[-246.62248230 -472.33285522]
[-236.01989746 -482.95877075]
[-224.48210144 -492.56103516]
[-212.10752869 -501.05776978]
[-199.00175476 -508.37646484]
[-185.27659607 -514.45471191]
[-171.04914856 -519.24053955]
[-156.44081116 -522.69323730]
[-141.57621765 -524.78332520]
[-126.58218384 -525.49291992]
[-111.58663177 -524.81604004]
[-96.71751404 -522.75836182]
[-82.10168457 -519.33752441]
[-67.86383820 -514.58270264]
[-54.12545776 -508.53445435]
[-41.00375366 -501.24435425]
[-28.61067963 -492.77462769]
[-17.05196953 -483.19750977]
[-6.42623901 -472.59475708]
[3.17585254 -461.05679321]
[11.67238331 -448.68206787]
[18.99085999 -435.57617188]
[25.06884575 -421.85092163]
[29.85448265 -407.62341309]
[33.30694199 -393.01501465]
[35.39676285 -378.15039062]
[36.10612488 -363.15634155]
[35.42896652 -348.16079712]
[33.37106705 -333.29171753]
[29.94998741 -318.67593384]
[25.19491386 -304.43817139]
[19.14641762 -290.69989014]
[11.85610008 -277.57830811]
[3.38616276 -265.18536377]
[-6.19112968 -253.62683105]
[-16.79406738 -243.00126648]
[-28.33218384 -233.39936829]
[-40.70704269 -224.90304565]
[-53.81306076 -217.58479309]
[-47.73922729 -203.86952209]
[-41.66539383 -190.15425110]
[-35.59156036 -176.43899536]
[-29.51772499 -162.72372437]
[-23.44389153 -149.00845337]
[-17.37005806 -135.29318237]
[-11.29622364 -121.57791901]
[-5.22238970 -107.86265564]
[0.85144430 -94.14739227]
[16.78475571 -88.76515961]
[24.03831673 -73.21843719]
[17.68099403 -56.92107773]
[23.95835495 -43.29776382]
[30.23571587 -29.67444611]
[36.71520996 -16.14610100]
[43.39540482 -2.71572495]
[49.18880463 1.87321222]
[50.07340240 10.96470833]
[57.54114532 23.97366142]
[65.95576477 36.39115524]
[74.37038422 48.80865097]
[82.78500366 61.22614670]
[91.19961548 73.64364624]
[103.19397736 72.39741516]
[114.58679199 76.34984589]
[123.23233032 84.75653839]
[127.50230408 96.03417969]
[126.59249878 108.05873871]
[120.67427826 118.56552124]
[128.71545410 131.22804260]
[136.75662231 143.89056396]
[150.68617249 151.39244080]
[150.97740173 166.28419495]
[159.01858521 178.94671631]
[167.05975342 191.60925293]
[172.73320007 195.00387573]
[175.43504333 200.00358582]
[175.14530945 204.77066040]
[182.80590820 217.66699219]
[190.46650696 230.56332397]
[198.12710571 243.45964050]
[205.78770447 256.35598755]
[213.44830322 269.25228882]
[227.14831543 277.16558838]
[226.99603271 292.05941772]
[234.65663147 304.95571899]
[242.31723022 317.85205078]
[256.21600342 312.13870239]
[270.79852295 308.51000977]
[285.75402832 307.04330444]
[300.76367188 307.76986694]
[315.50756836 310.67419434]
[329.67147827 315.69436646]
[342.95339966 322.72344971]
[355.07034302 331.61154175]
[365.76394653 342.16921997]
[374.80630493 354.17141724]
[382.00469971 367.36236572]
[387.20565796 381.46087646]
[390.29837036 396.16641235]
[391.21685791 411.16555786]
[389.94158936 426.13858032]
[386.49975586 440.76635742]
[380.96466064 454.73706055]
[373.45431519 467.75292969]
[364.12881470 479.53652954]
[353.18695068 489.83666992]
[340.86187744 498.43380737]
[327.41638184 505.14471436]
[313.13702393 509.82635498]
[298.32815552 512.37890625]
[283.30545044 512.74798584]
[268.38912964 510.92572021]
[253.89709473 506.95092773]
[240.13825989 500.90835571]
[227.40591431 492.92678833]
[215.97143555 483.17639160]
[206.07855225 471.86495972]
[197.93812561 459.23358154]
[191.72367859 445.55154419]
[187.56767273 431.11044312]
[185.55867004 416.21810913]
[185.73953247 401.19195557]
[188.10636902 386.35226440]
[192.60874939 372.01538086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 160]
[14 159]
[15 158]
[17 156]
[18 155]
[19 154]
[23 148]
[24 147]
[25 146]
[26 145]
[27 144]
[38 143]
[39 141]
[40 140]
[43 139]
[44 138]
[45 137]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
