%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[74.99713898 526.63854980]
[60.28226852 523.48278809]
[46.46590805 517.51672363]
[34.07912827 508.96954346]
[23.59804344 498.16986084]
[15.42551994 485.53277588]
[9.87568569 471.54400635]
[7.16186237 456.74124146]
[7.38836241 441.69348145]
[10.54647923 426.97912598]
[16.51482201 413.16372681]
[25.06398773 400.77835083]
[35.86536407 390.29901123]
[48.50377655 382.12854004]
[62.49344254 376.58096313]
[77.29663086 373.86953735]
[77.51995850 358.87118530]
[77.74328613 343.87286377]
[74.69972229 337.13796997]
[78.08325195 328.65332031]
[78.52985382 313.65997314]
[78.97646332 298.66662598]
[69.83777618 283.68490601]
[79.64558411 268.10003662]
[79.86891174 253.10169983]
[80.09223938 238.10336304]
[80.31556702 223.10502625]
[68.82593536 232.74807739]
[53.87150192 231.57975769]
[44.01885223 220.26934814]
[44.91202545 205.29597473]
[56.03937531 195.23704529]
[71.02664948 195.85478210]
[81.28811646 206.79441833]
[82.84864044 191.87582397]
[76.47740936 178.41265869]
[85.60842133 165.49232483]
[87.16894531 150.57371521]
[80.79770660 137.11056519]
[89.92872620 124.19022369]
[91.48924255 109.27161407]
[92.71622467 94.32188416]
[85.81404114 80.08564758]
[94.29516602 67.84146881]
[95.18798065 52.86806488]
[85.14747620 43.89014816]
[82.15467072 30.95749664]
[87.08385468 18.84200096]
[97.92791748 11.88242626]
[99.04357147 -3.07602692]
[100.15921783 -18.03448105]
[101.27486420 -32.99293518]
[102.39051819 -47.95138550]
[103.50616455 -62.90983963]
[104.62181091 -77.86829376]
[105.73746490 -92.82674408]
[90.85547638 -97.13342285]
[77.19485474 -104.42954254]
[65.34823608 -114.39592743]
[55.82901382 -126.59758759]
[49.04909134 -140.50276184]
[45.30103683 -155.50605774]
[44.74548340 -170.95478821]
[47.40423965 -186.17739868]
[53.15943909 -200.51269531]
[61.75875854 -213.33843994]
[72.82649994 -224.09849548]
[85.87996674 -232.32687378]
[100.35057068 -237.66792297]
[115.60854340 -239.89167786]
[116.50135803 -254.86508179]
[117.39417267 -269.83847046]
[118.28699493 -284.81188965]
[119.17980957 -299.78530884]
[120.07262421 -314.75869751]
[120.07262421 -329.75869751]
[119.17980957 -344.73211670]
[118.28699493 -359.70550537]
[109.74201202 -373.02069092]
[116.70805359 -386.18591309]
[115.81523132 -401.15933228]
[114.92241669 -416.13275146]
[114.02960205 -431.10614014]
[113.13678741 -446.07955933]
[112.02114105 -461.03799438]
[110.68290710 -475.97817993]
[109.34467316 -490.91836548]
[108.00643921 -505.85855103]
[106.66820526 -520.79876709]
[91.73970795 -522.82055664]
[77.63558197 -528.11407471]
[65.06328583 -536.41381836]
[54.65343857 -547.30340576]
[46.92819595 -560.23663330]
[42.27504730 -574.56475830]
[40.92739868 -589.56915283]
[42.95284271 -604.49713135]
[48.24979019 -618.59997559]
[56.55253983 -631.17028809]
[67.44463348 -641.57745361]
[80.37973785 -649.29956055]
[94.70901489 -653.94927979]
[109.71372986 -655.29327393]
[124.64123535 -653.26422119]
[138.74279785 -647.96386719]
[151.31106567 -639.65808105]
[161.71563721 -628.76342773]
[169.43461609 -615.82647705]
[174.08081055 -601.49609375]
[175.42118835 -586.49102783]
[173.38851929 -571.56402588]
[168.08473206 -557.46374512]
[159.77589417 -544.89746094]
[148.87875366 -534.49554443]
[135.93991089 -526.77972412]
[121.60838318 -522.13696289]
[122.94661713 -507.19677734]
[124.28485870 -492.25659180]
[125.62309265 -477.31640625]
[126.96132660 -462.37625122]
[129.98675537 -458.68084717]
[130.72290039 -453.04568481]
[128.11019897 -446.97235107]
[129.00300598 -431.99896240]
[129.89582825 -417.02554321]
[130.78863525 -402.05215454]
[131.68145752 -387.07873535]
[140.16258240 -374.83456421]
[133.26039124 -360.59832764]
[134.15321350 -345.62490845]
[135.04603577 -330.65151978]
[144.23152161 -342.51013184]
[158.60037231 -346.81546021]
[172.79338074 -341.96173096]
[181.51687622 -329.75924683]
[181.51724243 -314.75924683]
[172.79431152 -302.55636597]
[158.60154724 -297.70196533]
[144.23248291 -302.00659180]
[135.04603577 -313.86587524]
[134.15321350 -298.89248657]
[133.26039124 -283.91906738]
[132.36758423 -268.94567871]
[131.47476196 -253.97225952]
[130.58195496 -238.99885559]
[144.64166260 -235.29049683]
[157.70857239 -228.90083313]
[169.27676392 -220.07508850]
[178.89790344 -209.15286255]
[186.19865417 -196.55503845]
[190.89514160 -182.76757812]
[192.80400085 -168.32278442]
[191.84950256 -153.77871704]
[188.06660461 -139.69767761]
[181.59963989 -126.62445068]
[172.69685364 -115.06520844]
[161.70080566 -105.46792603]
[149.03523254 -98.20503235]
[135.18875122 -93.55894470]
[120.69591522 -91.71109772]
[119.58026886 -76.75264740]
[118.46461487 -61.79419327]
[117.34896851 -46.83573914]
[116.23332214 -31.87728500]
[115.11766815 -16.91883087]
[114.00202179 -1.96037817]
[112.88637543 12.99807549]
[124.39543152 25.26104355]
[123.45585632 42.39090347]
[110.16138458 53.76087952]
[109.26856995 68.73428345]
[116.23461151 81.89952850]
[107.68962860 95.21469879]
[109.81480408 98.43276978]
[110.51118469 102.57196808]
[109.39919281 106.97315979]
[106.40785217 110.83213806]
[104.84732819 125.75074768]
[111.10694122 140.28097534]
[102.08754730 152.13424683]
[100.52702332 167.05284119]
[106.78664398 181.58308411]
[97.76725006 193.43634033]
[96.20672607 208.35494995]
[95.31391144 223.32835388]
[95.09058380 238.32669067]
[94.86725616 253.32502747]
[94.64392853 268.32336426]
[103.05104828 278.10513306]
[102.55625916 290.59268188]
[93.96981049 299.11322021]
[93.52320862 314.10656738]
[93.07659912 329.09991455]
[92.74162292 344.09619141]
[92.51829529 359.09451294]
[92.29496765 374.09286499]
[107.01086426 377.24383545]
[120.82915497 383.20547485]
[133.21870422 391.74862671]
[143.70327759 402.54489136]
[151.87989807 415.17935181]
[157.43424988 429.16632080]
[160.15287781 443.96817017]
[159.93124390 459.01602173]
[156.77789307 473.73138428]
[150.81402588 487.54873657]
[142.26885986 499.93688965]
[131.47088623 510.41970825]
[118.83511353 518.59429932]
[104.84724426 524.14636230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 196]
[17 195]
[18 194]
[20 193]
[21 192]
[22 191]
[24 188]
[25 187]
[26 186]
[27 185]
[34 184]
[35 183]
[37 181]
[38 180]
[40 178]
[41 177]
[42 173]
[44 171]
[45 170]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 131]
[77 130]
[78 129]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
