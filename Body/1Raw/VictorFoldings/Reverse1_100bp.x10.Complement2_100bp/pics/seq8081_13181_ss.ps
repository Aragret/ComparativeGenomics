%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[129.80430603 633.72674561]
[117.31183624 625.41430664]
[105.38363647 616.31060791]
[94.06972504 606.45391846]
[83.41757202 595.88555908]
[73.47184753 584.64984131]
[64.27426910 572.79388428]
[55.86341858 560.36743164]
[48.27457047 547.42260742]
[41.53955460 534.01373291]
[35.68662262 520.19696045]
[30.74032593 506.03036499]
[26.72140503 491.57327271]
[23.64672279 476.88638306]
[21.52917099 462.03125000]
[20.37763405 447.07019043]
[20.19694138 432.06600952]
[20.98785210 417.08157349]
[22.74704552 402.17974854]
[25.46714592 387.42303467]
[29.13674355 372.87338257]
[33.74044800 358.59176636]
[39.25894547 344.63806152]
[45.66909027 331.07086182]
[52.94400024 317.94705200]
[61.05315781 305.32165527]
[69.96255493 293.24765015]
[79.63481140 281.77569580]
[90.02937317 270.95385742]
[101.10262299 260.82754517]
[112.80813599 251.43925476]
[125.09680176 242.82835388]
[137.91708374 235.03096008]
[151.21519470 228.07977295]
[145.14135742 214.36450195]
[139.06752014 200.64924622]
[132.99369812 186.93397522]
[126.91986084 173.21870422]
[120.84602356 159.50344849]
[114.46741486 145.92723083]
[107.78722382 132.49685669]
[101.10702515 119.06648254]
[87.40441132 114.35643768]
[80.95155334 101.38312531]
[85.46259308 87.61370850]
[78.78240204 74.18333435]
[70.93064880 61.40249252]
[61.96994781 49.37311554]
[53.00925446 37.34373856]
[44.04855728 25.31436157]
[35.08786011 13.28498268]
[26.12716484 1.25560534]
[17.16646957 -10.77377224]
[4.29416800 -3.04832935]
[-9.28338242 3.35703874]
[-23.43123817 8.37867069]
[-38.00878906 11.96665859]
[-52.87115097 14.08534145]
[-67.87061310 14.71366310]
[-82.85809326 13.84537888]
[-97.68464661 11.48911762]
[-112.20291138 7.66829729]
[-126.26859283 2.42089343]
[-139.74189758 -4.20094252]
[-152.48890686 -12.13139820]
[-164.38294983 -21.29165459]
[-175.30581665 -31.59066963]
[-185.14894104 -42.92608643]
[-193.81448364 -55.18524551]
[-201.21632385 -68.24629974]
[-207.28091431 -81.97945404]
[-211.94796753 -96.24819946]
[-215.17109680 -110.91074371]
[-216.91827393 -125.82134247]
[-217.17213440 -140.83180237]
[-215.93016052 -155.79296875]
[-213.20466614 -170.55610657]
[-209.02278137 -184.97450256]
[-203.42604065 -198.90487671]
[-196.47009277 -212.20875549]
[-188.22404480 -224.75392151]
[-178.76985168 -236.41571045]
[-168.20149231 -247.07818604]
[-156.62400818 -256.63540649]
[-144.15243530 -264.99234009]
[-130.91075134 -272.06597900]
[-117.03056335 -277.78601074]
[-102.64980316 -282.09558105]
[-87.91139984 -284.95184326]
[-72.96185303 -286.32644653]
[-57.94972229 -286.20568848]
[-43.02421570 -284.59078979]
[-28.33367729 -281.49777222]
[-14.02410698 -276.95742798]
[-0.23772648 -271.01483154]
[12.88844681 -263.72909546]
[25.22395515 -255.17257690]
[36.64619827 -245.43034363]
[47.04165649 -234.59922791]
[56.30701065 -222.78686523]
[64.35017395 -210.11067200]
[71.09120941 -196.69660950]
[76.46311951 -182.67800903]
[80.41251373 -168.19418335]
[82.90013885 -153.38911438]
[83.90127563 -138.40991211]
[83.40597534 -123.40547180]
[81.41915131 -108.52490997]
[77.96054840 -93.91612244]
[73.06455994 -79.72429657]
[66.77982330 -66.09049225]
[59.16881943 -53.15019608]
[50.30717850 -41.03203201]
[40.28297806 -29.85643196]
[29.19584656 -19.73446846]
[38.15654373 -7.70509052]
[47.11723709 4.32428694]
[56.07793427 16.35366440]
[65.03862762 28.38304329]
[73.99932861 40.41241837]
[82.96002197 52.44179916]
[81.94846344 37.47594452]
[87.45007324 23.52129555]
[98.40258789 13.27227402]
[112.69124603 8.70780468]
[127.55712128 10.70921612]
[140.12985229 18.89006615]
[147.98185730 31.67076302]
[149.59701538 46.58355331]
[144.66346741 60.74900818]
[134.13380432 71.43200684]
[120.04116058 76.56981659]
[105.10657501 75.17042542]
[92.21277618 67.50314331]
[98.89297485 80.93351746]
[112.59558868 85.64356232]
[119.04844666 98.61687469]
[114.53740692 112.38629150]
[121.21759796 125.81666565]
[127.89779663 139.24703979]
[132.24880981 142.13075256]
[134.80316162 146.00741577]
[135.48350525 150.02639771]
[134.56129456 153.42961121]
[140.63511658 167.14486694]
[146.70895386 180.86013794]
[152.78279114 194.57540894]
[158.85662842 208.29067993]
[164.93046570 222.00593567]
[179.01502991 216.83064270]
[193.40507507 212.57789612]
[208.04020691 209.26554871]
[222.85905457 206.90747070]
[237.79946899 205.51356506]
[252.79878235 205.08966064]
[267.79406738 205.63757324]
[282.72244263 207.15496826]
[297.52130127 209.63549805]
[312.12854004 213.06877136]
[326.48291016 217.44035339]
[340.52420044 222.73193359]
[354.19354248 228.92131042]
[367.43356323 235.98252869]
[380.18875122 243.88595581]
[392.40557861 252.59844971]
[404.03283691 262.08346558]
[415.02175903 272.30123901]
[425.32623291 283.20889282]
[434.90304565 294.76068115]
[443.71200562 306.90814209]
[451.71618652 319.60034180]
[458.88204956 332.78402710]
[465.17947388 346.40390015]
[470.58206177 360.40286255]
[475.06719971 374.72216797]
[478.61602783 389.30178833]
[481.21368408 404.08050537]
[482.84924316 418.99639893]
[483.51589966 433.98687744]
[483.21078491 448.98907471]
[481.93524170 463.94006348]
[479.69458008 478.77713013]
[476.49822998 493.43801880]
[472.35958862 507.86129761]
[467.29598999 521.98638916]
[461.32867432 535.75415039]
[454.48272705 549.10675049]
[446.78680420 561.98815918]
[438.27319336 574.34442139]
[428.97763062 586.12371826]
[418.93908691 597.27661133]
[408.19967651 607.75628662]
[396.80441284 617.51879883]
[384.80114746 626.52325439]
[372.24017334 634.73187256]
[359.17422485 642.11016846]
[345.65805054 648.62725830]
[331.74838257 654.25579834]
[317.50354004 658.97210693]
[302.98330688 662.75646973]
[288.24856567 665.59301758]
[273.36108398 667.46978760]
[258.38336182 668.37902832]
[243.37820435 668.31683350]
[228.40853882 667.28344727]
[213.53713989 665.28326416]
[198.82641602 662.32464600]
[184.33805847 658.41998291]
[170.13281250 653.58569336]
[156.27029419 647.84210205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 144]
[40 140]
[41 139]
[42 138]
[45 135]
[46 134]
[47 121]
[48 120]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
