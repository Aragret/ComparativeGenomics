%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[98.83214569 651.99053955]
[88.10077667 662.49743652]
[76.18115997 671.63421631]
[63.24711609 679.26751709]
[49.48726273 685.28613281]
[35.10225296 689.60229492]
[20.30187035 692.15295410]
[5.30194569 692.90100098]
[-9.67877865 691.83557129]
[-24.42184067 688.97204590]
[-38.71224213 684.35235596]
[-52.34158325 678.04376221]
[-65.11111450 670.13830566]
[-76.83461761 660.75122070]
[-87.34111786 650.01947021]
[-96.47741699 638.09948730]
[-104.11026764 625.16516113]
[-110.12837219 611.40509033]
[-114.44396210 597.01989746]
[-116.99409485 582.21942139]
[-117.74160004 567.21948242]
[-116.67556000 552.23883057]
[-113.81153107 537.49584961]
[-109.19127655 523.20562744]
[-102.88217163 509.57650757]
[-94.97622681 496.80728149]
[-85.58872223 485.08413696]
[-74.85657501 474.57803345]
[-62.93627167 465.44216919]
[-50.00165558 457.80981445]
[-36.24134827 451.79220581]
[-21.85601997 447.47717285]
[-7.05544567 444.92758179]
[7.94453573 444.18063354]
[22.92518044 445.24725342]
[37.66802979 448.11181641]
[42.28203583 433.83908081]
[46.89604568 419.56634521]
[43.44880295 405.07617188]
[55.05590439 394.32507324]
[59.66991425 380.05233765]
[52.68062210 366.94946289]
[57.15656281 352.40914917]
[70.94745636 345.16699219]
[75.56147003 330.89425659]
[80.17547607 316.62152100]
[84.78948212 302.34878540]
[88.54578400 287.82672119]
[91.43106079 273.10684204]
[94.31632996 258.38693237]
[97.20160675 243.66705322]
[100.08687592 228.94715881]
[100.97969055 213.97375488]
[99.86404419 199.01530457]
[98.74839783 184.05685425]
[97.63274384 169.09840393]
[88.97026825 156.98185730]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[79.99604034 97.87725067]
[65.30253601 94.86049652]
[58.36410141 81.56169128]
[64.29550171 67.78422546]
[78.72431946 63.68433380]
[91.01335907 72.28286743]
[91.01335907 57.28286743]
[91.01335907 42.28286743]
[91.01335907 27.28286743]
[82.88429260 39.88914490]
[70.13600159 47.79364395]
[55.22998428 49.47012329]
[41.04435349 44.59488678]
[30.31813812 34.10926437]
[25.12240028 20.03786278]
[26.46035576 5.09765244]
[34.07366562 -7.82664680]
[46.49232101 -16.23955536]
[61.31847000 -18.51667404]
[75.68942261 -14.21832371]
[86.83036041 -4.17445087]
[92.59037781 9.67688656]
[95.25617218 -5.08433008]
[90.09460449 -20.03989029]
[99.97061920 -31.18948746]
[102.63642120 -45.95070648]
[105.30221558 -60.71192169]
[107.85804749 -75.49257660]
[110.30377197 -90.29184723]
[103.42183685 -107.37167358]
[115.07758331 -120.49076080]
[117.30270386 -135.32479858]
[119.52781677 -150.15884399]
[117.70603943 -159.10977173]
[121.89807892 -165.19651794]
[124.34380341 -179.99578857]
[126.78953552 -194.79505920]
[112.98506165 -200.86857605]
[101.12522125 -210.18495178]
[91.95551300 -222.15856934]
[86.05236816 -236.03672791]
[83.78685760 -250.94708252]
[85.30138397 -265.95230103]
[90.50076294 -280.10919189]
[99.05813599 -292.52780151]
[110.43559265 -302.42752075]
[123.91793823 -309.18603516]
[138.65765381 -312.37844849]
[153.72817993 -311.80416870]
[168.18218994 -307.49923706]
[181.11108398 -299.73428345]
[191.70213318 -288.99740601]
[199.28959656 -275.96356201]
[203.39649963 -261.45205688]
[203.76467896 -246.37506104]
[200.37100220 -231.68037415]
[193.42880249 -218.29170227]
[183.37445068 -207.05067444]
[170.83999634 -198.66389465]
[156.61334229 -193.65856934]
[141.58880615 -192.34933472]
[139.14308167 -177.55006409]
[136.69734192 -162.75079346]
[134.36186218 -147.93373108]
[132.13674927 -133.09968567]
[129.91162109 -118.26564026]
[136.84712219 -108.35476685]
[135.11474609 -95.97807312]
[125.10304260 -87.84612274]
[122.65731812 -73.04685211]
[124.66815186 -65.93500519]
[120.06343079 -58.04612732]
[117.39763641 -43.28490829]
[114.73184204 -28.52369308]
[120.08408356 -14.62395382]
[110.01738739 -2.41853476]
[107.35159302 12.34268284]
[106.01335907 27.28286743]
[106.01335907 42.28286743]
[106.01335907 57.28286743]
[106.01335907 72.28286743]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[119.36045837 154.71525574]
[112.59120178 167.98275757]
[113.70684814 182.94120789]
[114.82249451 197.89965820]
[115.93814850 212.85810852]
[121.93682861 199.10980225]
[131.84326172 187.84648132]
[144.71321106 180.14166260]
[159.32002258 176.72973633]
[174.27145386 177.93591309]
[188.14242554 183.64521790]
[199.61083984 193.31347656]
[207.58361816 206.01918030]
[211.30084229 220.55128479]
[210.40820312 235.52470398]
[204.99078369 249.51225281]
[195.56492615 261.18072510]
[183.02906799 269.41796875]
[168.57803345 273.43887329]
[153.58920288 272.86013794]
[139.49121094 267.73699951]
[127.62779999 258.55770874]
[119.12970734 246.19717407]
[114.80677032 231.83244324]
[111.92149353 246.55232239]
[109.03622437 261.27221680]
[106.15094757 275.99212646]
[103.26567841 290.71200562]
[115.12812805 281.53146362]
[130.11729431 280.96154785]
[142.64259338 289.21484375]
[148.03239441 303.21307373]
[144.27644348 317.73519897]
[132.77560425 327.36489868]
[117.81941986 328.51046753]
[104.98616028 320.74468994]
[99.06221771 306.96279907]
[94.44821167 321.23553467]
[89.83419800 335.50827026]
[85.22019196 349.78100586]
[92.16197205 363.72552490]
[87.27938843 378.13436890]
[73.94264984 384.66635132]
[69.32863617 398.93908691]
[72.44586182 414.45016479]
[61.16878128 424.18035889]
[56.55477142 438.45309448]
[51.94076157 452.72583008]
[65.57057953 459.03341675]
[78.34069824 466.93792725]
[90.06490326 476.32409668]
[100.57221222 487.05508423]
[109.70939636 498.97436523]
[117.34321594 511.90811157]
[123.36235046 525.66772461]
[127.67900848 540.05261230]
[130.23025513 554.85290527]
[130.97888184 569.85278320]
[129.91395569 584.83355713]
[127.05103302 599.57672119]
[122.43184662 613.86730957]
[116.12376404 627.49688721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 196]
[37 195]
[38 194]
[40 192]
[41 191]
[44 188]
[45 187]
[46 186]
[47 185]
[48 176]
[49 175]
[50 174]
[51 173]
[52 172]
[53 153]
[54 152]
[55 151]
[56 150]
[58 148]
[59 147]
[60 146]
[62 144]
[68 143]
[69 142]
[70 141]
[71 140]
[84 139]
[85 138]
[87 136]
[88 135]
[89 134]
[90 132]
[91 131]
[93 128]
[94 127]
[95 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
