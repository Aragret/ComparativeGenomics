%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[43.78241730 496.33746338]
[40.97680664 511.09405518]
[36.30714798 525.37072754]
[29.85011864 538.93298340]
[21.71175385 551.55816650]
[12.02568817 563.03894043]
[0.95097804 573.18682861]
[-11.33052063 581.83508301]
[-24.61713409 588.84185791]
[-38.69068527 594.09191895]
[-53.32006836 597.49920654]
[-68.26506805 599.00762939]
[-83.28025818 598.59252930]
[-98.11908722 596.26068115]
[-112.53787994 592.05041504]
[-126.29987335 586.03076172]
[-139.17907715 578.30065918]
[-150.96401978 568.98706055]
[-161.46116638 558.24285889]
[-170.49813843 546.24444580]
[-177.92654419 533.18890381]
[-183.62442017 519.29058838]
[-187.49818420 504.77777100]
[-189.48422241 489.88873291]
[-189.54994202 474.86795044]
[-187.69424438 459.96206665]
[-183.94761658 445.41589355]
[-178.37156677 431.46829224]
[-171.05767822 418.34826660]
[-162.12602234 406.27124023]
[-151.72329712 395.43557739]
[-140.02030945 386.01919556]
[-127.20922852 378.17672729]
[-113.50042725 372.03692627]
[-99.11901855 367.70062256]
[-84.30116272 365.23901367]
[-69.29017639 364.69256592]
[-54.33255768 366.07019043]
[-39.67391968 369.34930420]
[-25.55496979 374.47607422]
[-18.67555809 361.14663696]
[-11.79614544 347.81719971]
[-4.91673326 334.48779297]
[1.96267951 321.15835571]
[8.84209156 307.82891846]
[15.72150421 294.49948120]
[22.60091782 281.17007446]
[29.08041382 267.64172363]
[35.15424728 253.92645264]
[33.23319244 239.15625000]
[45.89580154 229.67105103]
[51.96963501 215.95579529]
[57.42499161 201.98298645]
[62.25098801 187.78053284]
[67.07698822 173.57807922]
[63.84585953 159.03816223]
[75.61174774 148.46109009]
[80.43774414 134.25863647]
[77.20661926 119.71871948]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[105.19071198 57.25352478]
[107.41583252 42.41948318]
[109.64094543 27.58543968]
[111.86606598 12.75139523]
[114.09117889 -2.08264875]
[116.31629944 -16.91669273]
[110.71173859 -31.71194267]
[120.25141144 -43.15064240]
[122.47652435 -57.98468781]
[124.70164490 -72.81873322]
[125.70590210 -87.78507233]
[125.48257446 -102.78340912]
[122.80410767 -107.26369476]
[122.17494965 -111.86341858]
[123.29741669 -115.78197479]
[125.59922791 -118.45293427]
[126.04583740 -133.44627380]
[126.49244690 -148.43963623]
[126.93904877 -163.43298340]
[116.38079834 -174.88554382]
[117.04730988 -190.08456421]
[128.03063965 -200.07966614]
[128.47724915 -215.07301331]
[128.92385864 -230.06636047]
[129.37045288 -245.05972290]
[129.81706238 -260.05307007]
[122.49407959 -274.07748413]
[130.60688782 -286.56875610]
[131.05349731 -301.56210327]
[116.42458344 -305.12420654]
[102.85612488 -311.65039062]
[90.94128418 -320.85528564]
[81.20091248 -332.33651733]
[74.06082153 -345.59219360]
[69.83314514 -360.04281616]
[68.70270538 -375.05667114]
[70.71891022 -389.97738647]
[75.79363251 -404.15277100]
[83.70501709 -416.96307373]
[94.10720825 -427.84826660]
[106.54547882 -436.33258057]
[120.47607422 -442.04501343]
[135.29000854 -444.73593140]
[150.33969116 -444.28765869]
[164.96719360 -440.71975708]
[178.53308105 -434.18826294]
[190.44430542 -424.97869873]
[200.18016052 -413.49362183]
[207.31503296 -400.23513794]
[211.53701782 -385.78286743]
[212.66156006 -370.76855469]
[210.63948059 -355.84860229]
[205.55918884 -341.67526245]
[197.64276123 -328.86807251]
[187.23628235 -317.98693848]
[174.79467773 -309.50753784]
[160.86183167 -303.80056763]
[146.04684448 -301.11550903]
[145.60023499 -286.12213135]
[152.95516968 -273.17013550]
[144.81040955 -259.60644531]
[144.36381531 -244.61311340]
[143.91720581 -229.61976624]
[143.47059631 -214.62640381]
[143.02398682 -199.63305664]
[153.39292908 -189.00193787]
[153.15359497 -173.79019165]
[141.93240356 -162.98637390]
[141.48579407 -147.99302673]
[141.03918457 -132.99967957]
[140.59257507 -118.00632477]
[140.48091125 -103.00673676]
[140.70423889 -88.00839996]
[148.97677612 -100.52100372]
[162.07186890 -107.83663177]
[177.06405640 -108.32096100]
[190.60401917 -101.86579132]
[199.66691589 -89.91322327]
[202.22807312 -75.13349152]
[197.71530151 -60.82842255]
[187.13679504 -50.19380951]
[172.85578918 -45.60544968]
[158.06271362 -48.08839798]
[146.06237793 -57.08795166]
[139.53569031 -70.59361267]
[137.31057739 -55.75957108]
[135.08544922 -40.92552567]
[140.84916687 -27.19130516]
[131.15034485 -14.69157505]
[128.92523193 0.14246845]
[126.70011139 14.97651196]
[124.47499084 29.81055641]
[122.24987030 44.64459991]
[120.02475739 59.47864151]
[129.93391418 48.21771240]
[143.71372986 42.29176712]
[158.70352173 42.84500885]
[172.00900269 49.77061844]
[181.06109619 61.73137283]
[184.11198425 76.41783142]
[180.57258606 90.99427032]
[171.12629700 102.64621735]
[157.59706116 109.12384796]
[142.59715271 109.17644501]
[129.02282715 102.79384613]
[119.49506378 91.20843506]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[106.06089783 129.52340698]
[94.64019775 139.08462524]
[89.81420135 153.28709412]
[92.70014191 168.84284973]
[81.27944183 178.40408325]
[76.45344543 192.60653687]
[71.62744904 206.80899048]
[85.52622223 201.16770935]
[99.39621735 206.87936401]
[105.29208374 220.67207336]
[99.83639526 234.64472961]
[86.15441132 240.79318237]
[72.08380127 235.59530640]
[65.68489838 222.02961731]
[59.61106491 235.74488831]
[61.09767914 251.49609375]
[48.86951447 260.00027466]
[42.79568100 273.71554565]
[43.41155624 278.01376343]
[42.69927979 281.89413452]
[40.95330429 284.99041748]
[38.55676270 287.06964111]
[35.93034744 288.04946899]
[29.05093384 301.37890625]
[22.17152214 314.70834351]
[15.29210854 328.03778076]
[8.41269588 341.36718750]
[1.53328359 354.69662476]
[-5.34612894 368.02606201]
[-12.22554111 381.35549927]
[0.13268472 389.89379883]
[11.29755974 399.94235229]
[21.08574677 411.33621216]
[29.33651352 423.88821411]
[35.91437531 437.39230347]
[40.71131897 451.62667847]
[43.64857483 466.35763550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 203]
[41 202]
[42 201]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 191]
[49 190]
[51 188]
[52 187]
[53 180]
[54 179]
[55 178]
[57 176]
[58 175]
[60 173]
[62 171]
[63 170]
[64 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[71 150]
[72 149]
[73 148]
[74 136]
[75 135]
[79 134]
[80 133]
[81 132]
[82 131]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
