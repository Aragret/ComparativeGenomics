%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[102.35317230 556.98590088]
[103.83654022 541.97052002]
[109.15653992 527.85101318]
[117.95044708 515.59014893]
[129.61868286 506.02377319]
[143.36567688 499.80426025]
[140.91995239 485.00500488]
[131.21102905 473.70959473]
[136.59468079 458.83255005]
[134.14895630 444.03326416]
[131.70323181 429.23400879]
[129.25750732 414.43472290]
[126.70166779 399.65408325]
[124.03587341 384.89285278]
[121.37007904 370.13162231]
[118.70428467 355.37042236]
[110.99304962 368.23654175]
[97.23760986 374.21884155]
[82.56840515 371.08605957]
[72.45667267 360.00665283]
[70.67385101 345.11297607]
[77.88488770 331.95999146]
[91.40024567 325.45346069]
[106.17901611 328.02011108]
[116.70963287 338.70373535]
[115.81681824 323.73031616]
[114.92399597 308.75689697]
[114.03118134 293.78350830]
[105.55005646 281.53933716]
[112.45223999 267.30310059]
[103.97111511 255.05891418]
[110.87329865 240.82267761]
[109.98048401 225.84927368]
[108.53106689 210.91946411]
[106.52705383 196.05393982]
[92.72941589 186.43811035]
[90.10379028 169.48461914]
[100.75756836 155.60958862]
[98.53245544 140.77554321]
[96.30733490 125.94150543]
[94.08222198 111.10746002]
[91.52639008 96.32680511]
[88.64111328 81.60691833]
[85.75584412 66.88702393]
[82.87056732 52.16713333]
[73.62518311 63.97911072]
[58.75269318 65.93077087]
[46.77273178 56.90410995]
[44.54796982 42.07001495]
[53.35285187 29.92612457]
[68.14353943 27.42901230]
[80.44673920 36.00833893]
[78.88621521 21.08973503]
[77.21467590 6.18316078]
[75.43221283 -8.71055603]
[73.64974213 -23.60427284]
[70.92511749 -26.98515511]
[69.55577087 -30.68507767]
[69.47559357 -34.23880386]
[70.47415161 -37.25036240]
[72.23181915 -39.43410873]
[71.33900452 -54.40751266]
[70.44618988 -69.38092041]
[69.55337524 -84.35432434]
[54.78648376 -87.41605377]
[41.32580185 -94.19067383]
[30.08619308 -104.21100616]
[21.82982826 -116.78952789]
[17.11449623 -131.06549072]
[16.25592041 -146.06388855]
[19.30663109 -160.76197815]
[26.05279160 -174.15905762]
[36.02917480 -185.34458923]
[48.55123901 -193.56010437]
[62.76210785 -198.25059509]
[61.86928940 -213.22399902]
[60.97647476 -228.19741821]
[60.08366013 -243.17082214]
[59.19084167 -258.14422607]
[58.29802704 -273.11761475]
[57.40521240 -288.09103394]
[56.51239395 -303.06445312]
[53.63654709 -307.42065430]
[52.80262375 -311.98770142]
[53.74900055 -315.95245361]
[55.92925262 -318.72354126]
[55.70592499 -333.72186279]
[45.02548981 -341.92813110]
[41.07907867 -354.60238647]
[45.09350204 -367.05093384]
[55.38990784 -374.79779053]
[55.38990784 -389.79779053]
[55.38990784 -404.79779053]
[52.26049805 -413.37942505]
[55.50323486 -420.02069092]
[55.72656250 -435.01904297]
[46.38712311 -450.88900757]
[55.96781540 -465.59197998]
[55.96781540 -480.59197998]
[42.19394684 -487.16793823]
[32.64402008 -499.07431030]
[29.21418190 -513.94708252]
[32.58542633 -528.83325195]
[42.08839035 -540.77709961]
[55.83625793 -547.40728760]
[71.09937286 -547.40728760]
[84.84724426 -540.77709961]
[94.35020447 -528.83325195]
[97.72145081 -513.94708252]
[94.29161072 -499.07431030]
[84.74168396 -487.16793823]
[70.96781921 -480.59197998]
[70.96781921 -465.59197998]
[79.29677582 -456.81958008]
[79.41953278 -444.32281494]
[70.72489929 -434.79571533]
[70.50157166 -419.79736328]
[70.38990784 -404.79779053]
[70.38990784 -389.79779053]
[70.38990784 -374.79779053]
[82.77916718 -363.42477417]
[83.11624908 -346.27249146]
[70.70426178 -333.94519043]
[70.92758942 -318.94686890]
[71.48580170 -303.95724487]
[72.37861633 -288.98385620]
[73.27143097 -274.01043701]
[74.16424561 -259.03704834]
[75.05706787 -244.06362915]
[75.94988251 -229.09022522]
[76.84269714 -214.11682129]
[77.73551178 -199.14341736]
[92.40306854 -196.17485046]
[105.81266785 -189.50555420]
[117.04754639 -179.58477783]
[125.33789825 -167.08427429]
[130.11358643 -152.85285950]
[131.04336548 -137.85870361]
[128.05787659 -123.12355804]
[121.35472870 -109.65305328]
[111.38548279 -98.36810303]
[98.82521057 -90.04194641]
[84.52677917 -85.24713898]
[85.41959381 -70.27373505]
[86.31240845 -55.30033112]
[87.20523071 -40.32692337]
[88.54346466 -25.38673973]
[90.32592773 -10.49302197]
[92.10839081 4.40069532]
[96.02445984 10.66856766]
[93.80482483 19.52921295]
[95.36534119 34.44781876]
[97.59046173 49.28186035]
[100.47573090 64.00175476]
[103.36100769 78.72164154]
[106.24627686 93.44153595]
[109.10961151 96.02488708]
[110.82034302 99.85780334]
[110.84592438 104.39723206]
[108.91626740 108.88234711]
[111.14138031 123.71638489]
[113.36650085 138.55043030]
[115.59161377 153.38447571]
[127.27266693 160.09025574]
[132.87698364 172.12362671]
[130.56169128 184.99691772]
[121.39257812 194.04992676]
[123.39659119 208.91545105]
[134.42826843 198.75169373]
[149.27528381 200.88851929]
[156.99298096 213.75076294]
[151.89215088 227.85684204]
[137.73294067 232.80828857]
[124.95388794 224.95645142]
[125.84670258 239.92987061]
[134.39169312 253.24504089]
[127.42564392 266.41027832]
[135.97062683 279.72543335]
[129.00459290 292.89068604]
[129.89739990 307.86410522]
[130.79022217 322.83749390]
[131.68302917 337.81091309]
[133.46549988 352.70462036]
[136.13130188 367.46585083]
[138.79708862 382.22705078]
[141.46289062 396.98828125]
[146.06761169 404.87713623]
[144.05677795 411.98898315]
[146.50250244 426.78826904]
[148.94822693 441.58752441]
[151.39395142 456.38681030]
[161.27781677 468.74075317]
[155.71922302 482.55926514]
[158.16494751 497.35852051]
[173.18205261 498.82449341]
[187.30769348 504.12814331]
[199.57876587 512.90783691]
[209.15861511 524.56500244]
[215.39405823 538.30474854]
[217.85995483 553.19036865]
[216.38818359 568.20690918]
[211.07910156 582.33050537]
[202.29466248 594.59820557]
[190.63381958 604.17352295]
[176.89163208 610.40368652]
[162.00505066 612.86383057]
[146.98908997 611.38629150]
[132.86755371 606.07171631]
[120.60325623 597.28253174]
[111.03241730 585.61804199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[9 191]
[10 190]
[11 189]
[12 188]
[13 186]
[14 185]
[15 184]
[16 183]
[25 182]
[26 181]
[27 180]
[28 179]
[30 177]
[32 175]
[33 174]
[34 168]
[35 167]
[38 163]
[39 162]
[40 161]
[41 160]
[42 156]
[43 155]
[44 154]
[45 153]
[52 152]
[53 151]
[54 149]
[55 148]
[56 147]
[61 146]
[62 145]
[63 144]
[64 143]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[86 124]
[87 123]
[91 120]
[92 119]
[93 118]
[95 117]
[96 116]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
