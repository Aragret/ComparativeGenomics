%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[119.33724213 457.52209473]
[122.76078033 442.68298340]
[131.92913818 430.52316284]
[145.25382996 423.14941406]
[143.91560364 408.20922852]
[142.57736206 393.26904297]
[133.73544312 381.28280640]
[140.21070862 366.84738159]
[138.87246704 351.90719604]
[137.53424072 336.96701050]
[136.19599915 322.02682495]
[134.19198608 307.16128540]
[131.52619934 292.40005493]
[119.48500824 279.63385010]
[125.85536957 262.35668945]
[122.97009277 247.63679504]
[120.08482361 232.91690063]
[117.19954681 218.19700623]
[114.31427765 203.47711182]
[104.27335358 192.47579956]
[109.21168518 177.44503784]
[106.32640839 162.72515869]
[103.22229767 148.04985046]
[99.90003967 133.42239380]
[85.42782593 130.07852173]
[73.83369446 120.79400635]
[67.40754700 107.40255737]
[67.41857147 92.54906464]
[73.86459351 79.16717529]
[85.47249603 69.89987183]
[82.15023804 55.27241135]
[78.82798004 40.64495087]
[75.50572205 26.01749039]
[72.18346405 11.39002991]
[68.86119843 -3.23743010]
[65.31904602 11.33834267]
[58.30847168 24.59925461]
[48.25816727 35.73439789]
[35.78271484 44.06285095]
[21.64499664 49.07532501]
[6.70953751 50.46530914]
[-8.11035347 48.14780426]
[-21.90843391 42.26452637]
[-33.84094620 33.17523956]
[-43.17821121 21.43575478]
[-49.34925461 7.76395082]
[-51.97671509 -7.00413847]
[-50.89991760 -21.96543884]
[-46.18471146 -36.20506287]
[-38.11943436 -48.85224533]
[-27.19727898 -59.13361359]
[-14.08614063 -66.42045593]
[0.41222924 -70.26718140]
[15.41125011 -70.43855286]
[29.99372673 -66.92409515]
[43.26793289 -59.93872833]
[54.42214966 -49.90959549]
[62.77428818 -37.44998932]
[67.81362152 -23.32179260]
[69.59608459 -38.21551132]
[71.37855530 -53.10922623]
[73.16101837 -68.00294495]
[74.94348907 -82.89665985]
[76.72595215 -97.79038239]
[78.50841522 -112.68409729]
[79.95783997 -127.61390686]
[81.07348633 -142.57235718]
[82.18913269 -157.53080750]
[83.30477905 -172.48927307]
[83.30477905 -187.48927307]
[82.18913269 -202.44772339]
[81.07348633 -217.40617371]
[79.95783997 -232.36462402]
[78.84218597 -247.32307434]
[77.72653961 -262.28152466]
[76.61089325 -277.23999023]
[75.49523926 -292.19842529]
[67.07905579 -279.78201294]
[53.32827377 -273.78903198]
[38.50371552 -276.07647705]
[27.19893265 -285.93557739]
[22.91683960 -300.31137085]
[26.98428535 -314.74938965]
[38.14093018 -324.77581787]
[52.92976761 -327.28387451]
[66.76831055 -321.49639893]
[75.36862183 -309.20648193]
[76.26143646 -324.17990112]
[76.93122101 -339.16494751]
[77.37783051 -354.15829468]
[77.82443237 -369.15164185]
[78.27104187 -384.14498901]
[78.71764374 -399.13833618]
[78.82931519 -414.13790894]
[78.60598755 -429.13626099]
[78.38265991 -444.13458252]
[78.15933228 -459.13293457]
[77.93600464 -474.13125610]
[77.71267700 -489.12960815]
[64.02724457 -495.98287964]
[55.10370255 -508.41787720]
[52.99260712 -523.57708740]
[58.17908096 -537.97705078]
[69.47130585 -548.30877686]
[84.27440643 -552.19805908]
[99.18674469 -548.75122070]
[110.78157806 -538.76031494]
[116.39449310 -524.52117920]
[114.73567963 -509.30581665]
[106.18632507 -496.61065674]
[92.71101379 -489.35293579]
[92.93434143 -474.35458374]
[93.15766907 -459.35626221]
[93.38099670 -444.35791016]
[93.60432434 -429.35958862]
[93.82765198 -414.36123657]
[96.08943939 -411.65631104]
[97.15344238 -407.72146606]
[96.45587158 -403.13162231]
[93.71099854 -398.69171143]
[93.26438904 -383.69836426]
[92.81778717 -368.70501709]
[92.37117767 -353.71166992]
[91.92457581 -338.71832275]
[94.48944092 -334.68960571]
[94.55073547 -329.00689697]
[91.23484039 -323.28707886]
[90.34202576 -308.31365967]
[90.45369720 -293.31408691]
[91.56934357 -278.35562134]
[92.68498993 -263.39718628]
[93.80064392 -248.43872070]
[94.91629028 -233.48027039]
[96.03193665 -218.52182007]
[97.14759064 -203.56336975]
[98.26323700 -188.60491943]
[106.18726349 -201.34107971]
[119.37089539 -208.49592590]
[134.36796570 -208.19920349]
[147.25827026 -200.52847290]
[154.67230225 -187.48883057]
[154.67207336 -172.48883057]
[147.25764465 -159.44943237]
[134.36711121 -151.77908325]
[119.37003326 -151.48281860]
[106.18662262 -158.63806152]
[98.26323700 -171.37361145]
[97.14759064 -156.41516113]
[96.03193665 -141.45671082]
[94.91629028 -126.49825287]
[96.92774200 -123.60232544]
[97.63645172 -119.58825684]
[96.53217316 -115.07894135]
[93.40213776 -110.90163422]
[91.61966705 -96.00791168]
[89.83720398 -81.11419678]
[88.05474091 -66.22048187]
[86.27227020 -51.32676315]
[84.48980713 -36.43304443]
[82.70733643 -21.53932762]
[83.48866272 -6.55968952]
[86.81092072 8.06777096]
[90.13317871 22.69523048]
[93.45543671 37.32269287]
[96.77770233 51.95014954]
[100.09996033 66.57761383]
[114.57217407 69.92147064]
[126.16630554 79.20599365]
[132.59245300 92.59744263]
[132.58143616 107.45093536]
[126.13540649 120.83282471]
[114.52750397 130.10012817]
[117.84976196 144.72758484]
[122.05388641 149.83021545]
[122.91997528 155.44688416]
[121.04630280 159.83987427]
[123.93157196 174.55976868]
[134.17887878 186.61395264]
[129.03416443 200.59184265]
[131.91943359 215.31173706]
[134.80471802 230.03163147]
[137.68998718 244.75151062]
[140.57525635 259.47140503]
[150.82464600 267.30166626]
[152.92475891 279.62130737]
[146.28741455 289.73428345]
[148.95320129 304.49548340]
[158.37342834 292.82247925]
[173.27333069 291.09246826]
[185.11756897 300.29647827]
[187.12123108 315.16204834]
[178.13652039 327.17352295]
[163.31028748 329.45013428]
[151.13618469 320.68856812]
[152.47442627 335.62875366]
[153.81265259 350.56893921]
[155.15089417 365.50912476]
[164.08853149 378.56399536]
[157.51754761 391.93078613]
[158.85578918 406.87097168]
[160.19401550 421.81115723]
[174.61706543 426.69949341]
[185.80050659 437.03634644]
[191.80676270 451.03079224]
[191.59518433 466.25823975]
[185.20245361 480.08041382]
[173.73612976 490.10256958]
[159.18284607 494.58828735]
[144.06402588 492.76037598]
[130.99909973 484.93557739]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 201]
[5 200]
[6 199]
[8 197]
[9 196]
[10 195]
[11 194]
[12 187]
[13 186]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[21 177]
[22 176]
[23 173]
[24 172]
[30 166]
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 150]
[67 149]
[68 148]
[69 147]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[87 128]
[88 127]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
