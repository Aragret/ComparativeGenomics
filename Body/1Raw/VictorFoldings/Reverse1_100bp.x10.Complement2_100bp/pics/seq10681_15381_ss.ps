%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[104.37355804 490.80731201]
[92.57125854 500.38720703]
[77.99987030 504.71652222]
[62.88141632 503.13510132]
[49.52136230 495.88409424]
[39.95700836 484.06918335]
[35.64685822 469.49212646]
[37.24816895 454.37576294]
[44.51676178 441.02526855]
[56.34422302 431.47644043]
[70.92694855 427.18548584]
[72.48747253 412.26687622]
[74.04799652 397.34826660]
[75.60852051 382.42965698]
[69.23728180 368.96652222]
[78.36830139 356.04617310]
[79.92882538 341.12756348]
[81.48934174 326.20895386]
[82.82758331 311.26876831]
[83.83184052 296.30242920]
[84.72465515 281.32904053]
[85.61746979 266.35562134]
[86.51028442 251.38221741]
[87.18006897 236.39717102]
[87.62667847 221.40382385]
[88.07328796 206.41047668]
[88.51988983 191.41712952]
[85.57693481 184.63768005]
[89.08641052 176.20433044]
[89.75619507 161.21929932]
[75.40593719 156.99008179]
[62.48441696 149.45016479]
[51.74227524 139.03755188]
[43.80356216 126.35713196]
[39.12945175 112.14555359]
[37.99148178 97.22840881]
[40.45575714 82.47227478]
[46.37911987 68.73437500]
[55.41746902 56.81277847]
[67.04573822 47.40004730]
[80.58841705 41.04299545]
[95.25876617 38.11091614]
[95.92855072 23.12587738]
[96.59833527 8.14083862]
[94.92679596 -6.76573563]
[90.95469666 -21.23025894]
[86.98259735 -35.69478226]
[83.01050568 -50.15930557]
[79.03840637 -64.62383270]
[75.06631470 -79.08835602]
[64.26293182 -86.13461304]
[61.25234222 -98.26392365]
[67.11913300 -108.84255219]
[63.36283112 -123.36460876]
[59.60652924 -137.88667297]
[51.08059692 -125.54533386]
[36.35063934 -122.71191406]
[23.85464287 -131.00950623]
[20.75088310 -145.68487549]
[28.81733704 -158.33131409]
[43.43317032 -161.70436096]
[56.22520828 -153.87254333]
[53.77947998 -168.67181396]
[51.33375549 -183.47108459]
[36.92855072 -193.39627075]
[34.21197128 -210.33543396]
[44.38279724 -223.72920227]
[41.71700287 -238.49041748]
[31.65030861 -250.69584656]
[37.00255203 -264.59558105]
[34.33675766 -279.35678101]
[31.67096329 -294.11801147]
[29.00516701 -308.87924194]
[13.97908020 -310.16448975]
[-0.19126245 -315.29156494]
[-12.54195976 -323.90530396]
[-22.23454285 -335.41357422]
[-28.61289215 -349.02804565]
[-31.24765968 -363.81814575]
[-29.96515465 -378.77462769]
[-24.85878372 -392.87841797]
[-16.28227806 -405.17019653]
[-4.82519627 -414.81552124]
[8.72760391 -421.16146851]
[6.06180906 -435.92269897]
[3.39601326 -450.68389893]
[-11.65332985 -451.36581421]
[-26.17347717 -455.37994385]
[-39.43610001 -462.52490234]
[-50.77595901 -472.44232178]
[-59.62424088 -484.63476562]
[-65.53713226 -498.49066162]
[-68.21803284 -513.31494141]
[-67.53247070 -528.36413574]
[-63.51484299 -542.88330078]
[-56.36666489 -556.14422607]
[-46.44649124 -567.48168945]
[-34.25190735 -576.32702637]
[-20.39459038 -582.23651123]
[-5.56961918 -584.91381836]
[9.47939205 -584.22460938]
[23.99759102 -580.20349121]
[37.25675201 -573.05212402]
[48.59180069 -563.12915039]
[57.43417740 -550.93243408]
[63.34034729 -537.07366943]
[66.01406860 -522.24810791]
[65.32121277 -507.19924927]
[61.29655075 -492.68200684]
[54.14194870 -479.42459106]
[44.21627808 -468.09194946]
[32.01741028 -459.25253296]
[18.15723038 -453.34970093]
[20.82302666 -438.58850098]
[23.48882103 -423.82727051]
[38.40520477 -422.62271118]
[52.51231003 -417.59414673]
[64.84648132 -409.07870483]
[74.56353760 -397.65191650]
[80.99652100 -384.08883667]
[83.70148468 -369.31143188]
[82.48813629 -354.32592773]
[77.43320465 -340.15432739]
[68.87560272 -327.76467896]
[57.39373016 -318.00494385]
[43.76638412 -311.54501343]
[46.43217850 -296.78381348]
[49.09797668 -282.02258301]
[51.76377106 -267.26138306]
[61.63978958 -256.11178589]
[56.47822189 -241.15621948]
[59.14401627 -226.39500427]
[70.65328217 -220.60134888]
[76.81614685 -209.06440735]
[75.18502808 -195.89057922]
[66.13302612 -185.91680908]
[68.57875061 -171.11753845]
[71.02448273 -156.31826782]
[74.12859344 -141.64297485]
[77.88488770 -127.12091064]
[81.64118958 -112.59884644]
[94.59853363 -100.76355743]
[89.53083801 -83.06044769]
[93.50292969 -68.59592438]
[97.47502899 -54.13140488]
[101.44712830 -39.66687775]
[105.41921997 -25.20235634]
[109.39131927 -10.73783207]
[112.37401581 -25.43828964]
[119.16302490 -38.81399155]
[129.26823425 -49.89933014]
[141.96014404 -57.89405060]
[156.32250977 -62.22100067]
[171.31849670 -62.56781769]
[185.86553955 -58.90946579]
[198.91346741 -51.51004028]
[209.52035522 -40.90371704]
[216.92045593 -27.85617447]
[220.57957458 -13.30932331]
[220.23353577 1.68668532]
[215.90734863 16.04927635]
[207.91329956 28.74160194]
[196.82847595 38.84739304]
[183.45314026 45.63710022]
[168.75283813 48.62057495]
[153.78880310 47.58243179]
[139.64131165 42.59761810]
[127.33166504 34.02599335]
[117.74852753 22.48634720]
[111.58337402 8.81062412]
[110.91358948 23.79566193]
[110.24380493 38.78070068]
[124.59406281 43.00991058]
[137.51557922 50.54983521]
[148.25772095 60.96245193]
[156.19644165 73.64286804]
[160.87054443 87.85444641]
[162.00851440 102.77159119]
[159.54425049 117.52772522]
[153.62088013 131.26562500]
[144.58253479 143.18722534]
[132.95425415 152.59994507]
[119.41158295 158.95700073]
[104.74123383 161.88908386]
[104.07144928 176.87411499]
[103.51323700 191.86373901]
[103.06663513 206.85708618]
[102.62002563 221.85043335]
[102.17342377 236.84378052]
[104.96579742 242.83662415]
[104.39775848 248.49121094]
[101.48369598 252.27502441]
[100.59087372 267.24844360]
[99.69805908 282.22183228]
[98.80524445 297.19525146]
[101.41831970 305.94793701]
[97.78603363 312.38442993]
[100.30802155 318.49597168]
[99.48806763 324.11956787]
[96.40795135 327.76947021]
[94.84742737 342.68807983]
[93.28690338 357.60668945]
[99.54651642 372.13693237]
[90.52712250 383.99020386]
[88.96659851 398.90878296]
[87.40608215 413.82739258]
[85.84555817 428.74600220]
[99.22463989 435.96185303]
[108.82004547 447.75152588]
[113.16853333 462.31723022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[16 202]
[17 201]
[18 200]
[19 197]
[20 195]
[21 194]
[22 193]
[23 192]
[24 189]
[25 188]
[26 187]
[27 186]
[29 185]
[30 184]
[42 172]
[43 171]
[44 170]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[53 141]
[54 140]
[55 139]
[62 138]
[63 137]
[64 136]
[67 132]
[68 131]
[70 129]
[71 128]
[72 127]
[73 126]
[84 115]
[85 114]
[86 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
