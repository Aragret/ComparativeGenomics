%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[125.40623474 631.98254395]
[110.58197021 634.79388428]
[95.53527832 633.67163086]
[81.29206085 628.69238281]
[68.82344818 620.19555664]
[58.97957230 608.76049805]
[52.43160248 595.16687012]
[49.62599564 580.34155273]
[50.75403214 565.29528809]
[55.73881149 551.05395508]
[64.24045563 538.58862305]
[75.67931366 528.74920654]
[89.27545929 522.20648193]
[104.10189056 519.40655518]
[105.21754456 504.44812012]
[106.33319092 489.48968506]
[99.56393433 476.22216797]
[108.30621338 463.03570557]
[109.42185974 448.07723999]
[110.53750610 433.11880493]
[111.65315247 418.16033936]
[111.98812866 403.16409302]
[111.54152679 388.17074585]
[111.09491730 373.17736816]
[110.64831543 358.18402100]
[110.20170593 343.19067383]
[102.08889771 330.69943237]
[109.41188812 316.67498779]
[108.96527863 301.68164062]
[94.39261627 298.27767944]
[81.18753052 291.21209717]
[70.25300598 280.96121216]
[62.33852005 268.21942139]
[57.98867798 253.85212708]
[57.50573730 238.83692932]
[60.92862701 224.19721985]
[68.02986908 210.93225098]
[78.33068848 199.94912720]
[91.13329315 192.00062561]
[105.56814575 187.63366699]
[105.12153625 172.64031982]
[104.67492676 157.64697266]
[102.67091370 142.78143311]
[99.13124084 128.20506287]
[95.59156799 113.62868500]
[86.08058929 103.38013458]
[89.83205414 89.91098022]
[76.81603241 76.88544464]
[82.40953827 60.25175476]
[78.65323639 45.72969818]
[74.89693451 31.20763779]
[71.14064026 16.68557930]
[67.38433838 2.16351938]
[57.63859558 13.56617451]
[42.64285278 13.20876408]
[33.45141602 1.35475910]
[36.83986282 -13.25751019]
[50.31036377 -19.85642242]
[63.93190384 -13.57877350]
[61.26610947 -28.33999062]
[58.60031128 -43.10120773]
[54.84401321 -57.62326813]
[50.01801300 -71.82572174]
[45.19201660 -86.02817535]
[40.36602020 -100.23063660]
[35.54001999 -114.43309021]
[30.71402359 -128.63554382]
[24.99000549 -135.75407410]
[25.92361259 -143.08552551]
[14.31650925 -153.83660889]
[17.76375389 -168.32679749]
[13.14974499 -182.59953308]
[8.53573513 -196.87226868]
[3.81560111 -211.11026001]
[-1.01039660 -225.31271362]
[-5.83639431 -239.51516724]
[-20.67353249 -237.08428955]
[-35.70841980 -237.12881470]
[-50.53089905 -239.64755249]
[-64.73659515 -244.57179260]
[-77.93796539 -251.76718140]
[-89.77487946 -261.03741455]
[-99.92440033 -272.12963867]
[-108.10965729 -284.74118042]
[-114.10733795 -298.52804565]
[-117.75382996 -313.11410522]
[-118.94964600 -328.10144043]
[-117.66217804 -343.08114624]
[-113.92652893 -357.64462280]
[-107.84462738 -371.39456177]
[-99.58238220 -383.95581055]
[-89.36519623 -394.98571777]
[-77.47180176 -404.18338013]
[-64.22666168 -411.29788208]
[-49.99111176 -416.13513184]
[-35.15350342 -418.56317139]
[-20.11862373 -418.51571655]
[-5.29663324 -415.99414062]
[8.90811443 -411.06716919]
[22.10810280 -403.86923218]
[33.94322586 -394.59671021]
[44.09061050 -383.50256348]
[52.27343750 -370.88940430]
[58.26846313 -357.10137939]
[61.91214371 -342.51461792]
[63.10507584 -327.52706909]
[61.81471634 -312.54760742]
[58.07626343 -297.98483276]
[51.99171066 -284.23608398]
[43.72704697 -271.67642212]
[33.50773621 -260.64849854]
[21.61257362 -251.45310974]
[8.36606121 -244.34115601]
[13.19205856 -230.13870239]
[18.01805687 -215.93624878]
[23.14643097 -210.61445618]
[22.80846786 -201.48626709]
[27.42247772 -187.21354675]
[32.03648758 -172.94081116]
[43.31356430 -163.21060181]
[40.19634628 -147.69953918]
[44.91648102 -133.46154785]
[49.74247742 -119.25908661]
[54.56847382 -105.05663300]
[59.39447403 -90.85417938]
[64.22046661 -76.65171814]
[69.04647064 -62.44926453]
[73.52862549 -76.76395416]
[84.50047302 -86.99227142]
[99.09399414 -90.46057129]
[113.49448395 -86.26223755]
[123.93768311 -75.49471283]
[127.69376373 -60.97259521]
[123.78089905 -46.49193573]
[113.22190094 -35.83794403]
[98.77686310 -31.79554558]
[84.22168732 -35.42141342]
[73.36152649 -45.76700211]
[76.02732849 -31.00578499]
[78.69312286 -16.24456787]
[81.90639496 -1.59278119]
[85.66269684 12.92927837]
[89.41899872 27.45133781]
[93.17530060 41.97339630]
[96.93159485 56.49545670]
[107.19195557 62.90260696]
[110.44023895 74.97043610]
[104.40843201 86.37131500]
[113.91941071 96.61986542]
[110.16794586 110.08901978]
[113.70761871 124.66539001]
[117.24729156 139.24176025]
[121.60242462 124.88792419]
[131.05949402 113.24473572]
[144.21560669 106.03940582]
[159.11912537 104.34079742]
[173.55918884 108.40088654]
[185.39372253 117.61738586]
[192.86712646 130.62307739]
[194.87077332 145.48866272]
[191.10743713 160.00889587]
[182.13537598 172.02980042]
[169.28555298 179.76814270]
[154.46415710 182.07598877]
[139.86985779 178.61099243]
[127.66762543 169.88713074]
[119.66828156 157.20036316]
[120.11488342 172.19371033]
[120.56149292 187.18705750]
[135.23068237 190.68710327]
[148.48368835 197.85948181]
[159.41996765 208.21002197]
[167.29815674 221.02879333]
[171.58634949 235.43882751]
[171.99800110 250.45613098]
[168.51101685 265.05688477]
[161.36897278 278.24716187]
[151.06398010 289.13070679]
[138.30285645 296.96972656]
[123.95863342 301.23504639]
[124.40523529 316.22839355]
[132.54998779 329.79208374]
[125.19506073 342.74407959]
[125.64166260 357.73742676]
[126.08827209 372.73077393]
[126.53487396 387.72412109]
[126.98148346 402.71746826]
[137.20352173 391.73977661]
[152.07444763 389.77621460]
[164.79547119 397.72451782]
[169.55072021 411.95080566]
[164.16615295 425.95104980]
[151.10351562 433.32449341]
[136.33488464 430.70010376]
[126.61161041 419.27600098]
[125.49596405 434.23443604]
[124.38031006 449.19290161]
[123.26466370 464.15133667]
[129.95411682 478.48876953]
[121.29164124 490.60531616]
[120.17599487 505.56378174]
[119.06034851 520.52221680]
[133.30740356 525.49047852]
[145.78257751 533.97772217]
[155.63526917 545.40515137]
[162.19374084 558.99371338]
[165.01080322 573.81689453]
[163.89437866 588.86401367]
[158.92059326 603.10913086]
[150.42857361 615.58105469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 202]
[15 201]
[16 200]
[18 198]
[19 197]
[20 196]
[21 195]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[28 181]
[29 180]
[40 169]
[41 168]
[42 167]
[43 152]
[44 151]
[45 150]
[47 148]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[59 140]
[60 139]
[61 138]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[69 121]
[71 119]
[72 118]
[73 117]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
