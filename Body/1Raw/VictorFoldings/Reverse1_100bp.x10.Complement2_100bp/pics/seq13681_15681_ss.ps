%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[68.35157013 724.78240967]
[53.39579010 726.07446289]
[38.38491440 725.93902588]
[23.45488358 724.37731934]
[8.74091148 721.40344238]
[-5.62374640 717.04443359]
[-19.50899887 711.33959961]
[-32.78909683 704.34082031]
[-45.34376907 696.11126709]
[-57.05931854 686.72558594]
[-67.82964325 676.26879883]
[-77.55720520 664.83557129]
[-86.15390778 652.52941895]
[-93.54189301 639.46179199]
[-99.65425110 625.75103760]
[-104.43563080 611.52142334]
[-107.84273529 596.90167236]
[-109.84469604 582.02429199]
[-110.42338562 567.02392578]
[-109.57357788 552.03656006]
[-107.30294800 537.19775391]
[-103.63207245 522.64202881]
[-98.59419250 508.50115967]
[-92.23493195 494.90319824]
[-84.61188507 481.97131348]
[-75.79408264 469.82260132]
[-65.86139679 458.56707764]
[-54.90376663 448.30673218]
[-43.02043152 439.13442993]
[-30.31901550 431.13323975]
[-16.91454506 424.37567139]
[-2.92841625 418.92285156]
[11.51270771 414.82424927]
[26.27804375 412.11691284]
[41.23386765 410.82540894]
[56.24473953 410.96139526]
[57.80526352 396.04278564]
[59.36578751 381.12417603]
[60.92631149 366.20556641]
[62.48683167 351.28695679]
[60.05625916 344.30740356]
[64.18325806 336.15844727]
[65.96572876 321.26473999]
[67.74819183 306.37100220]
[69.53066254 291.47729492]
[71.31312561 276.58358765]
[73.09558868 261.68984985]
[74.87805939 246.79614258]
[63.84646606 236.82408142]
[60.76570892 222.09408569]
[67.02239227 208.21217346]
[80.40818787 200.58810425]
[82.19065857 185.69438171]
[83.97312164 170.80067444]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[89.85629272 29.96173096]
[91.87613678 14.88277626]
[103.70738983 5.90742016]
[105.48985291 -8.98629761]
[106.04806519 -23.97590637]
[105.37828064 -38.96094513]
[104.70849609 -53.94598389]
[104.03871155 -68.93102264]
[103.36892700 -83.91606140]
[88.61694336 -91.38405609]
[79.69515228 -105.19336700]
[78.95909882 -121.52355957]
[86.51507568 -135.91325378]
[100.21692657 -144.47897339]
[99.32411194 -159.45237732]
[98.43129730 -174.42578125]
[97.53848267 -189.39918518]
[82.55477905 -190.46861267]
[67.83886719 -193.48472595]
[53.64255142 -198.39588928]
[40.20874786 -205.11810303]
[27.76733208 -213.53630066]
[16.53118706 -223.50645447]
[6.69258356 -234.85797119]
[-1.58013082 -247.39660645]
[-8.14539814 -260.90780640]
[-12.89087677 -275.16033936]
[-15.73536682 -289.91040039]
[-16.63019562 -304.90554810]
[-15.56005001 -319.88919067]
[-12.54324245 -334.60494995]
[-7.63139439 -348.80105591]
[-0.90855420 -362.23452759]
[7.51024199 -374.67553711]
[17.48093796 -385.91122437]
[28.83292007 -395.74926758]
[41.37194061 -404.02139282]
[54.88344574 -410.58602905]
[69.13623047 -415.33081055]
[83.88641357 -418.17462158]
[98.88159943 -419.06872559]
[113.86519623 -417.99786377]
[128.58082581 -414.98034668]
[142.77667236 -410.06784058]
[156.20983887 -403.34436035]
[168.65045166 -394.92495728]
[179.88565063 -384.95373535]
[189.72317505 -373.60128784]
[197.99468994 -361.06185913]
[204.55867004 -347.55004883]
[209.30279541 -333.29702759]
[212.14587402 -318.54672241]
[213.03927612 -303.55148315]
[211.96771240 -288.56793213]
[208.94949341 -273.85244751]
[204.03630066 -259.65686035]
[197.31217957 -246.22399902]
[188.89219666 -233.78379822]
[178.92044067 -222.54907227]
[167.56752014 -212.71208191]
[155.02770996 -204.44116211]
[141.51557922 -197.87782288]
[127.26234436 -193.13438416]
[112.51188660 -190.29199219]
[113.40470123 -175.31858826]
[114.29752350 -160.34518433]
[115.19033813 -145.37178040]
[127.77959442 -140.07766724]
[136.90345764 -129.82662964]
[140.73880005 -116.58128357]
[138.48237610 -102.91062927]
[130.51828003 -91.49181366]
[118.35396576 -84.58584595]
[119.02375031 -69.60080719]
[119.69353485 -54.61576843]
[120.36331940 -39.63072968]
[121.03310394 -24.64569283]
[128.92942810 -37.39904785]
[141.80090332 -45.10132599]
[156.77201843 -46.03181458]
[170.49818420 -39.98263931]
[179.91293335 -28.30520630]
[182.91299438 -13.60828018]
[178.82814026 0.82480705]
[168.57095337 11.76966667]
[154.43289185 16.78119087]
[139.57244873 14.73978901]
[127.30948639 6.10151911]
[120.38357544 -7.20383120]
[118.60110474 7.68988609]
[127.98023987 19.20368004]
[126.38473511 34.33341980]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[98.86683655 172.58312988]
[97.08437347 187.47685242]
[95.30191040 202.37057495]
[106.51055908 212.93807983]
[109.31471252 227.90438843]
[102.84500122 241.49139404]
[89.77177429 248.57861328]
[87.98931122 263.47232056]
[86.20684052 278.36605835]
[84.42437744 293.25976562]
[82.64190674 308.15347290]
[80.85944366 323.04721069]
[79.07698059 337.94091797]
[77.40544128 352.84750366]
[75.84491730 367.76608276]
[74.28439331 382.68469238]
[72.72386932 397.60330200]
[71.16334534 412.52191162]
[85.87742615 415.49523926]
[100.24224091 419.85375977]
[114.12770081 425.55801392]
[127.40805817 432.55639648]
[139.96302795 440.78543091]
[151.67892456 450.17068481]
[162.44963074 460.62710571]
[172.17761230 472.05999756]
[180.77474976 484.36584473]
[188.16320801 497.43316650]
[194.27607727 511.14367676]
[199.05798340 525.37316895]
[202.46560669 539.99273682]
[204.46810913 554.87005615]
[205.04734802 569.87036133]
[204.19808960 584.85784912]
[201.92799377 599.69665527]
[198.25765991 614.25256348]
[193.22029114 628.39361572]
[186.86152649 641.99182129]
[179.23895264 654.92401123]
[170.42160034 667.07299805]
[160.48931885 678.32885742]
[149.53205872 688.58966064]
[137.64906311 697.76239014]
[124.94793701 705.76403809]
[111.54370880 712.52209473]
[97.55777740 717.97540283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[60 159]
[61 158]
[62 157]
[63 156]
[66 153]
[67 152]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[77 130]
[78 129]
[79 128]
[80 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
