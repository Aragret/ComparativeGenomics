%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[95.26701355 832.00042725]
[80.33332825 830.56237793]
[65.48345947 828.42590332]
[50.75005722 825.59570312]
[36.16550446 822.07806396]
[21.76186180 817.88067627]
[7.57079124 813.01275635]
[-6.37651110 807.48504639]
[-20.04938698 801.30963135]
[-33.41777802 794.50012207]
[-46.45230103 787.07153320]
[-59.12429810 779.04010010]
[-71.40592194 770.42358398]
[-83.27016449 761.24084473]
[-94.69094849 751.51208496]
[-105.64317322 741.25866699]
[-116.10276031 730.50323486]
[-126.04672241 719.26928711]
[-135.45318604 707.58166504]
[-144.30149841 695.46594238]
[-152.57217407 682.94879150]
[-160.24707031 670.05773926]
[-167.30928040 656.82110596]
[-173.74330139 643.26800537]
[-179.53498840 629.42828369]
[-184.67161560 615.33221436]
[-189.14187622 601.01092529]
[-192.93594360 586.49578857]
[-196.04548645 571.81884766]
[-198.46368408 557.01220703]
[-200.18518066 542.10858154]
[-201.20623779 527.14056396]
[-201.52456665 512.14117432]
[-201.13949585 497.14337158]
[-200.05187988 482.18008423]
[-198.26408386 467.28421021]
[-195.78004456 452.48849487]
[-192.60522461 437.82550049]
[-188.74661255 423.32742310]
[-184.21269226 409.02615356]
[-179.01341248 394.95312500]
[-173.16020203 381.13925171]
[-166.66595459 367.61489868]
[-159.54490662 354.40982056]
[-151.81274414 341.55307007]
[-143.48645020 329.07284546]
[-134.58433533 316.99661255]
[-125.12596893 305.35092163]
[-115.13212585 294.16134644]
[-104.62479401 283.45251465]
[-93.62705994 273.24795532]
[-82.16310120 263.57012939]
[-70.25812531 254.44024658]
[-57.93828964 245.87843323]
[-45.23068619 237.90348816]
[-32.16324234 230.53292847]
[-18.76469040 223.78298950]
[-5.06447601 217.66848755]
[8.90728092 212.20285034]
[23.11986732 207.39813232]
[37.54204178 203.26484680]
[52.14210129 199.81211853]
[66.88794708 197.04753113]
[81.74717712 194.97714233]
[96.68711090 193.60552979]
[96.01732635 178.62048340]
[95.34754181 163.63545227]
[94.67775726 148.65040588]
[86.37986755 136.28132629]
[93.49324036 122.14942932]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[91.81033325 76.95825195]
[91.36372375 61.96489716]
[90.91712189 46.97154999]
[77.96707153 35.21078491]
[77.53792572 18.06054497]
[89.40699768 6.14568186]
[88.73721313 -8.83935738]
[88.06742859 -23.82439613]
[87.39764404 -38.80943298]
[86.72785950 -53.79447174]
[71.57865143 -59.18056107]
[59.68478775 -69.94190216]
[52.84766388 -84.40873718]
[52.08747101 -100.35320282]
[57.49107361 -115.33238983]
[68.20321655 -127.06265259]
[82.56176758 -133.76773071]
[81.66894531 -148.74113464]
[80.77613068 -163.71453857]
[65.99303436 -166.73486328]
[52.49580383 -173.47927856]
[41.20470810 -183.48796082]
[32.88959503 -196.07849121]
[28.11740112 -210.39241028]
[27.21350288 -225.45379639]
[30.23953056 -240.23573303]
[36.98916245 -253.73036194]
[47.00219727 -265.01757812]
[59.59593201 -273.32785034]
[73.91170502 -278.09451294]
[88.97344208 -278.99258423]
[103.75420380 -275.96084595]
[117.24622345 -269.20602417]
[128.52958679 -259.18862915]
[136.83497620 -246.59167480]
[141.59611511 -232.27406311]
[142.48837280 -217.21199036]
[139.45092773 -202.43238831]
[132.69088745 -188.94297791]
[122.66913605 -177.66349792]
[110.06898499 -169.36297607]
[95.74954224 -164.60736084]
[96.64235687 -149.63395691]
[97.53517151 -134.66055298]
[110.96221161 -130.57963562]
[122.21372986 -122.14269257]
[129.92594910 -110.34688568]
[133.15541077 -96.59796906]
[131.49433899 -82.54280090]
[125.12200165 -69.87210846]
[114.78565216 -60.11705780]
[101.71289825 -54.46426010]
[102.38268280 -39.47922134]
[103.05246735 -24.49418068]
[103.72225189 -9.50914192]
[104.39203644 5.47589636]
[115.02408600 12.75525379]
[119.59036255 25.01213837]
[116.21382141 37.84994888]
[105.91046906 46.52494431]
[106.35707092 61.51829147]
[106.80368042 76.51164246]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[108.47827911 121.47964478]
[116.82407379 134.92056274]
[109.66279602 147.98062134]
[110.33258057 162.96566772]
[111.00236511 177.95069885]
[111.67214966 192.93574524]
[126.67488098 192.96902466]
[141.65956116 193.70547485]
[156.59326172 195.14347839]
[171.44313049 197.27989197]
[186.17654419 200.11000061]
[200.76112366 203.62757874]
[215.16477966 207.82490540]
[229.35586548 212.69276428]
[243.30319214 218.22042847]
[256.97610474 224.39576721]
[270.34451294 231.20520020]
[283.37905884 238.63375854]
[296.05111694 246.66511536]
[308.33276367 255.28160095]
[320.19705200 264.46429443]
[331.61788940 274.19299316]
[342.57015991 284.44631958]
[353.02978516 295.20175171]
[362.97378540 306.43560791]
[372.38031006 318.12322998]
[381.22866821 330.23892212]
[389.49938965 342.75601196]
[397.17434692 355.64703369]
[404.23660278 368.88363647]
[410.67071533 382.43670654]
[416.46243286 396.27645874]
[421.59912109 410.37246704]
[426.06945801 424.69375610]
[429.86358643 439.20883179]
[432.97320557 453.88580322]
[435.39144897 468.69238281]
[437.11300659 483.59603882]
[438.13412476 498.56402588]
[438.45254517 513.56341553]
[438.06753540 528.56121826]
[436.97998047 543.52453613]
[435.19223022 558.42041016]
[432.70825195 573.21612549]
[429.53350830 587.87915039]
[425.67495728 602.37725830]
[421.14108276 616.67852783]
[415.94186401 630.75158691]
[410.08874512 644.56549072]
[403.59454346 658.08984375]
[396.47354126 671.29498291]
[388.74145508 684.15179443]
[380.41522217 696.63201904]
[371.51315308 708.70831299]
[362.05480957 720.35400391]
[352.06103516 731.54364014]
[341.55374146 742.25250244]
[330.55606079 752.45709229]
[319.09213257 762.13500977]
[307.18719482 771.26495361]
[294.86740112 779.82678223]
[282.15982056 787.80181885]
[269.09243774 795.17242432]
[255.69389343 801.92242432]
[241.99371338 808.03698730]
[228.02197266 813.50268555]
[213.80941772 818.30743408]
[199.38725281 822.44079590]
[184.78721619 825.89355469]
[170.04138184 828.65826416]
[155.18215942 830.72869873]
[140.24223328 832.10034180]
[125.25442505 832.77026367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 143]
[66 142]
[67 141]
[68 140]
[70 138]
[71 137]
[73 136]
[74 135]
[75 134]
[76 133]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
