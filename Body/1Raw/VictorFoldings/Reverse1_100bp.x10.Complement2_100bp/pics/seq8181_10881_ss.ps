%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[208.10214233 575.57293701]
[217.11799622 563.52673340]
[228.25085449 553.40466309]
[241.09828186 545.57269287]
[235.85156250 531.52020264]
[230.60484314 517.46771240]
[225.35812378 503.41528320]
[220.11140442 489.36279297]
[214.86468506 475.31033325]
[209.61796570 461.25784302]
[204.16261292 447.28506470]
[198.49981689 433.39501953]
[192.83703613 419.50500488]
[187.17425537 405.61499023]
[181.51145935 391.72494507]
[169.54191589 382.86044312]
[171.49684143 367.16049194]
[165.83406067 353.27047729]
[160.17127991 339.38043213]
[154.50848389 325.49041748]
[148.84570312 311.60037231]
[140.71073914 324.20285034]
[125.80167389 325.85208130]
[115.10893250 315.33233643]
[116.51479340 300.39837646]
[128.98291016 292.05892944]
[143.32102966 296.46044922]
[138.70703125 282.18774414]
[134.09301758 267.91500854]
[124.21147919 267.84841919]
[114.65825653 265.25582886]
[106.06930542 260.30072021]
[99.01869965 253.30433655]
[93.98023987 244.72454834]
[91.29563904 235.12606812]
[91.15133667 225.14326477]
[93.56559753 215.43817139]
[98.38670349 206.65667725]
[105.30249786 199.38542175]
[113.86051941 194.11274719]
[110.53826141 179.48529053]
[107.21599579 164.85783386]
[103.89373779 150.23036194]
[100.57147980 135.60290527]
[97.24922180 120.97544861]
[93.92696381 106.34799194]
[91.49493408 104.51094055]
[89.67758179 101.74837494]
[88.81899261 98.28625488]
[89.17494202 94.47448730]
[90.86988068 90.75156403]
[88.42414856 75.95229340]
[85.97842407 61.15302277]
[83.53269196 46.35375214]
[81.08696747 31.55448151]
[78.64124298 16.75521088]
[62.96634293 13.90260410]
[49.23899841 5.86858845]
[39.10965729 -6.35960913]
[33.78886795 -21.29179192]
[33.90263748 -37.11638641]
[39.41883850 -51.92022705]
[49.65329742 -63.91984177]
[63.35461807 -71.67632294]
[60.68882370 -86.43753815]
[58.02302933 -101.19876099]
[55.35723114 -115.95997620]
[45.29053879 -128.16539001]
[50.64278412 -142.06513977]
[47.97698593 -156.82635498]
[37.91029358 -169.03176880]
[43.26253891 -182.93150330]
[40.59674072 -197.69271851]
[33.51797104 -184.46809387]
[20.46528244 -177.07705688]
[5.48319054 -177.80982971]
[-6.78593731 -186.43934631]
[-12.54037952 -200.29165649]
[-9.99705982 -215.07446289]
[0.05594700 -226.20716858]
[14.50360680 -230.24017334]
[28.86915588 -225.92381287]
[38.70138168 -214.59530640]
[38.03159332 -229.58035278]
[37.36180878 -244.56538391]
[36.35754776 -259.53173828]
[35.01931381 -274.47192383]
[33.68107986 -289.41210938]
[32.34284592 -304.35229492]
[31.00461197 -319.29248047]
[16.10263634 -321.57162476]
[2.17939138 -327.35147095]
[-9.95564365 -336.29598999]
[-19.59695435 -347.88516235]
[-26.18400574 -361.44515991]
[-29.33383560 -376.18768311]
[-28.86331940 -391.25561523]
[-24.79980850 -405.77288818]
[-17.37955284 -418.89550781]
[-7.03395700 -429.86053467]
[5.63550234 -438.03051758]
[19.89223862 -442.93038940]
[34.90738297 -444.27536011]
[49.80797195 -441.98715210]
[63.72771072 -436.19888306]
[75.85732269 -427.24700928]
[85.49160767 -415.65200806]
[92.07043457 -402.08798218]
[95.21132660 -387.34356689]
[94.73167419 -372.27593994]
[90.65936279 -357.76110840]
[83.23115540 -344.64300537]
[72.87891388 -333.68423462]
[60.20450211 -325.52194214]
[45.94479752 -320.63070679]
[47.28303146 -305.69052124]
[48.62126541 -290.75033569]
[49.95949936 -275.81015015]
[51.29773331 -260.86996460]
[53.75444412 -258.34075928]
[55.10815811 -254.49595642]
[54.75389481 -249.86692810]
[52.34684753 -245.23516846]
[53.01663208 -230.25013733]
[53.68642044 -215.26509094]
[55.35795975 -200.35852051]
[58.02375412 -185.59730530]
[67.89977264 -174.44770813]
[62.73820496 -159.49214172]
[65.40399933 -144.73092651]
[75.28002167 -133.58132935]
[70.11844635 -118.62577057]
[72.78424835 -103.86455536]
[75.45004272 -89.10334015]
[78.11583710 -74.34211731]
[92.13393402 -72.36564636]
[104.87562561 -66.14710236]
[115.08937073 -56.28254700]
[121.76736450 -43.72691345]
[124.24501801 -29.70152855]
[122.26702881 -15.57533836]
[116.01367188 -2.73128843]
[106.08441925 7.56906986]
[93.44051361 14.30948353]
[95.88623810 29.10875511]
[98.33197021 43.90802383]
[100.77769470 58.70729446]
[103.22341919 73.50656891]
[105.66915131 88.30583954]
[108.55442047 103.02572632]
[111.87667847 117.65319061]
[115.19894409 132.28065491]
[118.52120209 146.90811157]
[121.84346008 161.53556824]
[125.16571808 176.16302490]
[128.48797607 190.79049683]
[148.40133667 195.72514343]
[162.99824524 210.03215027]
[168.29154968 229.69482422]
[162.89064026 249.24888611]
[148.36575317 263.30099487]
[152.97975159 277.57373047]
[157.59376526 291.84646606]
[162.73573303 305.93759155]
[168.39851379 319.82763672]
[174.06129456 333.71765137]
[179.72409058 347.60766602]
[185.38687134 361.49771118]
[197.76145935 371.35571289]
[195.40148926 386.06216431]
[201.06427002 399.95217896]
[206.72706604 413.84222412]
[212.38984680 427.73223877]
[218.05264282 441.62228394]
[223.03248596 445.97113037]
[224.80276489 451.37142944]
[223.67044067 456.01113892]
[228.91716003 470.06359863]
[234.16387939 484.11608887]
[239.41059875 498.16854858]
[244.65731812 512.22100830]
[249.90402222 526.27349854]
[255.15074158 540.32598877]
[269.98736572 537.82165527]
[285.02978516 538.17077637]
[299.73425293 541.36059570]
[313.56921387 547.27587891]
[326.03451538 555.70275879]
[336.67959595 566.33660889]
[345.11959839 578.79309082]
[351.04940796 592.62176514]
[354.25473022 607.32287598]
[354.61962891 622.36492920]
[352.13095093 637.20416260]
[346.87866211 651.30419922]
[339.05261230 664.15521240]
[328.93569946 675.29278564]
[316.89367676 684.31420898]
[303.36181641 690.89337158]
[288.82931519 694.79248047]
[273.82150269 695.87054443]
[258.88092041 694.08862305]
[244.54763794 689.51110840]
[231.33979797 682.30352783]
[219.73486328 672.72637939]
[210.15234375 661.12585449]
[202.93862915 647.92132568]
[198.35450745 633.59020996]
[196.56568909 618.65039062]
[197.63684082 603.64208984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[27 163]
[28 162]
[29 161]
[40 156]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[46 150]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[64 135]
[65 134]
[66 133]
[67 132]
[69 130]
[70 129]
[72 127]
[73 126]
[83 125]
[84 124]
[85 123]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
