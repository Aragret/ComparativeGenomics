%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[65.02030945 656.76593018]
[49.77241516 656.08441162]
[36.33431625 648.84698486]
[27.37414932 636.49072266]
[24.67096901 621.46887207]
[28.76149178 606.76409912]
[38.83354187 595.29602051]
[52.88730240 589.34167480]
[53.55708694 574.35662842]
[54.22687149 559.37158203]
[54.89665985 544.38653564]
[55.56644440 529.40148926]
[46.65182877 514.28540039]
[56.69058609 498.84826660]
[57.13719177 483.85491943]
[49.78226089 470.90292358]
[57.92701340 457.33923340]
[58.37361908 442.34588623]
[58.82022476 427.35253906]
[46.27898788 435.58160400]
[31.97905922 431.05255127]
[26.46181679 417.10409546]
[33.79436493 404.01846313]
[48.57142258 401.44192505]
[59.89923096 411.27227783]
[61.45975113 396.35366821]
[63.02027512 381.43505859]
[53.47076035 370.06219482]
[54.84083176 354.91036987]
[66.83450317 344.97106934]
[68.39501953 330.05245972]
[55.64860535 322.30685425]
[47.49566269 309.74346924]
[45.59821701 294.82501221]
[50.38574982 280.50369263]
[60.95948410 269.63708496]
[75.26056671 264.41784668]
[76.82109070 249.49925232]
[78.38161469 234.58064270]
[79.94213104 219.66203308]
[67.19571686 211.91644287]
[59.04277420 199.35304260]
[57.14532852 184.43457031]
[61.93286133 170.11326599]
[72.50659180 159.24665833]
[86.80767822 154.02743530]
[88.36820221 139.10882568]
[89.92872620 124.19022369]
[91.48924255 109.27161407]
[92.71622467 94.32188416]
[93.60903931 79.34848022]
[94.50185394 64.37506866]
[81.72116852 72.22708130]
[67.56242371 67.27429962]
[62.46292496 53.16773605]
[70.18183136 40.30622482]
[85.02905273 38.17079163]
[96.05915070 48.33406448]
[98.06316376 33.46853638]
[100.06717682 18.60300827]
[98.08295441 13.77497101]
[98.14308167 9.13280773]
[99.83441925 5.42410994]
[102.50697327 3.12415886]
[105.17276764 -11.63705826]
[107.83856964 -26.39827538]
[110.50436401 -41.15949249]
[98.22858429 -50.16319275]
[91.10837555 -63.54936600]
[90.50869751 -78.63778687]
[96.49497986 -92.43363953]
[107.83072662 -102.22190094]
[122.23256683 -106.10167694]
[124.89836121 -120.86289215]
[127.56415558 -135.62411499]
[130.11999512 -150.40475464]
[132.56571960 -165.20402527]
[135.01144409 -180.00331116]
[137.45716858 -194.80258179]
[135.61758423 -199.68754578]
[135.81588745 -204.32586670]
[137.61689758 -207.98255920]
[140.35675049 -210.20191956]
[143.46086121 -224.87722778]
[146.56497192 -239.55252075]
[149.66908264 -254.22782898]
[152.77319336 -268.90313721]
[155.87730408 -283.57843018]
[154.59152222 -292.62191772]
[159.13841248 -298.44836426]
[162.46067810 -313.07583618]
[157.97206116 -328.24694824]
[168.33607483 -338.94442749]
[154.35850525 -344.46963501]
[141.38819885 -352.06381226]
[129.72923279 -361.54901123]
[119.65489197 -372.70285034]
[111.40133667 -385.26385498]
[105.16204071 -398.93762207]
[101.08326721 -413.40359497]
[99.26062012 -428.32266235]
[99.73683167 -443.34509277]
[102.50074005 -458.11874390]
[107.48755646 -472.29733276]
[114.58036804 -485.54846191]
[123.61293030 -497.56152344]
[134.37348938 -508.05487061]
[146.60980225 -516.78259277]
[160.03504944 -523.54003906]
[174.33451843 -528.16882324]
[189.17300415 -530.56048584]
[204.20266724 -530.65887451]
[219.07118225 -528.46179199]
[233.43003845 -524.02062988]
[246.94262695 -517.43957520]
[259.29220581 -508.87283325]
[270.18923950 -498.52130127]
[279.37835693 -486.62756348]
[286.64407349 -473.47045898]
[291.81613159 -459.35839844]
[294.77328491 -444.62219238]
[295.44616699 -429.60726929]
[293.81906128 -414.66561890]
[289.93005371 -400.14749146]
[283.87036133 -386.39318848]
[275.78201294 -373.72515869]
[265.85458374 -362.44036865]
[254.32084656 -352.80331421]
[241.45111084 -345.03991699]
[227.54707336 -339.33215332]
[212.93469238 -335.81384277]
[197.95646667 -334.56744385]
[182.96354675 -335.62219238]
[187.68978882 -321.49731445]
[177.08813477 -309.75357056]
[173.76588440 -295.12609863]
[170.55259705 -280.47433472]
[167.44848633 -265.79901123]
[164.34439087 -251.12371826]
[161.24028015 -236.44841003]
[158.13616943 -221.77311707]
[155.03205872 -207.09780884]
[152.25643921 -192.35684204]
[149.81071472 -177.55757141]
[147.36499023 -162.75830078]
[144.91926575 -147.95903015]
[146.93009949 -140.84718323]
[142.32537842 -132.95831299]
[139.65957642 -118.19709778]
[136.99378967 -103.43587494]
[149.12879944 -94.76369476]
[156.32473755 -81.62870789]
[157.10734558 -66.61043549]
[151.26791382 -52.68487930]
[139.91523743 -42.63480759]
[125.26557922 -38.49369812]
[122.59978485 -23.73248100]
[119.93399048 -8.97126293]
[117.26818848 5.78995466]
[114.93270874 20.60702324]
[112.92868805 35.47254944]
[110.92467499 50.33807755]
[109.47525787 65.26789093]
[108.58244324 80.24129486]
[107.68962860 95.21469879]
[109.81480408 98.43276978]
[110.51118469 102.57196808]
[109.39919281 106.97315979]
[106.40785217 110.83213806]
[104.84732819 125.75074768]
[103.28680420 140.66934204]
[101.72628021 155.58795166]
[114.63772583 163.65368652]
[122.73383331 176.47320557]
[124.45407104 191.47523499]
[119.51045990 205.67811584]
[108.93412018 216.28237915]
[94.86074066 221.22256470]
[93.30021667 236.14117432]
[91.73969269 251.05976868]
[90.17916870 265.97836304]
[103.09061432 274.04409790]
[111.18671417 286.86361694]
[112.90695953 301.86566162]
[107.96334839 316.06854248]
[97.38700867 326.67279053]
[83.31362915 331.61297607]
[81.75310516 346.53158569]
[91.43030548 358.73773193]
[89.63519287 373.84506226]
[77.93888092 382.99557495]
[76.37835693 397.91418457]
[74.81783295 412.83279419]
[73.81357574 427.79913330]
[73.36696625 442.79248047]
[72.92036438 457.78582764]
[80.24334717 471.81027222]
[72.13053894 484.30151367]
[71.68393707 499.29486084]
[79.94448853 509.20074463]
[79.26383972 521.67956543]
[70.55148315 530.07128906]
[69.88169861 545.05633545]
[69.21191406 560.04138184]
[68.54212952 575.02636719]
[67.87234497 590.01141357]
[81.33883667 597.19586182]
[90.34759521 609.51678467]
[93.10990906 624.52789307]
[89.07732391 639.24865723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[14 199]
[15 198]
[17 196]
[18 195]
[19 194]
[25 193]
[26 192]
[27 191]
[30 188]
[31 187]
[37 181]
[38 180]
[39 179]
[40 178]
[46 172]
[47 171]
[48 170]
[49 169]
[50 165]
[51 164]
[52 163]
[58 162]
[59 161]
[60 160]
[64 159]
[65 158]
[66 157]
[67 156]
[73 150]
[74 149]
[75 148]
[76 146]
[77 145]
[78 144]
[79 143]
[83 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 137]
[90 136]
[91 135]
[93 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
