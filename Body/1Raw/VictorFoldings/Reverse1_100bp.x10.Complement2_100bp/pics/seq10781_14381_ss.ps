%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[121.19641113 643.87268066]
[109.03834534 635.07263184]
[97.64850616 625.29864502]
[87.10470581 614.61743164]
[77.47897339 603.10205078]
[68.83705902 590.83105469]
[61.23800278 577.88836670]
[54.73370743 564.36230469]
[49.36861038 550.34533691]
[45.17935562 535.93322754]
[42.19456482 521.22436523]
[40.43462753 506.31924438]
[39.91156006 491.31973267]
[40.62894440 476.32821655]
[42.58187485 461.44717407]
[45.75700760 446.77822876]
[50.13265991 432.42156982]
[55.67893982 418.47531128]
[62.35795593 405.03469849]
[70.12408447 392.19152832]
[78.92427826 380.03356934]
[88.69841766 368.64385986]
[99.37973785 358.10018921]
[110.89526367 348.47457886]
[123.16634369 339.83282471]
[136.10914612 332.23391724]
[149.63526917 325.72976685]
[163.65229797 320.36483765]
[159.46528625 305.96105957]
[155.27827454 291.55728149]
[151.09126282 277.15350342]
[146.79713440 262.78128052]
[142.39613342 248.44143677]
[131.26518250 238.54441833]
[134.61299133 223.08148193]
[130.21199036 208.74162292]
[125.81098938 194.40177917]
[121.40999603 180.06193542]
[116.58399963 165.85948181]
[111.33728027 151.80700684]
[106.09056091 137.75453186]
[100.84384155 123.70206451]
[95.59712219 109.64959717]
[89.72816467 95.84542084]
[83.24866486 82.31707001]
[70.30926514 73.21309662]
[71.78970337 58.39224243]
[65.31020355 44.86389923]
[58.83071136 31.33555222]
[56.08134079 46.08143234]
[46.40267563 57.54107666]
[32.32469559 62.71896362]
[17.52735329 60.26160431]
[5.87863493 50.81134415]
[0.42348903 36.83846664]
[2.58787775 21.99543953]
[11.80603504 10.16219902]
[25.66835594 4.43192482]
[40.55126572 6.30249739]
[52.56385040 15.28425694]
[48.16285324 0.94440991]
[43.76185608 -13.39543724]
[39.36085892 -27.73528481]
[34.95986176 -42.07513046]
[30.55886269 -56.41497803]
[26.15786362 -70.75482941]
[22.88591766 -56.11602783]
[14.60745239 -43.60735321]
[2.41164494 -34.87452316]
[-12.09693718 -31.06649971]
[-27.00943947 -32.68429184]
[-40.36386871 -39.51504898]
[-50.40321732 -50.66006851]
[-55.80663681 -64.65303040]
[-55.86321640 -79.65292358]
[-50.56550980 -93.68625641]
[-40.61051941 -104.90669250]
[-27.30800056 -111.83799744]
[-12.40812683 -113.56823730]
[2.12876940 -109.86977386]
[14.39010811 -101.22919464]
[22.76364708 -88.78113556]
[21.64799881 -103.73959351]
[20.53234863 -118.69804382]
[19.41670036 -133.65649414]
[18.30105209 -148.61494446]
[16.85163307 -163.54475403]
[15.06916714 -178.43847656]
[13.28670120 -193.33219910]
[-1.67652714 -195.16665649]
[-15.76568699 -200.52938843]
[-28.16165352 -209.10864258]
[-38.14374161 -220.40559387]
[-45.13160706 -233.76348877]
[-48.71897888 -248.40570068]
[-48.69729996 -263.48092651]
[-45.06782532 -278.11276245]
[-38.04156876 -291.45050049]
[-28.02702904 -302.71868896]
[-15.60643578 -311.26226807]
[-1.50190926 -316.58444214]
[13.46653366 -318.37585449]
[28.42864799 -316.53234863]
[42.51455307 -311.16104126]
[54.90531921 -302.57427979]
[64.88055420 -291.27127075]
[71.86032104 -277.90914917]
[75.43881226 -263.26477051]
[75.40799713 -248.18955994]
[71.76965332 -233.55993652]
[64.73530579 -220.22645569]
[54.71393967 -208.96432495]
[42.28816986 -200.42829895]
[28.18041801 -195.11465454]
[29.96288490 -180.22094727]
[31.74534988 -165.32722473]
[34.27627563 -162.87228394]
[35.74386597 -159.06948853]
[35.52758026 -154.43197632]
[33.25950623 -149.73060608]
[34.37515259 -134.77214050]
[35.49080276 -119.81369019]
[36.60645294 -104.85523987]
[37.72209930 -89.89678955]
[40.49771118 -75.15582275]
[44.89870834 -60.81597519]
[49.29970551 -46.47613144]
[53.70070648 -32.13628387]
[58.10170364 -17.79643440]
[62.50270081 -3.45658803]
[66.90370178 10.88325882]
[72.35905457 24.85605621]
[78.83855438 38.38440323]
[85.31804657 51.91274643]
[97.79399109 60.04909134]
[96.77701569 75.83757782]
[103.25650787 89.36592102]
[109.24935150 75.61507416]
[123.15923309 70.00122833]
[137.01792908 75.74025726]
[142.88656616 89.54457092]
[137.40330505 103.50644684]
[123.70922089 109.62787628]
[109.64959717 104.40287781]
[114.89631653 118.45534515]
[120.14302826 132.50781250]
[125.38974762 146.56028748]
[130.63647461 160.61276245]
[134.08197021 163.25520325]
[136.28573608 166.52749634]
[137.20225525 169.96194458]
[136.94255066 173.12409973]
[135.74984741 175.66093445]
[140.15083313 190.00077820]
[144.55183411 204.34063721]
[148.95283508 218.68048096]
[160.39859009 229.60317993]
[156.73597717 244.04045105]
[161.13697815 258.38027954]
[166.64651489 265.66607666]
[165.49504089 272.96649170]
[169.68205261 287.37026978]
[173.86906433 301.77404785]
[178.05607605 316.17782593]
[192.76483154 313.19253540]
[207.66987610 311.43203735]
[222.66938782 310.90844727]
[237.66090393 311.62530518]
[252.54202271 313.57769775]
[267.21109009 316.75228882]
[281.56787109 321.12744141]
[295.51434326 326.67321777]
[308.95520020 333.35174561]
[321.79864502 341.11743164]
[333.95690918 349.91717529]
[345.34698486 359.69091797]
[355.89105225 370.37185669]
[365.51705933 381.88705444]
[374.15927124 394.15780640]
[381.75863647 407.10034180]
[388.26324463 420.62622070]
[393.62866211 434.64306641]
[397.81826782 449.05511475]
[400.80340576 463.76388550]
[402.56372070 478.66894531]
[403.08712769 493.66848755]
[402.37011719 508.65997314]
[400.41754150 523.54107666]
[397.24273682 538.21008301]
[392.86743164 552.56683350]
[387.32150269 566.51324463]
[380.64279175 579.95404053]
[372.87698364 592.79736328]
[364.07705688 604.95556641]
[354.30319214 616.34552002]
[343.62213135 626.88940430]
[332.10684204 636.51531982]
[319.83596802 645.15734863]
[306.89334106 652.75659180]
[293.36737061 659.26104736]
[279.35046387 664.62628174]
[264.93838501 668.81573486]
[250.22956848 671.80065918]
[235.32447815 673.56079102]
[220.32495117 674.08404541]
[205.33345032 673.36682129]
[190.45237732 671.41406250]
[175.78338623 668.23913574]
[161.42669678 663.86364746]
[147.48036194 658.31750488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 164]
[29 163]
[30 162]
[31 161]
[32 159]
[33 158]
[35 156]
[36 155]
[37 154]
[38 153]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 137]
[45 136]
[47 134]
[48 133]
[49 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[66 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
