%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[211.96231079 385.18014526]
[205.88847351 371.46487427]
[199.81463623 357.74963379]
[188.64691162 353.10113525]
[183.47444153 341.72442627]
[187.56665039 329.49264526]
[181.69769287 315.68847656]
[175.82872009 301.88430786]
[169.95976257 288.08010864]
[157.85957336 279.39480591]
[159.58053589 263.66748047]
[147.48033142 254.98217773]
[149.20129395 239.25485229]
[143.33233643 225.45066833]
[137.46337891 211.64649963]
[131.59440613 197.84231567]
[125.72545624 184.03814697]
[119.85649109 170.23396301]
[114.34650421 165.30833435]
[114.00460815 156.18029785]
[108.56856537 151.17318726]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[77.66458893 63.41427994]
[71.38722992 49.79096603]
[64.31012726 36.56543732]
[57.23302078 23.33991051]
[50.15591431 10.11438179]
[43.07880783 -3.11114550]
[36.00170135 -16.33667374]
[29.19361687 -22.42664719]
[28.91934776 -29.81221199]
[22.03993607 -43.14163971]
[6.31776428 -52.72782135]
[7.82811594 -70.21169281]
[0.75101030 -83.43721771]
[-6.32609510 -96.66275024]
[-13.40320015 -109.88827515]
[-20.48030663 -123.11380005]
[-27.55741119 -136.33932495]
[-34.63451767 -149.56484985]
[-41.71162415 -162.79039001]
[-48.78872681 -176.01591492]
[-55.86583328 -189.24143982]
[-55.42177963 -174.24801636]
[-58.67051697 -159.60404968]
[-65.41338348 -146.20503235]
[-75.23805237 -134.87031555]
[-87.54373932 -126.29301453]
[-101.57794952 -120.99764252]
[-116.48248291 -119.30801392]
[-131.34593201 -121.32745361]
[-145.25936890 -126.93245697]
[-157.37199402 -135.78028870]
[-166.94313049 -147.32991028]
[-173.38748169 -160.87503052]
[-176.31097412 -175.58737183]
[-175.53483582 -190.56727600]
[-171.10652161 -204.89872742]
[-163.29684448 -217.70532227]
[-152.58335876 -228.20394897]
[-139.62120056 -235.75260925]
[-125.20299530 -239.88969421]
[-110.21044159 -240.36224365]
[-95.56032562 -237.14132690]
[-82.14852142 -230.42393494]
[-70.79515839 -220.62081909]
[-62.19448471 -208.33142090]
[-64.41960144 -223.16546631]
[-66.64471436 -237.99951172]
[-68.86983490 -252.83354187]
[-71.09495544 -267.66760254]
[-73.32006836 -282.50164795]
[-77.68786621 -290.52410889]
[-75.46617889 -297.57293701]
[-77.47019196 -312.43847656]
[-79.47420502 -327.30398560]
[-81.47821808 -342.16952515]
[-90.98986816 -354.81225586]
[-85.02230835 -368.45916748]
[-100.04815674 -369.14007568]
[-114.71090698 -372.49322510]
[-128.53921509 -378.41079712]
[-141.08853149 -386.70260620]
[-151.95549011 -397.10208130]
[-160.79074097 -409.27493286]
[-167.31025696 -422.82983398]
[-171.30447388 -437.33108521]
[-172.64500427 -452.31250000]
[-171.28874207 -467.29251099]
[-167.27929688 -481.78952026]
[-160.74552917 -495.33758545]
[-151.89750671 -507.50115967]
[-141.01963806 -517.88922119]
[-128.46160889 -526.16784668]
[-114.62709808 -532.07086182]
[-99.96083069 -535.40863037]
[-84.93428040 -536.07379150]
[-70.03047180 -534.04492188]
[-55.72850418 -529.38726807]
[-42.48813248 -522.25054932]
[-30.73497963 -512.86425781]
[-20.84685516 -501.52999878]
[-13.14162540 -488.61221313]
[-7.86697960 -474.52612305]
[-5.19247675 -459.72454834]
[-5.20409107 -444.68328857]
[-7.90144920 -429.88586426]
[-13.19784164 -415.80792236]
[-20.92301178 -402.90206909]
[-30.82862854 -391.58309937]
[-42.59626389 -382.21493530]
[-55.84764099 -375.09872437]
[-70.15678406 -370.46316528]
[-60.78846741 -358.88369751]
[-66.61269379 -344.17352295]
[-64.60868073 -329.30801392]
[-62.60466385 -314.44247437]
[-60.60065079 -299.57696533]
[-58.48602676 -284.72674561]
[-56.26091003 -269.89270020]
[-54.03579330 -255.05867004]
[-51.81067276 -240.22462463]
[-49.58555603 -225.39057922]
[-47.36043930 -210.55653381]
[-42.64030457 -196.31854248]
[-35.56320190 -183.09301758]
[-28.48609543 -169.86749268]
[-21.40898895 -156.64196777]
[-14.33188438 -143.41642761]
[-7.25477839 -130.19090271]
[-0.17767306 -116.96537781]
[6.89943218 -103.73985291]
[13.97653770 -90.51432800]
[21.05364418 -77.28879547]
[32.53618240 -73.48381805]
[38.54047394 -62.52333069]
[35.36936569 -50.02105331]
[42.24877930 -36.69162369]
[49.22723007 -23.41377831]
[56.30433655 -10.18825054]
[63.38143921 3.03727674]
[70.45854950 16.26280403]
[77.53565216 29.48833084]
[84.61275482 42.71385956]
[87.99249268 28.09957123]
[99.24084473 18.17614174]
[114.16247559 16.64476585]
[127.19196320 24.07660866]
[133.46965027 37.69977570]
[130.65409851 52.43316269]
[119.79545593 62.78158188]
[104.94371796 64.88533020]
[91.63739014 57.95892334]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.89463806 150.51751709]
[133.66067505 164.36500549]
[139.52963257 178.16917419]
[145.39859009 191.97335815]
[151.26754761 205.77752686]
[157.13650513 219.58171082]
[163.00547791 233.38589478]
[175.52545166 243.05856323]
[173.38470459 257.79852295]
[185.90469360 267.47119141]
[183.76394653 282.21115112]
[189.63290405 296.01535034]
[195.50186157 309.81951904]
[201.37081909 323.62368774]
[216.33645630 334.35269165]
[213.52990723 351.67578125]
[219.60374451 365.39105225]
[225.67756653 379.10632324]
[240.38520813 375.90158081]
[255.43688965 375.72338867]
[270.21624756 378.57907104]
[284.11813354 384.35168457]
[296.57321167 392.80487061]
[307.07147217 403.59240723]
[315.18301392 416.27261353]
[320.57568359 430.32623291]
[323.02868652 445.17776489]
[322.44149780 460.21902466]
[318.83822632 474.83413696]
[312.36639404 488.42459106]
[303.29104614 500.43386841]
[291.98376465 510.37017822]
[278.90762329 517.82666016]
[264.59808350 522.49798584]
[249.64105225 524.19287109]
[234.64906311 522.84185791]
[220.23602295 518.50030518]
[206.99212646 511.34603882]
[195.45970154 501.67193604]
[186.11099243 489.87420654]
[179.32884216 476.43591309]
[175.39094543 461.90740967]
[174.45858765 446.88357544]
[176.56993103 431.97964478]
[181.63850403 417.80590820]
[189.45678711 404.94281006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[6 178]
[7 177]
[8 176]
[9 175]
[11 173]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[18 166]
[20 165]
[22 164]
[23 163]
[24 162]
[26 160]
[27 159]
[28 158]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[36 143]
[37 142]
[39 139]
[40 138]
[41 137]
[42 136]
[43 135]
[44 134]
[45 133]
[46 132]
[47 131]
[48 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[79 123]
[80 122]
[81 121]
[82 120]
[84 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
