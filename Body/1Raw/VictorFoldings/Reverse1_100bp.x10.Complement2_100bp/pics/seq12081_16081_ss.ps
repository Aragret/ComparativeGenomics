%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[83.81483459 400.13519287]
[86.45857239 415.00756836]
[84.80382538 430.02218628]
[78.98471832 443.96185303]
[69.47299957 455.69659424]
[57.03973389 464.27508545]
[42.69282913 469.00192261]
[27.59532738 469.49392700]
[12.97111130 465.71118164]
[0.00570378 457.96038818]
[-10.24984837 446.86984253]
[-16.96417236 433.33859253]
[-19.59296989 418.46359253]
[-17.92313576 403.45065308]
[-12.09003544 389.51681519]
[-2.56653142 377.79165649]
[9.87534714 369.22564697]
[24.22699356 364.51321411]
[39.32498550 364.03640747]
[43.08128357 349.51434326]
[46.83758545 334.99227905]
[50.59388733 320.47021484]
[54.35018539 305.94815063]
[58.10648727 291.42608643]
[61.53754807 276.82379150]
[64.64165497 262.14846802]
[59.70563507 248.09553528]
[70.13126373 236.19525146]
[73.23537445 221.51995850]
[76.33948517 206.84465027]
[79.44359589 192.16935730]
[81.99942780 177.38870239]
[76.03186798 163.74180603]
[85.54351807 151.09906006]
[87.54753113 136.23353577]
[89.55154419 121.36801147]
[91.55555725 106.50247955]
[92.22534180 91.51744080]
[91.55555725 76.53240204]
[90.88577271 61.54736328]
[90.21598816 46.56232452]
[89.54620361 31.57728767]
[88.87641907 16.59224892]
[81.60259247 29.71061134]
[69.67110443 38.80124283]
[55.09261703 42.33221054]
[40.32386398 39.70848083]
[27.85363960 31.37220764]
[19.78339386 18.72819138]
[17.47310829 3.90717268]
[21.31210327 -10.59324551]
[30.65344238 -22.32948685]
[43.92294312 -29.32379150]
[58.88446808 -30.39749527]
[73.01673126 -25.36965752]
[83.93820190 -15.08756161]
[89.80873871 -1.28229129]
[92.03385162 -16.11633492]
[94.25897217 -30.95037842]
[96.48408508 -45.78442383]
[98.70920563 -60.61846542]
[99.49052429 -75.59810638]
[98.82073975 -90.58314514]
[98.15095520 -105.56818390]
[97.48117065 -120.55322266]
[96.81138611 -135.53825378]
[96.14160156 -150.52330017]
[87.79580688 -163.96421814]
[94.95709229 -177.02427673]
[94.17576599 -192.00392151]
[93.28295135 -206.97732544]
[82.78902435 -222.10871887]
[91.24962616 -237.48353577]
[90.13397217 -252.44198608]
[75.12726593 -252.92237854]
[60.25663757 -254.99516296]
[45.69058228 -258.63690186]
[31.59415245 -263.80630493]
[18.12706375 -270.44479370]
[5.44191408 -278.47717285]
[-6.31756783 -287.81240845]
[-17.01813507 -298.34475708]
[-26.53854561 -309.95483398]
[-34.77092361 -322.51110840]
[-41.62198639 -335.87130737]
[-47.01411438 -349.88403320]
[-50.88620377 -364.39056396]
[-53.19438553 -379.22647095]
[-53.91250229 -394.22369385]
[-53.03241730 -409.21228027]
[-50.56410599 -424.02239990]
[-46.53553009 -438.48623657]
[-40.99234390 -452.43991089]
[-33.99735260 -465.72531128]
[-25.62981606 -478.19192505]
[-15.98454380 -489.69848633]
[-5.17082262 -500.11459351]
[6.68881798 -509.32226562]
[19.45999908 -517.21716309]
[32.99801254 -523.70977783]
[47.14946747 -528.72656250]
[61.75400925 -532.21075439]
[76.64616394 -534.12280273]
[91.65718842 -534.44104004]
[106.61699677 -533.16186523]
[121.35607910 -530.29980469]
[135.70744324 -525.88726807]
[149.50845337 -519.97418213]
[162.60275269 -512.62768555]
[174.84197998 -503.93093872]
[186.08743286 -493.98248291]
[196.21170044 -482.89505005]
[205.10008240 -470.79425049]
[212.65184021 -457.81723022]
[218.78143311 -444.11102295]
[223.41938782 -429.83093262]
[226.51315308 -415.13873291]
[228.02767944 -400.20089722]
[227.94581604 -385.18673706]
[226.26847839 -370.26632690]
[223.01467896 -355.60873413]
[218.22128296 -341.38006592]
[211.94259644 -327.74148560]
[204.24977112 -314.84759521]
[195.22996521 -302.84445190]
[184.98538208 -291.86810303]
[173.63211060 -282.04284668]
[161.29878235 -273.48007202]
[148.12515259 -266.27679443]
[134.26046753 -260.51461792]
[119.86184692 -256.25881958]
[105.09243011 -253.55764771]
[106.20807648 -238.59918213]
[115.16642761 -230.47056580]
[116.21831512 -218.01756287]
[108.25635529 -207.87014771]
[109.14916992 -192.89674377]
[112.68522644 -186.40689087]
[109.94213104 -177.69406128]
[118.24001312 -165.32498169]
[111.12664032 -151.19308472]
[111.79642487 -136.20803833]
[112.46620941 -121.22300720]
[113.13599396 -106.23796844]
[113.80577850 -91.25292969]
[114.47556305 -76.26789093]
[121.74938965 -89.38625336]
[133.68087769 -98.47688293]
[148.25936890 -102.00785065]
[163.02812195 -99.38412476]
[175.49835205 -91.04784393]
[183.56858826 -78.40383148]
[185.87887573 -63.58281326]
[182.03988647 -49.08239365]
[172.69854736 -37.34615326]
[159.42904663 -30.35184860]
[144.46751404 -29.27814484]
[130.33525085 -34.30598068]
[119.41378784 -44.58807755]
[113.54325104 -58.39334869]
[111.31813049 -43.55930710]
[109.09301758 -28.72526169]
[106.86789703 -13.89121819]
[104.64278412 0.94282591]
[103.86145782 15.92246342]
[104.53124237 30.90750122]
[105.20102692 45.89253998]
[105.87081146 60.87757874]
[106.54059601 75.86261749]
[107.21038055 90.84765625]
[114.76844025 77.89096832]
[127.15106201 69.42511749]
[141.96736145 67.08471680]
[156.35652161 71.32167053]
[167.54025269 81.31788635]
[173.35913086 95.14324951]
[172.68962097 110.12830353]
[165.66101074 123.37966156]
[153.63040161 132.33869934]
[138.92071533 135.27557373]
[124.37216949 131.62319946]
[112.79385376 122.08682251]
[106.42108917 108.50649261]
[104.41707611 123.37202454]
[102.41306305 138.23754883]
[100.40904999 153.10307312]
[106.23326874 167.81324768]
[96.86495972 179.39271545]
[110.19425201 172.51303101]
[123.94540405 178.50517273]
[127.98158264 192.95195007]
[119.32746124 205.20373535]
[104.36253357 206.22897339]
[94.11889648 195.27346802]
[91.01478577 209.94876099]
[87.91067505 224.62406921]
[84.80656433 239.29936218]
[89.52056885 254.40197754]
[79.31696320 265.25259399]
[76.21285248 279.92788696]
[77.83248138 284.89013672]
[77.42725372 289.51495361]
[75.46476746 293.08758545]
[72.62854767 295.18240356]
[68.87224579 309.70446777]
[65.11594391 324.22653198]
[61.35964584 338.74856567]
[57.60334396 353.27062988]
[53.84704208 367.79269409]
[66.82022858 375.53045654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[24 204]
[25 200]
[26 199]
[28 197]
[29 196]
[30 195]
[31 194]
[32 188]
[34 186]
[35 185]
[36 184]
[37 183]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[57 164]
[58 163]
[59 162]
[60 161]
[61 160]
[62 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[69 139]
[70 137]
[71 136]
[73 133]
[74 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
