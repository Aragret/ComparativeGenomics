%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAAAGAGAUUGUCGUCAUUAUAAUUAUUAAAAGUACUAAACUCUUCGGAAGCGAAGCUUCGCUUUUCAGGAUUAUCAUCUUCUUGGGAGGUAUUUGGACCU\
) } def
/len { sequence length } bind def

/coor [
[122.82929230 642.29241943]
[128.87562561 626.45330811]
[128.87562561 611.45330811]
[128.87562561 596.45330811]
[128.42903137 581.45996094]
[127.53620911 566.48657227]
[126.64339447 551.51312256]
[118.16226959 539.26898193]
[125.06445312 525.03271484]
[124.06018829 510.06637573]
[122.94454193 495.10794067]
[121.82889557 480.14947510]
[106.57557678 476.59100342]
[93.15184021 468.48306274]
[82.87792969 456.60903931]
[76.76864624 442.12344360]
[75.43309021 426.43957520]
[79.01396942 411.09170532]
[87.17243958 397.58496094]
[99.12016296 387.24774170]
[113.69542694 381.10101318]
[112.35719299 366.16082764]
[111.01895905 351.22064209]
[109.68072510 336.28045654]
[108.34249115 321.34027100]
[107.00425720 306.40008545]
[105.66602325 291.45989990]
[103.20931244 288.93069458]
[101.85559845 285.08590698]
[102.20986176 280.45687866]
[104.61691284 275.82510376]
[103.94712067 260.84008789]
[103.27733612 245.85504150]
[92.14640808 236.02458191]
[91.25368500 220.83715820]
[101.64025116 209.22866821]
[100.97046661 194.24363708]
[100.30068207 179.25859070]
[99.18503571 164.30014038]
[87.48872375 155.14962769]
[85.69361115 140.04226685]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[85.02901459 28.96856308]
[83.24655151 14.07484627]
[81.24253845 -0.79068196]
[79.23852539 -15.65620995]
[66.95423889 -25.23400688]
[65.13365173 -40.33831406]
[74.34032440 -51.99047470]
[72.33630371 -66.85600281]
[62.82465363 -79.49874878]
[68.79221344 -93.14563751]
[66.78820038 -108.01116180]
[64.78418732 -122.87669373]
[62.78017426 -137.74221802]
[48.67036057 -143.64648438]
[39.47105026 -155.74067688]
[37.57313538 -170.71612549]
[43.38698578 -184.53840637]
[55.25889587 -193.53413391]
[53.25488281 -208.39967346]
[51.25086975 -223.26519775]
[49.24685669 -238.13072205]
[47.24284363 -252.99624634]
[37.73118973 -265.63900757]
[43.69875336 -279.28588867]
[41.69474030 -294.15139771]
[35.32275772 -280.57208252]
[23.74479866 -271.03527832]
[9.19638824 -267.38235474]
[-5.51340532 -270.31869507]
[-17.54435158 -279.27728271]
[-24.57346344 -292.52838135]
[-25.24352837 -307.51339722]
[-19.42516708 -321.33898926]
[-8.24181652 -331.33560181]
[6.14719534 -335.57308960]
[20.96357536 -333.23324585]
[33.34651566 -324.76788330]
[40.90544128 -311.81024170]
[41.57522964 -326.79528809]
[42.24501419 -341.78033447]
[42.91479874 -356.76535034]
[40.50775146 -361.39712524]
[40.15348816 -366.02615356]
[41.50720215 -369.87094116]
[43.96391296 -372.40014648]
[45.30214691 -387.34033203]
[46.64038086 -402.28051758]
[44.28906631 -411.10714722]
[48.11137772 -417.43261719]
[49.67190170 -432.35122681]
[35.63343048 -437.90316772]
[23.61413765 -447.03765869]
[14.50592804 -459.07690430]
[8.98469543 -473.12747192]
[7.46015120 -488.14672852]
[10.04542637 -503.02017212]
[16.54867744 -516.64404297]
[26.48731804 -528.00738525]
[39.12383652 -536.26702881]
[53.52051926 -540.80993652]
[68.60903168 -541.29907227]
[83.26971436 -537.69812012]
[96.41464996 -530.27423096]
[107.06838226 -519.57843018]
[114.44034576 -506.40432739]
[117.98348236 -491.72958374]
[117.43488312 -476.64309692]
[112.83524323 -462.26443481]
[104.52588654 -449.66058350]
[93.12343597 -439.76681519]
[79.47401428 -433.31732178]
[64.59050751 -430.79071045]
[63.02998352 -415.87210083]
[61.58056641 -400.94229126]
[60.24233246 -386.00210571]
[58.90409851 -371.06192017]
[57.89983749 -356.09558105]
[57.23005295 -341.11053467]
[56.56026840 -326.12548828]
[55.89048004 -311.14047241]
[56.56026840 -296.15542603]
[58.56428146 -281.28988647]
[67.93259430 -269.71041870]
[62.10837173 -255.00025940]
[64.11238098 -240.13473511]
[66.11640167 -225.26921082]
[68.12041473 -210.40368652]
[70.12442780 -195.53814697]
[83.95465851 -190.00730896]
[93.22118378 -178.21801758]
[95.35662079 -163.27458191]
[89.68833923 -149.17608643]
[77.64570618 -139.74623108]
[79.64971924 -124.88070679]
[81.65373230 -110.01517487]
[83.65774536 -95.14965057]
[93.02605438 -83.57018280]
[87.20183563 -68.86001587]
[89.20584869 -53.99448776]
[101.16941833 -45.19627762]
[103.41354370 -30.14906502]
[94.10404968 -17.66022301]
[96.10806274 -2.79469562]
[98.11207581 12.07083225]
[101.29949951 15.62742901]
[102.28652954 21.22410583]
[99.94762421 27.40804100]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[122.28308105 136.21492004]
[123.65315247 151.36674500]
[114.10363770 162.73960876]
[116.77763367 166.16069031]
[118.09173584 169.88058472]
[118.11899567 173.43511963]
[117.07570648 176.43147278]
[115.28572083 178.58880615]
[115.95550537 193.57385254]
[116.62528992 208.55888367]
[128.00610352 219.19444275]
[128.47189331 234.40093994]
[118.26237488 245.18525696]
[118.93215942 260.17028809]
[119.60195160 275.15533447]
[120.60620880 290.12167358]
[121.94444275 305.06185913]
[123.28267670 320.00204468]
[124.62091064 334.94223022]
[125.95914459 349.88241577]
[127.29737854 364.82260132]
[128.63562012 379.76278687]
[142.72830200 382.71014404]
[155.40487671 389.50253296]
[165.64172363 399.58132935]
[172.61506653 412.12289429]
[175.76730347 426.10589600]
[174.85162354 440.39459229]
[169.95118713 453.83093262]
[161.47181702 465.32852173]
[150.10824585 473.96041870]
[136.78735352 479.03381348]
[137.90299988 493.99227905]
[139.01864624 508.95074463]
[142.77766418 517.27587891]
[140.03785706 524.13989258]
[148.58283997 537.45507812]
[141.61680603 550.62030029]
[142.50961304 565.59375000]
[143.40243530 580.56713867]
[145.92098999 584.10418701]
[147.06768799 587.87908936]
[146.93620300 591.43127441]
[145.76016235 594.37805176]
[143.87562561 596.45330811]
[143.87562561 611.45330811]
[143.87562561 626.45330811]
[149.92196655 642.29241943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 202]
[6 201]
[7 200]
[9 198]
[10 196]
[11 195]
[12 194]
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[26 179]
[27 178]
[31 177]
[32 176]
[33 175]
[36 172]
[37 171]
[38 170]
[39 165]
[42 162]
[43 161]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 152]
[51 151]
[52 150]
[55 147]
[56 146]
[58 144]
[59 143]
[60 142]
[61 141]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[72 130]
[73 129]
[86 128]
[87 127]
[88 126]
[89 125]
[93 124]
[94 123]
[95 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
