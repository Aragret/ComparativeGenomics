%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[184.52047729 757.33135986]
[174.47248840 746.18078613]
[165.44931030 734.18579102]
[157.52157593 721.44024658]
[150.75132751 708.04394531]
[145.19155884 694.10168457]
[140.88577271 679.72259521]
[137.86766052 665.01922607]
[136.16085815 650.10668945]
[135.77873230 635.10162354]
[136.72425842 620.12152100]
[138.99003601 605.28363037]
[142.55833435 590.70397949]
[147.40122986 576.49682617]
[153.48081970 562.77325439]
[160.74951172 549.64074707]
[169.15043640 537.20196533]
[178.61782837 525.55438232]
[189.07759094 514.78912354]
[200.44787598 504.99044800]
[212.63967896 496.23501587]
[225.55758667 488.59136963]
[239.10049438 482.11935425]
[233.85377502 468.06686401]
[228.60705566 454.01440430]
[223.36033630 439.96191406]
[218.11361694 425.90945435]
[212.86691284 411.85699463]
[207.62019348 397.80450439]
[202.37347412 383.75204468]
[197.12675476 369.69958496]
[191.77555847 355.68655396]
[186.32020569 341.71374512]
[171.57540894 339.60275269]
[159.78855896 330.33309937]
[154.18710327 316.31561279]
[156.36837769 301.27767944]
[165.84567261 289.27233887]
[160.39030457 275.29953003]
[154.93495178 261.32675171]
[149.47959900 247.35394287]
[144.02424622 233.38114929]
[132.18800354 224.33943176]
[134.37646484 208.67030334]
[128.92109680 194.69750977]
[123.46574402 180.72471619]
[118.01039124 166.75192261]
[112.55503082 152.77911377]
[107.09967804 138.80632019]
[95.26344299 129.76460266]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[82.80927277 77.51239014]
[70.14666748 68.02719116]
[72.06771851 53.25699234]
[65.99388123 39.54172516]
[59.92005157 25.82645988]
[47.25744247 16.34126091]
[49.17849731 1.57106113]
[43.10466385 -12.14420605]
[37.03083038 -25.85947227]
[21.83376694 -27.59052277]
[9.62421036 -36.63615799]
[3.62157393 -50.48659897]
[5.34606743 -65.38230896]
[14.23507977 -77.33433533]
[8.16124630 -91.04960632]
[2.08741212 -104.76486969]
[-3.98642182 -118.48014069]
[-18.45103455 -114.41126251]
[-33.34749222 -112.44242096]
[-48.37251663 -112.61368561]
[-63.22022629 -114.92157745]
[-77.58833313 -119.31910706]
[-91.18431854 -125.71675110]
[-103.73139954 -133.98425293]
[-114.97412109 -143.95330811]
[-124.68360138 -155.42094421]
[-132.66215515 -168.15371704]
[-138.74737549 -181.89237976]
[-142.81535339 -196.35723877]
[-144.78327942 -211.25382996]
[-144.61108398 -226.27883911]
[-142.30226135 -241.12640381]
[-137.90383911 -255.49423218]
[-131.50537109 -269.08984375]
[-123.23708344 -281.63638306]
[-113.26733398 -292.87850952]
[-101.79909515 -302.58728027]
[-89.06583405 -310.56503296]
[-75.32678986 -316.64941406]
[-60.86167526 -320.71649170]
[-45.96497726 -322.68350220]
[-30.93997002 -322.51037598]
[-16.09254837 -320.20062256]
[-1.72498703 -315.80133057]
[11.87021160 -309.40200806]
[24.41626549 -301.13293457]
[35.65775299 -291.16250610]
[45.36581039 -279.69366455]
[53.34279633 -266.95989990]
[59.42630768 -253.22048950]
[63.49249649 -238.75511169]
[65.45857239 -223.85829163]
[65.28451538 -208.83329773]
[62.97386932 -193.98602295]
[58.57367325 -179.61872864]
[52.17350769 -166.02392578]
[43.90367508 -153.47839355]
[33.93253326 -142.23751831]
[22.46309090 -132.53016663]
[9.72884464 -124.55397034]
[15.80267906 -110.83870697]
[21.87651253 -97.12343597]
[27.95034599 -83.40817261]
[42.77470398 -81.95765686]
[54.96370316 -73.22356415]
[61.18548203 -59.47017288]
[59.67786407 -44.34985733]
[50.74609756 -31.93330574]
[56.81993103 -18.21804047]
[62.89376450 -4.50277281]
[75.12193298 4.00141716]
[73.63531494 19.75262451]
[79.70915222 33.46789169]
[85.78298187 47.18315887]
[98.01114655 55.68734741]
[96.52453613 71.43856049]
[99.66436005 73.04288483]
[102.18309784 76.24772644]
[103.33697510 80.74459839]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[123.65113831 118.68127441]
[121.07247162 133.35096741]
[126.52783203 147.32376099]
[131.98318481 161.29655457]
[137.43853760 175.26936340]
[142.89390564 189.24215698]
[148.34925842 203.21495056]
[160.57569885 213.25610352]
[157.99703979 227.92579651]
[163.45239258 241.89859009]
[168.90774536 255.87138367]
[174.36311340 269.84417725]
[179.81846619 283.81698608]
[194.92308044 286.22488403]
[206.71655273 295.80670166]
[212.09474182 309.91134644]
[209.70683289 324.71520996]
[200.29299927 336.25839233]
[205.74836731 350.23120117]
[211.78453064 357.08703613]
[211.17922974 364.45285034]
[216.42593384 378.50531006]
[221.67265320 392.55780029]
[226.91937256 406.61026001]
[232.16609192 420.66275024]
[237.41281128 434.71520996]
[242.65953064 448.76766968]
[247.90625000 462.82015991]
[253.15296936 476.87261963]
[267.62359619 472.88534546]
[282.39001465 470.19259644]
[297.33660889 468.81546021]
[312.34643555 468.76470947]
[327.30203247 470.04074097]
[342.08630371 472.63357544]
[356.58358765 476.52288818]
[370.68035889 481.67828369]
[384.26635742 488.05938721]
[397.23522949 495.61627197]
[409.48544312 504.28976440]
[420.92117310 514.01202393]
[431.45285034 524.70690918]
[440.99813843 536.29077148]
[449.48223877 548.67291260]
[456.83883667 561.75640869]
[463.01028442 575.43890381]
[467.94830322 589.61328125]
[471.61425781 604.16864014]
[473.97946167 618.99102783]
[475.02539062 633.96447754]
[474.74386597 648.97174072]
[473.13708496 663.89544678]
[470.21762085 678.61871338]
[466.00830078 693.02630615]
[460.54211426 707.00549316]
[453.86184692 720.44689941]
[446.01971436 733.24530029]
[437.07717896 745.30053711]
[427.10415649 756.51824951]
[416.17874146 766.81060791]
[404.38641357 776.09710693]
[391.81951904 784.30505371]
[378.57635498 791.37017822]
[364.76058960 797.23724365]
[350.48034668 801.86029053]
[335.84741211 805.20312500]
[320.97628784 807.23962402]
[305.98336792 807.95385742]
[290.98599243 807.34014893]
[276.10156250 805.40338135]
[261.44653320 802.15869141]
[247.13563538 797.63153076]
[233.28085327 791.85723877]
[219.99061584 784.88098145]
[207.36895752 776.75750732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 164]
[24 163]
[25 162]
[26 161]
[27 160]
[28 159]
[29 158]
[30 157]
[31 156]
[32 154]
[33 153]
[38 148]
[39 147]
[40 146]
[41 145]
[42 144]
[44 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[51 135]
[53 133]
[54 129]
[56 127]
[57 126]
[58 125]
[60 123]
[61 122]
[62 121]
[67 116]
[68 115]
[69 114]
[70 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
