%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[57.45035553 649.57763672]
[46.23755646 659.55493164]
[34.21900558 668.54541016]
[21.48130417 676.48425293]
[8.11622620 683.31420898]
[-5.77993011 688.98614502]
[-20.10704041 693.45910645]
[-34.76187897 696.70098877]
[-49.63884735 698.68835449]
[-64.63076782 699.40686035]
[-79.62960815 698.85137939]
[-94.52730560 697.02587891]
[-109.21652222 693.94354248]
[-123.59142303 689.62658691]
[-137.54843140 684.10607910]
[-150.98696899 677.42181396]
[-163.81024170 669.62200928]
[-175.92582703 660.76269531]
[-187.24644470 650.90789795]
[-197.69052124 640.12854004]
[-207.18281555 628.50225830]
[-215.65492249 616.11285400]
[-223.04580688 603.04962158]
[-229.30221558 589.40661621]
[-234.37907410 575.28216553]
[-238.23979187 560.77807617]
[-240.85655212 545.99884033]
[-242.21051025 531.05090332]
[-242.29191589 516.04199219]
[-241.10017395 501.08026123]
[-238.64385986 486.27349854]
[-234.94068909 471.72836304]
[-230.01733398 457.54971313]
[-223.90927124 443.83966064]
[-216.66052246 430.69702148]
[-208.32328796 418.21646118]
[-198.95765686 406.48791504]
[-188.63111877 395.59588623]
[-177.41806030 385.61883545]
[-165.39927673 376.62869263]
[-152.66136169 368.69021606]
[-139.29611206 361.86056519]
[-125.39981079 356.18902588]
[-111.07258606 351.71640015]
[-96.41766357 348.47491455]
[-81.54064178 346.48794556]
[-66.54870605 345.76980591]
[-51.54988098 346.32568359]
[-36.65222549 348.15155029]
[-21.96308899 351.23425293]
[-7.58830404 355.55160522]
[6.36855555 361.07244873]
[13.04874992 347.64208984]
[19.72894478 334.21170044]
[19.89322281 326.82287598]
[26.60988235 320.63220215]
[33.48929596 307.30276489]
[40.36870956 293.97335815]
[47.24811935 280.64392090]
[54.12753296 267.31448364]
[61.00694656 253.98506165]
[67.88636017 240.65563965]
[74.76576996 227.32620239]
[81.64517975 213.99678040]
[85.61727905 199.53225708]
[86.51009369 184.55885315]
[87.40290833 169.58543396]
[84.66310883 162.72138977]
[88.42212677 154.39625549]
[89.53777313 139.43780518]
[90.65341949 124.47935486]
[91.76907349 109.52090454]
[92.55039215 94.54126740]
[92.99700165 79.54791260]
[93.44360352 64.55456543]
[93.66693115 49.55622864]
[93.66693115 34.55622864]
[85.11510468 24.90070534]
[85.42391205 12.40717125]
[93.88255310 3.75974727]
[94.10588074 -11.23859024]
[94.32920837 -26.23692703]
[94.55253601 -41.23526382]
[80.27121735 -49.56806946]
[72.18718719 -63.88393784]
[72.42442322 -80.22898865]
[80.82349396 -94.14341736]
[95.01089478 -101.87840271]
[95.01089478 -116.87840271]
[95.01089478 -131.87840271]
[85.43621063 -147.60757446]
[94.79693604 -162.45155334]
[94.57360840 -177.44989014]
[94.35028076 -192.44822693]
[94.12695312 -207.44656372]
[93.90362549 -222.44490051]
[93.68029785 -237.44323730]
[93.45697021 -252.44157410]
[93.23364258 -267.43991089]
[79.54821777 -274.29321289]
[70.62467194 -286.72821045]
[68.51358032 -301.88742065]
[73.70005035 -316.28738403]
[84.99227142 -326.61911011]
[99.79537201 -330.50839233]
[114.70771790 -327.06155396]
[126.30254364 -317.07064819]
[131.91546631 -302.83148193]
[130.25665283 -287.61611938]
[121.70729828 -274.92095947]
[108.23197937 -267.66323853]
[108.45530701 -252.66490173]
[108.67863464 -237.66656494]
[108.90196228 -222.66822815]
[109.12528992 -207.66989136]
[109.34861755 -192.67155457]
[109.57194519 -177.67321777]
[109.79527283 -162.67488098]
[118.25391388 -154.02746582]
[118.56272125 -141.53392029]
[110.01089478 -131.87840271]
[110.01089478 -116.87840271]
[110.01089478 -101.87840271]
[122.26272583 -95.84435272]
[130.76026917 -85.06842804]
[133.80043030 -71.61827850]
[130.73429871 -58.10616684]
[122.10466766 -47.18162537]
[109.55087280 -41.01193619]
[109.32754517 -26.01359940]
[109.10421753 -11.01526260]
[108.88088989 3.98307490]
[118.24161530 18.82705498]
[108.66693115 34.55622864]
[108.66693115 49.55622864]
[111.35061646 53.50678253]
[111.58107758 59.18515778]
[108.43695068 65.00117493]
[107.99034882 79.99452209]
[107.54373932 94.98786926]
[109.76379395 98.14124298]
[110.58309937 102.25786591]
[109.60263824 106.69021606]
[106.72752380 110.63655090]
[105.61187744 125.59500122]
[104.49622345 140.55345154]
[103.38057709 155.51191711]
[102.37631989 170.47825623]
[101.48349762 185.45166016]
[100.59068298 200.42506409]
[108.01242828 187.38981628]
[117.94999695 176.15394592]
[129.98083496 167.19522095]
[143.59338379 160.89454651]
[158.20883179 157.51983643]
[173.20573425 157.21459961]
[187.94639587 159.99180603]
[201.80404663 165.73336792]
[214.18945312 174.19514465]
[224.57597351 185.01734924]
[232.52197266 197.73982239]
[237.68959045 211.82156372]
[239.85908508 226.66384888]
[238.93821716 241.63555908]
[234.96614075 256.10009766]
[228.11174011 269.44238281]
[218.66648865 281.09515381]
[207.03198242 290.56292725]
[193.70294189 297.44308472]
[179.24610901 301.44308472]
[164.27621460 302.39288330]
[149.42976379 300.25207520]
[135.33805847 295.11166382]
[122.60027313 287.19024658]
[111.75801849 276.82464600]
[103.27232361 264.45562744]
[97.50400543 250.60908508]
[94.69832611 235.87380981]
[94.97460938 220.87619019]
[88.09519958 234.20561218]
[81.21578979 247.53504944]
[74.33637238 260.86447144]
[67.45696259 274.19390869]
[60.57754898 287.52334595]
[53.69813919 300.85275269]
[46.81872559 314.18218994]
[39.93931198 327.51162720]
[33.15932083 340.89190674]
[26.47912598 354.32226562]
[19.79893112 367.75265503]
[32.62239838 375.55218506]
[44.73821259 384.41110229]
[56.05908585 394.26562500]
[66.50344086 405.04473877]
[75.99603271 416.67077637]
[84.46846771 429.05996704]
[91.85968781 442.12301636]
[98.11644745 455.76583862]
[103.19366455 469.89013672]
[107.05475616 484.39413452]
[109.67190552 499.17333984]
[111.02625275 514.12121582]
[111.10804749 529.13012695]
[109.91668701 544.09191895]
[107.46075439 558.89874268]
[103.75796509 573.44390869]
[98.83497620 587.62274170]
[92.72727203 601.33294678]
[85.47885132 614.47576904]
[77.14194489 626.95654297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 190]
[53 189]
[54 188]
[56 187]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[64 179]
[65 150]
[66 149]
[67 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 140]
[74 139]
[75 138]
[76 135]
[77 134]
[80 132]
[81 131]
[82 130]
[83 129]
[88 123]
[89 122]
[90 121]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
