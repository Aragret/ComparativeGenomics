%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[54.98506927 585.24761963]
[56.35419846 570.25360107]
[60.81120682 555.87207031]
[68.16125488 542.73168945]
[78.08302307 531.40679932]
[90.14279175 522.39263916]
[103.81333923 516.08312988]
[100.49108124 501.45565796]
[97.16882324 486.82821655]
[93.84656525 472.20074463]
[90.52429962 457.57330322]
[87.20204163 442.94583130]
[83.87978363 428.31835938]
[80.55752563 413.69091797]
[77.23526764 399.06344604]
[73.69311523 413.63922119]
[66.68253326 426.90014648]
[56.63222885 438.03527832]
[44.15677643 446.36373901]
[30.01906013 451.37622070]
[15.08360004 452.76620483]
[0.26370955 450.44869995]
[-13.53437138 444.56539917]
[-25.46688271 435.47610474]
[-34.80414963 423.73663330]
[-40.97519302 410.06481934]
[-43.60264969 395.29675293]
[-42.52585220 380.33544922]
[-37.81064606 366.09582520]
[-29.74537086 353.44863892]
[-18.82321548 343.16726685]
[-5.71207762 335.88043213]
[8.78629208 332.03369141]
[23.78531265 331.86233521]
[38.36779022 335.37677002]
[51.64199829 342.36215210]
[62.79621124 352.39129639]
[71.14835358 364.85089111]
[76.18768311 378.97909546]
[77.97015381 364.08535767]
[79.75261688 349.19165039]
[81.53507996 334.29794312]
[83.31755066 319.40420532]
[84.87807465 304.48562622]
[86.21630859 289.54544067]
[87.55454254 274.60525513]
[88.55879974 259.63888550]
[89.22858429 244.65385437]
[89.89836884 229.66882324]
[90.56815338 214.68377686]
[91.01476288 199.69042969]
[91.23809052 184.69209290]
[91.46141815 169.69375610]
[91.68474579 154.69541931]
[79.67557526 145.92514038]
[75.07910156 131.59558105]
[79.85762787 117.13809204]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[89.35987854 69.58156586]
[92.60262299 62.94029617]
[92.82595062 47.94195938]
[93.04927826 32.94362259]
[79.46972656 26.06195450]
[70.26220703 14.01585484]
[67.21041107 -0.77288115]
[70.86718750 -15.36016941]
[80.45529175 -26.86572647]
[94.03180695 -33.04177475]
[94.25513458 -48.04011154]
[85.84801483 -57.82188797]
[86.34279633 -70.30944061]
[94.92925262 -78.82997131]
[95.37585449 -93.82331848]
[95.82246399 -108.81666565]
[96.26906586 -123.81002045]
[81.35378265 -129.07830811]
[68.81195831 -138.68606567]
[59.86401749 -151.68325806]
[55.37597275 -166.79077148]
[55.77563858 -182.52633667]
[61.01189041 -197.34988403]
[70.56082916 -209.81436157]
[83.47817230 -218.70692444]
[98.49264526 -223.16697693]
[98.71597290 -238.16531372]
[98.93930054 -253.16365051]
[99.16262817 -268.16198730]
[99.38595581 -283.16030884]
[99.60928345 -298.15866089]
[92.07830048 -312.07250977]
[100.00423431 -324.68316650]
[100.22756195 -339.68148804]
[100.45088959 -354.67984009]
[85.97308350 -358.95718384]
[73.18677521 -366.98294067]
[63.04080200 -378.16159058]
[56.28805542 -391.66354370]
[53.42963791 -406.48690796]
[54.67766190 -421.53167725]
[59.93951416 -435.68142700]
[68.82473755 -447.88613892]
[80.67398071 -457.24017334]
[94.60794830 -463.04940796]
[109.59265900 -464.88272095]
[124.51614380 -462.60406494]
[138.27098083 -456.38256836]
[149.83647156 -446.67987061]
[158.35437012 -434.21600342]
[163.19259644 -419.91586304]
[163.99212646 -404.84060669]
[160.69363403 -390.10891724]
[153.54187012 -376.81399536]
[143.06756592 -365.94241333]
[130.04797363 -358.30090332]
[115.44922638 -354.45651245]
[115.22589874 -339.45816040]
[115.00257111 -324.45983887]
[122.54953003 -311.61877441]
[114.60762024 -297.93533325]
[114.38429260 -282.93698120]
[114.16096497 -267.93865967]
[113.93763733 -252.94032288]
[113.71430969 -237.94198608]
[113.49098206 -222.94364929]
[127.09024048 -218.67210388]
[138.94743347 -210.73190308]
[148.09613037 -199.75939941]
[153.78761292 -186.63854980]
[155.55215454 -172.42968750]
[153.23777771 -158.28384399]
[147.02330017 -145.34947205]
[137.40451050 -134.67924500]
[125.15468597 -127.14434814]
[111.26242065 -123.36341095]
[110.81581116 -108.37006378]
[110.36920166 -93.37670898]
[109.92259979 -78.38336182]
[119.06127930 -63.40166092]
[109.25347137 -47.81678391]
[109.03014374 -32.81844711]
[122.41676331 -26.24091148]
[131.65805054 -14.45498371]
[134.87889099 0.23471363]
[131.38812256 14.92603016]
[121.82602692 26.69264793]
[108.04761505 33.16695023]
[107.82428741 48.16528702]
[107.60095978 63.16362381]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[119.62317657 117.73020172]
[123.96913147 132.32356262]
[118.94805145 146.50991821]
[106.68308258 154.91874695]
[106.45975494 169.91708374]
[106.23642731 184.91542053]
[106.01309967 199.91375732]
[108.89438629 205.86436462]
[108.41060638 211.52677917]
[105.55319214 215.35356140]
[104.88340759 230.33860779]
[104.21362305 245.32363892]
[103.54383850 260.30868530]
[105.95088196 264.94046021]
[106.30515289 269.56945801]
[104.95143127 273.41427612]
[102.49472809 275.94348145]
[101.15649414 290.88366699]
[99.81826019 305.82385254]
[102.24897766 311.97225952]
[101.34538269 317.58303833]
[98.21126556 321.18667603]
[96.42880249 336.08041382]
[94.64633179 350.97412109]
[92.86386871 365.86782837]
[91.08140564 380.76156616]
[91.86272430 395.74118042]
[95.18498230 410.36865234]
[98.50724030 424.99612427]
[101.82950592 439.62356567]
[105.15176392 454.25103760]
[108.47402191 468.87847900]
[111.79627991 483.50595093]
[115.11853790 498.13342285]
[118.44080353 512.76086426]
[133.49562073 512.54614258]
[148.26602173 515.46655273]
[162.10632324 521.39440918]
[174.41146851 530.07061768]
[184.64353943 541.11590576]
[192.35523987 554.04742432]
[197.20942688 568.29980469]
[198.99392700 583.25006104]
[197.63069153 598.24456787]
[193.17933655 612.62786865]
[185.83445740 625.77111816]
[175.91714478 637.09991455]
[163.86093140 646.11883545]
[150.19285583 652.43371582]
[135.51045227 655.76843262]
[120.45555115 655.97729492]
[105.68629456 653.05108643]
[91.84832764 647.11773682]
[79.54659271 638.43664551]
[69.31886292 627.38732910]
[61.61226273 614.45281982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[14 182]
[15 181]
[39 180]
[40 179]
[41 178]
[42 177]
[43 176]
[44 173]
[45 172]
[46 171]
[47 167]
[48 166]
[49 165]
[50 164]
[51 161]
[52 160]
[53 159]
[54 158]
[58 154]
[59 152]
[60 151]
[62 150]
[63 149]
[64 148]
[70 142]
[71 141]
[74 139]
[75 138]
[76 137]
[77 136]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
