%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[43.70561981 791.17968750]
[30.34962654 798.04510498]
[16.28690147 803.31353760]
[1.70762777 806.91375732]
[-13.19102573 808.79699707]
[-28.20757294 808.93786621]
[-43.13893127 807.33441162]
[-57.78317261 804.00830078]
[-71.94224548 799.00463867]
[-85.42467499 792.39093018]
[-98.04811096 784.25671387]
[-109.64185333 774.71203613]
[-120.04909515 763.88586426]
[-129.12910461 751.92468262]
[-136.75906372 738.99023438]
[-142.83581543 725.25738525]
[-147.27716064 710.91198730]
[-150.02302551 696.14794922]
[-151.03628540 681.16497803]
[-150.30325317 666.16564941]
[-147.83381653 651.35290527]
[-143.66139221 636.92694092]
[-137.84239197 623.08300781]
[-130.45552063 610.00817871]
[-121.60066986 597.87933350]
[-111.39759827 586.86053467]
[-99.98428345 577.10083008]
[-87.51509094 568.73205566]
[-74.15863800 561.86755371]
[-60.09555817 556.60003662]
[-45.51604462 553.00085449]
[-30.61726570 551.11859131]
[-15.60070896 550.97875977]
[-0.66945803 552.58319092]
[2.65280151 537.95574951]
[5.97506094 523.32824707]
[9.29732037 508.70080566]
[12.61958027 494.07336426]
[11.03561592 486.85443115]
[16.10172653 479.25363159]
[19.64139748 464.67724609]
[23.18107033 450.10086060]
[26.72074318 435.52450562]
[30.26041603 420.94812012]
[25.74498749 406.75445557]
[36.52031326 395.16986084]
[40.05998611 380.59347534]
[43.59965897 366.01708984]
[41.92401123 361.54483032]
[43.04003143 355.97244263]
[47.46781158 351.06262207]
[51.43990707 336.59808350]
[54.87096786 321.99575806]
[57.75624084 307.27587891]
[60.64151382 292.55599976]
[55.49680710 278.57809448]
[65.74411011 266.52392578]
[68.62937927 251.80403137]
[71.51464844 237.08413696]
[74.07048035 222.30348206]
[76.29560089 207.46943665]
[78.52072144 192.63539124]
[80.74583435 177.80134583]
[82.97095490 162.96730042]
[85.19606781 148.13325500]
[87.42118835 133.29922485]
[89.64630127 118.46517181]
[80.95350647 109.24081421]
[79.08834839 96.70387268]
[84.71944427 85.34851074]
[95.82819366 79.24530029]
[98.27392578 64.44602966]
[100.71965027 49.64675522]
[103.16537476 34.84748459]
[105.61110687 20.04821396]
[106.72675323 5.08975983]
[106.28015137 -9.90359020]
[105.61036682 -24.88862801]
[104.94057465 -39.87366867]
[104.27079010 -54.85870743]
[103.60100555 -69.84374237]
[102.70819092 -84.81715393]
[101.59254456 -99.77560425]
[100.47689819 -114.73405457]
[96.71788025 -123.05918121]
[99.45767975 -129.92323303]
[90.91269684 -143.23840332]
[97.87873840 -156.40364075]
[96.98592377 -171.37705994]
[96.09310913 -186.35046387]
[95.20029449 -201.32386780]
[91.88439941 -207.04368591]
[91.94569397 -212.72640991]
[94.51056671 -216.75511169]
[94.06395721 -231.74845886]
[90.68042755 -240.23312378]
[93.72399139 -246.96800232]
[93.50066376 -261.96633911]
[79.48114777 -267.91384888]
[69.09749603 -279.05386353]
[64.14874268 -293.45626831]
[65.49229431 -308.62582397]
[72.89537048 -321.93423462]
[85.07534027 -331.07580566]
[99.92195892 -334.46667480]
[114.86294556 -331.51934814]
[127.30969238 -322.74447632]
[135.10572815 -309.66235352]
[136.90034485 -294.53955078]
[132.38259888 -279.99618530]
[122.33522797 -268.55194092]
[108.49900055 -262.18966675]
[108.72232819 -247.19132996]
[109.05730438 -232.19506836]
[109.50391388 -217.20172119]
[110.17369843 -202.21667480]
[111.06651306 -187.24327087]
[111.95932770 -172.26986694]
[112.85214996 -157.29646301]
[121.33326721 -145.05229187]
[114.43109131 -130.81605530]
[115.43534851 -115.84970856]
[116.55099487 -100.89125061]
[117.66664886 -85.93280029]
[120.63672638 -82.19278717]
[121.28888702 -76.54728699]
[118.58604431 -70.51352692]
[119.25582886 -55.52849197]
[119.92561340 -40.54345322]
[120.59540558 -25.55841446]
[121.26519012 -10.57337475]
[124.12259674 -6.74659300]
[124.60637665 -1.08417475]
[121.72509003 4.86643219]
[129.66557312 -7.85947847]
[142.29476929 -15.95290279]
[157.17416382 -17.85112572]
[171.43081665 -13.18763256]
[182.31195068 -2.86286807]
[187.71661377 11.12961578]
[186.60124207 26.08809090]
[179.18119812 39.12430573]
[166.88917542 47.72117996]
[152.09857178 50.21878433]
[137.66522217 46.13487244]
[126.37597656 36.25798416]
[120.41037750 22.49394035]
[117.96465302 37.29321289]
[115.51892090 52.09248352]
[113.07319641 66.89175415]
[110.62746429 81.69102478]
[120.54241943 94.88426208]
[117.97282410 111.18656158]
[104.48034668 120.69029236]
[102.25523376 135.52433777]
[100.03011322 150.35838318]
[97.80500031 165.19242859]
[95.57987976 180.02645874]
[93.35475922 194.86050415]
[91.12964630 209.69454956]
[88.90452576 224.52859497]
[90.81665039 229.38563538]
[90.68740845 234.02639771]
[88.94104767 237.70950317]
[86.23454285 239.96940613]
[83.34927368 254.68930054]
[80.46399689 269.40917969]
[85.40232849 284.43994141]
[75.36140442 295.44125366]
[72.47613525 310.16116333]
[69.59085846 324.88104248]
[83.30600739 318.80694580]
[96.67612457 325.60693359]
[99.84525299 340.26834106]
[90.47723389 351.98330688]
[75.47782135 352.11599731]
[65.90442657 340.57019043]
[61.93233490 355.03472900]
[58.17603302 369.55676270]
[54.63636017 384.13314819]
[51.09668732 398.70953369]
[55.35893631 413.94580078]
[44.83679199 424.48779297]
[41.29711914 439.06417847]
[37.75744629 453.64053345]
[34.21777344 468.21691895]
[30.67810059 482.79330444]
[27.24703979 497.39559937]
[23.92477989 512.02307129]
[20.60252190 526.65051270]
[17.28026199 541.27801514]
[13.95800209 555.90545654]
[28.11741257 560.90820312]
[41.60027695 567.52099609]
[54.22426224 575.65435791]
[65.81864166 585.19830322]
[76.22660828 596.02374268]
[85.30741119 607.98437500]
[92.93824005 620.91827393]
[99.01589966 634.65069580]
[103.45819855 648.99578857]
[106.20505524 663.75964355]
[107.21932220 678.74255371]
[106.48728180 693.74194336]
[104.01883698 708.55487061]
[99.84737396 722.98107910]
[94.02929688 736.82543945]
[86.64329529 749.90075684]
[77.78925323 762.03015137]
[67.58692169 773.04962158]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 192]
[35 191]
[36 190]
[37 189]
[38 188]
[40 187]
[41 186]
[42 185]
[43 184]
[44 183]
[46 181]
[47 180]
[48 179]
[51 178]
[52 177]
[53 171]
[54 170]
[55 169]
[57 167]
[58 166]
[59 165]
[60 161]
[61 160]
[62 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 134]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 124]
[83 123]
[84 122]
[86 121]
[88 119]
[89 118]
[90 117]
[91 116]
[94 115]
[95 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
