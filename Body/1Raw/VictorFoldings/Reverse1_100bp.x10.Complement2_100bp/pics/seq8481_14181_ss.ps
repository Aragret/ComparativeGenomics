%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[183.10684204 535.07366943]
[180.22157288 520.35382080]
[177.33628845 505.63391113]
[174.45101929 490.91400146]
[170.07962036 484.95477295]
[171.63407898 475.95358276]
[168.96829224 461.19235229]
[166.30249023 446.43115234]
[163.41722107 431.71124268]
[160.31311035 417.03594971]
[157.20899963 402.36062622]
[154.10488892 387.68533325]
[150.78263855 373.05789185]
[147.24296570 358.48150635]
[143.70281982 355.27581787]
[142.13890076 349.81219482]
[143.82177734 343.41848755]
[140.71766663 328.74316406]
[130.51405334 317.89257812]
[135.22805786 302.78994751]
[132.12394714 288.11465454]
[129.01983643 273.43936157]
[125.91572571 258.76406860]
[122.81161499 244.08874512]
[119.70750427 229.41345215]
[107.12268829 221.52941895]
[103.76562500 206.69079590]
[112.12045288 193.54412842]
[109.01634216 178.86883545]
[98.81273651 168.01821899]
[103.52673340 152.91561890]
[100.42262268 138.24031067]
[97.31851196 123.56501007]
[94.21440125 108.88970947]
[90.56631470 94.34008789]
[86.37930298 79.93630219]
[82.19229126 65.53252411]
[78.00527954 51.12873840]
[66.67123413 47.54042816]
[58.55969238 39.01377869]
[55.60195541 27.74675941]
[58.42093277 16.56780243]
[66.20412445 8.22585583]
[62.44782639 -6.29620361]
[58.69152451 -20.81826401]
[54.93522644 -35.34032059]
[41.72671509 -48.17062759]
[47.07195282 -64.88574982]
[35.95648575 -76.14439392]
[40.04731369 -90.46620941]
[36.07521820 -104.93073273]
[25.27183533 -111.97698975]
[22.26124954 -124.10630035]
[28.12803841 -134.68492126]
[24.37173653 -149.20698547]
[20.61543655 -163.72904968]
[7.40692520 -176.55935669]
[12.75216293 -193.27447510]
[8.78006649 -207.73899841]
[4.80797052 -222.20352173]
[0.83587426 -236.66804504]
[-3.13622189 -251.13256836]
[-18.49582291 -259.50524902]
[-22.95992661 -276.06988525]
[-14.23770714 -290.44909668]
[-18.42471886 -304.85287476]
[-31.99387169 -312.50244141]
[-36.03490829 -327.16955566]
[-28.65859413 -340.05853271]
[-32.84560776 -354.46231079]
[-37.03261566 -368.86611938]
[-41.21962738 -383.26989746]
[-45.40663910 -397.67367554]
[-49.59365082 -412.07745361]
[-53.78066254 -426.48123169]
[-68.66730499 -424.43045044]
[-83.69390106 -424.56912231]
[-98.54016113 -426.89431763]
[-112.88963318 -431.35644531]
[-126.43645477 -437.86038208]
[-138.89187622 -446.26754761]
[-149.99041748 -456.39871216]
[-159.49549866 -468.03793335]
[-167.20452881 -480.93710327]
[-172.95318604 -494.82128906]
[-176.61892700 -509.39456177]
[-178.12364197 -524.34625244]
[-177.43522644 -539.35772705]
[-174.56837463 -554.10894775]
[-169.58419800 -568.28558350]
[-162.58892822 -581.58532715]
[-153.73165894 -593.72479248]
[-143.20118713 -604.44519043]
[-131.22198486 -613.51806641]
[-118.04936981 -620.74993896]
[-103.96412659 -625.98669434]
[-89.26648712 -629.11676025]
[-74.26972961 -630.07342529]
[-59.29351425 -628.83618164]
[-44.65705109 -625.43151855]
[-30.67232132 -619.93194580]
[-17.63741112 -612.45471191]
[-5.83015966 -603.15917969]
[4.49775982 -592.24353027]
[13.12620831 -579.94036865]
[19.87126923 -566.51196289]
[24.58917046 -552.24456787]
[27.17934990 -537.44219971]
[27.58659935 -522.42053223]
[25.80223846 -507.49957275]
[21.86429787 -492.99749756]
[15.85671711 -479.22335815]
[7.90754843 -466.47076416]
[-1.81377196 -455.01153564]
[-13.10003281 -445.08993530]
[-25.71066856 -436.91744995]
[-39.37688065 -430.66824341]
[-35.18986893 -416.26446533]
[-31.00285721 -401.86068726]
[-26.81584549 -387.45690918]
[-22.62883568 -373.05310059]
[-18.44182396 -358.64932251]
[-14.25481224 -344.24554443]
[-1.11846554 -337.31936646]
[3.33294654 -322.77154541]
[-4.02093697 -309.03988647]
[0.16607447 -294.63610840]
[12.21562576 -290.07125854]
[19.54529953 -279.23806763]
[19.29356384 -265.96603394]
[11.32830238 -255.10466003]
[15.30039787 -240.64013672]
[19.27249527 -226.17561340]
[23.24459076 -211.71109009]
[27.21668625 -197.24656677]
[37.57130051 -190.99288940]
[40.99889755 -178.97476196]
[35.13749695 -167.48535156]
[38.89379501 -152.96328735]
[42.65009689 -138.44122314]
[55.60744095 -126.60593414]
[50.53974152 -108.90283203]
[54.51183701 -94.43830109]
[65.34319305 -84.21426392]
[61.53647614 -68.85784912]
[71.89109039 -62.60416794]
[75.31868744 -50.58604050]
[69.45728302 -39.09662247]
[73.21358490 -24.57456398]
[76.96988678 -10.05250454]
[80.72618866 4.46955490]
[97.03030396 12.79370308]
[102.16024017 30.69891739]
[92.40906525 46.94173050]
[96.59607697 61.34551239]
[100.78308868 75.74929047]
[104.97010040 90.15307617]
[114.37201691 78.46530914]
[129.37174988 78.37608337]
[138.91206360 89.95116425]
[135.96017456 104.65784454]
[122.69211578 111.65489960]
[108.88970947 105.78559875]
[111.99382019 120.46089935]
[115.09792328 135.13619995]
[118.20203400 149.81150818]
[128.62767029 161.71179199]
[123.69164276 175.76472473]
[126.79575348 190.44001770]
[139.75837708 199.07763672]
[142.69732666 214.00468445]
[134.38281250 226.30934143]
[137.48692322 240.98463440]
[140.59103394 255.65994263]
[143.69514465 270.33523560]
[146.79925537 285.01055908]
[149.90335083 299.68585205]
[160.32899475 311.58612061]
[155.39295959 325.63906860]
[158.49707031 340.31436157]
[161.81933594 354.94183350]
[165.35900879 369.51821899]
[169.63864136 374.55767822]
[170.58825684 380.16082764]
[168.78019714 384.58123779]
[171.88430786 399.25653076]
[174.98841858 413.93182373]
[178.09252930 428.60714722]
[182.22021484 433.77178955]
[183.00257874 439.40072632]
[181.06370544 443.76535034]
[183.72950745 458.52655029]
[186.39530945 473.28778076]
[189.17091370 488.02874756]
[192.05618286 502.74862671]
[194.94145203 517.46850586]
[197.82673645 532.18841553]
[212.73413086 535.16125488]
[225.36633301 543.61682129]
[233.79701233 556.26562500]
[236.74055481 571.17883301]
[233.74809265 586.08227539]
[225.27595520 598.70336914]
[212.61607361 607.11737061]
[197.69900513 610.04132080]
[182.79946899 607.02923584]
[170.18955994 598.54052734]
[161.79219055 585.86956787]
[158.88789368 570.94866943]
[161.91955566 556.05310059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[6 193]
[7 192]
[8 191]
[9 188]
[10 187]
[11 186]
[12 185]
[13 182]
[14 181]
[17 180]
[18 179]
[20 177]
[21 176]
[22 175]
[23 174]
[24 173]
[25 172]
[28 169]
[29 168]
[31 166]
[32 165]
[33 164]
[34 163]
[35 157]
[36 156]
[37 155]
[38 154]
[43 151]
[44 150]
[45 149]
[46 148]
[48 145]
[50 143]
[51 142]
[54 140]
[55 139]
[56 138]
[58 135]
[59 134]
[60 133]
[61 132]
[62 131]
[65 127]
[66 126]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
