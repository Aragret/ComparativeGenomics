%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[74.86629486 647.48095703]
[59.83850098 647.73754883]
[44.94767380 645.69702148]
[30.54287910 641.40722656]
[16.96178436 634.96868896]
[4.52274990 626.53240967]
[-6.48263502 616.29614258]
[-15.79638958 604.49975586]
[-23.20018387 591.41986084]
[-28.52046585 577.36297607]
[-31.63251686 562.65869141]
[-32.46338654 547.65173340]
[-30.99360085 532.69378662]
[-27.25761032 518.13549805]
[-21.34299469 504.31820679]
[-13.38839912 491.56576538]
[-3.58029175 480.17712402]
[7.85141182 470.41921997]
[20.63873672 462.52081299]
[34.48192596 456.66705322]
[49.05648041 452.99514771]
[64.02075195 451.59121704]
[64.91356659 436.61779785]
[57.94752502 423.45254517]
[66.49250793 410.13739014]
[59.52646637 396.97213745]
[68.07144928 383.65698242]
[68.96426392 368.68356323]
[69.85707855 353.71017456]
[67.11727905 346.84609985]
[70.87629700 338.52099609]
[71.99194336 323.56253052]
[73.10758972 308.60406494]
[74.22324371 293.64562988]
[64.33934784 282.56210327]
[65.25768280 267.37622070]
[76.95010376 257.08422852]
[78.06575012 242.12577820]
[79.18140411 227.16732788]
[71.52797699 217.79974365]
[72.33502197 205.32847595]
[81.71416473 196.47441101]
[79.39363861 192.30018616]
[79.67069244 186.62390137]
[83.32115936 181.11157227]
[85.10362244 166.21786499]
[86.88608551 151.32414246]
[79.12044525 135.58686829]
[90.27956390 120.93914795]
[91.84008789 106.02054596]
[89.47990417 98.31327057]
[93.53651428 90.89202881]
[95.31897736 75.99831390]
[97.10144806 61.10459518]
[98.88391113 46.21087646]
[100.66637421 31.31715965]
[93.32252502 20.71382904]
[95.11376190 8.34551334]
[104.54004669 0.76451045]
[106.54406738 -14.10101795]
[108.54808044 -28.96654510]
[95.21878052 -22.08687019]
[81.46762848 -28.07901192]
[77.43144989 -42.52578735]
[86.08557129 -54.77756882]
[101.05049896 -55.80280304]
[111.29413605 -44.84729767]
[114.39824677 -59.52259827]
[113.11247253 -68.56607819]
[117.65936279 -74.39253235]
[120.98162079 -89.01999664]
[124.30387878 -103.64745331]
[125.19669342 -118.62086487]
[123.63617706 -133.53945923]
[122.07565308 -148.45806885]
[120.51512909 -163.37667847]
[112.47235870 -150.71516418]
[98.90610504 -144.31541443]
[84.02001190 -146.16047668]
[72.42669678 -155.67863464]
[67.71848297 -169.92056274]
[71.35425568 -184.47326660]
[82.20742798 -194.82742310]
[96.91503143 -197.77468872]
[110.91975403 -192.40182495]
[119.88217163 -180.37341309]
[120.32878113 -195.36676025]
[120.77538300 -210.36010742]
[113.45239258 -224.38453674]
[121.56520081 -236.87579346]
[122.01181030 -251.86914062]
[122.45841980 -266.86248779]
[115.13542938 -280.88693237]
[123.24823761 -293.37817383]
[123.69483948 -308.37152100]
[124.14144897 -323.36486816]
[124.58805847 -338.35824585]
[110.33993530 -343.44213867]
[98.36141205 -352.68176270]
[89.82604218 -365.17184448]
[85.57001495 -379.68878174]
[86.01029205 -394.81033325]
[91.10375214 -409.05505371]
[100.35138702 -421.02737427]
[112.84719849 -429.55438232]
[127.36698151 -433.80068970]
[142.48823547 -433.35025024]
[156.72953796 -428.24725342]
[168.69566345 -418.99160767]
[177.21429443 -406.49008179]
[181.45085144 -391.96746826]
[180.99031067 -376.84649658]
[175.87776184 -362.60864258]
[166.61408997 -350.64871216]
[154.10687256 -342.13845825]
[139.58140564 -337.91162109]
[139.13479614 -322.91827393]
[138.68818665 -307.92492676]
[138.24159241 -292.93157959]
[145.59651184 -279.97958374]
[137.45176697 -266.41589355]
[137.00515747 -251.42254639]
[136.55854797 -236.42919922]
[143.91348267 -223.47718811]
[135.76873779 -209.91351318]
[135.32212830 -194.92015076]
[134.87551880 -179.92680359]
[135.43373108 -164.93719482]
[136.99426270 -150.01860046]
[138.55477905 -135.09999084]
[140.11529541 -120.18138123]
[145.40342712 -134.21832275]
[154.10116577 -146.43919373]
[165.63159180 -156.03341675]
[179.22994995 -162.36465454]
[193.99430847 -165.01298523]
[208.94540405 -163.80273438]
[223.09158325 -158.81417847]
[235.49458313 -150.37820435]
[245.33174133 -139.05432129]
[251.95062256 -125.59362030]
[254.91220093 -110.88889313]
[254.02003479 -95.91545105]
[249.33332825 -81.66641998]
[241.16290283 -69.08690643]
[230.05070496 -59.01124573]
[216.73374939 -52.10773087]
[202.09529114 -48.83424377]
[187.10626221 -49.40790176]
[172.76083374 -53.79066086]
[160.01046753 -61.69182205]
[149.70088196 -72.58733368]
[142.51583862 -85.75453949]
[138.93133545 -100.32519531]
[135.60908508 -85.69773865]
[132.28681946 -71.07027435]
[129.07354736 -56.41848755]
[125.96943665 -41.74318695]
[123.41360474 -26.96253204]
[121.40959167 -12.09700394]
[119.40557861 2.76852417]
[126.93605042 18.61967087]
[115.56009674 33.09962463]
[113.77762604 47.99334335]
[111.99516296 62.88706207]
[110.21269226 77.78077698]
[108.43022919 92.67449188]
[106.75868988 107.58106995]
[105.19816589 122.49967194]
[112.69907379 132.99249268]
[111.09217834 145.38610840]
[101.77980804 153.10661316]
[99.99733734 168.00032043]
[98.21487427 182.89404297]
[96.65435028 197.81265259]
[104.78756714 214.33331299]
[94.13985443 228.28297424]
[93.02420807 243.24142456]
[91.90856171 258.19989014]
[101.94489288 270.11245728]
[100.60037994 285.26657104]
[89.18169403 294.76126099]
[88.06604767 309.71972656]
[86.95039368 324.67819214]
[85.83474731 339.63662720]
[84.83049011 354.60296631]
[83.93767548 369.57638550]
[83.04485321 384.54980469]
[89.94703674 398.78604126]
[81.46591187 411.03021240]
[88.36809540 425.26644897]
[79.88697052 437.51062012]
[78.99415588 452.48400879]
[93.68556213 455.65625000]
[107.72051239 461.03402710]
[120.77001190 468.49130249]
[132.52815247 477.85327148]
[142.71931458 488.90048218]
[151.10459900 501.37396240]
[157.48745728 514.98126221]
[161.71823120 529.40350342]
[163.69778442 544.30261230]
[163.37968445 559.32922363]
[160.77140808 574.13116455]
[155.93408203 588.36138916]
[148.98110962 601.68646240]
[140.07546997 613.79388428]
[129.42593384 624.39990234]
[117.28213501 633.25592041]
[103.92874146 640.15429688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 193]
[23 192]
[25 190]
[27 188]
[28 187]
[29 186]
[31 185]
[32 184]
[33 183]
[34 182]
[37 179]
[38 178]
[39 177]
[42 175]
[45 174]
[46 173]
[47 172]
[49 169]
[50 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[59 161]
[60 160]
[61 159]
[67 158]
[68 157]
[70 156]
[71 155]
[72 154]
[73 131]
[74 130]
[75 129]
[76 128]
[86 127]
[87 126]
[88 125]
[90 123]
[91 122]
[92 121]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
