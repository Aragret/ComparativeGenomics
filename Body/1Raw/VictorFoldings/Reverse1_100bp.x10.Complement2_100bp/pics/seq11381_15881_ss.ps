%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[22.31326485 183.79016113]
[23.22847939 198.76882935]
[23.06047630 213.77447510]
[21.81013107 228.72888184]
[19.48396301 243.55409241]
[16.09410095 258.17279053]
[11.65821552 272.50878906]
[6.19943666 286.48733521]
[-0.25377768 300.03552246]
[-7.66778231 313.08276367]
[-16.00392532 325.56100464]
[-25.21874237 337.40518188]
[-35.26419449 348.55358887]
[-46.08790588 358.94805908]
[-57.63344574 368.53442383]
[-69.84062195 377.26266479]
[-82.64579773 385.08734131]
[-95.98220062 391.96759033]
[-109.78031158 397.86761475]
[-123.96817780 402.75659180]
[-138.47184753 406.60903931]
[-153.21568298 409.40490723]
[-168.12283325 411.12957764]
[-183.11558533 411.77410889]
[-198.11575317 411.33508301]
[-213.04513550 409.81484985]
[-227.82591248 407.22128296]
[-242.38099670 403.56793213]
[-256.63452148 398.87384033]
[-270.51220703 393.16345215]
[-283.94161987 386.46658325]
[-296.85281372 378.81811523]
[-309.17846680 370.25796509]
[-320.85427856 360.83071899]
[-331.81939697 350.58554077]
[-342.01669312 339.57583618]
[-351.39294434 327.85903931]
[-359.89929199 315.49618530]
[-367.49139404 302.55178833]
[-374.12963867 289.09329224]
[-379.77944946 275.19085693]
[-384.41137695 260.91699219]
[-388.00125122 246.34611511]
[-390.53033447 231.55418396]
[-391.98547363 216.61830139]
[-392.35910034 201.61636353]
[-391.64923096 186.62657166]
[-389.85955811 171.72708130]
[-386.99945068 156.99557495]
[-383.08380127 142.50883484]
[-378.13299561 128.34242249]
[-372.17291260 114.57016754]
[-365.23455811 101.26388550]
[-357.35415649 88.49294281]
[-348.57275391 76.32393646]
[-338.93615723 64.82029724]
[-328.49459839 54.04200363]
[-317.30252075 44.04524994]
[-305.41827393 34.88215637]
[-292.90380859 26.60049438]
[-279.82437134 19.24344063]
[-266.24816895 12.84935379]
[-252.24595642 7.45156765]
[-237.89076233 3.07822514]
[-223.25741577 -0.24787307]
[-208.42221069 -2.50938606]
[-193.46249390 -3.69452310]
[-178.45625305 -3.79710555]
[-163.48171997 -2.81659865]
[-148.61698914 -0.75811416]
[-133.93954468 2.36761570]
[-119.52589417 6.54429483]
[-105.45121002 11.75014782]
[-91.78885651 17.95803261]
[-78.61006165 25.13558388]
[-65.98354340 33.24538422]
[-53.97513199 42.24514771]
[-42.64742661 52.08795547]
[-32.05949020 62.72248840]
[-22.26652145 74.09330750]
[-13.31957817 86.14112854]
[-5.26530600 98.80313873]
[1.85430408 112.01332092]
[8.00213242 125.70280457]
[22.09327316 120.56084442]
[36.18441391 115.41888428]
[50.27555466 110.27692413]
[64.36669922 105.13496399]
[78.45783997 99.99300385]
[92.54898071 94.85104370]
[94.65500641 91.62040710]
[98.17481995 89.33375549]
[102.65489960 88.60169983]
[107.38576508 89.80950165]
[121.69245148 85.30187225]
[135.99914551 80.79424286]
[150.30583191 76.28661346]
[164.61251831 71.77898407]
[178.91920471 67.27135468]
[175.32666016 52.70268631]
[172.66535950 37.93549347]
[170.94601440 23.02923965]
[170.17555237 8.04394913]
[170.35707092 -6.96003580]
[171.48982239 -21.92230034]
[173.56927490 -36.78259659]
[176.58703613 -51.48108673]
[180.53097534 -65.95858765]
[185.38517761 -80.15679169]
[191.13012695 -94.01854706]
[197.74267578 -107.48801422]
[205.19621277 -120.51097870]
[213.46069336 -133.03498840]
[222.50286865 -145.00961304]
[232.28633118 -156.38662720]
[242.77165222 -167.12023926]
[253.91664124 -177.16720581]
[265.67642212 -186.48709106]
[278.00363159 -195.04237366]
[290.84860229 -202.79856873]
[304.15966797 -209.72447205]
[317.88320923 -215.79219055]
[331.96395874 -220.97727966]
[346.34521484 -225.25888062]
[360.96905518 -228.61975098]
[375.77664185 -231.04632568]
[390.70828247 -232.52888489]
[405.70391846 -233.06141663]
[420.70312500 -232.64178467]
[435.64553833 -231.27169800]
[450.47097778 -228.95664978]
[465.11972046 -225.70597839]
[479.53277588 -221.53276062]
[493.65216064 -216.45382690]
[507.42098999 -210.48959351]
[520.78381348 -203.66409302]
[533.68682861 -196.00482178]
[546.07806396 -187.54258728]
[557.90771484 -178.31150818]
[569.12799072 -168.34870911]
[579.69384766 -157.69435120]
[589.56268311 -146.39129639]
[598.69476318 -134.48509216]
[607.05328369 -122.02365875]
[614.60461426 -109.05718231]
[621.31842041 -95.63787079]
[627.16754150 -81.81976318]
[632.12847900 -67.65850067]
[636.18133545 -53.21110535]
[639.30963135 -38.53575134]
[641.50091553 -23.69153023]
[642.74627686 -8.73821640]
[643.04077148 6.26397705]
[642.38311768 21.25464249]
[640.77606201 36.17341614]
[638.22601318 50.96022797]
[634.74322510 65.55553436]
[630.34179688 79.90055847]
[625.03936768 93.93755341]
[618.85736084 107.60997772]
[611.82067871 120.86279297]
[603.95758057 133.64262390]
[595.29974365 145.89801025]
[585.88208008 157.57962036]
[575.74243164 168.64039612]
[564.92169189 179.03579712]
[553.46343994 188.72398376]
[541.41381836 197.66593933]
[528.82128906 205.82563782]
[515.73657227 213.17025757]
[502.21243286 219.67019653]
[488.30322266 225.29928589]
[474.06500244 230.03486633]
[459.55511475 233.85786438]
[444.83193970 236.75288391]
[429.95480347 238.70828247]
[414.98361206 239.71615601]
[399.97863770 239.77247620]
[385.00030518 238.87701416]
[370.10891724 237.03335571]
[355.36444092 234.24893188]
[340.82626343 230.53497314]
[326.55288696 225.90640259]
[312.60180664 220.38189697]
[299.02923584 213.98365784]
[285.88977051 206.73748779]
[273.23635864 198.67253113]
[261.11990356 189.82128906]
[249.58924866 180.21939087]
[238.69079590 169.90550232]
[228.46844482 158.92115784]
[218.96333313 147.31057739]
[210.21376038 135.12052917]
[202.25492859 122.40008545]
[195.11892700 109.20046997]
[188.83445740 95.57483673]
[183.42683411 81.57804108]
[169.12014771 86.08567047]
[154.81344604 90.59329987]
[140.50675964 95.10092926]
[126.20008087 99.60855865]
[111.89339447 104.11618805]
[97.69094086 108.94218445]
[83.59980011 114.08414459]
[69.50865936 119.22610474]
[55.41751480 124.36806488]
[41.32637405 129.51002502]
[27.23523331 134.65197754]
[13.14409256 139.79394531]
[17.25789261 154.22566223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[84 209]
[85 208]
[86 207]
[87 206]
[88 205]
[89 204]
[90 203]
[94 202]
[95 201]
[96 200]
[97 199]
[98 198]
[99 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
