%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[53.04056168 787.29663086]
[38.21120834 784.98059082]
[23.63169098 781.41522217]
[9.40706348 776.62634277]
[-4.36018753 770.64831543]
[-17.57086563 763.52429199]
[-30.12978554 755.30554199]
[-41.94646072 746.05139160]
[-52.93574905 735.82836914]
[-63.01846695 724.71026611]
[-72.12197876 712.77709961]
[-80.18067932 700.11492920]
[-87.13650513 686.81488037]
[-92.93935394 672.97290039]
[-97.54739380 658.68865967]
[-100.92744446 644.06506348]
[-103.05513763 629.20751953]
[-103.91514587 614.22308350]
[-103.50127411 599.21966553]
[-101.81650543 584.30535889]
[-98.87297058 569.58770752]
[-94.69189453 555.17272949]
[-89.30339050 541.16424561]
[-82.74628448 527.66320801]
[-75.06782532 514.76684570]
[-66.32333374 502.56817627]
[-56.57581329 491.15502930]
[-45.89550400 480.60968018]
[-34.35935211 471.00805664]
[-22.05047798 462.41937256]
[-9.05757141 454.90551758]
[4.52575302 448.52059937]
[18.60162544 443.31063843]
[33.06862640 439.31317139]
[47.82252121 436.55700684]
[62.75700760 435.06201172]
[62.53367996 420.06365967]
[62.31034851 405.06533813]
[62.08702087 390.06698608]
[61.86369324 375.06866455]
[61.64036560 360.07031250]
[61.41703796 345.07199097]
[50.58373642 334.91445923]
[50.14359283 319.70718384]
[60.87118149 308.41311646]
[52.59864426 320.92568970]
[39.50354767 328.24133301]
[24.51136971 328.72567749]
[10.97140026 322.27047729]
[1.90850389 310.31793213]
[-0.65264553 295.53817749]
[3.86011958 281.23312378]
[14.43863583 270.59851074]
[28.71963692 266.01016235]
[43.51270676 268.49310303]
[55.51304245 277.49264526]
[62.03973770 290.99832153]
[64.26485443 276.16427612]
[66.48996735 261.33023071]
[68.71508789 246.49618530]
[56.87678528 239.26274109]
[48.66366577 228.02812195]
[45.34240341 214.46903992]
[47.44650269 200.62478638]
[54.69092941 188.59051514]
[66.01022339 180.20016479]
[79.71505737 176.74703979]
[82.16078949 161.94776917]
[84.60651398 147.14849854]
[79.04791260 133.32998657]
[88.93177032 120.97604370]
[91.37750244 106.17677307]
[93.15996552 91.28305817]
[94.27561188 76.32460022]
[95.39126587 61.36614990]
[96.50691223 46.40769577]
[83.36104584 38.72996140]
[74.88684845 26.15717697]
[72.72070312 11.21301365]
[77.23925018 -3.13075662]
[87.49517059 -14.04522038]
[101.41522217 -19.40222931]
[102.53087616 -34.36068344]
[103.53513336 -49.32702637]
[104.42794800 -64.30043030]
[101.81488037 -73.05313110]
[105.44715881 -79.48960876]
[98.75769806 -93.82703400]
[107.42018127 -105.94358063]
[108.53582764 -120.90203094]
[98.49949646 -132.81462097]
[99.84400940 -147.96873474]
[111.26269531 -157.46342468]
[112.37834167 -172.42187500]
[113.49399567 -187.38032532]
[114.60964203 -202.33879089]
[100.31836700 -207.15649414]
[87.67465210 -215.37763977]
[77.47328186 -226.48542786]
[70.35552216 -239.78160095]
[66.76880646 -254.43037415]
[66.93859863 -269.51089478]
[70.85422516 -284.07519531]
[78.26954651 -297.20773315]
[88.71842194 -308.08300781]
[101.54403687 -316.01739502]
[115.94015503 -320.51211548]
[131.00183105 -321.28463745]
[145.78227234 -318.28640747]
[159.35235596 -311.70587158]
[170.85908508 -301.95669556]
[179.57910156 -289.65173340]
[184.96427917 -275.56448364]
[186.67610168 -260.58047485]
[184.60694885 -245.64163208]
[178.88690186 -231.68699646]
[169.87553406 -219.59378052]
[158.13928223 -210.12216187]
[144.41590881 -203.86756897]
[129.56809998 -201.22312927]
[128.45243835 -186.26467896]
[127.33679962 -171.30622864]
[126.22114563 -156.34777832]
[136.10504150 -145.26426697]
[135.18670654 -130.07836914]
[123.49428558 -119.78638458]
[122.37863922 -104.82793427]
[129.14788818 -91.56044006]
[120.40561676 -78.37396240]
[119.40135193 -63.40761566]
[118.50853729 -48.43421173]
[121.24834442 -41.57015610]
[117.48932648 -33.24503326]
[116.37368011 -18.28658104]
[129.34506226 -10.92392349]
[137.86845398 1.39116061]
[140.20922852 16.24652100]
[135.85021973 30.70401764]
[125.60471344 41.88062668]
[111.46536255 47.52334213]
[110.34971619 62.48179626]
[109.23406982 77.44024658]
[108.11842346 92.39870453]
[120.16165161 83.45663452]
[135.02003479 85.51297760]
[144.18200684 97.38976288]
[142.39918518 112.28343964]
[130.69284058 121.66222382]
[115.76890564 120.15352631]
[106.17677307 108.62249756]
[103.73104095 123.42176819]
[109.11470795 138.29882812]
[99.40578461 149.59422302]
[96.96006012 164.39349365]
[94.51432800 179.19276428]
[107.90119934 188.44078064]
[115.88632965 202.55039978]
[116.91524506 218.67185974]
[110.83261108 233.57438660]
[98.90316010 244.29362488]
[83.54913330 248.72129822]
[81.32401276 263.55535889]
[79.09889984 278.38937378]
[76.87377930 293.22341919]
[75.86952209 308.18978882]
[86.92861938 319.15945435]
[86.94145203 334.37307739]
[76.41537476 344.84866333]
[76.63870239 359.84698486]
[76.86203003 374.84533691]
[77.08535767 389.84365845]
[77.30868530 404.84201050]
[77.53201294 419.84033203]
[77.75534058 434.83868408]
[92.72771454 435.88836670]
[107.55713654 438.20401001]
[122.13674164 441.76898193]
[136.36149597 446.55752563]
[150.12889099 452.53518677]
[163.33975220 459.65887451]
[175.89889526 467.87728882]
[187.71580505 477.13116455]
[198.70535278 487.35385132]
[208.78836060 498.47171021]
[217.89218140 510.40463257]
[225.95120239 523.06665039]
[232.90737915 536.36645508]
[238.71058655 550.20831299]
[243.31900024 564.49243164]
[246.69941711 579.11590576]
[248.82749939 593.97338867]
[249.68789673 608.95788574]
[249.27441406 623.96130371]
[247.59002686 638.87561035]
[244.64688110 653.59332275]
[240.46617126 668.00842285]
[235.07803345 682.01708984]
[228.52127075 695.51831055]
[220.84313965 708.41479492]
[212.09896851 720.61370850]
[202.35174561 732.02709961]
[191.67170715 742.57275391]
[180.13580322 752.17468262]
[167.82714844 760.76367188]
[154.83444214 768.27789307]
[141.25128174 774.66314697]
[127.17553711 779.87347412]
[112.70864105 783.87127686]
[97.95481873 786.62780762]
[83.02037048 788.12322998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 174]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[45 165]
[57 164]
[58 163]
[59 162]
[60 161]
[67 155]
[68 154]
[69 153]
[71 151]
[72 150]
[73 143]
[74 142]
[75 141]
[76 140]
[82 134]
[83 133]
[84 131]
[85 130]
[87 129]
[89 127]
[90 126]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
