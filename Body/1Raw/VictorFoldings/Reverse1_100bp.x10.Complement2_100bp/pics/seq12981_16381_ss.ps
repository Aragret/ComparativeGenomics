%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[87.84427643 613.02014160]
[73.65956879 617.99414062]
[58.87137604 620.68780518]
[43.84386444 621.03479004]
[28.94710350 619.02655029]
[14.54793644 614.71258545]
[1.00095677 608.19909668]
[-11.36022949 599.64642334]
[-22.23121643 589.26531982]
[-31.34429550 577.31127930]
[-38.47504807 564.07879639]
[-43.44787979 549.89367676]
[-46.14031982 535.10528564]
[-46.48607254 520.07775879]
[-44.47661591 505.18112183]
[-40.16144562 490.78231812]
[-33.64681625 477.23587036]
[-25.09316063 464.87539673]
[-14.71111965 454.00527954]
[-2.75636077 444.89318848]
[10.47671890 437.76351929]
[24.66224289 432.79187012]
[39.45088196 430.10064697]
[54.47845078 429.75613403]
[56.48246384 414.89059448]
[58.48647690 400.02505493]
[60.04700089 385.10647583]
[61.16264725 370.14801025]
[62.27829742 355.18954468]
[63.39394760 340.23110962]
[64.50959778 325.27264404]
[62.12717438 321.13342285]
[62.31969070 315.45364380]
[65.88768005 309.88757324]
[59.51644135 296.42443848]
[68.64745331 283.50408936]
[61.27633286 273.91278076]
[62.45433426 261.47106934]
[72.09294128 252.90019226]
[73.87540436 238.00648499]
[71.54901886 230.99151611]
[75.79689026 222.90489197]
[77.80090332 208.03936768]
[79.80491638 193.17384338]
[81.80892944 178.30830383]
[75.84136963 164.66142273]
[85.35301971 152.01867676]
[87.35703278 137.15315247]
[89.36104584 122.28762054]
[91.36505890 107.42209625]
[80.56159210 117.82810974]
[65.86827087 120.84577179]
[51.83797836 115.54002380]
[42.81815720 103.55491638]
[41.60369492 88.60416412]
[48.57090378 75.32041168]
[61.56092072 67.81978607]
[76.54865265 68.42642975]
[88.88997650 76.95236969]
[94.76084137 90.75601196]
[98.73293304 76.29148102]
[102.59723663 61.79779053]
[106.35353851 47.27573013]
[110.00162506 32.72611237]
[113.54129791 18.14973640]
[101.46025085 6.86080074]
[96.74773407 -8.89000034]
[100.59924316 -24.77655792]
[111.87153625 -36.48515701]
[127.41976166 -40.88574982]
[130.74201965 -55.51321030]
[134.06428528 -70.14067078]
[137.05905151 -84.83867645]
[139.72485352 -99.59989166]
[142.39064026 -114.36110687]
[145.05644226 -129.12232971]
[147.72222900 -143.88354492]
[150.38803101 -158.64476013]
[153.05383301 -173.40597534]
[142.52894592 -162.71827698]
[128.27122498 -158.05812073]
[113.46584320 -160.46659851]
[101.42037964 -169.40565491]
[94.82581329 -182.87829590]
[95.15539551 -197.87466431]
[102.33549500 -211.04457092]
[114.76205444 -219.44580078]
[129.65895081 -221.20150757]
[143.69818115 -215.91944885]
[153.74333191 -204.77967834]
[157.55032349 -190.27079773]
[151.02679443 -204.41580200]
[156.33622742 -218.67289734]
[169.86152649 -224.80491638]
[174.89845276 -238.93394470]
[179.93536377 -253.06297302]
[184.97227478 -267.19198608]
[190.00920105 -281.32101440]
[195.04611206 -295.45004272]
[181.93794250 -302.81784058]
[170.26361084 -312.29504395]
[160.35896301 -323.60903931]
[152.50901794 -336.43426514]
[146.93960571 -350.40170288]
[143.81098938 -365.10952759]
[143.21318054 -380.13452148]
[145.16337585 -395.04440308]
[149.60545349 -409.41018677]
[156.41163635 -422.81854248]
[165.38606262 -434.88369751]
[176.27053833 -445.25848389]
[188.75189209 -453.64440918]
[202.47100830 -459.80020142]
[217.03317261 -463.54873657]
[232.01939392 -464.78216553]
[246.99847412 -463.46499634]
[261.53945923 -459.63513184]
[275.22396851 -453.40277100]
[287.65826416 -444.94723511]
[298.48458862 -434.51177979]
[307.39144897 -422.39666748]
[314.12258911 -408.95050049]
[318.48431396 -394.56008911]
[320.35116577 -379.63955688]
[319.66937256 -364.61813354]
[316.45861816 -349.92800903]
[310.81124878 -335.99191284]
[302.88973999 -323.21075439]
[292.92202759 -311.95230103]
[281.19491577 -302.54046631]
[268.04577637 -295.24606323]
[253.85296631 -290.27896118]
[239.02482605 -287.78207397]
[223.98800659 -287.82723999]
[209.17514038 -290.41314697]
[204.13822937 -276.28411865]
[199.10130310 -262.15509033]
[194.06439209 -248.02604675]
[189.02748108 -233.89701843]
[183.99055481 -219.76799011]
[190.58662415 -206.46282959]
[185.67974854 -192.06222534]
[171.67935181 -185.23387146]
[167.81504822 -170.74018860]
[165.14924622 -155.97897339]
[162.48345947 -141.21774292]
[159.81765747 -126.45653534]
[157.15185547 -111.69531250]
[154.48606873 -96.93409729]
[151.82026672 -82.17288208]
[153.51953125 -79.08340454]
[153.80679321 -75.01737976]
[152.23937988 -70.64742279]
[148.69174194 -66.81841278]
[145.36947632 -52.19095230]
[142.04722595 -37.56349182]
[152.65832520 -28.96572113]
[158.55812073 -16.57535553]
[158.54377747 -2.78590703]
[152.56109619 9.71152210]
[141.72616577 18.45341492]
[128.11767578 21.68940926]
[124.57800293 36.26578522]
[126.05431366 43.50748825]
[120.87560272 51.03203201]
[117.11930084 65.55409241]
[118.48762512 72.81697845]
[113.19745636 80.26358032]
[109.22536469 94.72810364]
[106.23059082 109.42610931]
[104.22657776 124.29163361]
[102.22255707 139.15716553]
[100.21854401 154.02268982]
[106.04277039 168.73286438]
[96.67445374 180.31233215]
[94.67044067 195.17785645]
[92.66642761 210.04338074]
[90.66241455 224.90890503]
[88.76912689 239.78894043]
[86.98665619 254.68266296]
[94.62438965 271.43817139]
[83.56606293 285.06460571]
[89.82567596 299.59484863]
[80.80628204 311.44812012]
[79.46804810 326.38830566]
[78.35240173 341.34674072]
[77.23674774 356.30520630]
[76.12110138 371.26364136]
[75.00545502 386.22210693]
[77.02888489 390.06393433]
[77.66097260 393.95816040]
[77.05609131 397.46096802]
[75.49689484 400.22421265]
[73.35200500 402.02908325]
[71.34799194 416.89459229]
[69.34397888 431.76013184]
[83.74385834 436.07174683]
[97.29190826 442.58300781]
[109.65451050 451.13360596]
[120.52720642 461.51296997]
[129.64225769 473.46545410]
[136.77519226 486.69677734]
[141.75036621 500.88107300]
[144.44525146 515.66906738]
[144.79348755 530.69653320]
[142.78648376 545.59344482]
[138.47369385 559.99298096]
[131.96128845 573.54052734]
[123.40967560 585.90240479]
[113.02943420 596.77423096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 196]
[25 195]
[26 194]
[27 189]
[28 188]
[29 187]
[30 186]
[31 185]
[34 184]
[36 182]
[39 180]
[40 179]
[42 178]
[43 177]
[44 176]
[45 175]
[47 173]
[48 172]
[49 171]
[50 170]
[60 169]
[61 168]
[62 166]
[63 165]
[64 163]
[65 162]
[70 156]
[71 155]
[72 154]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[91 143]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
