%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[58.81147385 558.33056641]
[52.03142548 544.86602783]
[48.67136002 530.16998291]
[48.92662430 515.09686279]
[52.78237915 500.52307129]
[60.01445770 487.29580688]
[70.20239258 476.18411255]
[82.75387573 467.83404541]
[96.93917084 462.73101807]
[95.37864685 447.81243896]
[93.81813049 432.89382935]
[90.73801422 429.24389648]
[89.91805267 423.62033081]
[92.44004059 417.50875854]
[91.32439423 402.55029297]
[90.20874786 387.59185791]
[89.09310150 372.63339233]
[87.97744751 357.67495728]
[81.54450226 371.22549438]
[70.70117188 381.58996582]
[56.87408066 387.40472412]
[41.88241577 387.90475464]
[27.69859505 383.02426147]
[16.18873978 373.40536499]
[8.86717129 360.31356812]
[6.69716835 345.47137451]
[9.96423149 330.83148193]
[18.23852158 318.32003784]
[30.43141556 309.58316040]
[44.93872452 305.77029419]
[59.85176849 307.38308716]
[73.20847321 314.20941162]
[83.25154114 325.35107422]
[88.66007233 339.34457397]
[90.88518524 324.51052856]
[93.11030579 309.67648315]
[95.33541870 294.84243774]
[97.56053925 280.00839233]
[99.78565216 265.17434692]
[100.45544434 250.18931580]
[99.56262207 235.21591187]
[98.66980743 220.24250793]
[97.77699280 205.26910400]
[96.88417816 190.29568481]
[95.87992096 175.32934570]
[94.76426697 160.37089539]
[93.64862061 145.41244507]
[91.61495972 143.48309326]
[90.22299957 140.63194275]
[89.82768250 137.09936523]
[90.69043732 133.24966431]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[89.62316895 55.94414139]
[86.08349609 41.36776733]
[82.54382324 26.79139137]
[79.00415039 12.21501541]
[75.35606384 -2.33460474]
[71.59976196 -16.85666466]
[67.84346008 -31.37872314]
[64.08716583 -45.90078354]
[60.33086014 -60.42284012]
[56.57456207 -74.94490051]
[45.87728500 -82.15122223]
[43.04761887 -94.32401276]
[49.07125854 -104.81411743]
[45.53158569 -119.39049530]
[40.46547699 -126.99131012]
[42.04943848 -134.21023560]
[38.72718048 -148.83769226]
[35.29611969 -163.44001770]
[31.75644684 -178.01638794]
[28.21677399 -192.59275818]
[24.67710114 -207.16914368]
[9.70770264 -205.83694458]
[-5.29304838 -206.75079346]
[-19.99002838 -209.89028931]
[-34.05490494 -215.18528748]
[-47.17345810 -222.51748657]
[-59.05261612 -231.72309875]
[-69.42699432 -242.59645081]
[-78.06483459 -254.89463806]
[-84.77314758 -268.34292603]
[-89.40207672 -282.64083862]
[-91.84821320 -297.46899414]
[-92.05690002 -312.49609375]
[-90.02348328 -327.38647461]
[-85.79338837 -341.80743408]
[-79.46111298 -355.43679810]
[-71.16812134 -367.97012329]
[-61.09969330 -379.12738037]
[-49.48075104 -388.65930176]
[-36.57086945 -396.35299683]
[-22.65845871 -402.03649902]
[-8.05432796 -405.58291626]
[6.91526031 -406.91299438]
[21.91588020 -405.99700928]
[36.61241531 -402.85540771]
[50.67653275 -397.55841064]
[63.79404449 -390.22433472]
[75.67189026 -381.01705933]
[86.04472351 -370.14221191]
[94.68080902 -357.84280396]
[101.38720703 -344.39355469]
[106.01409912 -330.09497070]
[108.45812225 -315.26647949]
[108.66467285 -300.23931885]
[106.62913513 -285.34927368]
[102.39698029 -270.92889404]
[96.06276703 -257.30044556]
[87.76799011 -244.76829529]
[77.69797516 -233.61247253]
[66.07767487 -224.08219910]
[53.16669464 -216.39036560]
[39.25347519 -210.70881653]
[42.79314804 -196.13243103]
[46.33282089 -181.55606079]
[49.87249374 -166.97969055]
[54.50563049 -161.22157288]
[53.35464096 -152.15994263]
[56.67689896 -137.53248596]
[60.10795975 -122.93016815]
[63.64763260 -108.35379028]
[76.42733002 -96.32689667]
[71.09661865 -78.70120239]
[74.85292053 -64.17914581]
[78.60922241 -49.65708160]
[82.36552429 -35.13502502]
[86.12182617 -20.61296463]
[89.87812042 -6.09090519]
[94.59647369 -0.40241325]
[93.58052826 8.67534351]
[97.12020111 23.25171852]
[100.65987396 37.82809448]
[104.19954681 52.40446854]
[108.55467987 38.05062866]
[118.01174927 26.40744019]
[131.16786194 19.20210838]
[146.07138062 17.50349808]
[160.51144409 21.56358719]
[172.34597778 30.78008842]
[179.81938171 43.78578568]
[181.82302856 58.65136337]
[178.05969238 73.17160034]
[169.08763123 85.19250488]
[156.23780823 92.93084717]
[141.41641235 95.23869324]
[126.82210541 91.77368927]
[114.61987305 83.04984283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.60707092 144.29679871]
[109.72272491 159.25524902]
[110.83837128 174.21369934]
[114.59738159 182.53881836]
[111.85758209 189.40287781]
[112.75039673 204.37628174]
[113.64321136 219.34968567]
[114.53603363 234.32308960]
[115.42884827 249.29649353]
[122.26561737 235.94514465]
[133.64135742 226.16801453]
[147.86857605 221.41548157]
[162.83671570 222.39256287]
[176.32536316 228.95429993]
[186.33354187 240.12731934]
[191.37661743 254.25415039]
[190.70646667 269.23916626]
[184.42250061 282.85943604]
[173.45690918 293.09448242]
[159.43638611 298.42596436]
[144.44078064 298.06301880]
[130.69459534 292.05947876]
[120.23701477 281.30593872]
[114.61969757 267.39947510]
[112.39458466 282.23352051]
[110.16946411 297.06756592]
[107.94435120 311.90161133]
[105.71923065 326.73565674]
[103.49411011 341.56970215]
[102.93590546 356.55929565]
[104.05155182 371.51776123]
[105.16719818 386.47619629]
[106.28285217 401.43466187]
[107.39849854 416.39312744]
[108.73673248 431.33331299]
[110.29725647 446.25189209]
[111.85778046 461.17050171]
[126.79203796 463.22753906]
[140.79978943 468.79943848]
[153.06665039 477.56231689]
[162.87944031 489.00662231]
[169.66764832 502.46707153]
[173.03662109 517.16107178]
[172.79049683 532.23431396]
[168.94357300 546.81048584]
[161.71952820 560.04211426]
[151.53833008 571.15997314]
[138.99191284 579.51770020]
[124.80970764 584.62927246]
[109.81625366 586.19763184]
[94.88323975 584.13153076]
[80.87886810 578.55114746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 167]
[41 166]
[42 165]
[43 164]
[44 163]
[45 161]
[46 160]
[47 159]
[52 158]
[53 157]
[55 154]
[56 153]
[57 138]
[58 137]
[59 136]
[60 135]
[61 133]
[62 132]
[63 131]
[64 130]
[65 129]
[66 128]
[69 126]
[70 125]
[72 124]
[73 123]
[74 121]
[75 120]
[76 119]
[77 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
