%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[250.44895935 301.51901245]
[259.34310913 289.42364502]
[248.23588562 279.34252930]
[237.12864685 269.26138306]
[226.02142334 259.18023682]
[208.69517517 256.39306641]
[203.22055054 238.81153870]
[191.96446228 228.89689636]
[180.63485718 219.06631470]
[169.23240662 209.32034302]
[157.82994080 199.57437134]
[163.54251099 213.44400024]
[165.17343140 228.35507202]
[162.59408569 243.13165283]
[156.00788879 256.60836792]
[145.93426514 267.72241211]
[133.16764832 275.59729004]
[118.71488190 279.61193848]
[103.71575928 279.44973755]
[89.35317993 275.12353516]
[76.75982666 266.97442627]
[66.92887878 255.64515686]
[60.63563919 242.02917480]
[58.37641907 227.20028687]
[60.32938766 212.32797241]
[66.34053040 198.58511353]
[75.93577576 187.05552673]
[88.35841370 178.64849854]
[102.62873077 174.02703857]
[117.62132263 173.55560303]
[132.15380859 177.27137756]
[145.08279419 184.88349915]
[137.04162598 172.22097778]
[129.00045776 159.55844116]
[120.95928192 146.89591980]
[112.91810608 134.23339844]
[104.87693024 121.57086945]
[96.83576202 108.90834808]
[92.10798645 106.63632202]
[88.98972321 101.87714386]
[88.75019836 95.74692535]
[81.08960724 82.85060120]
[73.42900848 69.95427704]
[65.76840973 57.05794907]
[53.48479843 53.12403488]
[47.36976624 42.22494507]
[50.22583008 30.47039413]
[36.64514542 22.35401917]
[37.01915741 7.46411085]
[29.55141640 -5.54484177]
[22.08367538 -18.55379486]
[14.61593342 -31.56274605]
[7.14819288 -44.57169724]
[-0.31954849 -57.58065033]
[-7.78728962 -70.58960724]
[-15.25503063 -83.59855652]
[-22.72277260 -96.60750580]
[-27.23771095 -99.22712708]
[-30.01828575 -102.94488525]
[-30.93663406 -106.91624451]
[-30.21861458 -110.36830902]
[-37.09802628 -123.69773865]
[-43.97743988 -137.02717590]
[-50.85685349 -150.35659790]
[-57.73626709 -163.68603516]
[-71.84126282 -158.52343750]
[-86.48208618 -155.16943359]
[-101.42784119 -153.67689514]
[-116.44281006 -154.06939697]
[-131.29017639 -156.34071350]
[-145.73577881 -160.45504761]
[-159.55180359 -166.34748840]
[-172.52032471 -173.92512512]
[-184.43684387 -183.06842041]
[-195.11338806 -193.63320923]
[-204.38159180 -205.45283508]
[-212.09526062 -218.34091187]
[-218.13278198 -232.09414673]
[-222.39889526 -246.49566650]
[-224.82632446 -261.31829834]
[-225.37680054 -276.32830811]
[-224.04162598 -291.28894043]
[-220.84187317 -305.96426392]
[-215.82800293 -320.12280273]
[-209.07907104 -333.54125977]
[-200.70155334 -346.00802612]
[-190.82754517 -357.32647705]
[-179.61279297 -367.31811523]
[-167.23416138 -375.82531738]
[-153.88687134 -382.71392822]
[-139.78143311 -387.87533569]
[-125.14032745 -391.22811890]
[-110.19445038 -392.71939087]
[-95.17951202 -392.32565308]
[-80.33233643 -390.05307007]
[-65.88707733 -385.93753052]
[-52.07155991 -380.04391479]
[-39.10366821 -372.46517944]
[-27.18792915 -363.32089233]
[-16.51227188 -352.75518799]
[-7.24506617 -340.93478394]
[0.46753138 -328.04608154]
[6.50388145 -314.29232788]
[10.76878262 -299.89044189]
[13.19497108 -285.06759644]
[13.74418163 -270.05755615]
[12.40775394 -255.09703064]
[9.20676327 -240.42198181]
[4.19169617 -226.26387024]
[-2.55835438 -212.84596252]
[-10.93692970 -200.37989807]
[-20.81188774 -189.06228638]
[-32.02748489 -179.07160950]
[-44.40683746 -170.56544495]
[-37.52742386 -157.23600769]
[-30.64801025 -143.90658569]
[-23.76859856 -130.57714844]
[-16.88918686 -117.24772644]
[-9.71381950 -104.07524872]
[-2.24607849 -91.06629944]
[5.22166252 -78.05734253]
[12.68940353 -65.04839325]
[20.15714455 -52.03944016]
[27.62488556 -39.03048706]
[35.09262848 -26.02153587]
[42.56036758 -13.01258278]
[50.02811050 -0.00363039]
[63.07465363 7.18225765]
[63.23478317 23.00265312]
[78.86363220 30.98425674]
[78.66473389 49.39735031]
[86.32533264 62.29367828]
[93.98593140 75.19000244]
[101.64653015 88.08633423]
[109.49828339 100.86717224]
[117.53945923 113.52970123]
[125.58062744 126.19222260]
[133.62179565 138.85475159]
[141.66297913 151.51727295]
[149.70414734 164.17979431]
[157.74531555 176.84231567]
[167.57589722 188.17192078]
[178.97836304 197.91787720]
[190.38082886 207.66384888]
[198.93756104 210.86074829]
[201.87910461 217.64079285]
[213.13520813 227.55545044]
[226.03332520 227.52017212]
[235.20443726 236.00984192]
[236.10255432 248.07301331]
[247.20979309 258.15414429]
[258.31701660 268.23529053]
[269.42425537 278.31643677]
[280.60360718 268.29513550]
[292.75408936 259.47644043]
[305.74694824 251.95382690]
[319.44445801 245.80705261]
[333.70135498 241.10127258]
[348.36657715 237.88635254]
[363.28460693 236.19639587]
[378.29736328 236.04930115]
[393.24566650 237.44664001]
[407.97103882 240.37359619]
[422.31741333 244.79913330]
[436.13272095 250.67634583]
[449.27047729 257.94293213]
[461.59143066 266.52185059]
[472.96499634 276.32217407]
[483.27053833 287.24002075]
[492.39889526 299.15963745]
[500.25326538 311.95468140]
[506.75036621 325.48950195]
[511.82135010 339.62066650]
[515.41247559 354.19830322]
[517.48565674 369.06793213]
[518.01892090 384.07192993]
[517.00659180 399.05120850]
[514.45941162 413.84701538]
[510.40438843 428.30252075]
[504.88452148 442.26443481]
[497.95831299 455.58477783]
[489.69918823 468.12234497]
[480.19467163 479.74426270]
[469.54556274 490.32727051]
[457.86471558 499.75924683]
[445.27597046 507.94015503]
[431.91275024 514.78332520]
[417.91674805 520.21612549]
[403.43630981 524.18109131]
[388.62493896 526.63610840]
[373.63961792 527.55511475]
[358.63925171 526.92846680]
[343.78280640 524.76275635]
[329.22778320 521.08099365]
[315.12850952 515.92211914]
[301.63436890 509.34088135]
[288.88848877 501.40701294]
[277.02593994 492.20462036]
[266.17245483 481.83129883]
[256.44311523 470.39694214]
[247.94107056 458.02282715]
[240.75640869 444.84008789]
[234.96533203 430.98846436]
[230.62918091 416.61480713]
[227.79396057 401.87149048]
[226.48971558 386.91476440]
[226.73027039 371.90322876]
[228.51307678 356.99600220]
[231.81921387 342.35110474]
[236.61367798 328.12374878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 153]
[3 152]
[4 151]
[5 150]
[7 147]
[8 146]
[9 144]
[10 143]
[11 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[41 134]
[42 133]
[43 132]
[44 131]
[47 129]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
