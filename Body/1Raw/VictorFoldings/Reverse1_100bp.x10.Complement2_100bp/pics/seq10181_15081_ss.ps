%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[73.68656158 797.22680664]
[58.71483612 796.18389893]
[43.87330246 793.95477295]
[29.25578880 790.55352783]
[14.95471573 786.00170898]
[1.06049955 780.32800293]
[-12.33901501 773.56829834]
[-25.15911102 765.76544189]
[-37.31873322 756.96862793]
[-48.74100494 747.23352051]
[-59.35371017 736.62170410]
[-69.08975220 725.20025635]
[-77.88757324 713.04138184]
[-85.69155121 700.22198486]
[-92.45233917 686.82299805]
[-98.12720490 672.92926025]
[-102.68026733 658.62860107]
[-106.08272552 644.01135254]
[-108.31308746 629.16998291]
[-109.35724640 614.19836426]
[-109.20858765 599.19110107]
[-107.86807251 584.24310303]
[-105.34415436 569.44885254]
[-101.65280914 554.90185547]
[-96.81735992 540.69421387]
[-90.86838531 526.91558838]
[-83.84350586 513.65319824]
[-75.78711700 500.99084473]
[-66.75017548 489.00863647]
[-56.78979492 477.78228760]
[-45.96896362 467.38278198]
[-34.35609055 457.87585449]
[-22.02460098 449.32165527]
[-9.05245304 441.77426147]
[4.47833395 435.28134155]
[18.48221397 429.88397217]
[32.87064743 425.61630249]
[47.55266571 422.50531006]
[62.43544769 420.57061768]
[77.42488861 419.82449341]
[77.87149811 404.83114624]
[78.31809998 389.83779907]
[67.94915771 379.20666504]
[68.18849182 363.99493408]
[79.40969086 353.19110107]
[79.85630035 338.19775391]
[80.30290222 323.20440674]
[80.74951172 308.21105957]
[81.19611359 293.21771240]
[78.63124847 289.18899536]
[78.56995392 283.50628662]
[81.88584900 277.78646851]
[82.77866364 262.81304932]
[83.67147827 247.83964539]
[76.70543671 234.67440796]
[85.25041962 221.35923767]
[86.14323425 206.38583374]
[87.03604889 191.41242981]
[87.92886353 176.43902588]
[75.32593536 173.34730530]
[63.41680908 168.19316101]
[52.53635025 161.12150574]
[42.99050903 152.33119202]
[35.04769897 142.06941223]
[28.93126488 130.62467957]
[24.81318665 118.31882477]
[22.80926514 105.49787140]
[22.97584343 92.52232361]
[25.30824089 79.75704193]
[29.74087334 67.56095886]
[36.14909744 56.27702332]
[44.35272598 46.22251892]
[54.12108612 37.68016815]
[65.17949677 30.89016914]
[77.21701813 26.04344559]
[89.89516449 23.27628517]
[102.85744476 22.66649246]
[97.03321838 7.95632648]
[106.40153503 -3.62313795]
[108.40554810 -18.48866653]
[110.40956116 -33.35419464]
[101.10007477 -45.84303665]
[103.34419250 -60.89024734]
[115.30776215 -69.68846130]
[117.31177521 -84.55398560]
[119.20507050 -99.43402100]
[120.98753357 -114.32773590]
[114.94494629 -128.94955444]
[124.13981628 -140.66722107]
[125.92228699 -155.56094360]
[127.70475006 -170.45465088]
[129.48721313 -185.34837341]
[131.26968384 -200.24209595]
[116.91419220 -204.74037170]
[103.62979889 -211.80009460]
[91.86897278 -221.18078613]
[82.03226471 -232.56295776]
[74.45472717 -245.55894470]
[69.39444733 -259.72610474]
[67.02376556 -274.58187866]
[67.42343140 -289.62033081]
[70.57982635 -304.32922363]
[76.38545990 -318.20761108]
[84.64258575 -330.78277588]
[95.06996918 -341.62640381]
[107.31245422 -350.36917114]
[120.95307159 -356.71331787]
[135.52722168 -360.44277954]
[150.53851318 -361.43048096]
[165.47569275 -359.64282227]
[179.82995605 -355.14065552]
[193.11245728 -348.07736206]
[204.87075806 -338.69348145]
[214.70439148 -327.30865479]
[222.27842712 -314.31063843]
[227.33488464 -300.14212036]
[229.70156860 -285.28570557]
[229.29785156 -270.24734497]
[226.13748169 -255.53930664]
[220.32810974 -241.66250610]
[212.06759644 -229.08956909]
[201.63728333 -218.24874878]
[189.39244080 -209.50927734]
[175.75012207 -203.16879272]
[161.17495728 -199.44328308]
[146.16340637 -198.45962524]
[144.38093567 -183.56590271]
[142.59846497 -168.67219543]
[140.81600952 -153.77847290]
[139.03353882 -138.88475037]
[145.20361328 -125.32823181]
[135.88125610 -112.54527283]
[134.09878540 -97.65155792]
[136.42517090 -90.63658905]
[132.17730713 -82.54997253]
[130.17329407 -67.68444824]
[139.37995911 -56.03228378]
[137.55937195 -40.92797852]
[125.27509308 -31.35018158]
[123.27107239 -16.48465347]
[121.26705933 -1.61912441]
[127.23462677 12.02776051]
[117.72296906 24.67050743]
[133.80461121 30.38761330]
[148.24189758 39.49086380]
[160.33256531 51.53745270]
[169.48847961 65.94139862]
[175.26426697 82.00205231]
[177.37899780 98.93817902]
[175.72978210 115.92595673]
[170.39686584 132.13905334]
[161.63963318 146.78880310]
[149.88407898 159.16261292]
[135.70201111 168.65859985]
[119.78330231 174.81481934]
[102.90227509 177.33183289]
[102.00946045 192.30523682]
[101.11663818 207.27865601]
[100.22382355 222.25205994]
[107.12600708 236.48829651]
[98.64488220 248.73246765]
[97.75206757 263.70587158]
[96.85925293 278.67929077]
[96.18946838 293.66430664]
[95.74285889 308.65765381]
[95.29625702 323.65103149]
[94.84964752 338.64437866]
[94.40304565 353.63772583]
[104.96128845 365.09027100]
[104.29478455 380.28930664]
[93.31144714 390.28439331]
[92.86484528 405.27774048]
[92.41823578 420.27108765]
[107.33669281 421.90808105]
[122.07793427 424.72518921]
[136.54875183 428.70455933]
[150.65765381 433.82107544]
[164.31546021 440.04238892]
[177.43579102 447.32916260]
[189.93569946 455.63531494]
[201.73617554 464.90832520]
[212.76260376 475.08959961]
[222.94525146 486.11471558]
[232.21977234 497.91403198]
[240.52749634 510.41290283]
[247.81593323 523.53228760]
[254.03897095 537.18933105]
[259.15728760 551.29760742]
[263.13848877 565.76788330]
[265.95745850 580.50878906]
[267.59631348 595.42700195]
[268.04473877 610.42834473]
[267.29986572 625.41784668]
[265.36645508 640.30078125]
[262.25665283 654.98303223]
[257.99020386 669.37182617]
[252.59402466 683.37615967]
[246.10224915 696.90753174]
[238.55592346 709.88031006]
[230.00276184 722.21252441]
[220.49682617 733.82617188]
[210.09823608 744.64788818]
[198.87271118 754.60919189]
[186.89125061 763.64715576]
[174.22959900 771.70458984]
[160.96778870 778.73059082]
[147.18968201 784.68072510]
[132.98240662 789.51739502]
[118.43575287 793.20996094]
[103.64170837 795.73510742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 173]
[41 172]
[42 171]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[52 163]
[53 162]
[54 161]
[56 159]
[57 158]
[58 157]
[59 156]
[77 143]
[79 141]
[80 140]
[81 139]
[84 136]
[85 135]
[86 133]
[87 132]
[89 130]
[90 129]
[91 128]
[92 127]
[93 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
