%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[49.30152893 729.10772705]
[39.06887436 740.09906006]
[27.62936974 749.82806396]
[15.13772202 758.16326904]
[1.76286566 764.99188232]
[-12.31431961 770.22155762]
[-26.90345573 773.78155518]
[-41.80723953 775.62371826]
[-56.82411957 775.72320557]
[-71.75099945 774.07867432]
[-86.38602448 770.71221924]
[-100.53126526 765.66955566]
[-113.99541473 759.01873779]
[-126.59640503 750.84979248]
[-138.16380310 741.27319336]
[-148.54118347 730.41839600]
[-157.58821106 718.43225098]
[-165.18251038 705.47680664]
[-171.22140503 691.72735596]
[-175.62321472 677.36975098]
[-178.32839966 662.59820557]
[-179.30038452 647.61248779]
[-178.52603149 632.61523438]
[-176.01580811 617.80932617]
[-171.80364990 603.39495850]
[-165.94653320 589.56707764]
[-158.52366638 576.51263428]
[-149.63543701 564.40826416]
[-139.40205383 553.41760254]
[-127.96189880 543.68933105]
[-115.46969604 535.35498047]
[-102.09438324 528.52728271]
[-88.01685333 523.29858398]
[-73.42748260 519.73950195]
[-58.52357101 517.89831543]
[-43.50668716 517.79986572]
[-28.57991219 519.44543457]
[-13.94511509 522.81280518]
[-8.90819836 508.68374634]
[-3.87128234 494.55471802]
[1.16563392 480.42568970]
[6.20254993 466.29666138]
[11.23946667 452.16763306]
[8.22517681 437.58123779]
[20.14723396 427.18051147]
[24.76124382 412.90777588]
[28.94825363 398.50399780]
[33.13526535 384.10021973]
[37.32227707 369.69641113]
[41.50928879 355.29263306]
[45.69630051 340.88885498]
[49.88331223 326.48507690]
[54.07032013 312.08129883]
[57.39258194 297.45382690]
[59.83831024 282.65457153]
[62.28403473 267.85528564]
[55.49686432 257.84225464]
[57.41332245 245.49272156]
[67.54499054 237.51074219]
[70.21078491 222.74951172]
[72.87657928 207.98829651]
[75.54237366 193.22708130]
[78.20816803 178.46586609]
[69.53097534 166.41423035]
[72.02419281 151.40628052]
[84.72389221 142.38656616]
[87.38969421 127.62534332]
[90.05548859 112.86412811]
[84.00343323 102.91355133]
[86.15850830 91.46817017]
[95.41504669 84.40008545]
[98.30032349 69.68019867]
[101.18559265 54.96030426]
[104.07086182 40.24041367]
[106.95613861 25.52052116]
[93.77015686 18.13219833]
[83.52729797 7.04498053]
[77.22144318 -6.64678860]
[75.45870972 -21.59696579]
[78.39922333 -36.33996201]
[85.74268341 -49.43441010]
[96.75893402 -59.60408783]
[110.36059570 -65.86228943]
[125.21034241 -67.60755920]
[128.09561157 -82.32744598]
[123.15728760 -97.35820007]
[133.19821167 -108.35951996]
[136.08348083 -123.07941437]
[138.74928284 -137.84063721]
[141.19500732 -152.63990784]
[143.64073181 -167.43917847]
[146.08645630 -182.23844910]
[140.70278931 -197.11549377]
[150.41171265 -208.41090393]
[141.47819519 -221.17138672]
[144.16932678 -236.14511108]
[156.38955688 -244.58322144]
[158.83528137 -259.38247681]
[161.28100586 -274.18176270]
[147.47654724 -280.25527954]
[135.61669922 -289.57165527]
[126.44699097 -301.54525757]
[120.54384613 -315.42343140]
[118.27833557 -330.33377075]
[119.79286957 -345.33898926]
[124.99224091 -359.49588013]
[133.54962158 -371.91448975]
[144.92707825 -381.81420898]
[158.40940857 -388.57272339]
[173.14912415 -391.76516724]
[188.21966553 -391.19085693]
[202.67367554 -386.88592529]
[215.60256958 -379.12097168]
[226.19361877 -368.38409424]
[233.78108215 -355.35025024]
[237.88796997 -340.83874512]
[238.25616455 -325.76174927]
[234.86248779 -311.06707764]
[227.92027283 -297.67840576]
[217.86593628 -286.43734741]
[205.33146667 -278.05056763]
[191.10481262 -273.04525757]
[176.08027649 -271.73602295]
[173.63455200 -256.93676758]
[171.18882751 -242.13749695]
[180.04447937 -230.21638489]
[177.77499390 -215.17297363]
[165.21098328 -205.96516418]
[170.76959229 -192.14666748]
[160.88572693 -179.79270935]
[158.44000244 -164.99343872]
[155.99427795 -150.19416809]
[153.54855347 -135.39489746]
[155.55218506 -131.05964661]
[154.85371399 -125.41968536]
[150.80337524 -120.19413757]
[147.91810608 -105.47425079]
[153.06280518 -91.49636078]
[142.81550598 -79.44217682]
[139.93023682 -64.72228241]
[153.02224731 -57.50009537]
[163.25482178 -46.57010651]
[169.61663818 -32.99412537]
[171.47329712 -18.09634590]
[168.63046265 -3.33420300]
[161.35418701 9.84422207]
[150.34603882 20.14224434]
[136.67550659 26.54215431]
[121.67603302 28.40579414]
[118.79075623 43.12568665]
[115.90548706 57.84557724]
[113.02021027 72.56546783]
[110.13494110 87.28536224]
[115.97894287 103.00871277]
[104.81670380 115.52992249]
[102.15090942 130.29113770]
[99.48511505 145.05235291]
[108.22766113 157.94442749]
[105.31388855 172.87643433]
[92.96938324 181.13166809]
[90.30358887 195.89288330]
[87.63779449 210.65409851]
[84.97200012 225.41531372]
[82.30620575 240.17652893]
[88.93309021 257.35693359]
[77.08330536 270.30102539]
[74.63758087 285.10028076]
[72.19184875 299.89956665]
[83.77570343 290.36990356]
[98.74125671 289.35397339]
[111.50673676 297.23068237]
[117.31093597 311.06219482]
[113.98902130 325.68975830]
[102.77999115 335.65759277]
[87.86454010 337.24795532]
[74.80576324 329.86770630]
[68.47410583 316.26831055]
[64.28709412 330.67208862]
[60.10008240 345.07586670]
[55.91307068 359.47964478]
[51.72605896 373.88342285]
[47.53904724 388.28720093]
[43.35203552 402.69100952]
[39.16502380 417.09478760]
[40.34962845 421.27218628]
[40.16215515 425.21292114]
[38.84549713 428.51470947]
[36.74822998 430.89547729]
[34.27626419 432.21740723]
[36.93027878 447.81442261]
[25.36849594 457.20455933]
[20.33157921 471.33358765]
[15.29466343 485.46261597]
[10.25774765 499.59164429]
[5.22083092 513.72070312]
[0.18391483 527.84973145]
[13.64851379 534.49957275]
[26.25004387 542.66772461]
[37.81808472 552.24353027]
[48.19618988 563.09765625]
[57.24401093 575.08319092]
[64.83917999 588.03814697]
[70.87899017 601.78723145]
[75.28175354 616.14453125]
[77.98793030 630.91589355]
[78.96091461 645.90155029]
[78.18756104 660.89880371]
[75.67832184 675.70489502]
[71.46713257 690.11956787]
[65.61093903 703.94781494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[45 189]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[54 168]
[55 167]
[56 166]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[66 157]
[67 156]
[68 155]
[71 153]
[72 152]
[73 151]
[74 150]
[75 149]
[84 140]
[85 139]
[87 137]
[88 136]
[89 133]
[90 132]
[91 131]
[92 130]
[94 128]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
