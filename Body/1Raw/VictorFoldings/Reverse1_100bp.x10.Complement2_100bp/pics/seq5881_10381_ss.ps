%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[49.85645294 240.60813904]
[47.84933090 255.47946167]
[44.80972290 270.17453003]
[40.75243759 284.62179565]
[35.69724274 298.75082397]
[29.66876411 312.49282837]
[22.69637489 325.78079224]
[14.81404305 338.55004883]
[6.06017065 350.73834229]
[-3.52259350 362.28628540]
[-13.88756275 373.13766479]
[-24.98423958 383.23956299]
[-36.75856400 392.54278564]
[-49.15316772 401.00201416]
[-62.10766602 408.57604980]
[-75.55894470 415.22793579]
[-89.44147491 420.92532349]
[-103.68762207 425.64041138]
[-118.22796631 429.35025024]
[-132.99168396 432.03677368]
[-147.90684509 433.68688965]
[-162.90077209 434.29254150]
[-177.90042114 433.85079956]
[-192.83271790 432.36376953]
[-207.62492371 429.83877563]
[-222.20494080 426.28805542]
[-236.50177002 421.72894287]
[-250.44573975 416.18362427]
[-263.96890259 409.67913818]
[-277.00540161 402.24716187]
[-289.49172974 393.92388916]
[-301.36703491 384.74990845]
[-312.57342529 374.76986694]
[-323.05639648 364.03244019]
[-332.76477051 352.58990479]
[-341.65133667 340.49798584]
[-349.67276001 327.81567383]
[-356.78994751 314.60467529]
[-362.96826172 300.92938232]
[-368.17755127 286.85644531]
[-372.39248657 272.45440674]
[-375.59252930 257.79339600]
[-377.76205444 242.94491577]
[-378.89050293 227.98124695]
[-378.97241211 212.97531128]
[-378.00732422 198.00022888]
[-376.00000000 183.12893677]
[-372.96017456 168.43388367]
[-368.90267944 153.98669434]
[-363.84729004 139.85772705]
[-357.81863403 126.11582947]
[-350.84603882 112.82794189]
[-342.96353149 100.05881500]
[-334.20947266 87.87064362]
[-324.62655640 76.32282257]
[-314.26141357 65.47161102]
[-303.16461182 55.36986160]
[-291.39013672 46.06680298]
[-278.99542236 37.60775375]
[-266.04080200 30.03392601]
[-252.58943176 23.38222122]
[-238.70681763 17.68504333]
[-224.46061707 12.97015095]
[-209.92021179 9.26051331]
[-195.15646362 6.57420397]
[-180.24127197 4.92431068]
[-165.24734497 4.31887197]
[-150.24769592 4.76083660]
[-135.31541443 6.24805212]
[-120.52325439 8.77327251]
[-105.94328308 12.32419491]
[-91.64652252 16.88352013]
[-77.70263672 22.42903519]
[-64.17955017 28.93372154]
[-51.14315796 36.36589050]
[-38.65696335 44.68933105]
[-26.78179932 53.86349106]
[-15.57552528 63.84368134]
[-5.09273434 74.58126831]
[4.61550045 86.02394867]
[13.50188160 98.11596680]
[21.52311516 110.79841614]
[28.64012337 124.00950623]
[42.30979156 117.83374023]
[55.97946167 111.65797424]
[69.64913177 105.48220062]
[71.01081085 89.47114563]
[80.24150848 76.31811523]
[94.83557892 69.59344482]
[110.83152008 71.12253571]
[123.88727570 80.49031830]
[137.46348572 74.11170959]
[151.03968811 67.73310852]
[164.61589050 61.35450363]
[178.19210815 54.97589874]
[191.76831055 48.59729385]
[205.29666138 42.11779785]
[218.77639771 35.53776932]
[232.25611877 28.95774078]
[226.64077759 15.04167843]
[222.02104187 0.76417863]
[218.41995239 -13.80362892]
[215.85542297 -28.58916664]
[214.34024048 -43.51877213]
[213.88197327 -58.51807022]
[214.48287964 -73.51232910]
[216.13996887 -88.42684937]
[218.84498596 -103.18733215]
[222.58447266 -117.72023773]
[227.33976746 -131.95315552]
[233.08720398 -145.81518555]
[239.79815674 -159.23725891]
[247.43916321 -172.15252686]
[255.97216797 -184.49661255]
[265.35464478 -196.20805359]
[275.53988647 -207.22848511]
[286.47714233 -217.50299072]
[298.11187744 -226.98040771]
[310.38619995 -235.61351013]
[323.23889160 -243.35929871]
[336.60595703 -250.17915344]
[350.42080688 -256.03912354]
[364.61456299 -260.91000366]
[379.11657715 -264.76754761]
[393.85458374 -267.59249878]
[408.75512695 -269.37081909]
[423.74401855 -270.09362793]
[438.74655151 -269.75732422]
[453.68798828 -268.36361694]
[468.49386597 -265.91940308]
[483.09048462 -262.43688965]
[497.40509033 -257.93341064]
[511.36633301 -252.43139648]
[524.90472412 -245.95828247]
[537.95275879 -238.54629517]
[550.44549561 -230.23239136]
[562.32061768 -221.05795288]
[573.51898193 -211.06871033]
[583.98486328 -200.31442261]
[593.66607666 -188.84867859]
[602.51434326 -176.72859192]
[610.48565674 -164.01452637]
[617.54028320 -150.76985168]
[623.64300537 -137.06054688]
[628.76354980 -122.95490265]
[632.87634277 -108.52320099]
[635.96081543 -93.83733368]
[638.00170898 -78.97046661]
[638.98883057 -63.99667358]
[638.91729736 -48.99054718]
[637.78735352 -34.02685165]
[635.60473633 -19.18013573]
[632.38024902 -4.52436304]
[628.13000488 9.86744976]
[622.87512207 23.92360306]
[616.64184570 37.57406998]
[609.46124268 50.75083923]
[601.36895752 63.38827133]
[592.40545654 75.42340088]
[582.61535645 86.79627228]
[572.04736328 97.45022583]
[560.75415039 107.33217621]
[548.79205322 116.39290619]
[536.22058105 124.58726501]
[523.10241699 131.87442017]
[509.50292969 138.21809387]
[495.48980713 143.58665466]
[481.13290405 147.95336914]
[466.50375366 151.29647827]
[451.67520142 153.59933472]
[436.72113037 154.85046387]
[421.71609497 155.04360962]
[406.73480225 154.17784119]
[391.85186768 152.25746155]
[377.14151001 149.29202271]
[362.67694092 145.29632568]
[348.53027344 140.29025269]
[334.77197266 134.29876709]
[321.47058105 127.35169220]
[308.69235229 119.48365784]
[296.50097656 110.73384857]
[284.95718384 101.14587402]
[274.11843872 90.76747894]
[264.03878784 79.65039062]
[254.76846313 67.84998322]
[246.35360718 55.42504120]
[238.83615112 42.43747711]
[225.35641479 49.01750183]
[211.87667847 55.59753036]
[207.24475098 61.35660553]
[198.14691162 62.17350006]
[184.57070923 68.55210114]
[170.99450684 74.93070984]
[157.41828918 81.30931091]
[143.84208679 87.68791962]
[130.26588440 94.06652069]
[129.87854004 107.64869690]
[123.69202423 119.74633026]
[112.90709686 128.01136780]
[99.61700439 130.83963013]
[86.40125275 127.68218994]
[75.82490540 119.15187073]
[62.15523148 125.32764435]
[48.48556137 131.50341797]
[34.81589127 137.67918396]
[40.02540207 151.75204468]
[44.24054337 166.15403748]
[47.44078064 180.81498718]
[49.61052322 195.66345215]
[50.73920059 210.62710571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[83 205]
[84 204]
[85 203]
[86 202]
[91 196]
[92 195]
[93 194]
[94 193]
[95 192]
[96 191]
[97 189]
[98 188]
[99 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
