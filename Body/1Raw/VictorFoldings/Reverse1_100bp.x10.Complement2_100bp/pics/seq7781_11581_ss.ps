%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[65.82205200 593.16754150]
[56.56433868 605.17053223]
[43.75802994 613.28063965]
[28.94954300 616.51861572]
[13.92707634 614.49346924]
[0.50466639 607.44970703]
[-9.69686508 596.23785400]
[-15.44563484 582.21191406]
[-16.04744911 567.06549072]
[-11.42963791 552.62768555]
[-2.14982319 540.64178467]
[10.67141247 532.55529785]
[25.48584175 529.34460449]
[27.48985481 514.47906494]
[29.49386787 499.61352539]
[31.49788284 484.74801636]
[29.27619362 477.69918823]
[33.64398956 469.67669678]
[35.86910629 454.84268188]
[26.83694267 443.05471802]
[28.88221169 427.97918701]
[41.30773163 418.58535767]
[35.54401016 404.85113525]
[45.24283981 392.35140991]
[39.47912216 378.61718750]
[49.17795181 366.11746216]
[51.40306854 351.28341675]
[53.62818909 336.44937134]
[43.06308746 323.36434937]
[45.27412033 306.35183716]
[59.37742615 296.00213623]
[53.40986633 282.35525513]
[62.92151642 269.71252441]
[60.69982910 262.66369629]
[65.06762695 254.64120483]
[67.29274750 239.80715942]
[69.51786041 224.97311401]
[71.74298096 210.13908386]
[73.96809387 195.30503845]
[76.19321442 180.47099304]
[69.25771332 170.56011963]
[70.99008942 158.18342590]
[81.00179291 150.05146790]
[83.44752502 135.25219727]
[71.30479431 144.05868530]
[56.33386993 143.12512207]
[45.37926102 132.87834167]
[43.44926834 118.00302124]
[51.42625046 105.29995728]
[65.66324615 100.57682800]
[79.65129089 105.99297333]
[86.99554443 119.07404327]
[90.96763611 104.60951996]
[89.89570618 96.62055969]
[95.10804749 89.96005249]
[99.29505920 75.55626678]
[103.48207092 61.15248489]
[107.66908264 46.74870300]
[111.42538452 32.22664261]
[114.74764252 17.59918404]
[118.06990051 2.97172379]
[121.39215851 -11.65573597]
[123.72764587 -26.47280502]
[125.06587982 -41.41299057]
[126.40411377 -56.35317612]
[117.10585785 -74.23905945]
[128.90563965 -89.55741882]
[129.79846191 -104.53082275]
[122.89627838 -118.76705933]
[131.37739563 -131.01123047]
[132.27021790 -145.98463440]
[133.16302490 -160.95805359]
[134.05584717 -175.93145752]
[134.94866943 -190.90486145]
[135.72998047 -205.88449097]
[136.39976501 -220.86953735]
[136.84637451 -235.86288452]
[137.06970215 -250.86122131]
[137.29302979 -265.85955811]
[137.51635742 -280.85791016]
[137.73968506 -295.85623169]
[128.40025330 -311.72622681]
[137.98094177 -326.42916870]
[137.98094177 -341.42916870]
[128.40625000 -357.15835571]
[137.76698303 -372.00234985]
[137.54365540 -387.00067139]
[129.60174561 -400.68411255]
[137.14869690 -413.52517700]
[136.92536926 -428.52352905]
[136.47875977 -443.51687622]
[135.80897522 -458.50189209]
[135.13919067 -473.48693848]
[134.46940613 -488.47198486]
[133.79962158 -503.45703125]
[119.26688385 -507.70886230]
[106.90357971 -516.45117188]
[98.05078888 -528.73553467]
[93.66880035 -543.22961426]
[94.23293304 -558.36102295]
[99.68199921 -572.48852539]
[109.42492676 -584.07965088]
[122.40486145 -591.87707520]
[137.21385193 -595.03497314]
[152.24552917 -593.21087646]
[165.86936951 -586.60253906]
[176.60754395 -575.92687988]
[183.29527283 -562.34185791]
[185.20712280 -547.32104492]
[182.13569641 -532.49389648]
[174.41416931 -519.46868896]
[162.88012695 -509.65823364]
[148.78466797 -504.12680054]
[149.45445251 -489.14175415]
[150.12423706 -474.15673828]
[150.79402161 -459.17169189]
[151.46380615 -444.18664551]
[154.32121277 -440.35986328]
[154.80499268 -434.69744873]
[151.92370605 -428.74685669]
[152.14703369 -413.74850464]
[160.07296753 -401.13784790]
[152.54199219 -387.22399902]
[152.76531982 -372.22567749]
[161.22395325 -363.57824707]
[161.53276062 -351.08471680]
[152.98094177 -341.42916870]
[152.98094177 -326.42916870]
[161.30989075 -317.65676880]
[161.43266296 -305.16003418]
[152.73802185 -295.63290405]
[152.51469421 -280.63458252]
[152.29136658 -265.63623047]
[152.06803894 -250.63789368]
[151.84471130 -235.63955688]
[154.46928406 -231.64947510]
[154.61517334 -225.96830750]
[151.38481140 -220.19975281]
[150.71502686 -205.21470642]
[153.55671692 -198.39221191]
[149.92207336 -190.01203918]
[149.02925110 -175.03863525]
[148.13644409 -160.06523132]
[147.24362183 -145.09182739]
[146.35079956 -130.11842346]
[153.31684875 -116.95317841]
[144.77186584 -103.63800812]
[143.87904358 -88.66460419]
[151.32153320 -81.66299438]
[153.73217773 -71.50735474]
[150.08012390 -61.49522400]
[141.34429932 -55.01493835]
[140.00607300 -40.07475662]
[138.66783142 -25.13456917]
[148.99586487 -36.01260376]
[163.53979492 -39.68334579]
[177.79299927 -35.00938034]
[187.33898926 -23.43898392]
[189.21983337 -8.55736923]
[182.85272217 5.02423191]
[170.21058655 13.09741306]
[155.21070862 13.16061211]
[142.50099182 5.19424486]
[136.01962280 -8.33347702]
[132.69735718 6.29398346]
[129.37510681 20.92144394]
[126.05284119 35.54890442]
[127.43093109 37.99001312]
[127.92510223 41.12408447]
[127.26656342 44.61718369]
[125.31227875 48.04432297]
[122.07286072 50.93571472]
[117.88584900 65.33950043]
[113.69883728 79.74327850]
[109.51183319 94.14706421]
[105.43215942 108.58161163]
[101.46006775 123.04613495]
[98.24679565 137.69792175]
[95.80106354 152.49719238]
[102.68300629 169.57702637]
[91.02725983 182.69610596]
[88.80213928 197.53015137]
[86.57701874 212.36419678]
[84.35190582 227.19824219]
[82.12678528 242.03228760]
[79.90167236 256.86633301]
[77.78704834 271.71652222]
[83.61126709 286.42669678]
[74.24295807 298.00616455]
[83.58789825 307.70599365]
[85.61053467 320.82540894]
[79.79389191 332.54074097]
[68.46223450 338.67446899]
[66.23711395 353.50851440]
[64.01199341 368.34255981]
[69.61656189 383.13781738]
[60.07688522 394.57653809]
[65.68144989 409.37176514]
[56.14177322 420.81048584]
[65.26428986 433.43652344]
[62.79639053 448.44866943]
[50.70315170 457.06777954]
[48.47803497 471.90182495]
[46.36341095 486.75201416]
[44.35939789 501.61755371]
[42.35538483 516.48309326]
[40.35136795 531.34863281]
[53.78673553 538.36761475]
[64.00891113 549.56060791]
[69.78352356 563.57592773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 207]
[14 206]
[15 205]
[16 204]
[18 203]
[19 202]
[22 199]
[24 197]
[26 195]
[27 194]
[28 193]
[31 189]
[33 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[43 179]
[44 178]
[52 177]
[53 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 167]
[60 166]
[61 165]
[62 164]
[63 154]
[64 153]
[65 152]
[67 148]
[68 147]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 139]
[76 138]
[77 135]
[78 134]
[79 133]
[80 132]
[81 131]
[83 128]
[84 127]
[86 124]
[87 123]
[89 121]
[90 120]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
