%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[18.91633606 877.76098633]
[3.97472048 879.12176514]
[-11.01763630 879.69873047]
[-26.01964188 879.49023438]
[-40.99017715 878.49688721]
[-55.88820648 876.72143555]
[-70.67289734 874.16864014]
[-85.30372620 870.84564209]
[-99.74059296 866.76141357]
[-113.94391632 861.92730713]
[-127.87477875 856.35638428]
[-141.49499512 850.06408691]
[-154.76722717 843.06750488]
[-167.65509033 835.38598633]
[-180.12327576 827.04040527]
[-192.13760376 818.05377197]
[-203.66513062 808.45068359]
[-214.67428589 798.25744629]
[-225.13487244 787.50195312]
[-235.01821899 776.21380615]
[-244.29724121 764.42382812]
[-252.94651794 752.16436768]
[-260.94232178 739.46911621]
[-268.26275635 726.37274170]
[-274.88772583 712.91119385]
[-280.79910278 699.12133789]
[-285.98068237 685.04101562]
[-290.41824341 670.70886230]
[-294.09960938 656.16406250]
[-297.01473999 641.44653320]
[-299.15563965 626.59661865]
[-300.51638794 611.65496826]
[-301.09329224 596.66259766]
[-300.88476562 581.66064453]
[-299.89135742 566.69006348]
[-298.11584473 551.79205322]
[-295.56304932 537.00738525]
[-292.23999023 522.37652588]
[-288.15576172 507.93969727]
[-283.32153320 493.73638916]
[-277.75061035 479.80554199]
[-271.45825195 466.18536377]
[-264.46166992 452.91314697]
[-256.78005981 440.02529907]
[-248.43447876 427.55712891]
[-239.44781494 415.54284668]
[-229.84466553 404.01535034]
[-219.65138245 393.00622559]
[-208.89590454 382.54565430]
[-197.60769653 372.66235352]
[-185.81770325 363.38336182]
[-173.55822754 354.73413086]
[-160.86289978 346.73837280]
[-147.76651001 339.41796875]
[-134.30494690 332.79302979]
[-120.51509857 326.88168335]
[-106.43477631 321.70016479]
[-92.10257721 317.26266479]
[-77.55776978 313.58129883]
[-62.84023285 310.66622925]
[-47.99030304 308.52539062]
[-33.04867935 307.16467285]
[-18.05631638 306.58782959]
[-3.05431271 306.79638672]
[11.91621590 307.78982544]
[26.81423569 309.56539917]
[41.59891129 312.11822510]
[44.92117310 297.49078369]
[48.24343109 282.86331177]
[51.56568909 268.23587036]
[38.92031860 276.30398560]
[24.03150558 274.48098755]
[13.70621872 263.60034180]
[12.66504002 248.63652039]
[21.38398170 236.43078613]
[35.87686157 232.56343079]
[49.51772690 238.80255127]
[56.07036209 252.29756165]
[60.89635849 238.09510803]
[65.72235870 223.89265442]
[70.54835510 209.69020081]
[75.37435150 195.48774719]
[79.02243805 180.93812561]
[81.46817017 166.13885498]
[83.91389465 151.33958435]
[86.35961914 136.54031372]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[94.70220947 77.16624451]
[94.70220947 62.16624832]
[94.70220947 47.16624832]
[83.80766296 36.03312302]
[84.02133942 20.82098961]
[94.70220947 10.50330830]
[94.70220947 -4.49669170]
[94.70220947 -19.49669266]
[94.70220947 -34.49669266]
[94.70220947 -49.49669266]
[94.70220947 -64.49668884]
[81.36108398 -72.10654449]
[73.62611389 -85.37552643]
[73.57797241 -100.73434448]
[81.22960663 -114.05155182]
[94.52276611 -121.74488831]
[109.88166046 -121.74488831]
[123.17481995 -114.05155182]
[130.82644653 -100.73434448]
[130.77830505 -85.37552643]
[123.04334259 -72.10654449]
[109.70220947 -64.49668884]
[109.70220947 -49.49669266]
[109.70220947 -34.49669266]
[109.70220947 -19.49669266]
[109.70220947 -4.49669170]
[109.70220947 10.50330830]
[120.38308716 20.82098961]
[120.59676361 36.03312302]
[109.70220947 47.16624832]
[109.70220947 62.16624832]
[109.70220947 77.16624451]
[118.55156708 65.05472565]
[132.23083496 58.90024948]
[147.16429138 60.31158066]
[159.44836426 68.91979980]
[165.87203979 82.47474670]
[164.75616455 97.43318176]
[156.39242554 109.88500977]
[142.96710205 116.57535553]
[127.98953247 115.75537872]
[115.37481689 107.63941193]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[101.15888977 138.98603821]
[98.71316528 153.78530884]
[96.26744080 168.58457947]
[93.82170868 183.38385010]
[104.18629456 172.54063416]
[118.37306213 167.66871643]
[133.21266174 169.85650635]
[145.38987732 178.61523438]
[152.18429565 191.98818970]
[152.07801819 206.98780823]
[145.09480286 220.26315308]
[132.79470825 228.84846497]
[117.92560577 230.82575989]
[103.80928802 225.75332642]
[93.59938049 214.76432800]
[89.57680511 200.31373596]
[84.75080872 214.51618958]
[79.92481232 228.71865845]
[75.09881592 242.92111206]
[70.27281952 257.12356567]
[66.19315338 271.55810547]
[62.87089157 286.18557739]
[59.54863358 300.81304932]
[56.22637177 315.44049072]
[70.66326141 319.52459717]
[84.86661530 324.35867310]
[98.79751587 329.92947388]
[112.41776276 336.22174072]
[125.69003296 343.21820068]
[138.57795715 350.89968872]
[151.04618835 359.24514771]
[163.06056213 368.23171997]
[174.58815002 377.83474731]
[185.59736633 388.02792358]
[196.05801392 398.78332520]
[205.94143677 410.07144165]
[215.22053528 421.86135864]
[223.86987305 434.12072754]
[231.86575317 446.81597900]
[239.18626404 459.91232300]
[245.81132507 473.37380981]
[251.72277832 487.16360474]
[256.90444946 501.24389648]
[261.34207153 515.57604980]
[265.02355957 530.12084961]
[267.93878174 544.83831787]
[270.07974243 559.68823242]
[271.44058228 574.62988281]
[272.01757812 589.62219238]
[271.80914307 604.62420654]
[270.81585693 619.59472656]
[269.04040527 634.49279785]
[266.48770142 649.27746582]
[263.16473389 663.90832520]
[259.08056641 678.34521484]
[254.24645996 692.54852295]
[248.67562866 706.47943115]
[242.38333130 720.09967041]
[235.38682556 733.37188721]
[227.70530701 746.25982666]
[219.35980225 758.72802734]
[210.37319946 770.74237061]
[200.77012634 782.26989746]
[190.57691956 793.27911377]
[179.82148743 803.73974609]
[168.53334045 813.62310791]
[156.74339294 822.90216064]
[144.48399353 831.55145264]
[131.78871155 839.54730225]
[118.69235992 846.86779785]
[105.23082733 853.49279785]
[91.44102478 859.40423584]
[77.36073303 864.58581543]
[63.02855682 869.02343750]
[48.48377609 872.70489502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 159]
[68 158]
[69 157]
[70 156]
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 132]
[90 121]
[91 120]
[92 119]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
