%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACUAACAAUCGCCACACCAGCCCACACAAUAAUAAGACUUAAAACCCCCUCCAAUAUACCCAAAUUAUCAAAAAAAUUAAAUAAAUCCCCCUUACUACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[109.63190460 413.67288208]
[100.69962311 426.50830078]
[85.59320068 430.54934692]
[71.44542694 423.88793945]
[64.93644714 409.66937256]
[69.13960266 394.60726929]
[82.07028961 385.81344604]
[83.40852356 370.87326050]
[84.74675751 355.93307495]
[78.17578888 342.56625366]
[87.11342621 329.51141357]
[88.45166016 314.57122803]
[89.78989410 299.63104248]
[91.12812805 284.69085693]
[78.86637115 276.23419189]
[72.44113159 262.68530273]
[73.66845703 247.64004517]
[82.31855774 235.14714050]
[96.15066528 228.61872864]
[97.48889923 213.67854309]
[97.82387543 198.68229675]
[97.15409088 183.69725037]
[96.48429871 168.71221924]
[95.81451416 153.72717285]
[95.14472961 138.74214172]
[94.25191498 123.76873016]
[93.13626862 108.81027985]
[91.90929413 93.86054230]
[90.57106018 78.92035675]
[89.23282623 63.98017120]
[83.31928253 77.76531219]
[73.29904175 88.92751312]
[60.22956467 96.28881073]
[45.49009323 99.07234192]
[30.63612747 96.98435211]
[17.23523903 90.24520111]
[6.70165634 79.56607819]
[0.14701338 66.07398224]
[-1.73696291 51.19276428]
[1.24854815 36.49287415]
[8.78847790 23.52562904]
[20.08712006 13.65949154]
[33.95210266 7.93565845]
[48.92021942 6.95817947]
[63.41184998 10.83021069]
[75.89765930 19.14312744]
[85.05998993 31.01964760]
[89.93194580 45.20660019]
[92.37767792 30.40733147]
[94.82340240 15.60805988]
[97.26913452 0.80878925]
[99.71485901 -13.99048138]
[102.16058350 -28.78975296]
[104.60631561 -43.58902359]
[91.81333923 -35.75705338]
[77.19766235 -39.13079453]
[69.13182068 -51.77761841]
[72.23628235 -66.45284271]
[84.73267365 -74.74983978]
[99.46249390 -71.91571045]
[107.98763275 -59.57489777]
[111.74393463 -74.09696198]
[115.39202118 -88.64657593]
[118.93169403 -103.22295380]
[122.47136688 -117.79933167]
[126.01103973 -132.37570190]
[129.55072021 -146.95208740]
[119.76083374 -135.58729553]
[107.19705963 -127.39269257]
[92.85022736 -123.01451111]
[77.85179138 -122.79804230]
[63.38458252 -126.76036072]
[50.58955383 -134.58897400]
[40.47576904 -145.66648865]
[33.84084702 -159.11929321]
[31.20804024 -173.88642883]
[32.78498840 -188.80329895]
[38.44732285 -202.69351196]
[47.74849319 -214.46162415]
[59.95496368 -223.17953491]
[74.10408783 -228.15972900]
[89.08000183 -229.00944519]
[103.70163727 -225.66168213]
[116.81588745 -218.38043213]
[127.38849640 -207.73994446]
[134.58566284 -194.57936096]
[137.83979797 -179.93659973]
[136.89355469 -164.96302795]
[144.55413818 -177.85935974]
[152.21473694 -190.75569153]
[159.87533569 -203.65200806]
[167.53593445 -216.54833984]
[155.44238281 -225.44288635]
[144.27890015 -235.47998047]
[134.15299988 -246.56298828]
[125.16219330 -258.58514404]
[117.39306641 -271.43066406]
[110.92045593 -284.97586060]
[105.80668640 -299.09024048]
[102.10101318 -313.63790894]
[99.83912659 -328.47875977]
[99.04280853 -343.46984863]
[99.71971893 -358.46679688]
[101.86335754 -373.32519531]
[105.45305634 -387.90191650]
[110.45426178 -402.05657959]
[116.81880951 -415.65289307]
[124.48538971 -428.55987549]
[133.38017273 -440.65322876]
[143.41749573 -451.81652832]
[154.50070190 -461.94219971]
[166.52302551 -470.93276978]
[179.36871338 -478.70162964]
[192.91403198 -485.17398071]
[207.02851868 -490.28747559]
[221.57627869 -493.99285889]
[236.41716003 -496.25442505]
[251.40826416 -497.05044556]
[266.40521240 -496.37322998]
[281.26354980 -494.22930908]
[295.84017944 -490.63931274]
[309.99475098 -485.63781738]
[323.59094238 -479.27301025]
[336.49777222 -471.60617065]
[348.59097290 -462.71115112]
[359.75405884 -452.67361450]
[369.87951660 -441.59020996]
[378.86984253 -429.56768799]
[386.63845825 -416.72186279]
[393.11050415 -403.17639160]
[398.22372437 -389.06179810]
[401.92880249 -374.51397705]
[404.19009399 -359.67303467]
[404.98583984 -344.68194580]
[404.30831909 -329.68499756]
[402.16409302 -314.82672119]
[398.57379150 -300.25012207]
[393.57202148 -286.09564209]
[387.20693970 -272.49960327]
[379.53985596 -259.59292603]
[370.64456177 -247.49990845]
[360.60681152 -236.33703613]
[349.52319336 -226.21179199]
[337.50051880 -217.22171021]
[324.65451050 -209.45335388]
[311.10894775 -202.98155212]
[296.99423218 -197.86863708]
[282.44635010 -194.16383362]
[267.60537720 -191.90283203]
[252.61422729 -191.10740662]
[237.61732483 -191.78523254]
[222.75906372 -193.92974854]
[208.18255615 -197.52032471]
[194.02818298 -202.52238464]
[180.43226624 -208.88774109]
[172.77166748 -195.99140930]
[165.11106873 -183.09509277]
[157.45046997 -170.19876099]
[149.78987122 -157.30242920]
[144.12709045 -143.41241455]
[140.58741760 -128.83602905]
[137.04774475 -114.25965881]
[133.50807190 -99.68328094]
[129.96839905 -85.10690308]
[131.44470215 -77.86520386]
[126.26599121 -70.34066010]
[122.50969696 -55.81859970]
[119.40558624 -41.14329529]
[116.95985413 -26.34402466]
[114.51412964 -11.54475403]
[112.06840515 3.25451660]
[109.62267303 18.05378723]
[107.17694855 32.85305786]
[104.73121643 47.65232849]
[104.17301178 62.64193726]
[105.51124573 77.58212280]
[106.84947968 92.52230835]
[110.64808655 99.63167572]
[108.09471893 107.69462585]
[109.21037292 122.65308380]
[112.61105347 128.32290649]
[112.63437653 134.00590515]
[110.12976837 138.07235718]
[110.79955292 153.05738831]
[111.46933746 168.04243469]
[112.13912964 183.02746582]
[112.80891418 198.01251221]
[121.59104919 185.85215759]
[135.51417542 180.27124023]
[150.26405334 182.99906921]
[161.27027893 193.19038391]
[165.12245178 207.68730164]
[160.62693787 221.99780273]
[149.17671204 231.68760681]
[134.31976318 233.75424194]
[120.65966797 227.55731201]
[112.42908478 215.01678467]
[111.09085083 229.95697021]
[123.54253387 238.83969116]
[129.83470154 252.67102051]
[128.36865234 267.69488525]
[119.63778687 279.88619995]
[106.06831360 286.02908325]
[104.73007965 300.96926880]
[103.39184570 315.90945435]
[102.05361176 330.84963989]
[108.52886200 345.28506470]
[99.68694305 357.27130127]
[98.34870911 372.21148682]
[97.01047516 387.15167236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[11 206]
[12 205]
[13 204]
[14 203]
[19 198]
[20 197]
[21 187]
[22 186]
[23 185]
[24 184]
[25 183]
[26 180]
[27 179]
[28 177]
[29 176]
[30 175]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[61 167]
[62 166]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
