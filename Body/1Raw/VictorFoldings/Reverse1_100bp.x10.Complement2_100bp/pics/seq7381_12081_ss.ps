%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-4.20783949 458.83859253]
[1.85827625 472.59759521]
[5.51168823 487.18392944]
[6.64728117 502.17785645]
[5.23238087 517.14801025]
[1.30769777 531.66369629]
[-5.01384783 545.30725098]
[-13.55037212 557.68609619]
[-24.05626297 568.44409180]
[-36.22924423 577.27166748]
[-49.71907425 583.91491699]
[-64.13762665 588.18261719]
[-79.07004547 589.95202637]
[-94.08670044 589.17224121]
[-108.75553131 585.86566162]
[-122.65448761 580.12744141]
[-135.38366699 572.12268066]
[-146.57681274 562.08172607]
[-155.91189575 550.29339600]
[-163.12033081 537.09692383]
[-167.99468994 522.87200928]
[-170.39476013 508.02792358]
[-170.25146484 492.99169922]
[-167.56892395 478.19601440]
[-162.42433167 464.06658936]
[-154.96571350 451.00988770]
[-145.40765381 439.40164185]
[-134.02516174 429.57583618]
[-121.14572906 421.81512451]
[-107.13993835 416.34286499]
[-92.41075897 413.31643677]
[-77.38196564 412.82299805]
[-62.48598099 414.87667847]
[-48.15138626 419.41842651]
[-41.27197266 406.08898926]
[-34.39255905 392.75955200]
[-27.51314735 379.43011475]
[-20.63373566 366.10070801]
[-20.35946655 358.71511841]
[-13.55138111 352.62515259]
[-6.47427607 339.39962769]
[0.60282928 326.17410278]
[7.67993450 312.94857788]
[14.75704002 299.72305298]
[21.13564491 286.14685059]
[18.77567863 271.44039917]
[31.15026283 261.58236694]
[36.81304932 247.69235229]
[42.47583389 233.80232239]
[48.13862228 219.91229248]
[40.27931976 210.65991211]
[37.08071136 198.87425232]
[39.20903778 186.77584839]
[46.32083511 176.67131042]
[57.11666107 170.51350403]
[69.57817841 169.52432251]
[75.65200806 155.80905151]
[81.72584534 142.09378052]
[87.79967499 128.37850952]
[91.44776917 113.82889557]
[84.39334106 104.56194305]
[85.34600830 92.95446014]
[93.81699371 84.96173096]
[95.15522766 70.02154541]
[96.49346161 55.08136368]
[97.27478027 40.10172653]
[97.49810791 25.10338783]
[97.72143555 10.10505104]
[97.94476318 -4.89328671]
[98.05643463 -19.89287186]
[90.31912994 -33.69304276]
[98.05643463 -46.42031479]
[98.05643463 -61.42031479]
[98.05643463 -76.42031860]
[97.83310699 -91.41865540]
[97.38649750 -106.41200256]
[96.93989563 -121.40534973]
[96.49328613 -136.39869690]
[94.71082306 -151.29241943]
[91.60671234 -165.96772766]
[88.50260162 -180.64302063]
[85.39849091 -195.31832886]
[82.29438019 -209.99363708]
[79.19026947 -224.66893005]
[64.13392639 -224.67834473]
[49.40863419 -227.81832886]
[35.65812683 -233.95162964]
[23.48351860 -242.81010437]
[13.41702843 -254.00650024]
[5.89871979 -267.05139160]
[1.25726235 -281.37445068]
[-0.30444029 -296.34960938]
[1.28188312 -311.32214355]
[5.94688511 -325.63757324]
[13.48663235 -338.67007446]
[23.57151985 -349.84991455]
[35.76067734 -358.68835449]
[49.52124786 -364.79901123]
[64.25167847 -367.91479492]
[79.30802155 -367.89944458]
[94.03208160 -364.75366211]
[107.78016663 -358.61495972]
[119.95129395 -349.75170898]
[130.01338196 -338.55136108]
[137.52655029 -325.50350952]
[142.16238403 -311.17861938]
[143.71818542 -296.20285034]
[142.12597656 -281.23092651]
[137.45533752 -266.91735840]
[129.91046143 -253.88781738]
[119.82118225 -242.71194458]
[107.62854767 -233.87829590]
[93.86557007 -227.77304077]
[96.96968079 -213.09773254]
[100.07379150 -198.42243958]
[103.17790222 -183.74713135]
[106.28201294 -169.07183838]
[109.38612366 -154.39653015]
[114.73047638 -168.41215515]
[125.56704712 -178.78369141]
[139.80346680 -183.50854492]
[154.69091797 -181.67442322]
[167.35484314 -173.63546753]
[175.35006714 -160.94387817]
[177.13281250 -146.05018616]
[172.35885620 -131.83015442]
[161.94999695 -121.02942657]
[147.91601562 -115.73346710]
[132.96664429 -116.96484375]
[119.98837280 -124.48578644]
[111.48664093 -136.84530640]
[111.93324280 -121.85195923]
[112.37985229 -106.85861206]
[112.82645416 -91.86525726]
[115.62657166 -87.99636078]
[116.02599335 -82.32736206]
[113.05643463 -76.42031860]
[113.05643463 -61.42031479]
[113.05643463 -46.42031479]
[120.79373169 -33.69304276]
[113.05643463 -19.89287186]
[116.19993591 -13.20405960]
[112.94309998 -4.66995907]
[112.71977234 10.32837868]
[112.49644470 25.32671547]
[112.27311707 40.32505417]
[124.69045258 31.91018867]
[139.05622864 36.22580719]
[144.78053284 50.09059906]
[137.64361572 63.28394699]
[122.90655518 66.08021545]
[111.43364716 56.41959763]
[110.09541321 71.35977936]
[108.75717926 86.29996490]
[116.20524597 101.33001709]
[106.40621948 114.94454193]
[114.06900787 102.04952240]
[124.66180420 91.42913055]
[137.53683472 83.73280334]
[151.90681458 79.43118286]
[166.89299011 78.78731537]
[181.57894897 81.84056091]
[195.06666565 88.40422821]
[206.53134155 98.07693481]
[215.27189636 110.26720428]
[220.75386047 124.22958374]
[222.64201355 139.11027527]
[220.82087708 153.99931335]
[215.40184021 167.98622131]
[206.71624756 180.21571350]
[195.29524231 189.93994141]
[181.83721924 196.56427002]
[167.16514587 199.68360901]
[152.17622375 199.10722351]
[137.78703308 194.87034607]
[124.87747192 187.23205566]
[114.23696899 176.65946960]
[106.51619720 163.79907227]
[102.18728638 149.43730164]
[101.51494598 134.45234680]
[95.44110870 148.16761780]
[89.36727905 161.88288879]
[83.29344177 175.59814453]
[92.85404968 191.00439453]
[91.26665497 208.90858459]
[79.35488892 222.15852356]
[62.02864838 225.57508850]
[56.36586380 239.46511841]
[50.70307541 253.35513306]
[45.04029083 267.24517822]
[46.99521255 282.94512939]
[35.02567291 291.80963135]
[48.81732178 285.91128540]
[63.20965576 290.13748169]
[71.62269592 302.55603027]
[70.21011353 317.48937988]
[59.61772156 328.11016846]
[44.68822098 329.56274414]
[32.24717331 321.18298340]
[27.98256683 306.80014038]
[20.90546227 320.02566528]
[13.82835674 333.25122070]
[6.75125122 346.47674561]
[-0.32585403 359.70227051]
[-7.30430651 372.98010254]
[-14.18371868 386.30953979]
[-21.06313133 399.63897705]
[-27.94254494 412.96838379]
[-34.82195663 426.29782104]
[-22.81564713 435.35079956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[40 204]
[41 203]
[42 202]
[43 201]
[44 200]
[45 192]
[47 190]
[48 189]
[49 188]
[50 187]
[56 183]
[57 182]
[58 181]
[59 180]
[60 156]
[63 154]
[64 153]
[65 152]
[66 146]
[67 145]
[68 144]
[69 143]
[70 141]
[72 139]
[73 138]
[74 137]
[75 134]
[76 133]
[77 132]
[78 131]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
