%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[67.79772949 739.23321533]
[52.78244400 739.16656494]
[37.86562729 737.44848633]
[23.22836113 734.09979248]
[9.04832077 729.16119385]
[-4.50235701 722.69262695]
[-17.25918007 714.77264404]
[-29.06729317 705.49731445]
[-39.78335571 694.97924805]
[-49.27728653 683.34619141]
[-57.43383408 670.73925781]
[-64.15399170 657.31158447]
[-69.35617065 643.22613525]
[-72.97723389 628.65386963]
[-74.97322845 613.77166748]
[-75.31990814 598.76025391]
[-74.01306915 583.80181885]
[-71.06858826 569.07788086]
[-66.52219391 554.76727295]
[-60.42908859 541.04370117]
[-52.86322403 528.07366943]
[-43.91645050 516.01470947]
[-33.69736862 505.01321411]
[-22.33003426 495.20263672]
[-9.95243359 486.70217896]
[3.28518033 479.61492920]
[17.22211456 474.02700806]
[31.68918991 470.00619507]
[46.51078415 467.60131836]
[61.50698471 466.84155273]
[62.39979935 451.86813354]
[63.29261398 436.89474487]
[64.18543243 421.92132568]
[65.07824707 406.94790649]
[62.63446426 402.84463501]
[62.74239349 397.16259766]
[66.22711945 391.54403687]
[67.56535339 376.60385132]
[68.90358734 361.66366577]
[59.18580246 350.43423462]
[60.33013535 335.26370239]
[72.17449188 325.14694214]
[73.40146637 310.19720459]
[74.51711273 295.23873901]
[75.63276672 280.28030396]
[68.86350250 267.01281738]
[77.60578156 253.82632446]
[78.72143555 238.86787415]
[79.83708191 223.90942383]
[80.95272827 208.95097351]
[74.18347168 195.68347168]
[82.92575073 182.49699402]
[80.91429901 179.60107422]
[80.20558929 175.58699036]
[81.30986786 171.07768250]
[84.43990326 166.90037537]
[86.22237396 152.00665283]
[88.00483704 137.11294556]
[89.78730774 122.21922302]
[91.56977081 107.32550812]
[93.24131012 92.41893005]
[94.80183411 77.50032806]
[96.36235809 62.58172226]
[97.81177521 47.65191269]
[99.15000916 32.71172714]
[99.93133545 17.73209000]
[100.15466309 2.73375297]
[91.74754333 -7.04802322]
[92.24232483 -19.53557587]
[100.82877350 -28.05610466]
[101.27537537 -43.04945374]
[93.95239258 -57.07387543]
[102.06520081 -69.56513977]
[102.51180267 -84.55848694]
[102.95841217 -99.55183411]
[103.29338837 -114.54809570]
[103.51671600 -129.54643250]
[103.74004364 -144.54476929]
[103.62837219 -159.54435730]
[103.18177032 -174.53770447]
[102.73516083 -189.53105164]
[101.95384216 -204.51069641]
[100.83819580 -219.46914673]
[99.72254181 -234.42759705]
[98.60689545 -249.38604736]
[97.49124908 -264.34451294]
[82.53256989 -265.91857910]
[68.09539795 -270.13851929]
[54.64383698 -276.86868286]
[42.61029053 -285.89273071]
[32.38159180 -296.92059326]
[24.28655434 -309.59774780]
[18.58539391 -323.51666260]
[15.46138096 -338.22994995]
[15.01494026 -353.26458740]
[17.26042366 -368.13729858]
[22.12564659 -382.36999512]
[29.45421410 -395.50512695]
[39.01054382 -407.12048340]
[50.48743439 -416.84265137]
[63.51595688 -424.35913086]
[77.67729187 -429.42828369]
[92.51622009 -431.88714600]
[107.55572510 -431.65670776]
[122.31234741 -428.74435425]
[136.31172180 -423.24368286]
[149.10383606 -415.33157349]
[160.27746582 -405.26232910]
[169.47343445 -393.35964966]
[176.39613342 -380.00613403]
[180.82299805 -365.63107300]
[182.61175537 -350.69653320]
[181.70489502 -335.68264771]
[178.13156128 -321.07199097]
[172.00662231 -307.33425903]
[163.52697754 -294.91110229]
[152.96520996 -284.20181274]
[140.66082764 -275.55065918]
[127.00938416 -269.23577881]
[112.44969940 -265.46014404]
[113.56534576 -250.50170898]
[114.68099976 -235.54324341]
[115.79664612 -220.58479309]
[116.91229248 -205.62634277]
[119.33107758 -203.06083679]
[120.62739563 -199.19630432]
[120.20425415 -194.57307434]
[117.72851562 -189.97766113]
[118.17511749 -174.98431396]
[118.62172699 -159.99096680]
[120.92353821 -157.32000732]
[122.04600525 -153.40144348]
[121.41684723 -148.80172729]
[118.73838043 -144.32144165]
[118.51505280 -129.32310486]
[118.29172516 -114.32476807]
[121.33528900 -107.58989716]
[117.95175934 -99.10523224]
[117.50515747 -84.11188507]
[117.05854797 -69.11853027]
[124.41348267 -56.16653442]
[116.26873016 -42.60284805]
[115.82212067 -27.60949898]
[124.96080780 -12.62779617]
[115.15299988 2.95708060]
[114.92967224 17.95541763]
[127.34700012 9.54055500]
[141.71276855 13.85617352]
[147.43707275 27.72096252]
[140.30017090 40.91431427]
[125.56310272 43.71057892]
[114.09019470 34.04996109]
[112.75196075 48.99014664]
[115.28617859 55.93273544]
[111.28096008 64.14224243]
[109.72043610 79.06085205]
[108.15991211 93.97945404]
[110.52009583 101.68672943]
[106.46348572 109.10797119]
[104.68102264 124.00168610]
[102.89855194 138.89540100]
[101.11608887 153.78912354]
[99.33362579 168.68284607]
[97.88420868 183.61265564]
[104.57366180 197.95007324]
[95.91118622 210.06661987]
[94.79553223 225.02507019]
[93.67988586 239.98352051]
[92.56423950 254.94197083]
[99.25370026 269.27938843]
[90.59121704 281.39593506]
[89.47557068 296.35440063]
[88.35991669 311.31286621]
[90.84239197 320.10348511]
[87.11467743 326.48516846]
[96.97253418 338.54586792]
[95.40254974 353.67828369]
[83.84377289 363.00192261]
[82.50553894 377.94210815]
[81.16730499 392.88229370]
[80.05165100 407.84072876]
[79.15883636 422.81414795]
[78.26602173 437.78753662]
[77.37320709 452.76095581]
[76.48039246 467.73437500]
[91.28005219 470.27075195]
[105.71085358 474.41986084]
[119.59761810 480.13131714]
[132.77178955 487.33581543]
[145.07342529 495.94586182]
[156.35319519 505.85696411]
[166.47419739 516.94879150]
[175.31353760 529.08673096]
[182.76394653 542.12335205]
[188.73495483 555.90051270]
[193.15411377 570.25091553]
[195.96774292 585.00042725]
[197.14170837 599.96984863]
[196.66175842 614.97766113]
[194.53370667 629.84149170]
[190.78338623 644.38104248]
[185.45634460 658.41979980]
[178.61723328 671.78723145]
[170.34907532 684.32122803]
[160.75222778 695.86956787]
[149.94319153 706.29205322]
[138.05319214 715.46215820]
[125.22653961 723.26861572]
[111.61896515 729.61657715]
[97.39562988 734.42907715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[37 180]
[38 179]
[39 178]
[42 175]
[43 173]
[44 172]
[45 171]
[47 169]
[48 168]
[49 167]
[50 166]
[52 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 157]
[62 156]
[63 155]
[64 153]
[65 152]
[66 146]
[67 145]
[70 143]
[71 142]
[73 140]
[74 139]
[75 138]
[76 136]
[77 135]
[78 134]
[79 130]
[80 129]
[81 128]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
