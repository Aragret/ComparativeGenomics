%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[167.96461487 566.22778320]
[176.39152527 553.72772217]
[187.56547546 543.60815430]
[200.83683777 536.45733643]
[197.08055115 521.93524170]
[193.32424927 507.41320801]
[189.56794739 492.89114380]
[185.81164551 478.36907959]
[182.05534363 463.84704590]
[171.79498291 457.43988037]
[168.54669189 445.37207031]
[174.57850647 433.97119141]
[171.03883362 419.39480591]
[157.10028076 417.76510620]
[144.52845764 411.46209717]
[134.84266663 401.22467041]
[129.22116089 388.26855469]
[128.35791016 374.14193726]
[132.37696838 360.54043579]
[140.81512451 349.10369873]
[152.67515564 341.21762085]
[149.35290527 326.59014893]
[146.03063965 311.96267700]
[135.66661072 301.26519775]
[140.15522766 286.09408569]
[136.83297729 271.46661377]
[133.51071167 256.83917236]
[116.12847137 253.52653503]
[101.90496826 242.91116333]
[93.73503113 227.09565735]
[93.30671692 209.24671936]
[100.75270844 192.96113586]
[114.61426544 181.54092407]
[110.64217377 167.07640076]
[106.67007446 152.61187744]
[102.69797516 138.14735413]
[98.72588348 123.68283081]
[94.75378418 109.21830750]
[90.24615479 94.91162109]
[85.20924377 80.78259277]
[80.17232513 66.65356445]
[74.50953674 52.76353836]
[61.70711517 43.46791840]
[63.40805054 28.67075348]
[57.13068771 15.04743767]
[50.85332870 1.42412150]
[44.37383270 -12.10422421]
[37.69363785 -25.53459930]
[30.51827240 -38.70707703]
[22.85767365 -51.60340118]
[15.19707680 -64.49973297]
[7.53647900 -77.39605713]
[-0.12411821 -90.29238129]
[-7.78471565 -103.18871307]
[-24.04959297 -111.82209015]
[-23.58257675 -129.36486816]
[-31.43433189 -142.14570618]
[-39.28608704 -154.92654419]
[-47.13784409 -167.70739746]
[-60.71847916 -161.30197144]
[-74.92134857 -156.42942810]
[-89.57404327 -153.14891052]
[-104.49869537 -151.50025940]
[-119.51412201 -151.50347900]
[-134.43806458 -153.15853882]
[-149.08935547 -156.44532776]
[-163.29013062 -161.32395935]
[-176.86801147 -167.73521423]
[-189.65818787 -175.60125732]
[-201.50538635 -184.82661438]
[-212.26579285 -195.29928589]
[-221.80879211 -206.89213562]
[-230.01853943 -219.46446228]
[-236.79536438 -232.86363220]
[-242.05700684 -246.92700195]
[-245.73960876 -261.48385620]
[-247.79846191 -276.35745239]
[-248.20857239 -291.36727905]
[-246.96495056 -306.33111572]
[-244.08270264 -321.06732178]
[-239.59681702 -335.39703369]
[-233.56173706 -349.14624023]
[-226.05075073 -362.14810181]
[-217.15499878 -374.24475098]
[-206.98249817 -385.28936768]
[-195.65670776 -395.14785767]
[-183.31513977 -403.70056152]
[-170.10758972 -410.84362793]
[-156.19438171 -416.49041748]
[-141.74443054 -420.57232666]
[-126.93312836 -423.03979492]
[-111.94026947 -423.86291504]
[-96.94786835 -423.03167725]
[-82.13790131 -420.55615234]
[-67.69016266 -416.46640015]
[-53.78002548 -410.81210327]
[-40.57635117 -403.66183472]
[-28.23941612 -395.10244751]
[-16.91898155 -385.23782349]
[-6.75246811 -374.18768311]
[2.13671446 -362.08621216]
[9.64065838 -349.08029175]
[15.66827202 -335.32781982]
[20.14638710 -320.99569702]
[23.02064133 -306.25790405]
[24.25614738 -291.29339600]
[23.83790398 -276.28378296]
[21.77098846 -261.41131592]
[18.08049393 -246.85646057]
[12.81121731 -232.79595947]
[6.02712297 -219.40046692]
[-2.18943548 -206.83259583]
[-11.73871708 -195.24490356]
[-22.50480270 -184.77807617]
[-34.35700226 -175.55914307]
[-26.50524521 -162.77830505]
[-18.65349007 -149.99746704]
[-10.80173492 -137.21661377]
[0.88692141 -134.10183716]
[7.53294802 -123.51816559]
[5.11161137 -110.84930420]
[12.77220821 -97.95298004]
[20.43280602 -85.05665588]
[28.09340286 -72.16032410]
[35.75400162 -59.26399994]
[43.41459656 -46.36767197]
[49.59009552 -60.03746414]
[64.08955383 -63.88008499]
[76.22451019 -55.06289291]
[77.04953003 -40.08559799]
[65.95643616 -29.98890495]
[51.12401199 -32.21479416]
[57.80420685 -18.78441811]
[61.96643066 -16.44242477]
[64.70162201 -11.46088028]
[64.47664642 -4.85323906]
[70.75400543 8.77007675]
[77.03136444 22.39339256]
[89.38478851 30.71458054]
[88.13285828 46.48617554]
[94.32976532 32.82608032]
[108.32168579 27.41995430]
[122.09340668 33.36467743]
[127.75585938 47.25484085]
[122.06533813 61.13352585]
[108.28162384 67.05039215]
[94.30135345 61.61664963]
[99.33827209 75.74568176]
[104.37519073 89.87471008]
[113.06477356 77.64804840]
[128.03259277 76.66618347]
[138.24494934 87.65289307]
[136.17366028 102.50920105]
[123.34559631 110.28357697]
[109.21830750 105.24621582]
[113.19040680 119.71073914]
[117.16250610 134.17526245]
[121.13459778 148.63978577]
[125.10669708 163.10430908]
[129.07879639 177.56883240]
[141.46554565 178.59268188]
[152.91835022 183.35781860]
[162.33842468 191.39085388]
[168.82702637 201.90567017]
[171.77113342 213.88029480]
[170.90138245 226.15634155]
[166.31660461 237.55091858]
[158.47286987 246.97071838]
[148.13816833 253.51690674]
[151.46043396 268.14434814]
[154.78269958 282.77182007]
[165.38435364 294.51556396]
[160.65809631 308.64044189]
[163.98036194 323.26788330]
[167.30261230 337.89535522]
[183.16787720 340.50338745]
[196.78491211 348.97964478]
[206.08422852 362.00109863]
[209.66596985 377.55664062]
[207.01048279 393.25769043]
[198.55357361 406.70498657]
[185.61521912 415.85513306]
[189.15489197 430.43151855]
[202.17091370 443.45703125]
[196.57740784 460.09072876]
[200.33369446 474.61279297]
[204.08999634 489.13485718]
[207.84629822 503.65692139]
[211.60260010 518.17895508]
[215.35890198 532.70104980]
[230.43307495 532.51995850]
[245.11239624 535.95227051]
[258.54342651 542.79852295]
[269.94531250 552.66058350]
[278.65515137 564.96514893]
[284.16659546 578.99676514]
[286.15917969 593.93975830]
[284.51705933 608.92535400]
[279.33572388 623.08221436]
[270.91641235 635.58734131]
[259.74859619 645.71374512]
[246.48155212 652.87255859]
[231.88662720 656.64770508]
[216.81234741 656.81970215]
[202.13511658 653.37841797]
[188.70823669 646.52410889]
[177.31233215 636.65509033]
[168.60993958 624.34527588]
[163.10702515 610.31024170]
[161.12350464 595.36608887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[12 183]
[13 182]
[21 175]
[22 174]
[23 173]
[25 171]
[26 170]
[27 169]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 149]
[40 148]
[41 147]
[42 140]
[44 138]
[45 137]
[46 136]
[47 133]
[48 132]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[54 121]
[56 118]
[57 117]
[58 116]
[59 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
