%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[143.91979980 617.86059570]
[145.43304443 602.90197754]
[149.38789368 588.39648438]
[155.67648315 574.73986816]
[164.12721252 562.30462646]
[174.50958252 551.43005371]
[186.54034424 542.41284180]
[199.89126587 535.49890137]
[195.27725220 521.22613525]
[190.66325378 506.95343018]
[181.61347961 518.91595459]
[166.62306213 519.45172119]
[156.74235535 508.16580200]
[159.25505066 493.37777710]
[172.30889893 485.98876953]
[186.27993774 491.44451904]
[182.74026489 476.86816406]
[179.20059204 462.29177856]
[175.66091919 447.71539307]
[162.84695435 440.20956421]
[159.04957581 425.47747803]
[167.00927734 412.08789062]
[163.46960449 397.51150513]
[159.92993164 382.93511963]
[156.39025879 368.35876465]
[146.22642517 361.79956055]
[143.15817261 349.68469238]
[149.35905457 338.37490845]
[146.03680420 323.74743652]
[131.76828003 319.47250366]
[121.48691559 308.55694580]
[118.02680206 293.86361694]
[122.41468048 279.31564331]
[133.56800842 268.84899902]
[130.24574280 254.22154236]
[126.92348480 239.59408569]
[123.60122681 224.96662903]
[106.98012543 220.47470093]
[94.86118317 208.11975098]
[90.64744568 191.24230957]
[95.58727264 174.47004700]
[108.40633392 162.44902039]
[104.65003967 147.92697144]
[100.89373779 133.40490723]
[97.13743591 118.88285065]
[84.70613098 111.43913269]
[81.07765961 97.41128540]
[88.34050751 84.87345123]
[84.58420563 70.35139465]
[80.82790375 55.82933426]
[67.61939240 42.99902725]
[72.96463013 26.28390312]
[68.99253845 11.81937981]
[65.02043915 -2.64514399]
[61.04834366 -17.10966873]
[49.93287659 -28.36830902]
[54.02370453 -42.69012451]
[38.66410446 -51.06281662]
[34.20000076 -67.62743378]
[42.92221832 -82.00664520]
[38.73520660 -96.41043091]
[34.54819870 -110.81420898]
[30.36118507 -125.21799469]
[25.85355759 -139.52467346]
[21.02755928 -153.72714233]
[6.35378408 -158.41610718]
[-2.64019561 -170.70275879]
[-2.67436218 -185.75143433]
[6.05480909 -197.79052734]
[1.22881162 -211.99298096]
[-9.97481728 -218.38371277]
[-13.70201492 -230.31233215]
[-8.47527981 -241.22140503]
[-13.08928871 -255.49412537]
[-17.70329857 -269.76687622]
[-22.31730652 -284.03961182]
[-26.93131638 -298.31234741]
[-31.54532623 -312.58505249]
[-36.15933609 -326.85778809]
[-51.09297180 -325.01849365]
[-66.10480499 -326.03890991]
[-80.65217590 -329.88214111]
[-94.20920563 -336.40930176]
[-106.28580475 -345.38436890]
[-116.44542694 -356.48297119]
[-124.32079315 -369.30386353]
[-129.62722778 -383.38357544]
[-132.17289734 -398.21313477]
[-131.86578369 -413.25646973]
[-128.71697998 -427.96978760]
[-122.84031677 -441.82119751]
[-114.44823456 -454.30996704]
[-103.84410858 -464.98464966]
[-91.41126251 -473.45935059]
[-77.59912872 -479.42773438]
[-62.90702438 -482.67404175]
[-47.86604691 -483.08093262]
[-33.01992416 -480.63366699]
[-18.90533447 -475.42071533]
[-6.03250647 -467.63052368]
[5.13321114 -457.54473877]
[14.18818569 -445.52792358]
[20.80508614 -432.01446533]
[24.74471474 -417.49291992]
[25.86465645 -402.48815918]
[24.12442780 -387.54266357]
[19.58693314 -373.19665527]
[12.41620445 -359.96878052]
[2.87145686 -348.33715820]
[-8.70227337 -338.72232056]
[-21.88660240 -331.47180176]
[-17.27259254 -317.19906616]
[-12.65858364 -302.92633057]
[-8.04457378 -288.65359497]
[-3.43056464 -274.38088989]
[1.18344450 -260.10815430]
[5.79745388 -245.83540344]
[19.43627357 -234.79232788]
[15.43126678 -216.81898499]
[20.25726509 -202.61653137]
[34.51413727 -198.38810730]
[43.65550613 -186.43405151]
[44.00918579 -171.21142578]
[35.23001480 -158.55313110]
[40.05601120 -144.35067749]
[43.04018021 -142.47262573]
[45.26295471 -139.05584717]
[46.01103973 -134.47396851]
[44.76496887 -129.40499878]
[48.95198059 -115.00122070]
[53.13898849 -100.59744263]
[57.32600021 -86.19365692]
[69.37555695 -81.62881470]
[76.70523071 -70.79562378]
[76.45349121 -57.52358246]
[68.48822784 -46.66222000]
[79.31958008 -36.43817902]
[75.51286316 -21.08176422]
[79.48496246 -6.61724043]
[83.45706177 7.84728384]
[87.42915344 22.31180763]
[97.78376770 28.56548691]
[101.21136475 40.58361435]
[95.34996033 52.07303238]
[99.10626221 66.59509277]
[102.86256409 81.11714935]
[115.29386902 88.56086731]
[118.92234039 102.58871460]
[111.65949249 115.12654877]
[115.41579437 129.64860535]
[119.17209625 144.17066956]
[122.92839813 158.69271851]
[135.64471436 160.94549561]
[146.52496338 167.81536865]
[153.97167969 178.25189209]
[156.90737915 190.68415833]
[154.93031311 203.25711060]
[148.36909485 214.10842896]
[138.22868347 221.64436340]
[141.55094910 236.27183533]
[144.87319946 250.89929199]
[148.19546509 265.52676392]
[162.77577209 270.14865112]
[173.01737976 281.37390137]
[176.24377441 296.12030029]
[171.68626404 310.40615845]
[160.66426086 320.42517090]
[163.98652649 335.05264282]
[176.80717468 348.27050781]
[170.96662903 364.81909180]
[174.50630188 379.39544678]
[178.04597473 393.97183228]
[181.58564758 408.54821777]
[194.79969788 416.79605103]
[198.18177795 431.62899780]
[190.23730469 444.17572021]
[193.77697754 458.75210571]
[197.31665039 473.32849121]
[200.85632324 487.90484619]
[204.93598938 502.33941650]
[209.54998779 516.61212158]
[214.16400146 530.88488770]
[229.03569031 528.67517090]
[244.06825256 528.94354248]
[258.85159302 531.68267822]
[272.98239136 536.81787109]
[286.07516479 544.20898438]
[297.77273560 553.65447998]
[307.75601196 564.89654541]
[315.75256348 577.62860107]
[321.54434204 591.50323486]
[324.97326660 606.14196777]
[325.94580078 621.14538574]
[324.43545532 636.10430908]
[320.48339844 650.61053467]
[314.19744873 664.26837158]
[305.74908447 676.70526123]
[295.36880493 687.58184814]
[283.33981323 696.60137939]
[269.99020386 703.51788330]
[255.68421936 708.14263916]
[240.81210327 710.34948730]
[225.77960205 710.07824707]
[210.99679565 707.33624268]
[196.86697388 702.19830322]
[183.77561951 694.80468750]
[172.07986450 685.35699463]
[162.09877014 674.11297607]
[154.10464478 661.37939453]
[148.31556702 647.50366211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 182]
[9 181]
[10 180]
[16 179]
[17 178]
[18 177]
[19 176]
[22 173]
[23 172]
[24 171]
[25 170]
[28 168]
[29 167]
[34 162]
[35 161]
[36 160]
[37 159]
[42 152]
[43 151]
[44 150]
[45 149]
[48 146]
[49 145]
[50 144]
[52 141]
[53 140]
[54 139]
[55 138]
[57 136]
[60 132]
[61 131]
[62 130]
[63 129]
[64 125]
[65 124]
[69 120]
[70 119]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
