%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[94.18934631 705.44165039]
[79.67845154 701.59136963]
[65.63153839 696.29272461]
[52.19275665 689.60021973]
[39.50001144 681.58239746]
[27.68354797 672.32159424]
[16.86462593 661.91284180]
[7.15426445 650.46295166]
[-1.34789336 638.08941650]
[-8.55460167 624.91925049]
[-14.39190674 611.08752441]
[-18.79990959 596.73614502]
[-21.73337364 582.01251221]
[-23.16220093 567.06762695]
[-23.07172775 552.05487061]
[-21.46288300 537.12829590]
[-18.35217285 522.44110107]
[-13.77152348 508.14392090]
[-7.76793575 494.38354492]
[-0.40301785 481.30117798]
[8.24765396 469.03100586]
[18.09531021 457.69897461]
[29.03889656 447.42138672]
[40.96611404 438.30368042]
[53.75457382 430.43945312]
[67.27304077 423.90936279]
[81.38278961 418.78042603]
[95.93904114 415.10528564]
[110.79241943 412.92166138]
[110.12263489 397.93664551]
[109.45285034 382.95159912]
[108.78306580 367.96655273]
[108.11328125 352.98150635]
[107.44349670 337.99649048]
[106.77370453 323.01144409]
[98.06134796 314.61968994]
[97.38069916 302.14089966]
[105.64125061 292.23501587]
[97.52844238 279.74377441]
[104.85143280 265.71936035]
[104.40483093 250.72599792]
[103.95822144 235.73265076]
[86.16870117 227.51667786]
[74.97540283 211.33705139]
[73.54878998 191.63555908]
[82.36457825 173.87065125]
[99.04956818 163.00511169]
[97.48905182 148.08650208]
[95.92852783 133.16790771]
[94.36800385 118.24929810]
[83.17844391 109.04386139]
[81.67102814 94.63296509]
[90.71339417 83.31122589]
[89.15287018 68.39262390]
[87.59234619 53.47401428]
[86.03182220 38.55541229]
[72.55681610 34.29267883]
[61.75699997 25.24347305]
[55.24170685 12.79933929]
[53.96536255 -1.14560664]
[58.08778763 -14.48295879]
[66.95503998 -25.20880508]
[79.20289612 -31.72480011]
[77.86466217 -46.66498566]
[76.52642822 -61.60517120]
[75.18819427 -76.54535675]
[73.84996033 -91.48554230]
[62.58875275 -98.87471008]
[57.71060944 -111.22032166]
[60.78803253 -123.93297577]
[70.47973633 -132.42416382]
[69.36408234 -147.38262939]
[54.50972366 -149.91906738]
[40.70248413 -155.93342590]
[28.74322319 -165.07208252]
[19.32448196 -176.80041504]
[12.99037361 -190.43391418]
[10.10515022 -205.17828369]
[10.83226490 -220.17559814]
[15.12511635 -234.55430603]
[22.73000526 -247.47984314]
[33.20112991 -258.20306396]
[45.92670822 -266.10366821]
[60.16473770 -270.72610474]
[59.04908752 -285.68457031]
[57.93344116 -300.64303589]
[56.81779099 -315.60147095]
[55.70214462 -330.55993652]
[42.23986435 -341.73071289]
[41.04535294 -358.84469604]
[52.37055588 -371.27764893]
[51.03232193 -386.21783447]
[36.21411896 -389.14999390]
[22.82287979 -396.13937378]
[11.94417191 -406.61935425]
[4.45988178 -419.74041748]
[0.97672915 -434.43887329]
[1.77707720 -449.52316284]
[6.79604530 -463.77050781]
[15.62676811 -476.02590942]
[27.55337906 -485.29589844]
[41.60903931 -490.82897949]
[56.65432358 -492.17663574]
[71.46957397 -489.22958374]
[84.85378265 -482.22677612]
[95.72196198 -471.73583984]
[103.19306183 -458.60726929]
[106.66144562 -443.90533447]
[105.84594727 -428.82183838]
[100.81266785 -414.57955933]
[91.96963501 -402.33303833]
[80.03372192 -393.07504272]
[65.97251129 -387.55606079]
[67.31074524 -372.61587524]
[78.25722504 -365.81854248]
[83.36624908 -353.77777100]
[80.56631470 -340.80200195]
[70.66059875 -331.67556763]
[71.77624512 -316.71713257]
[72.89189148 -301.75866699]
[74.00754547 -286.80023193]
[75.12319183 -271.84176636]
[89.88938904 -269.38256836]
[103.64616394 -263.45709229]
[115.59213257 -254.40579224]
[125.03027344 -242.75138855]
[131.40858459 -229.16856384]
[134.35237122 -214.44502258]
[133.68626404 -199.43579102]
[129.44464111 -185.01351929]
[121.86990356 -172.01777649]
[111.39859772 -161.20616150]
[98.63629913 -153.21017456]
[84.32254028 -148.49827576]
[85.43818665 -133.53982544]
[98.63901520 -123.11978912]
[100.25089264 -106.04007721]
[88.79014587 -92.82377625]
[90.12837982 -77.88359070]
[91.46661377 -62.94340515]
[92.80484772 -48.00321960]
[94.14308167 -33.06303406]
[109.20635223 -27.72931480]
[120.47662354 -16.31902885]
[125.66146851 -1.08088493]
[123.67480469 14.95075417]
[114.86401367 28.56007576]
[100.95043182 36.99488831]
[102.51094818 51.91349411]
[104.07147217 66.83209991]
[105.63199615 81.75070190]
[116.82155609 90.95613861]
[118.32897186 105.36703491]
[109.28660583 116.68877411]
[110.84712982 131.60737610]
[112.40765381 146.52598572]
[113.96817780 161.44459534]
[124.26975250 163.99540710]
[133.43981934 169.29570007]
[140.76313782 176.91851807]
[145.67219543 186.25636292]
[147.79133606 196.56948853]
[146.96530151 207.04452515]
[143.27072144 216.85867310]
[137.00904846 225.24427795]
[128.68205261 231.54888916]
[118.95156860 235.28604126]
[119.39817810 250.27938843]
[119.84477997 265.27273560]
[127.98953247 278.83642578]
[120.63460541 291.78842163]
[130.67335510 307.22555542]
[121.75874329 322.34164429]
[122.42853546 337.32669067]
[123.09832001 352.31173706]
[123.76810455 367.29678345]
[124.43788910 382.28179932]
[125.10767365 397.26684570]
[125.77745819 412.25189209]
[140.76641846 413.10165405]
[155.59249878 415.46347046]
[170.10357666 419.31314087]
[184.15071106 424.61114502]
[197.58978271 431.30310059]
[210.28288269 439.32034302]
[222.09976196 448.58059692]
[232.91914368 458.98889160]
[242.63000488 470.43832397]
[251.13270569 482.81149292]
[258.33999634 495.98138428]
[264.17791748 509.81286621]
[268.58654785 524.16400146]
[271.52066040 538.88751221]
[272.95013428 553.83233643]
[272.86032104 568.84509277]
[271.25213623 583.77172852]
[268.14208984 598.45910645]
[263.56204224 612.75646973]
[257.55908203 626.51708984]
[250.19473267 639.59979248]
[241.54460144 651.87036133]
[231.69743347 663.20281982]
[220.75430298 673.48089600]
[208.82748413 682.59912109]
[196.03938293 690.46392822]
[182.52119446 696.99462891]
[168.41166687 702.12414551]
[153.85559082 705.79992676]
[139.00230408 707.98419189]
[124.00424957 708.65454102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 179]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[35 173]
[38 171]
[40 169]
[41 168]
[42 167]
[47 157]
[48 156]
[49 155]
[50 154]
[53 151]
[54 150]
[55 149]
[56 148]
[63 142]
[64 141]
[65 140]
[66 139]
[67 138]
[71 135]
[72 134]
[84 122]
[85 121]
[86 120]
[87 119]
[88 118]
[91 114]
[92 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
