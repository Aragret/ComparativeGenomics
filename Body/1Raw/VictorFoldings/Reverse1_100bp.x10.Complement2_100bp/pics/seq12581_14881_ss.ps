%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[33.11090851 727.34875488]
[18.13371658 728.40509033]
[3.12909460 727.86340332]
[-11.73294067 725.72985840]
[-26.28399086 722.02862549]
[-40.35918045 716.80163574]
[-53.79903030 710.10821533]
[-66.45125580 702.02404785]
[-78.17249298 692.64080811]
[-88.82993317 682.06488037]
[-98.30281830 670.41595459]
[-106.48382568 657.82617188]
[-113.28023529 644.43811035]
[-118.61505890 630.40344238]
[-122.42784119 615.88122559]
[-124.67537689 601.03601074]
[-125.33220673 586.03594971]
[-124.39088440 571.05108643]
[-121.86207581 556.25122070]
[-117.77443695 541.80395508]
[-112.17427826 527.87304688]
[-105.12506104 514.61633301]
[-96.70664978 502.18399048]
[-87.01443481 490.71694946]
[-76.15824127 480.34509277]
[-64.26107788 471.18597412]
[-51.45774460 463.34335327]
[-37.89331055 456.90609741]
[-23.72147751 451.94714355]
[-9.10281944 448.52267456]
[5.79702234 446.67150879]
[20.80922127 446.41461182]
[22.14745522 431.47442627]
[23.48568916 416.53424072]
[24.82392311 401.59405518]
[26.16215706 386.65386963]
[15.31917477 397.01870728]
[0.47063142 399.14492798]
[-12.84533310 392.23947144]
[-19.66219330 378.87796021]
[-17.43742943 364.04385376]
[-7.00082254 353.26992798]
[7.75503063 350.57461548]
[21.32656097 356.96316528]
[28.65215683 370.05395508]
[31.75626755 355.37866211]
[30.06500053 348.18411255]
[35.01738358 340.50872803]
[38.33964157 325.88125610]
[41.66190338 311.25378418]
[44.98416138 296.62634277]
[48.30642319 281.99887085]
[43.58016968 267.87402344]
[54.18182373 256.13027954]
[57.50408554 241.50280762]
[55.92012024 234.28388977]
[60.98622894 226.68307495]
[64.52590179 212.10670471]
[68.06557465 197.53031921]
[71.60524750 182.95394897]
[75.14492035 168.37757874]
[78.68459320 153.80119324]
[82.22426605 139.22482300]
[80.74795532 131.98310852]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[85.49890137 77.03211975]
[72.55723572 69.44837189]
[70.26638794 54.62434006]
[80.31507874 43.48774719]
[95.29579926 44.24807358]
[104.16500092 56.34321594]
[108.99099731 42.14076233]
[106.10505676 26.58499336]
[117.52575684 17.02377129]
[122.35175323 2.82131648]
[127.17774963 -11.38113880]
[115.81547546 -21.43968773]
[109.18770599 -35.04541016]
[108.27641296 -50.11137390]
[113.18937683 -64.33988190]
[123.14850616 -75.57289124]
[136.61288452 -82.11933136]
[151.51713562 -83.00963593]
[156.34312439 -97.21209717]
[161.16912842 -111.41455078]
[158.28318787 -126.97032166]
[169.70388794 -136.53153992]
[174.52987671 -150.73399353]
[174.32786560 -159.86619568]
[179.53489685 -165.11105347]
[184.57182312 -179.24008179]
[189.60873413 -193.36911011]
[194.64564514 -207.49813843]
[199.68257141 -221.62716675]
[186.51420593 -228.87908936]
[174.67974854 -238.14956665]
[164.48573303 -249.19847107]
[156.19621277 -261.73959351]
[150.02589417 -275.44812012]
[146.13461304 -289.96893311]
[144.62316895 -304.92593384]
[145.53071594 -319.93167114]
[148.83372498 -334.59750366]
[154.44664001 -348.54351807]
[162.22410583 -361.40847778]
[171.96463013 -372.85916138]
[183.41593933 -382.59896851]
[196.28138733 -390.37561035]
[210.22775269 -395.98767090]
[224.89378357 -399.28976440]
[239.89959717 -400.19635010]
[254.85649109 -398.68395996]
[269.37707520 -394.79177856]
[283.08520508 -388.62060547]
[295.62579346 -380.33029175]
[306.67407227 -370.13555908]
[315.94378662 -358.30050659]
[323.19488525 -345.13171387]
[328.23953247 -330.97021484]
[330.94705200 -316.18286133]
[331.24728394 -301.15270996]
[329.13253784 -286.26901245]
[324.65750122 -271.91735840]
[317.93811035 -258.46945190]
[309.14846802 -246.27363586]
[298.51617432 -235.64579773]
[286.31668091 -226.86125183]
[272.86593628 -220.14752197]
[258.51242065 -215.67851257]
[243.62785339 -213.56997681]
[228.59780884 -213.87654114]
[213.81159973 -216.59025574]
[208.77467346 -202.46122742]
[203.73776245 -188.33219910]
[198.70085144 -174.20315552]
[193.66392517 -160.07412720]
[188.73234558 -145.90800476]
[183.90634155 -131.70553589]
[187.13746643 -117.16562653]
[175.37158203 -106.58855438]
[170.54557800 -92.38609314]
[165.71958923 -78.18363953]
[176.99586487 -68.39718628]
[183.68435669 -55.00279617]
[184.73794556 -40.02765656]
[179.96504211 -25.75156021]
[170.06341553 -14.35983181]
[156.51841736 -7.60881948]
[141.38020325 -6.55514145]
[136.55421448 7.64731407]
[131.72821045 21.84976959]
[134.95933533 36.38968277]
[123.19345093 46.96675873]
[118.36745453 61.16921616]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.80064392 142.76449585]
[93.26097107 157.34086609]
[89.72129822 171.91723633]
[86.18162537 186.49362183]
[82.64195251 201.06999207]
[79.10227966 215.64636230]
[75.56260681 230.22274780]
[72.13154602 244.82507324]
[68.80928802 259.45251465]
[73.29790497 274.62365723]
[62.93387985 285.32113647]
[59.61162186 299.94860840]
[56.28936386 314.57604980]
[52.96710205 329.20352173]
[49.64484406 343.83096313]
[46.43156815 358.48275757]
[43.32746124 373.15808105]
[41.10234070 387.99209595]
[39.76410675 402.93228149]
[38.42587280 417.87246704]
[37.08763885 432.81265259]
[35.74940491 447.75283813]
[50.47697067 450.67361450]
[64.81063843 455.14331055]
[78.58798981 461.11129761]
[91.65291595 468.50991821]
[103.85739136 477.25537109]
[115.06312561 487.24853516]
[125.14314270 498.37622070]
[133.98324585 510.51232910]
[141.48324585 523.51934814]
[147.55816650 537.24987793]
[152.13919067 551.54833984]
[155.17440796 566.25274658]
[156.62940979 581.19647217]
[156.48773193 596.21020508]
[154.75096130 611.12377930]
[151.43879700 625.76831055]
[146.58874512 639.97778320]
[140.25578308 653.59118652]
[132.51164246 666.45434570]
[123.44409180 678.42144775]
[113.15586853 689.35693359]
[101.76353455 699.13684082]
[89.39619446 707.65045166]
[76.19396210 714.80114746]
[62.30643845 720.50805664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[45 180]
[46 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 174]
[54 172]
[55 171]
[57 170]
[58 169]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[65 163]
[66 162]
[68 160]
[69 159]
[75 158]
[76 157]
[78 155]
[79 154]
[80 153]
[87 146]
[88 145]
[89 144]
[91 142]
[92 141]
[94 140]
[95 139]
[96 138]
[97 137]
[98 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
