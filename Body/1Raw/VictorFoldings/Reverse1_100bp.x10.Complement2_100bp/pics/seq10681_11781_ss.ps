%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[34.59226990 612.92864990]
[36.67827988 628.01403809]
[32.44193268 642.64184570]
[22.61720657 654.27777100]
[8.90628910 660.90576172]
[-6.31531763 661.37756348]
[-20.41037941 655.61132812]
[-30.93684006 644.60620117]
[-36.07092667 630.26879883]
[-34.92313004 615.08319092]
[-27.69231224 601.68041992]
[-15.63125324 592.38250732]
[-0.82960749 588.80041504]
[1.83618796 574.03924561]
[4.50198364 559.27801514]
[-2.31318927 543.10638428]
[9.69798756 529.14886475]
[12.14371490 514.34960938]
[14.58944225 499.55032349]
[17.03516960 484.75103760]
[8.13966274 475.42907715]
[6.20867825 462.49255371]
[12.16879272 450.63137817]
[24.04432297 444.27633667]
[26.71011925 429.51513672]
[29.37591553 414.75390625]
[32.04170990 399.99270630]
[34.70750427 385.23147583]
[37.37330246 370.47027588]
[39.92913437 355.68960571]
[42.37486267 340.89035034]
[33.47935486 331.56835938]
[31.54837036 318.63183594]
[37.50848389 306.77066040]
[49.38401413 300.41564941]
[52.04981232 285.65441895]
[54.71560669 270.89318848]
[57.38140106 256.13198853]
[60.04719543 241.37077332]
[62.71299362 226.60954285]
[61.01373672 223.52006531]
[60.72647476 219.45405579]
[62.29388428 215.08409119]
[65.84152222 211.25508118]
[69.16378021 196.62762451]
[72.48604584 182.00016785]
[70.90207672 174.78123474]
[75.96818542 167.18041992]
[79.50785828 152.60404968]
[74.99243164 138.41038513]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[83.85837555 101.95625305]
[86.69087219 90.65943146]
[96.35169983 84.15484619]
[100.10800171 69.63278198]
[103.86430359 55.11072540]
[107.62060547 40.58866501]
[103.58567047 25.29063034]
[114.26360321 14.90645885]
[110.22867584 -0.39157799]
[120.90660858 -10.77574921]
[124.66291046 -25.29780960]
[126.66692352 -40.16333771]
[126.89025116 -55.16167450]
[119.35927582 -69.07551575]
[127.28520203 -81.68618011]
[127.50853729 -96.68451691]
[127.73186493 -111.68285370]
[127.95519257 -126.68119049]
[128.06684875 -141.68077087]
[126.61743927 -156.61058044]
[123.73216248 -171.33047485]
[120.84689331 -186.05036926]
[117.96161652 -200.77026367]
[115.07634735 -215.49014282]
[112.19107056 -230.21003723]
[101.94168854 -238.04029846]
[99.84158325 -250.35992432]
[106.47891998 -260.47290039]
[103.81312561 -275.23413086]
[88.77954102 -275.03109741]
[73.91760254 -277.30541992]
[59.63275146 -281.99508667]
[46.31468964 -288.97213745]
[34.32674408 -298.04620361]
[23.99595261 -308.96978760]
[15.60415077 -321.44485474]
[9.38027000 -335.13110352]
[5.49410391 -349.65515137]
[4.05166912 -364.62075806]
[5.09231615 -379.61962891]
[8.58765602 -394.24264526]
[14.44233322 -408.09085083]
[22.49662781 -420.78643799]
[32.53081131 -431.98309326]
[44.27114487 -441.37536621]
[57.39734650 -448.70697021]
[71.55132294 -453.77795410]
[86.34693146 -456.44998169]
[101.38055420 -456.65011597]
[116.24205780 -454.37289429]
[130.52600098 -449.68051147]
[143.84272766 -442.70089722]
[155.82891846 -433.62451172]
[166.15760803 -422.69891357]
[174.54701233 -410.22222900]
[180.76824951 -396.53479004]
[184.65161133 -382.01000977]
[186.09117126 -367.04412842]
[185.04763794 -352.04544067]
[181.54946899 -337.42309570]
[175.69212341 -323.57601929]
[167.63539124 -310.88198853]
[157.59904480 -299.68725586]
[145.85690308 -290.29727173]
[132.72929382 -282.96817017]
[118.57434082 -277.89993286]
[121.24013519 -263.13870239]
[133.28132629 -250.37246704]
[126.91096497 -233.09530640]
[129.79623413 -218.37542725]
[132.68150330 -203.65553284]
[135.56678772 -188.93563843]
[138.45205688 -174.21574402]
[141.33732605 -159.49584961]
[146.58468628 -173.54809570]
[157.03565979 -184.30807495]
[170.92906189 -189.96257019]
[185.92361450 -189.55868530]
[199.49249268 -183.16447449]
[209.34907532 -171.85749817]
[213.83236694 -157.54316711]
[212.18685913 -142.63369751]
[204.68983459 -129.64160156]
[192.60469055 -120.75627136]
[177.96797180 -117.47503662]
[163.24623108 -120.35085297]
[150.92033386 -128.89907837]
[143.06684875 -141.68077087]
[146.21035767 -134.99195862]
[142.95352173 -126.45786285]
[142.73019409 -111.45952606]
[142.50686646 -96.46118927]
[142.28353882 -81.46285248]
[149.83049011 -68.62179565]
[141.88859558 -54.93834686]
[141.66526794 -39.94001007]
[149.11790466 -52.95761871]
[160.52857971 -62.69396210]
[174.55679321 -68.00522614]
[189.55448914 -68.26744080]
[203.75979614 -63.44981003]
[215.50384521 -54.11830521]
[223.40699768 -41.36917496]
[226.54077148 -26.70017815]
[224.53701782 -11.83461380]
[217.63114929 1.48112643]
[206.63444519 11.68272305]
[192.83880615 17.57170296]
[177.86489868 18.45623398]
[163.47187805 14.23240185]
[151.35060120 5.39641953]
[142.92506409 -7.01367092]
[139.18496704 -21.54150772]
[135.42866516 -7.01944876]
[139.73226929 7.23987293]
[128.78565979 18.66275978]
[133.08926392 32.92208099]
[122.14266205 44.34496689]
[118.38636017 58.86702728]
[114.63005829 73.38908386]
[110.87375641 87.91114807]
[115.77153015 103.95446014]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[104.60638428 145.60173035]
[94.08423615 156.14372253]
[90.54456329 170.72009277]
[87.11350250 185.32241821]
[83.79124451 199.94987488]
[80.46898651 214.57734680]
[77.47421265 229.27534485]
[74.80841064 244.03656006]
[72.14261627 258.79779053]
[69.47682190 273.55899048]
[66.81102753 288.32022095]
[64.14523315 303.08142090]
[74.38117981 317.26751709]
[71.25194550 334.13531494]
[57.17413330 343.33605957]
[54.72840500 358.13534546]
[56.41670990 367.11239624]
[52.13451767 373.13604736]
[49.46872330 387.89727783]
[46.80292892 402.65850830]
[44.13713074 417.41970825]
[41.47133636 432.18093872]
[38.80554199 446.94213867]
[49.04148483 461.12823486]
[45.91225433 477.99603271]
[31.83444023 487.19677734]
[29.38871384 501.99606323]
[26.94298553 516.79534912]
[24.49725914 531.59460449]
[31.36032295 542.51525879]
[29.01859856 554.79125977]
[19.26320076 561.94378662]
[16.59740448 576.70501709]
[13.93161011 591.46624756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 210]
[14 209]
[15 208]
[17 205]
[18 204]
[19 203]
[20 202]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 192]
[31 191]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[44 182]
[45 181]
[46 180]
[48 179]
[49 178]
[51 176]
[52 175]
[55 173]
[56 172]
[57 171]
[58 170]
[60 168]
[62 166]
[63 165]
[64 148]
[65 147]
[67 145]
[68 144]
[69 143]
[70 142]
[71 140]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[80 119]
[81 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
