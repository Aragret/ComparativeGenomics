%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[69.75737000 785.82653809]
[62.14735413 772.80584717]
[58.01531982 758.30145264]
[57.62102127 743.22515869]
[60.98924255 728.52459717]
[67.90824890 715.12390137]
[77.94310760 703.86547852]
[90.46302795 695.45703125]
[104.68098450 690.42706299]
[103.34275055 675.48687744]
[102.00451660 660.54669189]
[93.16259766 648.56042480]
[99.63785553 634.12500000]
[98.29962158 619.18481445]
[96.96138763 604.24462891]
[93.23367310 597.86297607]
[95.71614075 589.07232666]
[94.60049438 574.11389160]
[93.48484802 559.15539551]
[79.25393677 550.97259521]
[72.63833618 535.76745605]
[76.42689514 519.45343018]
[89.31951141 508.50460815]
[87.98127747 493.56442261]
[79.13935852 481.57818604]
[85.61461639 467.14276123]
[84.27638245 452.20257568]
[75.43446350 440.21633911]
[81.90972137 425.78091431]
[79.84755707 423.88204956]
[78.41330719 421.05194092]
[77.96543121 417.52563477]
[78.77077484 413.66354370]
[80.96373749 409.91586304]
[80.51713562 394.92251587]
[80.07052612 379.92916870]
[79.62392426 364.93582153]
[79.17731476 349.94247437]
[78.73070526 334.94912720]
[78.28410339 319.95578003]
[66.25490570 328.91671753]
[51.71075439 325.24685669]
[45.37306595 311.65151978]
[51.91374588 298.15264893]
[66.51124573 294.70111084]
[78.40408325 303.83981323]
[79.07386780 288.85476685]
[79.74365234 273.86972046]
[66.78710938 270.34539795]
[54.84904480 264.18478394]
[44.45932388 255.65827942]
[36.07973862 245.14125061]
[30.08349419 233.09767151]
[26.73856735 220.05955505]
[26.19574356 206.60356140]
[28.48182106 193.32537842]
[33.49829865 180.81340027]
[41.02561951 169.62269592]
[50.73277283 160.25030518]
[62.19186401 153.11320496]
[74.89695740 148.52976990]
[88.28642273 146.70555115]
[89.62465668 131.76538086]
[90.96289062 116.82518768]
[81.75296783 105.63932800]
[83.04565430 91.20758820]
[94.09692383 81.83657837]
[95.43515778 66.89639282]
[93.08383942 58.06977844]
[96.90615082 51.74429321]
[98.46667480 36.82569122]
[99.91609955 21.89588165]
[101.25433350 6.95569658]
[102.59256744 -7.98448849]
[103.81954193 -22.93422127]
[104.93518829 -37.89267731]
[95.02947235 -47.01908493]
[92.22953796 -59.99486160]
[97.33855438 -72.03562927]
[108.28504181 -78.83297729]
[109.62327576 -93.77316284]
[107.27196503 -102.59977722]
[111.09427643 -108.92526245]
[112.65480042 -123.84386444]
[114.21532440 -138.76246643]
[115.77584076 -153.68107605]
[117.00282288 -168.63081360]
[117.89563751 -183.60421753]
[104.02365875 -189.66998291]
[93.08450317 -200.09625244]
[86.38513947 -213.61064148]
[84.71683502 -228.57348633]
[88.26177979 -243.17672729]
[96.57334900 -255.66241455]
[108.63232422 -264.53430176]
[122.97183990 -268.73712158]
[116.06965637 -282.97335815]
[124.55078125 -295.21752930]
[125.44359589 -310.19094849]
[126.33641052 -325.16433716]
[112.64846039 -331.77557373]
[102.53619385 -343.12506104]
[97.54164886 -357.48202515]
[98.42646790 -372.65719604]
[105.05570984 -386.33642578]
[116.41847229 -396.43377686]
[130.78201294 -401.40942383]
[145.95599365 -400.50463867]
[159.62649536 -393.85742188]
[169.70887756 -382.48138428]
[174.66563416 -368.11129761]
[173.74089050 -352.93853760]
[167.07568359 -339.27676392]
[155.68640137 -329.20938110]
[141.30981445 -324.27151489]
[140.41699219 -309.29812622]
[139.52418518 -294.32470703]
[146.49021912 -281.15948486]
[137.94523621 -267.84429932]
[151.68371582 -261.96728516]
[162.60299683 -251.72528076]
[169.37199402 -238.34039307]
[171.15649414 -223.41937256]
[167.72196960 -208.76078796]
[159.46414185 -196.13824463]
[147.36352539 -187.08576965]
[132.86904907 -182.71139526]
[131.97622681 -167.73799133]
[134.03056335 -164.87232971]
[134.79896545 -160.86924744]
[133.76194763 -156.34400940]
[130.69444275 -152.12054443]
[129.13392639 -137.20195007]
[127.57340240 -122.28334045]
[126.01287842 -107.36473846]
[124.56346130 -92.43492889]
[123.22522736 -77.49474335]
[134.55043030 -65.06178284]
[133.35592651 -47.94781113]
[119.89363861 -36.77702713]
[118.77799225 -21.81857300]
[121.41529846 -14.91448593]
[117.53275299 -6.64625454]
[116.19451904 8.29393101]
[114.85628510 23.23411560]
[117.39050293 30.17670441]
[113.38528442 38.38621140]
[111.82476044 53.30481720]
[110.37534332 68.23462677]
[109.03710938 83.17481232]
[118.24703217 94.36067200]
[116.95434570 108.79241180]
[105.90307617 118.16342163]
[104.56484222 133.10360718]
[103.22660828 148.04379272]
[118.94006348 153.58158875]
[132.69139099 162.96961975]
[143.55792236 175.57154846]
[150.81214905 190.53552246]
[153.97056580 206.85191345]
[152.82579041 223.42132568]
[147.46018982 239.12872314]
[138.24002075 252.91844177]
[125.79038239 263.86517334]
[110.95287323 271.23599243]
[94.72869110 274.53952026]
[94.05890656 289.52453613]
[93.38912201 304.50958252]
[93.27745056 319.50918579]
[93.72406006 334.50253296]
[94.17066193 349.49588013]
[94.61727142 364.48922729]
[95.06387329 379.48257446]
[95.51048279 394.47592163]
[95.95709229 409.46926880]
[96.84990692 424.44268799]
[105.78754425 437.49752808]
[99.21656799 450.86434937]
[100.55480194 465.80453491]
[109.49243927 478.85937500]
[102.92146301 492.22619629]
[104.25969696 507.16638184]
[116.58290863 513.34124756]
[124.18548584 524.70874023]
[125.17053986 538.24017334]
[119.38742828 550.39331055]
[108.44329834 558.03979492]
[109.55894470 572.99822998]
[110.67459869 587.95666504]
[111.90157318 602.90643311]
[113.23980713 617.84661865]
[114.57804108 632.78680420]
[123.51567841 645.84161377]
[116.94470215 659.20843506]
[118.28293610 674.14862061]
[119.62117004 689.08880615]
[134.50671387 691.51190186]
[148.32168579 697.56146240]
[160.19764709 706.85729980]
[169.38807678 718.81500244]
[175.31524658 732.68292236]
[177.60658264 747.58935547]
[176.11805725 762.59716797]
[170.94320679 776.76300049]
[162.40734863 789.19647217]
[151.04705811 799.11584473]
[137.57644653 805.89770508]
[122.84228516 809.11566162]
[107.77077484 808.56750488]
[93.30933380 804.28759766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 196]
[10 195]
[11 194]
[13 192]
[14 191]
[15 190]
[17 189]
[18 188]
[19 187]
[23 182]
[24 181]
[26 179]
[27 178]
[29 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[46 168]
[47 167]
[48 166]
[62 155]
[63 154]
[64 153]
[67 150]
[68 149]
[70 148]
[71 147]
[72 145]
[73 144]
[74 143]
[75 141]
[76 140]
[80 137]
[81 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 128]
[88 127]
[96 119]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
