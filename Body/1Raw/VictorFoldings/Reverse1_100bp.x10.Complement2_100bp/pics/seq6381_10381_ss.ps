%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[112.15007782 255.63563538]
[113.75231171 270.59130859]
[112.65815735 285.59274292]
[108.90276337 300.15765381]
[102.60686493 313.81787109]
[93.97284698 326.13427734]
[83.27825165 336.71090698]
[70.86687469 345.20782471]
[57.13768005 351.35183716]
[42.53201294 354.94549561]
[27.51938248 355.87322998]
[12.58238220 354.10522461]
[-1.79882479 349.69833374]
[-15.16194248 342.79421997]
[-27.07740211 333.61480713]
[-37.16217041 322.45516968]
[-45.09206390 309.67407227]
[-50.61216736 295.68237305]
[-53.54503632 280.92980957]
[-53.79639053 265.89062500]
[-51.35814667 251.04830933]
[-46.30868530 236.87992859]
[-38.81032944 223.84097290]
[-29.10411453 212.35058594]
[-17.50205994 202.77812195]
[-4.37712097 195.43128967]
[9.84878922 190.54629517]
[24.71836472 188.28013611]
[39.75361252 188.70567322]
[54.47121429 191.80923462]
[60.13399887 177.91920471]
[65.79678345 164.02917480]
[71.45957184 150.13914490]
[77.12236023 136.24913025]
[82.78514862 122.35909271]
[88.44792938 108.46907043]
[86.73600006 94.59243774]
[97.66204071 85.86814117]
[103.32482910 71.97811890]
[108.98761749 58.08808899]
[114.65039825 44.19806290]
[120.31318665 30.30803680]
[125.97597504 16.41800880]
[131.63876343 2.52798271]
[117.99602509 -3.71236730]
[104.62657166 -10.51854229]
[91.55386353 -17.87860298]
[78.80082703 -25.77963448]
[66.38983917 -34.20777893]
[54.34267426 -43.14825058]
[42.68046570 -52.58536148]
[31.42366982 -62.50255966]
[20.59203720 -72.88243866]
[10.20457172 -83.70680237]
[0.27949566 -94.95664978]
[-9.16577911 -106.61225128]
[-18.11468315 -118.65315247]
[-26.55151558 -131.05824280]
[-34.46147537 -143.80574036]
[-41.83068848 -156.87329102]
[-48.64622498 -170.23797607]
[-54.89612579 -183.87632751]
[-60.56942749 -197.76445007]
[-65.65618134 -211.87796021]
[-70.14745331 -226.19210815]
[-74.03537750 -240.68176270]
[-77.31312561 -255.32153320]
[-79.97495270 -270.08569336]
[-82.01617432 -284.94839478]
[-83.43322754 -299.88354492]
[-84.22361755 -314.86489868]
[-84.38595581 -329.86624146]
[-83.91996765 -344.86120605]
[-82.82645416 -359.82351685]
[-81.10734558 -374.72689819]
[-78.76566315 -389.54519653]
[-75.80549622 -404.25247192]
[-72.23205566 -418.82287598]
[-68.05160522 -433.23086548]
[-63.27147293 -447.45114136]
[-57.90005112 -461.45880127]
[-51.94675827 -475.22921753]
[-45.42204666 -488.73828125]
[-38.33735275 -501.96224976]
[-30.70511246 -514.87792969]
[-22.53871346 -527.46270752]
[-13.85248280 -539.69445801]
[-4.66165781 -551.55169678]
[5.01763678 -563.01373291]
[15.16841984 -574.06030273]
[25.77288437 -584.67218018]
[36.81242752 -594.83068848]
[48.26767731 -604.51794434]
[60.11854172 -613.71704102]
[72.34423065 -622.41180420]
[84.92329407 -630.58697510]
[97.83366394 -638.22821045]
[111.05268860 -645.32214355]
[124.55718231 -651.85626221]
[138.32345581 -657.81915283]
[152.32734680 -663.20031738]
[166.54429626 -667.99035645]
[180.94937134 -672.18084717]
[195.51727295 -675.76446533]
[210.22247314 -678.73486328]
[225.03916931 -681.08691406]
[239.94134521 -682.81640625]
[254.90287781 -683.92034912]
[269.89752197 -684.39678955]
[284.89895630 -684.24487305]
[299.88088989 -683.46496582]
[314.81698608 -682.05828857]
[329.68112183 -680.02746582]
[344.44714355 -677.37591553]
[359.08917236 -674.10839844]
[373.58154297 -670.23052979]
[387.89883423 -665.74926758]
[402.01586914 -660.67236328]
[415.90792847 -655.00872803]
[429.55065918 -648.76831055]
[442.92010498 -641.96209717]
[455.99276733 -634.60198975]
[468.74578857 -626.70092773]
[481.15673828 -618.27276611]
[493.20388794 -609.33227539]
[504.86605835 -599.89508057]
[516.12286377 -589.97790527]
[526.95440674 -579.59796143]
[537.34185791 -568.77355957]
[547.26690674 -557.52368164]
[556.71215820 -545.86804199]
[565.66101074 -533.82714844]
[574.09777832 -521.42199707]
[582.00775146 -508.67449951]
[589.37689209 -495.60693359]
[596.19238281 -482.24221802]
[602.44226074 -468.60382080]
[608.11553955 -454.71569824]
[613.20220947 -440.60217285]
[617.69348145 -426.28802490]
[621.58135986 -411.79833984]
[624.85900879 -397.15856934]
[627.52081299 -382.39437866]
[629.56201172 -367.53167725]
[630.97900391 -352.59655762]
[631.76934814 -337.61517334]
[631.93164062 -322.61383057]
[631.46557617 -307.61886597]
[630.37207031 -292.65658569]
[628.65289307 -277.75320435]
[626.31115723 -262.93487549]
[623.35095215 -248.22763062]
[619.77746582 -233.65722656]
[615.59698486 -219.24925232]
[610.81677246 -205.02899170]
[605.44531250 -191.02136230]
[599.49200439 -177.25096130]
[592.96722412 -163.74192810]
[585.88250732 -150.51797485]
[578.25024414 -137.60231018]
[570.08380127 -125.01757812]
[561.39752197 -112.78585815]
[552.20666504 -100.92861176]
[542.52734375 -89.46664429]
[532.37652588 -78.42005157]
[521.77203369 -67.80822754]
[510.73242188 -57.64977646]
[499.27716064 -47.96252823]
[487.42626953 -38.76347733]
[475.20056152 -30.06875992]
[462.62145996 -21.89362717]
[449.71105957 -14.25242519]
[436.49200439 -7.15855742]
[422.98751831 -0.62446874]
[409.22122192 5.33837748]
[395.21731567 10.71952057]
[381.00033569 15.50951958]
[366.59524536 19.69997215]
[352.02734375 23.28352547]
[337.32211304 26.25389481]
[322.50543213 28.60586548]
[307.60324097 30.33531570]
[292.64169312 31.43920898]
[277.64706421 31.91560936]
[262.64562988 31.76367950]
[247.66371155 30.98368835]
[232.72760010 29.57700348]
[217.86349487 27.54609299]
[203.09747314 24.89451790]
[188.45542908 21.62693214]
[173.96307373 17.74906540]
[159.64582825 13.26772499]
[145.52879333 8.19076920]
[139.86599731 22.08079720]
[134.20321655 35.97082138]
[128.54042053 49.86085129]
[122.87763977 63.75087738]
[117.21485138 77.64090729]
[111.55207062 91.53092957]
[113.26399994 105.40756226]
[102.33795929 114.13185883]
[96.67517090 128.02188110]
[91.01238251 141.91191101]
[85.34960175 155.80194092]
[79.68681335 169.69197083]
[74.02402496 183.58198547]
[68.36123657 197.47201538]
[81.05361938 205.54315186]
[92.10072327 215.75106812]
[101.14743042 227.76757812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 207]
[31 206]
[32 205]
[33 204]
[34 203]
[35 202]
[36 201]
[38 199]
[39 198]
[40 197]
[41 196]
[42 195]
[43 194]
[44 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
