%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[66.39280701 620.79406738]
[65.93190002 605.77740479]
[67.52013397 590.83776855]
[71.12791443 576.25360107]
[76.68803406 562.29656982]
[84.09690857 549.22668457]
[93.21652222 537.28741455]
[103.87696838 526.70117188]
[115.87966919 517.66516113]
[129.00100708 510.34777832]
[123.54564667 496.37500000]
[118.09028625 482.40219116]
[112.63493347 468.42938232]
[97.89012909 466.31838989]
[86.10328674 457.04873657]
[80.50183105 443.03125000]
[82.68310547 427.99331665]
[92.16039276 415.98797607]
[86.70503235 402.01519775]
[81.24967957 388.04238892]
[79.97002411 402.98770142]
[75.54994202 417.32168579]
[68.19052124 430.39221191]
[58.22657013 441.60470581]
[46.11137390 450.44900513]
[32.39609909 456.52282715]
[17.70469093 459.54980469]
[2.70551920 459.39224243]
[-11.91905785 456.05731201]
[-25.50371933 449.69674683]
[-37.43045425 440.59988403]
[-47.15667343 429.18057251]
[-54.23989868 415.95831299]
[-58.35789490 401.53463745]
[-59.32331848 386.56573486]
[-57.09224701 371.73260498]
[-51.76618195 357.71002197]
[-43.58742142 345.13592529]
[-32.92804718 334.58233643]
[-20.27298737 326.52941895]
[-6.19796467 321.34350586]
[8.65670300 319.26052856]
[23.61522675 320.37521362]
[37.99709320 324.63690186]
[51.14802551 331.85168457]
[62.46974182 341.69134521]
[71.44718170 353.70822144]
[77.67329407 367.35977173]
[78.11989594 352.36642456]
[67.75095367 341.73529053]
[67.99029541 326.52355957]
[79.21148682 315.71972656]
[79.65809631 300.72637939]
[80.10470581 285.73303223]
[72.74977112 272.78103638]
[80.89452362 259.21734619]
[81.34113312 244.22399902]
[81.78773499 229.23065186]
[82.23434448 214.23730469]
[82.68094635 199.24395752]
[70.13970947 207.47300720]
[55.83978271 202.94398499]
[50.32254028 188.99549866]
[57.65508652 175.90986633]
[72.43214417 173.33332825]
[83.75994873 183.16369629]
[85.32047272 168.24508667]
[86.88099670 153.32647705]
[88.44152069 138.40788269]
[90.00204468 123.48927307]
[91.56256866 108.57066345]
[92.90080261 93.63047791]
[94.01644897 78.67202759]
[95.13209534 63.71357346]
[96.24774933 48.75511932]
[89.55828857 34.41769791]
[98.22077179 22.30115128]
[99.33641815 7.34269810]
[100.45206451 -7.61575556]
[101.56771088 -22.57420921]
[102.57197571 -37.54055405]
[95.66979218 -51.77679062]
[104.15091705 -64.02096558]
[105.04373169 -78.99436951]
[105.93654633 -93.96777344]
[106.71787262 -108.94741821]
[107.38765717 -123.93245697]
[108.05744171 -138.91749573]
[108.72722626 -153.90252686]
[106.02439117 -159.93627930]
[106.67654419 -165.58178711]
[109.64662933 -169.32179260]
[110.76227570 -184.28025818]
[102.95228577 -194.54508972]
[104.18946075 -206.98104858]
[113.26783752 -214.97540283]
[114.60607147 -229.91558838]
[115.94430542 -244.85577393]
[117.28253937 -259.79595947]
[103.36228180 -265.71890259]
[91.95494843 -275.65512085]
[84.17813110 -288.63110352]
[80.79370880 -303.37561035]
[82.13326263 -318.44415283]
[88.06555939 -332.36044312]
[98.00939941 -343.76110840]
[110.99059296 -351.52923584]
[125.73738098 -354.90377808]
[140.80500793 -353.55413818]
[154.71733093 -347.61251831]
[166.11132812 -337.66104126]
[173.87074280 -324.67465210]
[177.23541260 -309.92559814]
[175.87565613 -294.85885620]
[169.92472839 -280.95053101]
[159.96562195 -269.56320190]
[146.97401428 -261.81250000]
[132.22273254 -258.45773315]
[130.88449097 -243.51753235]
[129.54626465 -228.57734680]
[128.20802307 -213.63716125]
[136.43878174 -198.13807678]
[125.72072601 -183.16461182]
[124.60507965 -168.20614624]
[123.71226501 -153.23274231]
[123.04248047 -138.24771118]
[122.37269592 -123.26266479]
[121.70291138 -108.27762604]
[124.54460144 -101.45512390]
[120.90995026 -93.07495880]
[120.01713562 -78.10155487]
[119.12432098 -63.12815094]
[126.09036255 -49.96290970]
[117.54537964 -36.64773560]
[120.28517914 -29.78367996]
[116.52616882 -21.45856094]
[115.41052246 -6.50010681]
[114.29486847 8.45834637]
[113.17922211 23.41679955]
[119.94847870 36.68429565]
[111.20619965 49.87076950]
[110.09055328 64.82922363]
[108.97490692 79.78767395]
[107.85925293 94.74613190]
[110.29347229 99.39247894]
[109.95115662 105.07192230]
[106.48117065 110.13118744]
[104.92064667 125.04979706]
[103.36012268 139.96839905]
[101.79960632 154.88700867]
[100.23908234 169.80560303]
[98.67855835 184.72421265]
[97.67429352 199.69055176]
[97.22769165 214.68391418]
[96.78108215 229.67726135]
[96.33448029 244.67060852]
[95.88787079 259.66397095]
[103.21086121 273.68838501]
[95.09805298 286.17962646]
[94.65144348 301.17300415]
[94.20484161 316.16635132]
[104.76309204 327.61889648]
[104.09658051 342.81793213]
[93.11325073 352.81301880]
[92.66664124 367.80636597]
[95.22247314 382.58703613]
[100.67783356 396.55981445]
[106.13318634 410.53262329]
[121.23780060 412.94052124]
[133.03126526 422.52233887]
[138.40946960 436.62698364]
[136.02156067 451.43084717]
[126.60772705 462.97402954]
[132.06307983 476.94683838]
[137.51844788 490.91961670]
[142.97380066 504.89242554]
[157.58204651 501.38345337]
[172.53204346 499.89636230]
[187.54527283 500.45892334]
[202.34207153 503.06060791]
[216.64675903 507.65292358]
[230.19285583 514.15039062]
[242.72802734 522.43188477]
[254.01870728 532.34320068]
[263.85458374 543.69964600]
[272.05242920 556.28973389]
[278.45953369 569.87878418]
[282.95648193 584.21374512]
[285.45953369 599.02752686]
[285.92205811 614.04418945]
[284.33544922 628.98394775]
[280.72924805 643.56848145]
[275.17065430 657.52612305]
[267.76318359 670.59686279]
[258.64486694 682.53710938]
[247.98556519 693.12451172]
[235.98384094 702.16180420]
[222.86331177 709.48059082]
[208.86836243 714.94464111]
[194.25973511 718.45202637]
[179.30958557 719.93743896]
[164.29640198 719.37329102]
[149.49989319 716.77001953]
[135.19569397 712.17614746]
[121.65029907 705.67724609]
[109.11604309 697.39434814]
[97.82642365 687.48181152]
[87.99176788 676.12426758]
[79.79528046 663.53338623]
[73.38967133 649.94360352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 176]
[11 175]
[12 174]
[13 173]
[18 168]
[19 167]
[20 166]
[48 165]
[49 164]
[52 161]
[53 160]
[54 159]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[72 144]
[73 143]
[74 142]
[75 141]
[77 139]
[78 138]
[79 137]
[80 136]
[81 134]
[83 132]
[84 131]
[85 130]
[86 128]
[87 127]
[88 126]
[89 125]
[92 124]
[93 123]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
