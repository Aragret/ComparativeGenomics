%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[108.17006683 559.87426758]
[110.21333313 544.93182373]
[115.90920258 530.96728516]
[124.89962006 518.85845947]
[136.61944580 509.36657715]
[150.33195496 503.08819580]
[147.66616821 488.32699585]
[145.00036621 473.56576538]
[132.49012756 468.90359497]
[123.84787750 458.58584595]
[121.41300201 445.23889160]
[125.92669678 432.32980347]
[136.31094360 423.26568604]
[133.86521912 408.46640015]
[124.21739197 401.16943359]
[122.05870056 388.85992432]
[129.08360291 378.04263306]
[126.85848236 363.20858765]
[122.75753021 357.06008911]
[124.71237183 348.13729858]
[122.70835876 333.27175903]
[120.70434570 318.40625000]
[118.70033264 303.54071045]
[116.69631958 288.67517090]
[114.69230652 273.80966187]
[112.68829346 258.94412231]
[103.31997681 247.36465454]
[109.14420319 232.65449524]
[107.14018250 217.78897095]
[93.44680786 214.71800232]
[81.59894562 207.14129639]
[73.03075409 195.95176697]
[68.78764343 182.48112488]
[69.39874268 168.34133911]
[74.81101990 155.23179626]
[84.39319611 144.73497009]
[97.00930786 138.12553406]
[95.22683716 123.23181152]
[93.44437408 108.33808899]
[91.10888672 93.52102661]
[88.22361755 78.80113220]
[85.33834076 64.08123779]
[82.45307159 49.36135101]
[79.56779480 34.64146042]
[76.13673401 20.03913689]
[72.16464233 5.57461214]
[68.19254303 -8.88991165]
[64.22044373 -23.35443497]
[60.24835205 -37.81895828]
[56.27625656 -52.28348160]
[41.19028473 -53.56366730]
[27.47828674 -59.91607666]
[16.78709602 -70.55650330]
[10.39345551 -84.18703461]
[9.05156136 -99.15435791]
[12.90414906 -113.65029144]
[21.46758080 -125.93022156]
[33.69247437 -134.52308655]
[29.72037888 -148.98760986]
[18.60491371 -160.24624634]
[22.69574165 -174.56806946]
[18.72364616 -189.03259277]
[14.75154972 -203.49711609]
[10.77945328 -217.96163940]
[6.80735731 -232.42616272]
[0.93665802 -218.62272644]
[-11.40458679 -210.09666443]
[-26.39230919 -209.48988342]
[-39.38240051 -216.99038696]
[-46.34973526 -230.27406311]
[-45.13541794 -245.22483826]
[-36.11570740 -257.21002197]
[-22.08546829 -262.51589966]
[-7.39211655 -259.49838257]
[3.41157842 -249.09225464]
[1.40756476 -263.95776367]
[-0.59644890 -278.82330322]
[-12.88073063 -288.40109253]
[-14.70131969 -303.50540161]
[-5.49465084 -315.15756226]
[-7.49866486 -330.02310181]
[-9.50267792 -344.88861084]
[-21.78696060 -354.46643066]
[-23.60754967 -369.57073975]
[-14.40088081 -381.22290039]
[-16.40489388 -396.08840942]
[-18.40890694 -410.95394897]
[-20.41292191 -425.81948853]
[-22.41693497 -440.68499756]
[-37.39583206 -442.44097900]
[-51.46714783 -447.86767578]
[-63.74634552 -456.62393188]
[-73.46154785 -468.15933228]
[-80.00204468 -481.74877930]
[-82.95670319 -496.53799438]
[-82.13978577 -511.59732056]
[-77.60263824 -525.98010254]
[-69.63048553 -538.78228760]
[-58.72444534 -549.19903564]
[-45.57009125 -556.57562256]
[-30.99431610 -560.44830322]
[-15.91336441 -560.57366943]
[-1.27523732 -556.94378662]
[11.99989986 -549.78686523]
[23.07756233 -539.55279541]
[31.26139641 -526.88488770]
[36.03696060 -512.57946777]
[37.10406113 -497.53576660]
[34.39561462 -482.69949341]
[28.08187866 -469.00323486]
[18.55974197 -457.30795288]
[6.42777109 -448.34881592]
[-7.55140686 -442.68902588]
[-5.54739332 -427.82348633]
[-3.54337955 -412.95794678]
[-1.53936589 -398.09243774]
[0.46464780 -383.22689819]
[12.42821980 -374.42868042]
[14.67234039 -359.38146973]
[5.36284971 -346.89263916]
[7.36686373 -332.02709961]
[9.37087727 -317.16159058]
[21.33444977 -308.36337280]
[23.57856941 -293.31616211]
[14.26907921 -280.82733154]
[16.27309227 -265.96179199]
[18.27710724 -251.09626770]
[21.27188110 -236.39825439]
[25.24397659 -221.93373108]
[29.21607399 -207.46920776]
[33.18817139 -193.00468445]
[37.16026688 -178.54016113]
[47.99161911 -168.31611633]
[44.18490219 -152.95970154]
[48.15699768 -138.49517822]
[63.05584335 -137.35075378]
[76.68974304 -131.16642761]
[87.40518951 -120.67101288]
[93.89540100 -107.11746216]
[95.35963440 -92.13327026]
[91.60196686 -77.52504730]
[83.05722046 -65.06072998]
[70.74077606 -56.25558090]
[74.71287537 -41.79105377]
[78.68497467 -27.32653236]
[82.65706635 -12.86200809]
[86.62916565 1.60251606]
[90.60125732 16.06703949]
[100.17615509 4.52054930]
[115.17555237 4.65465546]
[124.54246521 16.37050056]
[121.37194061 31.03159904]
[108.00118256 37.83033371]
[94.28768921 31.75618553]
[97.17295837 46.47607803]
[100.05823517 61.19596863]
[102.94350433 75.91586304]
[105.82878113 90.63574982]
[116.23593903 79.83338928]
[131.18382263 81.08272552]
[139.65339661 93.46279907]
[135.40121460 107.84748077]
[121.56182861 113.63291168]
[108.33808899 106.55562592]
[110.12055969 121.44934082]
[111.90302277 136.34306335]
[127.41086578 140.58747864]
[140.07217407 150.43438721]
[147.96635437 164.35264587]
[149.91033936 180.19639587]
[145.63580322 195.53599548]
[135.82579041 208.03050232]
[122.00571442 215.78495789]
[124.00972748 230.65048218]
[133.52137756 243.29322815]
[127.55381775 256.94012451]
[129.55783081 271.80563354]
[131.56184387 286.67117310]
[133.56585693 301.53668213]
[135.56987000 316.40222168]
[137.57388306 331.26776123]
[139.57789612 346.13327026]
[141.69252014 360.98348999]
[143.91764832 375.81753540]
[155.71968079 389.95236206]
[148.66448975 406.02069092]
[151.11021423 420.81994629]
[166.33384705 428.19134521]
[174.08705139 443.03683472]
[171.48991394 459.41415405]
[159.76158142 470.89996338]
[162.42738342 485.66119385]
[165.09317017 500.42242432]
[180.13554382 501.50781250]
[194.43513489 506.30075073]
[207.09307861 514.50000000]
[217.31367493 525.59008789]
[224.45443726 538.87390137]
[228.06652832 553.51641846]
[227.92285156 568.59722900]
[224.03247070 583.16827393]
[216.63990784 596.31365967]
[206.20988464 607.20703125]
[193.39802551 615.16363525]
[179.00971985 619.68328857]
[163.94940186 620.48187256]
[149.16378784 617.50921631]
[135.58232117 610.95220947]
[124.05873108 601.22302246]
[115.31740570 588.93316650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[8 191]
[13 187]
[14 186]
[17 184]
[18 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[26 176]
[28 174]
[29 173]
[37 166]
[38 165]
[39 164]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[58 135]
[59 134]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[75 127]
[76 126]
[77 125]
[80 122]
[81 121]
[82 120]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
