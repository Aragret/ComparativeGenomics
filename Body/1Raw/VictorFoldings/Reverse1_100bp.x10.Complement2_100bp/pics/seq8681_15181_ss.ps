%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[67.30375671 771.41583252]
[54.36427689 779.03857422]
[40.61403656 785.07733154]
[26.24606514 789.44744873]
[11.46206951 792.08752441]
[-3.53040791 792.96044922]
[-18.52089500 792.05395508]
[-33.29895020 789.38085938]
[-47.65710831 784.97863770]
[-61.39381027 778.90911865]
[-74.31620789 771.25744629]
[-86.24289703 762.13104248]
[-97.00643921 751.65814209]
[-106.45573425 739.98559570]
[-114.45812225 727.27740479]
[-120.90127563 713.71197510]
[-125.69473267 699.47961426]
[-128.77120972 684.78027344]
[-130.08750916 669.82019043]
[-129.62515259 654.80944824]
[-127.39062500 639.95874023]
[-123.41531372 625.47656250]
[-117.75501251 611.56622314]
[-110.48918152 598.42303467]
[-101.71983337 586.23144531]
[-91.57006836 575.16259766]
[-80.18237305 565.37194824]
[-67.71661377 556.99694824]
[-54.34778595 550.15509033]
[-40.26357651 544.94244385]
[-25.66169930 541.43225098]
[-10.74714375 539.67376709]
[4.27071428 539.69158936]
[19.18104553 541.48559570]
[22.72071838 526.90917969]
[26.26039124 512.33282471]
[29.25516510 497.63482666]
[31.70089340 482.83554077]
[34.14662170 468.03628540]
[36.59234619 453.23699951]
[38.92783356 438.41995239]
[41.15295029 423.58590698]
[43.37806702 408.75186157]
[45.60318756 393.91781616]
[33.31130219 387.14663696]
[24.04928207 376.56393433]
[18.94503784 363.42749023]
[18.63069534 349.30789185]
[23.16440010 335.90069580]
[32.02087402 324.82296753]
[44.15219498 317.41809082]
[58.11176682 314.59295654]
[60.55749512 299.79367065]
[63.00322342 284.99441528]
[65.44895172 270.19512939]
[59.89035034 256.37661743]
[69.77420807 244.02268982]
[72.21994019 229.22341919]
[74.66566467 214.42414856]
[61.08259201 206.26165771]
[51.64893341 193.48062134]
[47.83301163 178.02055359]
[50.24785995 162.24168396]
[58.55293655 148.56465149]
[71.50181580 139.09907532]
[87.12915802 135.31826782]
[89.35427094 120.48422241]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[98.73086548 60.99616623]
[100.95598602 46.16212082]
[103.18109894 31.32807732]
[104.74162292 16.40947342]
[105.63443756 1.43606699]
[106.52725220 -13.53733921]
[107.42007446 -28.51074409]
[108.31288910 -43.48414993]
[109.20570374 -58.45755768]
[101.24374390 -68.60497284]
[102.29563141 -81.05797577]
[111.25398254 -89.18659973]
[112.36962891 -104.14505768]
[105.68016815 -118.48247528]
[114.34265137 -130.59902954]
[114.23098755 -145.59860229]
[112.89275360 -160.53878784]
[111.55451965 -175.47897339]
[110.21628571 -190.41915894]
[108.87805176 -205.35934448]
[94.01157379 -207.93818665]
[80.31951904 -214.27775574]
[68.73543549 -223.94581604]
[60.04914474 -236.28318787]
[54.85289001 -250.44868469]
[53.50095749 -265.47647095]
[56.08552933 -280.34194946]
[62.43038177 -294.03155518]
[72.10292053 -305.61190796]
[84.44364166 -314.29342651]
[98.61114502 -319.48422241]
[113.63946533 -320.83035278]
[128.50393677 -318.24005127]
[142.19108582 -311.88989258]
[153.76770020 -302.21289062]
[162.44447327 -289.86883545]
[167.62979126 -275.69931030]
[168.97010803 -260.67047119]
[166.37406921 -245.80700684]
[160.01863098 -232.12229919]
[150.33715820 -220.54942322]
[137.98974609 -211.87742615]
[123.81822968 -206.69758606]
[125.15647125 -191.75740051]
[126.49470520 -176.81721497]
[127.83293915 -161.87702942]
[129.17117310 -146.93684387]
[136.49014282 -160.03007507]
[149.00486755 -168.29940796]
[163.91949463 -169.89746094]
[177.90206909 -164.46722412]
[187.82885742 -153.22183228]
[191.48217773 -138.67352295]
[188.04588318 -124.07243347]
[178.28762817 -112.68048096]
[164.38745117 -107.04265594]
[149.45068359 -108.41847229]
[136.81422424 -116.50055695]
[129.30110168 -129.48338318]
[136.07035828 -116.21588135]
[127.32808685 -103.02940369]
[126.21243286 -88.07095337]
[134.67303467 -72.69612885]
[124.17910767 -57.56473923]
[123.28629303 -42.59133530]
[122.39347839 -27.61792946]
[121.50066376 -12.64452267]
[120.60784149 2.32888269]
[119.71502686 17.30228806]
[131.62379456 8.18190193]
[146.51113892 10.01679802]
[155.84892273 21.75586510]
[154.28804016 36.67443085]
[142.72264099 46.22646713]
[127.77789307 44.94012833]
[118.01514435 33.55319595]
[115.79002380 48.38723755]
[113.56491089 63.22128296]
[115.68140411 70.30239868]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[104.18831635 122.70934296]
[101.96320343 137.54338074]
[114.37693024 144.52552795]
[123.64233398 155.30299377]
[128.66189575 168.56787109]
[128.85173035 182.71957397]
[124.20941925 196.05792236]
[115.31187439 206.98738098]
[103.24367523 214.20797729]
[89.46493530 216.86987305]
[87.01921082 231.66914368]
[84.57347870 246.46841431]
[89.95714569 261.34545898]
[80.24822235 272.64086914]
[77.80249023 287.44015503]
[75.35676575 302.23941040]
[72.91104126 317.03869629]
[86.61771393 325.44317627]
[96.02716064 338.43289185]
[99.72250366 354.00143433]
[97.16668701 369.75808716]
[88.78025055 383.29479980]
[75.87252045 392.55435181]
[60.43722916 396.14294434]
[58.21211243 410.97698975]
[55.98699570 425.81100464]
[53.76187897 440.64505005]
[55.58365250 449.59597778]
[51.39161682 455.68273926]
[48.94589233 470.48202515]
[46.50016403 485.28128052]
[44.05443573 500.08056641]
[57.58265305 493.60079956]
[71.14929962 499.99969482]
[74.75355530 514.56024170]
[65.73848724 526.54895020]
[50.74967575 527.12817383]
[40.83676529 515.87249756]
[37.29709244 530.44885254]
[33.75741959 545.02526855]
[47.82993698 550.26934814]
[61.18342590 557.14111328]
[73.63041687 565.54400635]
[84.99618530 575.36010742]
[95.12117004 586.45159912]
[103.86322784 598.66271973]
[111.09963989 611.82220459]
[116.72881317 625.74511719]
[120.67172241 640.23614502]
[122.87302399 655.09179688]
[123.30180359 670.10357666]
[121.95204926 685.06066895]
[118.84270477 699.75311279]
[114.01742554 713.97467041]
[107.54394531 727.52569580]
[99.51314545 740.21594238]
[90.03776550 751.86730957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 193]
[35 192]
[36 191]
[37 185]
[38 184]
[39 183]
[40 182]
[41 180]
[42 179]
[43 178]
[44 177]
[52 170]
[53 169]
[54 168]
[55 167]
[57 165]
[58 164]
[59 163]
[66 155]
[67 154]
[68 153]
[70 152]
[71 151]
[72 149]
[73 148]
[74 147]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[83 133]
[84 132]
[86 130]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
