%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[170.52709961 502.24734497]
[170.30377197 487.24899292]
[170.08044434 472.25067139]
[169.85711670 457.25231934]
[169.63378906 442.25399780]
[158.80049133 432.09646606]
[158.36033630 416.88922119]
[169.08793640 405.59512329]
[168.86460876 390.59677124]
[168.64128113 375.59844971]
[168.41795349 360.60009766]
[168.19462585 345.60177612]
[167.97129822 330.60342407]
[165.41546631 315.82278442]
[153.99476624 306.26156616]
[156.88070679 290.70578003]
[152.05470276 276.50332642]
[147.22871399 262.30087280]
[142.40270996 248.09841919]
[137.57670593 233.89596558]
[124.14419556 227.56326294]
[119.04763031 213.22869873]
[125.78102875 199.18237305]
[120.95503235 184.97991943]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[70.22221375 77.93478394]
[56.37189484 76.07183075]
[43.29510498 71.16465759]
[31.65154839 63.46458054]
[22.02778625 53.36369324]
[14.90769291 41.37495041]
[10.64811897 28.10607338]
[9.46101856 14.22878361]
[11.40289593 0.44477177]
[16.37213326 -12.54977226]
[24.11429977 -24.09932327]
[34.23517227 -33.62208557]
[46.22081375 -40.63931274]
[41.81981277 -54.97916031]
[37.41881561 -69.31900787]
[33.01781845 -83.65885925]
[28.61682129 -97.99870300]
[24.21582222 -112.33854675]
[14.32806587 -116.87075806]
[8.68314648 -125.91040039]
[8.93999863 -136.34507751]
[14.77245998 -144.73527527]
[10.80036354 -159.19979858]
[6.82826710 -173.66432190]
[2.85617089 -188.12884521]
[-1.11592531 -202.59336853]
[-12.23139000 -213.85200500]
[-8.14056301 -228.17382812]
[-11.85563755 -231.84060669]
[-13.61661434 -236.13621521]
[-13.51119614 -240.21101379]
[-11.95158672 -243.37327576]
[-15.27384663 -258.00073242]
[-18.59610558 -272.62820435]
[-21.91836548 -287.25564575]
[-25.24062538 -301.88311768]
[-40.14543915 -300.08020020]
[-55.15663528 -299.81936646]
[-70.11508179 -301.10342407]
[-84.86222076 -303.91876221]
[-99.24171448 -308.23547363]
[-113.10114288 -314.00787354]
[-126.29357147 -321.17471313]
[-138.67916870 -329.66006470]
[-150.12663269 -339.37393188]
[-160.51461792 -350.21340942]
[-169.73300171 -362.06350708]
[-177.68406677 -374.79870605]
[-184.28352356 -388.28390503]
[-189.46142578 -402.37622070]
[-193.16287231 -416.92626953]
[-195.34861755 -431.77975464]
[-195.99551392 -446.77926636]
[-195.09669495 -461.76580811]
[-192.66169739 -476.58050537]
[-188.71630859 -491.06628418]
[-183.30236816 -505.06961060]
[-176.47726440 -518.44201660]
[-168.31335449 -531.04180908]
[-158.89717102 -542.73541260]
[-148.32853699 -553.39880371]
[-136.71948242 -562.91894531]
[-124.19306183 -571.19500732]
[-110.88208008 -578.13922119]
[-96.92762756 -583.67791748]
[-82.47763062 -587.75244141]
[-67.68527985 -590.31958008]
[-52.70736313 -591.35211182]
[-37.70266724 -590.83911133]
[-22.83024979 -588.78607178]
[-8.24776268 -585.21459961]
[5.89020920 -580.16271973]
[19.43379593 -573.68389893]
[32.23942947 -565.84680176]
[44.17136002 -556.73455811]
[55.10310364 -546.44372559]
[64.91877747 -535.08343506]
[73.51432800 -522.77404785]
[80.79864502 -509.64611816]
[86.69450378 -495.83877563]
[91.13940430 -481.49838257]
[94.08623505 -466.77694702]
[95.50375366 -451.83056641]
[95.37693024 -436.81762695]
[93.70710754 -421.89730835]
[90.51200104 -407.22778320]
[85.82546234 -392.96453857]
[79.69718933 -379.25875854]
[72.19213104 -366.25573730]
[63.38985062 -354.09335327]
[53.38365555 -342.90048218]
[42.27961731 -332.79580688]
[30.19544792 -323.88644409]
[17.25924301 -316.26681519]
[3.60813665 -310.01773071]
[-10.61316490 -305.20538330]
[-7.29090500 -290.57791138]
[-3.96864557 -275.95046997]
[-0.64638597 -261.32299805]
[2.67587352 -246.69554138]
[6.32396126 -232.14591980]
[17.15531540 -221.92187500]
[13.34859848 -206.56546021]
[17.32069397 -192.10093689]
[21.29279137 -177.63641357]
[25.26488686 -163.17189026]
[29.23698425 -148.70736694]
[43.95133591 -136.16246033]
[38.55566788 -116.73954773]
[42.95666885 -102.39970398]
[47.35766602 -88.05985260]
[51.75866318 -73.72000885]
[56.15966034 -59.38016129]
[60.56066132 -45.04031372]
[76.61145020 -45.81407547]
[92.32933807 -42.42000961]
[106.64978027 -35.08232498]
[118.60143280 -24.29251289]
[127.37202454 -10.77643204]
[132.36355591 4.55452204]
[133.23306274 20.66487694]
[129.91619873 36.46501541]
[122.63195038 50.88486481]
[111.86817932 62.94639206]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[135.15748596 180.15393066]
[139.98348999 194.35638428]
[153.88067627 201.39242554]
[158.57260132 215.86447144]
[151.77917480 229.06996155]
[156.60516357 243.27241516]
[161.43116760 257.47488403]
[166.25715637 271.67733765]
[171.08316040 285.87979126]
[182.84904480 296.45684814]
[179.61791992 310.99676514]
[181.72035217 296.14483643]
[187.70118713 282.38876343]
[197.12866211 270.72161865]
[209.32221985 261.98562622]
[223.40156555 256.81149292]
[238.35032654 255.57270813]
[253.08932495 258.35873413]
[266.55453491 264.96841431]
[277.77392578 274.92459106]
[285.93750000 287.50854492]
[290.45599365 301.81179810]
[291.00314331 316.80181885]
[287.53948975 331.39645386]
[280.31506348 344.54208374]
[269.85144043 355.28973389]
[256.90393066 362.86352539]
[242.40727234 366.71667480]
[227.40797424 366.57104492]
[212.98886108 362.43716431]
[200.19085693 354.61340332]
[189.93785095 343.66461182]
[182.96963501 330.38009644]
[183.19296265 345.37844849]
[183.41629028 360.37677002]
[183.63961792 375.37512207]
[183.86294556 390.37344360]
[184.08627319 405.37179565]
[195.14537048 416.34146118]
[195.15820312 431.55511475]
[184.63212585 442.03067017]
[184.85545349 457.02899170]
[185.07878113 472.02734375]
[185.30210876 487.02566528]
[185.52543640 502.02401733]
[188.00276184 521.24670410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 205]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[14 175]
[16 173]
[17 172]
[18 171]
[19 170]
[20 169]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[31 158]
[32 157]
[45 146]
[46 145]
[47 144]
[48 143]
[49 142]
[50 141]
[54 139]
[55 138]
[56 137]
[57 136]
[58 135]
[60 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
