%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[26.33324623 509.54385376]
[17.40096664 522.37927246]
[2.29454207 526.42028809]
[-11.85323334 519.75891113]
[-18.36221313 505.54034424]
[-14.15905666 490.47821045]
[-1.22836494 481.68441772]
[0.10986920 466.74423218]
[1.44810343 451.80404663]
[-0.87242717 447.62979126]
[-0.59536862 441.95352173]
[3.05509400 436.44119263]
[4.83756018 421.54748535]
[6.62002611 406.65374756]
[8.40249157 391.76004028]
[6.20727253 387.51858521]
[6.65321255 381.85305786]
[10.46617889 376.45187378]
[12.69129658 361.61782837]
[14.91641331 346.78378296]
[17.14153099 331.94973755]
[15.07356834 327.64477539]
[15.68799496 321.99505615]
[19.66008377 316.70977783]
[22.32588005 301.94857788]
[16.97363472 288.04882812]
[27.04032898 275.84341431]
[29.70612526 261.08218384]
[18.84518814 271.42822266]
[4.28990459 275.05364990]
[-10.15500736 271.01080322]
[-20.71368408 260.35650635]
[-24.62611198 245.87571716]
[-20.86959076 231.35371399]
[-10.42606831 220.58650208]
[3.97454500 216.38861084]
[18.56796265 219.85734558]
[29.53950119 230.08599854]
[34.02118683 244.39993286]
[38.84718323 230.19747925]
[43.67318344 215.99502563]
[29.26948357 220.18231201]
[16.92771339 211.65701294]
[15.74576759 196.70365906]
[26.59493256 186.34529114]
[41.47760391 188.21772766]
[49.42264557 200.93904114]
[55.29160690 187.13485718]
[61.16056824 173.33067322]
[67.02952576 159.52650452]
[72.89849091 145.72232056]
[78.76744843 131.91815186]
[84.53348541 118.07066345]
[90.19627380 104.18064117]
[94.59726715 89.84078979]
[97.70137787 75.16548920]
[100.80548859 60.49018478]
[96.09149170 45.38757706]
[106.29509735 34.53696823]
[109.39920807 19.86166573]
[112.50331879 5.18636322]
[107.78932190 -9.91624641]
[117.99292755 -20.76685524]
[121.09703064 -35.44215775]
[114.72844696 -46.65839005]
[117.61598969 -58.81758118]
[127.68103790 -65.52738190]
[131.00329590 -80.15483856]
[134.32554626 -94.78230286]
[137.64781189 -109.40975952]
[140.97007751 -124.03722382]
[144.29232788 -138.66468811]
[147.61459351 -153.29214478]
[150.93684387 -167.91960144]
[153.71246338 -182.66056824]
[155.16188049 -197.59037781]
[155.83166504 -212.57540894]
[156.50144958 -227.56045532]
[157.17123413 -242.54548645]
[157.84101868 -257.53051758]
[158.17599487 -272.52679443]
[158.17599487 -287.52679443]
[158.17599487 -302.52679443]
[158.17599487 -317.52679443]
[158.17599487 -332.52679443]
[157.84101868 -347.52304077]
[157.17123413 -362.50808716]
[156.50144958 -377.49313354]
[155.83166504 -392.47814941]
[144.91163635 -400.36279297]
[140.58961487 -412.91390991]
[144.23161316 -425.47647095]
[154.29280090 -433.52645874]
[153.84619141 -448.51980591]
[153.39959717 -463.51315308]
[138.87413025 -467.73999023]
[126.36689758 -476.25024414]
[117.10323334 -488.21014404]
[111.99068451 -502.44802856]
[111.53014374 -517.56896973]
[115.76670837 -532.09161377]
[124.28533936 -544.59313965]
[136.25146484 -553.84875488]
[150.49276733 -558.95178223]
[165.61401367 -559.40222168]
[180.13380432 -555.15588379]
[192.62960815 -546.62890625]
[201.87724304 -534.65655518]
[206.97070312 -520.41186523]
[207.41098022 -505.29031372]
[203.15495300 -490.77337646]
[194.61958313 -478.28326416]
[182.64106750 -469.04367065]
[168.39294434 -463.95974731]
[168.83955383 -448.96640015]
[169.28614807 -433.97305298]
[182.00852966 -422.97396851]
[182.85615540 -405.83932495]
[170.81671143 -393.14794922]
[171.48649597 -378.16290283]
[172.15628052 -363.17785645]
[172.82606506 -348.19284058]
[175.16738892 -345.55645752]
[176.34806824 -341.65502930]
[175.78746033 -337.04644775]
[173.17599487 -332.52679443]
[173.17599487 -317.52679443]
[173.17599487 -302.52679443]
[173.17599487 -287.52679443]
[173.17599487 -272.52679443]
[175.39726257 -269.78848267]
[176.40257263 -265.83822632]
[175.63673401 -261.25927734]
[172.82606506 -256.86074829]
[172.15628052 -241.87570190]
[171.48649597 -226.89067078]
[170.81671143 -211.90562439]
[170.14692688 -196.92059326]
[181.15713501 -207.10760498]
[196.13290405 -207.95967102]
[208.22753906 -199.08723450]
[211.91149902 -184.54666138]
[205.50056458 -170.98570251]
[191.92568970 -164.60423279]
[177.39315796 -168.31979370]
[168.54650879 -180.43544006]
[181.97674561 -187.11590576]
[195.63716125 -180.91969299]
[199.45780945 -166.41442871]
[190.62223816 -154.29284668]
[175.64370728 -153.49053955]
[165.56431580 -164.59733582]
[162.24205017 -149.96987915]
[158.91979980 -135.34242249]
[155.59753418 -120.71495819]
[152.27526855 -106.08750153]
[148.95301819 -91.46004486]
[145.63075256 -76.83258057]
[142.30850220 -62.20512009]
[148.39477539 -45.74534607]
[135.77233887 -32.33804703]
[132.66822815 -17.66274452]
[137.60424805 -3.60981154]
[127.17861938 8.29047298]
[124.07450867 22.96577644]
[120.97039795 37.64107895]
[125.90642548 51.69401169]
[115.48078918 63.59429550]
[112.37667847 78.26959991]
[109.27257538 92.94490051]
[119.83442688 82.29373932]
[133.94252014 77.19848633]
[148.87281799 78.64295959]
[161.74247742 86.34824371]
[170.06661987 98.82658386]
[172.23793030 113.66859436]
[167.83720398 128.00852966]
[157.71414185 139.07756042]
[143.82333374 144.73843384]
[128.84687805 143.89811707]
[115.67652130 136.71888733]
[106.85522461 124.58690643]
[104.08629608 109.84342194]
[98.42350769 123.73345184]
[98.08161163 132.86148071]
[92.57162476 137.78710938]
[86.70266724 151.59129333]
[80.83370972 165.39546204]
[74.96474457 179.19964600]
[69.09578705 193.00381470]
[63.22682571 206.80799866]
[57.87563705 220.82101440]
[53.04964066 235.02346802]
[48.22364426 249.22593689]
[44.46734238 263.74798584]
[41.80154800 278.50921631]
[46.96311569 293.46475220]
[37.08709717 304.61434937]
[34.42130280 319.37557983]
[31.97557449 334.17486572]
[29.75045776 349.00888062]
[27.52533913 363.84292603]
[25.30022240 378.67697144]
[23.29620934 393.54251099]
[21.51374245 408.43621826]
[19.73127747 423.32995605]
[17.94881058 438.22366333]
[16.38828850 453.14227295]
[15.05005455 468.08245850]
[13.71181965 483.02264404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[12 207]
[13 206]
[14 205]
[15 204]
[18 203]
[19 202]
[20 201]
[21 200]
[24 199]
[25 198]
[27 196]
[28 195]
[39 194]
[40 193]
[41 192]
[47 191]
[48 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 184]
[54 183]
[55 170]
[56 169]
[57 168]
[59 166]
[60 165]
[61 164]
[63 162]
[64 161]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 146]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 122]
[87 121]
[88 120]
[89 119]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
