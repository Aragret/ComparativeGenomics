%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[51.07486725 238.13008118]
[56.58738327 252.09892273]
[60.44090271 266.61331177]
[62.58331680 281.47689819]
[62.98564911 296.48870850]
[61.64245987 311.44573975]
[58.57191086 326.14566040]
[53.81552887 340.38973999]
[47.43764114 353.98529053]
[39.52449799 366.74847412]
[30.18311882 378.50665283]
[19.53983116 389.10086060]
[7.73857737 398.38778687]
[-5.06104612 406.24182129]
[-18.68593979 412.55679321]
[-32.95183945 417.24728394]
[-47.66581726 420.24984741]
[-62.62888336 421.52386475]
[-77.63867950 421.05212402]
[-92.49221802 418.84103394]
[-106.98861694 414.92044067]
[-120.93183136 409.34341431]
[-134.13328552 402.18536377]
[-146.41447449 393.54306030]
[-157.60926819 383.53341675]
[-167.56629944 372.29180908]
[-176.15090942 359.97021484]
[-183.24697876 346.73532104]
[-188.75856018 332.76611328]
[-192.61111450 318.25149536]
[-194.75253296 303.38775635]
[-195.15386963 288.37591553]
[-193.80967712 273.41897583]
[-190.73814392 258.71923828]
[-185.98081970 244.47549438]
[-179.60202026 230.88037109]
[-171.68803406 218.11772156]
[-162.34585571 206.36015320]
[-151.70187378 195.76666260]
[-139.89999390 186.48052979]
[-127.09984589 178.62733459]
[-113.47453308 172.31327820]
[-99.20832062 167.62374878]
[-84.49414062 164.62217712]
[-69.53099060 163.34913635]
[-54.52122498 163.82186890]
[-39.66783524 166.03396606]
[-25.17169952 169.95552063]
[-11.22885704 175.53347778]
[1.97212732 182.69242859]
[14.25272751 191.33554077]
[24.25089836 180.15356445]
[34.24907303 168.97158813]
[44.24724197 157.78961182]
[54.24541473 146.60763550]
[63.82053375 135.06134033]
[72.95933533 123.16670990]
[82.09813690 111.27207184]
[91.23693848 99.37744141]
[91.09855652 96.33271790]
[92.06495667 93.17034149]
[94.18186188 90.29942322]
[97.34320068 88.14021301]
[101.29087830 87.06839752]
[111.12145996 75.73880768]
[120.95204163 64.40921021]
[130.78262329 53.07962036]
[140.61320496 41.75002670]
[150.35917664 30.34756470]
[159.67405701 18.59031296]
[168.63475037 6.56093502]
[177.59544373 -5.46844244]
[186.55613708 -17.49781990]
[195.51683044 -29.52719879]
[204.47753906 -41.55657578]
[213.43823242 -53.58595276]
[222.39892578 -65.61533356]
[210.94607544 -75.30959320]
[200.11807251 -85.69712830]
[189.95680237 -96.73774719]
[180.50158691 -108.38873291]
[171.78900146 -120.60500336]
[163.85275269 -133.33930969]
[156.72355652 -146.54237366]
[150.42897034 -160.16311646]
[144.99336243 -174.14884949]
[140.43775940 -188.44546509]
[136.77978516 -202.99763489]
[134.03359985 -217.74906921]
[132.20980835 -232.64270020]
[131.31549072 -247.62091064]
[131.35409546 -262.62573242]
[132.32546997 -277.59915161]
[134.22586060 -292.48321533]
[137.04791260 -307.22033691]
[140.78071594 -321.75347900]
[145.40982056 -336.02645874]
[150.91731262 -349.98403931]
[157.28189087 -363.57220459]
[164.47894287 -376.73843384]
[172.48060608 -389.43173218]
[181.25593567 -401.60299683]
[190.77098083 -413.20520020]
[200.98892212 -424.19338989]
[211.87022400 -434.52505493]
[223.37280273 -444.16027832]
[235.45214844 -453.06173706]
[248.06152344 -461.19497681]
[261.15216064 -468.52859497]
[274.67340088 -475.03417969]
[288.57293701 -480.68655396]
[302.79699707 -485.46389771]
[317.29052734 -489.34765625]
[331.99749756 -492.32284546]
[346.86096191 -494.37796021]
[361.82345581 -495.50503540]
[376.82708740 -495.69970703]
[391.81378174 -494.96124268]
[406.72558594 -493.29248047]
[421.50479126 -490.69989014]
[436.09423828 -487.19348145]
[450.43743896 -482.78683472]
[464.47897339 -477.49700928]
[478.16445923 -471.34445190]
[491.44094849 -464.35296631]
[504.25714111 -456.54959106]
[516.56335449 -447.96456909]
[528.31207275 -438.63104248]
[539.45776367 -428.58517456]
[549.95739746 -417.86581421]
[559.77026367 -406.51440430]
[568.85845947 -394.57492065]
[577.18676758 -382.09350586]
[584.72302246 -369.11846924]
[591.43798828 -355.70001221]
[597.30578613 -341.89001465]
[602.30371094 -327.74197388]
[606.41229248 -313.31054688]
[609.61578369 -298.65161133]
[611.90173340 -283.82189941]
[613.26129150 -268.87872314]
[613.68920898 -253.87994385]
[613.18383789 -238.88357544]
[611.74707031 -223.94763184]
[609.38458252 -209.12991333]
[606.10540771 -194.48771667]
[601.92230225 -180.07772827]
[596.85137939 -165.95567322]
[590.91235352 -152.17617798]
[584.12811279 -138.79258728]
[576.52496338 -125.85665131]
[568.13226318 -113.41842651]
[558.98254395 -101.52603149]
[549.11114502 -90.22548676]
[538.55633545 -79.56050110]
[527.35888672 -69.57233429]
[515.56213379 -60.29963684]
[503.21166992 -51.77827454]
[490.35537720 -44.04122543]
[477.04293823 -37.11841583]
[463.32583618 -31.03662872]
[449.25720215 -25.81939697]
[434.89138794 -21.48690224]
[420.28405762 -18.05590820]
[405.49163818 -15.53968716]
[390.57141113 -13.94797516]
[375.58111572 -13.28692913]
[360.57870483 -13.55910873]
[345.62222290 -14.76345825]
[330.76956177 -16.89532089]
[316.07815552 -19.94644547]
[301.60485840 -23.90503120]
[287.40567017 -28.75576019]
[273.53552246 -34.47986984]
[260.04806519 -41.05521011]
[246.99549866 -48.45634079]
[234.42829895 -56.65463638]
[225.46760559 -44.62525558]
[216.50691223 -32.59587860]
[207.54621887 -20.56650162]
[198.58552551 -8.53712463]
[189.62481689 3.49225330]
[180.66412354 15.52163124]
[171.70343018 27.55100822]
[171.97502136 30.34105873]
[171.15782166 33.40679932]
[169.14125061 36.33406448]
[165.96662903 38.67633820]
[161.83386230 40.00837326]
[159.93063354 47.14976501]
[151.94279480 51.58060837]
[142.11221313 62.91020203]
[132.28163147 74.23979187]
[122.45105743 85.56938934]
[112.62047577 96.89897919]
[103.13157654 108.51624298]
[93.99277496 120.41087341]
[84.85397339 132.30551147]
[75.71517181 144.20013428]
[90.70021820 144.86962891]
[99.64291382 156.91239929]
[95.95101929 171.45097351]
[82.34607697 177.76803589]
[68.85713196 171.20690918]
[65.42739105 156.60581970]
[55.42921829 167.78778076]
[45.43104553 178.96975708]
[35.43287277 190.15173340]
[25.43470192 201.33370972]
[35.39248276 212.57466125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 209]
[52 208]
[53 207]
[54 206]
[55 205]
[56 199]
[57 198]
[58 197]
[59 196]
[64 195]
[65 194]
[66 193]
[67 192]
[68 191]
[69 189]
[70 184]
[71 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[77 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
