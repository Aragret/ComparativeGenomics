%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[109.30792236 623.01525879]
[96.07112885 612.42175293]
[102.58638000 596.76965332]
[103.03298187 581.77630615]
[103.47959137 566.78295898]
[96.12465668 553.83093262]
[104.26940918 540.26727295]
[104.71601868 525.27392578]
[90.16419983 518.99932861]
[79.10755157 507.59320068]
[73.26036072 492.78152466]
[73.54548645 476.82150269]
[79.94884491 462.15750122]
[91.51703644 451.04681396]
[106.49916077 445.21206665]
[106.72248840 430.21371460]
[106.94581604 415.21539307]
[107.16914368 400.21704102]
[107.39247131 385.21871948]
[99.84552002 372.37765503]
[107.78742218 358.69421387]
[104.74385834 351.95935059]
[108.12738800 343.47467041]
[108.57398987 328.48132324]
[109.02059937 313.48797607]
[109.46720123 298.49462891]
[109.91381073 283.50128174]
[110.36042023 268.50793457]
[99.99147797 257.87680054]
[100.23081207 242.66505432]
[111.45201111 231.86123657]
[111.89861298 216.86788940]
[110.78296661 201.90943909]
[108.11717224 187.14822388]
[105.45137787 172.38699341]
[102.78558350 157.62577820]
[100.11978149 142.86456299]
[97.45398712 128.10334778]
[94.78819275 113.34213257]
[85.90407562 102.54564667]
[90.45059204 89.32366180]
[86.28990936 103.73507690]
[78.84397888 116.75652313]
[68.53390503 127.65158844]
[55.94277573 135.80409241]
[41.78267288 140.75299072]
[26.85442543 142.21836853]
[12.00229263 140.11738586]
[-1.93376279 134.56883240]
[-14.16558933 125.88653564]
[-24.00141716 114.56149292]
[-30.88498497 101.23420715]
[-34.42699051 86.65840149]
[-34.42711639 71.65840149]
[-30.88536072 57.08253098]
[-24.00201988 43.75513077]
[-14.16638470 32.42992783]
[-1.93470585 23.74741364]
[12.00125504 18.19862938]
[26.85335159 16.09738731]
[41.78162766 17.56251907]
[55.94181442 22.51116943]
[68.53308105 30.66346359]
[78.84333801 41.55834961]
[86.28948975 54.57967377]
[90.45059204 68.99207306]
[93.11638641 54.23085403]
[95.78218079 39.46963882]
[98.44797516 24.70842171]
[100.89369965 9.90915012]
[103.11882019 -4.92489338]
[105.34394073 -19.75893784]
[107.56905365 -34.59297943]
[105.50860596 -40.87518311]
[106.74455261 -46.42220688]
[110.08760834 -49.83293152]
[112.75340271 -64.59414673]
[115.41919708 -79.35536194]
[118.08499146 -94.11658478]
[120.75079346 -108.87779999]
[115.58921814 -123.83335876]
[125.46524048 -134.98295593]
[120.30367279 -149.93852234]
[130.17968750 -161.08811951]
[132.84548950 -175.84933472]
[134.84950256 -190.71485901]
[136.18772888 -205.65504456]
[137.52597046 -220.59523010]
[138.86419678 -235.53541565]
[124.28616333 -239.19973755]
[110.46087646 -245.09956360]
[97.72880554 -253.08961487]
[86.40348816 -262.97311401]
[76.76381683 -274.50668335]
[69.04718781 -287.40631104]
[63.44361877 -301.35430908]
[60.09110641 -316.00720215]
[59.07221222 -331.00411987]
[60.41202164 -345.97583008]
[64.07754517 -360.55355835]
[69.97851562 -374.37835693]
[77.96961212 -387.10977173]
[87.85404968 -398.43426514]
[99.38842010 -408.07299805]
[112.28867340 -415.78854370]
[126.23712921 -421.39096069]
[140.89028931 -424.74227905]
[155.88732910 -425.75991821]
[170.85890198 -424.41888428]
[185.43632507 -420.75216675]
[199.26065063 -414.85003662]
[211.99139404 -406.85791016]
[223.31507874 -396.97253418]
[232.95285034 -385.43734741]
[240.66734314 -372.53646851]
[246.26861572 -358.58755493]
[249.61871338 -343.93411255]
[250.63513184 -328.93701172]
[249.29284668 -313.96554565]
[245.62492371 -299.38839722]
[239.72166443 -285.56457520]
[231.72846985 -272.83447266]
[221.84216309 -261.51162720]
[210.30619812 -251.87480164]
[197.40467834 -244.16136169]
[183.45530701 -238.56124878]
[168.80157471 -235.21237183]
[153.80438232 -234.19717407]
[152.46615601 -219.25698853]
[151.12791443 -204.31681824]
[149.78968811 -189.37663269]
[161.96470642 -198.13839722]
[176.79083252 -195.86106873]
[185.77496338 -183.84918213]
[183.77058411 -168.98370361]
[171.92591858 -159.78024292]
[157.02609253 -161.51097107]
[147.60670471 -173.18353271]
[144.94090271 -158.42231750]
[150.29315186 -144.52258301]
[140.22645569 -132.31715393]
[145.57870483 -118.41741943]
[135.51200867 -106.21200562]
[132.84620667 -91.45078278]
[130.18041992 -76.68956757]
[127.51461792 -61.92835236]
[124.84882355 -47.16713333]
[122.40309906 -32.36786270]
[120.17797852 -17.53381920]
[117.95286560 -2.69977593]
[115.72774506 12.13426781]
[117.79570770 16.43921661]
[117.18128204 22.08895111]
[113.20919037 27.37421608]
[110.54339600 42.13543320]
[107.87760162 56.89665222]
[105.21180725 71.65786743]
[105.21180725 86.65786743]
[114.09592438 97.45435333]
[109.54940796 110.67633820]
[112.21520996 125.43755341]
[114.88100433 140.19877625]
[117.54679871 154.95999146]
[120.21259308 169.72120667]
[122.87838745 184.48242188]
[125.54418182 199.24363708]
[130.74595642 185.17446899]
[140.87927246 174.11482239]
[154.44093323 167.70532227]
[169.41911316 166.89680481]
[183.59193420 171.80917358]
[194.85690308 181.71374512]
[201.54295349 195.14120483]
[202.65823364 210.09968567]
[198.03730774 224.37017822]
[188.36564636 235.83575439]
[175.07801819 242.79554749]
[160.14552307 244.21711731]
[145.78334045 239.88957214]
[134.12199402 230.45491028]
[126.89196777 217.31449890]
[126.44535828 232.30784607]
[137.00360107 243.76040649]
[136.33709717 258.95944214]
[125.35376740 268.95452881]
[124.90715790 283.94787598]
[124.46055603 298.94122314]
[124.01394653 313.93457031]
[123.56734467 328.92791748]
[123.12073517 343.92126465]
[122.78575897 358.91754150]
[130.31674194 372.83139038]
[122.39080811 385.44204712]
[122.16748047 400.44036865]
[121.94415283 415.43872070]
[121.72082520 430.43704224]
[121.49749756 445.43539429]
[134.73275757 450.69647217]
[145.35498047 460.13943481]
[152.10173035 472.61477661]
[154.18055725 486.61425781]
[151.36187744 500.45324707]
[144.00428772 512.47344971]
[133.00895691 521.24163818]
[119.70936584 525.72052002]
[119.26275635 540.71386719]
[126.58574677 554.73828125]
[118.47293854 567.22955322]
[118.02632904 582.22290039]
[117.57972717 597.21624756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[7 206]
[8 205]
[15 197]
[16 196]
[17 195]
[18 194]
[19 193]
[21 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[31 182]
[32 181]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[41 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 151]
[71 150]
[72 149]
[73 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[82 141]
[84 139]
[85 138]
[86 131]
[87 130]
[88 129]
[89 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
