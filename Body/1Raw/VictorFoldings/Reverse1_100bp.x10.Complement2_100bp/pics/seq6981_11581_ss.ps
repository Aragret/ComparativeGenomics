%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[69.34466553 645.76855469]
[54.67012024 648.90515137]
[39.81413651 651.02185059]
[24.84751892 652.10864258]
[9.84158611 652.16021729]
[-5.13214970 651.17633057]
[-20.00233078 649.16180420]
[-34.69809341 646.12615967]
[-49.14940643 642.08386230]
[-63.28739929 637.05413818]
[-77.04470062 631.06103516]
[-90.35574341 624.13305664]
[-103.15710449 616.30328369]
[-115.38777161 607.60894775]
[-126.98946381 598.09149170]
[-137.90689087 587.79632568]
[-148.08802795 576.77252197]
[-157.48434448 565.07250977]
[-166.05108643 552.75213623]
[-173.74740601 539.87005615]
[-180.53663635 526.48773193]
[-186.38641357 512.66888428]
[-191.26889038 498.47937012]
[-195.16076660 483.98681641]
[-198.04350281 469.26031494]
[-199.90338135 454.36999512]
[-200.73150635 439.38684082]
[-200.52395630 424.38226318]
[-199.28172302 409.42773438]
[-197.01069641 394.59454346]
[-193.72174072 379.95339966]
[-189.43049622 365.57403564]
[-184.15742493 351.52502441]
[-177.92764282 337.87326050]
[-170.77085876 324.68380737]
[-162.72117615 312.01956177]
[-153.81694031 299.94085693]
[-144.10060120 288.50524902]
[-133.61845398 277.76721191]
[-122.42044067 267.77795410]
[-110.55994415 258.58505249]
[-98.09347534 250.23234558]
[-85.08044434 242.75962830]
[-71.58286285 236.20248413]
[-57.66506195 230.59219360]
[-43.39336014 225.95547485]
[-28.83576775 222.31442261]
[-14.06166267 219.68640137]
[0.85854989 218.08392334]
[15.85376835 217.51464844]
[30.85253334 217.98126221]
[45.78336716 219.48153687]
[60.57511902 222.00836182]
[64.11479187 207.43197632]
[67.65446472 192.85560608]
[71.19413757 178.27923584]
[74.73381042 163.70285034]
[78.27348328 149.12648010]
[76.76112366 145.94132996]
[76.71638489 141.86543274]
[78.54112244 137.59651184]
[82.31037903 133.98544312]
[86.49739075 119.58166504]
[90.68440247 105.17787933]
[93.56967163 90.45799255]
[95.13019562 75.53938293]
[96.69071960 60.62078094]
[98.25124359 45.70217514]
[99.81176758 30.78357124]
[101.37229156 15.86496639]
[100.36802673 0.89862204]
[96.82835388 -13.67775345]
[93.28868103 -28.25412941]
[89.74900818 -42.83050537]
[86.20934296 -57.40687943]
[82.66967010 -71.98325348]
[67.71219635 -70.54980469]
[52.70297241 -71.25968933]
[37.94756317 -74.09847260]
[23.74637222 -79.00836182]
[10.38851643 -85.88938141]
[-1.85405409 -94.60145569]
[-12.73209763 -104.96720886]
[-22.02415085 -116.77561951]
[-29.54103851 -129.78627014]
[-35.12973022 -143.73429871]
[-38.67644119 -158.33572388]
[-40.10897064 -173.29328918]
[-39.39814758 -188.30245972]
[-36.55845261 -203.05769348]
[-31.64768982 -217.25857544]
[-24.76584053 -230.61601257]
[-16.05301094 -242.85804749]
[-5.68657970 -253.73544312]
[6.12240410 -263.02676392]
[19.13352394 -270.54284668]
[33.08189011 -276.13067627]
[47.68353653 -279.67648315]
[62.64118576 -281.10809326]
[77.65032196 -280.39633179]
[92.40538025 -277.55572510]
[106.60596466 -272.64407349]
[119.96296692 -265.76141357]
[132.20445251 -257.04782104]
[143.08122253 -246.68072510]
[152.37181091 -234.87115479]
[159.88708496 -221.85957336]
[165.47404480 -207.91085815]
[169.01895142 -193.30900574]
[170.44963074 -178.35125732]
[169.73695374 -163.34216309]
[166.89543152 -148.58729553]
[161.98291016 -134.38700867]
[155.09941101 -121.03043365]
[146.38505554 -108.78948212]
[136.01728821 -97.91336060]
[124.20715332 -88.62349701]
[111.19509888 -81.10902405]
[97.24604034 -75.52292633]
[100.78571320 -60.94655228]
[104.32538605 -46.37017822]
[107.86505890 -31.79380035]
[111.40473175 -17.21742630]
[114.94440460 -2.64105034]
[118.26914978 -17.26794434]
[125.08152008 -30.63176537]
[134.96492004 -41.91530609]
[147.31498718 -50.42857742]
[161.37651062 -55.65098572]
[176.28962708 -57.26318359]
[191.14237976 -55.16658020]
[205.02651978 -49.48938751]
[217.09303284 -40.57876587]
[226.60404968 -28.97960091]
[232.97796631 -15.40118980]
[235.82501221 -0.67385638]
[234.97108459 14.30181789]
[230.46839905 28.61006355]
[222.59231567 41.37592697]
[211.82444763 51.81877136]
[198.82325745 59.30001068]
[184.38375854 63.36216354]
[169.38896179 63.75683212]
[154.75576782 60.45988083]
[141.37902832 53.67291641]
[130.07673645 43.81096649]
[121.54001617 31.47709274]
[116.29089355 17.42548943]
[114.73036957 32.34409332]
[113.16984558 47.26269913]
[111.60932159 62.18130493]
[110.04880524 77.09990692]
[108.48828125 92.01851654]
[117.88472748 80.32634735]
[131.38618469 73.79100800]
[146.38572693 73.67436981]
[159.98718262 79.99895477]
[169.56433105 91.54357910]
[173.26795959 106.07916260]
[170.38296509 120.79911041]
[161.46638489 132.86122131]
[148.23988342 139.93650818]
[133.25727844 140.65882874]
[119.41149902 134.88873291]
[109.37592316 123.74031067]
[105.08818054 109.36489105]
[100.90116882 123.76867676]
[96.71416473 138.17245483]
[92.84985352 152.66615295]
[89.31018066 167.24252319]
[85.77050781 181.81889343]
[82.23083496 196.39527893]
[78.69116974 210.97164917]
[75.15149689 225.54801941]
[89.45473480 230.08653259]
[103.41077423 235.60102844]
[116.95310211 242.06523132]
[130.01719666 249.44833374]
[142.54078674 257.71514893]
[154.46418762 266.82629395]
[165.73060608 276.73834229]
[176.28631592 287.40405273]
[186.08103943 298.77261353]
[195.06808472 310.78985596]
[203.20463562 323.39846802]
[210.45191956 336.53839111]
[216.77539062 350.14700317]
[222.14491272 364.15945435]
[226.53489685 378.50897217]
[229.92442322 393.12716675]
[232.29734802 407.94439697]
[233.64236450 422.89001465]
[233.95304871 437.89282227]
[233.22792053 452.88131714]
[231.47045898 467.78405762]
[228.68901062 482.53005981]
[224.89685059 497.04901123]
[220.11203003 511.27175903]
[214.35737610 525.13049316]
[207.66029358 538.55914307]
[200.05270386 551.49383545]
[191.57086182 563.87280273]
[182.25518799 575.63708496]
[172.15007019 586.73065186]
[161.30366516 597.10064697]
[149.76766968 606.69757080]
[137.59706116 615.47583008]
[124.84982300 623.39343262]
[111.58671570 630.41271973]
[97.87093353 636.50024414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[62 168]
[63 167]
[64 166]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 124]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
