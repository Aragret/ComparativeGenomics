%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[24.86138535 272.57644653]
[30.61552238 286.44979858]
[34.62113190 300.92510986]
[36.81748581 315.78295898]
[37.17129135 330.79809570]
[35.67718506 345.74288940]
[32.35781479 360.39080811]
[27.26350021 374.51977539]
[20.47147560 387.91558838]
[12.08470154 400.37521362]
[2.23032069 411.70968628]
[-8.94227695 421.74725342]
[-21.26371765 430.33572388]
[-34.54721069 437.34487915]
[-48.59138489 442.66848755]
[-63.18333054 446.22586060]
[-78.10183716 447.96301270]
[-93.12075043 447.85363770]
[-108.01237488 445.89941406]
[-122.55097198 442.12994385]
[-136.51612854 436.60238647]
[-149.69615173 429.40054321]
[-161.89120483 420.63354492]
[-172.91645813 410.43435669]
[-182.60473633 398.95755005]
[-190.80917358 386.37713623]
[-197.40541077 372.88381958]
[-202.29342651 358.68218994]
[-205.39913940 343.98748779]
[-206.67544556 329.02249146]
[-206.10302734 314.01409912]
[-203.69053650 299.18981934]
[-199.47456360 284.77438354]
[-193.51899719 270.98629761]
[-185.91415405 258.03463745]
[-176.77529907 246.11569214]
[-166.24098206 235.41018677]
[-154.47090149 226.08041382]
[-141.64347839 218.26779175]
[-127.95319366 212.09077454]
[-113.60757446 207.64299011]
[-98.82409668 204.99186707]
[-83.82687378 204.17761230]
[-68.84326935 205.21255493]
[-54.10041809 208.08100891]
[-39.82182693 212.73950195]
[-26.22395134 219.11738586]
[-13.51293468 227.11798096]
[-4.02403593 215.50071716]
[5.46486235 203.88345337]
[14.95376110 192.26618958]
[24.44265938 180.64892578]
[33.93155670 169.03166199]
[35.99032593 154.28002930]
[50.71263885 148.48658752]
[60.20153809 136.86932373]
[62.26030731 122.11768341]
[76.98262024 116.32423401]
[86.47151947 104.70697021]
[88.90633392 90.93876648]
[101.91121674 85.80413055]
[104.64869690 70.22154999]
[118.69229889 65.25904846]
[128.18119812 53.64178085]
[137.67010498 42.02452087]
[140.40757751 26.44194031]
[154.45117188 21.47943306]
[163.94007874 9.86216927]
[173.42897034 -1.75509441]
[182.91787720 -13.37235737]
[192.40676880 -24.98962021]
[201.89567566 -36.60688400]
[190.81587219 -46.72385025]
[180.31022644 -57.43581390]
[170.41062927 -68.71024323]
[161.14714050 -80.51290131]
[152.54791260 -92.80794525]
[144.63903809 -105.55803680]
[137.44456482 -118.72444153]
[130.98631287 -132.26718140]
[125.28391266 -146.14514160]
[120.35468292 -160.31614685]
[116.21358490 -174.73718262]
[112.87319946 -189.36444092]
[110.34367371 -204.15350342]
[108.63268280 -219.05946350]
[107.74542999 -234.03703308]
[107.68460846 -249.04074097]
[108.45040131 -264.02499390]
[110.04048157 -278.94433594]
[112.45001984 -293.75341797]
[115.67169952 -308.40728760]
[119.69574738 -322.86141968]
[124.50992584 -337.07192993]
[130.09962463 -350.99566650]
[136.44786072 -364.59033203]
[143.53535461 -377.81463623]
[151.34059143 -390.62841797]
[159.83984375 -402.99276733]
[169.00733948 -414.87014771]
[178.81520081 -426.22448730]
[189.23365784 -437.02127075]
[200.23106384 -447.22772217]
[211.77403259 -456.81286621]
[223.82749939 -465.74755859]
[236.35484314 -474.00469971]
[249.31803894 -481.55920410]
[262.67770386 -488.38812256]
[276.39328003 -494.47070312]
[290.42312622 -499.78848267]
[304.72457886 -504.32531738]
[319.25427246 -508.06744385]
[333.96801758 -511.00344849]
[348.82116699 -513.12445068]
[363.76861572 -514.42401123]
[378.76495361 -514.89819336]
[393.76464844 -514.54553223]
[408.72210693 -513.36706543]
[423.59194946 -511.36645508]
[438.32901001 -508.54974365]
[452.88851929 -504.92544556]
[467.22628784 -500.50460815]
[481.29873657 -495.30062866]
[495.06314087 -489.32934570]
[508.47769165 -482.60888672]
[521.50164795 -475.15966797]
[534.09545898 -467.00427246]
[546.22088623 -458.16748047]
[557.84112549 -448.67617798]
[568.92089844 -438.55911255]
[579.42645264 -427.84707642]
[589.32598877 -416.57260132]
[598.58935547 -404.76986694]
[607.18853760 -392.47476196]
[615.09729004 -379.72460938]
[622.29168701 -366.55816650]
[628.74981689 -353.01535034]
[634.45214844 -339.13735962]
[639.38128662 -324.96633911]
[643.52227783 -310.54525757]
[646.86254883 -295.91796875]
[649.39196777 -281.12890625]
[651.10284424 -266.22293091]
[651.98999023 -251.24536133]
[652.05072021 -236.24165344]
[651.28479004 -221.25738525]
[649.69464111 -206.33805847]
[647.28497314 -191.52899170]
[644.06317139 -176.87515259]
[640.03906250 -162.42105103]
[635.22479248 -148.21057129]
[629.63500977 -134.28688049]
[623.28668213 -120.69227600]
[616.19903564 -107.46801758]
[608.39373779 -94.65428162]
[599.89440918 -82.28998566]
[590.72680664 -70.41267395]
[580.91888428 -59.05841446]
[570.50030518 -48.26170349]
[559.50286865 -38.05531693]
[547.95983887 -28.47025871]
[535.90631104 -19.53563690]
[523.37890625 -11.27858448]
[510.41564941 -3.72417855]
[497.05590820 3.10463762]
[483.34030151 9.18712521]
[469.31042480 14.50481319]
[455.00894165 19.04154968]
[440.47924805 22.78355789]
[425.76544189 25.71947479]
[410.91229248 27.84038162]
[395.96484375 29.13983727]
[380.96850586 29.61389732]
[365.96881104 29.26111984]
[351.01135254 28.08257866]
[336.14151001 26.08185196]
[321.40447998 23.26501465]
[306.84497070 19.64062309]
[292.50726318 15.21968269]
[278.43484497 10.01562214]
[264.67050171 4.04424429]
[251.25599670 -2.67631555]
[238.23208618 -10.12564659]
[225.63830566 -18.28112602]
[213.51293945 -27.11798668]
[204.02403259 -15.50072289]
[194.53514099 -3.88345933]
[185.04623413 7.73380375]
[175.55734253 19.35106659]
[166.06843567 30.96833038]
[164.00967407 45.71996689]
[149.28735352 51.51341629]
[139.79846191 63.13068008]
[130.30957031 74.74794769]
[128.25079346 89.49958038]
[113.52848053 95.29302979]
[111.09366608 109.06123352]
[98.08878326 114.19586945]
[88.59988403 125.81313324]
[85.86240387 141.39570618]
[71.81880188 146.35821533]
[62.32990265 157.97547913]
[59.59242249 173.55805969]
[45.54882050 178.52056885]
[36.05992126 190.13783264]
[26.57102394 201.75509644]
[17.08212662 213.37236023]
[7.59322739 224.98962402]
[-1.89567101 236.60688782]
[8.48163128 247.46466064]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 209]
[49 208]
[50 207]
[51 206]
[52 205]
[53 204]
[55 202]
[56 201]
[58 199]
[59 198]
[61 196]
[63 194]
[64 193]
[65 192]
[67 190]
[68 189]
[69 188]
[70 187]
[71 186]
[72 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
