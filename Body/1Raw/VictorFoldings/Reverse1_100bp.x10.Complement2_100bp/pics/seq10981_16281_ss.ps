%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[208.52302551 762.32043457]
[213.06207275 747.97180176]
[220.31344604 734.78454590]
[229.99841309 723.26556396]
[241.74473572 713.85754395]
[255.10090637 706.92224121]
[250.91389465 692.51843262]
[246.72688293 678.11462402]
[242.53987122 663.71087646]
[237.65423584 658.16540527]
[238.39945984 649.06140137]
[234.42736816 634.59686279]
[230.45526123 620.13232422]
[226.48316956 605.66784668]
[222.51107788 591.20330811]
[218.53898621 576.73876953]
[203.58110046 577.41979980]
[188.83964539 574.75378418]
[175.05450439 568.87121582]
[162.91828918 560.06420898]
[153.04156494 548.77178955]
[145.92208862 535.55822754]
[141.91975403 521.08465576]
[141.23837280 506.07617188]
[143.91535950 491.28530884]
[149.81959534 477.45440674]
[158.65792847 465.27844238]
[169.98971558 455.36990356]
[183.24873352 448.22817993]
[179.27664185 433.76364136]
[175.30455017 419.29913330]
[161.89222717 416.72485352]
[150.84451294 408.58380127]
[144.35119629 396.41885376]
[143.72976685 382.57717896]
[149.15844727 369.75744629]
[159.63031006 360.48367310]
[155.87402344 345.96160889]
[152.11772156 331.43954468]
[148.36141968 316.91748047]
[133.56466675 314.92114258]
[120.62448120 307.39138794]
[111.52841187 295.44876099]
[107.68732452 280.89425659]
[109.71664429 265.93780518]
[117.33800507 252.86271667]
[129.41693115 243.67710876]
[125.66062927 229.15504456]
[121.90432739 214.63299561]
[111.22639465 204.24882507]
[115.26132965 188.95079041]
[111.50502777 174.42872620]
[107.74872589 159.90666199]
[94.82441711 152.59243774]
[90.80812836 137.91851807]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[77.39999390 92.47811890]
[62.40059662 92.34401703]
[53.03368759 80.62817383]
[56.20420456 65.96707153]
[69.57496643 59.16833496]
[83.28845978 65.24248505]
[80.40319061 50.52259445]
[77.51791382 35.80270004]
[74.63264465 21.08281136]
[64.38326263 13.25255108]
[62.28314972 0.93292010]
[68.92048645 -9.18005562]
[66.25469208 -23.94127274]
[63.58889771 -38.70248795]
[60.92310333 -53.46370697]
[50.85640717 -65.66912842]
[56.20865250 -79.56886292]
[53.43304062 -94.30982971]
[43.18574142 -106.36401367]
[48.33044815 -120.34190369]
[45.44517517 -135.06179810]
[35.19787598 -147.11598206]
[40.34258270 -161.09387207]
[37.45730972 -175.81375122]
[34.57203674 -190.53364563]
[31.68676376 -205.25354004]
[28.80149078 -219.97343445]
[25.91621780 -234.69332886]
[10.85936069 -235.55462646]
[-3.51000857 -240.13415527]
[-16.28862000 -248.14402771]
[-26.67319679 -259.08071899]
[-34.01095963 -272.25677490]
[-37.84064484 -286.84390259]
[-37.92152023 -301.92514038]
[-34.24850082 -316.55252075]
[-27.05247498 -329.80648804]
[-16.78579140 -340.85394287]
[-4.09382200 -349.00039673]
[10.22560596 -353.73376465]
[25.27235985 -354.75650024]
[40.10058975 -352.00433350]
[53.77817917 -345.65023804]
[65.44534302 -336.09368896]
[74.36867523 -323.93536377]
[79.98724365 -309.93954468]
[81.94786835 -294.98605347]
[80.12729645 -280.01486206]
[74.63996887 -265.96710205]
[65.83083344 -253.72578430]
[54.25362396 -244.06042480]
[40.63610840 -237.57859802]
[43.52138138 -222.85870361]
[46.40665436 -208.13880920]
[49.29192734 -193.41891479]
[52.17720032 -178.69903564]
[55.06247330 -163.97914124]
[65.10340118 -152.97781372]
[60.16506577 -137.94706726]
[63.05033875 -123.22717285]
[73.09126282 -112.22585297]
[68.15293121 -97.19509888]
[72.52433777 -91.23585510]
[70.96987152 -82.23465729]
[80.84588623 -71.08506012]
[75.68431854 -56.12950134]
[78.35011292 -41.36828613]
[81.01590729 -26.60706711]
[83.68170929 -11.84585094]
[95.72289276 0.92038417]
[89.35253143 18.19753838]
[92.23780823 32.91743088]
[95.12307739 47.63732147]
[98.00835419 62.35721207]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[126.42503357 128.70578003]
[130.02758789 143.48672485]
[122.27078247 156.15036011]
[126.02708435 170.67242432]
[129.78338623 185.19448853]
[140.72999573 196.61737061]
[136.42639160 210.87669373]
[140.18269348 225.39875793]
[143.93899536 239.92080688]
[158.95690918 242.09750366]
[171.96226501 249.83723450]
[180.98918152 261.93386841]
[184.68707275 276.52542114]
[182.52259827 291.38070679]
[174.85641479 304.24053955]
[162.88346863 313.16119385]
[166.63977051 327.68325806]
[170.39607239 342.20532227]
[174.15237427 356.72738647]
[190.13046265 360.98092651]
[201.71682739 372.64501953]
[205.81634521 388.46942139]
[201.40173340 404.11123657]
[189.76907349 415.32702637]
[193.74116516 429.79153442]
[197.71325684 444.25607300]
[212.76010132 443.62472534]
[227.56301880 446.35644531]
[241.38017273 452.31100464]
[253.51989746 461.18685913]
[263.37524414 472.53622437]
[270.45437622 485.78784180]
[274.40505981 500.27557373]
[275.03231812 515.27197266]
[272.30786133 530.02478027]
[266.37149048 543.79467773]
[257.52389526 555.89245605]
[246.21142578 565.71313477]
[233.00350952 572.76666260]
[236.97560120 587.23120117]
[240.94769287 601.69573975]
[244.91978455 616.16027832]
[248.89189148 630.62475586]
[252.86398315 645.08929443]
[256.94366455 659.52386475]
[261.13067627 673.92761230]
[265.31768799 688.33142090]
[269.50469971 702.73522949]
[284.49743652 701.42987061]
[299.45672607 703.07482910]
[313.80755615 707.60693359]
[326.99832153 714.85186768]
[338.52203369 724.53125000]
[347.93572998 736.27301025]
[354.87756348 749.62579346]
[359.08071899 764.07641602]
[360.38363647 779.06933594]
[358.73623657 794.02838135]
[354.20184326 808.37847900]
[346.95474243 821.56811523]
[337.27349854 833.09020996]
[325.53021240 842.50201416]
[312.17630005 849.44171143]
[297.72503662 853.64251709]
[282.73187256 854.94299316]
[267.77310181 853.29315186]
[253.42373657 848.75646973]
[240.23530579 841.50720215]
[228.71473694 831.82409668]
[219.30484009 820.07928467]
[212.36732483 806.72424316]
[208.16885376 792.27233887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 186]
[7 185]
[8 184]
[9 183]
[11 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[29 164]
[30 163]
[31 162]
[37 157]
[38 156]
[39 155]
[40 154]
[47 147]
[48 146]
[49 145]
[51 143]
[52 142]
[53 141]
[56 138]
[57 137]
[58 135]
[59 134]
[65 133]
[66 132]
[67 131]
[68 130]
[71 128]
[72 127]
[73 126]
[74 125]
[76 123]
[77 121]
[79 119]
[80 118]
[82 116]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
