%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[87.25753784 562.01007080]
[75.33667755 572.38641357]
[59.57616043 571.21093750]
[49.32642746 559.18103027]
[50.66845703 543.43383789]
[62.80605316 533.31182861]
[63.92170334 518.35339355]
[65.03735352 503.39492798]
[66.15299988 488.43649292]
[67.15725708 473.47015381]
[68.05007935 458.49673462]
[68.94289398 443.52334595]
[69.83570862 428.54992676]
[70.72852325 413.57650757]
[62.93647766 404.32391357]
[63.55775070 391.84204102]
[72.80403137 382.84930420]
[73.91968536 367.89083862]
[75.03533173 352.93240356]
[72.39802551 346.02832031]
[76.28057861 337.76007080]
[77.61881256 322.81988525]
[78.95704651 307.87969971]
[80.29528046 292.93951416]
[73.72430420 279.57272339]
[82.66194153 266.51785278]
[84.00017548 251.57768250]
[69.23274231 240.12272644]
[64.31384277 221.93666077]
[71.40583801 204.32095337]
[87.81088257 194.46142578]
[88.48066711 179.47639465]
[81.31938934 166.41632080]
[89.66518402 152.97540283]
[90.33496857 137.99037170]
[87.49327087 131.16786194]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[93.47184753 77.84961700]
[86.35847473 63.71772003]
[94.65635681 51.34863281]
[95.32614136 36.36359406]
[88.21276855 22.23169708]
[96.51065826 9.86260796]
[97.18044281 -5.12243128]
[90.06707001 -19.25432777]
[98.36495209 -31.62341690]
[99.03473663 -46.60845566]
[99.70452118 -61.59349442]
[100.37430573 -76.57852936]
[101.04409027 -91.56356812]
[101.71388245 -106.54860687]
[98.97077942 -115.26142883]
[102.50683594 -121.75128174]
[103.39965057 -136.72468567]
[95.97790527 -123.68943787]
[86.04033661 -112.45356750]
[74.00949860 -103.49482727]
[60.39694977 -97.19416046]
[45.78150177 -93.81945038]
[30.78460503 -93.51421356]
[16.04394341 -96.29141998]
[2.18629313 -102.03298187]
[-10.19911098 -110.49476624]
[-20.58563423 -121.31697083]
[-28.53163910 -134.03942871]
[-33.69925308 -148.12118530]
[-35.86875153 -162.96347046]
[-34.94788361 -177.93516541]
[-30.97580528 -192.39970398]
[-24.12141037 -205.74200439]
[-14.67615223 -217.39479065]
[-3.04164886 -226.86253357]
[10.28739548 -233.74269104]
[24.74422455 -237.74270630]
[39.71412277 -238.69250488]
[54.56056595 -236.55168152]
[68.65227509 -231.41127014]
[81.39006805 -223.48986816]
[92.23231506 -213.12426758]
[100.71800995 -200.75523376]
[106.48632812 -186.90870667]
[109.29200745 -172.17343140]
[109.01572418 -157.17581177]
[115.89513397 -170.50523376]
[122.77455139 -183.83467102]
[129.65396118 -197.16409302]
[135.93132019 -210.78741455]
[141.59410095 -224.67742920]
[147.25689697 -238.56745911]
[152.39884949 -252.65859985]
[157.01286316 -266.93133545]
[161.62687683 -281.20407104]
[166.24087524 -295.47680664]
[170.85488892 -309.74954224]
[175.46890259 -324.02227783]
[180.08291626 -338.29501343]
[166.76119995 -345.26922607]
[154.80984497 -354.39465332]
[144.57273865 -365.40872192]
[136.34442139 -377.99453735]
[130.36161804 -391.78997803]
[126.79648590 -406.39813232]
[125.75158691 -421.39865112]
[127.25698853 -436.36001587]
[131.26937866 -450.85168457]
[137.67332458 -464.45672607]
[146.28454590 -476.78372192]
[156.85530090 -487.47799683]
[169.08145142 -496.23181152]
[182.61120605 -502.79333496]
[197.05529785 -506.97378540]
[211.99815369 -508.65286255]
[227.00981140 -507.78228760]
[241.65837097 -504.38705444]
[255.52236938 -498.56488037]
[268.20291138 -490.48330688]
[279.33514404 -480.37481689]
[288.59878540 -468.53027344]
[295.72726440 -455.29046631]
[300.51550293 -441.03631592]
[302.82577515 -426.17797852]
[302.59155273 -411.14291382]
[299.81958008 -396.36370850]
[294.58963013 -382.26565552]
[287.05218506 -369.25430298]
[277.42410278 -357.70407104]
[265.98239136 -347.94726562]
[253.05627441 -340.26458740]
[239.01765442 -334.87710571]
[224.27043152 -331.93981934]
[209.23893738 -331.53726196]
[194.35563660 -333.68099976]
[189.74163818 -319.40826416]
[185.12762451 -305.13552856]
[180.51361084 -290.86279297]
[175.89961243 -276.59005737]
[171.28559875 -262.31732178]
[166.67158508 -248.04460144]
[181.01135254 -252.44587708]
[193.47868347 -244.10527039]
[194.88313293 -229.17115784]
[184.18939209 -218.65242004]
[169.28048706 -220.30307007]
[161.14692688 -232.90467834]
[155.48413086 -219.01464844]
[149.82135010 -205.12461853]
[164.03125000 -209.92863464]
[177.53669739 -203.40155029]
[182.60115051 -189.28236389]
[176.32347107 -175.65919495]
[162.29978943 -170.33601379]
[148.56350708 -176.36218262]
[142.98338318 -190.28468323]
[136.10397339 -176.95524597]
[129.22456360 -163.62582397]
[122.34515381 -150.29638672]
[118.37305450 -135.83186340]
[117.48023987 -120.85845947]
[116.69892120 -105.87882233]
[116.02912903 -90.89378357]
[115.35934448 -75.90874481]
[114.68955994 -60.92370987]
[114.01977539 -45.93867111]
[113.34999084 -30.95363235]
[120.51127625 -17.89356613]
[112.16548157 -4.45264578]
[111.49569702 10.53239250]
[118.65697479 23.59245872]
[110.31118011 37.03337860]
[109.64139557 52.01841736]
[116.80268097 65.07848358]
[108.45688629 78.51940155]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[105.32000732 138.66015625]
[104.65022278 153.64518738]
[111.76359558 167.77708435]
[103.46570587 180.14617920]
[102.79592133 195.13121033]
[112.86643982 200.60835266]
[120.13298035 209.40823364]
[123.57527924 220.23516846]
[122.73253632 231.51339722]
[117.76466370 241.61642456]
[109.42374420 249.10156250]
[98.94036102 252.91590881]
[97.60212708 267.85610962]
[104.07737732 282.29153442]
[95.23546600 294.27777100]
[93.89723206 309.21795654]
[92.55899811 324.15811157]
[91.22076416 339.09829712]
[89.99378204 354.04803467]
[88.87813568 369.00650024]
[87.76248932 383.96496582]
[96.14076996 400.36270142]
[85.70192719 414.46932983]
[84.80911255 429.44274902]
[83.91629791 444.41613770]
[83.02348328 459.38955688]
[82.13066864 474.36297607]
[84.74373627 483.11566162]
[81.11145020 489.55212402]
[79.99580383 504.51058960]
[78.88015747 519.46905518]
[77.76450348 534.42749023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[17 199]
[18 198]
[19 197]
[21 196]
[22 195]
[23 194]
[24 193]
[26 191]
[27 190]
[31 183]
[32 182]
[34 180]
[35 179]
[37 178]
[38 177]
[39 175]
[40 174]
[42 172]
[43 171]
[45 169]
[46 168]
[48 166]
[49 165]
[50 164]
[51 163]
[52 162]
[53 161]
[55 160]
[56 159]
[85 158]
[86 157]
[87 156]
[88 155]
[89 148]
[90 147]
[91 146]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
