%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[21.10271835 493.73336792]
[25.73967934 508.07196045]
[26.94434357 523.09344482]
[24.65174103 537.98779297]
[18.98550987 551.95172119]
[10.25122452 564.23211670]
[-1.08008814 574.16680908]
[-14.39734364 581.21997070]
[-28.98235893 585.01129150]
[-44.04858398 585.33630371]
[-58.78351212 582.17742920]
[-72.39251709 575.70501709]
[-84.14167023 566.26818848]
[-93.39736176 554.37579346]
[-99.66043854 540.66918945]
[-102.59314728 525.88757324]
[-102.03732300 510.82809448]
[-98.02294922 496.30291748]
[-90.76651764 483.09530640]
[-80.65934753 471.91757202]
[-68.24650574 463.37249756]
[-54.19741440 457.92092896]
[-39.26971436 455.85684204]
[-24.26843643 457.29153442]
[-19.44243813 443.08908081]
[-14.61644077 428.88662720]
[-9.79044247 414.68417358]
[-11.01260281 411.37680054]
[-10.69352913 407.31317139]
[-8.49521351 403.22406006]
[-4.41882563 399.96368408]
[1.03653169 385.99087524]
[6.38771772 371.97784424]
[11.63443565 357.92538452]
[8.83765030 343.29571533]
[20.91323662 333.07363892]
[17.08056450 315.94830322]
[31.38106918 304.34756470]
[36.41798401 290.21853638]
[33.40369415 275.63211060]
[45.32575226 265.23138428]
[50.36266708 251.10235596]
[55.39958572 236.97332764]
[54.22680283 233.64813232]
[54.60634232 229.58969116]
[56.86529541 225.53378296]
[60.98977280 222.33444214]
[66.65255737 208.44441223]
[72.31534576 194.55438232]
[76.60946655 180.18217468]
[79.49474335 165.46228027]
[82.38001251 150.74238586]
[85.26528931 136.02250671]
[88.15055847 121.30260468]
[91.03583527 106.58271790]
[78.01534271 114.03031921]
[63.50659943 110.22290802]
[55.82086945 97.34154510]
[59.36089325 82.76525116]
[72.09877777 74.84400177]
[86.73768616 78.11543274]
[94.89161682 90.70460510]
[91.31395721 75.29321289]
[102.29632568 65.23156738]
[106.48333740 50.82778549]
[110.67034912 36.42400360]
[114.85736084 22.02022171]
[111.27970123 6.60883284]
[122.26207733 -3.45281315]
[126.34174347 -17.88736534]
[130.31384277 -32.35189056]
[134.28593445 -46.81641388]
[138.25802612 -61.28093719]
[132.56834412 -72.85635376]
[136.17448425 -84.82211304]
[146.62106323 -90.92093658]
[150.80807495 -105.32471466]
[154.99508667 -119.72850037]
[159.07475281 -134.16305542]
[154.00704956 -151.86614990]
[166.96440125 -163.70144653]
[170.72070312 -178.22351074]
[174.47700500 -192.74557495]
[178.23329163 -207.26762390]
[181.98959351 -221.78968811]
[183.66113281 -236.69625854]
[183.21453857 -251.68960571]
[182.76792908 -266.68295288]
[182.32131958 -281.67630005]
[181.87471008 -296.66964722]
[171.83595276 -312.10678101]
[180.75057983 -327.22290039]
[180.08079529 -342.20791626]
[165.37405396 -345.61596680]
[152.13272095 -352.86642456]
[141.33937073 -363.42135620]
[133.79493713 -376.49743652]
[130.05929565 -391.12438965]
[130.40962219 -406.21676636]
[134.81993103 -420.65460205]
[142.96296692 -433.36657715]
[154.23443604 -443.40930176]
[167.79794312 -450.03756714]
[182.64695740 -452.75955200]
[197.67961121 -451.37319946]
[211.78036499 -445.98141479]
[223.90286255 -436.98434448]
[233.14752197 -425.04956055]
[238.82833862 -411.06274414]
[240.52374268 -396.06179810]
[238.10794067 -381.15991211]
[231.76019287 -367.46289062]
[221.95155334 -355.98712158]
[209.40986633 -347.58422852]
[195.06582642 -342.87771606]
[195.73561096 -327.89266968]
[204.44796753 -319.50091553]
[205.12861633 -307.02212524]
[196.86807251 -297.11627197]
[197.31466675 -282.12292480]
[197.76127625 -267.12957764]
[198.20788574 -252.13621521]
[198.65449524 -237.14286804]
[205.16450500 -250.65655518]
[215.32441711 -261.69177246]
[228.25532532 -269.29385376]
[242.83857727 -272.80514526]
[257.81253052 -271.92187500]
[271.88183594 -266.72048950]
[283.82934570 -257.65090942]
[292.62149048 -245.49778748]
[297.49761963 -231.31246948]
[298.03594971 -216.32212830]
[294.18988037 -201.82357788]
[286.29214478 -189.07110596]
[275.02597046 -179.16790771]
[261.36599731 -172.97071838]
[246.49395752 -171.01564026]
[231.69641113 -173.47183228]
[218.25352478 -180.12680054]
[207.32821655 -190.40481567]
[199.86563110 -203.41673279]
[196.51165771 -218.03338623]
[192.75535583 -203.51132202]
[188.99905396 -188.98927307]
[185.24275208 -174.46720886]
[181.48645020 -159.94514465]
[187.35324097 -149.36651611]
[184.34265137 -137.23721313]
[173.53927612 -130.19094849]
[174.79931641 -122.90850830]
[169.39886475 -115.54148865]
[165.21185303 -101.13770294]
[161.02484131 -86.73392487]
[166.12062073 -69.94107056]
[152.72254944 -57.30884171]
[148.75045776 -42.84431839]
[144.77836609 -28.37979317]
[140.80625916 -13.91526985]
[142.06631470 -6.63281918]
[136.66586304 0.73419809]
[140.54299927 15.11533260]
[129.26113892 26.20723343]
[125.07413483 40.61101532]
[120.88712311 55.01479721]
[116.70011139 69.41857910]
[120.57725525 83.79971313]
[109.29539490 94.89161682]
[105.75572205 109.46798706]
[102.87045288 124.18788147]
[99.98517609 138.90777588]
[97.09990692 153.62767029]
[94.21463013 168.34754944]
[91.32936096 183.06744385]
[101.49340820 172.03602600]
[115.23312378 166.01770020]
[130.23312378 166.02665710]
[143.96563721 172.06140137]
[154.11650085 183.10493469]
[158.97512817 197.29626465]
[157.72273254 212.24389648]
[150.57037354 225.42887878]
[138.72334290 234.62931824]
[124.17809296 238.29478455]
[109.38573456 235.80757141]
[96.83905029 227.58682251]
[88.65237427 215.01788330]
[86.20537567 200.21717834]
[80.54258728 214.10719299]
[74.87979889 227.99722290]
[69.52861786 242.01025391]
[64.49169922 256.13928223]
[59.45478058 270.26831055]
[62.10879898 285.86532593]
[50.54701233 295.25543213]
[45.51009750 309.38446045]
[50.32309341 321.35101318]
[45.83695984 333.01541138]
[34.96570969 338.32037354]
[37.38721466 353.95516968]
[25.68690681 363.17211914]
[20.44018936 377.22457886]
[20.37022018 386.35873413]
[15.00932980 391.44622803]
[9.55397224 405.41903687]
[4.41201258 419.51016235]
[-0.41398492 433.71264648]
[-5.23998260 447.91510010]
[-10.06597996 462.11755371]
[2.70377183 470.11941528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 209]
[25 208]
[26 207]
[27 206]
[31 205]
[32 204]
[33 202]
[34 201]
[36 199]
[38 196]
[39 195]
[41 193]
[42 192]
[43 191]
[47 190]
[48 189]
[49 188]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[55 169]
[62 168]
[64 166]
[65 165]
[66 164]
[67 163]
[69 161]
[70 159]
[71 158]
[72 157]
[73 156]
[76 154]
[77 153]
[78 152]
[79 150]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
