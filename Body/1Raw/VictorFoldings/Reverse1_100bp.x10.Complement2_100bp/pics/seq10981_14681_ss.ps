%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[52.35588837 482.67816162]
[42.78504944 494.34268188]
[30.52075768 503.13186646]
[16.39921379 508.44641113]
[1.38324821 509.92398071]
[-13.50332451 507.46383667]
[-27.24551392 501.23367310]
[-38.90635300 491.65832520]
[-47.69079208 479.39065552]
[-52.99988556 465.26705933]
[-54.47165298 450.25051880]
[-52.00575256 435.36489868]
[-45.77030563 421.62512207]
[-36.19046021 409.96798706]
[-23.91938400 401.18829346]
[-9.79374123 395.88464355]
[5.22336054 394.41867065]
[7.66908789 379.61938477]
[10.11481476 364.82012939]
[12.56054306 350.02084351]
[15.00627041 335.22158813]
[17.45199776 320.42230225]
[19.89772415 305.62304688]
[17.88689041 298.51119995]
[22.49161148 290.62231445]
[25.15740585 275.86111450]
[27.82320213 261.09988403]
[30.48899651 246.33866882]
[33.15479279 231.57745361]
[23.80196381 243.30453491]
[11.18360806 251.41484070]
[-3.36863184 255.05247498]
[-18.31902313 253.83352661]
[-32.08981323 247.88665771]
[-43.22774124 237.83943176]
[-50.55739212 224.75218201]
[-53.30524826 210.00601196]
[-51.18132782 195.15715027]
[-44.40977097 181.77259827]
[-33.70519638 171.26489258]
[-20.19727898 164.74290466]
[-5.31154680 162.89494324]
[9.38107491 165.91601562]
[22.33003998 173.48730469]
[32.16881180 184.80978394]
[37.85908127 198.68856812]
[38.80032349 213.65919495]
[45.07768250 200.03588867]
[51.35504532 186.41256714]
[49.65410995 171.61540222]
[62.45653152 162.31977844]
[68.73389435 148.69647217]
[75.01125336 135.07315063]
[74.95546722 127.68270874]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[97.49034882 69.96555328]
[109.96629333 61.82921219]
[116.44578552 48.30086899]
[122.92528534 34.77252197]
[123.80988312 25.68102646]
[129.60328674 21.09208870]
[136.28347778 7.66171265]
[142.96366882 -5.76866341]
[129.09362793 -0.05710663]
[114.48863220 -3.47677565]
[104.59599304 -14.75221825]
[103.10540771 -29.67797279]
[110.57283783 -42.68710327]
[124.21311951 -48.92752457]
[138.93875122 -46.07171249]
[149.25744629 -35.18481827]
[151.32038879 -20.32622910]
[159.54919434 -32.86763000]
[167.77799988 -45.40903091]
[176.00680542 -57.95042801]
[184.23562622 -70.49182892]
[192.46443176 -83.03323364]
[198.53825378 -96.74849701]
[202.29455566 -111.27055359]
[206.05085754 -125.79261780]
[209.80715942 -140.31468201]
[213.56346130 -154.83673096]
[217.31976318 -169.35879517]
[219.76548767 -184.15806580]
[220.88113403 -199.11651611]
[221.99679565 -214.07496643]
[223.11244202 -229.03343201]
[224.22808838 -243.99188232]
[225.34373474 -258.95031738]
[226.45938110 -273.90878296]
[227.57502747 -288.86724854]
[228.69068909 -303.82568359]
[229.80633545 -318.78414917]
[230.92198181 -333.74258423]
[216.72442627 -338.87408447]
[204.43849182 -347.64666748]
[194.97587585 -359.40939331]
[189.03875732 -373.28933716]
[187.06770325 -388.25656128]
[189.20899963 -403.20037842]
[195.30372620 -417.01184082]
[204.89962769 -428.66607666]
[217.28462219 -437.29824829]
[231.53967285 -442.26779175]
[246.60693359 -443.20596313]
[261.36831665 -440.04309082]
[274.72845459 -433.01391602]
[285.69592285 -422.64004517]
[293.45687866 -409.69128418]
[297.43536377 -395.12850952]
[297.33618164 -380.03237915]
[293.16668701 -365.52316284]
[285.23626709 -352.67749023]
[274.13345337 -342.44860840]
[260.68209839 -335.59558105]
[245.88043213 -332.62695312]
[244.76478577 -317.66848755]
[243.64913940 -302.71005249]
[242.53349304 -287.75158691]
[241.41783142 -272.79312134]
[240.30218506 -257.83468628]
[239.18653870 -242.87623596]
[238.07089233 -227.91777039]
[236.95524597 -212.95932007]
[235.83959961 -198.00086975]
[234.72393799 -183.04241943]
[243.76811218 -195.00917053]
[257.06900024 -201.94358826]
[272.05841064 -202.50677490]
[285.84216309 -196.58996582]
[295.75878906 -185.33560181]
[299.89355469 -170.91673279]
[297.44808960 -156.11741638]
[288.89459229 -143.79516602]
[275.88461304 -136.32922363]
[260.93017578 -135.16111755]
[246.91873169 -140.51643372]
[236.55566406 -151.36111450]
[231.84182739 -165.60249329]
[228.08552551 -151.08042908]
[224.32922363 -136.55838013]
[220.57292175 -122.03631592]
[216.81661987 -107.51425934]
[213.06031799 -92.99219513]
[222.92427063 -104.29275513]
[235.34719849 -112.69934082]
[249.50514221 -117.65438843]
[264.45907593 -118.82924652]
[279.21713257 -116.14598083]
[292.80044556 -109.78256226]
[304.30813599 -100.16106415]
[312.97689819 -87.91964722]
[318.23178101 -73.87022400]
[319.72427368 -58.94466019]
[317.35531616 -44.13290405]
[311.28207397 -30.41736984]
[301.90737915 -18.70775795]
[289.85299683 -9.78072739]
[275.91845703 -4.22837496]
[261.02798462 -2.41896749]
[246.16923523 -4.47251701]
[232.32769775 -10.25281906]
[220.42144775 -19.37648582]
[211.24018860 -31.23838043]
[205.39288330 -45.05174255]
[203.26734924 -59.90038300]
[205.00582886 -74.80442047]
[196.77702332 -62.26302338]
[188.54821777 -49.72162247]
[180.31939697 -37.18022156]
[172.09059143 -24.63882065]
[163.86178589 -12.09742069]
[156.39404297 0.91153121]
[149.71385193 14.34190750]
[143.03366089 27.77228355]
[136.45362854 41.25201797]
[129.97413635 54.78036499]
[123.49463654 68.30870819]
[124.97507477 83.12955475]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.63456726 141.35050964]
[82.35720825 154.97383118]
[76.07984924 168.59713745]
[77.33178711 184.36874390]
[64.97836304 192.68992615]
[58.70100021 206.31324768]
[52.42363739 219.93655396]
[47.91601181 234.24324036]
[45.25021362 249.00447083]
[42.58441925 263.76568604]
[39.91862488 278.52688599]
[37.25282669 293.28811646]
[34.69699478 308.06875610]
[32.25126648 322.86804199]
[29.80554008 337.66729736]
[27.35981369 352.46658325]
[24.91408539 367.26583862]
[22.46835899 382.06512451]
[20.02263069 396.86437988]
[33.76962662 403.08392334]
[45.43785858 412.65026855]
[54.23176575 424.91116333]
[59.55176544 439.03063965]
[61.03512955 454.04605103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[19 203]
[20 202]
[21 201]
[22 200]
[23 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[47 193]
[48 192]
[49 191]
[51 189]
[52 188]
[53 187]
[55 186]
[56 185]
[58 183]
[60 181]
[61 180]
[62 179]
[64 178]
[65 177]
[66 176]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[81 147]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
