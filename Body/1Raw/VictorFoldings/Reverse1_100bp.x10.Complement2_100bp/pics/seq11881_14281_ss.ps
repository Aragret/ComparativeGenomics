%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[139.05471802 606.64355469]
[145.10105896 590.80438232]
[145.10105896 575.80438232]
[145.10105896 560.80438232]
[145.10105896 545.80438232]
[136.77210999 537.03198242]
[136.64933777 524.53527832]
[145.34397888 515.00811768]
[145.56730652 500.00979614]
[145.79063416 485.01144409]
[146.01396179 470.01312256]
[145.56735229 455.01974487]
[144.45170593 440.06130981]
[143.33605957 425.10284424]
[142.22041321 410.14440918]
[141.10476685 395.18594360]
[139.98910522 380.22747803]
[138.87345886 365.26904297]
[130.21098328 353.15249634]
[136.90043640 338.81506348]
[135.22889709 323.90850830]
[133.00378418 309.07446289]
[130.77867126 294.24041748]
[128.55354309 279.40637207]
[126.32843018 264.57232666]
[124.10331726 249.73828125]
[114.56364441 238.29957581]
[120.16820526 223.50431824]
[117.94308472 208.67028809]
[115.71797180 193.83624268]
[112.72319794 179.13822937]
[108.96689606 164.61618042]
[105.21059418 150.09411621]
[94.53266144 139.70994568]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[83.00279236 66.46710968]
[77.86083221 52.37596512]
[71.58347321 38.75265121]
[65.30611420 25.12933350]
[59.02875137 11.50601768]
[52.75138855 -2.11729860]
[46.47402954 -15.74061489]
[40.04049683 -22.22501564]
[40.20631027 -29.61381149]
[34.13247681 -43.32907867]
[27.95670700 -56.99874878]
[21.67934608 -70.62206268]
[15.40198612 -84.24538422]
[9.02338028 -97.82158661]
[2.54388499 -111.34993744]
[-4.13630962 -124.78031158]
[-11.01572227 -138.10974121]
[-17.99417496 -151.38758850]
[-25.07127953 -164.61311340]
[-32.14838409 -177.83863831]
[-37.55364227 -181.64584351]
[-39.87614059 -186.83264160]
[-39.23264694 -191.56498718]
[-45.91284180 -204.99536133]
[-52.59303665 -218.42573547]
[-59.27323151 -231.85610962]
[-65.95342255 -245.28648376]
[-72.63362122 -258.71685791]
[-86.82733154 -253.80088806]
[-101.53316498 -250.74037170]
[-116.50964355 -249.58558655]
[-131.51083374 -250.35546875]
[-146.29039001 -253.03741455]
[-160.60563660 -257.58734131]
[-174.22151184 -263.93057251]
[-186.91439819 -271.96292114]
[-198.47590637 -281.55252075]
[-208.71615601 -292.54183960]
[-217.46699524 -304.75048828]
[-224.58474731 -317.97796631]
[-229.95251465 -332.00704956]
[-233.48216248 -346.60739136]
[-235.11572266 -361.53924561]
[-234.82638550 -376.55737305]
[-232.61888123 -391.41522217]
[-228.52946472 -405.86877441]
[-222.62530518 -419.68069458]
[-215.00334167 -432.62417603]
[-205.78872681 -444.48669434]
[-195.13278198 -455.07342529]
[-183.21049500 -464.21057129]
[-170.21762085 -471.74804688]
[-156.36753845 -477.56210327]
[-141.88764954 -481.55728149]
[-127.01574707 -483.66793823]
[-111.99604034 -483.85943604]
[-97.07515717 -482.12863159]
[-82.49812317 -478.50393677]
[-68.50429535 -473.04489136]
[-55.32347870 -465.84112549]
[-43.17210007 -457.01092529]
[-32.24970627 -446.69931030]
[-22.73564529 -435.07559204]
[-14.78615189 -422.33062744]
[-8.53176212 -408.67373657]
[-4.07517862 -394.32913208]
[-1.48958302 -379.53240967]
[-0.81743276 -364.52651978]
[-2.06976533 -349.55789185]
[-5.22601604 -334.87231445]
[-10.23435688 -320.71093750]
[-17.01254654 -307.30627441]
[-25.44927979 -294.87850952]
[-35.40601730 -283.63165283]
[-46.71926498 -273.75042725]
[-59.20324326 -265.39706421]
[-52.52304840 -251.96667480]
[-45.84285355 -238.53630066]
[-39.16265869 -225.10592651]
[-32.48246384 -211.67555237]
[-25.80227089 -198.24517822]
[-18.92285728 -184.91574097]
[-11.84575272 -171.69021606]
[-4.76864719 -158.46469116]
[1.15881109 -154.05027771]
[2.31370687 -144.98915100]
[9.19311905 -131.65972900]
[13.38975048 -129.37995911]
[16.19880104 -124.43968964]
[16.07223129 -117.82942963]
[22.55172539 -104.30108643]
[28.27615929 -99.62640381]
[29.02530098 -90.52274323]
[35.30266190 -76.89942932]
[41.58002472 -63.27610779]
[47.23422241 -58.51671600]
[47.84774399 -49.40291214]
[53.92157745 -35.68764496]
[60.09734344 -22.01797485]
[66.37470245 -8.39465904]
[72.65206909 5.22865677]
[78.92942810 18.85197258]
[85.20678711 32.47528839]
[91.48414612 46.09860611]
[93.98152161 31.30796242]
[102.99277496 19.31641197]
[116.50477600 12.80289650]
[131.49890137 13.22255421]
[144.62544250 20.48163033]
[152.95187378 32.95842743]
[154.61805725 47.86560059]
[149.25177002 61.87284851]
[138.05184937 71.85091400]
[123.52038574 75.57067108]
[108.90374756 72.20112610]
[97.46731567 62.49501038]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[124.03625488 132.07849121]
[119.73265076 146.33781433]
[123.48895264 160.85987854]
[127.24525452 175.38192749]
[134.78202820 162.41285706]
[148.84872437 157.20439148]
[163.01423645 162.13778687]
[170.80227661 174.95755005]
[168.65226746 189.80267334]
[157.54714966 199.88613892]
[142.56405640 200.59796143]
[130.55201721 191.61111450]
[132.77713013 206.44515991]
[135.00224304 221.27920532]
[144.70108032 233.77894592]
[138.93736267 247.51315308]
[141.16247559 262.34719849]
[143.38758850 277.18124390]
[145.61271667 292.01528931]
[147.83782959 306.84933472]
[150.06294250 321.68338013]
[160.94207764 311.35650635]
[175.81925964 313.27203369]
[183.72760010 326.01794434]
[178.83734131 340.19842529]
[164.75343323 345.36010742]
[151.85890198 337.69943237]
[160.60118103 350.88589478]
[153.83190918 364.15338135]
[154.94757080 379.11184692]
[156.06321716 394.07028198]
[157.17886353 409.02874756]
[158.29450989 423.98721313]
[159.41015625 438.94564819]
[160.52580261 453.90411377]
[171.10931396 443.27447510]
[186.10835266 443.10394287]
[196.93077087 453.49023438]
[197.37701416 468.48361206]
[187.19145203 479.49514771]
[172.20883179 480.21697998]
[161.01229858 470.23645020]
[160.78897095 485.23477173]
[160.56564331 500.23312378]
[160.34231567 515.23144531]
[169.68176270 531.10144043]
[160.10105896 545.80438232]
[160.10105896 560.80438232]
[160.10105896 575.80438232]
[160.10105896 590.80438232]
[166.14739990 606.64355469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[8 204]
[9 203]
[10 202]
[11 201]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[20 186]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[28 173]
[29 172]
[30 171]
[31 163]
[32 162]
[33 161]
[35 159]
[36 158]
[37 156]
[38 155]
[39 154]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[47 136]
[48 135]
[49 133]
[50 132]
[51 131]
[52 129]
[53 128]
[54 125]
[55 124]
[56 122]
[57 121]
[58 120]
[61 119]
[62 118]
[63 117]
[64 116]
[65 115]
[66 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
