%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[15.27187061 602.26666260]
[18.42829323 617.02947998]
[17.48356819 632.09631348]
[12.50779915 646.34918213]
[3.87022018 658.73040771]
[-7.78820133 668.32122803]
[-21.60233307 674.40991211]
[-36.54707718 676.54473877]
[-51.51343155 674.56713867]
[-65.39079285 668.62396240]
[-77.14936829 659.15618896]
[-85.91660309 646.86645508]
[-91.04189301 632.66662598]
[-92.14492798 617.61053467]
[-89.14383698 602.81542969]
[-82.26132965 589.37915039]
[-72.00813293 578.29876709]
[-59.14509964 570.39654541]
[-44.62675476 566.25891113]
[-29.53045845 566.19281006]
[-25.55836296 551.72827148]
[-21.58626556 537.26379395]
[-17.61417007 522.79925537]
[-13.64207363 508.33471680]
[-21.51949883 498.13787842]
[-22.09415627 485.07067871]
[-14.93240833 473.89392090]
[-2.46017337 468.80883789]
[1.72683775 454.40505981]
[-8.03951454 438.92172241]
[-3.30569148 420.90771484]
[13.37323856 411.92285156]
[17.12953949 397.40081787]
[20.88583946 382.87875366]
[15.29233074 366.24505615]
[28.30835342 353.21951294]
[31.84802628 338.64315796]
[35.38769913 324.06677246]
[38.92737198 309.49038696]
[34.41194153 295.29672241]
[45.18726730 283.71212769]
[48.72694016 269.13574219]
[42.70330429 258.64566040]
[45.53297043 246.47285461]
[56.23024368 239.26654053]
[51.92663956 225.00721741]
[62.87324905 213.58432007]
[66.62954712 199.06227112]
[70.38584900 184.54020691]
[74.14215088 170.01814270]
[66.38535309 157.35450745]
[69.98790741 142.57356262]
[83.32328796 134.52339172]
[87.07958984 120.00133514]
[90.83588409 105.47927094]
[93.06100464 90.64522552]
[93.73078918 75.66018677]
[94.40057373 60.67515182]
[95.07035828 45.69011307]
[81.70171356 35.32790375]
[77.18846893 19.19929695]
[83.11853027 3.71394610]
[96.96986389 -5.09617281]
[97.41646576 -20.08952332]
[86.85821533 -31.54208374]
[87.52472687 -46.74111176]
[98.50805664 -56.73620987]
[98.95466614 -71.72956085]
[96.08215332 -80.40057373]
[99.52118683 -86.94234467]
[100.19097137 -101.92738342]
[100.86075592 -116.91242218]
[101.41896820 -131.90203857]
[101.86557770 -146.89538574]
[102.31217957 -161.88873291]
[99.51980591 -167.88157654]
[100.08784485 -173.53616333]
[103.00190735 -177.31997681]
[103.89472198 -192.29339600]
[104.78754425 -207.26679993]
[92.96977997 -217.14842224]
[89.27977753 -231.92127991]
[94.92930603 -245.86929321]
[107.55751801 -253.72207642]
[108.45033264 -268.69546509]
[109.34315491 -283.66888428]
[96.74349976 -290.07165527]
[87.56365967 -300.76065063]
[83.16455078 -314.10058594]
[84.17899323 -328.06701660]
[90.42089081 -340.55374146]
[100.91831207 -349.69024658]
[114.06468964 -354.12207031]
[115.18034363 -369.08050537]
[116.29598999 -384.03897095]
[117.41163635 -398.99740601]
[118.52729034 -413.95587158]
[119.64293671 -428.91433716]
[105.56419373 -434.41708374]
[93.73392487 -443.82644653]
[85.20407867 -456.30575562]
[80.73312378 -470.74536133]
[80.71861267 -485.86126709]
[85.16182709 -500.30944824]
[93.66769409 -512.80511475]
[105.47986603 -522.23718262]
[119.54801941 -527.76696777]
[134.62121582 -528.90277100]
[149.35917664 -525.54351807]
[162.45138550 -517.98803711]
[172.73370361 -506.90811157]
[179.29183960 -493.28890991]
[181.54264832 -478.34149170]
[179.28598022 -463.39495850]
[172.72250366 -449.77835083]
[162.43583679 -438.70245361]
[149.34065247 -431.15209961]
[134.60139465 -427.79867554]
[133.48574829 -412.84020996]
[132.37008667 -397.88177490]
[131.25444031 -382.92330933]
[130.13879395 -367.96487427]
[129.02314758 -353.00640869]
[143.01518250 -345.28802490]
[152.27421570 -332.19284058]
[154.90510559 -316.31320190]
[150.33110046 -300.82003784]
[139.41923523 -288.82940674]
[124.31655884 -282.77606201]
[123.42374420 -267.80267334]
[122.53092194 -252.82925415]
[134.13650513 -243.53149414]
[138.08854675 -229.01097107]
[132.66921997 -214.78128052]
[119.76094818 -206.37397766]
[118.86813354 -191.40057373]
[117.97531891 -176.42716980]
[117.30552673 -161.44212341]
[116.85892487 -146.44877625]
[116.41231537 -131.45542908]
[119.35527802 -124.67598724]
[115.84579468 -116.24263763]
[115.17601013 -101.25759888]
[114.50622559 -86.27256012]
[113.94801331 -71.28295135]
[113.50141144 -56.28960419]
[123.87035370 -45.65848541]
[123.63101196 -30.44673538]
[112.40981293 -19.64291763]
[111.96321106 -4.64956713]
[123.23785400 2.50057220]
[129.55786133 14.38340092]
[129.17800903 27.94530678]
[122.09059906 39.64091110]
[110.05539703 46.35989761]
[109.38561249 61.34493637]
[108.71582794 76.32997131]
[108.04604340 91.31501007]
[116.23471832 78.74737549]
[128.56590271 70.20677185]
[143.21034241 66.96015167]
[157.99560547 69.48913574]
[170.72840881 77.41856384]
[179.51989746 89.57214355]
[183.06591797 104.14698029]
[180.84043884 118.98096466]
[173.17359924 131.87358093]
[161.20271301 140.91227722]
[146.70359802 144.75621033]
[131.82713318 142.83517456]
[118.78011322 135.43411255]
[109.49802399 123.65096283]
[105.35794830 109.23557281]
[101.60164642 123.75762939]
[97.84534454 138.27969360]
[105.60481262 151.78630066]
[101.58851624 166.46022034]
[88.66420746 173.77444458]
[84.90790558 188.29650879]
[81.15161133 202.81857300]
[77.39530945 217.34062195]
[81.43023682 232.63867188]
[70.75230408 243.02284241]
[76.08301544 260.64852905]
[63.30331802 272.67541504]
[59.76364517 287.25180054]
[64.02589417 302.48806763]
[53.50374603 313.03005981]
[49.96407318 327.60644531]
[46.42440033 342.18283081]
[42.88473129 356.75918579]
[48.91654205 368.16006470]
[45.66825867 380.22790527]
[35.40789795 386.63504028]
[31.65159798 401.15710449]
[27.89529800 415.67916870]
[35.80722809 424.55261230]
[38.42655563 436.02606201]
[35.21534348 447.22348022]
[27.08254814 455.39495850]
[16.13061905 458.59207153]
[11.94360828 472.99584961]
[20.64816284 488.16983032]
[15.78107262 504.62057495]
[0.82245010 512.30682373]
[-3.14964604 526.77136230]
[-7.12174225 541.23583984]
[-11.09383869 555.70037842]
[-15.06593513 570.16491699]
[-2.12056041 577.93151855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 209]
[21 208]
[22 207]
[23 206]
[24 205]
[28 202]
[29 201]
[32 196]
[33 195]
[34 194]
[36 191]
[37 190]
[38 189]
[39 188]
[41 186]
[42 185]
[45 183]
[47 181]
[48 180]
[49 179]
[50 178]
[53 175]
[54 174]
[55 173]
[56 158]
[57 157]
[58 156]
[59 155]
[63 150]
[64 149]
[67 146]
[68 145]
[70 144]
[71 143]
[72 142]
[73 140]
[74 139]
[75 138]
[78 137]
[79 136]
[80 135]
[84 131]
[85 130]
[86 129]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
