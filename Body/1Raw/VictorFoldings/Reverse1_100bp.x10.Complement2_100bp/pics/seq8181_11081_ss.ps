%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[149.75854492 566.95056152]
[147.89169312 552.00640869]
[149.28149414 537.01031494]
[153.86294556 522.66369629]
[161.42176819 509.63766479]
[171.60443115 498.54138184]
[183.93464661 489.89385986]
[197.83573914 484.09954834]
[195.16993713 469.33834839]
[192.50415039 454.57711792]
[189.83834839 439.81588745]
[187.17256165 425.05468750]
[172.95932007 416.06454468]
[169.57929993 399.24520874]
[179.60289001 384.90829468]
[176.71762085 370.18841553]
[173.83235168 355.46850586]
[169.96804810 340.97482300]
[165.14204407 326.77236938]
[160.31605530 312.56991577]
[155.38446045 298.40377808]
[150.34753418 284.27474976]
[145.31062317 270.14572144]
[140.27371216 256.01669312]
[135.23678589 241.88766479]
[130.19987488 227.75863647]
[125.16295624 213.62960815]
[120.12604523 199.50057983]
[115.08912659 185.37153625]
[107.69823456 198.42430115]
[93.27979279 202.56057739]
[80.09335327 195.41090393]
[75.69270325 181.07095337]
[82.59872437 167.75529480]
[96.85534668 163.09173584]
[110.29509735 169.75108337]
[106.53879547 155.22901917]
[102.78249359 140.70695496]
[99.02619934 126.18490601]
[95.26989746 111.66284180]
[91.19023132 97.22828674]
[86.78923035 82.88844299]
[82.38822937 68.54859924]
[77.98723602 54.20874786]
[73.58623505 39.86890030]
[58.51388550 40.37830353]
[43.83469391 36.97143936]
[30.54792976 29.88639832]
[19.55648422 19.61143875]
[11.60550213 6.85136175]
[7.23188066 -7.52084780]
[6.72800684 -22.52373505]
[10.12222672 -37.13440323]
[17.17731667 -50.35825348]
[27.40705681 -61.29668427]
[40.10973358 -69.20816040]
[35.70873642 -83.54801178]
[31.30773735 -97.88785553]
[26.90673828 -112.22770691]
[22.50574112 -126.56755066]
[18.10474205 -140.90739441]
[13.70374489 -155.24723816]
[9.30274677 -169.58709717]
[4.90174818 -183.92694092]
[0.50075036 -198.26678467]
[-7.46560955 -185.55706787]
[-22.05435753 -182.06874084]
[-34.90839767 -189.80007935]
[-38.66434860 -204.32223511]
[-31.17063522 -217.31623840]
[-16.71999359 -221.33854675]
[-3.59100556 -214.08573914]
[-6.69511557 -228.76103210]
[-9.79922581 -243.43634033]
[-17.12396622 -230.34632874]
[-30.69519424 -223.95713806]
[-45.45117569 -226.65176392]
[-55.88829422 -237.42518616]
[-58.11376572 -252.25918579]
[-51.29753876 -265.62103271]
[-37.98190308 -272.52709961]
[-23.13325882 -270.40161133]
[-12.28922558 -260.03625488]
[-13.62745953 -274.97644043]
[-14.96569443 -289.91662598]
[-16.30392838 -304.85681152]
[-17.64216232 -319.79699707]
[-19.31370354 -334.70358276]
[-21.31771660 -349.56909180]
[-23.32172966 -364.43463135]
[-38.27386475 -366.51699829]
[-52.10926056 -372.55722046]
[-63.80123138 -382.10711670]
[-72.48216248 -394.45797729]
[-77.50787354 -408.69332886]
[-78.50541687 -423.75677490]
[-75.40076447 -438.53051758]
[-68.42431641 -451.91827393]
[-58.09375763 -462.92654419]
[-45.17568970 -470.73846436]
[-30.62872124 -474.77435303]
[-15.53233147 -474.73468018]
[-1.00677228 -470.62240601]
[11.87006283 -462.74270630]
[22.14262772 -451.68029785]
[29.04862785 -438.25607300]
[32.07559586 -423.46621704]
[30.99890518 -408.40820312]
[25.89845848 -394.19949341]
[17.15274048 -381.89440918]
[5.41074276 -372.40609741]
[-8.45620251 -366.43862915]
[-6.45218849 -351.57312012]
[-4.44817495 -336.70758057]
[-1.88098109 -334.29058838]
[-0.35693538 -330.51007080]
[-0.50415117 -325.86984253]
[-2.70197725 -321.13522339]
[-1.36374319 -306.19503784]
[-0.02550896 -291.25485229]
[1.31272519 -276.31466675]
[2.65095949 -261.37448120]
[4.87607670 -246.54045105]
[7.98018646 -231.86514282]
[11.08429718 -217.18984985]
[14.84059715 -202.66778564]
[19.24159622 -188.32794189]
[23.64259338 -173.98809814]
[28.04359245 -159.64823914]
[32.44459152 -145.30839539]
[36.84558868 -130.96855164]
[41.24658585 -116.62870026]
[45.64758301 -102.28885651]
[50.04858017 -87.94900513]
[54.44958115 -73.60916138]
[69.40341187 -74.18565369]
[84.00811005 -70.86908722]
[97.26679230 -63.87967300]
[108.27285004 -53.68854904]
[116.27196503 -40.98600388]
[120.71378326 -26.63472176]
[121.28977966 -11.61120987]
[117.95468140 3.06066179]
[110.92999268 16.37943077]
[100.68923187 27.43439865]
[87.92608643 35.46790314]
[92.32707977 49.80775070]
[96.72808075 64.14759827]
[101.12908173 78.48744202]
[105.53007507 92.82729340]
[108.64662933 95.09873962]
[110.74683380 98.73288727]
[111.24453735 103.24501038]
[109.79195404 107.90653992]
[113.54825592 122.42860413]
[117.30455780 136.95066833]
[121.06085968 151.47271729]
[124.81716156 165.99478149]
[129.21815491 180.33462524]
[134.25506592 194.46365356]
[139.29199219 208.59268188]
[144.32890320 222.72171021]
[149.36581421 236.85073853]
[154.40274048 250.97976685]
[159.43965149 265.10879517]
[164.47656250 279.23782349]
[169.51348877 293.36685181]
[175.34284973 300.39938354]
[174.51850891 307.74392700]
[179.34449768 321.94638062]
[184.17050171 336.14883423]
[189.20919800 322.02044678]
[201.02108765 312.77493286]
[215.94610596 311.27713013]
[229.35960388 317.99114990]
[237.10525513 330.83657837]
[236.78297424 345.83312988]
[228.49263000 358.33392334]
[214.80307007 364.46548462]
[199.95616150 362.32788086]
[188.55224609 352.58325195]
[191.43751526 367.30313110]
[194.32278442 382.02304077]
[206.29162598 388.20053101]
[212.42767334 399.97167969]
[210.68949890 412.93548584]
[201.93377686 422.38888550]
[204.59956360 437.15011597]
[207.26536560 451.91131592]
[209.93115234 466.67254639]
[212.59695435 481.43374634]
[227.64666748 481.99969482]
[242.22274780 485.78808594]
[255.64344788 492.62173462]
[267.28106689 502.18103027]
[276.59127808 514.01885986]
[283.13864136 527.58154297]
[286.61691284 542.23468018]
[286.86340332 557.29302979]
[283.86660767 572.05218506]
[277.76666260 585.82189941]
[268.84887695 597.95812988]
[257.53039551 607.89318848]
[244.34053040 615.16241455]
[229.89625549 619.42584229]
[214.87313843 620.48406982]
[199.97381592 618.28759766]
[185.89518738 612.93908691]
[173.29573059 604.68878174]
[162.76472473 593.92254639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[15 183]
[16 182]
[17 181]
[18 171]
[19 170]
[20 169]
[21 167]
[22 166]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[29 159]
[36 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[65 126]
[72 125]
[73 124]
[74 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
