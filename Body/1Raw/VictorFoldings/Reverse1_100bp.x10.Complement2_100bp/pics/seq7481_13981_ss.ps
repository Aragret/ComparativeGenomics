%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[100.99925995 969.58551025]
[86.20795441 967.05358887]
[71.63497162 963.47290039]
[57.35455322 958.86169434]
[43.43948364 953.24353027]
[29.96066666 946.64697266]
[16.98678970 939.10559082]
[4.58396339 930.65795898]
[-7.18460798 921.34698486]
[-18.25895500 911.22015381]
[-28.58264351 900.32916260]
[-38.10306549 888.72937012]
[-46.77170944 876.47998047]
[-54.54439926 863.64337158]
[-61.38152695 850.28497314]
[-67.24825287 836.47283936]
[-72.11467743 822.27734375]
[-75.95600891 807.77087402]
[-78.75267029 793.02734375]
[-80.49040222 778.12188721]
[-81.16036224 763.13037109]
[-80.75913239 748.12933350]
[-79.28874969 733.19506836]
[-76.75671387 718.40380859]
[-73.17592621 703.83087158]
[-68.56462860 689.55047607]
[-62.94633102 675.63543701]
[-56.34965515 662.15667725]
[-48.80821991 649.18286133]
[-40.36045074 636.78009033]
[-31.04940033 625.01159668]
[-20.92251396 613.93731689]
[-10.03139591 603.61370850]
[1.56845307 594.09338379]
[13.81792259 585.42480469]
[26.65459251 577.65222168]
[40.01305008 570.81518555]
[53.82521820 564.94860840]
[68.02072144 560.08227539]
[82.52720642 556.24102783]
[97.27076721 553.44451904]
[112.17626953 551.70690918]
[111.50648499 536.72186279]
[110.83670044 521.73681641]
[110.16691589 506.75177002]
[109.49713135 491.76672363]
[108.82734680 476.78170776]
[100.52945709 464.41259766]
[107.64282990 450.28070068]
[106.97304535 435.29568481]
[106.30326080 420.31063843]
[105.63347626 405.32559204]
[104.96369171 390.34054565]
[92.07896423 379.53210449]
[90.97631836 362.41198730]
[102.82548523 349.54275513]
[101.93267059 334.56936646]
[101.03985596 319.59594727]
[100.14704132 304.62252808]
[99.25421906 289.64913940]
[90.77310181 277.40496826]
[97.67527771 263.16873169]
[96.78246307 248.19531250]
[95.88964844 233.22190857]
[94.99683380 218.24850464]
[94.10401917 203.27510071]
[93.09975433 188.30876160]
[81.48268127 197.79788208]
[66.78917694 194.78112793]
[59.85074234 181.48233032]
[65.78214264 167.70486450]
[80.21096039 163.60496521]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[82.92531586 72.06732941]
[92.28604126 57.22334671]
[92.06271362 42.22500992]
[91.83938599 27.22667313]
[91.61605835 12.22833538]
[91.39273071 -2.77000213]
[91.05775452 -17.76626205]
[82.91300201 -31.32994652]
[90.26792908 -44.28194427]
[89.70971680 -59.27155304]
[89.03993225 -74.25659180]
[88.25861359 -89.23622894]
[87.36579895 -104.20964050]
[78.82081604 -117.52481079]
[85.78685760 -130.69004822]
[84.89404297 -145.66345215]
[70.35944366 -149.96708679]
[58.17516708 -158.98481750]
[49.81252289 -171.62767029]
[46.28134155 -186.36898804]
[48.00802612 -201.42869568]
[54.78407669 -214.98822021]
[65.79124451 -225.41021729]
[79.70037079 -231.43617249]
[94.83185577 -232.33840942]
[109.35849762 -228.00799561]
[121.52613068 -218.96783447]
[129.86546326 -206.30958557]
[133.36947632 -191.56178284]
[131.61503601 -176.50529480]
[124.81401062 -162.95826721]
[113.78765106 -152.55657959]
[99.86744690 -146.55627441]
[100.76026154 -131.58287048]
[109.24138641 -119.33869171]
[102.33920288 -105.10245514]
[103.23201752 -90.12904358]
[106.76807404 -83.63919830]
[104.02497101 -74.92637634]
[104.69476318 -59.94134140]
[108.13379669 -53.39956665]
[105.26128387 -44.72854996]
[113.37409210 -32.23728943]
[106.05110168 -18.21286774]
[109.39235687 -11.62061501]
[106.39106750 -2.99333000]
[106.61439514 12.00500774]
[106.83772278 27.00334549]
[107.06105042 42.00168228]
[107.28437805 57.00001907]
[115.74301910 65.64744568]
[116.05182648 78.14097595]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[108.05821228 187.19311523]
[111.81722260 195.51823425]
[109.07742310 202.38229370]
[109.97023773 217.35569763]
[110.86305237 232.32910156]
[111.75587463 247.30250549]
[112.64868927 262.27590942]
[121.19367218 275.59109497]
[114.22763062 288.75631714]
[115.12044525 303.72973633]
[116.01325989 318.70312500]
[116.90607452 333.67654419]
[117.79888916 348.64993286]
[128.83509827 356.37112427]
[133.34350586 368.85650635]
[129.88894653 381.47189331]
[119.94873047 389.67077637]
[120.61851501 404.65582275]
[121.28829956 419.64083862]
[121.95808411 434.62588501]
[122.62786865 449.61093140]
[130.97366333 463.05184937]
[123.81238556 476.11190796]
[124.48217010 491.09695435]
[125.15195465 506.08200073]
[125.82173920 521.06701660]
[126.49152374 536.05206299]
[127.16130829 551.03710938]
[142.16239929 551.43798828]
[157.09666443 552.90802002]
[171.88800049 555.43969727]
[186.46104431 559.02020264]
[200.74153137 563.63116455]
[214.65669250 569.24914551]
[228.13560486 575.84545898]
[241.10960388 583.38665771]
[253.51255798 591.83410645]
[265.28128052 601.14489746]
[276.35577393 611.27154541]
[286.67962646 622.16241455]
[296.20022583 633.76202393]
[304.86904907 646.01129150]
[312.64193726 658.84777832]
[319.47927856 672.20611572]
[325.34622192 686.01812744]
[330.21286011 700.21350098]
[334.05441284 714.71990967]
[336.85128784 729.46343994]
[338.58926392 744.36889648]
[339.25946045 759.36035156]
[338.85842896 774.36145020]
[337.38827515 789.29565430]
[334.85647583 804.08697510]
[331.27590942 818.66003418]
[326.66485596 832.94049072]
[321.04675293 846.85559082]
[314.45028687 860.33447266]
[306.90905762 873.30841064]
[298.46145630 885.71130371]
[289.15060425 897.47991943]
[279.02389526 908.55432129]
[268.13293457 918.87811279]
[256.53323364 928.39862061]
[244.28388977 937.06738281]
[231.44734192 944.84014893]
[218.08898926 951.67736816]
[204.27690125 957.54418945]
[190.08148193 962.41076660]
[175.57504272 966.25219727]
[160.83152771 969.04895020]
[145.92605591 970.78680420]
[130.93458557 971.45690918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[47 161]
[49 159]
[50 158]
[51 157]
[52 156]
[53 155]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[62 145]
[63 144]
[64 143]
[65 142]
[66 141]
[67 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[79 132]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 123]
[88 121]
[89 119]
[90 118]
[91 116]
[92 115]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
