%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[39.58837891 562.58453369]
[36.60832977 577.30780029]
[31.73195076 591.51611328]
[25.04268074 604.96630859]
[16.65497971 617.42834473]
[6.71237612 628.68890381]
[-4.61500216 638.55523682]
[-17.13332748 646.85864258]
[-30.62839508 653.45703125]
[-44.86928558 658.23736572]
[-59.61231995 661.11798096]
[-74.60522461 662.04956055]
[-89.59145355 661.01611328]
[-104.31456757 658.03540039]
[-118.52264404 653.15832520]
[-131.97254944 646.46844482]
[-144.43415833 638.08013916]
[-155.69421387 628.13696289]
[-165.56005859 616.80914307]
[-173.86286926 604.29040527]
[-180.46057129 590.79504395]
[-185.24028015 576.55389404]
[-188.12019348 561.81072998]
[-189.05104065 546.81781006]
[-188.01689148 531.83160400]
[-185.03544617 517.10864258]
[-180.15771484 502.90078735]
[-173.46716309 489.45120239]
[-165.07827759 476.98999023]
[-155.13459778 465.73040771]
[-143.80627441 455.86511230]
[-131.28717041 447.56289673]
[-117.79146576 440.96582031]
[-103.55012512 436.18679810]
[-88.80681610 433.30758667]
[-73.81381989 432.37747192]
[-58.82769012 433.41232300]
[-44.10485840 436.39447021]
[-29.89724922 441.27288818]
[-23.21705437 427.84249878]
[-16.53685951 414.41213989]
[-9.85666466 400.98175049]
[-3.17647004 387.55139160]
[3.50372458 374.12100220]
[10.18391895 360.69064331]
[5.21565199 346.69592285]
[11.79899883 332.98043823]
[26.51162338 327.86416626]
[33.19181824 314.43377686]
[39.87201309 301.00341797]
[46.55220795 287.57302856]
[53.23240280 274.14263916]
[59.30623627 260.42739868]
[64.76159668 246.45458984]
[70.21694946 232.48179626]
[75.67230988 218.50898743]
[79.42861176 203.98693848]
[81.43262482 189.12139893]
[83.43663788 174.25587463]
[72.67788696 161.32962036]
[74.63538361 144.28605652]
[88.58303833 133.72753906]
[90.36550903 118.83381653]
[92.14797211 103.94010162]
[90.47402954 101.39305878]
[89.68985748 98.18064880]
[90.04367828 94.63124084]
[91.65893555 91.16033173]
[94.50558472 88.22273254]
[97.17138672 73.46150970]
[92.00981140 58.50595093]
[101.88583374 47.35635376]
[104.55162811 32.59513474]
[92.82717896 41.95127487]
[77.84815979 42.74428177]
[65.20136261 34.67838669]
[59.60374451 20.76197052]
[63.14307022 6.18551016]
[74.49925995 -3.61433363]
[89.43673706 -4.98246193]
[102.38419342 2.59140325]
[108.51267242 16.28355789]
[112.91366577 1.94371140]
[117.31466675 -12.39613533]
[121.71566772 -26.73598289]
[125.79533386 -41.17053604]
[129.55163574 -55.69259644]
[133.30793762 -70.21465302]
[137.06423950 -84.73671722]
[140.82054138 -99.25877380]
[144.57682800 -113.78083038]
[147.89909363 -128.40829468]
[150.78436279 -143.12818909]
[139.62297058 -158.43626404]
[143.13502502 -176.72775269]
[158.63148499 -186.47328186]
[161.07720947 -201.27255249]
[163.52293396 -216.07182312]
[165.96865845 -230.87109375]
[152.16419983 -236.94461060]
[140.30435181 -246.26098633]
[131.13464355 -258.23458862]
[125.23149872 -272.11276245]
[122.96598053 -287.02310181]
[124.48051453 -302.02835083]
[129.67988586 -316.18521118]
[138.23725891 -328.60385132]
[149.61471558 -338.50357056]
[163.09706116 -345.26205444]
[177.83677673 -348.45449829]
[192.90730286 -347.88021851]
[207.36131287 -343.57528687]
[220.29020691 -335.81030273]
[230.88127136 -325.07345581]
[238.46871948 -312.03958130]
[242.57562256 -297.52807617]
[242.94381714 -282.45111084]
[239.55014038 -267.75640869]
[232.60792542 -254.36773682]
[222.55357361 -243.12670898]
[210.01911926 -234.73992920]
[195.79246521 -229.73460388]
[180.76792908 -228.42536926]
[178.32220459 -213.62609863]
[175.87648010 -198.82682800]
[173.43075562 -184.02755737]
[181.92713928 -176.41325378]
[185.73220825 -165.53038025]
[183.79145813 -154.04441833]
[176.47297668 -144.82809448]
[165.50425720 -140.24290466]
[162.61898804 -125.52301788]
[164.06915283 -123.12402344]
[164.65640259 -120.00605774]
[164.10217285 -116.49489594]
[162.25079346 -113.01109314]
[159.09889221 -110.02452850]
[155.34259033 -95.50247192]
[151.58628845 -80.98041534]
[147.82998657 -66.45835114]
[144.07368469 -51.93629456]
[140.31739807 -37.41423416]
[141.78215027 -34.20693207]
[141.76620483 -30.13080597]
[139.87811279 -25.88953209]
[136.05551147 -22.33498573]
[131.65451050 -7.99513769]
[127.25351715 6.34470940]
[122.85251617 20.68455696]
[119.31284332 35.26093292]
[116.64704895 50.02214813]
[121.99929810 63.92188644]
[111.93260193 76.12730408]
[109.26680756 90.88852692]
[107.04168701 105.72256470]
[105.25922394 120.61628723]
[103.47675323 135.51000977]
[112.96508026 145.06962585]
[115.18282318 158.15748596]
[109.54124451 169.95809937]
[98.30216217 176.25988770]
[96.29814911 191.12541199]
[94.29413605 205.99095154]
[103.24086761 193.95118713]
[115.72767639 185.63977051]
[130.28762817 182.03312683]
[145.21023560 183.55496216]
[158.74238586 190.02648926]
[169.29435730 200.68743896]
[175.62652588 214.28536987]
[176.99494934 229.22280884]
[173.23892212 243.74493408]
[164.79965210 256.14569092]
[152.66860962 264.96826172]
[138.27090454 269.17617798]
[123.29799652 268.27505493]
[109.50887299 262.37081909]
[98.52346802 252.15705872]
[91.63233948 238.83369446]
[89.64510345 223.96435547]
[84.18975067 237.93714905]
[78.73439026 251.90994263]
[73.27903748 265.88275146]
[87.41584015 260.86770630]
[101.01696777 267.19299316]
[106.29107666 281.23519897]
[100.21691132 294.95031738]
[86.27404022 300.48171997]
[72.44956207 294.66073608]
[66.66278076 280.82284546]
[59.98258209 294.25323486]
[53.30239105 307.68359375]
[46.62219620 321.11398315]
[39.94200134 334.54434204]
[44.73843384 349.36434937]
[37.77244568 362.88949585]
[23.61429596 367.37081909]
[16.93410110 380.80120850]
[10.25390625 394.23156738]
[3.57371140 407.66195679]
[-3.10648322 421.09231567]
[-9.78667831 434.52270508]
[-16.46687317 447.95306396]
[-4.00447083 456.34017944]
[7.25653696 466.28225708]
[17.12345886 477.60916138]
[25.42746162 490.12710571]
[32.02645111 503.62185669]
[36.80751038 517.86248779]
[39.68882751 532.60540771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[48 194]
[49 193]
[50 192]
[51 191]
[52 190]
[53 183]
[54 182]
[55 181]
[56 180]
[57 163]
[58 162]
[59 161]
[62 157]
[63 156]
[64 155]
[69 154]
[70 153]
[72 151]
[73 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 132]
[93 131]
[96 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
