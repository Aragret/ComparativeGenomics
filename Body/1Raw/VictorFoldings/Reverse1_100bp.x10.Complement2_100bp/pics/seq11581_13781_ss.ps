%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[122.21479034 489.84155273]
[121.36869049 474.81262207]
[123.56555176 459.92105103]
[128.71542358 445.77667236]
[136.60740662 432.95864868]
[146.91833496 421.99191284]
[159.22599792 413.32553101]
[173.02639771 407.31436157]
[169.92228699 392.63906860]
[166.81817627 377.96374512]
[163.71406555 363.28845215]
[153.51045227 352.43783569]
[158.22445679 337.33523560]
[155.12034607 322.65994263]
[151.90707397 308.00814819]
[148.36740112 293.43176270]
[144.61109924 278.90969849]
[140.85479736 264.38766479]
[137.09849548 249.86560059]
[133.34219360 235.34353638]
[129.26252747 220.90898132]
[118.13156891 211.01196289]
[121.47937775 195.54901123]
[117.07838440 181.20916748]
[112.67738342 166.86932373]
[108.27639008 152.52947998]
[103.87538910 138.18962097]
[99.47438812 123.84977722]
[95.07339478 109.50993347]
[88.79602814 95.88661957]
[80.75485992 83.22409058]
[66.82530212 75.72222137]
[66.53407288 60.83046341]
[58.49290085 48.16793823]
[50.45172882 35.50541306]
[42.41055679 22.84288788]
[34.36938095 10.18036366]
[26.32820892 -2.48216128]
[18.28703690 -15.14468575]
[10.24586296 -27.80721092]
[2.20469046 -40.46973419]
[-5.83648252 -53.13225937]
[-4.24869728 -38.21653366]
[-6.22779369 -23.34766769]
[-11.66184425 -9.36656952]
[-20.24352837 2.93606114]
[-31.48750687 12.86445141]
[-44.75788116 19.85710144]
[-59.30414581 23.51854515]
[-74.30364227 23.64170837]
[-88.90807343 20.21962738]
[-102.29148102 13.44583416]
[-113.69698334 3.70342326]
[-122.47953033 -8.45662689]
[-128.14244080 -22.34660530]
[-130.36543274 -37.18096542]
[-129.02279663 -52.12075806]
[-124.19046021 -66.32106018]
[-116.14171600 -78.97877502]
[-105.33176422 -89.37805176]
[-92.37195587 -96.93075562]
[-77.99523163 -101.20974731]
[-63.01466370 -101.97303009]
[-48.27747726 -99.17743683]
[-34.61713409 -92.98107147]
[-22.80618668 -83.73435974]
[-13.51204681 -71.95935059]
[-16.61615753 -86.63465118]
[-19.72026634 -101.30995178]
[-22.82437706 -115.98526001]
[-26.31461334 -119.86666870]
[-27.81678963 -124.25947571]
[-27.46902275 -128.32077026]
[-25.72395706 -131.38459778]
[-28.16968346 -146.18386841]
[-30.61541176 -160.98313904]
[-33.06113815 -175.78240967]
[-35.50686646 -190.58168030]
[-37.95259476 -205.38095093]
[-40.39831924 -220.18022156]
[-42.84404755 -234.97949219]
[-52.85575104 -243.11145020]
[-54.58813095 -255.48814392]
[-47.65262985 -265.39901733]
[-55.74351501 -252.76820374]
[-69.67097473 -247.19810486]
[-84.24040222 -250.76625061]
[-94.01777649 -262.14178467]
[-95.35636139 -277.08193970]
[-87.75691223 -290.01440430]
[-74.05382538 -296.11566162]
[-59.35802078 -293.11013794]
[-49.15016937 -282.11770630]
[-49.59677505 -297.11105347]
[-50.04338455 -312.10443115]
[-58.18813705 -325.66809082]
[-50.83320236 -338.62008667]
[-65.05639648 -343.98379517]
[-76.14089203 -354.38583374]
[-82.39638519 -368.23999023]
[-82.86895752 -383.43356323]
[-77.48654938 -397.64968872]
[-67.06993866 -408.72048950]
[-53.20758057 -414.95776367]
[-38.01338577 -415.41033936]
[-23.80435371 -410.00924683]
[-12.74726582 -399.57806396]
[-6.52824259 -385.70751953]
[-6.09564161 -370.51275635]
[-11.51543140 -356.31082153]
[-21.96113396 -345.26748657]
[-35.83985519 -339.06671143]
[-27.72704506 -326.57543945]
[-35.05003357 -312.55102539]
[-34.60342789 -297.55767822]
[-34.15682220 -282.56433105]
[-32.81858826 -267.62414551]
[-21.16283607 -254.50505066]
[-28.04477692 -237.42523193]
[-25.59905052 -222.62596130]
[-23.15332222 -207.82669067]
[-20.70759583 -193.02742004]
[-18.26186752 -178.22814941]
[-15.81614017 -163.42887878]
[-13.37041283 -148.62960815]
[-10.92468548 -133.83033752]
[-8.14907455 -119.08937073]
[-5.04496431 -104.41406250]
[-1.94085431 -89.73876190]
[1.16325581 -75.06346130]
[6.82604265 -61.17343521]
[14.86721516 -48.51091003]
[22.90838814 -35.84838486]
[30.94956207 -23.18585968]
[38.99073410 -10.52333450]
[47.03190613 2.13919091]
[55.07308197 14.80171585]
[63.11425400 27.46424103]
[71.15542603 40.12676620]
[79.19660187 52.78929138]
[92.55099487 59.38545227]
[93.41738129 75.18292236]
[101.45855713 87.84544373]
[100.26106262 72.89331818]
[103.68145752 58.28849792]
[111.39373779 45.42301178]
[122.66281891 35.52312088]
[136.41459656 29.53241730]
[151.33834839 28.02190018]
[166.01162720 31.13554001]
[179.03588867 38.57656479]
[189.16972351 49.63574600]
[195.44723511 63.25898743]
[197.27011108 78.14781189]
[194.46459961 92.88311768]
[187.29809570 106.06041718]
[176.45367432 116.42373657]
[162.96495056 122.98532104]
[148.11758423 125.11975098]
[133.32673645 122.62358856]
[120.00217438 115.73475647]
[109.41323853 105.10893250]
[113.81423950 119.44878387]
[118.21523285 133.78863525]
[122.61623383 148.12847900]
[127.01723480 162.46832275]
[131.41822815 176.80816650]
[135.81922913 191.14801025]
[147.26498413 202.07072449]
[143.60237122 216.50798035]
[147.42497253 220.06253052]
[149.31306458 224.30380249]
[149.32902527 228.37992859]
[147.86425781 231.58723450]
[151.62055969 246.10929871]
[155.37686157 260.63134766]
[159.13316345 275.15341187]
[162.88946533 289.67547607]
[167.24365234 294.65066528]
[168.27658081 300.23904419]
[166.53453064 304.68588257]
[171.48690796 312.36129761]
[169.79565430 319.55581665]
[172.89976501 334.23114014]
[183.32539368 346.13140869]
[178.38935852 360.18435669]
[181.49346924 374.85964966]
[184.59757996 389.53494263]
[187.70169067 404.21026611]
[202.75415039 404.11846924]
[217.51689148 407.05895996]
[231.38539124 412.91128540]
[243.79173279 421.43582153]
[254.22789001 432.28344727]
[262.26651001 445.01000977]
[267.57843018 459.09436035]
[269.94613647 473.95971680]
[269.27261353 488.99737549]
[265.58551025 503.59155273]
[259.03576660 517.14465332]
[249.89161682 529.10162354]
[238.52749634 538.97283936]
[225.40876770 546.35418701]
[211.07261658 550.94329834]
[196.10612488 552.55224609]
[181.12214661 551.11523438]
[166.73425293 546.69097900]
[153.53164673 539.46081543]
[142.05494690 529.72064209]
[132.77412415 517.86944580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[10 187]
[11 186]
[13 184]
[14 183]
[15 181]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 170]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 143]
[31 142]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[67 130]
[68 129]
[69 128]
[70 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[84 117]
[93 116]
[94 115]
[95 114]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
