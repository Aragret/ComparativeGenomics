%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[99.63172913 619.89190674]
[89.75908661 608.57000732]
[81.44876099 596.05627441]
[74.84294891 582.56488037]
[70.05469513 568.32659912]
[67.16592407 553.58514404]
[66.22607422 538.59277344]
[67.25122833 523.60595703]
[70.22383118 508.88122559]
[75.09303284 494.67044067]
[81.77550507 481.21682739]
[90.15690613 468.75061035]
[100.09381866 457.48504639]
[111.41620636 447.61294556]
[123.93033600 439.30322266]
[137.42207336 432.69802856]
[151.66053772 427.91046143]
[148.77526855 413.19058228]
[145.88999939 398.47067261]
[133.66007996 385.88513184]
[139.77249146 368.51504517]
[136.66838074 353.83975220]
[133.56427002 339.16445923]
[130.46015930 324.48913574]
[127.72031403 322.26977539]
[125.91931152 318.61309814]
[125.72099304 313.97476196]
[127.56058502 309.08981323]
[125.11486053 294.29052734]
[122.66912842 279.49127197]
[112.96020508 268.19586182]
[118.34387207 253.31880188]
[115.89814758 238.51953125]
[113.34231567 223.73887634]
[110.67651367 208.97766113]
[99.16725159 203.18402100]
[93.00437927 191.64706421]
[94.63550568 178.47323608]
[103.68750763 168.49948120]
[101.24178314 153.70021057]
[98.79605103 138.90093994]
[96.35032654 124.10166168]
[93.90459442 109.30239105]
[84.31162262 120.83386230]
[69.38761902 122.34185028]
[57.68172455 112.96250153]
[55.89961624 98.06874084]
[65.06216431 86.19239044]
[79.92063904 84.13676453]
[91.96295166 93.07859802]
[90.84729767 78.12014008]
[89.73165131 63.16168976]
[88.61600494 48.20323563]
[87.50035095 33.24478531]
[86.38470459 18.28633118]
[85.26905823 3.32787681]
[83.15443420 -11.52232075]
[80.05032349 -26.19762230]
[76.56008911 -30.07903099]
[75.05790710 -34.47183990]
[75.40567780 -38.53313446]
[77.15074158 -41.59696960]
[74.70501709 -56.39624023]
[72.25928497 -71.19551086]
[62.37543106 -83.54945374]
[67.93402863 -97.36796570]
[65.48830414 -112.16723633]
[63.04257202 -126.96650696]
[60.59684753 -141.76577759]
[58.15111923 -156.56504822]
[54.82886124 -171.19250488]
[50.64184952 -185.59629822]
[46.45483780 -200.00007629]
[42.26782608 -214.40385437]
[38.08081436 -228.80763245]
[33.89380264 -243.21142578]
[30.87005424 -228.51934814]
[23.50890732 -215.44978333]
[12.51197720 -205.24842834]
[-1.07257783 -198.88763428]
[-15.94996452 -196.97363281]
[-30.70216560 -199.68888855]
[-43.92309189 -206.77458191]
[-54.35261536 -217.55534363]
[-60.99665451 -231.00364685]
[-63.22194672 -245.83766174]
[-60.81638718 -260.64352417]
[-54.00925827 -274.01000977]
[-43.44937515 -284.66311646]
[-30.14323997 -291.58749390]
[-15.35910320 -294.12307739]
[-0.50609797 -292.02828979]
[13.00008202 -285.50271606]
[23.87211418 -275.16833496]
[31.07413101 -262.00915527]
[23.13222313 -275.69259644]
[30.67917633 -288.53366089]
[30.45584869 -303.53198242]
[16.43632698 -309.47949219]
[6.05267620 -320.61950684]
[1.10392654 -335.02191162]
[2.44747853 -350.19146729]
[9.85055351 -363.49987793]
[22.03052521 -372.64144897]
[36.87714005 -376.03231812]
[51.81812668 -373.08499146]
[64.26487732 -364.31011963]
[72.06091309 -351.22802734]
[73.85552216 -336.10522461]
[69.33778381 -321.56182861]
[59.29041290 -310.11761475]
[45.45418549 -303.75531006]
[45.67751312 -288.75698853]
[53.60344696 -276.14630127]
[46.07246780 -262.23248291]
[48.29758453 -247.39843750]
[52.48459625 -232.99464417]
[56.67160797 -218.59086609]
[60.85861969 -204.18708801]
[65.04563141 -189.78330994]
[69.23264313 -175.37951660]
[75.56350708 -188.97805786]
[88.62193298 -196.35893250]
[103.53746033 -194.76927185]
[114.74696350 -184.80197144]
[118.06957245 -170.17459106]
[112.26603699 -156.34277344]
[99.50093079 -148.46546936]
[84.53532410 -149.48068237]
[72.95038605 -159.01077271]
[75.39611816 -144.21150208]
[77.84184265 -129.41223145]
[80.28757477 -114.61296082]
[82.73329926 -99.81369019]
[92.44222260 -88.51829529]
[87.05855560 -73.64123535]
[89.50428772 -58.84196854]
[91.95001221 -44.04269409]
[94.72562408 -29.30173302]
[97.82973480 -14.62643051]
[104.51161957 -28.05596542]
[117.33846283 -35.83234406]
[132.33573914 -35.54597092]
[144.85635376 -27.28557968]
[151.02067566 -13.61074638]
[148.91862488 1.24123621]
[139.20153809 12.66831779]
[124.88036346 17.12969398]
[110.39266968 13.24295902]
[100.22750854 2.21222830]
[101.34316254 17.17068100]
[102.45880890 32.12913513]
[103.57445526 47.08758926]
[104.69010162 62.04604340]
[105.80575562 77.00449371]
[106.92140198 91.96295166]
[108.70386505 106.85666656]
[111.14959717 121.65593719]
[113.59532166 136.45520020]
[116.04105377 151.25447083]
[118.48677826 166.05375671]
[132.89198303 175.97894287]
[135.60856628 192.91810608]
[125.43773651 206.31187439]
[128.10353088 221.07308960]
[132.70825195 228.96195984]
[130.69741821 236.07380676]
[133.14314270 250.87307739]
[143.02699280 263.22702026]
[137.46839905 277.04553223]
[139.91412354 291.84481812]
[142.35986328 306.64407349]
[145.13546753 321.38504028]
[148.23957825 336.06033325]
[151.34368896 350.73565674]
[154.44779968 365.41094971]
[164.81262207 373.08773804]
[167.09593201 385.37472534]
[160.60989380 395.58541870]
[163.49516296 410.30529785]
[166.38043213 425.02520752]
[181.37268066 424.08319092]
[196.35963440 425.10620117]
[211.08482361 428.07672119]
[225.29627991 432.94387817]
[238.75083923 439.62445068]
[251.21827698 448.00405884]
[262.48526001 457.93936157]
[272.35897827 469.26034546]
[280.67050171 481.77328491]
[287.27758789 495.26406860]
[292.06719971 509.50186157]
[294.95736694 524.24304199]
[295.89865112 539.23535156]
[294.87490845 554.22222900]
[291.90371704 568.94726562]
[287.03585815 583.15850830]
[280.35467529 596.61273193]
[271.97445679 609.07977295]
[262.03863525 620.34625244]
[250.71717834 630.21948242]
[238.20384216 638.53039551]
[224.71273804 645.13684082]
[210.47471619 649.92578125]
[195.73341370 652.81524658]
[180.74107361 653.75579834]
[165.75422668 652.73138428]
[151.02932739 649.75946045]
[136.81832886 644.89093018]
[123.36439514 638.20910645]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 181]
[18 180]
[19 179]
[21 176]
[22 175]
[23 174]
[24 173]
[28 172]
[29 171]
[30 170]
[32 168]
[33 167]
[34 165]
[35 164]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[50 156]
[51 155]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 140]
[58 139]
[62 138]
[63 137]
[64 136]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 121]
[72 120]
[73 119]
[74 118]
[75 117]
[76 116]
[95 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
