%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[266.48254395 557.32830811]
[268.31512451 542.42456055]
[271.80487061 527.81970215]
[276.90795898 513.69738770]
[283.56015015 500.23532104]
[291.67785645 487.60269165]
[301.15890503 475.95840454]
[311.88415527 465.44891357]
[323.71862793 456.20635986]
[315.86688232 443.42550659]
[308.01513672 430.64468384]
[300.16336060 417.86383057]
[292.31161499 405.08297729]
[274.28274536 401.90881348]
[264.12518311 386.29672241]
[268.68157959 367.90777588]
[260.45275879 355.36636353]
[252.22395325 342.82498169]
[238.77282715 336.42837524]
[237.67134094 320.64556885]
[229.44253540 308.10415649]
[213.64472961 310.50836182]
[198.32426453 305.76528931]
[186.56330872 294.77603149]
[180.75111389 279.70358276]
[182.09863281 263.54724121]
[190.38665771 249.54571533]
[181.97204590 237.12821960]
[173.55743408 224.71072388]
[161.74134827 222.12097168]
[154.62936401 211.84461975]
[156.48258972 199.08027649]
[148.25378418 186.53887939]
[140.02497864 173.99748230]
[131.79617310 161.45606995]
[123.56735992 148.91467285]
[115.33855438 136.37327576]
[107.01660919 123.89347839]
[98.60198975 111.47598267]
[98.54962921 126.47589111]
[91.61416626 139.77624512]
[79.34500122 148.40570068]
[64.48310089 150.43643188]
[50.34864426 145.41476440]
[40.09931183 134.46253967]
[36.02482986 120.02651978]
[39.03544617 105.33175659]
[48.45858002 93.66108704]
[62.18907928 87.62177277]
[77.15952301 88.56301117]
[90.02548218 96.27454376]
[83.74811554 82.65122986]
[77.47075653 69.02790833]
[71.19339752 55.40459442]
[64.91603851 41.78127670]
[58.63867569 28.15796089]
[52.20514297 21.67355919]
[52.37095642 14.28476429]
[39.70835114 4.79956675]
[41.62940598 -9.97063351]
[28.96679878 -19.45583153]
[30.88785172 -34.22603226]
[24.81401825 -47.94129944]
[12.15141201 -57.42649460]
[14.07246494 -72.19669342]
[7.99863100 -85.91196442]
[1.92479706 -99.62722778]
[-4.41148043 -106.20669556]
[-4.13567591 -113.59220886]
[-10.00463676 -127.39638519]
[-15.87359715 -141.20056152]
[-30.41106415 -137.39530945]
[-45.34767151 -135.74739075]
[-60.36503983 -136.29190063]
[-75.14307404 -139.01724243]
[-89.36678314 -143.86532593]
[-102.73298645 -150.73283386]
[-114.95677948 -159.47334290]
[-125.77761078 -169.90058899]
[-134.96484375 -181.79229736]
[-142.32263184 -194.89500427]
[-147.69416809 -208.92939758]
[-150.96495056 -223.59637451]
[-152.06524658 -238.58326721]
[-150.97161865 -253.57066345]
[-147.70736694 -268.23907471]
[-142.34208679 -282.27587891]
[-134.99011230 -295.38183594]
[-125.80818176 -307.27764893]
[-114.99198151 -317.70968628]
[-102.77207947 -326.45565796]
[-89.40893555 -333.32910156]
[-75.18738556 -338.18350220]
[-60.41056824 -340.91543579]
[-45.39344025 -341.46664429]
[-30.45610428 -339.82534790]
[-15.91694450 -336.02658081]
[-2.08586645 -330.15127563]
[10.74232006 -322.32467651]
[22.29418182 -312.71362305]
[32.32349014 -301.52297974]
[40.61647034 -288.99124146]
[46.99635696 -275.38555908]
[51.32715988 -260.99591064]
[53.51657104 -246.12901306]
[53.51792145 -231.10177612]
[51.33118057 -216.23449707]
[47.00296402 -201.84407043]
[40.62552261 -188.23722839]
[32.33479309 -175.70399475]
[22.30749512 -164.51153564]
[10.75736046 -154.89840698]
[-2.06942081 -147.06951904]
[3.79954004 -133.26535034]
[9.66850090 -119.46116638]
[15.64006329 -105.70106506]
[21.71389771 -91.98579407]
[27.78773117 -78.27053070]
[40.01589584 -69.76634216]
[38.52928543 -54.01513290]
[44.60311890 -40.29986572]
[56.83128357 -31.79567528]
[55.34466934 -16.04446793]
[67.57283783 -7.54027748]
[66.08622742 8.21093082]
[72.26199341 21.88059998]
[78.53935242 35.50391769]
[84.81671143 49.12723160]
[91.09407806 62.75054932]
[97.37143707 76.37386322]
[103.64879608 89.99718475]
[111.01948547 103.06136322]
[119.43410492 115.47885895]
[126.83881378 120.82751465]
[127.87995148 128.14447021]
[136.10876465 140.68586731]
[144.33757019 153.22726440]
[152.56637573 165.76866150]
[160.79518127 178.31007385]
[169.02398682 190.85147095]
[185.65814209 198.74996948]
[185.97492981 216.29609680]
[194.38954163 228.71359253]
[202.80415344 241.13108826]
[216.69628906 238.53195190]
[230.48799133 241.41522217]
[242.10375977 249.31327820]
[249.80844116 261.00637817]
[252.46633911 274.71093750]
[249.70860291 288.35156250]
[241.98393250 299.87533569]
[250.21273804 312.41674805]
[264.25244141 319.71038818]
[264.76535034 334.59616089]
[272.99417114 347.13757324]
[281.22296143 359.67898560]
[293.11102295 359.78396606]
[303.36727905 365.55541992]
[309.50061035 375.45877075]
[310.08560181 386.97283936]
[305.09246826 397.23123169]
[312.94421387 410.01208496]
[320.79595947 422.79290771]
[328.64773560 435.57376099]
[336.49948120 448.35461426]
[350.09320068 441.97564697]
[364.31564331 437.15884399]
[378.98800659 433.96475220]
[393.92572021 432.43356323]
[408.94094849 432.58453369]
[423.84484863 434.41577148]
[438.45001221 437.90420532]
[452.57275391 443.00601196]
[466.03546143 449.65701294]
[478.66879272 457.77355957]
[490.31393433 467.25360107]
[500.82440186 477.97787476]
[510.06799316 489.81155396]
[517.92852783 502.60577393]
[524.30706787 516.19970703]
[529.12347412 530.42230225]
[532.31707764 545.09472656]
[533.84783936 560.03247070]
[533.69641113 575.04772949]
[531.86474609 589.95159912]
[528.37585449 604.55664062]
[523.27362061 618.67919922]
[516.62225342 632.14172363]
[508.50527954 644.77484131]
[499.02493286 656.41967773]
[488.30032349 666.92980957]
[476.46636963 676.17309570]
[463.67190552 684.03320312]
[450.07781982 690.41137695]
[435.85507202 695.22729492]
[421.18252563 698.42053223]
[406.24472046 699.95080566]
[391.22949219 699.79895020]
[376.32568359 697.96679688]
[361.72073364 694.47747803]
[347.59832764 689.37481689]
[334.13601685 682.72302246]
[321.50314331 674.60571289]
[309.85858154 665.12500000]
[299.34875488 654.40008545]
[290.10586548 642.56585693]
[282.24612427 629.77117920]
[275.86837769 616.17687988]
[271.05285645 601.95397949]
[267.86007690 587.28137207]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[16 156]
[17 155]
[18 154]
[20 152]
[21 151]
[27 144]
[28 143]
[29 142]
[32 140]
[33 139]
[34 138]
[35 137]
[36 136]
[37 135]
[38 133]
[39 132]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
[56 126]
[58 125]
[60 123]
[62 121]
[63 120]
[65 118]
[66 117]
[67 116]
[69 115]
[70 114]
[71 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
