%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[8.10137844 465.95449829]
[14.04501057 479.77163696]
[17.42577744 494.42803955]
[18.13499832 509.45257568]
[16.14987755 524.36224365]
[11.53422546 538.67785645]
[4.43641901 551.93908691]
[-4.91537762 563.71972656]
[-16.22054291 573.64105225]
[-29.11566353 581.38415527]
[-43.18621445 586.70013428]
[-57.97988129 589.41809082]
[-73.02111816 589.45056152]
[-87.82640076 586.79669189]
[-101.91980743 581.54162598]
[-114.84829712 573.85437012]
[-126.19625854 563.98199463]
[-135.59892273 552.24188232]
[-142.75399780 539.01147461]
[-147.43151855 524.71600342]
[-149.48109436 509.81500244]
[-148.83686829 494.78753662]
[-145.51951599 480.11663818]
[-139.63568115 466.27395630]
[-131.37452698 453.70440674]
[-121.00160217 442.81210327]
[-108.85035706 433.94720459]
[-95.31139374 427.39459229]
[-80.81994629 423.36499023]
[-65.84185028 421.98791504]
[-50.85858536 423.30761719]
[-36.35181046 427.28167725]
[-29.87231255 413.75332642]
[-23.39281654 400.22497559]
[-16.91332054 386.69665527]
[-10.43382549 373.16830444]
[-16.37367058 361.73379517]
[-14.61688042 348.77249146]
[-5.58280945 339.04641724]
[7.59459925 336.25888062]
[6.33498573 321.41763306]
[19.40849876 312.50729370]
[26.08869362 299.07693481]
[32.76888657 285.64654541]
[39.44908142 272.21618652]
[45.00830841 258.28436279]
[49.40930557 243.94453430]
[45.74670410 229.50726318]
[57.19245529 218.58456421]
[61.59345245 204.24472046]
[65.99445343 189.90486145]
[70.28857422 175.53265381]
[74.47558594 161.12887573]
[78.66259766 146.72508240]
[82.84960938 132.32130432]
[87.03662109 117.91752625]
[91.22363281 103.51374054]
[89.80361938 98.46423340]
[91.31384277 92.97856903]
[95.75567627 88.74689484]
[100.36968994 74.47416687]
[104.98369598 60.20143127]
[109.59770203 45.92869949]
[108.53800964 41.71787643]
[108.84272003 37.78447342]
[110.25710297 34.52334976]
[112.42433167 32.20607758]
[114.93455505 30.95832062]
[120.38991547 16.98552322]
[125.84526825 3.01272464]
[131.30062866 -10.96007347]
[130.49343872 -15.22650146]
[131.03173828 -19.13479614]
[132.63771057 -22.30595207]
[134.93902588 -24.49011993]
[137.51907349 -25.58625412]
[143.79643250 -39.20956802]
[150.07379150 -52.83288574]
[155.11070251 -66.96191406]
[143.03178406 -76.14751434]
[135.41043091 -89.22260284]
[133.38110352 -104.17905426]
[137.22218323 -118.73356628]
[146.31825256 -130.67619324]
[159.25843811 -138.20593262]
[174.05519104 -140.20230103]
[177.81149292 -154.72436523]
[181.56779480 -169.24641418]
[185.32409668 -183.76847839]
[189.08039856 -198.29054260]
[192.18450928 -212.96583557]
[194.63023376 -227.76510620]
[197.07595825 -242.56437683]
[199.52168274 -257.36364746]
[201.96740723 -272.16293335]
[204.41314697 -286.96218872]
[190.35810852 -292.35113525]
[177.67573547 -300.45932007]
[166.88540649 -310.95471191]
[158.42892456 -323.40756226]
[152.65261841 -337.30789185]
[149.79299927 -352.08648682]
[149.96719360 -367.13821411]
[153.16802979 -381.84671021]
[159.26446533 -395.60964966]
[168.00685120 -407.86343384]
[179.03718567 -418.10632324]
[191.90377808 -425.91885376]
[206.07977295 -430.98110962]
[220.98464966 -433.08578491]
[236.00805664 -432.14669800]
[250.53482056 -428.20233154]
[263.97006226 -421.41415405]
[275.76361084 -412.06018066]
[285.43255615 -400.52343750]
[292.58093262 -387.27633667]
[296.91604614 -372.86135864]
[298.26034546 -357.86874390]
[296.55877686 -342.91250610]
[291.88107300 -328.60504150]
[284.41873169 -315.53222656]
[274.47735596 -304.22940063]
[262.46401978 -295.15939331]
[248.87066650 -288.69366455]
[234.25395203 -285.09692383]
[219.21241760 -284.51647949]
[216.76667786 -269.71719360]
[214.32095337 -254.91792297]
[211.87522888 -240.11865234]
[209.42950439 -225.31938171]
[206.98377991 -210.52011108]
[219.77674866 -218.35208130]
[234.39242554 -214.97833252]
[242.45826721 -202.33151245]
[239.35380554 -187.65629578]
[226.85742188 -179.35929871]
[212.12759399 -182.19342041]
[203.60244751 -194.53424072]
[199.84614563 -180.01217651]
[196.08985901 -165.49011230]
[192.33355713 -150.96806335]
[188.57725525 -136.44599915]
[200.55018616 -127.52534485]
[208.21636963 -114.66551971]
[210.38084412 -99.81021881]
[206.68296814 -85.21867371]
[197.65603638 -73.12204742]
[184.65068054 -65.38230133]
[169.63276672 -63.20561600]
[180.65968323 -73.37454224]
[194.98123169 -77.83475494]
[209.83212280 -75.72505188]
[222.34490967 -67.45278168]
[230.10354614 -54.61520386]
[231.60997009 -39.69103622]
[226.57331848 -25.56191444]
[215.96607971 -14.95594406]
[201.83636475 -9.92097282]
[186.91236877 -11.42917633]
[174.07571411 -19.18934250]
[165.80494690 -31.70310593]
[163.69711304 -46.55552673]
[157.41975403 -32.93220901]
[151.14237976 -19.30889320]
[145.27342224 -5.50471592]
[139.81806946 8.46808147]
[134.36271667 22.44087982]
[128.90734863 36.41367722]
[123.87043762 50.54270554]
[119.25643158 64.81543732]
[114.64241791 79.08817291]
[110.02841187 93.36090851]
[105.62741089 107.70075226]
[101.44039917 122.10453796]
[97.25338745 136.50831604]
[93.06637573 150.91209412]
[88.87937164 165.31588745]
[84.69235992 179.71966553]
[85.30194855 188.83372498]
[80.33429718 194.30586243]
[75.93330383 208.64570618]
[71.53230286 222.98556519]
[74.88011169 238.44850159]
[63.74915314 248.34552002]
[59.34815598 262.68536377]
[71.06848907 253.32408142]
[85.77896881 250.39120483]
[100.19323730 254.54196167]
[111.09111786 264.84906006]
[116.03798676 279.00985718]
[113.92870331 293.86080933]
[105.23448944 306.08419800]
[91.89765167 312.94921875]
[76.89767456 312.92227173]
[63.58559418 306.00936890]
[54.93535995 293.75482178]
[52.87945938 278.89636230]
[46.19926453 292.32675171]
[39.51906967 305.75711060]
[32.83887482 319.18750000]
[33.62067413 334.98937988]
[21.02497482 342.93905640]
[26.89424515 359.41848755]
[19.18101692 374.74234009]
[3.09452033 379.64779663]
[-3.38497543 393.17614746]
[-9.86447144 406.70449829]
[-16.34396744 420.23281860]
[-22.82346344 433.76116943]
[-10.63399124 442.57345581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 209]
[33 208]
[34 207]
[35 206]
[36 205]
[40 202]
[42 200]
[43 199]
[44 198]
[45 197]
[46 185]
[47 184]
[49 182]
[50 181]
[51 180]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[60 172]
[61 171]
[62 170]
[63 169]
[68 168]
[69 167]
[70 166]
[71 165]
[76 164]
[77 163]
[78 162]
[79 149]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
