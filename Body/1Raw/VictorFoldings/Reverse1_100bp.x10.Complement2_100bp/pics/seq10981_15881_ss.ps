%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-11.17530060 391.23318481]
[-3.29691935 404.03659058]
[2.42550111 417.93804932]
[5.84373617 432.57742310]
[6.86924458 447.57559204]
[5.47546434 462.54400635]
[1.69849670 477.09497070]
[-4.36382532 490.85159302]
[-12.55447292 503.45751953]
[-22.66128922 514.58624268]
[-34.42248154 523.94946289]
[-47.53340912 531.30474854]
[-61.65446472 536.46148682]
[-76.41988373 539.28613281]
[-91.44720459 539.70550537]
[-106.34717560 537.70880127]
[-120.73386383 533.34765625]
[-134.23460388 526.73510742]
[-146.49972534 518.04235840]
[-157.21148682 507.49465942]
[-166.09246826 495.36517334]
[-172.91261292 481.96810913]
[-177.49525452 467.65042114]
[-179.72171021 452.78305054]
[-179.53430176 437.75103760]
[-176.93786621 422.94378662]
[-171.99969482 408.74484253]
[-164.84765625 395.52194214]
[-155.66703796 383.61764526]
[-144.69563293 373.34027100]
[-132.21762085 364.95605469]
[-118.55620575 358.68212891]
[-104.06526184 354.68103027]
[-89.12014008 353.05639648]
[-74.10794830 353.85031128]
[-59.41754150 357.04220581]
[-45.42943954 362.54940796]
[-37.76884079 349.65307617]
[-30.10824394 336.75674438]
[-22.44764709 323.86041260]
[-14.78704929 310.96408081]
[-7.12645245 298.06774902]
[0.53414512 285.17144775]
[8.19474220 272.27511597]
[15.85534000 259.37878418]
[22.93244553 246.15324402]
[29.41194153 232.62490845]
[35.89143753 219.09655762]
[42.37093353 205.56822205]
[48.85042953 192.03987122]
[55.32992554 178.51152039]
[53.04038239 161.11253357]
[68.31883240 150.83387756]
[74.59619141 137.21057129]
[80.87355042 123.58724976]
[87.15090942 109.96393585]
[85.18231964 93.30557251]
[98.98404694 83.77203369]
[105.05788422 70.05676270]
[108.59755707 55.48039246]
[109.49037170 40.50698471]
[110.38318634 25.53357887]
[111.27600098 10.56017399]
[112.16882324 -4.41323185]
[113.06163788 -19.38663673]
[113.95445251 -34.36004257]
[101.17376709 -26.50803566]
[87.01502228 -31.46081543]
[81.91552734 -45.56737900]
[89.63442993 -58.42889023]
[104.48165131 -60.56432343]
[115.51174927 -50.40105057]
[117.51576233 -65.26657867]
[119.51977539 -80.13210297]
[121.30223846 -95.02582550]
[122.86276245 -109.94442749]
[124.42328644 -124.86302948]
[125.98381042 -139.78163147]
[127.54433441 -154.70024109]
[129.10485840 -169.61885071]
[114.42240906 -172.75856018]
[100.15688324 -177.44117737]
[86.46990967 -183.61360168]
[73.51657867 -191.20593262]
[61.44366837 -200.13211060]
[50.38795853 -210.29103088]
[40.47473145 -221.56755066]
[31.81630707 -233.83392334]
[24.51078987 -246.95114136]
[18.64096069 -260.77059937]
[14.27332783 -275.13568115]
[11.45737839 -289.88363647]
[10.22502136 -304.84738159]
[10.59022045 -319.85733032]
[12.54883575 -334.74343872]
[16.07867622 -349.33700562]
[21.13974380 -363.47268677]
[27.67469597 -376.99032593]
[35.60948563 -389.73675537]
[44.85420227 -401.56753540]
[55.30410385 -412.34860229]
[66.84077454 -421.95785522]
[79.33350372 -430.28634644]
[92.64073181 -437.23971558]
[106.61168671 -442.73922729]
[121.08805847 -446.72253418]
[135.90582275 -449.14450073]
[150.89709473 -449.97769165]
[165.89198303 -449.21267700]
[180.72059631 -446.85809326]
[195.21493530 -442.94061279]
[209.21073914 -437.50469971]
[222.54945374 -430.61184692]
[235.07991028 -422.34024048]
[246.66014099 -412.78356934]
[257.15893555 -402.05007935]
[266.45733643 -390.26147461]
[274.45001221 -377.55123901]
[281.04632568 -364.06344604]
[286.17160034 -349.95092773]
[289.76776123 -335.37353516]
[291.79400635 -320.49649048]
[292.22744751 -305.48837280]
[291.06311035 -290.51916504]
[288.31423950 -275.75857544]
[284.01196289 -261.37377930]
[278.20501709 -247.52777100]
[270.95919800 -234.37747192]
[262.35662842 -222.07188416]
[252.49476624 -210.75041199]
[241.48535156 -200.54133606]
[229.45314026 -191.56036377]
[216.53445435 -183.90924072]
[202.87568665 -177.67465210]
[188.63159180 -172.92724609]
[173.96357727 -169.72080994]
[159.03782654 -168.09169006]
[144.02346802 -168.05831909]
[142.46293640 -153.13972473]
[140.90242004 -138.22111511]
[139.34188843 -123.30251312]
[137.78137207 -108.38390350]
[136.22084045 -93.46530151]
[138.47897339 -89.25698853]
[138.11743164 -83.58544922]
[134.38529968 -78.12808990]
[132.38128662 -63.26256561]
[130.37727356 -48.39703751]
[128.92785645 -33.46722794]
[128.03503418 -18.49382210]
[127.14222717 -3.52041602]
[126.24941254 11.45298958]
[125.35659027 26.42639542]
[124.46377563 41.39979935]
[123.57096100 56.37320709]
[131.01492310 43.35062790]
[141.32333374 32.45400238]
[153.91323853 24.29958534]
[168.07258606 19.34854889]
[183.00061035 17.88089752]
[197.85305786 19.97963715]
[211.78996277 25.52607155]
[224.02310181 34.20652008]
[233.86064148 45.53006744]
[240.74623108 58.85630798]
[244.29045105 73.43157959]
[244.29284668 88.43157959]
[240.75329590 103.00798798]
[233.87197876 116.33643341]
[224.03807068 127.66312408]
[211.80769348 136.34748840]
[197.87258911 141.89839172]
[183.02079773 144.00187683]
[168.09230042 142.53901672]
[153.93136597 137.59251404]
[141.33886719 129.44212341]
[131.02696228 118.54879761]
[123.57883453 105.52860260]
[119.41571808 91.11789703]
[118.77314758 76.13059998]
[112.69931793 89.84587097]
[116.23233795 100.94357300]
[111.43725586 111.55716705]
[100.77422333 116.24129486]
[94.49686432 129.86460876]
[88.21950531 143.48793030]
[81.94214630 157.11123657]
[85.66834259 169.45945740]
[80.15945435 180.67710876]
[68.85826874 184.99101257]
[62.37877274 198.51936340]
[55.89927673 212.04771423]
[49.41978455 225.57604980]
[42.94028854 239.10440063]
[36.46079254 252.63275146]
[50.93144226 248.68302917]
[64.02444458 256.00241089]
[68.23953247 270.39801025]
[61.16211319 283.62335205]
[46.84644699 288.10238647]
[33.49320602 281.26931763]
[28.75166702 267.03936768]
[21.09107018 279.93569946]
[13.43047237 292.83203125]
[5.76987457 305.72836304]
[-1.89072287 318.62469482]
[-9.55132008 331.52099609]
[-17.21191788 344.41732788]
[-24.87251472 357.31365967]
[-32.53311157 370.20999146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 210]
[38 209]
[39 208]
[40 207]
[41 206]
[42 205]
[43 204]
[44 203]
[45 202]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[53 187]
[54 186]
[55 185]
[56 184]
[58 181]
[59 180]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[66 149]
[72 148]
[73 147]
[74 146]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
