%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[97.50476074 597.33428955]
[92.99980164 582.99816895]
[90.63029480 568.15893555]
[90.44673920 553.13281250]
[92.45305634 538.24011230]
[96.60647583 523.79827881]
[102.81846619 510.11511230]
[110.95661926 497.48226929]
[120.84747314 486.16906738]
[132.28019714 476.41659546]
[145.01110840 468.43273926]
[158.76885986 462.38772583]
[154.79675293 447.92318726]
[150.82466125 433.45867920]
[146.85256958 418.99414062]
[142.05003357 413.37652588]
[142.93072510 404.28466797]
[139.17442322 389.76260376]
[124.33189392 381.85449219]
[119.71027374 365.33312988]
[128.63978577 350.29040527]
[124.66767883 335.82589722]
[109.70906067 328.13964844]
[104.84197235 311.68893433]
[113.54652405 296.51492310]
[109.35951233 282.11114502]
[105.17250061 267.70736694]
[100.98548889 253.30358887]
[97.83396912 267.96878052]
[90.14791870 280.84994507]
[78.73844910 290.58770752]
[64.80963898 296.15441895]
[49.83142471 296.96261597]
[35.38449860 292.92697144]
[22.99347496 284.47341919]
[13.96600723 272.49407959]
[9.25478745 258.25314331]
[9.35700130 243.25349426]
[14.26186275 229.07807922]
[23.45174789 217.22286987]
[35.95682907 208.93896484]
[50.45741272 205.10060120]
[65.42321777 206.11283875]
[79.27487183 211.86885071]
[90.55057526 221.76121521]
[98.06043243 234.74610901]
[97.61383057 219.75276184]
[97.16722107 204.75941467]
[96.72061920 189.76605225]
[96.27400970 174.77270508]
[95.82740784 159.77935791]
[95.15762329 144.79432678]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[77.32633209 50.89530563]
[67.08427429 41.21932602]
[61.32122421 28.40945816]
[60.87716293 14.41326618]
[65.78613281 1.34493136]
[75.27607727 -8.83410931]
[87.89006042 -14.60954762]
[87.44345093 -29.60289764]
[86.99684906 -44.59624863]
[86.55023956 -59.58959579]
[86.10363770 -74.58294678]
[85.65702820 -89.57629395]
[85.21042633 -104.56964874]
[73.98922729 -115.37346649]
[73.74989319 -130.58522034]
[84.11883545 -141.21633911]
[83.67222595 -156.20968628]
[82.66796875 -171.17602539]
[81.10744476 -186.09463501]
[79.54692078 -201.01322937]
[70.03698730 -209.72666931]
[69.04435730 -222.18453979]
[76.55746460 -231.66503906]
[75.21923065 -246.60522461]
[73.88099670 -261.54541016]
[71.87698364 -276.41094971]
[69.21118927 -291.17214966]
[66.54539490 -305.93338013]
[63.87959671 -320.69458008]
[48.84233475 -321.93682861]
[34.63929367 -327.02957153]
[22.23885918 -335.62557983]
[12.48651791 -347.13879395]
[6.04719877 -360.78424072]
[3.35994458 -375.63150024]
[4.60797739 -390.66827393]
[9.70620346 -404.86935425]
[18.30701828 -417.26644897]
[29.82400322 -427.01434326]
[43.47191238 -433.44839478]
[58.32020569 -436.12991333]
[73.35650635 -434.87609863]
[87.55561066 -429.77236938]
[99.94940186 -421.16677856]
[109.69284821 -409.64602661]
[116.12162781 -395.99563599]
[118.79741669 -381.14630127]
[117.53777313 -366.11050415]
[112.42858124 -351.91336060]
[103.81819916 -339.52288818]
[92.29368591 -329.78390503]
[78.64081573 -323.36038208]
[81.30661011 -308.59915161]
[83.97240448 -293.83795166]
[86.63819885 -279.07672119]
[96.05842590 -290.74975586]
[110.95832825 -292.47976685]
[122.80256653 -283.27572632]
[124.80622101 -268.41015625]
[115.82151031 -256.39871216]
[100.99528503 -254.12208557]
[88.82118225 -262.88363647]
[90.15941620 -247.94345093]
[91.49765015 -233.00326538]
[102.35187531 -219.21368408]
[94.46552277 -202.57376099]
[96.02604675 -187.65515137]
[97.58657074 -172.73655701]
[108.91596985 -182.56735229]
[123.69277954 -179.98941040]
[131.02409363 -166.90309143]
[125.50553131 -152.95513916]
[111.20517731 -148.42745972]
[98.66557312 -156.65629578]
[99.11218262 -141.66293335]
[110.09551239 -131.66784668]
[110.76202393 -116.46881104]
[100.20377350 -105.01625061]
[100.65038300 -90.02290344]
[101.09698486 -75.02955627]
[101.54359436 -60.03620148]
[101.99019623 -45.04285431]
[102.43680573 -30.04950333]
[102.88340759 -15.05615330]
[117.60250092 -8.83530807]
[128.17364502 3.22556567]
[132.44230652 18.74530029]
[129.50494385 34.63026810]
[119.89972687 47.69103622]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.13102722 143.90150452]
[113.44691467 149.62132263]
[113.38562775 155.30404663]
[110.82075500 159.33274841]
[111.26736450 174.32611084]
[111.71396637 189.31945801]
[112.16057587 204.31280518]
[112.60717773 219.30615234]
[113.05378723 234.29949951]
[115.38927460 249.11657715]
[119.57628632 263.52035522]
[123.76329803 277.92413330]
[127.95030212 292.32791138]
[140.42254639 297.41299438]
[147.58428955 308.58975220]
[147.00962830 321.65695190]
[139.13220215 331.85379028]
[143.10430908 346.31832886]
[155.49945068 351.58853149]
[162.49398804 362.87066650]
[161.72485352 375.92785645]
[153.69648743 386.00628662]
[157.45278931 400.52835083]
[161.31709290 415.02203369]
[165.28918457 429.48657227]
[169.26127625 443.95111084]
[173.23338318 458.41561890]
[188.14889526 456.58670044]
[203.17176819 456.94909668]
[217.98176575 459.49505615]
[232.26321411 464.17031860]
[245.71170044 470.87524414]
[258.04055786 479.46691895]
[268.98703003 489.76220703]
[278.31777954 501.54162598]
[285.83389282 514.55413818]
[291.37521362 528.52239990]
[294.82357788 543.14862061]
[296.10549927 558.12109375]
[295.19366455 573.12066650]
[292.10751343 587.82757568]
[286.91281128 601.92840576]
[279.72030640 615.12249756]
[270.68328857 627.12878418]
[259.99435425 637.69122314]
[247.88140869 646.58471680]
[234.60258484 653.61962891]
[220.44093323 658.64617920]
[205.69833374 661.55706787]
[190.68899536 662.29028320]
[175.73284912 660.83020020]
[161.14869690 657.20800781]
[147.24740601 651.50085449]
[134.32525635 643.83038330]
[122.65771484 634.36010742]
[112.49346161 623.29187012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 181]
[13 180]
[14 179]
[15 178]
[17 177]
[18 176]
[21 172]
[22 171]
[25 167]
[26 166]
[27 165]
[28 164]
[46 163]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 155]
[53 154]
[54 153]
[57 151]
[58 150]
[59 149]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[75 134]
[76 133]
[77 127]
[78 126]
[79 125]
[82 123]
[83 122]
[84 121]
[85 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
