%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[22.40957832 480.40341187]
[28.37972450 494.29040527]
[29.98971176 509.32034302]
[27.09638405 524.15679932]
[19.95701408 537.48046875]
[9.20642662 548.10668945]
[-4.19944096 555.09051514]
[-19.06854820 557.81103516]
[-34.07874298 556.02624512]
[-47.89533234 549.89489746]
[-59.28975296 539.96221924]
[-67.24881744 527.11132812]
[-71.06481934 512.48504639]
[-70.39842987 497.38378906]
[-65.30891418 483.15045166]
[-56.24882889 471.05059814]
[-44.02378464 462.16015625]
[-29.72082710 457.26968384]
[-14.61176491 456.81402588]
[-10.63966846 442.34948730]
[-6.66757250 427.88497925]
[-2.69547606 413.42044067]
[1.27662015 398.95590210]
[-6.60080528 388.75906372]
[-7.17546272 375.69186401]
[-0.01371404 364.51510620]
[12.45852089 359.43005371]
[16.64553261 345.02624512]
[20.83254242 330.62246704]
[16.95539856 316.24133301]
[28.23725700 305.14944458]
[32.42426682 290.74566650]
[30.94998932 286.20303345]
[32.31371689 280.68603516]
[36.95631409 275.97882080]
[41.57032394 261.70608521]
[46.18433380 247.43334961]
[50.79834366 233.16061401]
[47.35109711 218.67041016]
[58.95820236 207.91934204]
[63.57220840 193.64660645]
[68.18621826 179.37387085]
[72.69384766 165.06718445]
[77.09484863 150.72734070]
[81.49584198 136.38748169]
[85.78997040 122.01527405]
[89.97698212 107.61149597]
[93.84128571 93.11779785]
[97.38095856 78.54142761]
[100.92063141 63.96504974]
[104.46030426 49.38867569]
[107.89136505 34.78635406]
[101.69047546 23.47654343]
[104.75872803 11.36169338]
[114.92255402 4.80248976]
[118.46222687 -9.77388573]
[110.17711639 -20.39327812]
[109.53033447 -33.65193939]
[116.53421021 -44.69855881]
[128.44250488 -49.62013626]
[132.19880676 -64.14219666]
[135.95510864 -78.66425323]
[139.71141052 -93.18631744]
[135.67648315 -108.48435211]
[146.35441589 -118.86852264]
[138.22833252 -129.61009216]
[137.77902222 -142.87690735]
[144.94659424 -153.81802368]
[156.92684937 -158.56176758]
[160.89894104 -173.02629089]
[164.87103271 -187.49081421]
[168.84312439 -201.95533752]
[158.48135376 -191.10943604]
[145.18975830 -184.15722656]
[130.37101746 -181.83238220]
[115.58898926 -184.38027954]
[102.40366364 -191.53201294]
[92.20652008 -202.53283691]
[86.07368469 -216.22183228]
[84.65236664 -231.15434265]
[88.09257507 -245.75450134]
[96.03123474 -258.48153687]
[107.63057709 -267.99234009]
[121.66649628 -273.28320312]
[136.65773010 -273.79574585]
[151.02223206 -269.47592163]
[163.24409485 -260.77957153]
[172.03349304 -248.62448120]
[176.46286011 -234.29338074]
[176.06474304 -219.29847717]
[183.53247070 -232.30741882]
[191.00021362 -245.31637573]
[198.46795654 -258.32531738]
[205.93569946 -271.33428955]
[211.28688049 -285.34729004]
[214.39099121 -300.02261353]
[217.49510193 -314.69790649]
[220.59921265 -329.37319946]
[223.70332336 -344.04852295]
[210.02503967 -350.36138916]
[198.09475708 -359.56008911]
[188.51091003 -371.18322754]
[181.75419617 -384.64779663]
[178.16355896 -399.27841187]
[177.91906738 -414.34121704]
[181.03302002 -429.08065796]
[187.34919739 -442.75741577]
[196.55079651 -454.68545532]
[208.17625427 -464.26651001]
[221.64247131 -471.01992798]
[236.27395630 -474.60705566]
[251.33680725 -474.84786987]
[266.07550049 -471.73037720]
[279.75073242 -465.41085815]
[291.67654419 -456.20639038]
[301.25476074 -444.57858276]
[308.00494385 -431.11074829]
[311.58850098 -416.47839355]
[311.82568359 -401.41546631]
[308.70458984 -386.67755127]
[302.38177490 -373.00384521]
[293.17440796 -361.08026123]
[281.54431152 -351.50485229]
[268.07482910 -344.75793457]
[253.44160461 -341.17794800]
[238.37863159 -340.94439697]
[235.27452087 -326.26910400]
[232.17041016 -311.59381104]
[229.06629944 -296.91848755]
[225.96218872 -282.24319458]
[235.35473633 -293.93847656]
[247.52210999 -302.71090698]
[261.58593750 -307.92712402]
[276.53091431 -309.21060181]
[291.27819824 -306.46868896]
[304.76312256 -299.89929199]
[316.01220703 -289.97671509]
[324.21337891 -277.41723633]
[328.77462769 -263.12753296]
[329.36660767 -248.13922119]
[325.94662476 -233.53430176]
[318.76153564 -220.36711121]
[308.33007812 -209.58822632]
[295.40527344 -201.97575378]
[280.92019653 -198.07925415]
[265.92056274 -198.18002319]
[251.48913574 -202.27078247]
[238.66778564 -210.05622864]
[228.38209534 -220.97430420]
[221.37457275 -234.23683167]
[218.15112305 -248.88638306]
[218.94465637 -263.86654663]
[211.47691345 -250.85758972]
[204.00917053 -237.84863281]
[196.54142761 -224.83967590]
[189.07368469 -211.83073425]
[183.30764771 -197.98324585]
[179.33555603 -183.51872253]
[175.36346436 -169.05419922]
[171.39137268 -154.58967590]
[180.32670593 -140.34191895]
[176.10971069 -123.71266937]
[160.87648010 -115.11222076]
[165.18008423 -100.85289764]
[154.23347473 -89.43001556]
[150.47717285 -74.90795898]
[146.72087097 -60.38589478]
[142.96456909 -45.86383820]
[152.11103821 -31.75069618]
[148.14210510 -15.06050491]
[133.03860474 -6.23421335]
[129.49893188 8.34216213]
[135.33947754 24.89072800]
[122.51882172 38.10861206]
[124.10278320 45.32753372]
[119.03667450 52.92834854]
[115.49700165 67.50472260]
[111.95732880 82.08110046]
[108.41765594 96.65747070]
[109.93708801 100.20200348]
[109.88677216 104.39907074]
[108.01029968 108.53257751]
[104.38076019 111.79850769]
[100.19374847 126.20228577]
[100.80334473 135.31636047]
[95.83569336 140.78848267]
[91.43469238 155.12834167]
[87.03369141 169.46818542]
[87.50752258 178.59031677]
[82.45895386 183.98788452]
[77.84494019 198.26062012]
[73.23093414 212.53334045]
[76.34815216 228.04441833]
[65.07107544 237.77462769]
[60.45706558 252.04736328]
[55.84305573 266.32009888]
[51.22904968 280.59283447]
[46.82804871 294.93267822]
[42.64103699 309.33645630]
[46.21870041 324.74783325]
[35.23632431 334.80947876]
[31.04931450 349.21325684]
[26.86230278 363.61706543]
[35.56685638 378.79104614]
[30.69976616 395.24176025]
[15.74114418 402.92800903]
[11.76904774 417.39254761]
[7.79695177 431.85705566]
[3.82485533 446.32159424]
[-0.14724082 460.78610229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 210]
[20 209]
[21 208]
[22 207]
[23 206]
[27 203]
[28 202]
[29 201]
[31 199]
[32 198]
[35 197]
[36 196]
[37 195]
[38 194]
[40 192]
[41 191]
[42 190]
[43 188]
[44 187]
[45 186]
[46 184]
[47 183]
[48 179]
[49 178]
[50 177]
[51 176]
[52 174]
[55 172]
[56 171]
[60 168]
[61 167]
[62 166]
[63 165]
[65 163]
[69 160]
[70 159]
[71 158]
[72 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 152]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
