%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-13.50860500 812.48413086]
[-27.80102348 817.05139160]
[-42.33890915 820.76391602]
[-57.07119370 823.60870361]
[-71.94612885 825.57568359]
[-86.91146851 826.65808105]
[-101.91464996 826.85198975]
[-116.90296936 826.15673828]
[-131.82377625 824.57482910]
[-146.62466431 822.11175537]
[-161.25363159 818.77618408]
[-175.65931702 814.57983398]
[-189.79110718 809.53747559]
[-203.59936523 803.66674805]
[-217.03558350 796.98840332]
[-230.05256653 789.52575684]
[-242.60459900 781.30505371]
[-254.64759827 772.35522461]
[-266.13925171 762.70770264]
[-277.03918457 752.39630127]
[-287.30911255 741.45733643]
[-296.91296387 729.92919922]
[-305.81704712 717.85229492]
[-313.99002075 705.26916504]
[-321.40319824 692.22393799]
[-328.03057861 678.76251221]
[-333.84881592 664.93206787]
[-338.83752441 650.78125000]
[-342.97918701 636.35974121]
[-346.25921631 621.71820068]
[-348.66610718 606.90808105]
[-350.19140625 591.98138428]
[-350.82974243 576.99053955]
[-350.57891846 561.98822021]
[-349.43975830 547.02709961]
[-347.41632080 532.15972900]
[-344.51565552 517.43835449]
[-340.74798584 502.91464233]
[-336.12652588 488.63964844]
[-330.66754150 474.66351318]
[-324.39019775 461.03530884]
[-317.31649780 447.80294800]
[-309.47134399 435.01284790]
[-300.88226318 422.70996094]
[-291.57946777 410.93753052]
[-281.59555054 399.73684692]
[-270.96566772 389.14730835]
[-259.72711182 379.20608521]
[-247.91937256 369.94812012]
[-235.58390808 361.40588379]
[-222.76406860 353.60943604]
[-209.50488281 346.58615112]
[-195.85290527 340.36065674]
[-181.85610962 334.95486450]
[-167.56365967 330.38775635]
[-153.02574158 326.67535400]
[-138.29342651 323.83068848]
[-123.41847229 321.86380005]
[-108.45312500 320.78155518]
[-93.44994354 320.58779907]
[-78.46163177 321.28314209]
[-63.54084015 322.86520386]
[-48.73997498 325.32843018]
[-34.11102676 328.66409302]
[-19.70537949 332.86056519]
[-5.57363605 337.90307617]
[0.29532474 324.09887695]
[6.16428566 310.29470825]
[12.03324604 296.49053955]
[17.90220642 282.68637085]
[23.77116776 268.88217163]
[29.64012909 255.07800293]
[35.50909042 241.27383423]
[41.37805176 227.46965027]
[39.23730469 212.72969055]
[51.75728607 203.05702209]
[57.62624741 189.25283813]
[63.49520874 175.44866943]
[69.36416626 161.64448547]
[75.23313141 147.84031677]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[108.79846954 48.36618805]
[113.41248322 34.09345245]
[118.02648926 19.82072067]
[122.53411865 5.51403332]
[126.93511963 -8.82581425]
[131.33612061 -23.16566086]
[130.86228943 -32.28779221]
[135.91085815 -37.68535995]
[140.52487183 -51.95809174]
[127.05077362 -58.61141586]
[114.68905640 -67.15576172]
[103.70320129 -77.40899658]
[94.32737732 -89.15258026]
[86.76142120 -102.13619232]
[81.16661072 -116.08309174]
[77.66220093 -130.69599915]
[76.32288361 -145.66342163]
[77.17720032 -160.66635132]
[80.20695496 -175.38499451]
[85.34755707 -189.50563049]
[92.48944092 -202.72724915]
[101.48037720 -214.76805115]
[112.12871552 -225.37138367]
[124.20749664 -234.31124878]
[137.45925903 -241.39706421]
[151.60153198 -246.47781372]
[166.33287048 -249.44519043]
[181.33927917 -250.23596191]
[196.30091858 -248.83325195]
[210.89883423 -245.26696777]
[224.82191467 -239.61314392]
[237.77336121 -231.99226379]
[249.47712708 -222.56677246]
[259.68374634 -211.53759766]
[268.17565918 -199.13980103]
[274.77185059 -185.63764954]
[279.33172607 -171.31893921]
[281.75808716 -156.48887634]
[281.99926758 -141.46357727]
[280.05004883 -126.56329346]
[275.95202637 -112.10563660]
[269.79254150 -98.39875793]
[261.70285034 -85.73482513]
[251.85545349 -74.38377380]
[240.46018982 -64.58755493]
[227.75997925 -56.55496597]
[214.02551270 -50.45723343]
[199.54956055 -46.42432404]
[184.64065552 -44.54219818]
[169.61657715 -44.85097885]
[154.79760742 -47.34408188]
[150.18359375 -33.07135010]
[145.67596436 -18.76466370]
[141.27496338 -4.42481565]
[136.87396240 9.91503143]
[137.91662598 17.23176956]
[132.29922485 24.43472862]
[127.68521118 38.70746231]
[123.07120514 52.98019409]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[109.19046783 134.46598816]
[121.53224182 142.99128723]
[122.71418762 157.94465637]
[111.86502075 168.30300903]
[96.98234558 166.43057251]
[89.03730774 153.70927429]
[83.16834259 167.51344299]
[77.29938507 181.31762695]
[71.43041992 195.12179565]
[65.56146240 208.92597961]
[67.28242493 224.65330505]
[55.18222809 233.33860779]
[49.31326675 247.14279175]
[43.44430542 260.94696045]
[37.57534409 274.75115967]
[31.70638466 288.55532837]
[25.83742332 302.35949707]
[19.96846199 316.16366577]
[14.09950161 329.96786499]
[8.23054123 343.77203369]
[21.66681862 350.45031738]
[34.68387222 357.91284180]
[47.23597717 366.13339233]
[59.27904510 375.08309937]
[70.77077484 384.73056030]
[81.67079926 395.04183960]
[91.94083405 405.98071289]
[101.54479980 417.50881958]
[110.44896698 429.58560181]
[118.62205505 442.16867065]
[126.03536224 455.21380615]
[132.66284180 468.67523193]
[138.48121643 482.50558472]
[143.47004700 496.65637207]
[147.61181641 511.07785034]
[150.89198303 525.71936035]
[153.29899597 540.52941895]
[154.82443237 555.45611572]
[155.46292114 570.44696045]
[155.21220398 585.44934082]
[154.07319641 600.41046143]
[152.04986572 615.27783203]
[149.14933777 629.99926758]
[145.38179016 644.52294922]
[140.76046753 658.79797363]
[135.30160522 672.77416992]
[129.02436829 686.40240479]
[121.95079803 699.63488770]
[114.10575104 712.42504883]
[105.51678467 724.72796631]
[96.21407318 736.50048828]
[86.23027802 747.70129395]
[75.60047913 758.29089355]
[64.36200714 768.23223877]
[52.55434418 777.49029541]
[40.21896362 786.03265381]
[27.39919281 793.82916260]
[14.14006233 800.85260010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 172]
[67 171]
[68 170]
[69 169]
[70 168]
[71 167]
[72 166]
[73 165]
[74 164]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 152]
[82 151]
[83 150]
[84 148]
[85 147]
[86 146]
[87 145]
[88 144]
[89 143]
[90 141]
[91 140]
[92 139]
[94 138]
[95 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
