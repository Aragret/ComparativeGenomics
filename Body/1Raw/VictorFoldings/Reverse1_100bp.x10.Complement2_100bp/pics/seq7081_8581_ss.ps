%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[88.02313232 628.77575684]
[79.01007843 616.76757812]
[71.32449341 603.86938477]
[65.05347443 590.22729492]
[60.26807404 575.99591064]
[57.02250671 561.33648682]
[55.35355377 546.41516113]
[55.28012466 531.40093994]
[56.80305099 516.46398926]
[59.90507507 501.77349854]
[64.55104828 487.49600220]
[70.68833160 473.79324341]
[78.24739075 460.82046509]
[87.14256287 448.72467041]
[97.27306366 437.64294434]
[108.52410126 427.70080566]
[120.76821136 419.01092529]
[133.86663818 411.67175293]
[147.67097473 405.76647949]
[143.26997375 391.42663574]
[138.86898804 377.08679199]
[134.46798706 362.74694824]
[130.06698608 348.40710449]
[125.66598511 334.06726074]
[121.26499176 319.72741699]
[116.86399078 305.38754272]
[114.45352173 303.95654297]
[112.46465302 301.48449707]
[111.29673767 298.12722778]
[111.28541565 294.18203735]
[112.65536499 290.06170654]
[109.11569214 275.48532104]
[105.57601929 260.90896606]
[102.03634644 246.33258057]
[96.74060822 260.36663818]
[85.59103394 270.40093994]
[71.07847595 274.19375610]
[56.44506836 270.89779663]
[44.95995331 261.24938965]
[39.18893814 247.40396118]
[40.42127991 232.45468140]
[48.38167572 219.74121094]
[61.29174423 212.10380554]
[76.26734924 211.24865723]
[89.96289825 217.36680603]
[99.31878662 229.09149170]
[98.20313263 214.13304138]
[97.08748627 199.17457581]
[95.97183990 184.21612549]
[94.85618591 169.25767517]
[92.43740845 166.69216919]
[91.14108276 162.82763672]
[91.56423187 158.20440674]
[94.03997040 153.60899353]
[93.59336090 138.61564636]
[93.14675903 123.62229156]
[92.70014954 108.62894440]
[83.16566467 120.20881653]
[68.67498779 124.08442688]
[54.63279343 118.81027222]
[46.27647018 106.35346985]
[46.72271729 91.36010742]
[55.80509949 79.42234039]
[70.13611603 74.99265289]
[84.37064362 79.72322083]
[93.19992065 91.85075378]
[94.53815460 76.91056824]
[95.87638855 61.97038269]
[81.99331665 55.99395370]
[70.65258789 46.03251266]
[62.95652771 33.07106781]
[59.64801788 18.38540268]
[61.03879166 3.41649008]
[66.98012543 -10.37087822]
[76.87860107 -21.63144302]
[89.75537872 -29.27073097]
[104.34297180 -32.55142593]
[105.68120575 -47.49160767]
[107.01943970 -62.43179321]
[105.05343628 -66.30332947]
[104.47939301 -70.20653534]
[105.13636780 -73.69992828]
[106.73652649 -76.43965149]
[108.90805054 -78.21239471]
[111.13317108 -93.04644012]
[113.35828400 -107.88048553]
[115.58340454 -122.71452332]
[117.80851746 -137.54856873]
[120.03363800 -152.38261414]
[122.25875092 -167.21665955]
[123.59698486 -182.15684509]
[124.04359436 -197.15019226]
[124.49019623 -212.14353943]
[124.93680573 -227.13688660]
[125.38340759 -242.13024902]
[110.92871857 -246.45739746]
[98.08702087 -254.37908936]
[87.73387909 -265.35519409]
[80.57519531 -278.63735962]
[77.09906006 -293.31994629]
[77.54248047 -308.40191650]
[81.87521362 -322.85494995]
[89.80186462 -335.69357300]
[100.78196716 -346.04248047]
[114.06688690 -353.19604492]
[128.75083923 -356.66650391]
[143.83262634 -356.21725464]
[158.28398132 -351.87893677]
[171.11955261 -343.94735718]
[181.46421814 -332.96325684]
[188.61264038 -319.67556763]
[192.07743835 -304.99029541]
[191.62237549 -289.90866089]
[187.27847290 -275.45898438]
[179.34191895 -262.62646484]
[168.35382080 -252.28605652]
[155.06338501 -245.14276123]
[140.37675476 -241.68363953]
[139.93016052 -226.69029236]
[139.48355103 -211.69692993]
[139.03694153 -196.70358276]
[138.59033203 -181.71023560]
[148.79716492 -192.70207214]
[163.49282837 -195.70831299]
[177.19621277 -189.60769653]
[184.79627991 -176.67561340]
[183.45838928 -161.73539734]
[173.68156433 -150.35937500]
[159.11230469 -146.79054260]
[145.18458557 -152.35997009]
[137.09280396 -164.99154663]
[134.86767578 -150.15750122]
[132.64256287 -135.32345581]
[130.41744995 -120.48941040]
[128.19232178 -105.65536499]
[125.96720886 -90.82131958]
[123.74209595 -75.98727417]
[121.95962524 -61.09355927]
[120.62139130 -46.15337372]
[119.28315735 -31.21319008]
[133.05549622 -25.39221764]
[144.36964417 -15.58608246]
[152.10931396 -2.74561858]
[155.50578308 11.87816238]
[154.21414185 26.85595512]
[148.34837341 40.71985626]
[138.47132874 52.10722733]
[125.54077911 59.89462280]
[110.81657410 63.30861664]
[109.47834015 78.24880219]
[108.14010620 93.18898773]
[107.69350433 108.18233490]
[108.14010620 123.17568970]
[108.58671570 138.16903687]
[109.03331757 153.16238403]
[109.81464386 168.14202881]
[110.93029022 183.10047913]
[112.04593658 198.05892944]
[113.16159058 213.01737976]
[114.27723694 227.97584534]
[116.61272430 242.79290771]
[120.15239716 257.36929321]
[123.69207001 271.94564819]
[127.23174286 286.52203369]
[131.20384216 300.98654175]
[135.60484314 315.32641602]
[140.00582886 329.66625977]
[144.40682983 344.00610352]
[148.80783081 358.34594727]
[153.20883179 372.68579102]
[157.60983276 387.02563477]
[162.01081848 401.36547852]
[176.75122070 398.51019287]
[191.71162415 397.23791504]
[206.72248840 397.56304932]
[221.61376953 399.48193359]
[236.21670532 402.97280884]
[250.36584473 407.99612427]
[263.90087891 414.49496460]
[276.66842651 422.39572144]
[288.52383423 431.60882568]
[299.33276367 442.02990723]
[308.97274780 453.54089355]
[317.33456421 466.01135254]
[324.32345581 479.29998779]
[329.86019897 493.25622559]
[333.88214111 507.72192383]
[336.34362793 522.53314209]
[337.21682739 537.52215576]
[336.49182129 552.51904297]
[334.17681885 567.35388184]
[330.29806519 581.85864258]
[324.89950562 595.86889648]
[318.04229736 609.22595215]
[309.80413818 621.77844238]
[300.27841187 633.38409424]
[289.57299805 643.91149902]
[277.80923462 653.24133301]
[265.12039185 661.26788330]
[251.65023804 667.90020752]
[237.55143738 673.06311035]
[222.98370361 676.69818115]
[208.11213684 678.76409912]
[193.10519409 679.23760986]
[178.13296509 678.11322021]
[163.36506653 675.40374756]
[148.96884155 671.13989258]
[135.10739136 665.36993408]
[121.93780518 658.15924072]
[109.60929108 649.58953857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 172]
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[31 164]
[32 163]
[33 162]
[34 161]
[46 160]
[47 159]
[48 158]
[49 157]
[50 156]
[54 155]
[55 154]
[56 153]
[57 152]
[66 151]
[67 150]
[68 149]
[77 140]
[78 139]
[79 138]
[84 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[91 122]
[92 121]
[93 120]
[94 119]
[95 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
