%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[66.91526031 524.60302734]
[55.72920609 534.69360352]
[42.57798767 542.04162598]
[28.12126732 546.27844238]
[13.08418560 547.19165039]
[-1.77900326 544.73535156]
[-15.72276688 539.03277588]
[-28.04769325 530.36999512]
[-38.13556671 519.18151855]
[-45.48038864 506.02850342]
[-49.71374130 491.57077026]
[-50.62328339 476.53344727]
[-48.16339111 461.67086792]
[-42.45745468 447.72848511]
[-33.79167557 435.40567017]
[-22.60073280 425.32049561]
[-9.44595623 417.97885132]
[5.01281691 413.74902344]
[20.05034065 412.84310913]
[22.49606705 398.04385376]
[24.94179535 383.24456787]
[11.88928032 375.97015381]
[2.09477448 364.64776611]
[-3.24498987 350.63128662]
[-3.46750116 335.60556030]
[1.47339487 321.38385010]
[10.99959660 309.68890381]
[23.97631645 301.94442749]
[38.84724045 299.10174561]
[41.29296875 284.30245972]
[43.73869324 269.50317383]
[46.18442154 254.70391846]
[48.63014984 239.90464783]
[51.07587814 225.10537720]
[40.71129608 235.94859314]
[26.52452469 240.82051086]
[11.68492889 238.63272095]
[-0.49228865 229.87399292]
[-7.28670740 216.50103760]
[-7.18043661 201.50141907]
[-0.19721732 188.22607422]
[12.10288143 179.64076233]
[26.97198677 177.66346741]
[41.08830261 182.73590088]
[51.29820633 193.72489929]
[55.32078171 208.17549133]
[60.14677811 193.97302246]
[64.97277832 179.77056885]
[69.79877472 165.56811523]
[74.62477112 151.36566162]
[79.45076752 137.16320801]
[69.00839233 129.03265381]
[61.57601166 118.08237457]
[57.87548447 105.37586975]
[58.26620865 92.14725494]
[62.71024323 79.68131256]
[70.77597046 69.18878937]
[81.68001556 61.68873596]
[94.36334991 57.90958405]
[107.59413910 58.21837616]
[112.84085846 44.16590500]
[111.97525024 39.01830292]
[113.06204224 34.50474930]
[115.53279114 31.26276588]
[118.64837646 29.61186600]
[124.51733398 15.80768871]
[130.38629150 2.00351143]
[122.57292175 -11.27268505]
[124.05783081 -26.42684174]
[134.06297302 -37.66788101]
[148.59486389 -40.82421112]
[154.46382141 -54.62838745]
[160.33277893 -68.43256378]
[166.20173645 -82.23674011]
[172.07070923 -96.04091644]
[177.93966675 -109.84509277]
[172.26963806 -124.35331726]
[178.41824341 -138.26910400]
[192.28456116 -143.58520508]
[198.15351868 -157.38938904]
[204.02247620 -171.19355774]
[190.73498535 -178.17178345]
[178.06051636 -186.20985413]
[166.08338928 -195.25425720]
[154.88333130 -205.24482727]
[144.53488159 -216.11506653]
[135.10688782 -227.79264832]
[126.66209412 -240.19982910]
[119.25672150 -253.25407410]
[112.94003296 -266.86849976]
[107.75407410 -280.95248413]
[103.73336029 -295.41229248]
[100.90463257 -310.15173340]
[99.28673553 -325.07272339]
[98.89042664 -340.07589722]
[99.71834564 -355.06146240]
[101.76498413 -369.92968750]
[105.01671600 -384.58163452]
[109.45190430 -398.91973877]
[115.04103088 -412.84866333]
[121.74691010 -426.27563477]
[129.52490234 -439.11135864]
[138.32325745 -451.27038574]
[148.08340454 -462.67178345]
[158.74041748 -473.23971558]
[170.22335815 -482.90383911]
[182.45579529 -491.59979248]
[195.35635376 -499.26977539]
[208.83915710 -505.86273193]
[222.81448364 -511.33474731]
[237.18933105 -515.64941406]
[251.86804199 -518.77801514]
[266.75292969 -520.69982910]
[281.74493408 -521.40191650]
[296.74426270 -520.87963867]
[311.65112305 -519.13659668]
[326.36630249 -516.18426514]
[340.79187012 -512.04229736]
[354.83181763 -506.73828125]
[368.39273071 -500.30755615]
[381.38433838 -492.79284668]
[393.72021484 -484.24420166]
[405.31823730 -474.71853638]
[416.10122681 -464.27920532]
[425.99743652 -452.99566650]
[434.94100952 -440.94305420]
[442.87237549 -428.20153809]
[449.73883057 -414.85595703]
[455.49462891 -400.99508667]
[460.10147095 -386.71118164]
[463.52871704 -372.09930420]
[465.75354004 -357.25671387]
[466.76113892 -342.28213501]
[466.54479980 -327.27529907]
[465.10598755 -312.33599854]
[462.45425415 -297.56369019]
[458.60726929 -283.05667114]
[453.59060669 -268.91149902]
[447.43765259 -255.22229004]
[440.18939209 -242.08016968]
[431.89404297 -229.57258606]
[422.60678101 -217.78276062]
[412.38943481 -206.78918457]
[401.31002808 -196.66499329]
[389.44223022 -187.47756958]
[376.86508179 -179.28807068]
[363.66226196 -172.15098572]
[349.92163086 -166.11380005]
[335.73461914 -161.21670532]
[321.19564819 -157.49227905]
[306.40148926 -154.96531677]
[291.45056152 -153.65263367]
[276.44241333 -153.56297302]
[261.47689819 -154.69691467]
[246.65359497 -157.04693604]
[232.07116699 -160.59736633]
[217.82666016 -165.32460022]
[211.95768738 -151.52043152]
[206.08872986 -137.71624756]
[211.88116455 -124.04206848]
[206.12585449 -109.95906067]
[191.74383545 -103.97613525]
[185.87487793 -90.17195892]
[180.00592041 -76.36778259]
[174.13696289 -62.56360626]
[168.26800537 -48.75942993]
[162.39903259 -34.95524979]
[170.20860291 -22.30026627]
[169.05526733 -7.29580688]
[159.17236328 4.28786850]
[144.19047546 7.87247229]
[138.32151794 21.67664909]
[132.45254517 35.48082733]
[126.89332581 49.41262436]
[121.64660645 63.46509552]
[134.00865173 74.56800079]
[141.16400146 89.56452179]
[142.01719666 106.15869904]
[136.43760681 121.80998230]
[125.27946472 134.12219238]
[110.25105286 141.21032715]
[93.65322113 141.98921204]
[88.82722473 156.19166565]
[84.00122833 170.39411926]
[79.17523193 184.59657288]
[74.34923553 198.79902649]
[69.52323914 213.00148010]
[65.87514496 227.55110168]
[63.42942047 242.35037231]
[60.98369217 257.14965820]
[58.53796768 271.94891357]
[56.09223938 286.74819946]
[53.64651108 301.54745483]
[66.81216431 309.02349854]
[76.60726166 320.53121948]
[81.86431122 334.66925049]
[81.96689606 349.72445679]
[76.92194366 363.87966919]
[67.35652924 375.43292236]
[54.44000626 383.00207520]
[39.74106598 385.69030762]
[37.29533768 400.48956299]
[34.84960938 415.28884888]
[48.79613495 420.98464966]
[61.12525940 429.64144897]
[71.21855164 440.82507324]
[78.56974792 453.97451782]
[82.81010437 468.43020630]
[83.72693634 483.46707153]
[81.27424622 498.33084106]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 203]
[20 202]
[21 201]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[51 182]
[60 175]
[61 174]
[65 173]
[66 172]
[67 171]
[71 167]
[72 166]
[73 165]
[74 164]
[75 163]
[76 162]
[79 159]
[80 158]
[81 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
