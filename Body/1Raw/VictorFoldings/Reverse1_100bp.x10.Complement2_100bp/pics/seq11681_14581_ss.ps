%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[90.08104706 609.81311035]
[93.01118469 595.05999756]
[98.52869415 581.06726074]
[106.45621490 568.28466797]
[116.53890991 557.12316895]
[128.45266724 547.94158936]
[141.81449890 541.03497314]
[137.41351318 526.69512939]
[133.01251221 512.35528564]
[128.61151123 498.01541138]
[124.10388184 483.70874023]
[119.48987579 469.43600464]
[114.87586212 455.16326904]
[110.26185608 440.89053345]
[105.64784241 426.61779785]
[101.41057587 441.00689697]
[91.03820038 451.84265137]
[76.84793854 456.70437622]
[62.00991821 454.50592041]
[49.83899689 445.73843384]
[43.05419540 432.36059570]
[43.17124557 417.36105347]
[50.16400528 404.09072876]
[62.47027206 395.51428223]
[77.34079742 393.54766846]
[91.45346069 398.63024902]
[101.65547180 409.62658691]
[99.43035889 394.79254150]
[97.20523834 379.95849609]
[94.98012543 365.12445068]
[92.75500488 350.29040527]
[90.52988434 335.45635986]
[88.30477142 320.62231445]
[82.13567352 334.29501343]
[70.70098877 344.00314331]
[56.20857239 347.87225342]
[41.45669174 345.15527344]
[29.29369926 336.37680054]
[22.06807899 323.23181152]
[21.17498398 308.25842285]
[26.78685570 294.34774780]
[37.82013321 284.18572998]
[52.14445877 279.73446655]
[66.99403381 281.85345459]
[79.50164032 290.13354492]
[87.25264740 302.97720337]
[87.69925690 287.98385620]
[88.14585876 272.99050903]
[88.59246826 257.99716187]
[89.03907013 243.00379944]
[89.48567963 228.01045227]
[89.93228149 213.01710510]
[90.37889099 198.02374268]
[90.82549286 183.03039551]
[91.27210236 168.03704834]
[82.13341522 153.05534363]
[91.94123077 137.47047424]
[92.16455841 122.47213745]
[92.38788605 107.47379303]
[91.16090393 92.52406311]
[88.49510956 77.76284790]
[85.82931519 63.00162888]
[83.16352081 48.24040985]
[80.49772644 33.47919464]
[76.84963989 18.92957306]
[62.90087128 6.90819979]
[67.24172974 -10.09544373]
[62.41573334 -24.29789925]
[57.58973312 -38.50035477]
[52.76373672 -52.70280838]
[40.99785233 -63.27988815]
[44.22897720 -77.81980133]
[32.46309280 -88.39687347]
[35.69421768 -102.93679047]
[30.86822128 -117.13924408]
[26.04222298 -131.34170532]
[11.20508575 -128.91081238]
[-3.82980299 -128.95535278]
[-18.65227890 -131.47409058]
[-32.85797501 -136.39833069]
[-46.05934906 -143.59370422]
[-57.89625931 -152.86395264]
[-68.04578400 -163.95616150]
[-76.23104095 -176.56771851]
[-82.22872162 -190.35458374]
[-85.87521362 -204.94064331]
[-87.07102966 -219.92796326]
[-85.78355408 -234.90769958]
[-82.04791260 -249.47117615]
[-75.96601105 -263.22109985]
[-67.70376587 -275.78234863]
[-57.48657990 -286.81225586]
[-45.59318542 -296.00991821]
[-32.34804535 -303.12442017]
[-18.11249161 -307.96166992]
[-3.27488589 -310.38970947]
[11.75999355 -310.34225464]
[26.58198547 -307.82067871]
[40.78673172 -302.89370728]
[53.98672104 -295.69577026]
[65.82184601 -286.42324829]
[75.96923065 -275.32907104]
[84.15205383 -262.71594238]
[90.14707947 -248.92791748]
[93.79076385 -234.34117126]
[94.98369598 -219.35362244]
[93.69333649 -204.37413025]
[89.95487976 -189.81138611]
[83.87033081 -176.06263733]
[75.60566711 -163.50296021]
[65.38635254 -152.47502136]
[53.49119186 -143.27964783]
[40.24467850 -136.16769409]
[45.07067871 -121.96524048]
[49.89667511 -107.76278687]
[61.31737137 -98.20156860]
[58.43143463 -82.64579773]
[69.85212708 -73.08457947]
[66.96619415 -57.52880859]
[71.79219055 -43.32635117]
[76.61818695 -29.12389565]
[81.44418335 -14.92144108]
[92.15266418 -9.29516602]
[96.28952026 2.49763799]
[91.12236786 14.31556416]
[96.37085724 0.26375365]
[108.31908417 -8.80486584]
[123.26476288 -10.08028507]
[136.57681274 -3.16729999]
[144.13035583 9.79202461]
[143.58482361 24.78210068]
[135.10928345 37.15809250]
[121.32995605 43.08515930]
[106.51651764 40.72674179]
[95.25894165 30.81339836]
[97.92473602 45.57461548]
[100.59053040 60.33583450]
[103.25633240 75.09705353]
[105.92212677 89.85826874]
[111.37812042 75.88571930]
[121.98812866 65.28252411]
[135.96417236 59.83551407]
[150.95106506 60.46260071]
[164.42323303 67.05810547]
[174.11038208 78.51058197]
[178.38005066 92.89007568]
[176.51274109 107.77339172]
[168.82312012 120.65243530]
[156.60702515 129.35685730]
[141.92308044 132.41979980]
[127.24578094 129.32511902]
[115.04852295 120.59432220]
[107.38622284 107.69712067]
[107.16289520 122.69546509]
[106.93956757 137.69380188]
[115.34668732 147.47557068]
[114.85190582 159.96311951]
[106.26544952 168.48365784]
[105.81884766 183.47700500]
[105.37223816 198.47035217]
[104.92563629 213.46369934]
[104.47902679 228.45706177]
[104.03242493 243.45040894]
[103.58581543 258.44375610]
[103.13921356 273.43710327]
[102.69260406 288.43045044]
[102.24599457 303.42379761]
[103.13881683 318.39721680]
[105.36392975 333.23126221]
[107.58905029 348.06530762]
[109.81416321 362.89935303]
[112.03928375 377.73339844]
[114.26439667 392.56744385]
[116.48951721 407.40145874]
[119.92057800 422.00378418]
[124.53458405 436.27651978]
[129.14859009 450.54925537]
[133.76260376 464.82199097]
[138.37661743 479.09472656]
[143.99401855 486.29769897]
[142.95135498 493.61444092]
[147.35235596 507.95428467]
[151.75335693 522.29412842]
[156.15435791 536.63397217]
[171.09014893 534.85583496]
[186.10340881 535.77337646]
[200.71151733 539.35705566]
[214.44487000 545.49176025]
[226.86203003 553.98022461]
[237.56379700 564.54962158]
[246.20619202 576.86016846]
[252.51136780 590.51611328]
[256.27664185 605.07843018]
[257.38101196 620.07910156]
[255.78892517 635.03588867]
[251.55158997 649.46795654]
[244.80522156 662.91143799]
[235.76667786 674.93408203]
[224.72650146 685.14947510]
[212.03961182 693.22924805]
[198.11383057 698.91363525]
[183.39680481 702.01989746]
[168.36163330 702.44824219]
[153.49163818 700.18487549]
[139.26483154 695.30249023]
[126.13852692 687.95812988]
[114.53469086 678.38781738]
[104.82634735 666.89916992]
[97.32556915 653.86163330]
[92.27348328 639.69421387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 184]
[8 183]
[9 182]
[10 181]
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[57 155]
[58 154]
[59 153]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[65 125]
[67 122]
[68 121]
[69 120]
[70 119]
[72 117]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
