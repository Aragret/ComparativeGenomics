%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[139.39070129 523.96264648]
[138.49787903 508.98922729]
[130.01675415 496.74505615]
[136.91894531 482.50881958]
[136.02612305 467.53540039]
[135.13330078 452.56201172]
[120.26689911 450.70993042]
[105.99018097 446.15634155]
[92.78981781 439.05496216]
[81.11606598 429.64633179]
[71.36740875 418.24975586]
[63.87698746 405.25238037]
[58.90116119 391.09616089]
[56.61077118 376.26269531]
[57.08527756 361.25695801]
[60.30998230 346.59005737]
[66.17649078 332.76177979]
[74.48635864 320.24368286]
[84.95780182 309.46292114]
[97.23523712 300.78759766]
[110.90139008 294.51446533]
[125.49143982 290.85839844]
[124.59862518 275.88500977]
[123.70581055 260.91159058]
[122.14528656 245.99299622]
[119.92017365 231.15895081]
[117.69505310 216.32490540]
[115.46993256 201.49085999]
[113.24481964 186.65681458]
[111.01969910 171.82276917]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[68.19390869 48.65691757]
[73.28968811 31.86406326]
[69.10267639 17.46028137]
[64.91567230 3.05650020]
[60.72865677 -11.34728241]
[48.51101303 -13.99246693]
[38.63465881 -21.53740311]
[32.93659210 -32.50150681]
[32.44370270 -44.77579117]
[37.18820953 -56.02846146]
[46.21318436 -64.14788818]
[42.45688248 -78.66995239]
[38.70058441 -93.19200897]
[34.94428253 -107.71406555]
[31.18798065 -122.23612976]
[25.73262405 -136.20892334]
[18.65551949 -149.43444824]
[11.57841301 -162.65997314]
[4.50130796 -175.88551331]
[-2.57579756 -189.11103821]
[-17.43423080 -193.78700256]
[-24.42301941 -207.30038452]
[-19.87363052 -221.43681335]
[-26.95073509 -234.66233826]
[-27.34578896 -219.66754150]
[-33.06359863 -205.80007935]
[-43.35189056 -194.88444519]
[-56.85705948 -188.35678101]
[-71.80227661 -187.07592773]
[-86.22122955 -191.21037292]
[-98.21686554 -200.21618652]
[-106.21095276 -212.90849304]
[-109.15172577 -227.61740112]
[-106.65227509 -242.40769958]
[-99.04145813 -255.33346558]
[-87.32059479 -264.69409180]
[-73.03176880 -269.25802612]
[-58.05493164 -268.42483521]
[-44.36053085 -262.30407715]
[-33.74895859 -251.69915771]
[-37.72105408 -266.16366577]
[-41.69314957 -280.62820435]
[-45.66524506 -295.09271240]
[-49.63734436 -309.55725098]
[-64.66755676 -308.67047119]
[-79.55363464 -310.92843628]
[-93.64482117 -316.23239136]
[-106.32511139 -324.35052490]
[-117.04017639 -334.92791748]
[-125.32160187 -347.50216675]
[-130.80735779 -361.52359009]
[-133.25762939 -376.37921143]
[-132.56529236 -391.41964722]
[-128.76063538 -405.98736572]
[-122.00996399 -419.44552612]
[-112.60839081 -431.20578003]
[-100.96691895 -440.75408936]
[-87.59445190 -447.67297363]
[-73.07559204 -451.65997314]
[-58.04502869 -452.54083252]
[-43.15983963 -450.27703857]
[-29.07074165 -444.96749878]
[-16.39364624 -436.84439087]
[-5.68274403 -426.26278687]
[2.59373188 -413.68530273]
[8.07396889 -399.66171265]
[10.51839352 -384.80511475]
[9.82014847 -369.76498413]
[6.00975513 -355.19876099]
[-0.74621034 -341.74325562]
[-10.15240669 -329.98666382]
[-21.79763603 -320.44296265]
[-35.17281723 -313.52935791]
[-31.20072174 -299.06481934]
[-27.22862625 -284.60028076]
[-23.25653076 -270.13577271]
[-19.28443336 -255.67124939]
[-13.72520828 -241.73945618]
[-6.64810276 -228.51391602]
[7.63719702 -224.45611572]
[15.00279045 -211.14436340]
[10.64972973 -196.18814087]
[17.72683525 -182.96261597]
[24.80394173 -169.73709106]
[31.88104630 -156.51155090]
[38.95815277 -143.28602600]
[39.16407776 -158.28462219]
[44.42264557 -172.33265686]
[54.11609268 -183.77980042]
[67.10563660 -191.28125000]
[81.86528015 -193.95573425]
[96.66107941 -191.48907471]
[109.75482941 -184.17103577]
[119.60829926 -172.86134338]
[125.06390381 -158.88864136]
[125.48072815 -143.89443970]
[120.80981445 -129.64022827]
[111.59987640 -117.80059052]
[98.93290710 -109.76641846]
[84.29699707 -106.48158264]
[69.41156769 -108.33196259]
[56.02533722 -115.10018158]
[45.71004105 -125.99242401]
[49.46634293 -111.47036743]
[53.22264099 -96.94831085]
[56.97894287 -82.42624664]
[60.73524475 -67.90419006]
[77.44970703 -62.20344925]
[87.48448181 -47.48087692]
[86.66562653 -29.52512360]
[75.13243866 -15.53429317]
[79.31945038 -1.13051116]
[83.50646210 13.27327061]
[87.69347382 27.67705345]
[98.14004517 33.77587509]
[101.74620056 45.74163818]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[128.91273499 139.67260742]
[142.07962036 132.48696899]
[156.96981812 134.29852295]
[168.02967834 144.43161011]
[171.13414001 159.10684204]
[165.12530518 172.85070801]
[152.24433899 180.53709412]
[137.29550171 179.29917908]
[125.85374451 169.59765625]
[128.07885742 184.43170166]
[130.30398560 199.26574707]
[132.52909851 214.09979248]
[134.75421143 228.93383789]
[136.97932434 243.76788330]
[146.74293518 232.38050842]
[161.68772888 231.09489441]
[173.25268555 240.64747620]
[174.81285095 255.56611633]
[165.47450256 267.30474854]
[150.58706665 269.13891602]
[138.67921448 260.01879883]
[139.57203674 274.99218750]
[140.46484375 289.96560669]
[155.38597107 291.86196899]
[169.70074463 296.46673584]
[182.92207336 303.62161255]
[194.60041809 313.08169556]
[204.33894348 324.52362061]
[211.80711365 337.55676270]
[216.75184631 351.73654175]
[219.00614929 366.57958984]
[218.49465942 381.58010864]
[215.23629761 396.22732544]
[209.34342957 410.02267456]
[201.01812744 422.49697876]
[190.54512024 433.22613525]
[178.28215027 441.84582520]
[164.64768982 448.06365967]
[150.10670471 451.66918945]
[150.99952698 466.64260864]
[151.89234924 481.61599731]
[160.43733215 494.93118286]
[153.47128296 508.09640503]
[154.36410522 523.06982422]
[165.36065674 534.75122070]
[162.94146729 550.61083984]
[148.96232605 558.48248291]
[134.14683533 552.32775879]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[4 203]
[5 202]
[6 201]
[22 185]
[23 184]
[24 183]
[25 176]
[26 175]
[27 174]
[28 173]
[29 172]
[30 171]
[31 162]
[32 161]
[33 160]
[34 159]
[36 157]
[37 156]
[38 155]
[40 152]
[41 151]
[42 150]
[43 149]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[61 117]
[62 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
