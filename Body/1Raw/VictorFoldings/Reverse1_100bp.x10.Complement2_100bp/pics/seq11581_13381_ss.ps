%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[71.43299103 623.48919678]
[57.37281799 628.81469727]
[42.62782288 631.75323486]
[27.60025787 632.22460938]
[12.70008850 630.21594238]
[-1.66619885 625.78198242]
[-15.10668087 619.04382324]
[-27.25469208 610.18518066]
[-37.77882385 599.44769287]
[-46.39197159 587.12445068]
[-52.85916519 573.55145264]
[-57.00397110 559.09912109]
[-58.71331406 544.16162109]
[-57.94056702 529.14654541]
[-54.70681000 514.46350098]
[-49.10026169 500.51300049]
[-41.27386856 487.67562866]
[-31.44114685 476.30166626]
[-19.87033844 466.70132446]
[-6.87710094 459.13656616]
[7.18409872 453.81375122]
[21.92966080 450.87805176]
[36.95731354 450.40960693]
[38.96133041 435.54406738]
[40.96534348 420.67852783]
[42.96935654 405.81301880]
[44.97336960 390.94747925]
[31.15329170 383.19302368]
[21.34327507 370.69851685]
[17.06874275 355.35891724]
[19.01272392 339.51516724]
[26.90690422 325.59692383]
[39.56821823 315.75000000]
[55.07606125 311.50558472]
[56.85852814 296.61187744]
[58.64099121 281.71817017]
[60.42345810 266.82443237]
[62.20592499 251.93072510]
[63.98839188 237.03700256]
[61.79317093 232.79553223]
[62.23910904 227.13002014]
[66.05207825 221.72882080]
[60.28835678 207.99459839]
[69.98719025 195.49487305]
[72.21230316 180.66082764]
[60.20203781 189.64712524]
[45.21887589 188.93656921]
[34.11292267 178.85401917]
[31.96166992 164.00907898]
[39.74864197 151.18865967]
[53.91373825 146.25408936]
[67.98086548 151.46138000]
[75.51906586 164.43164062]
[79.27536774 149.90959167]
[83.03166962 135.38752747]
[86.78796387 120.86546326]
[90.54426575 106.34340668]
[78.58078766 115.39189911]
[63.63298798 116.64215851]
[50.33259583 109.70677185]
[42.80088425 96.73474884]
[43.37163925 81.74561310]
[51.86800766 69.38391113]
[65.65729523 63.48004532]
[80.46673584 65.86339569]
[91.70747375 75.79545593]
[95.89643097 90.19892883]
[101.55921936 76.30890656]
[107.22200775 62.41887665]
[112.88479614 48.52885056]
[99.09314728 54.42719269]
[84.70081329 50.20100403]
[76.28776550 37.78244019]
[77.70034790 22.84910202]
[88.29273987 12.22830963]
[103.22224426 10.77574730]
[115.66329193 19.15550613]
[119.92789459 33.53832626]
[127.00500488 20.31279755]
[134.08210754 7.08726978]
[141.15921021 -6.13825750]
[140.84823608 -21.95640755]
[153.67504883 -29.52755356]
[160.75215149 -42.75308228]
[167.63156128 -56.08251190]
[174.31176758 -69.51288605]
[180.99195862 -82.94326019]
[187.67214966 -96.37364197]
[184.31526184 -108.82731628]
[190.15570068 -119.87598419]
[201.58030701 -123.85150146]
[208.45971680 -137.18092346]
[215.33914185 -150.51036072]
[222.21855164 -163.83978271]
[209.72940063 -172.17652893]
[198.25222778 -181.85920715]
[187.93135071 -192.76606750]
[178.89657593 -204.75993347]
[171.26152039 -217.68998718]
[165.12222290 -231.39360046]
[160.55586243 -245.69842529]
[157.61988831 -260.42459106]
[156.35121155 -275.38690186]
[156.76579285 -290.39715576]
[158.85841370 -305.26663208]
[162.60275269 -319.80828857]
[167.95173645 -333.83926392]
[174.83808899 -347.18313599]
[183.17520142 -359.67202759]
[192.85823059 -371.14889526]
[203.76539612 -381.46945190]
[215.75953674 -390.50387573]
[228.68980408 -398.13851929]
[242.39360046 -404.27743530]
[256.69857788 -408.84335327]
[271.42483521 -411.77890015]
[286.38717651 -413.04711914]
[301.39743042 -412.63208008]
[316.26681519 -410.53903198]
[330.80838013 -406.79425049]
[344.83920288 -401.44485474]
[358.18283081 -394.55810547]
[370.67147827 -386.22061157]
[382.14810181 -376.53723145]
[392.46832275 -365.62976074]
[401.50234985 -353.63534546]
[409.13662720 -340.70486450]
[415.27511597 -327.00088501]
[419.84063721 -312.69577026]
[422.77572632 -297.96942139]
[424.04348755 -283.00704956]
[423.62802124 -267.99679565]
[421.53451538 -253.12745667]
[417.78930664 -238.58602905]
[412.43948364 -224.55535889]
[405.55233765 -211.21192932]
[397.21447754 -198.72352600]
[387.53076172 -187.24722290]
[376.62298584 -176.92732239]
[364.62829590 -167.89363098]
[351.69757080 -160.25973511]
[337.99340820 -154.12165833]
[323.68814087 -149.55659485]
[308.96173096 -146.62193298]
[293.99929810 -145.35459900]
[278.98907471 -145.77052307]
[264.11981201 -147.86448669]
[249.57847595 -151.61013794]
[235.54797363 -156.96037292]
[228.66856384 -143.63095093]
[221.78915405 -130.30151367]
[214.90974426 -116.97208405]
[216.68023682 -99.51264191]
[201.10252380 -89.69344330]
[194.42233276 -76.26306915]
[187.74214172 -62.83269119]
[181.06195068 -49.40231705]
[181.70542908 -44.66998291]
[179.38293457 -39.48317337]
[173.97767639 -35.67597580]
[166.90057373 -22.45044899]
[167.71775818 -7.57827711]
[154.38473511 0.93884772]
[147.30763245 14.16437531]
[140.23052979 27.38990211]
[133.15342712 40.61542892]
[126.77481842 54.19163895]
[121.11203766 68.08166504]
[115.44924927 81.97169495]
[109.78646088 95.86171722]
[105.06632996 110.09970856]
[101.31002808 124.62176514]
[97.55372620 139.14382935]
[93.79742432 153.66587830]
[90.04112244 168.18794250]
[87.04634857 182.88595581]
[84.82123566 197.71998596]
[90.42579651 212.51524353]
[80.88612366 223.95394897]
[78.88211060 238.81947327]
[77.09963989 253.71319580]
[75.31717682 268.60690308]
[73.53470612 283.50061035]
[71.75224304 298.39434814]
[69.96977997 313.28805542]
[82.58589172 319.89749146]
[92.16806793 330.39431763]
[97.58034515 343.50387573]
[98.19144440 357.64364624]
[93.94833374 371.11428833]
[85.38014221 382.30383301]
[73.53227234 389.88055420]
[59.83889771 392.95150757]
[57.83488464 407.81701660]
[55.83087158 422.68255615]
[53.82685852 437.54809570]
[51.82284546 452.41360474]
[66.18998718 456.84475708]
[79.63176727 463.58038330]
[91.78147888 472.43667603]
[102.30768585 483.17208862]
[110.92320251 495.49371338]
[117.39301300 509.06542969]
[121.54060364 523.51696777]
[123.25282288 538.45410156]
[122.48297119 553.46936035]
[119.25204468 568.15307617]
[113.64817810 582.10461426]
[105.82426453 594.94348145]
[95.99372864 606.31933594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[42 179]
[44 177]
[45 176]
[53 175]
[54 174]
[55 173]
[56 172]
[57 171]
[67 170]
[68 169]
[69 168]
[70 167]
[78 166]
[79 165]
[80 164]
[81 163]
[83 161]
[84 160]
[85 157]
[86 156]
[87 155]
[88 154]
[91 152]
[92 151]
[93 150]
[94 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
