%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[51.08694839 617.51300049]
[36.16344833 615.54473877]
[21.94174385 610.61242676]
[9.00421333 602.91790771]
[-2.11936426 592.77636719]
[-10.97348404 580.60308838]
[-17.19557381 566.89648438]
[-20.53084564 552.21789551]
[-20.84272194 537.16839600]
[-18.11842918 522.36419678]
[-12.46952724 508.41162109]
[-4.12733459 495.88195801]
[6.56654119 485.28829956]
[19.17419243 477.06442261]
[33.17934418 471.54711914]
[48.00849152 468.96231079]
[48.45509720 453.96896362]
[48.90170288 438.97561646]
[49.34831238 423.98226929]
[49.79491806 408.98892212]
[50.24152374 393.99557495]
[50.68812943 379.00219727]
[41.86512756 391.13293457]
[28.45643044 397.85653687]
[13.45757866 397.67095947]
[0.21935199 390.61764526]
[-8.30079460 378.27230835]
[-10.19944000 363.39294434]
[-5.05242157 349.30364990]
[5.99040413 339.15200806]
[20.46204185 335.20590210]
[35.12948990 338.34692383]
[46.71600342 347.87335205]
[52.63312912 361.65698242]
[55.51840210 346.93707275]
[58.40367126 332.21719360]
[61.28894424 317.49728394]
[63.51406097 302.66323853]
[65.07458496 287.74465942]
[66.63510895 272.82604980]
[59.26398468 263.23474121]
[60.44198608 250.79302979]
[70.08058929 242.22215271]
[63.91051102 228.66561890]
[73.23287964 215.88265991]
[75.01534271 200.98895264]
[76.79780579 186.09523010]
[78.58027649 171.20150757]
[65.35488892 178.27888489]
[51.51604080 172.49214172]
[47.26522064 158.10705566]
[55.73597336 145.72778320]
[70.68397522 144.47985840]
[81.08958435 155.28163147]
[83.97486115 140.56175232]
[77.48882294 130.35107422]
[79.77211761 118.06407166]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[100.11019135 48.11452103]
[104.65708923 42.28806686]
[107.97934723 27.66060638]
[111.30160522 13.03314686]
[114.62386322 -1.59431338]
[110.13524628 -16.76543236]
[120.49926758 -27.46292305]
[123.82152557 -42.09038162]
[127.14378357 -56.71784210]
[120.94290161 -68.02764893]
[124.01115417 -80.14250183]
[134.17498779 -86.70170593]
[137.71466064 -101.27808380]
[132.12211609 -118.82245636]
[144.72132874 -131.03828430]
[148.04359436 -145.66574097]
[134.28121948 -153.27732849]
[123.22817993 -164.44482422]
[115.77258301 -178.25932312]
[112.51019287 -193.59971619]
[113.69686127 -209.22364807]
[119.22845459 -223.86816406]
[128.64996338 -236.35179138]
[141.19291687 -245.66986084]
[155.83801270 -251.07533264]
[171.39804077 -252.13871765]
[174.50215149 -266.81402588]
[177.60626221 -281.48931885]
[180.71037292 -296.16461182]
[183.81448364 -310.83993530]
[186.91859436 -325.51522827]
[190.02270508 -340.19052124]
[193.01747131 -354.88851929]
[195.90274048 -369.60842896]
[181.95024109 -375.24084473]
[169.31597900 -383.41226196]
[158.45666504 -393.82723999]
[149.76486206 -406.10928345]
[143.55476379 -419.81445312]
[140.05087280 -434.44726562]
[139.37985229 -449.47875977]
[141.56596375 -464.36560059]
[146.53015137 -478.56958008]
[154.09300232 -491.57727051]
[163.98109436 -502.91842651]
[175.83700562 -512.18310547]
[189.23211670 -519.03637695]
[203.68223572 -523.23046875]
[218.66499329 -524.61383057]
[233.63876343 -523.13641357]
[248.06225586 -518.85162354]
[261.41406250 -511.91436768]
[273.21154785 -502.57540894]
[283.02822876 -491.17236328]
[290.50921631 -478.11743164]
[295.38409424 -463.88253784]
[297.47665405 -448.98229980]
[296.71124268 -433.95529175]
[293.11550903 -419.34475708]
[286.81945801 -405.67889404]
[278.05068970 -393.45166016]
[267.12619019 -383.10510254]
[254.44084167 -375.01321411]
[240.45323181 -369.46850586]
[225.66902161 -366.67144775]
[210.62263489 -366.72314453]
[207.73736572 -352.00326538]
[209.53555298 -344.83468628]
[204.69799805 -337.08642578]
[201.59388733 -322.41110229]
[198.48977661 -307.73580933]
[195.38566589 -293.06051636]
[192.28155518 -278.38519287]
[189.17744446 -263.70989990]
[186.07333374 -249.03460693]
[198.82949829 -242.49797058]
[209.46513367 -232.87101746]
[217.24948120 -220.80671692]
[221.64547729 -207.12580872]
[222.34683228 -192.76095581]
[219.29936218 -178.69316101]
[212.70510864 -165.88476562]
[203.00892639 -155.21360779]
[190.86856079 -147.41291809]
[177.10993958 -143.02087402]
[162.67105103 -142.34349060]
[159.34878540 -127.71602631]
[165.52793884 -117.31676483]
[162.87982178 -105.10320282]
[152.29103088 -97.73841095]
[148.75135803 -83.16203308]
[154.59190369 -66.61346436]
[141.77124023 -53.39558411]
[138.44898987 -38.76812363]
[135.12672424 -24.14066315]
[139.85298157 -10.01579762]
[129.25132751 1.72794616]
[125.92906189 16.35540581]
[122.60680389 30.98286629]
[119.28454590 45.61032486]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[110.92467499 130.86148071]
[98.69474792 143.44702148]
[95.80947876 158.16691589]
[93.47399139 172.98397827]
[91.69152832 187.87770081]
[89.90905762 202.77140808]
[88.12659454 217.66513062]
[94.16918182 232.28695679]
[84.97431183 244.00460815]
[92.61203766 260.76010132]
[81.55371094 274.38656616]
[79.99318695 289.30517578]
[78.43267059 304.22378540]
[90.73679352 295.64422607]
[105.52736664 298.14205933]
[114.33166504 310.28637695]
[112.10618591 325.12036133]
[100.12579346 334.14645386]
[85.25339508 332.19409180]
[76.00883484 320.38256836]
[73.12356567 335.10244751]
[70.23828888 349.82235718]
[67.35301971 364.54223633]
[65.68148041 379.44882202]
[65.23487091 394.44216919]
[64.78826904 409.43551636]
[64.34165955 424.42886353]
[63.89505386 439.42221069]
[63.44844818 454.41555786]
[63.00184250 469.40890503]
[77.65084839 472.87179565]
[91.30277252 479.21292114]
[103.39858246 488.17260742]
[113.44294739 499.38403320]
[121.02457428 512.38800049]
[125.83298492 526.65209961]
[127.67128754 541.59216309]
[126.46420288 556.59643555]
[122.26116180 571.05047607]
[115.23426819 584.36242676]
[105.67127991 595.98712158]
[93.96379089 605.44860840]
[80.59120941 612.35937500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 180]
[39 179]
[40 178]
[43 176]
[45 174]
[46 173]
[47 172]
[48 171]
[54 170]
[55 169]
[58 167]
[60 165]
[61 164]
[62 163]
[64 162]
[65 161]
[66 160]
[67 159]
[69 157]
[70 156]
[71 155]
[74 153]
[75 152]
[77 149]
[78 148]
[88 137]
[89 136]
[90 135]
[91 134]
[92 133]
[93 132]
[94 131]
[95 129]
[96 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
