%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[193.77420044 559.61315918]
[196.41378784 544.82202148]
[201.08628845 530.54217529]
[207.70075989 517.05163574]
[216.12844849 504.61294556]
[226.20529175 493.46829224]
[237.73516846 483.83459473]
[250.49362183 475.89935303]
[244.41978455 462.18408203]
[238.34594727 448.46881104]
[231.96734619 434.89260864]
[219.37164307 426.94293213]
[220.15344238 411.14105225]
[213.47325134 397.71066284]
[206.79306030 384.28030396]
[194.64793396 385.74804688]
[182.61418152 383.41442871]
[171.85520935 377.48980713]
[163.41586304 368.53240967]
[158.12095642 357.39581299]
[156.49467468 345.14764404]
[158.70874023 332.96710205]
[164.56434631 322.03161621]
[173.51002502 313.40286255]
[167.43618774 299.68762207]
[161.36235046 285.97235107]
[155.28851318 272.25708008]
[149.21469116 258.54180908]
[143.14085388 244.82653809]
[137.06701660 231.11128235]
[130.99317932 217.39601135]
[124.91934967 203.68074036]
[118.84551239 189.96546936]
[112.77168274 176.25021362]
[106.69784546 162.53494263]
[105.18862915 177.45883179]
[98.45523834 190.86260986]
[87.38357544 200.98280334]
[73.43030548 206.48791504]
[58.43122101 206.65365601]
[44.35971069 201.45822144]
[33.06711960 191.58515930]
[26.03918839 178.33343506]
[24.20055771 163.44654846]
[27.79313278 148.88311768]
[36.34424973 136.55921936]
[48.72885895 128.09626770]
[63.31755066 124.60772705]
[78.19094086 126.55255127]
[91.39216614 133.67488098]
[101.18559265 145.03968811]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[84.06761932 103.24628448]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[78.63110352 50.33877945]
[80.42929840 43.17021561]
[70.18199921 31.11602974]
[75.32670593 17.13814354]
[65.07940674 5.08395624]
[70.22411346 -8.89392948]
[59.97681046 -20.94811630]
[65.12151337 -34.92600250]
[62.23624420 -49.64589310]
[59.35097122 -64.36578369]
[56.46569824 -79.08567810]
[53.58042526 -93.80556488]
[38.62854004 -92.44721222]
[23.61623383 -92.63345337]
[8.70264626 -94.36230469]
[-5.95413065 -97.61544800]
[-20.19872475 -102.35839844]
[-33.88013840 -108.54087067]
[-46.85334015 -116.09732819]
[-58.98080444 -124.94767761]
[-70.13397217 -134.99809265]
[-80.19461823 -146.14202881]
[-89.05609894 -158.26136780]
[-96.62446594 -171.22763062]
[-102.81948853 -184.90335083]
[-107.57550812 -199.14358521]
[-110.84210968 -213.79737854]
[-112.58464813 -228.70936584]
[-112.78466797 -243.72149658]
[-111.44004059 -258.67462158]
[-108.56502533 -273.41024780]
[-104.19009399 -287.77212524]
[-98.36162567 -301.60806274]
[-91.14140320 -314.77136230]
[-82.60596466 -327.12249756]
[-72.84579468 -338.53051758]
[-61.96435165 -348.87451172]
[-50.07699203 -358.04483032]
[-37.30972290 -365.94424438]
[-23.79788399 -372.48904419]
[-9.68471146 -377.60983276]
[4.88018894 -381.25231934]
[19.74242210 -383.37789917]
[34.74443817 -383.96401978]
[49.72720718 -383.00451660]
[64.53190613 -380.50952148]
[79.00158691 -376.50549316]
[92.98287964 -371.03491211]
[106.32756042 -364.15570068]
[118.89418030 -355.94082642]
[130.54951477 -346.47735596]
[141.17001343 -335.86560059]
[150.64309692 -324.21810913]
[158.86834717 -311.65826416]
[165.75856018 -298.31927490]
[171.24070740 -284.34249878]
[175.25668335 -269.87612915]
[177.76388550 -255.07348633]
[178.73576355 -240.09150696]
[178.16200256 -225.08901978]
[176.04870605 -210.22503662]
[172.41824341 -195.65713501]
[167.30911255 -181.53973389]
[160.77548218 -168.02250671]
[152.88659668 -155.24871826]
[143.72610474 -143.35379028]
[133.39108276 -132.46382141]
[121.99111938 -122.69422913]
[109.64704132 -114.14860535]
[96.48970795 -106.91751862]
[82.65859222 -101.07762909]
[68.30031586 -96.69084167]
[71.18559265 -81.97094727]
[74.07086182 -67.25106049]
[76.95613861 -52.53116608]
[79.84140778 -37.81127548]
[89.88233185 -26.80995178]
[84.94400024 -11.77920151]
[94.98492432 -0.77787930]
[90.04659271 14.25287151]
[100.08752441 25.25419426]
[95.14919281 40.28494263]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[113.71292877 91.26303101]
[116.03817749 102.67506409]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[115.90548706 142.15441895]
[120.41311646 156.46110535]
[126.48694611 170.17637634]
[132.56077576 183.89164734]
[138.63461304 197.60690308]
[144.70845032 211.32217407]
[150.78228760 225.03744507]
[156.85610962 238.75271606]
[162.92994690 252.46797180]
[169.00378418 266.18325806]
[175.07762146 279.89849854]
[181.15145874 293.61376953]
[187.22528076 307.32904053]
[205.18519592 307.40509033]
[221.25415039 315.30773926]
[232.21353149 329.40240479]
[235.89083862 346.81951904]
[231.59016418 364.03863525]
[220.22343445 377.60009766]
[226.90362549 391.03048706]
[233.58383179 404.46084595]
[246.65733337 413.37118530]
[245.39772034 428.21243286]
[249.74873352 431.09613037]
[252.30310059 434.97280884]
[252.98344421 438.99179077]
[252.06121826 442.39498901]
[258.13504028 456.11026001]
[264.20889282 469.82553101]
[278.65945435 465.71118164]
[293.54196167 463.64810181]
[308.56680298 463.67642212]
[323.44143677 465.79562378]
[337.87637329 469.96438599]
[351.59063721 476.10162354]
[364.31723022 484.08782959]
[375.80847168 493.76760864]
[385.84063721 504.95248413]
[394.21847534 517.42474365]
[400.77893066 530.94165039]
[405.39425659 545.24011230]
[407.97463989 560.04168701]
[408.46984863 575.05841064]
[406.87023926 589.99786377]
[403.20693970 604.56927490]
[397.55130005 618.48901367]
[390.01333618 631.48614502]
[380.73983765 643.30767822]
[369.91131592 653.72351074]
[357.73852539 662.53082275]
[344.45840454 669.55822754]
[330.32946777 674.66900635]
[315.62673950 677.76354980]
[300.63644409 678.78167725]
[285.65032959 677.70355225]
[270.96008301 674.55017090]
[256.85174561 669.38299561]
[243.59983826 662.30249023]
[231.46238708 653.44653320]
[220.67559814 642.98748779]
[211.44947815 631.12890625]
[203.96360779 618.10174561]
[198.36369324 604.15948486]
[194.75874329 589.57348633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[11 169]
[13 167]
[14 166]
[15 165]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[51 147]
[52 146]
[53 145]
[55 142]
[56 141]
[57 140]
[59 139]
[61 137]
[63 135]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
