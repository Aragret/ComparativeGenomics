%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[1.06100643 684.97869873]
[-4.94588709 698.77410889]
[-13.45525074 711.18328857]
[-24.15947723 721.75756836]
[-36.67161560 730.11480713]
[-50.53936005 735.95281982]
[-65.26139832 739.06054688]
[-80.30554199 739.32568359]
[-95.12794495 736.73864746]
[-109.19280243 731.39294434]
[-121.99166870 723.48187256]
[-133.06187439 713.29132080]
[-142.00323486 701.18975830]
[-148.49252319 687.61456299]
[-152.29516602 673.05651855]
[-153.27369690 658.04187012]
[-151.39274597 643.11346436]
[-146.72030640 628.81085205]
[-139.42526245 615.65106201]
[-129.77136230 604.10992432]
[-118.10755920 594.60455322]
[-104.85550690 587.47857666]
[-90.49426270 582.98956299]
[-75.54296112 581.29986572]
[-60.54209137 582.47052002]
[-56.56999207 568.00598145]
[-52.59789658 553.54144287]
[-48.62580109 539.07690430]
[-44.65370560 524.61242676]
[-40.68161011 510.14788818]
[-41.94932175 507.64767456]
[-42.30305481 504.49465942]
[-41.48920059 501.03445435]
[-39.38383484 497.69799805]
[-36.01854324 494.95413208]
[-31.19254494 480.75167847]
[-38.44907761 470.10403442]
[-38.24494171 457.02578735]
[-30.43063736 446.29513550]
[-17.67784691 441.96142578]
[-12.64093113 427.83239746]
[-7.60401487 413.70336914]
[-15.45490360 398.83050537]
[-10.01277161 382.56097412]
[5.81794930 375.11734009]
[10.64394665 360.91488647]
[15.46994495 346.71243286]
[20.29594231 332.50997925]
[17.06481743 317.97006226]
[28.83070183 307.39297485]
[25.59957504 292.85305786]
[37.36545944 282.27600098]
[42.19145584 268.07354736]
[47.01745605 253.87107849]
[51.84345245 239.66862488]
[56.66944885 225.46617126]
[61.49544907 211.26370239]
[60.67110062 203.91917419]
[66.50046539 196.88665771]
[70.90146637 182.54681396]
[74.65776825 168.02474976]
[78.41407013 153.50268555]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[106.95565796 42.71344757]
[110.49533081 28.13707161]
[112.38862610 13.25703716]
[112.61195374 -1.74129999]
[112.83528137 -16.73963737]
[113.05860901 -31.73797417]
[113.28193665 -46.73631287]
[113.50526428 -61.73464966]
[113.72859192 -76.73298645]
[99.82319641 -82.80880737]
[89.33164215 -93.71616364]
[83.83023071 -107.77133942]
[84.12829590 -122.82122040]
[90.14927673 -136.57304382]
[100.94715118 -146.94372559]
[114.85491943 -152.37542725]
[115.07824707 -167.37376404]
[115.30157471 -182.37210083]
[115.41323853 -197.37168884]
[115.18991089 -212.37002563]
[114.74330902 -227.36337280]
[114.29669952 -242.35671997]
[113.85009766 -257.35006714]
[105.01457977 -266.74670410]
[104.95127106 -279.24389648]
[113.14869690 -288.13931274]
[112.92536926 -303.13766479]
[104.98346710 -316.82110596]
[112.53041840 -329.66217041]
[98.51089478 -335.60968018]
[88.12724304 -346.74966431]
[83.17849731 -361.15209961]
[84.52204895 -376.32162476]
[91.92511749 -389.63006592]
[104.10509491 -398.77163696]
[118.95170593 -402.16250610]
[133.89270020 -399.21517944]
[146.33944702 -390.44030762]
[154.13548279 -377.35818481]
[155.93008423 -362.23538208]
[151.41235352 -347.69201660]
[141.36497498 -336.24777222]
[127.52875519 -329.88549805]
[135.45468140 -317.27481079]
[127.92370605 -303.36099243]
[128.14703369 -288.36264038]
[137.94557190 -273.80395508]
[128.84344482 -257.79669189]
[129.29005432 -242.80332947]
[129.73666382 -227.80998230]
[130.18325806 -212.81663513]
[132.98338318 -208.94772339]
[133.38279724 -203.27873230]
[130.41323853 -197.37168884]
[133.55674744 -190.68287659]
[130.29991150 -182.14877319]
[130.07658386 -167.15043640]
[129.85325623 -152.15209961]
[143.59313965 -146.30873108]
[154.07745361 -135.62113953]
[159.68632507 -121.69614410]
[159.53616333 -106.64406586]
[153.61871338 -92.75891876]
[142.80706787 -82.16876984]
[128.72692871 -76.50965881]
[128.50360107 -61.51132202]
[128.28027344 -46.51298523]
[128.05694580 -31.51464653]
[127.83361816 -16.51630974]
[127.61029053 -1.51797223]
[127.38696289 13.48036480]
[135.00317383 0.55777556]
[146.72793579 -8.79796505]
[161.01866150 -13.35594940]
[175.99514771 -12.51649475]
[189.68699646 -6.39004612]
[200.29280090 4.21735620]
[206.41717529 17.91012573]
[207.25437927 32.88674545]
[202.69422913 47.17678070]
[193.33671570 58.90013123]
[180.41297913 66.51439667]
[165.62335205 69.01777649]
[150.91366577 66.08091736]
[138.21923828 58.09020615]
[129.21023560 46.09696960]
[125.07170868 31.67674446]
[121.53203583 46.25312042]
[123.00834656 53.49482727]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[92.93612671 157.25898743]
[89.17982483 171.78105164]
[85.42352295 186.30311584]
[98.86421967 179.64370728]
[113.12062073 184.30793762]
[120.02600861 197.62393188]
[115.62466431 211.96366882]
[102.43788147 219.11270142]
[88.01964569 214.97575378]
[80.62950134 201.92356873]
[75.69790649 216.08970642]
[70.87191010 230.29216003]
[66.04590607 244.49461365]
[61.21990967 258.69708252]
[56.39391327 272.89953613]
[51.56791687 287.10198975]
[54.45385361 302.65774536]
[43.03315735 312.21896362]
[45.91909409 327.77474976]
[34.49839783 337.33596802]
[29.67239952 351.53842163]
[24.84640312 365.74087524]
[20.02040482 379.94332886]
[27.32506561 391.25955200]
[26.78638840 404.52304077]
[18.82490730 414.90075684]
[6.52501440 418.74029541]
[1.48809838 432.86932373]
[-3.54881787 446.99835205]
[4.23713207 462.66354370]
[-1.60049367 478.79541016]
[-16.99008942 485.57766724]
[-21.81608582 499.78012085]
[-26.21708488 514.11999512]
[-30.18918037 528.58447266]
[-34.16127777 543.04901123]
[-38.13337326 557.51354980]
[-42.10546875 571.97808838]
[-46.07756424 586.44262695]
[-32.58263397 593.09716797]
[-20.59112358 602.18560791]
[-10.53651714 613.37945557]
[-2.78228354 626.27392578]
[2.39126635 640.40301514]
[4.79711199 655.25592041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 204]
[26 203]
[27 202]
[28 201]
[29 200]
[30 199]
[35 198]
[36 197]
[40 194]
[41 193]
[42 192]
[45 188]
[46 187]
[47 186]
[48 185]
[50 183]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[59 175]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[67 161]
[68 160]
[69 159]
[70 157]
[71 156]
[72 140]
[73 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[85 127]
[86 126]
[87 125]
[88 123]
[89 120]
[90 119]
[91 118]
[92 117]
[95 115]
[96 114]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
