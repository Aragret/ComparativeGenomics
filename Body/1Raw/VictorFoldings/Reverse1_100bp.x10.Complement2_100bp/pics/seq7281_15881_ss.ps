%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[244.61445618 251.81678772]
[234.12695312 241.09240723]
[223.63945007 230.36802673]
[216.71539307 227.78364563]
[213.07713318 219.40504456]
[202.75045776 208.52571106]
[192.42378235 197.64637756]
[182.09712219 186.76704407]
[171.77044678 175.88771057]
[161.44378662 165.00837708]
[150.64163208 154.60099792]
[139.38552856 144.68634033]
[128.12944031 134.77169800]
[113.46463013 132.16539001]
[108.22306824 117.23767090]
[93.75629425 118.04916382]
[82.88326263 108.47193146]
[81.86227417 94.01842499]
[70.60617828 84.10377502]
[59.20372009 74.35780334]
[47.65741730 64.78268433]
[36.11111450 55.20756531]
[20.54934692 52.35416031]
[15.69152355 38.27400208]
[4.14522171 28.69888306]
[-7.40107965 19.12376404]
[-18.94738197 9.54864407]
[-30.49368286 -0.02647547]
[-46.01788712 1.25291085]
[-57.59107971 -8.62210369]
[-58.71510696 -23.42994499]
[-70.26140594 -33.00506592]
[-81.80770874 -42.58018494]
[-93.35401154 -52.15530396]
[-104.90031433 -61.73042297]
[-99.28244019 -47.82217026]
[-98.41920471 -32.84703064]
[-102.40170288 -18.38536453]
[-110.80964661 -5.96335125]
[-122.75573730 3.10808849]
[-136.97926331 7.87162256]
[-151.97918701 7.82454443]
[-166.17253113 2.97182202]
[-178.06144714 -6.17442513]
[-186.39125061 -18.64897156]
[-190.28289795 -33.13534927]
[-189.32566833 -48.10477448]
[-183.62060547 -61.97749329]
[-173.76977539 -73.28947449]
[-160.81274414 -80.84694672]
[-146.11691284 -83.85235596]
[-131.23315430 -81.98851776]
[-117.73204041 -75.45203400]
[-126.51264191 -87.61348724]
[-135.29324341 -99.77494049]
[-144.07385254 -111.93640137]
[-157.12593079 -104.51410675]
[-170.90400696 -98.54653168]
[-185.24652100 -94.10363770]
[-199.98533630 -91.23751068]
[-214.94763184 -89.98176575]
[-229.95799255 -90.35111237]
[-244.84042358 -92.34123230]
[-259.42044067 -95.92877960]
[-273.52706909 -101.07170105]
[-286.99496460 -107.70970154]
[-299.66622925 -115.76494598]
[-311.39224243 -125.14299011]
[-322.03555298 -135.73388672]
[-331.47137451 -147.41346741]
[-339.58908081 -160.04478455]
[-346.29348755 -173.47975159]
[-351.50598145 -187.56083679]
[-355.16546631 -202.12295532]
[-357.22903442 -216.99537659]
[-357.67248535 -232.00372314]
[-356.49060059 -246.97204590]
[-353.69726562 -261.72482300]
[-349.32525635 -276.08911133]
[-343.42575073 -289.89648438]
[-336.06799316 -302.98504639]
[-327.33822632 -315.20135498]
[-317.33877563 -326.40216064]
[-306.18692017 -336.45617676]
[-294.01336670 -345.24551392]
[-280.96090698 -352.66708374]
[-267.18249512 -358.63394165]
[-252.83975220 -363.07604980]
[-238.10078430 -365.94137573]
[-223.13841248 -367.19631958]
[-208.12808228 -366.82617188]
[-193.24575806 -364.83526611]
[-178.66593933 -361.24691772]
[-164.55957031 -356.10324097]
[-151.09202576 -349.46450806]
[-138.42121887 -341.40859985]
[-126.69570923 -332.02990723]
[-116.05296326 -321.43844604]
[-106.61777496 -309.75836182]
[-98.50074768 -297.12661743]
[-91.79706573 -283.69128418]
[-86.58532715 -269.60992432]
[-82.92662048 -255.04759216]
[-80.86386108 -240.17506409]
[-80.42121887 -225.16668701]
[-81.60388947 -210.19844055]
[-84.39801025 -195.44580078]
[-88.77082062 -181.08175659]
[-94.67104340 -167.27470398]
[-102.02951813 -154.18653870]
[-110.75994873 -141.97070312]
[-120.75999451 -130.77041626]
[-131.91239929 -120.71700287]
[-123.13179016 -108.55554962]
[-114.35118866 -96.39408875]
[-105.57058716 -84.23263550]
[-95.32519531 -73.27672577]
[-83.77889252 -63.70160675]
[-72.23258972 -54.12648392]
[-60.68629074 -44.55136490]
[-49.13998795 -34.97624588]
[-34.37987518 -36.61168289]
[-22.53388214 -27.06562996]
[-20.91856384 -11.57277679]
[-9.37226200 -1.99765742]
[2.17403984 7.57746220]
[13.72034168 17.15258217]
[25.26664352 26.72770119]
[40.00254440 28.89623260]
[45.68623352 43.66126633]
[57.23253632 53.23638535]
[68.77883911 62.81150436]
[73.53289795 63.26753235]
[78.05095673 66.71487427]
[80.52083588 72.84767914]
[91.77693176 82.76232910]
[106.24370575 81.95083618]
[117.11673737 91.52806854]
[118.13772583 105.98157501]
[133.60763550 109.29705048]
[138.04408264 123.51560211]
[149.30018616 133.43025208]
[160.55627441 143.34490967]
[160.69114685 128.34550476]
[171.29562378 117.73677063]
[186.29495239 117.59586334]
[197.09686279 128.00349426]
[197.51351929 142.99771118]
[187.30624390 153.98913574]
[172.32312012 154.68170166]
[182.64978027 165.56103516]
[192.97645569 176.44036865]
[203.30313110 187.31970215]
[213.62979126 198.19903564]
[223.95646667 209.07836914]
[234.36383057 219.88053894]
[244.85133362 230.60490417]
[255.33883667 241.32928467]
[267.20132446 232.12174988]
[280.03610229 224.32647705]
[293.67584229 218.04510498]
[307.94268799 213.35951233]
[322.65066528 210.33079529]
[337.60803223 208.99844360]
[352.61978149 209.37982178]
[367.49017334 211.46995544]
[382.02539062 215.24159241]
[396.03591919 220.64556885]
[409.33908081 227.61143494]
[421.76147461 236.04837036]
[433.14114380 245.84638977]
[443.32971191 256.87774658]
[452.19436646 268.99862671]
[459.61953735 282.05099487]
[465.50842285 295.86471558]
[469.78421021 310.25970459]
[472.39120483 325.04824829]
[473.29544067 340.03759766]
[472.48504639 355.03228760]
[469.97064209 369.83685303]
[465.78500366 384.25833130]
[459.98269653 398.10861206]
[452.63937378 411.20721436]
[443.85076904 423.38333130]
[433.73141479 434.47824097]
[422.41329956 444.34729004]
[410.04394531 452.86178589]
[396.78463745 459.91079712]
[382.80819702 465.40234375]
[368.29687500 469.26489258]
[353.43984985 471.44802856]
[338.43078613 471.92333984]
[323.46539307 470.68463135]
[308.73873901 467.74801636]
[294.44284058 463.15182495]
[280.76406860 456.95593262]
[267.88076782 449.24114990]
[255.96086121 440.10803223]
[245.15979004 429.67562866]
[235.61834717 418.08001709]
[227.46093750 405.47229004]
[220.79388428 392.01687622]
[215.70413208 377.88916016]
[212.25802612 363.27334595]
[210.50050354 348.35998535]
[210.45445251 333.34347534]
[212.12049866 318.41958618]
[215.47691345 303.78289795]
[220.47993469 289.62426758]
[227.06434631 276.12820435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[5 155]
[6 154]
[7 153]
[8 152]
[9 151]
[10 150]
[11 143]
[12 142]
[13 141]
[15 139]
[18 136]
[19 135]
[20 132]
[21 131]
[22 130]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[31 121]
[32 120]
[33 119]
[34 118]
[35 117]
[53 116]
[54 115]
[55 114]
[56 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
