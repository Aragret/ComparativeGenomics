%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[-33.89003754 522.43341064]
[-29.36352730 536.76141357]
[-26.92225838 551.58776855]
[-26.61593437 566.61059570]
[-28.45079231 581.52416992]
[-32.38947296 596.02478027]
[-38.35179520 609.81719971]
[-46.21636963 622.62072754]
[-55.82308578 634.17456055]
[-66.97635651 644.24359131]
[-79.44912720 652.62280273]
[-92.98746490 659.14154053]
[-107.31574249 663.66717529]
[-122.14225006 666.10754395]
[-137.16514587 666.41290283]
[-152.07858276 664.57714844]
[-166.57894897 660.63757324]
[-180.37103271 654.67437744]
[-193.17402649 646.80902100]
[-204.72729492 637.20159912]
[-214.79562378 626.04766846]
[-223.17404175 613.57440186]
[-229.69197083 600.03564453]
[-234.21670532 585.70709229]
[-236.65614319 570.88043213]
[-236.96060181 555.85754395]
[-235.12390137 540.94421387]
[-231.18342590 526.44409180]
[-225.21939087 512.65240479]
[-217.35324097 499.84985352]
[-207.74508667 488.29718018]
[-196.59056091 478.22955322]
[-184.11676025 469.85189819]
[-170.57762146 463.33480835]
[-156.24877930 458.81097412]
[-141.42196655 456.37243652]
[-126.39903259 456.06890869]
[-111.48582458 457.90655518]
[-96.98594666 461.84793091]
[-83.19461060 467.81280518]
[-75.34285736 455.03195190]
[-67.49110413 442.25109863]
[-59.63934326 429.47027588]
[-51.78759003 416.68942261]
[-44.31984711 403.68048096]
[-37.24274445 390.45495605]
[-30.16563797 377.22943115]
[-23.08853149 364.00390625]
[-16.01142693 350.77835083]
[-8.93432140 337.55282593]
[-1.85721576 324.32730103]
[5.21988964 311.10177612]
[12.29699516 297.87625122]
[19.37409973 284.65072632]
[26.05429459 271.22033691]
[32.33165741 257.59704590]
[38.60901642 243.97372437]
[36.90808105 229.17655945]
[49.71050644 219.88093567]
[55.98786545 206.25761414]
[61.65065384 192.36758423]
[66.68756866 178.23855591]
[71.72448730 164.10952759]
[76.76139832 149.98049927]
[81.79831696 135.85147095]
[86.30594635 121.54478455]
[90.27804565 107.08026123]
[94.03433990 92.55820465]
[97.57401276 77.98182678]
[101.11368561 63.40545273]
[104.65335846 48.82907867]
[91.31330109 55.68785858]
[76.98904419 51.23639679]
[69.88616180 38.02469254]
[74.07351685 23.62100983]
[87.15240479 16.27643394]
[101.63063049 20.19826889]
[109.21429443 33.13896942]
[114.04029083 18.93651390]
[118.86628723 4.73405886]
[123.69228363 -9.46839619]
[126.24811554 -24.24905014]
[126.47144318 -39.24738693]
[118.94046783 -53.16122818]
[126.86640167 -65.77188873]
[116.13880920 -77.06598663]
[116.57894897 -92.27325439]
[127.41225433 -102.43077087]
[127.63558197 -117.42910767]
[116.90798950 -128.72320557]
[117.34813690 -143.93046570]
[128.18144226 -154.08798218]
[128.40476990 -169.08631897]
[128.62809753 -184.08465576]
[128.85142517 -199.08299255]
[114.37361145 -203.36033630]
[101.58731079 -211.38609314]
[91.44132996 -222.56472778]
[84.68858337 -236.06669617]
[81.83016968 -250.89006042]
[83.07819366 -265.93481445]
[88.34004974 -280.08456421]
[97.22526550 -292.28930664]
[109.07450867 -301.64334106]
[123.00848389 -307.45254517]
[137.99319458 -309.28585815]
[152.91667175 -307.00720215]
[166.67150879 -300.78570557]
[178.23699951 -291.08303833]
[186.75489807 -278.61917114]
[191.59312439 -264.31900024]
[192.39265442 -249.24375916]
[189.09416199 -234.51206970]
[181.94239807 -221.21714783]
[171.46809387 -210.34556580]
[158.44850159 -202.70405579]
[143.84976196 -198.85966492]
[143.62643433 -183.86132812]
[143.40310669 -168.86299133]
[143.17977905 -153.86465454]
[153.70585632 -143.38909912]
[153.69302368 -128.17546082]
[142.63392639 -117.20578003]
[142.41059875 -102.20744324]
[152.93666077 -91.73188019]
[152.92384338 -76.51824951]
[141.86473083 -65.54856110]
[149.41168213 -52.70750427]
[141.46978760 -39.02405930]
[141.24645996 -24.02572250]
[148.21400452 -37.30929565]
[158.46676636 -48.25829697]
[171.26461792 -56.08230972]
[185.68363953 -60.21651077]
[200.68293762 -60.36244965]
[215.17967224 -56.50959015]
[228.12733459 -48.93607330]
[238.59120178 -38.18864059]
[245.81590271 -25.04315376]
[249.27986145 -10.44859886]
[248.73300171 4.54142952]
[244.21482849 18.84478951]
[236.05149841 31.42890930]
[224.83233643 41.38533020]
[211.36724854 47.99528885]
[196.62831116 50.78160477]
[181.67951965 49.54313660]
[167.60006714 44.36928940]
[155.40632629 35.63356400]
[145.97860718 23.96660042]
[139.99748230 10.21064949]
[137.89474487 -4.64239883]
[133.06874084 9.56005669]
[128.24275208 23.76251221]
[123.41674805 37.96496964]
[119.22973633 52.36875153]
[115.69006348 66.94512177]
[112.15039062 81.52149963]
[108.61071777 96.09787750]
[110.25478363 101.07894135]
[108.99102020 106.62657166]
[104.74256897 111.05236053]
[100.77046967 125.51688385]
[114.89939880 120.47969055]
[127.72672272 128.25527954]
[129.79661560 143.11177063]
[119.58322144 154.09751892]
[104.61548615 153.11424255]
[95.92734528 140.88839722]
[90.89043427 155.01742554]
[85.85351562 169.14645386]
[80.81659698 183.27548218]
[75.77968597 197.40451050]
[89.76090240 191.97077942]
[103.54433441 197.88830566]
[109.23419189 211.76727295]
[103.57106781 225.65715027]
[89.79906464 231.60122681]
[75.80740356 226.19442749]
[69.61118317 212.53497314]
[63.33382034 226.15829468]
[64.58575439 241.92988586]
[52.23233414 250.25108337]
[45.95497131 263.87438965]
[39.67761230 277.49771118]
[40.22942734 281.80462646]
[39.45945740 285.67395020]
[37.66757202 288.74389648]
[35.24034119 290.78720093]
[32.59962845 291.72784424]
[25.52252197 304.95336914]
[18.44541740 318.17889404]
[11.36831188 331.40441895]
[4.29120636 344.62994385]
[-2.78589916 357.85546875]
[-9.86300468 371.08099365]
[-16.94010925 384.30651855]
[-24.01721573 397.53204346]
[-31.09432030 410.75756836]
[-30.79983521 415.08969116]
[-31.79874611 418.90634155]
[-33.77017975 421.86416626]
[-36.31472778 423.75939941]
[-39.00674820 424.54116821]
[-46.85850143 437.32202148]
[-54.71025848 450.10287476]
[-62.56201172 462.88369751]
[-70.41377258 475.66455078]
[-58.85931015 485.27053833]
[-48.78959656 496.42321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 208]
[41 207]
[42 206]
[43 205]
[44 204]
[45 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 185]
[56 184]
[57 183]
[59 181]
[60 180]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 163]
[67 162]
[68 159]
[69 158]
[70 157]
[71 156]
[78 155]
[79 154]
[80 153]
[81 152]
[82 130]
[83 129]
[85 127]
[88 124]
[89 123]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
