%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[59.77309799 579.16711426]
[51.62315369 566.38610840]
[48.33910370 551.58776855]
[50.31751251 536.55908203]
[57.31948090 523.11480713]
[68.49948120 512.87841797]
[82.50748444 507.08602905]
[81.83769989 492.10098267]
[81.16790771 477.11596680]
[80.49812317 462.13092041]
[79.82833862 447.14587402]
[76.97093201 443.31909180]
[76.48715210 437.65667725]
[79.36843872 431.70608521]
[79.14511108 416.70773315]
[78.92178345 401.70941162]
[78.69845581 386.71105957]
[66.53717041 395.49191284]
[52.04927444 391.60592651]
[45.91470337 377.91772461]
[52.65563202 364.51773071]
[67.30290222 361.28390503]
[79.05835724 370.59866333]
[79.95117950 355.62524414]
[80.84399414 340.65185547]
[81.73680878 325.67843628]
[82.62962341 310.70504761]
[68.92776489 302.13931274]
[61.37179184 287.74963379]
[62.10784912 271.41943359]
[71.02964020 257.61010742]
[85.78162384 250.14213562]
[86.45140839 235.15708923]
[87.12119293 220.17205811]
[87.79097748 205.18701172]
[80.62969208 192.12695312]
[88.97548676 178.68603516]
[89.64527130 163.70098877]
[82.48399353 150.64093018]
[90.82978821 137.20001221]
[91.49957275 122.21496582]
[92.16935730 107.22992706]
[91.49957275 92.24488831]
[89.49555969 77.37936401]
[87.49154663 62.51383209]
[85.48753357 47.64830399]
[83.26241302 32.81425858]
[80.81668854 18.01498985]
[78.37095642 3.21571851]
[68.48709869 -9.13822556]
[74.04570007 -22.95673752]
[71.59996796 -37.75600815]
[69.04413605 -52.53666306]
[66.37834167 -67.29788208]
[63.71254730 -82.05909729]
[60.71777344 -96.75710297]
[57.39551544 -111.38455963]
[54.07325363 -126.01202393]
[48.82653809 -140.06449890]
[35.49352646 -148.58161926]
[36.31070328 -163.45378113]
[29.23359680 -176.67932129]
[22.15649033 -189.90484619]
[15.07938480 -203.13037109]
[8.00228024 -216.35589600]
[-6.03877354 -211.01950073]
[-20.64696693 -207.52249146]
[-35.58242035 -205.92231750]
[-50.59987640 -206.24522400]
[-65.45274353 -208.48593140]
[-79.89710999 -212.60763550]
[-93.69580078 -218.54264832]
[-106.62222290 -226.19352722]
[-118.46411896 -235.43463135]
[-129.02702332 -246.11421204]
[-138.13748169 -258.05688477]
[-145.64590454 -271.06658936]
[-151.42900085 -284.92962646]
[-155.39178467 -299.41842651]
[-157.46919250 -314.29498291]
[-157.62712097 -329.31509399]
[-155.86297607 -344.23205566]
[-152.20571899 -358.80096436]
[-146.71540833 -372.78256226]
[-139.48219299 -385.94723511]
[-130.62486267 -398.07885742]
[-120.28884888 -408.97817993]
[-108.64388275 -418.46621704]
[-95.88119507 -426.38720703]
[-82.21035004 -432.61105347]
[-67.85583496 -437.03558350]
[-53.05337143 -439.58807373]
[-38.04602051 -440.22668457]
[-23.08022499 -438.94091797]
[-8.40173149 -435.75183105]
[5.74842501 -430.71185303]
[19.13788605 -423.90371704]
[31.54678345 -415.43923950]
[42.77135086 -405.45739746]
[52.62727737 -394.12207031]
[60.95270920 -381.61947632]
[67.61094666 -368.15484619]
[72.49264526 -353.94931030]
[75.51764679 -339.23611450]
[76.63627625 -324.25689697]
[75.83017731 -309.25759888]
[73.11256409 -294.48455811]
[68.52808380 -280.18032837]
[62.15200806 -266.57983398]
[54.08903503 -253.90635681]
[44.47156906 -242.36804199]
[33.45754242 -232.15435791]
[21.22780800 -223.43299866]
[28.30491257 -210.20747375]
[35.38201904 -196.98194885]
[42.45912552 -183.75642395]
[49.53622818 -170.53089905]
[62.36303711 -162.95974731]
[62.05206299 -147.14160156]
[61.96997070 -162.14137268]
[66.46715546 -176.45133972]
[75.11495972 -188.70758057]
[87.08914948 -197.74189758]
[101.24841309 -202.69319153]
[116.24317169 -203.08955383]
[130.64422607 -198.89318848]
[143.07896423 -190.50407410]
[152.36219788 -178.72180176]
[157.60906982 -164.66940308]
[158.31951904 -149.68623352]
[154.42581177 -135.20040894]
[146.29907227 -122.59262848]
[134.71389771 -113.06457520]
[120.77451324 -107.52441406]
[105.80952454 -106.50019073]
[91.24529266 -110.08953094]
[78.47000885 -117.95031738]
[68.70071411 -129.33427429]
[72.02297211 -114.70681763]
[75.34523010 -100.07936096]
[78.11782074 -97.90103912]
[79.97307587 -94.27156067]
[80.24042511 -89.63671112]
[78.47376251 -84.72489166]
[81.13955688 -69.96367645]
[83.80535889 -55.20245743]
[88.08754730 -49.17878723]
[86.39923859 -40.20173645]
[88.84497070 -25.40246391]
[98.55389404 -14.10706329]
[93.17022705 0.76999110]
[95.61595917 15.56926155]
[98.06168365 30.36853218]
[101.35358429 33.82865143]
[102.50681305 39.39345932]
[100.35305786 45.64429092]
[102.35707092 60.50981903]
[104.36108398 75.37534332]
[106.36509705 90.24087524]
[112.73708344 76.66156006]
[124.31504059 67.12474060]
[138.86344910 63.47183228]
[153.57324219 66.40814972]
[165.60418701 75.36673737]
[172.63330078 88.61783600]
[173.30335999 103.60286713]
[167.48500061 117.42844391]
[156.30165100 127.42507935]
[141.91264343 131.66256714]
[127.09626007 129.32272339]
[114.71332550 120.85733032]
[107.15439606 107.89971161]
[106.48461151 122.88475037]
[105.81482697 137.86979675]
[112.92819977 152.00169373]
[104.63031006 164.37077332]
[103.96052551 179.35581970]
[111.07389832 193.48771667]
[102.77601624 205.85679626]
[102.10623169 220.84184265]
[101.43644714 235.82687378]
[100.76666260 250.81192017]
[112.93096924 257.71789551]
[120.89506531 269.13668823]
[123.15148926 282.80734253]
[119.31615448 296.05270386]
[110.19229126 306.30374146]
[97.60302734 311.59783936]
[96.71021271 326.57125854]
[95.81739807 341.54464722]
[94.92458344 356.51806641]
[94.03176880 371.49148560]
[93.69679260 386.48773193]
[93.92012024 401.48608398]
[94.14344788 416.48440552]
[94.36677551 431.48275757]
[94.81337738 446.47610474]
[95.48316193 461.46112061]
[96.15294647 476.44616699]
[96.82273865 491.43121338]
[97.49252319 506.41625977]
[111.96143341 510.93582153]
[124.01009369 520.13391113]
[132.18357849 532.89990234]
[135.49488831 547.69213867]
[133.54418945 562.72448730]
[126.56700897 576.18164062]
[115.40588379 586.43859863]
[101.40858459 592.25677490]
[86.26535034 592.93365479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[14 196]
[15 195]
[16 194]
[17 193]
[23 192]
[24 191]
[25 190]
[26 189]
[27 188]
[32 182]
[33 181]
[34 180]
[35 179]
[37 177]
[38 176]
[40 174]
[41 173]
[42 172]
[43 159]
[44 158]
[45 157]
[46 156]
[47 153]
[48 152]
[49 151]
[51 149]
[52 148]
[53 146]
[54 145]
[55 144]
[56 140]
[57 139]
[58 138]
[59 119]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
