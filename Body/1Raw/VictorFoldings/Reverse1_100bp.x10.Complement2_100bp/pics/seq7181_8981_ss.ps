%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[91.00691223 772.74890137]
[76.19713593 770.17651367]
[61.97213364 765.31896973]
[48.68221664 758.29583740]
[36.65465164 749.28002930]
[26.18563652 738.49365234]
[17.53297615 726.20227051]
[10.90975094 712.70861816]
[6.47906351 698.34490967]
[4.35002375 683.46496582]
[4.57506084 668.43511963]
[7.14863300 653.62554932]
[12.00736427 639.40093994]
[19.03160477 626.11163330]
[28.04837227 614.08477783]
[38.83562469 603.61663818]
[51.12771606 594.96502686]
[64.62194061 588.34289551]
[78.98599243 583.91339111]
[93.86614990 581.78558350]
[94.08947754 566.78723145]
[94.31280518 551.78894043]
[94.53613281 536.79058838]
[94.75946045 521.79223633]
[94.98278809 506.79391479]
[95.20611572 491.79556274]
[80.14476013 488.63821411]
[65.98091888 482.60980225]
[53.25632095 473.93893433]
[42.45802689 462.95535278]
[33.99980164 450.07733154]
[28.20623589 435.79577637]
[25.30030632 420.65551758]
[25.39478683 405.23455811]
[28.48787498 390.12194824]
[34.46319199 375.89532471]
[43.09415817 363.09878540]
[54.05258942 352.22216797]
[66.92118073 343.68218994]
[81.20936584 337.80661011]
[96.37207031 334.82147217]
[96.37207031 319.82147217]
[96.37207031 304.82147217]
[96.37207031 289.82147217]
[96.37207031 274.82147217]
[86.79137421 260.11849976]
[96.13081360 244.24850464]
[86.33228302 229.68981934]
[95.43440247 213.68254089]
[94.98780060 198.68919373]
[94.54119110 183.69584656]
[94.09458923 168.70248413]
[93.64797974 153.70913696]
[90.30672455 147.11688232]
[93.30801392 138.48960876]
[93.08468628 123.49126434]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[90.18214417 48.55028152]
[89.51235962 33.56524277]
[88.84257507 18.58020401]
[88.17279053 3.59516478]
[87.50300598 -11.38987350]
[86.49874878 -26.35621834]
[85.16051483 -41.29640198]
[83.82228088 -56.23658752]
[82.15073395 -71.14316559]
[80.14672089 -86.00868988]
[78.14270782 -100.87422180]
[76.13869476 -115.73974609]
[74.13468170 -130.60527039]
[64.36953735 -139.03170776]
[63.00642776 -151.45449829]
[70.23393250 -161.15447998]
[68.45146942 -176.04820251]
[66.66900635 -190.94190979]
[54.52868271 -200.70153809]
[52.93317413 -215.83128357]
[62.31230545 -227.34507751]
[60.52984238 -242.23880005]
[58.74737549 -257.13250732]
[49.42501068 -269.91546631]
[55.59509277 -283.47198486]
[40.58352661 -284.45565796]
[26.00836945 -288.18118286]
[12.36604404 -294.52163696]
[0.12120124 -303.26110840]
[-10.30910301 -314.10192871]
[-18.56961632 -326.67486572]
[-24.37898827 -340.55166626]
[-27.53935432 -355.25973511]
[-27.94307327 -370.29806519]
[-25.57639694 -385.15451050]
[-20.51992989 -399.32299805]
[-12.94589520 -412.32104492]
[-3.11226177 -423.70587158]
[8.64604092 -433.08972168]
[21.92852974 -440.15301514]
[36.28280640 -444.65518188]
[51.21997070 -446.44284058]
[66.23126984 -445.45513916]
[80.80541992 -441.72570801]
[94.44603729 -435.38156128]
[106.68852234 -426.63876343]
[117.11590576 -415.79513550]
[125.37303162 -403.21997070]
[131.17866516 -389.34161377]
[134.33506775 -374.63272095]
[134.73472595 -359.59426880]
[132.36404419 -344.73846436]
[127.30376434 -330.57131958]
[119.72622681 -317.57534790]
[109.88951874 -306.19314575]
[98.12869263 -296.81246948]
[84.84429932 -289.75274658]
[70.48880768 -285.25445557]
[79.68367767 -273.53680420]
[73.64109039 -258.91497803]
[75.42356110 -244.02125549]
[77.20602417 -229.12754822]
[89.03727722 -220.15219116]
[91.05712128 -205.07322693]
[81.56272125 -192.72438049]
[83.34518433 -177.83065796]
[85.12765503 -162.93695068]
[96.38763428 -149.47663879]
[89.00021362 -132.60928345]
[91.00422668 -117.74375916]
[93.00823975 -102.87823486]
[95.01225281 -88.01270294]
[97.01626587 -73.14717865]
[99.58345795 -70.73018646]
[101.10750580 -66.94966125]
[100.96028900 -62.30944443]
[98.76246643 -57.57482147]
[100.10070038 -42.63463593]
[101.43893433 -27.69445229]
[103.89563751 -25.16523933]
[105.24935913 -21.32043648]
[104.89508820 -16.69141960]
[102.48804474 -12.05965900]
[103.15782928 2.92537975]
[103.82761383 17.91041946]
[104.49739838 32.89545822]
[105.16718292 47.88049698]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[111.12659454 116.53306580]
[108.08303070 123.26793671]
[108.30635834 138.26628113]
[108.64133453 153.26254272]
[109.08793640 168.25588989]
[109.53454590 183.24923706]
[109.98114777 198.24258423]
[110.42775726 213.23593140]
[119.26326752 222.63255310]
[119.32657623 235.12974548]
[111.12915039 244.02517700]
[119.82378387 253.55230713]
[119.70102692 266.04907227]
[111.37207031 274.82147217]
[111.37207031 289.82147217]
[111.37207031 304.82147217]
[111.37207031 319.82147217]
[111.37207031 334.82147217]
[125.74827576 337.57415771]
[139.36694336 342.92800903]
[151.76194763 350.69815063]
[162.50935364 360.61703491]
[171.24188232 372.34362793]
[177.66151428 385.47518921]
[181.54965210 399.56103516]
[182.77449036 414.11810303]
[181.29559326 428.64739990]
[177.16513062 442.65121460]
[170.52613831 455.65011597]
[161.60743713 467.19927979]
[150.71586609 476.90393066]
[138.22567749 484.43261719]
[124.56566620 489.52868652]
[110.20445251 492.01889038]
[109.98112488 507.01724243]
[109.75779724 522.01556396]
[109.53446960 537.01391602]
[109.31114197 552.01226807]
[109.08781433 567.01055908]
[108.86448669 582.00891113]
[123.67468262 584.57879639]
[137.90048218 589.43402100]
[151.19155884 596.45495605]
[163.22061157 605.46875000]
[173.69140625 616.25341797]
[182.34609985 628.54339600]
[188.97155762 642.03594971]
[193.40461731 656.39892578]
[195.53610229 671.27856445]
[195.31355286 686.30841064]
[192.74241638 701.11840820]
[187.88603210 715.34381104]
[180.86398315 728.63433838]
[171.84921265 740.66259766]
[161.06367493 751.13250732]
[148.77301025 759.78619385]
[135.27987671 766.41052246]
[120.91656494 770.84240723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[47 163]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[55 155]
[56 154]
[57 152]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[66 139]
[67 138]
[68 137]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[76 127]
[77 126]
[78 125]
[81 122]
[82 121]
[83 120]
[85 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
