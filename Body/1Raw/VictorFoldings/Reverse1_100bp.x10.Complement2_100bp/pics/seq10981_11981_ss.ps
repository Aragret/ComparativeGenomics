%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[32.37059021 666.42602539]
[20.82156181 676.03063965]
[8.13911438 684.07946777]
[-5.46849728 690.44042969]
[-19.77782249 695.00891113]
[-34.55389023 697.71008301]
[-49.55406570 698.49945068]
[-64.53202820 697.36413574]
[-79.24182892 694.32275391]
[-93.44191742 689.42523193]
[-106.89911652 682.75195312]
[-119.39244843 674.41259766]
[-130.71675110 664.54406738]
[-140.68609619 653.30834961]
[-149.13674927 640.89001465]
[-155.92994690 627.49298096]
[-160.95416260 613.33721924]
[-164.12686157 598.65521240]
[-165.39596558 583.68798828]
[-164.74063110 568.68133545]
[-162.17161560 553.88171387]
[-157.73110962 539.53216553]
[-151.49201965 525.86828613]
[-143.55680847 513.11437988]
[-134.05578613 501.48004150]
[-123.14495087 491.15615845]
[-111.00347137 482.31237793]
[-97.83073425 475.09384155]
[-83.84303284 469.61911011]
[-69.27007294 465.97808838]
[-54.35113907 464.23056030]
[-39.33122635 464.40524292]
[-24.45696831 466.49923706]
[-20.48487282 452.03469849]
[-16.51277733 437.57019043]
[-17.77281952 430.28775024]
[-12.37236786 422.92071533]
[-8.18535709 408.51693726]
[-3.99834561 394.11315918]
[-5.36696815 390.86364746]
[-5.22966385 386.78982544]
[-3.21612930 382.60662842]
[0.71060926 379.16748047]
[5.53660679 364.96502686]
[10.36260414 350.76257324]
[15.18860245 336.56011963]
[20.01460075 322.35766602]
[14.95086384 311.37197876]
[18.85524750 299.50018311]
[30.15278244 293.27694702]
[35.18970108 279.14791870]
[40.22661591 265.01889038]
[45.26353073 250.88987732]
[50.30044937 236.76084900]
[55.02058411 222.52285767]
[59.42158127 208.18299866]
[63.71570206 193.81079102]
[67.90271759 179.40701294]
[66.75123596 172.10661316]
[72.26077271 164.82081604]
[76.66177368 150.48095703]
[81.06276703 136.14111328]
[85.46376801 121.80126953]
[89.86476898 107.46142578]
[93.94443512 93.02687073]
[97.70073700 78.50481415]
[101.45703125 63.98274994]
[105.21333313 49.46069336]
[99.35192871 37.97127151]
[102.77952576 25.95314789]
[113.13414001 19.69946671]
[117.10623932 5.23494291]
[121.07833862 -9.22958088]
[124.94264221 -23.72327423]
[128.69894409 -38.24533463]
[132.45524597 -52.76739120]
[136.21154785 -67.28945160]
[139.96784973 -81.81150818]
[143.72415161 -96.33357239]
[138.39343262 -113.95926666]
[151.17312622 -125.98616028]
[154.71279907 -140.56253052]
[158.14385986 -155.16485596]
[161.46612549 -169.79231262]
[153.30795288 -183.06190491]
[156.88557434 -197.84890747]
[169.58638000 -205.54469299]
[172.90864563 -220.17214966]
[176.23089600 -234.79962158]
[167.78858948 -245.29447937]
[166.94448853 -258.54205322]
[173.78311157 -269.69171143]
[185.61682129 -274.79003906]
[189.15649414 -289.36642456]
[192.69616699 -303.94281006]
[196.23583984 -318.51916504]
[199.77551270 -333.09555054]
[203.31518555 -347.67193604]
[189.66265869 -354.00396729]
[177.50796509 -362.87808228]
[167.31829834 -373.95312500]
[159.48532104 -386.80343628]
[154.31010437 -400.93508911]
[151.99157715 -415.80487061]
[152.61886597 -430.84127808]
[156.16783142 -445.46627808]
[162.50209045 -459.11776733]
[171.37815857 -471.27102661]
[182.45487976 -481.45889282]
[195.30645752 -489.28979492]
[209.43893433 -494.46273804]
[224.30911255 -496.77883911]
[239.34538269 -496.14913940]
[253.96981812 -492.59777832]
[267.62030029 -486.26132202]
[279.77212524 -477.38330078]
[289.95819092 -466.30493164]
[297.78701782 -453.45208740]
[302.95764160 -439.31875610]
[305.27136230 -424.44821167]
[304.63922119 -409.41204834]
[301.08551025 -394.78817749]
[294.74682617 -381.13873291]
[285.86682129 -368.98834229]
[274.78683472 -358.80404663]
[261.93270874 -350.97732544]
[247.79855347 -345.80895996]
[232.92762756 -343.49768066]
[217.89155579 -344.13226318]
[214.35188293 -329.55587769]
[210.81221008 -314.97949219]
[207.27253723 -300.40313721]
[203.73286438 -285.82675171]
[200.19319153 -271.25036621]
[209.54878235 -257.27496338]
[205.82878113 -240.52754211]
[190.85835266 -231.47735596]
[187.53610229 -216.84989929]
[184.21383667 -202.22244263]
[192.34423828 -189.79536438]
[189.18336487 -174.91371155]
[176.09358215 -166.47006226]
[172.77133179 -151.84260559]
[174.35528564 -144.62367249]
[169.28918457 -137.02285767]
[165.74951172 -122.44648743]
[171.77314758 -111.95638275]
[168.94348145 -99.78359222]
[158.24620056 -92.57727051]
[154.48989868 -78.05521393]
[150.73359680 -63.53314972]
[146.97729492 -49.01109314]
[143.22100830 -34.48903275]
[139.46470642 -19.96697426]
[140.83302307 -12.70409012]
[135.54286194 -5.25748444]
[131.57077026 9.20703888]
[127.59867096 23.67156410]
[132.94390869 40.38668823]
[119.73539734 53.21699142]
[115.97909546 67.73905182]
[112.22279358 82.26110840]
[108.46649170 96.78317261]
[109.93298340 100.34992981]
[109.82017517 104.54577637]
[107.88237762 108.65089417]
[104.20461273 111.86241913]
[99.80361176 126.20227051]
[95.40261841 140.54211426]
[91.00161743 154.88195801]
[86.60062408 169.22181702]
[82.30649567 183.59402466]
[78.11948395 197.99780273]
[78.72908020 207.11187744]
[73.76142883 212.58399963]
[69.36042786 226.92385864]
[70.53089142 232.01080322]
[69.71467590 236.58103943]
[67.44127655 239.96434021]
[64.42947388 241.79776001]
[59.39256287 255.92678833]
[54.35564423 270.05581665]
[49.31872940 284.18484497]
[44.28181458 298.31387329]
[48.01877975 316.34487915]
[34.21705627 327.18365479]
[29.39105797 341.38610840]
[24.56505966 355.58856201]
[19.73906326 369.79101562]
[14.91306496 383.99346924]
[10.40543652 398.30017090]
[6.21842527 412.70394897]
[2.03141403 427.10772705]
[-2.04825282 441.54226685]
[-6.02034903 456.00680542]
[-9.99244499 470.47134399]
[3.86519003 476.26739502]
[16.86784363 483.78799438]
[28.80200005 492.90960693]
[39.47169113 503.48251343]
[48.70170975 515.33300781]
[56.34048843 528.26660156]
[62.26259232 542.07086182]
[66.37078094 556.51910400]
[68.59758759 571.37402344]
[68.90644073 586.39178467]
[67.29228210 601.32574463]
[63.78161621 615.93066406]
[58.43207932 629.96667480]
[51.33152771 643.20343018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 196]
[34 195]
[35 194]
[37 193]
[38 192]
[39 191]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[50 184]
[51 183]
[52 182]
[53 181]
[54 180]
[55 176]
[56 175]
[57 173]
[58 172]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[65 163]
[66 162]
[67 161]
[68 160]
[71 158]
[72 157]
[73 156]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[81 146]
[82 145]
[83 143]
[84 142]
[87 139]
[88 138]
[89 137]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
