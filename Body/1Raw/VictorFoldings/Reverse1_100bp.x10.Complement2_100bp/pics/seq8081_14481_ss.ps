%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[-19.65678787 515.58020020]
[-20.04563332 530.88079834]
[-27.51059341 544.24243164]
[-40.33627319 552.59466553]
[-55.57542801 554.01831055]
[-69.72621155 548.18615723]
[-79.53687286 536.43841553]
[-82.75300598 521.47460938]
[-78.63555145 506.73336792]
[-68.13067627 495.60205078]
[-53.65232849 490.63858032]
[-51.42721176 475.80453491]
[-49.20209503 460.97048950]
[-46.97697830 446.13644409]
[-44.75186157 431.30239868]
[-42.52674484 416.46835327]
[-40.30162811 401.63430786]
[-38.07650757 386.80026245]
[-35.85139084 371.96621704]
[-44.74612045 384.04446411]
[-56.90116119 392.83392334]
[-71.15797424 397.49691772]
[-86.15769196 397.58892822]
[-100.47063446 393.10119629]
[-112.73258972 384.46148682]
[-121.77481842 372.49328613]
[-126.73547363 358.33728027]
[-127.14174652 343.34280396]
[-122.95490265 328.93896484]
[-114.57401276 316.49868774]
[-102.79788208 307.20767212]
[-88.74894714 301.95150757]
[-73.76625061 301.23114014]
[-59.27785873 305.11529541]
[-46.66470718 313.23367310]
[-37.12899780 324.81256104]
[-31.57962227 338.74829102]
[-30.54560280 353.71371460]
[-24.47176933 339.99844360]
[-18.39793587 326.28317261]
[-12.32410145 312.56793213]
[-6.25026798 298.85266113]
[-0.17643388 285.13739014]
[5.89739990 271.42211914]
[5.01459551 268.76150513]
[5.13249874 265.59091187]
[6.45063877 262.28973389]
[9.02764511 259.30249023]
[12.76273346 257.08819580]
[19.64214516 243.75877380]
[26.52155876 230.42933655]
[33.40097046 217.09991455]
[40.28038406 203.77047729]
[35.52102661 189.70335388]
[42.30784607 176.08741760]
[57.09501648 171.19073486]
[63.97443008 157.86131287]
[70.85384369 144.53189087]
[77.43386841 131.05215454]
[83.71122742 117.42883301]
[89.98858643 103.80551910]
[94.38958740 89.46566772]
[96.83531189 74.66639709]
[91.45165253 59.78934479]
[101.16057587 48.49394226]
[103.60630035 33.69467163]
[106.05203247 18.89540100]
[108.16665649 4.04520416]
[109.94911957 -10.84851265]
[111.73158264 -25.74222946]
[113.51405334 -40.63594818]
[106.17019653 -51.23927689]
[107.96143341 -63.60759354]
[117.38772583 -71.18859863]
[119.39173889 -86.05412292]
[112.20656586 -96.76561737]
[114.18175507 -109.10589600]
[123.71986389 -116.54571533]
[125.94498444 -131.37976074]
[118.92008972 -142.19703674]
[121.07878113 -154.50654602]
[130.72660828 -161.80352783]
[133.17233276 -176.60279846]
[135.61805725 -191.40206909]
[138.06379700 -206.20133972]
[140.50952148 -221.00061035]
[142.95524597 -235.79988098]
[128.56980896 -240.12281799]
[114.85531616 -246.24986267]
[102.03694916 -254.08042908]
[90.32520294 -263.48593140]
[79.91240692 -274.31192017]
[70.96953583 -286.38061523]
[63.64344025 -299.49383545]
[58.05442810 -313.43627930]
[54.29427338 -327.97894287]
[52.42472076 -342.88308716]
[52.47646713 -357.90393066]
[54.44866562 -372.79479980]
[58.30893326 -387.31124878]
[63.99387741 -401.21481323]
[71.41014862 -414.27725220]
[80.43595886 -426.28405762]
[90.92311096 -437.03802490]
[102.69937897 -446.36260986]
[115.57138824 -454.10467529]
[129.32778931 -460.13708496]
[143.74266052 -464.36080933]
[158.57931519 -466.70645142]
[173.59411621 -467.13549805]
[188.54049683 -465.64093018]
[203.17304993 -462.24728394]
[217.25148010 -457.01028442]
[230.54460144 -450.01589966]
[242.83413696 -441.37902832]
[253.91827393 -431.24148560]
[263.61502075 -419.76971436]
[271.76510620 -407.15209961]
[278.23474121 -393.59582520]
[282.91769409 -379.32351685]
[285.73699951 -364.56954956]
[286.64645386 -349.57617188]
[285.63104248 -334.58959961]
[282.70748901 -319.85592651]
[277.92379761 -305.61709595]
[271.35848999 -292.10690308]
[263.11938477 -279.54724121]
[253.34179688 -268.14428711]
[242.18627930 -258.08532715]
[229.83598328 -249.53555298]
[216.49375916 -242.63531494]
[202.37866211 -237.49797058]
[187.72248840 -234.20783997]
[172.76591492 -232.81896973]
[157.75451660 -233.35415649]
[155.30879211 -218.55488586]
[152.86306763 -203.75561523]
[150.41732788 -188.95634460]
[147.97160339 -174.15707397]
[145.52587891 -159.35780334]
[152.58106995 -143.28947449]
[140.77902222 -129.15464783]
[138.55390930 -114.32059479]
[145.84754944 -98.35909271]
[134.25726318 -84.05010986]
[132.25325012 -69.18458557]
[139.78372192 -53.33343506]
[128.40777588 -38.85348129]
[126.62530518 -23.95976448]
[124.84283447 -9.06604671]
[123.06037140 5.82767010]
[124.94050598 8.81052780]
[125.46926880 12.85224247]
[124.16474152 17.30774498]
[120.85130310 21.34112930]
[118.40557098 36.14039993]
[115.95984650 50.93967056]
[121.51844025 64.75817871]
[111.63459015 77.11212921]
[109.18885803 91.91139984]
[118.26242828 79.96692657]
[130.54698181 71.35939026]
[144.87164307 66.90920258]
[159.87106323 67.04052734]
[174.11561584 71.74084473]
[186.24757385 80.56215668]
[195.11061096 92.66366577]
[199.85995483 106.89193726]
[200.04293823 121.89082336]
[195.64210510 136.23072815]
[187.07691956 148.54484558]
[175.16377258 157.65950012]
[161.03813171 162.70591736]
[146.04637146 163.20312500]
[131.61741638 159.10371399]
[119.12653351 150.79841614]
[109.76427460 139.07885742]
[104.42299652 125.06205750]
[103.61190796 110.08287811]
[97.33454895 123.70619202]
[91.05718231 137.32951355]
[91.53753662 142.52723694]
[90.11804199 146.94744873]
[87.41301727 149.99668884]
[84.18327332 151.41130066]
[77.30385590 164.74072266]
[70.42444611 178.07015991]
[74.99970245 192.95991516]
[67.83311462 206.37985229]
[53.60981369 210.64988708]
[46.73040009 223.97932434]
[39.85098648 237.30874634]
[32.97157669 250.63818359]
[26.09216309 263.96762085]
[19.61266708 277.49594116]
[13.53883266 291.21121216]
[7.46499872 304.92648315]
[1.39116490 318.64175415]
[-4.68266916 332.35702515]
[-10.75650311 346.07229614]
[-16.83033752 359.78756714]
[-21.01734734 374.19134521]
[-23.24246597 389.02539062]
[-25.46758270 403.85943604]
[-27.69269943 418.69348145]
[-29.91781616 433.52749634]
[-32.14293289 448.36154175]
[-34.36804962 463.19558716]
[-36.59317017 478.02963257]
[-38.81828690 492.86367798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[38 201]
[39 200]
[40 199]
[41 198]
[42 197]
[43 196]
[44 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 190]
[56 187]
[57 186]
[58 185]
[59 181]
[60 180]
[61 179]
[62 160]
[63 159]
[65 157]
[66 156]
[67 155]
[68 151]
[69 150]
[70 149]
[71 148]
[74 146]
[75 145]
[78 143]
[79 142]
[82 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
