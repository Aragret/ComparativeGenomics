%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[71.57292938 746.06079102]
[58.50800705 753.88555908]
[43.38919067 755.71350098]
[28.83589935 751.22778320]
[17.36958313 741.20562744]
[10.97684765 727.38342285]
[10.76527500 712.15600586]
[16.77152061 698.16149902]
[27.95496559 687.82470703]
[42.37801361 682.93634033]
[43.71624756 667.99615479]
[45.05448151 653.05596924]
[46.39271545 638.11578369]
[39.82173920 624.74902344]
[48.75937653 611.69415283]
[50.09761047 596.75396729]
[51.43584442 581.81378174]
[52.77407837 566.87359619]
[43.05629730 555.64416504]
[44.20063019 540.47363281]
[56.04498672 530.35687256]
[57.38322067 515.41668701]
[58.72145462 500.47647095]
[60.05968857 485.53628540]
[61.39792252 470.59609985]
[48.13071060 463.74700928]
[38.47034073 452.30923462]
[33.91269684 438.00564575]
[35.18196106 423.00640869]
[42.11574936 409.59982300]
[53.68511963 399.84317017]
[68.14715576 395.24694824]
[69.48538971 380.30676270]
[70.82362366 365.36657715]
[72.16185760 350.42639160]
[73.50009155 335.48620605]
[71.53198242 332.56066895]
[70.88311768 328.53646851]
[72.05440521 324.04409790]
[75.24629211 319.91384888]
[77.25030518 305.04833984]
[79.25431824 290.18280029]
[81.25833130 275.31729126]
[83.26234436 260.45175171]
[85.26635742 245.58622742]
[87.27037048 230.72068787]
[88.49735260 215.77096558]
[88.94395447 200.77760315]
[81.58902740 187.82560730]
[89.73377991 174.26191711]
[90.18038177 159.26856995]
[90.62699127 144.27522278]
[87.68402863 137.49578857]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[83.75152588 99.39491272]
[92.93286133 85.35641479]
[93.37946320 70.36306763]
[86.05648041 56.33864212]
[94.16928864 43.84738159]
[94.61589050 28.85403061]
[95.06250000 13.86068058]
[87.73950958 -0.16374193]
[95.85231781 -12.65500355]
[96.18729401 -27.65126228]
[96.41062164 -42.64960098]
[96.63394928 -57.64793777]
[96.85727692 -72.64627075]
[84.43994904 -64.23141479]
[70.07418060 -68.54702759]
[64.34987640 -82.41181946]
[71.48678589 -95.60517120]
[86.22384644 -98.40143585]
[97.69675446 -88.74082184]
[99.03498840 -103.68099976]
[100.37322235 -118.62118530]
[101.71145630 -133.56137085]
[88.36691284 -138.96635437]
[77.09926605 -147.90351868]
[68.81658936 -159.64115906]
[64.18313599 -173.22235107]
[63.56612778 -187.54298401]
[67.00662231 -201.44148254]
[74.21694183 -213.79304504]
[84.60469055 -223.60064697]
[97.32141113 -230.07559204]
[111.33190918 -232.70085144]
[112.89243317 -247.61946106]
[114.45295715 -262.53805542]
[106.56660461 -279.17797852]
[117.42082977 -292.96755981]
[118.75906372 -307.90774536]
[120.09729767 -322.84793091]
[121.43553162 -337.78811646]
[122.77376556 -352.72830200]
[116.29850769 -367.16375732]
[125.14042664 -379.14996338]
[126.47866058 -394.09014893]
[112.41744995 -399.60913086]
[100.48152924 -408.86712646]
[91.63850403 -421.11364746]
[86.60522461 -435.35595703]
[85.78971863 -450.43942261]
[89.25811005 -465.14135742]
[96.72920990 -478.26992798]
[107.59738922 -488.76086426]
[120.98159790 -495.76367188]
[135.79684448 -498.71072388]
[150.84213257 -497.36306763]
[164.89779663 -491.82998657]
[176.82440186 -482.55999756]
[185.65512085 -470.30459595]
[190.67408752 -456.05725098]
[191.47444153 -440.97296143]
[187.99128723 -426.27450562]
[180.50700378 -413.15344238]
[169.62829590 -402.67346191]
[156.23704529 -395.68408203]
[141.41885376 -392.75192261]
[140.08061218 -377.81173706]
[146.65158081 -364.44494629]
[137.71394348 -351.39007568]
[136.37571716 -336.44989014]
[135.03747559 -321.50970459]
[133.69924927 -306.56951904]
[132.36100769 -291.62933350]
[139.87411499 -282.14883423]
[138.88148499 -269.69097900]
[129.37155151 -260.97753906]
[127.81103516 -246.05892944]
[126.25051117 -231.14033508]
[140.62860107 -224.92770386]
[152.39770508 -214.56315613]
[160.39782715 -201.05229187]
[163.83547974 -185.71153259]
[162.36244202 -170.03997803]
[156.11094666 -155.57283020]
[145.68193054 -143.73103333]
[132.08728027 -135.68170166]
[116.65164185 -132.22314453]
[115.31340790 -117.28295135]
[113.97517395 -102.34276581]
[112.63694000 -87.40258789]
[111.85561371 -72.42294312]
[111.63228607 -57.42461014]
[111.40895844 -42.42627335]
[111.18563080 -27.42793465]
[114.22920227 -20.69306183]
[110.84567261 -12.20839691]
[118.20059967 0.74360055]
[110.05584717 14.30728626]
[109.60924530 29.30063629]
[109.16263580 44.29398727]
[116.51757050 57.24598312]
[108.37281799 70.80966949]
[107.92620850 85.80301666]
[115.38739014 94.74573517]
[114.95397186 106.38417816]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[105.62033844 144.72183228]
[105.17372894 159.71517944]
[104.72712708 174.70852661]
[112.05011749 188.73295593]
[103.93730927 201.22421265]
[103.49069977 216.21755981]
[114.34802246 205.86775208]
[129.30944824 204.79281616]
[141.53483582 213.48419189]
[145.43489075 227.96830750]
[139.22654724 241.62321472]
[125.74820709 248.20608521]
[111.16195679 244.70730591]
[102.13590240 232.72470093]
[100.13188934 247.59024048]
[98.12787628 262.45574951]
[96.12386322 277.32128906]
[94.11985016 292.18682861]
[92.11583710 307.05233765]
[90.11182404 321.91787720]
[88.44027710 336.82446289]
[87.10204315 351.76464844]
[85.76380920 366.70483398]
[84.42557526 381.64498901]
[83.08734131 396.58517456]
[96.50232697 403.67840576]
[106.15357208 415.33587646]
[110.59436798 429.76132202]
[109.17777252 444.74734497]
[102.15065002 458.01324463]
[90.61134338 467.55209351]
[76.33811188 471.93435669]
[74.99987793 486.87454224]
[73.66163635 501.81472778]
[72.32340240 516.75488281]
[70.98516846 531.69506836]
[80.84303284 543.75579834]
[79.27304077 558.88818359]
[67.71426392 568.21185303]
[66.37602997 583.15203857]
[65.03779602 598.09222412]
[63.69956207 613.03240967]
[70.17481995 627.46783447]
[61.33290100 639.45404053]
[59.99466705 654.39422607]
[58.65643311 669.33441162]
[57.31819916 684.27459717]
[70.64289856 691.64837646]
[79.81125641 703.80816650]
[83.23479462 718.64727783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 207]
[11 206]
[12 205]
[13 204]
[15 202]
[16 201]
[17 200]
[18 199]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 175]
[46 174]
[47 166]
[48 165]
[50 163]
[51 162]
[52 161]
[54 160]
[55 159]
[57 156]
[58 155]
[60 153]
[61 152]
[62 151]
[64 149]
[65 147]
[66 146]
[67 145]
[68 144]
[74 143]
[75 142]
[76 141]
[77 140]
[87 131]
[88 130]
[89 129]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
