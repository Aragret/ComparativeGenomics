%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[86.74193573 555.09063721]
[72.47134399 559.74432373]
[57.84105682 563.10003662]
[42.96885681 565.13073730]
[27.97449112 565.82019043]
[12.97869205 565.16271973]
[-1.89780307 563.16369629]
[-16.53521347 559.83917236]
[-30.81568909 555.21594238]
[-44.62424469 549.33123779]
[-57.84970093 542.23236084]
[-70.38557434 533.97656250]
[-82.13092804 524.63031006]
[-92.99120331 514.26879883]
[-102.87894440 502.97549438]
[-111.71454620 490.84130859]
[-119.42686462 477.96395874]
[-125.95381165 464.44711304]
[-131.24282837 450.39959717]
[-135.25132751 435.93450928]
[-137.94703674 421.16836548]
[-139.30825806 406.22000122]
[-139.32403564 391.20980835]
[-137.99421692 376.25863647]
[-135.32952881 361.48684692]
[-131.35142517 347.01339722]
[-126.09193420 332.95480347]
[-119.59339905 319.42425537]
[-111.90814972 306.53073120]
[-103.09806061 294.37802124]
[-93.23406219 283.06396484]
[-82.39558411 272.67965698]
[-70.66989136 263.30874634]
[-58.15139008 255.02662659]
[-44.94087219 247.90000916]
[-31.14471054 241.98629761]
[-16.87398148 237.33306885]
[-2.24358630 233.97779846]
[12.62867641 231.94750977]
[27.62306023 231.25856018]
[42.61883926 231.91647339]
[57.49527359 233.91596985]
[60.81753159 219.28849792]
[64.13979340 204.66104126]
[67.46205139 190.03358459]
[70.78430939 175.40612793]
[74.10657501 160.77865601]
[60.21665573 166.44172668]
[47.05492783 159.24665833]
[44.32372665 144.49740601]
[54.03638840 133.06655884]
[69.03310394 133.38052368]
[78.25849152 145.20622253]
[82.65948486 130.86637878]
[78.99688721 116.42911530]
[90.44263458 105.50641632]
[76.16999817 110.12070465]
[63.57986832 101.96664429]
[61.95322800 87.05510712]
[72.48917389 76.37831879]
[87.42099762 77.80680847]
[95.74127960 90.28591919]
[101.19664001 76.31312561]
[106.65199280 62.34032822]
[112.10735321 48.36752701]
[100.63187408 40.37785721]
[91.23650360 30.03237724]
[84.39350128 17.85633087]
[80.44567871 4.46684456]
[79.58921051 -9.45835209]
[81.86388397 -23.21522903]
[87.15126801 -36.10904694]
[95.18088531 -47.48945236]
[105.54402924 -56.78327179]
[117.71458435 -63.52338409]
[131.07571411 -67.37218475]
[144.95115662 -68.13851929]
[158.63940430 -65.78715515]
[164.50837708 -79.59133911]
[170.37733459 -93.39551544]
[176.24629211 -107.19969177]
[181.59747314 -121.21271515]
[186.42347717 -135.41516113]
[191.24948120 -149.61763000]
[196.07546997 -163.82008362]
[184.12730408 -171.95529175]
[174.70321655 -182.89952087]
[168.44221497 -195.90101624]
[165.76634216 -210.06890869]
[166.85221863 -224.43415833]
[171.61940002 -238.01589966]
[179.73628235 -249.88844299]
[190.64318848 -259.24426270]
[203.59095764 -265.44900513]
[217.69235229 -268.08447266]
[231.98291016 -266.97683716]
[237.01982117 -281.10586548]
[242.05674744 -295.23489380]
[247.09365845 -309.36392212]
[252.13056946 -323.49295044]
[239.09046936 -330.98928833]
[227.59857178 -340.69375610]
[218.02432251 -352.29431152]
[210.67547607 -365.41812134]
[205.78826904 -379.64328003]
[203.51982117 -394.51251221]
[203.94305420 -409.54782104]
[207.04432678 -424.26589966]
[212.72399902 -438.19360352]
[220.79943848 -450.88323975]
[231.01109314 -461.92687988]
[243.03068542 -470.96951294]
[256.47183228 -477.72045898]
[270.90246582 -481.96270752]
[285.85870361 -483.55984497]
[300.85977173 -482.46060181]
[315.42340088 -478.70025635]
[329.08148193 -472.39971924]
[341.39492798 -463.76150513]
[351.96795654 -453.06332397]
[360.46063232 -440.64907837]
[366.60000610 -426.91778564]
[370.18869019 -412.31091309]
[371.11129761 -397.29794312]
[369.33825684 -382.36154175]
[364.92648315 -367.98184204]
[358.01782227 -354.62106323]
[348.83435059 -342.70874023]
[337.67129517 -332.62774658]
[324.88751221 -324.70220947]
[310.89392090 -319.18685913]
[296.14035034 -316.25900269]
[281.10110474 -316.01275635]
[266.25961304 -318.45602417]
[261.22268677 -304.32699585]
[256.18576050 -290.19796753]
[251.14884949 -276.06893921]
[246.11193848 -261.93991089]
[258.81332397 -252.88896179]
[268.46228027 -240.61720276]
[274.27203369 -226.11207581]
[275.76513672 -210.54364014]
[272.81268311 -195.17016602]
[265.64541626 -181.23654175]
[254.83575439 -169.87336731]
[241.25196838 -162.00527954]
[225.98852539 -158.27565002]
[210.27792358 -158.99407959]
[205.45193481 -144.79162598]
[200.62593079 -130.58917236]
[195.79992676 -116.38671112]
[210.20362854 -120.57401276]
[222.54541016 -112.04871368]
[223.72735596 -97.09535217]
[212.87818909 -86.73699188]
[197.99551392 -88.60942841]
[190.05047607 -101.33072662]
[184.18150330 -87.52655029]
[178.31254578 -73.72237396]
[172.44358826 -59.91819763]
[185.22047424 -50.17253494]
[195.05838013 -37.45297623]
[201.28735352 -22.61665344]
[203.48091125 -6.66515160]
[201.48515320 9.32311344]
[195.42961121 24.26580048]
[185.71882629 37.14990997]
[173.00535583 47.10046387]
[158.14588928 53.43991089]
[142.14353943 55.73428726]
[126.08014679 53.82288742]
[120.62479401 67.79568481]
[115.16943359 81.76847839]
[109.71408081 95.74127960]
[104.78248596 109.90741730]
[108.13029480 125.37036133]
[96.99933624 135.26737976]
[92.59833527 149.60722351]
[88.73403168 164.10092163]
[85.41177368 178.72837830]
[82.08951569 193.35583496]
[78.76725006 207.98330688]
[75.44499207 222.61076355]
[72.12273407 237.23822021]
[86.40335083 241.86102295]
[100.21208191 247.74533081]
[113.43775940 254.84376526]
[125.97388458 263.09918213]
[137.71952820 272.44509888]
[148.58010864 282.80627441]
[158.46820068 294.09927368]
[167.30416870 306.23318481]
[175.01689148 319.11029053]
[181.54425049 332.62695312]
[186.83369446 346.67431641]
[190.84263611 361.13925171]
[193.53880310 375.90533447]
[194.90046692 390.85363770]
[194.91670227 405.86383057]
[193.58734131 420.81506348]
[190.92311096 435.58691406]
[186.94544983 450.06048584]
[181.68638611 464.11926270]
[175.18826294 477.64999390]
[167.50340271 490.54376221]
[158.69367981 502.69674683]
[148.83003235 514.01110840]
[137.99186707 524.39569092]
[126.26646423 533.76702881]
[113.74821472 542.04949951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[53 178]
[54 177]
[56 175]
[62 174]
[63 173]
[64 172]
[65 171]
[78 160]
[79 159]
[80 158]
[81 157]
[82 151]
[83 150]
[84 149]
[85 148]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
