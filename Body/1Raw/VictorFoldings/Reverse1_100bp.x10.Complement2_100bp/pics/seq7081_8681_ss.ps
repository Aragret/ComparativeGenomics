%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[155.11302185 632.51690674]
[142.86595154 623.84887695]
[131.13861084 614.48962402]
[119.96995544 604.47033691]
[109.39707947 593.82421875]
[99.45511627 582.58660889]
[90.17708588 570.79492188]
[81.59381104 558.48828125]
[73.73380280 545.70764160]
[66.62317657 532.49530029]
[60.28554153 518.89532471]
[54.74196243 504.95275879]
[50.01084900 490.71401978]
[46.10792160 476.22634888]
[43.04614258 461.53787231]
[40.83568192 446.69738770]
[39.48388290 431.75421143]
[38.99523926 416.75799561]
[39.37136841 401.75851440]
[40.61102676 386.80563354]
[42.71009445 371.94897461]
[45.66159821 357.23794556]
[49.45573425 342.72140503]
[54.07989883 328.44757080]
[59.51872635 314.46383667]
[65.75415039 300.81665039]
[72.76546478 287.55139160]
[80.52937317 274.71209717]
[89.02008820 262.34143066]
[98.20939636 250.48046875]
[108.06678009 239.16862488]
[118.55948639 228.44348145]
[129.65266418 218.34065247]
[141.30946350 208.89370728]
[153.49116516 200.13403320]
[145.44998169 187.47151184]
[137.40881348 174.80897522]
[125.67507935 171.86857605]
[118.87221527 161.38502502]
[121.10466003 148.68151855]
[113.25290680 135.90068054]
[105.40115356 123.11983490]
[97.54940033 110.33898926]
[88.85957336 98.11250305]
[79.37067413 86.49523926]
[69.88177490 74.87797546]
[60.39287949 63.26071548]
[50.90398026 51.64345169]
[41.41508102 40.02618790]
[37.30261612 38.63277054]
[34.16321564 36.24348831]
[32.19045639 33.28652573]
[31.41897774 30.20895767]
[31.73208618 27.42326164]
[22.95148277 15.26180553]
[14.17087936 3.10034919]
[5.39027643 -9.06110668]
[-3.39032674 -21.22256279]
[-16.50347328 -13.90396118]
[-30.37760544 -8.15722370]
[-44.82508850 -4.06006765]
[-59.65054321 -1.66790247]
[-74.65346527 -1.01307940]
[-89.63096619 -2.10445428]
[-104.38047791 -4.92726707]
[-118.70254517 -9.44334316]
[-132.40347290 -15.59160709]
[-145.29797363 -23.28891182]
[-157.21165466 -32.43115997]
[-167.98339844 -42.89471054]
[-177.46754456 -54.53805542]
[-185.53582764 -67.20373535]
[-192.07911682 -80.72046661]
[-197.00892639 -94.90543365]
[-200.25859070 -109.56681824]
[-201.78417969 -124.50633240]
[-201.56503296 -139.52194214]
[-199.60412598 -154.41058350]
[-195.92796326 -168.97088623]
[-190.58628845 -183.00595093]
[-183.65133667 -196.32595825]
[-175.21687317 -208.75079346]
[-165.39698792 -220.11241150]
[-154.32446289 -230.25714111]
[-142.14904785 -239.04782104]
[-129.03541565 -246.36555481]
[-115.16090393 -252.11135864]
[-100.71314240 -256.20755005]
[-85.88753510 -258.59872437]
[-70.88456726 -259.25256348]
[-55.90713882 -258.16018677]
[-41.15781021 -255.33638000]
[-26.83604813 -250.81935120]
[-13.13553143 -244.67016602]
[-0.24154940 -236.97200012]
[11.67152309 -227.82896423]
[22.44257545 -217.36468506]
[31.92594337 -205.72070312]
[39.99337006 -193.05448914]
[46.53575897 -179.53732300]
[51.46462631 -165.35202026]
[54.71331787 -150.69042969]
[56.23789978 -135.75080872]
[56.01774979 -120.73521423]
[54.05585098 -105.84671021]
[50.37872696 -91.28665161]
[45.03611755 -77.25194550]
[38.10026550 -63.93239212]
[29.66497803 -51.50812531]
[19.84432793 -40.14716721]
[8.77112865 -30.00316620]
[17.55173302 -17.84170914]
[26.33233643 -5.68025398]
[35.11293793 6.48120165]
[43.89354324 18.64265823]
[53.03234482 30.53729057]
[62.52124405 42.15455246]
[72.01013947 53.77181625]
[81.49903870 65.38908386]
[90.98793793 77.00634766]
[100.47683716 88.62360382]
[100.25539398 73.62524414]
[108.08723450 60.83218765]
[121.54557800 54.20850754]
[136.46020508 55.80662537]
[148.20965576 65.13134766]
[153.15322876 79.29329681]
[149.75912476 93.90425873]
[139.07902527 104.43685150]
[124.42228699 107.62744141]
[110.33023834 102.48723602]
[118.18199158 115.26808167]
[126.03375244 128.04891968]
[133.88551331 140.82975769]
[150.27711487 149.22003174]
[150.07133484 166.76780701]
[158.11251831 179.43032837]
[166.15368652 192.09286499]
[179.26205444 184.79241943]
[192.76924133 178.25929260]
[206.63037109 172.51519775]
[220.79942322 167.57922363]
[235.22929382 163.46775818]
[249.87208557 160.19444275]
[264.67913818 157.77017212]
[279.60125732 156.20300293]
[294.58886719 155.49812317]
[309.59222412 155.65788269]
[324.56143188 156.68174744]
[339.44680786 158.56632996]
[354.19885254 161.30535889]
[368.76861572 164.88972473]
[383.10769653 169.30754089]
[397.16839600 174.54412842]
[410.90408325 180.58207703]
[424.26910400 187.40133667]
[437.21902466 194.97926331]
[449.71087646 203.29067993]
[461.70312500 212.30796814]
[473.15594482 222.00117493]
[484.03131104 232.33810425]
[494.29309082 243.28442383]
[503.90716553 254.80377197]
[512.84161377 266.85784912]
[521.06677246 279.40664673]
[528.55529785 292.40847778]
[535.28234863 305.82015991]
[541.22552490 319.59710693]
[546.36511230 333.69357300]
[550.68408203 348.06271362]
[554.16796875 362.65682983]
[556.80529785 377.42739868]
[558.58728027 392.32540894]
[559.50805664 407.30133057]
[559.56445312 422.30538940]
[558.75634766 437.28781128]
[557.08636475 452.19879150]
[554.56018066 466.98876953]
[551.18609619 481.60867310]
[546.97528076 496.00988770]
[541.94183350 510.14459229]
[536.10235596 523.96582031]
[529.47637939 537.42767334]
[522.08575439 550.48547363]
[513.95520020 563.09570312]
[505.11160278 575.21667480]
[495.58441162 586.80792236]
[485.40521240 597.83111572]
[474.60787964 608.24951172]
[463.22824097 618.02856445]
[451.30410767 627.13574219]
[438.87509155 635.54083252]
[425.98251343 643.21588135]
[412.66915894 650.13543701]
[398.97924805 656.27648926]
[384.95828247 661.61859131]
[370.65286255 666.14410400]
[356.11044312 669.83789062]
[341.37939453 672.68774414]
[326.50860596 674.68420410]
[311.54751587 675.82055664]
[296.54580688 676.09313965]
[281.55331421 675.50097656]
[266.61981201 674.04602051]
[251.79496765 671.73309326]
[237.12799072 668.57000732]
[222.66760254 664.56713867]
[208.46185303 659.73779297]
[194.55792236 654.09808350]
[181.00199890 647.66668701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 138]
[36 137]
[37 136]
[40 134]
[41 133]
[42 132]
[43 131]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[49 116]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
