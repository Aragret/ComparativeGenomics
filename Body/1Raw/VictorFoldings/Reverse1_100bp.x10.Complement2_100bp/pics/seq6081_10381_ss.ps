%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[128.33493042 638.45495605]
[113.27630615 640.35284424]
[98.54989624 636.67901611]
[86.14733887 627.93023682]
[77.74597931 615.28973389]
[74.48203278 600.46710205]
[76.79691315 585.46691895]
[84.37756348 572.31781006]
[96.19875336 562.79815674]
[110.66176605 558.19537354]
[111.55458069 543.22198486]
[112.44740295 528.24859619]
[113.34021759 513.27514648]
[114.23303223 498.30175781]
[115.12584686 483.32833862]
[116.01866150 468.35494995]
[115.79533386 453.35659790]
[114.45709991 438.41641235]
[113.11886597 423.47622681]
[111.78063202 408.53604126]
[110.44239807 393.59585571]
[109.10416412 378.65567017]
[107.76593018 363.71548462]
[94.01806641 361.74234009]
[81.05109406 356.74505615]
[69.52165985 348.97299194]
[60.01445007 338.81597900]
[53.01253891 326.78506470]
[48.87285614 313.48651123]
[47.80797195 299.59146118]
[49.87521362 285.80187988]
[54.97355652 272.81527710]
[62.84858322 261.28933716]
[73.10516357 251.80854797]
[85.22727966 244.85467529]
[98.60400391 240.78224182]
[90.12287903 228.53807068]
[97.02506256 214.30183411]
[96.13224792 199.32843018]
[95.23943329 184.35502625]
[92.32536316 180.57121277]
[91.75733185 174.91662598]
[94.54969788 168.92378235]
[86.43688965 156.43251038]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[83.99523163 74.46152496]
[91.35015869 61.50952911]
[90.90355682 46.51618195]
[90.45694733 31.52283096]
[90.01034546 16.52947998]
[81.86559296 2.96579432]
[89.22052002 -9.98620319]
[88.77391815 -24.97955322]
[86.36177826 -28.59003258]
[85.32798767 -32.39736557]
[85.56517792 -35.94407654]
[86.82843018 -38.85453796]
[88.77391815 -40.87276459]
[89.22052002 -55.86611557]
[78.66226959 -67.31867218]
[79.32878113 -82.51770020]
[90.31211090 -92.51280212]
[90.75872040 -107.50614929]
[82.49816895 -117.41201019]
[83.17881775 -129.89080811]
[91.89117432 -138.28256226]
[92.56095886 -153.26759338]
[93.23074341 -168.25263977]
[93.90052795 -183.23767090]
[94.57031250 -198.22271729]
[79.70272827 -200.29380798]
[65.09442139 -203.74804688]
[50.87376404 -208.55506897]
[37.16573715 -214.67262268]
[24.09080696 -222.04695129]
[11.76388073 -230.61323547]
[0.29328915 -240.29620361]
[-10.22016144 -251.01077271]
[-19.68407631 -262.66275024]
[-28.01528358 -275.14978027]
[-35.14056778 -288.36206055]
[-40.99730682 -302.18353271]
[-45.53403854 -316.49270630]
[-48.71088409 -331.16384888]
[-50.49992752 -346.06799316]
[-50.88544846 -361.07418823]
[-49.86405945 -376.05053711]
[-47.44473267 -390.86544800]
[-43.64873505 -405.38870239]
[-38.50941849 -419.49267578]
[-32.07195663 -433.05340576]
[-24.39291954 -445.95175171]
[-15.53979301 -458.07431030]
[-5.59038019 -469.31457520]
[5.36788082 -479.57376099]
[17.23868561 -488.76171875]
[29.91771317 -496.79766846]
[43.29353714 -503.61105347]
[57.24860382 -509.14190674]
[71.66027832 -513.34167480]
[86.40190125 -516.17346191]
[101.34391785 -517.61236572]
[116.35502625 -517.64575195]
[131.30329895 -516.27331543]
[146.05737305 -513.50708008]
[160.48756409 -509.37139893]
[174.46708679 -503.90261841]
[187.87306213 -497.14877319]
[200.58769226 -489.16925049]
[212.49922180 -480.03417969]
[223.50297546 -469.82379150]
[233.50227356 -458.62786865]
[242.40919495 -446.54476929]
[250.14549255 -433.68072510]
[256.64318848 -420.14874268]
[261.84515381 -406.06774902]
[265.70565796 -391.56152344]
[268.19082642 -376.75750732]
[269.27877808 -361.78585815]
[268.95999146 -346.77807617]
[267.23721313 -331.86611938]
[264.12561035 -317.18103027]
[259.65255737 -302.85180664]
[253.85729980 -289.00445557]
[246.79083252 -275.76058960]
[238.51521301 -263.23666382]
[229.10319519 -251.54273987]
[218.63748169 -240.78153992]
[207.21005249 -231.04766846]
[194.92132568 -222.42666626]
[181.87930298 -214.99427795]
[168.19860840 -208.81585693]
[153.99946594 -203.94566345]
[139.40664673 -200.42651367]
[124.54842377 -198.28935242]
[109.55535126 -197.55293274]
[108.88556671 -182.56788635]
[108.21578217 -167.58285522]
[107.54599762 -152.59780884]
[106.87621307 -137.61277771]
[115.79082489 -122.49667358]
[105.75206757 -107.05954742]
[105.30546570 -92.06619263]
[115.67440796 -81.43508148]
[115.43506622 -66.22332764]
[104.21387482 -55.41950989]
[103.76726532 -40.42615891]
[103.76726532 -25.42615891]
[104.21387482 -10.43280888]
[112.32668304 2.05845189]
[105.00369263 16.08287430]
[105.45030212 31.07622337]
[105.89690399 46.06957245]
[106.34351349 61.06292343]
[114.45632172 73.55418396]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[116.89797974 155.52517700]
[109.54305267 168.47717285]
[110.21283722 183.46220398]
[111.10565186 198.43560791]
[111.99846649 213.40902710]
[120.54344940 226.72419739]
[113.57740784 239.88943481]
[129.44993591 243.01181030]
[143.97065735 250.11727905]
[156.15965271 260.72015381]
[165.19592285 274.09890747]
[170.47271729 289.34539795]
[171.63829041 305.42626953]
[168.61927795 321.25326538]
[161.62539673 335.75662231]
[151.13475037 347.95758057]
[137.86128235 357.03430176]
[122.70611572 362.37725830]
[124.04434967 377.31744385]
[125.38258362 392.25762939]
[126.72081757 407.19781494]
[128.05905151 422.13800049]
[129.39729309 437.07818604]
[130.73551941 452.01837158]
[138.46905518 439.16564941]
[151.54469299 431.81530762]
[166.54450989 431.88870239]
[179.54759216 439.36666870]
[187.15495300 452.29449463]
[187.37805176 467.29281616]
[180.15858459 480.44116211]
[167.38366699 488.30258179]
[152.39266968 488.82211304]
[139.10418701 481.86392212]
[130.99206543 469.24777222]
[130.09925842 484.22116089]
[129.20643616 499.19458008]
[128.31361389 514.16796875]
[127.42080688 529.14135742]
[126.52799225 544.11480713]
[125.63516998 559.08819580]
[139.44876099 565.37701416]
[150.05496216 576.23394775]
[156.01937866 590.19067383]
[156.53536987 605.35968018]
[151.53315735 619.68945312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 205]
[11 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 188]
[18 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[36 171]
[38 169]
[39 168]
[40 167]
[43 166]
[45 164]
[46 163]
[47 162]
[49 160]
[51 158]
[52 157]
[53 156]
[54 155]
[56 153]
[57 152]
[62 151]
[63 150]
[66 147]
[67 146]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
