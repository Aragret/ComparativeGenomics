%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[129.41476440 673.73474121]
[116.06137848 666.83636475]
[103.91757965 657.98034668]
[93.26804352 647.37432861]
[84.36241150 635.26690674]
[77.40943146 621.94189453]
[72.57211304 607.71160889]
[69.96382904 592.90966797]
[69.64572906 577.88305664]
[71.62527466 562.98400879]
[75.85606384 548.56176758]
[82.23890686 534.95440674]
[90.62419128 522.48095703]
[100.81535339 511.43374634]
[112.57350159 502.07177734]
[125.62299347 494.61447144]
[139.65794373 489.23669434]
[154.34934998 486.06448364]
[153.45654297 471.09106445]
[152.56372070 456.11767578]
[143.72738647 447.85656738]
[142.86102295 435.38928223]
[150.97317505 425.36154175]
[150.30339050 410.37649536]
[149.63360596 395.39144897]
[139.40594482 381.13095093]
[148.02745056 364.85977173]
[147.13462830 349.88635254]
[146.24180603 334.91296387]
[145.34899902 319.93954468]
[144.45617676 304.96615601]
[143.56336975 289.99273682]
[141.44874573 275.14254761]
[138.12648010 260.51507568]
[134.80422974 245.88761902]
[131.48196411 231.26016235]
[128.15969849 216.63270569]
[124.83744049 202.00523376]
[121.29776764 187.42886353]
[117.54147339 172.90679932]
[113.78517151 158.38475037]
[109.17115784 144.11201477]
[103.71580505 130.13922119]
[98.26044464 116.16641998]
[87.89512634 110.85591888]
[83.74028015 99.97573090]
[87.92758179 89.10799408]
[82.68086243 75.05551910]
[77.43414307 61.00305176]
[72.18743134 46.95058060]
[68.16003418 43.62985992]
[66.02284241 39.50848770]
[65.76430511 35.44053650]
[67.03557587 32.15173721]
[62.42156219 17.87900162]
[50.81446075 7.12792158]
[54.26170731 -7.36227417]
[49.64769745 -21.63500786]
[45.03368759 -35.90774155]
[30.43135071 -40.81466675]
[21.62129593 -53.23386002]
[21.81118584 -68.28138733]
[30.71863365 -80.18917084]
[26.10462570 -94.46190643]
[21.49061584 -108.73463440]
[16.87660599 -123.00737000]
[12.26259708 -137.28010559]
[7.64858818 -151.55284119]
[-4.96951866 -156.26431274]
[-12.46086597 -167.22286987]
[-12.27552223 -180.30139160]
[-4.70518732 -190.72825623]
[-9.10618591 -205.06811523]
[-11.71902084 -190.29742432]
[-18.33574677 -176.83566284]
[-28.43454361 -165.74449158]
[-41.21897507 -157.89857483]
[-55.68081284 -153.91670227]
[-70.67952728 -154.11288452]
[-85.03226471 -158.47166443]
[-97.60710907 -166.64927673]
[-107.41234589 -178.00080872]
[-113.67470551 -191.63102722]
[-115.90030670 -206.46499634]
[-113.91362762 -221.33285522]
[-107.87134552 -235.06205750]
[-98.24998474 -246.56985474]
[-85.80831909 -254.94869995]
[-71.52755737 -259.53781128]
[-56.53393936 -259.97525024]
[-42.00991821 -256.22653198]
[-29.10092545 -248.58729553]
[-18.82501411 -237.66000366]
[-11.99145603 -224.30314636]
[-11.99145603 -239.30314636]
[-11.99145603 -254.30314636]
[-11.99145603 -269.30316162]
[-26.24412537 -274.46426392]
[-37.87005615 -284.19122314]
[-45.46535873 -297.30941772]
[-48.11286163 -312.23480225]
[-45.49286652 -327.16500854]
[-37.92175293 -340.29718018]
[-26.31376839 -350.04553223]
[-12.07063484 -355.23294067]
[3.08772326 -355.23294067]
[17.33085823 -350.04553223]
[28.93884277 -340.29718018]
[36.50995636 -327.16500854]
[39.12994766 -312.23480225]
[36.48244476 -297.30941772]
[28.88714409 -284.19122314]
[17.26121521 -274.46426392]
[3.00854445 -269.30316162]
[3.00854445 -254.30314636]
[3.00854445 -239.30314636]
[3.00854445 -224.30314636]
[5.23366165 -209.46911621]
[9.63465977 -195.12925720]
[24.81549835 -187.89179993]
[30.17023087 -171.59327698]
[21.92132187 -156.16683960]
[26.53533173 -141.89411926]
[31.14933968 -127.62137604]
[35.76334763 -113.34864807]
[40.37735748 -99.07591248]
[44.99136734 -84.80317688]
[59.18370819 -80.36296082]
[68.14608765 -68.27413177]
[68.27307892 -53.04793167]
[59.30641937 -40.52175140]
[63.92042923 -26.24901581]
[68.53443909 -11.97628307]
[79.81151581 -2.24608421]
[76.69429779 13.26499271]
[81.30830383 27.53772545]
[86.23989868 41.70386124]
[91.48661804 55.75633240]
[96.73333740 69.80880737]
[101.98005676 83.86127472]
[115.18987274 94.19940948]
[112.23324585 110.71105957]
[117.68859863 124.68386078]
[123.14395905 138.65666199]
[128.23637390 124.54753113]
[140.58424377 116.03107452]
[155.58212280 116.28369904]
[167.63615417 125.21118927]
[172.25050354 139.48381042]
[167.70413208 153.77822876]
[155.69270325 162.76298523]
[140.69619751 163.08697510]
[128.30723572 154.62844849]
[132.06353760 169.15049744]
[135.81982422 183.67256165]
[140.17401123 188.64776611]
[141.20695496 194.23614502]
[139.46490479 198.68298340]
[142.78717041 213.31044006]
[146.10942078 227.93789673]
[149.43168640 242.56535339]
[152.75393677 257.19281006]
[156.07620239 271.82028198]
[161.58030701 257.86660767]
[172.87803650 247.99943542]
[187.44544983 244.42309570]
[202.02816772 247.93656921]
[213.36836243 257.75491333]
[218.93260193 271.68472290]
[217.47781372 286.61401367]
[209.32902527 299.20755005]
[196.30667114 306.65188599]
[181.31999207 307.28399658]
[167.71705627 300.96258545]
[158.53677368 289.09991455]
[159.42958069 304.07333374]
[160.32240295 319.04672241]
[161.21522522 334.02014160]
[162.10803223 348.99353027]
[163.00085449 363.96694946]
[172.11221313 373.09634399]
[172.54759216 385.58609009]
[164.61865234 394.72167969]
[165.28843689 409.70669556]
[165.95822144 424.69174194]
[176.22569275 439.97769165]
[167.53712463 455.22485352]
[168.42994690 470.19824219]
[169.32275391 485.17166138]
[184.28703308 486.57562256]
[198.86158752 490.24749756]
[212.70477295 496.10125732]
[225.49209595 503.99966431]
[236.92379761 513.75756836]
[246.73191833 525.14624023]
[254.68650818 537.89868164]
[260.60113525 551.71594238]
[264.33712769 566.27423096]
[265.80688477 581.23217773]
[264.97604370 596.23919678]
[261.86398315 610.94342041]
[256.54370117 625.00030518]
[249.13990784 638.08020020]
[239.82614136 649.87658691]
[228.82075500 660.11285400]
[216.38172913 668.54919434]
[202.80062866 674.98767090]
[188.39584351 679.27746582]
[173.50502014 681.31799316]
[158.47721863 681.06140137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 189]
[19 188]
[20 187]
[23 185]
[24 184]
[25 183]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 163]
[34 162]
[35 161]
[36 160]
[37 159]
[38 158]
[39 155]
[40 154]
[41 153]
[42 144]
[43 143]
[44 142]
[47 140]
[48 139]
[49 138]
[50 137]
[54 136]
[55 135]
[57 133]
[58 132]
[59 131]
[63 127]
[64 126]
[65 125]
[66 124]
[67 123]
[68 122]
[72 119]
[73 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
