%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[110.17638397 722.57965088]
[95.47855377 719.52868652]
[81.13100433 715.11480713]
[67.25983429 709.37677002]
[53.98693466 702.36505127]
[41.42895508 694.14117432]
[29.69626236 684.77752686]
[18.89196014 674.35632324]
[9.11100006 662.96917725]
[0.43934202 650.71612549]
[-7.04680729 637.70489502]
[-13.28165722 624.04980469]
[-18.21041489 609.87091064]
[-21.78976440 595.29272461]
[-23.98825073 580.44348145]
[-24.78655243 565.45355225]
[-24.17765236 550.45477295]
[-22.16690636 535.57891846]
[-18.77198029 520.95666504]
[-14.02271175 506.71664429]
[-7.96083784 492.98391724]
[-0.63963228 479.87915039]
[7.87656450 467.51757812]
[17.51291084 456.00778198]
[28.18471909 445.45092773]
[39.79820633 435.93981934]
[52.25130463 427.55801392]
[65.43457794 420.37915039]
[79.23217010 414.46636963]
[93.52281952 409.87161255]
[108.18093872 406.63525391]
[123.07770538 404.78573608]
[122.63110352 389.79238892]
[122.18449402 374.79904175]
[121.73789215 359.80569458]
[121.29128265 344.81234741]
[120.62149811 329.82730103]
[119.72868347 314.85391235]
[118.83586884 299.88049316]
[117.94305420 284.90707397]
[116.93878937 269.94073486]
[115.82314301 254.98228455]
[114.70749664 240.02383423]
[112.92502594 225.13012695]
[103.21610260 213.83471680]
[108.59976959 198.95767212]
[106.15403748 184.15840149]
[103.70831299 169.35913086]
[101.26258850 154.55986023]
[98.81685638 139.76057434]
[96.37113190 124.96131134]
[93.92539978 110.16204071]
[88.51473999 124.15220642]
[78.21788025 135.05975342]
[64.56230164 141.26663208]
[49.57373428 141.85206604]
[35.47563171 136.72921753]
[24.35937309 126.65802765]
[17.87398529 113.13250732]
[16.98153687 98.15908051]
[21.81441689 83.95896149]
[31.65569878 72.63866425]
[45.04548645 65.87747955]
[59.99748230 64.67839050]
[74.29364777 69.21927643]
[85.81323242 78.82652283]
[92.84681702 92.07312012]
[93.51660156 77.08808136]
[94.18638611 62.10304260]
[94.85617065 47.11800385]
[95.52596283 32.13296509]
[93.11891174 27.50120544]
[92.76464844 22.87218857]
[94.11836243 19.02738762]
[96.57507324 16.49817276]
[97.91330719 1.55798829]
[88.05545044 -10.50270557]
[89.62543488 -25.63511467]
[101.18421173 -34.95875168]
[102.52244568 -49.89893723]
[96.04719543 -64.33436584]
[104.88910675 -76.32059479]
[106.22734833 -91.26078033]
[107.56558228 -106.20096588]
[101.09032440 -120.63639832]
[109.93224335 -132.62263489]
[111.27047729 -147.56282043]
[112.60871124 -162.50300598]
[113.94694519 -177.44319153]
[115.28517914 -192.38337708]
[100.73450470 -196.16857910]
[87.00537109 -202.29725647]
[74.47232056 -210.60221863]
[63.47725296 -220.85690308]
[54.32013321 -232.78153992]
[47.25077057 -246.05082703]
[42.46202469 -260.30276489]
[40.08452988 -275.14855957]
[40.18315125 -290.18319702]
[42.75519562 -304.99649048]
[47.73049927 -319.18438721]
[54.97332764 -332.35980225]
[64.28609467 -344.16329956]
[75.41474152 -354.27282715]
[88.05566406 -362.41268921]
[101.86401367 -368.36071777]
[116.46308899 -371.95471191]
[131.45462036 -373.09661865]
[146.42962646 -371.75524902]
[160.97956848 -367.96725464]
[174.70751953 -361.83593750]
[187.23896790 -353.52853394]
[198.23205566 -343.27175903]
[207.38688660 -331.34533691]
[214.45368958 -318.07470703]
[219.23968506 -303.82183838]
[221.61431885 -288.97558594]
[221.51280212 -273.94097900]
[218.93791199 -259.12814331]
[213.95986938 -244.94122314]
[206.71450806 -231.76721191]
[197.39945984 -219.96553040]
[186.26887512 -209.85810852]
[173.62637329 -201.72071838]
[159.81687927 -195.77532959]
[145.21711731 -192.18414307]
[130.22535706 -191.04513550]
[128.88713074 -176.10494995]
[127.54889679 -161.16476440]
[126.21066284 -146.22457886]
[124.87242889 -131.28439331]
[131.44340515 -117.91758728]
[122.50576019 -104.86273193]
[121.16752625 -89.92254639]
[119.82929230 -74.98236084]
[126.40026855 -61.61555481]
[117.46263123 -48.56070328]
[116.12439728 -33.62051773]
[125.84217834 -22.39107895]
[124.69785309 -7.22054291]
[112.85349274 2.89622235]
[111.51525879 17.83640671]
[110.51100159 32.80275345]
[109.84120941 47.78779221]
[109.17142487 62.77283096]
[108.50164032 77.75786591]
[107.83185577 92.74290466]
[108.72467041 107.71631622]
[111.17040253 122.51558685]
[113.61612701 137.31484985]
[116.06185913 152.11412048]
[118.50758362 166.91339111]
[120.95330811 181.71266174]
[123.39904022 196.51193237]
[133.28289795 208.86587524]
[127.72429657 222.68438721]
[137.31727600 211.15292358]
[152.24127197 209.64494324]
[163.94717407 219.02427673]
[165.72927856 233.91804504]
[156.56672668 245.79438782]
[141.70825195 247.85002136]
[129.66593933 238.90818787]
[130.78160095 253.86663818]
[131.89724731 268.82510376]
[135.65626526 277.15020752]
[132.91645813 284.01428223]
[133.80926514 298.98767090]
[134.70208740 313.96109009]
[135.59490967 328.93447876]
[138.91079712 334.65432739]
[138.84950256 340.33703613]
[136.28463745 344.36575317]
[136.73123169 359.35910034]
[137.17784119 374.35244751]
[137.62445068 389.34579468]
[138.07106018 404.33914185]
[153.05149841 405.29870605]
[167.87626648 407.65686035]
[182.41505432 411.39288330]
[196.54013062 416.47393799]
[210.12731934 422.85534668]
[223.05723572 430.48107910]
[235.21623230 439.28408813]
[246.49748230 449.18704224]
[256.80181885 460.10284424]
[266.03869629 471.93563843]
[274.12692261 484.58139038]
[280.99545288 497.92895508]
[286.58386230 511.86108398]
[290.84310913 526.25531006]
[293.73571777 540.98510742]
[295.23626709 555.92108154]
[295.33160400 570.93188477]
[294.02087402 585.88568115]
[291.31555176 600.65106201]
[287.23950195 615.09820557]
[281.82846069 629.10015869]
[275.13003540 642.53393555]
[267.20306396 655.28137207]
[258.11721802 667.23052979]
[247.95234680 678.27636719]
[236.79779053 688.32177734]
[224.75157166 697.27850342]
[211.91955566 705.06781006]
[198.41450500 711.62127686]
[184.35511780 716.88134766]
[169.86494446 720.80169678]
[155.07131958 723.34796143]
[140.10427856 724.49774170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 170]
[38 169]
[39 168]
[40 167]
[41 165]
[42 164]
[43 163]
[44 156]
[46 154]
[47 153]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[75 142]
[76 141]
[79 138]
[80 137]
[82 135]
[83 134]
[84 133]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
