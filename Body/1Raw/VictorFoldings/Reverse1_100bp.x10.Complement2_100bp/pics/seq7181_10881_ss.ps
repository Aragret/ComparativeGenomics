%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[56.47739410 607.25805664]
[43.09588242 600.42803955]
[30.76906586 591.83947754]
[19.72658348 581.65240479]
[10.17415237 570.05645752]
[2.28972745 557.26782227]
[-3.77980876 543.52465820]
[-7.92138481 529.08300781]
[-10.05784607 514.21191406]
[-10.14939022 499.18844604]
[-8.19431305 484.29241943]
[-4.22903681 469.80139160]
[1.67256892 455.98526001]
[9.40056038 443.10150146]
[18.81097031 431.39004517]
[29.72848701 421.06912231]
[41.94972610 412.33096313]
[55.24700928 405.33840942]
[69.37261963 400.22167969]
[84.06340790 397.07611084]
[82.94776154 382.11767578]
[81.83211517 367.15921021]
[80.71646118 352.20077515]
[79.60081482 337.24230957]
[70.59290314 349.23638916]
[56.28973770 353.75515747]
[42.02604294 349.11328125]
[33.12182999 337.04202271]
[32.89814377 322.04370117]
[41.43841934 309.71228027]
[55.55733871 304.64712524]
[69.98889923 308.73733521]
[79.35089874 320.45852661]
[72.18962097 307.39846802]
[80.53541565 293.95755005]
[81.20520020 278.97250366]
[74.04391479 265.91244507]
[82.38970947 252.47152710]
[83.05949402 237.48649597]
[80.21780396 230.66398621]
[83.85245514 222.28382874]
[84.74526978 207.31042480]
[76.95321655 198.05781555]
[77.57449341 185.57592773]
[86.82077789 176.58320618]
[80.05152130 163.31570435]
[88.79380035 150.12922668]
[89.90944672 135.17077637]
[91.02509308 120.21232605]
[92.14074707 105.25386810]
[89.70652771 100.60752106]
[90.04884338 94.92807770]
[93.51882935 89.86881256]
[95.07935333 74.95020294]
[96.63987732 60.03160095]
[90.38025665 45.50136566]
[99.39965057 33.64810562]
[100.96017456 18.72949982]
[102.52069855 3.81089520]
[96.26108551 -10.71934128]
[105.28047943 -22.57260132]
[106.61871338 -37.51278687]
[99.92925262 -51.85020828]
[108.59173584 -63.96675491]
[109.70738220 -78.92520905]
[110.82302856 -93.88365936]
[111.93868256 -108.84211731]
[113.05432892 -123.80056763]
[114.16997528 -138.75901794]
[115.28562164 -153.71748352]
[100.62046051 -159.64651489]
[88.52015686 -169.80471802]
[80.16149139 -183.18849182]
[76.35250854 -198.48133850]
[77.45440674 -214.18334961]
[83.34734344 -228.75831604]
[93.44332123 -240.78396606]
[106.74485779 -249.09088135]
[121.94350433 -252.87603760]
[122.83631897 -267.84945679]
[123.72913361 -282.82284546]
[124.62195587 -297.79626465]
[125.51477051 -312.76965332]
[126.40758514 -327.74307251]
[115.87800598 -317.05999756]
[101.09934998 -314.49264526]
[87.58369446 -320.99856567]
[80.37203217 -334.15118408]
[82.15414429 -349.04495239]
[92.26534271 -360.12481689]
[106.93440247 -363.25830078]
[120.69013214 -357.27664185]
[128.40223694 -344.40975952]
[131.06803894 -359.17098999]
[133.73382568 -373.93218994]
[136.39962769 -388.69342041]
[139.06541443 -403.45465088]
[141.73121643 -418.21585083]
[127.87104034 -424.11868286]
[115.67217255 -432.95809937]
[105.74649811 -444.29074097]
[98.59189606 -457.54815674]
[94.56723022 -472.06539917]
[93.87438202 -487.11422729]
[96.54809570 -501.93984985]
[102.45426941 -515.79858398]
[111.29664612 -527.99530029]
[122.63169098 -537.91827393]
[135.89085388 -545.06964111]
[150.40905762 -549.09075928]
[165.45806885 -549.77996826]
[180.28303528 -547.10266113]
[194.14035034 -541.19317627]
[206.33493042 -532.34783936]
[216.25511169 -521.01037598]
[223.40328979 -507.74948120]
[227.42091370 -493.23028564]
[228.10647583 -478.18112183]
[225.42558289 -463.35681152]
[219.51269531 -449.50091553]
[210.66439819 -437.30847168]
[199.32455444 -427.39105225]
[186.06192017 -420.24609375]
[171.54177856 -416.23196411]
[156.49243164 -415.55004883]
[153.82664490 -400.78884888]
[151.16084290 -386.02761841]
[148.49504089 -371.26641846]
[145.82925415 -356.50518799]
[143.16345215 -341.74398804]
[141.38099670 -326.85025024]
[140.48817444 -311.87686157]
[139.59535217 -296.90344238]
[138.70254517 -281.93005371]
[137.80972290 -266.95663452]
[136.91691589 -251.98323059]
[150.31187439 -247.10871887]
[161.80268860 -238.64697266]
[170.45231628 -227.27690125]
[175.55224609 -213.91499329]
[176.68057251 -199.64152527]
[173.73686218 -185.61312866]
[166.95101929 -172.96914673]
[156.86537170 -162.73905945]
[144.29132080 -155.75866699]
[130.24407959 -152.60182190]
[129.12843323 -137.64337158]
[128.01278687 -122.68492126]
[126.89713287 -107.72647095]
[125.78148651 -92.76801300]
[124.66583252 -77.80956268]
[123.55018616 -62.85110855]
[130.31944275 -49.58361435]
[121.57716370 -36.39713669]
[123.95958710 -32.25792313]
[123.76706696 -26.57813644]
[120.19908142 -21.01207924]
[126.57032013 -7.54892063]
[117.43930054 5.37141800]
[115.87878418 20.29002380]
[114.31826019 35.20862579]
[120.68949127 48.67178726]
[111.55847931 61.59212494]
[109.99795532 76.51072693]
[108.43743134 91.42933655]
[107.09919739 106.36952209]
[105.98355103 121.32797241]
[104.86790466 136.28642273]
[103.75225067 151.24487305]
[110.44171143 165.58230591]
[101.77922821 177.69885254]
[110.15751648 194.09658813]
[99.71867371 208.20323181]
[98.82585907 223.17663574]
[98.04453278 238.15628052]
[97.37474823 253.14131165]
[104.48812103 267.27322388]
[96.19023895 279.64230347]
[95.52045441 294.62734985]
[102.63382721 308.75924683]
[94.33593750 321.12832642]
[94.55926514 336.12667847]
[95.67491913 351.08511353]
[96.79056549 366.04357910]
[97.90621185 381.00201416]
[99.02186584 395.96047974]
[114.01673126 396.89199829]
[128.74508667 399.85668945]
[142.93252563 404.79934692]
[156.31478882 411.62789917]
[168.64253235 420.21511841]
[179.68611145 430.40106201]
[189.23980713 441.99591064]
[197.12561035 454.78372192]
[203.19664001 468.52621460]
[207.33976746 482.96740723]
[209.47784424 497.83825684]
[209.57101440 512.86175537]
[207.61755371 527.75799561]
[203.65383911 542.24945068]
[197.75372314 556.06622314]
[190.02713013 568.95080566]
[180.61799622 580.66326904]
[169.70159912 590.98541260]
[157.48129272 599.72485352]
[144.18476868 606.71887207]
[130.05970764 611.83709717]
[115.36927032 614.98425293]
[100.38710785 616.10168457]
[85.39234161 615.16857910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 186]
[21 185]
[22 184]
[23 183]
[24 182]
[33 181]
[35 179]
[36 178]
[38 176]
[39 175]
[41 174]
[42 173]
[45 171]
[47 169]
[48 168]
[49 167]
[50 166]
[53 165]
[54 164]
[55 163]
[57 161]
[58 160]
[59 159]
[61 157]
[62 154]
[64 152]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
