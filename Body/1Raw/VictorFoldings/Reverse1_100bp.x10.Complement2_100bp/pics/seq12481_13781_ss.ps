%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[217.59727478 599.57928467]
[214.71200562 584.85937500]
[211.82673645 570.13952637]
[208.94145203 555.41961670]
[206.05618286 540.69970703]
[203.17091370 525.97979736]
[190.70487976 517.90930176]
[187.56910706 503.02233887]
[196.11874390 490.00152588]
[186.07781982 479.00021362]
[191.01614380 463.96945190]
[188.13087463 449.24957275]
[185.24560547 434.52966309]
[182.36033630 419.80978394]
[179.47505188 405.08987427]
[176.04399109 390.48757935]
[172.07189941 376.02304077]
[168.09980774 361.55853271]
[164.12770081 347.09399414]
[153.29635620 336.86996460]
[157.10307312 321.51354980]
[153.13098145 307.04901123]
[149.05130005 292.61447144]
[144.86430359 278.21069336]
[140.67729187 263.80688477]
[129.69491577 253.74525452]
[133.27256775 238.33386230]
[129.08555603 223.93008423]
[124.89855194 209.52629089]
[120.71154022 195.12251282]
[109.72916412 185.06086731]
[113.30682373 169.64947510]
[100.00284576 158.20521545]
[104.54120636 140.35908508]
[100.14021301 126.01923370]
[84.66876984 121.02317047]
[75.18303680 107.81911469]
[75.38648224 91.56227875]
[85.19968414 78.59974670]
[80.58567810 64.32701111]
[67.96756744 59.61553955]
[60.47621918 48.65697479]
[60.66156387 35.57845306]
[68.23189545 25.15158653]
[63.83090210 10.81173897]
[59.42990112 -3.52810788]
[55.02890396 -17.86795425]
[43.58315659 -28.79065704]
[47.24575424 -43.22792053]
[42.84475708 -57.56776810]
[38.44375992 -71.90761566]
[33.87176132 -76.68342590]
[32.59032440 -82.22011566]
[34.13207245 -86.74030304]
[30.15997505 -101.20482635]
[26.18787956 -115.66934967]
[22.21578217 -130.13386536]
[19.07856369 -115.46561432]
[11.80964088 -102.34452820]
[1.03784728 -91.90573120]
[-12.30494881 -85.05228424]
[-27.06446266 -82.37706757]
[-41.96384811 -84.11152649]
[-55.71415710 -90.10559845]
[-67.12585449 -99.84075165]
[-75.21170807 -112.47479248]
[-79.27222443 -126.91474152]
[-78.95610809 -141.91140747]
[-74.29072571 -156.16743469]
[-65.67966461 -168.44952393]
[-53.86787415 -177.69514465]
[-39.87719345 -183.10447693]
[-24.91795540 -184.20954895]
[-10.28428268 -180.91476440]
[2.75786495 -173.50515747]
[13.08021164 -162.62171936]
[19.78867722 -149.20933533]
[20.01200485 -164.20767212]
[20.23533249 -179.20600891]
[9.80396271 -187.72663879]
[6.23666239 -200.51275635]
[10.61994553 -212.83625793]
[21.14243698 -220.27310181]
[21.58904266 -235.26646423]
[22.03564835 -250.25981140]
[22.48225403 -265.25314331]
[22.92886162 -280.24652100]
[15.60587311 -294.27093506]
[23.71868134 -306.76220703]
[24.16528702 -321.75555420]
[24.38861465 -336.75387573]
[24.38861465 -351.75387573]
[16.65131569 -365.55404663]
[24.38861465 -378.28131104]
[16.65131569 -392.08148193]
[24.38861465 -404.80877686]
[24.38861465 -419.80877686]
[24.38861465 -434.80877686]
[24.38861465 -449.80877686]
[10.61474705 -456.38473511]
[1.06482017 -468.29110718]
[-2.36501932 -483.16384888]
[1.00622511 -498.05001831]
[10.50919056 -509.99389648]
[24.25705719 -516.62402344]
[39.52017593 -516.62402344]
[53.26803970 -509.99389648]
[62.77100754 -498.05001831]
[66.14225006 -483.16384888]
[62.71240997 -468.29110718]
[53.16248322 -456.38473511]
[39.38861465 -449.80877686]
[39.38861465 -434.80877686]
[39.38861465 -419.80877686]
[39.38861465 -404.80877686]
[47.12591553 -392.08148193]
[39.38861465 -378.28131104]
[47.12591553 -365.55404663]
[39.38861465 -351.75387573]
[39.38861465 -336.75387573]
[42.07229996 -332.80331421]
[42.30275726 -327.12493896]
[39.15863800 -321.30892944]
[38.71203232 -306.31558228]
[46.06696320 -293.36358643]
[37.92221069 -279.79989624]
[37.47560501 -264.80654907]
[37.02899933 -249.81320190]
[36.58239365 -234.81985474]
[36.13578796 -219.82650757]
[48.18093491 -208.08967590]
[48.00718307 -190.93495178]
[35.23366928 -178.98268127]
[35.01034164 -163.98434448]
[34.78701401 -148.98600769]
[36.68030548 -134.10597229]
[40.65240479 -119.64144135]
[44.62450027 -105.17691803]
[48.59659576 -90.71239471]
[52.78360748 -76.30861664]
[57.18460464 -61.96876526]
[61.58560181 -47.62891769]
[72.71656036 -37.73189926]
[69.36875153 -22.26895332]
[73.76975250 -7.92910576]
[78.17074585 6.41074133]
[82.57174683 20.75058746]
[97.75258636 27.98805237]
[103.10731506 44.28657150]
[94.85840607 59.71300507]
[99.47241974 73.98574066]
[112.33864594 77.09196472]
[122.01207733 86.12596893]
[125.98957062 98.75007629]
[123.24189758 111.69761658]
[114.48005676 121.61823273]
[118.88105774 135.95808411]
[129.88943481 142.67956543]
[133.25982666 154.71385193]
[127.71060944 165.46246338]
[138.99246216 176.55436707]
[135.11532593 190.93550110]
[139.30233765 205.33927917]
[143.48934937 219.74307251]
[147.67634583 234.14685059]
[158.95820618 245.23875427]
[155.08106995 259.61987305]
[159.26808167 274.02368164]
[163.45509338 288.42745972]
[168.85554504 295.79446411]
[167.59550476 303.07690430]
[171.56759644 317.54144287]
[182.68305969 328.80007935]
[178.59223938 343.12188721]
[182.56433105 357.58642578]
[186.53642273 372.05093384]
[190.50851440 386.51547241]
[200.08341980 374.96899414]
[215.08280945 375.10308838]
[224.44972229 386.81893921]
[221.27920532 401.48004150]
[207.90844727 408.27877808]
[194.19494629 402.20462036]
[197.08021545 416.92449951]
[199.96549988 431.64440918]
[202.85076904 446.36428833]
[205.73603821 461.08416748]
[215.98333740 473.13836670]
[210.83863831 487.11624146]
[223.67121887 495.94589233]
[226.38760376 510.91506958]
[217.89080811 523.09454346]
[220.77607727 537.81445312]
[223.66134644 552.53436279]
[226.54661560 567.25421143]
[229.43190002 581.97412109]
[232.31716919 596.69403076]
[247.22456360 599.66687012]
[259.85678101 608.12237549]
[268.28744507 620.77117920]
[271.23098755 635.68438721]
[268.23852539 650.58789062]
[259.76638794 663.20892334]
[247.10650635 671.62298584]
[232.18943787 674.54693604]
[217.28991699 671.53485107]
[204.67999268 663.04608154]
[196.28262329 650.37518311]
[193.37832642 635.45428467]
[196.40998840 620.55871582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[9 189]
[11 187]
[12 186]
[13 185]
[14 184]
[15 183]
[16 177]
[17 176]
[18 175]
[19 174]
[21 172]
[22 171]
[23 169]
[24 168]
[25 167]
[27 165]
[28 164]
[29 163]
[30 162]
[32 160]
[34 157]
[35 156]
[39 151]
[40 150]
[44 147]
[45 146]
[46 145]
[47 144]
[49 142]
[50 141]
[51 140]
[54 139]
[55 138]
[56 137]
[57 136]
[77 135]
[78 134]
[79 133]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[89 124]
[90 123]
[91 120]
[92 119]
[94 117]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
