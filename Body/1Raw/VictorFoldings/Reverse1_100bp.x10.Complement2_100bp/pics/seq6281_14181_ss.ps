%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[43.21376419 565.15057373]
[32.97255325 554.10223389]
[25.44704437 541.05175781]
[21.01471519 526.65380859]
[19.89788818 511.63046265]
[22.15258217 496.73535156]
[27.66570473 482.71560669]
[36.16072083 470.27444458]
[47.21151733 460.03591919]
[60.26380157 452.51358032]
[74.66286469 448.08474731]
[73.54721832 433.12628174]
[72.43157196 418.16784668]
[71.31591797 403.20938110]
[70.20027161 388.25091553]
[58.78158951 378.75622559]
[57.43707275 363.60211182]
[67.47341156 351.68954468]
[66.35775757 336.73107910]
[65.24211121 321.77261353]
[53.28478241 315.83422852]
[45.76284027 304.67340088]
[44.72972488 291.14556885]
[50.56192398 278.77609253]
[61.83280945 270.84149170]
[60.93999100 255.86807251]
[60.04717636 240.89466858]
[59.15436172 225.92126465]
[53.28305054 239.72444153]
[44.20411682 251.66482544]
[32.47273636 261.01226807]
[18.80628967 267.19515991]
[4.04048395 269.83544922]
[-10.92174435 268.77160645]
[-25.16545105 264.06875610]
[-37.81962585 256.01446533]
[-48.11046219 245.10122681]
[-55.40867615 231.99641418]
[-59.26797104 217.50138855]
[-59.45235443 202.50251770]
[-55.95054626 187.91699219]
[-48.97669220 174.63673401]
[-38.95723724 163.47383118]
[-26.50488281 155.11088562]
[-12.38108826 150.05931091]
[2.55046773 148.62800598]
[17.37671471 150.90447998]
[31.19102287 156.74955750]
[43.14863968 165.80580139]
[52.51835632 177.51939392]
[58.72721100 191.17407227]
[61.39552307 205.93486023]
[65.58253479 191.53108215]
[69.76954651 177.12728882]
[73.95655823 162.72351074]
[78.14356995 148.31973267]
[82.33058167 133.91595459]
[86.51759338 119.51216888]
[90.70460510 105.10838318]
[94.35269165 90.55876160]
[89.63869476 75.45615387]
[99.84230042 64.60554504]
[89.62113190 53.08018494]
[88.16338348 37.92338943]
[95.81947327 24.96776009]
[109.47286224 19.07514000]
[112.57697296 4.39983797]
[115.68107605 -10.27546406]
[118.78518677 -24.95076752]
[120.67848206 -39.83080292]
[121.34826660 -54.81584167]
[122.01805115 -69.80088043]
[122.68783569 -84.78591919]
[123.35762024 -99.77095795]
[124.02740479 -114.75599670]
[124.69718933 -129.74102783]
[116.58503723 -139.76878357]
[117.45140076 -152.23606873]
[126.28773499 -160.49717712]
[127.18054962 -175.47058105]
[128.07336426 -190.44398499]
[113.28774261 -193.07112122]
[98.90710449 -197.39704895]
[85.12592316 -203.36325073]
[72.13056946 -210.88903809]
[60.09680939 -219.87263489]
[49.18737030 -230.19255066]
[39.54979324 -241.70922852]
[31.31441689 -254.26689148]
[24.59261703 -267.69573975]
[19.47529602 -281.81414795]
[16.03166008 -296.43118286]
[14.30827904 -311.34918213]
[14.32846260 -326.36636353]
[16.09193611 -341.27969360]
[19.57485008 -355.88742065]
[24.73010445 -369.99203491]
[31.48797798 -383.40274048]
[39.75708008 -395.93823242]
[49.42557526 -407.42895508]
[60.36271667 -417.71951294]
[72.42058563 -426.67074585]
[85.43611145 -434.16156006]
[99.23328400 -440.09069824]
[113.62550354 -444.37796021]
[128.41813660 -446.96533203]
[143.41111755 -447.81787109]
[158.40170288 -446.92404175]
[173.18714905 -444.29589844]
[187.56750488 -439.96902466]
[201.34829712 -434.00189209]
[214.34313965 -426.47525024]
[226.37629700 -417.49084473]
[237.28504944 -407.17019653]
[246.92185974 -395.65289307]
[255.15640259 -383.09466553]
[261.87728882 -369.66537476]
[266.99368286 -355.54663086]
[270.43634033 -340.92935181]
[272.15872192 -326.01126099]
[272.13754272 -310.99404907]
[270.37307739 -296.08087158]
[266.88919067 -281.47335815]
[261.73297119 -267.36911011]
[254.97421265 -253.95883179]
[246.70428467 -241.42388916]
[237.03501892 -229.93380737]
[226.09718323 -219.64399719]
[214.03872681 -210.69357300]
[201.02268982 -203.20361328]
[187.22512817 -197.27540588]
[172.83262634 -192.98910522]
[158.03982544 -190.40270996]
[143.04676819 -189.55116272]
[142.15396118 -174.57775879]
[141.26113892 -159.60435486]
[149.94970703 -144.35720825]
[139.68223572 -129.07124329]
[139.01245117 -114.08621216]
[138.34266663 -99.10117340]
[137.67288208 -84.11613464]
[137.00309753 -69.13109589]
[136.33331299 -54.14605713]
[135.66351318 -39.16101837]
[144.66615295 -51.15904236]
[158.17346191 -57.68226624]
[173.16789246 -57.27338791]
[186.29963684 -50.02375031]
[194.63504028 -37.55293655]
[196.31193542 -22.64696693]
[190.95571899 -8.63586617]
[179.76298523 1.35024798]
[165.23419189 5.08045149]
[150.61514282 1.72140801]
[139.17173767 -7.97646379]
[133.46049500 -21.84665680]
[130.35638428 -7.17135429]
[127.25227356 7.50394821]
[124.14816284 22.17925072]
[134.24609375 33.09573364]
[136.00042725 48.04185104]
[128.53021240 61.31020355]
[114.51760101 67.70965576]
[119.45362854 81.76258850]
[109.02799225 93.66287231]
[122.83205414 87.79364014]
[136.09944153 94.79195404]
[139.04994202 109.49890900]
[129.50854492 121.07308960]
[114.50881958 120.98244476]
[105.10838318 109.29539490]
[100.92137146 123.69918060]
[96.73435974 138.10296631]
[92.54734802 152.50674438]
[88.36034393 166.91052246]
[84.17333221 181.31430054]
[79.98632050 195.71809387]
[75.79930878 210.12187195]
[74.12776947 225.02844238]
[75.02058411 240.00184631]
[75.91339874 254.97525024]
[76.80621338 269.94866943]
[91.18034363 278.86383057]
[97.34703827 294.43539429]
[93.06017303 310.45364380]
[80.20056152 320.65698242]
[81.31621552 335.61541748]
[82.43186188 350.57388306]
[94.12428284 360.86587524]
[95.04261780 376.05175781]
[85.15872192 387.13528442]
[86.27437592 402.09371948]
[87.39002228 417.05218506]
[88.50566864 432.01065063]
[89.62132263 446.96908569]
[104.51805878 449.21295166]
[118.54180908 454.71588135]
[130.98913574 463.20184326]
[141.23570251 474.24520874]
[148.76753235 487.29202271]
[153.20683289 501.68786621]
[154.33094788 516.71063232]
[152.08346558 531.60687256]
[146.57714844 545.62927246]
[138.08815002 558.07452393]
[127.04232025 568.31842041]
[113.99368286 575.84710693]
[99.59677124 580.28289795]
[84.57370758 581.40338135]
[69.67806244 579.15228271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[18 188]
[19 187]
[20 186]
[25 182]
[26 181]
[27 180]
[28 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[60 165]
[62 163]
[66 159]
[67 158]
[68 157]
[69 156]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[79 136]
[80 135]
[81 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
