%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGCGUCAUGACUAGUAAGAUAAAGGGGGAGAUAACUAGGGGUGGAGGUUUAUAGAGUAGUUGUUGGCUGAUUAGUGGUGGGUUGUUACUGAUUAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[153.35987854 583.21704102]
[142.35255432 573.01995850]
[131.98736572 562.17083740]
[122.30285645 550.71002197]
[113.33506012 538.68005371]
[105.11734772 526.12579346]
[97.68028259 513.09387207]
[91.05152130 499.63278198]
[85.25573730 485.79263306]
[80.31449127 471.62487793]
[76.24615479 457.18225098]
[73.06587219 442.51846313]
[70.78546906 427.68807983]
[69.41342926 412.74624634]
[68.95485687 397.74856567]
[69.41146088 382.75082397]
[70.78153992 367.80880737]
[73.05999756 352.97811890]
[76.23835754 338.31390381]
[80.30479431 323.87075806]
[85.24418640 309.70236206]
[91.03815460 295.86145020]
[97.66514587 282.39950562]
[105.10050201 269.36660767]
[113.31657410 256.81124878]
[122.28278351 244.78012085]
[131.96578979 233.31800842]
[142.32955933 222.46751404]
[153.33554077 212.26902771]
[164.94279480 202.76048279]
[151.21946716 196.97087097]
[149.41433716 181.25299072]
[140.63372803 169.09153748]
[126.91040039 163.30192566]
[125.10526276 147.58404541]
[116.32466125 135.42259216]
[107.54405975 123.26113129]
[98.76345825 111.09967041]
[89.89256287 99.00392151]
[80.93186188 86.97454071]
[71.97116852 74.94516754]
[63.01047516 62.91579056]
[58.21623230 60.85124207]
[55.01357651 57.49024963]
[53.62981033 53.65615845]
[53.93252945 50.14322662]
[45.51791382 37.72573090]
[37.10329437 25.30823517]
[36.57176208 40.29881287]
[28.70011711 53.06741714]
[15.54598713 60.27635956]
[0.54782951 60.04124069]
[-12.37387180 52.42352295]
[-19.84141731 39.41445923]
[-19.90280533 24.41458511]
[-12.54199219 11.34483242]
[0.31692469 3.62160397]
[15.31265545 3.26373291]
[28.52470207 10.36415958]
[22.04520607 -3.16418552]
[15.56571102 -16.69253159]
[9.08621502 -30.22087669]
[3.85635042 -34.26563263]
[1.76777220 -39.55097580]
[2.62193322 -44.24985504]
[-3.45190072 -57.96512222]
[-9.52573490 -71.68038940]
[-15.59956837 -85.39565277]
[-21.67340279 -99.11092377]
[-27.74723625 -112.82618713]
[-33.82107162 -126.54145813]
[-48.31541443 -122.57010651]
[-63.23978043 -120.80348206]
[-78.26074982 -121.28105927]
[-93.04275513 -123.99215698]
[-107.25555420 -128.87622070]
[-120.58162689 -135.82411194]
[-132.72326660 -144.68064880]
[-143.40922546 -155.24795532]
[-152.40078735 -167.28994751]
[-159.49705505 -180.53761292]
[-164.53948975 -194.69499207]
[-167.41548157 -209.44580078]
[-168.06074524 -224.46051025]
[-166.46087646 -239.40367126]
[-162.65161133 -253.94145203]
[-156.71804810 -267.74908447]
[-148.79275513 -280.51809692]
[-139.05279541 -291.96319580]
[-127.71573639 -301.82873535]
[-115.03487396 -309.89431763]
[-101.29349518 -315.97970581]
[-86.79858398 -319.94897461]
[-71.87396240 -321.71347046]
[-56.85306168 -321.23376465]
[-42.07144547 -318.52056885]
[-27.85934258 -313.63449097]
[-14.53425598 -306.68469238]
[-2.39387584 -297.82641602]
[8.29057980 -287.25759888]
[17.28041458 -275.21432495]
[24.37479401 -261.96563721]
[29.41522598 -247.80754089]
[32.28910446 -233.05632019]
[32.93223190 -218.04153442]
[31.33023071 -203.09860229]
[27.51889610 -188.56135559]
[21.58337593 -174.75457764]
[13.65626812 -161.98669434]
[3.91466951 -150.54296875]
[-7.42378950 -140.67904663]
[-20.10580444 -132.61529541]
[-14.03197002 -118.90002441]
[-7.95813608 -105.18475342]
[-1.88430190 -91.46949005]
[4.18953228 -77.75421906]
[10.26336575 -64.03895569]
[16.33720016 -50.32368851]
[22.61456108 -36.70037079]
[29.09405708 -23.17202759]
[35.57355118 -9.64368153]
[42.05304718 3.88466406]
[49.52079010 16.89361572]
[57.93540955 29.31111145]
[66.35002899 41.72860718]
[75.03984833 53.95509338]
[84.00054932 65.98447418]
[92.96124268 78.01384735]
[101.92193604 90.04322815]
[108.87996674 94.11241913]
[110.92491150 102.31906891]
[119.70551300 114.48052979]
[128.48611450 126.64198303]
[137.26672363 138.80343628]
[151.61810303 145.46290588]
[152.79518127 160.31092834]
[161.57579041 172.47238159]
[175.92716980 179.13185120]
[177.10424805 193.97987366]
[189.78228760 185.95437622]
[202.92599487 178.71672058]
[216.48649597 172.29382324]
[230.41334534 166.70957947]
[244.65472412 161.98475647]
[259.15765381 158.13693237]
[273.86819458 155.18043518]
[288.73159790 153.12623596]
[303.69262695 151.98200989]
[318.69555664 151.75199890]
[333.68460083 152.43704224]
[348.60400391 154.03460693]
[363.39825439 156.53875732]
[378.01232910 159.94017029]
[392.39187622 164.22618103]
[406.48336792 169.38085938]
[420.23437500 175.38504028]
[433.59381104 182.21635437]
[446.51190186 189.84941101]
[458.94061279 198.25581360]
[470.83374023 207.40429688]
[482.14700317 217.26080322]
[492.83834839 227.78868103]
[502.86798096 238.94877625]
[512.19854736 250.69955444]
[520.79541016 262.99731445]
[528.62658691 275.79626465]
[535.66290283 289.04885864]
[541.87817383 302.70578003]
[547.24932861 316.71618652]
[551.75634766 331.02798462]
[555.38250732 345.58792114]
[558.11425781 360.34185791]
[559.94146729 375.23489380]
[560.85736084 390.21160889]
[560.85845947 405.21627808]
[559.94482422 420.19314575]
[558.11987305 435.08645630]
[555.39031982 449.84078979]
[551.76641846 464.40127563]
[547.26153564 478.71374512]
[541.89245605 492.72497559]
[535.67926025 506.38281250]
[528.64489746 519.63647461]
[520.81567383 532.43658447]
[512.22064209 544.73565674]
[502.89181519 556.48785400]
[492.86389160 567.64941406]
[482.17413330 578.17889404]
[470.86233521 588.03710938]
[458.97061157 597.18737793]
[446.54315186 605.59564209]
[433.62619019 613.23065186]
[420.26779175 620.06396484]
[406.51766968 626.07019043]
[392.42697144 631.22698975]
[378.04806519 635.51519775]
[363.43450928 638.91882324]
[348.64062500 641.42517090]
[333.72146606 643.02496338]
[318.73251343 643.71228027]
[303.72955322 643.48449707]
[288.76837158 642.34252930]
[273.90466309 640.29058838]
[259.19366455 637.33630371]
[244.69015503 633.49066162]
[230.44805908 628.76794434]
[216.52038574 623.18579102]
[202.95890808 616.76495361]
[189.81411743 609.52929688]
[177.13487244 601.50567627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 139]
[32 137]
[33 136]
[35 134]
[36 133]
[37 132]
[38 131]
[39 129]
[40 128]
[41 127]
[42 126]
[46 125]
[47 124]
[48 123]
[59 122]
[60 121]
[61 120]
[62 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
