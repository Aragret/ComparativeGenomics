%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[210.72042847 303.59356689]
[218.13261414 290.53576660]
[226.91316223 278.35589600]
[236.95915222 267.19677734]
[226.96098328 256.01480103]
[216.96279907 244.83283997]
[206.96463013 233.65086365]
[196.88349915 222.54364014]
[186.71994019 211.51174927]
[174.65043640 210.70346069]
[166.09272766 201.59580994]
[166.03196716 188.69778442]
[156.03379822 177.51580811]
[146.03562927 166.33383179]
[136.03746033 155.15185547]
[132.55638123 154.59112549]
[129.17395020 152.31643677]
[126.69277191 148.39251709]
[125.85620117 143.24012756]
[116.36730194 131.62286377]
[106.87840271 120.00559235]
[97.38950348 108.38832855]
[94.39384460 107.82660675]
[91.53636932 106.16246796]
[89.22578430 103.44500732]
[87.84693146 99.87358856]
[87.70651245 95.78540039]
[78.92591095 83.62394714]
[70.14530945 71.46249390]
[61.36470413 59.30103683]
[52.58409882 47.13957977]
[43.80349731 34.97812271]
[41.49956512 49.80013275]
[30.29042816 59.76783752]
[15.30074692 60.32414627]
[3.38360500 51.21471786]
[-0.01264209 36.60425568]
[6.66472435 23.17247581]
[20.36290359 17.06019974]
[34.82078171 21.06295013]
[27.35304260 8.05399704]
[13.77235699 -0.06237802]
[14.14636993 -14.95228672]
[6.67862892 -27.96123886]
[-0.78911239 -40.97019196]
[-8.25685406 -53.97914505]
[-15.72459507 -66.98809814]
[-23.19233513 -79.99704742]
[-30.66007805 -93.00600433]
[-38.12781906 -106.01495361]
[-45.59555817 -119.02390289]
[-53.15993881 -131.97689819]
[-60.82053757 -144.87322998]
[-74.36064911 -138.39468384]
[-88.42699432 -133.15596008]
[-102.90630341 -129.19923401]
[-117.68201447 -126.55635834]
[-132.63514709 -125.24862671]
[-147.64529419 -125.28656006]
[-162.59162903 -126.66985321]
[-177.35379028 -129.38737488]
[-191.81291199 -133.41722107]
[-205.85260010 -138.72697449]
[-219.35980225 -145.27388000]
[-232.22575378 -153.00520325]
[-244.34687805 -161.85871887]
[-255.62556458 -171.76312256]
[-265.97103882 -182.63868713]
[-275.29995728 -194.39782715]
[-283.53723145 -206.94587708]
[-290.61651611 -220.18180847]
[-296.48086548 -233.99903870]
[-301.08300781 -248.28633118]
[-304.38589478 -262.92861938]
[-306.36297607 -277.80804443]
[-306.99826050 -292.80480957]
[-306.28671265 -307.79815674]
[-304.23400879 -322.66732788]
[-300.85671997 -337.29266357]
[-296.18197632 -351.55633545]
[-290.24746704 -365.34359741]
[-283.10095215 -378.54333496]
[-274.79998779 -391.04934692]
[-265.41140747 -402.76089478]
[-255.01077271 -413.58370972]
[-243.68185425 -423.43066406]
[-231.51588440 -432.22241211]
[-218.61077881 -439.88821411]
[-205.07046509 -446.36636353]
[-191.00396729 -451.60464478]
[-176.52452087 -455.56094360]
[-161.74874878 -458.20336914]
[-146.79557800 -459.51062012]
[-131.78541565 -459.47222900]
[-116.83912659 -458.08850098]
[-102.07705688 -455.37051392]
[-87.61804199 -451.34024048]
[-73.57852173 -446.03002930]
[-60.07152557 -439.48272705]
[-47.20580673 -431.75100708]
[-35.08495331 -422.89712524]
[-23.80656242 -412.99237061]
[-13.46143913 -402.11651611]
[-4.13287783 -390.35708618]
[4.10401106 -377.80877686]
[11.18290806 -364.57263184]
[17.04681778 -350.75521851]
[21.64852333 -336.46780396]
[24.95097733 -321.82537842]
[26.92758942 -306.94589233]
[27.56244278 -291.94912720]
[26.85042763 -276.95581055]
[24.79727554 -262.08670044]
[21.41951752 -247.46147156]
[16.74435234 -233.19792175]
[10.80941868 -219.41085815]
[3.66250515 -206.21131897]
[-4.63884592 -193.70556641]
[-14.02779484 -181.99430847]
[-24.42874718 -171.17179871]
[-35.75795746 -161.32522583]
[-47.92420959 -152.53382874]
[-40.26361084 -139.63749695]
[-34.14495087 -135.49217224]
[-32.58660889 -126.49164581]
[-25.11886597 -113.48269653]
[-17.65112495 -100.47373962]
[-10.18338394 -87.46479034]
[-2.71564245 -74.45584106]
[4.75209856 -61.44688416]
[12.21984005 -48.43793106]
[19.68758202 -35.42898178]
[27.15532303 -22.42002869]
[40.20186615 -15.23414040]
[40.36199570 0.58625603]
[47.82973480 13.59520817]
[55.96495056 26.19751930]
[64.74555206 38.35897446]
[73.52616119 50.52043152]
[82.30676270 62.68188858]
[91.08736420 74.84334564]
[99.86796570 87.00479889]
[109.00676727 98.89942932]
[118.49566650 110.51669312]
[127.98456573 122.13395691]
[137.47346497 133.75122070]
[147.21943665 145.15368652]
[157.21760559 156.33566284]
[167.21577454 167.51763916]
[177.21394348 178.69961548]
[194.83573914 184.04319763]
[197.75183105 201.34820557]
[207.91537476 212.38008118]
[216.03158569 216.57113647]
[218.14660645 223.65269470]
[228.14477539 234.83467102]
[238.14294434 246.01664734]
[248.14112854 257.19860840]
[260.35018921 248.45874023]
[273.43267822 241.09013367]
[287.23513794 235.17922974]
[301.59579468 230.79530334]
[316.34628296 227.98977661]
[331.31359863 226.79551697]
[346.32232666 227.22654724]
[361.19644165 229.27780151]
[375.76159668 232.92523193]
[389.84698486 238.12606812]
[403.28750610 244.81935120]
[415.92553711 252.92660522]
[427.61291504 262.35275269]
[438.21261597 272.98730469]
[447.60037231 284.70553589]
[455.66607666 297.37011719]
[462.31521606 310.83251953]
[467.46981812 324.93490601]
[471.06942749 339.51193237]
[473.07186890 354.39273071]
[473.45364380 369.40277100]
[472.21026611 384.36608887]
[469.35635376 399.10726929]
[464.92532349 413.45346069]
[458.96917725 427.23648071]
[451.55767822 440.29470825]
[442.77777100 452.47503662]
[432.73239136 463.63467407]
[421.53930664 473.64276123]
[409.32977295 482.38198853]
[396.24688721 489.74987793]
[382.44409180 495.66006470]
[368.08319092 500.04321289]
[353.33258057 502.84796143]
[338.36520386 504.04141235]
[323.35650635 503.60955811]
[308.48248291 501.55752563]
[293.91754150 497.90930176]
[279.83242798 492.70770264]
[266.39227295 486.01367188]
[253.75468445 477.90576172]
[242.06781006 468.47897339]
[231.46867371 457.84387207]
[222.08155823 446.12512207]
[214.01651001 433.46011353]
[207.36808777 419.99734497]
[202.21424866 405.89468384]
[198.61541748 391.31744385]
[196.61378479 376.43658447]
[196.23281860 361.42651367]
[197.47698975 346.46322632]
[200.33171082 331.72222900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 158]
[5 157]
[6 156]
[7 155]
[8 153]
[9 152]
[12 150]
[13 149]
[14 148]
[15 147]
[19 146]
[20 145]
[21 144]
[22 143]
[27 142]
[28 141]
[29 140]
[30 139]
[31 138]
[32 137]
[40 136]
[41 135]
[43 133]
[44 132]
[45 131]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 123]
[53 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
