%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[72.93379211 658.11706543]
[57.91383362 657.44567871]
[43.20925903 654.31115723]
[29.22122002 648.79895020]
[16.33131981 641.05938721]
[4.89120770 631.30371094]
[-4.78702497 619.79797363]
[-12.43934822 606.85614014]
[-17.85700035 592.83117676]
[-20.89218521 578.10577393]
[-21.46209908 563.08160400]
[-19.55119514 548.16857910]
[-15.21160507 533.77355957]
[-8.56171513 520.28912354]
[0.21706109 508.08328247]
[10.88523197 497.48895264]
[23.15176010 488.79513550]
[36.68201065 482.23907471]
[51.10686111 477.99954224]
[66.03279877 476.19226074]
[66.70258331 461.20721436]
[67.37236786 446.22216797]
[60.21108627 433.16210938]
[68.55687714 419.72119141]
[69.22666931 404.73614502]
[62.06538391 391.67608643]
[70.41117859 378.23516846]
[71.08096313 363.25012207]
[71.63917542 348.26052856]
[63.57509613 339.24401855]
[63.82446671 326.74917603]
[72.79890442 317.48513794]
[73.46868896 302.50009155]
[63.52846527 294.30120850]
[60.07390594 281.68582153]
[64.58231354 269.20043945]
[75.61852264 261.47927856]
[76.51134491 246.50585938]
[77.40415955 231.53245544]
[78.29697418 216.55905151]
[65.51628876 224.41105652]
[51.35754395 219.45828247]
[46.25804520 205.35171509]
[53.97695160 192.49020386]
[68.82417297 190.35476685]
[79.85427094 200.51803589]
[81.85828400 185.65251160]
[83.86229706 170.78698730]
[85.75559235 155.90695190]
[87.53805542 141.01322937]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[98.90646362 42.26411438]
[99.79927826 27.29071045]
[100.69209290 12.31730461]
[101.58490753 -2.65610123]
[88.32619476 -10.13726139]
[79.66574097 -22.58248329]
[77.27733612 -37.49274063]
[81.58182526 -51.90219498]
[91.67411041 -62.96814346]
[105.51286316 -68.53180695]
[106.40567780 -83.50521088]
[96.19309998 -95.26705933]
[97.31184387 -110.43949890]
[108.58789825 -120.10314941]
[109.48071289 -135.07655334]
[110.37352753 -150.04995728]
[111.26634979 -165.02337646]
[112.15916443 -179.99678040]
[109.82134247 -184.66386414]
[109.53603363 -189.29763794]
[110.94684601 -193.12185669]
[113.44094086 -195.61421204]
[107.18132019 -210.14445496]
[116.20071411 -221.99771118]
[117.76123810 -236.91632080]
[118.09621429 -251.91258240]
[117.20339966 -266.88598633]
[116.31058502 -281.85937500]
[115.30632782 -296.82574463]
[114.19067383 -311.78417969]
[113.07502747 -326.74264526]
[103.82874298 -335.73535156]
[103.20746613 -348.21725464]
[110.99951935 -357.46984863]
[110.10669708 -372.44326782]
[109.21388245 -387.41665649]
[94.43078613 -390.43698120]
[80.93355560 -397.18139648]
[69.64245605 -407.19009399]
[61.32734680 -419.78060913]
[56.55515289 -434.09454346]
[55.65125656 -449.15591431]
[58.67728043 -463.93786621]
[65.42691040 -477.43249512]
[75.43994904 -488.71972656]
[88.03368378 -497.02996826]
[102.34945679 -501.79663086]
[117.41118622 -502.69470215]
[132.19195557 -499.66299438]
[145.68397522 -492.90814209]
[156.96733093 -482.89074707]
[165.27272034 -470.29379272]
[170.03385925 -455.97619629]
[170.92613220 -440.91412354]
[167.88868713 -426.13452148]
[161.12863159 -412.64511108]
[151.10688782 -401.36563110]
[138.50674438 -393.06509399]
[124.18729401 -388.30947876]
[125.08010864 -373.33609009]
[125.97292328 -358.36267090]
[136.41175842 -344.25604248]
[128.03347778 -327.85827637]
[129.14912415 -312.89984131]
[130.26477051 -297.94137573]
[133.89706421 -291.50491333]
[131.28399658 -282.75219727]
[132.17680359 -267.77880859]
[133.06962585 -252.80538940]
[140.77519226 -265.67489624]
[153.53056335 -273.56796265]
[168.48616028 -274.72125244]
[182.30087280 -268.87710571]
[191.88844299 -257.34112549]
[195.10697937 -242.69050598]
[191.23747253 -228.19819641]
[181.14436340 -217.10183716]
[167.08248901 -211.88037109]
[152.19329834 -213.70030212]
[139.80308533 -222.15502930]
[132.67984009 -235.35578918]
[131.11932373 -220.43719482]
[137.49055481 -206.97402954]
[128.35954285 -194.05369568]
[127.13256836 -179.10395813]
[126.23975372 -164.13055420]
[125.34693909 -149.15715027]
[124.45411682 -134.18374634]
[123.56130219 -119.21033478]
[133.60911560 -108.27520752]
[132.91697693 -93.07733154]
[121.37908936 -82.61239624]
[120.48627472 -67.63899231]
[133.56584167 -60.47027588]
[142.27163696 -48.28345871]
[144.83332825 -33.46459579]
[140.69004822 -18.94380188]
[130.61207581 -7.61589050]
[116.55831909 -1.76328528]
[115.66549683 13.21012020]
[114.77268219 28.18352699]
[113.87986755 43.15693283]
[115.63753510 45.34067917]
[116.63609314 48.35223770]
[116.55591583 51.90596390]
[115.18657684 55.60588455]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[102.43177032 142.79570007]
[100.64930725 157.68942261]
[102.73677826 166.58212280]
[98.72782135 172.79100037]
[96.72380829 187.65652466]
[94.71979523 202.52204895]
[93.27037811 217.45185852]
[92.37756348 232.42526245]
[91.48474884 247.39868164]
[90.59193420 262.37207031]
[102.44109344 275.24130249]
[101.33845520 292.36141968]
[88.45372772 303.16986084]
[87.78394318 318.15490723]
[96.64673615 334.29592896]
[86.63252258 348.70712280]
[89.50503540 357.37814331]
[86.06600189 363.91992188]
[85.39621735 378.90496826]
[92.50959015 393.03686523]
[84.21170807 405.40594482]
[83.54191589 420.39099121]
[90.65529633 434.52288818]
[82.35740662 446.89196777]
[81.68762207 461.87701416]
[81.01783752 476.86203003]
[95.72301483 479.99374390]
[109.71211243 485.50329590]
[122.60350037 493.24032593]
[134.04550171 502.99383545]
[143.72595215 514.49768066]
[151.38076782 527.43804932]
[156.80111694 541.46197510]
[159.83914185 556.18676758]
[160.41194153 571.21081543]
[158.50392151 586.12420654]
[154.16709900 600.52014160]
[147.51980591 614.00579834]
[138.74337769 626.21331787]
[128.07725525 636.80975342]
[115.81240082 645.50592041]
[102.28341675 652.06457520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[27 187]
[28 186]
[29 184]
[32 182]
[33 181]
[37 178]
[38 177]
[39 176]
[40 175]
[46 174]
[47 173]
[48 172]
[49 170]
[50 169]
[51 168]
[52 167]
[54 165]
[55 164]
[56 163]
[57 158]
[58 157]
[59 156]
[60 155]
[66 149]
[67 148]
[70 145]
[71 144]
[72 143]
[73 142]
[74 141]
[78 140]
[80 138]
[81 137]
[82 125]
[83 124]
[84 123]
[85 121]
[86 120]
[87 119]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
