%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[74.43341827 651.87286377]
[59.73197556 655.00561523]
[44.72145844 655.79986572]
[29.77150917 654.23608398]
[15.25028229 650.35272217]
[1.51537669 644.24542236]
[-11.09497261 636.06463623]
[-22.27022552 626.01177979]
[-31.73517990 614.33441162]
[-39.25675201 601.32006836]
[-44.64972305 587.28930664]
[-47.78127670 572.58758545]
[-48.57429886 557.57702637]
[-47.00926590 542.62719727]
[-43.12471008 528.10632324]
[-37.01629639 514.37188721]
[-28.83445168 501.76220703]
[-18.78065872 490.58779907]
[-7.10250044 481.12380981]
[5.91243601 473.60330200]
[19.94364738 468.21148682]
[34.64559937 465.08114624]
[49.65625000 464.28936768]
[51.21677399 449.37075806]
[41.66725540 437.99789429]
[43.03732681 422.84606934]
[55.03099442 412.90676880]
[56.59151840 397.98815918]
[50.22028351 384.52499390]
[59.35129929 371.60467529]
[51.98017502 362.01336670]
[53.15817642 349.57165527]
[62.79678345 341.00076294]
[64.57924652 326.10705566]
[66.36170959 311.21334839]
[68.14418030 296.31961060]
[60.91667175 286.61962891]
[62.27978134 274.19683838]
[72.04492950 265.77041626]
[74.04894257 250.90489197]
[76.05295563 236.03936768]
[77.94624329 221.15933228]
[79.72871399 206.26560974]
[81.51117706 191.37188721]
[83.29364777 176.47817993]
[67.89634705 171.39585876]
[53.87637329 163.25048828]
[41.83521652 152.39152527]
[32.28947067 139.28482056]
[25.64867020 124.49272156]
[22.19772339 108.64981079]
[22.08468437 92.43580627]
[25.31439972 76.54632568]
[31.74831200 61.66306686]
[41.11038589 48.42455292]
[52.99897003 37.39875031]
[66.90400696 29.05869484]
[82.22895050 23.76219368]
[98.31630707 21.73647881]
[99.43196106 6.77802563]
[100.54760742 -8.18042755]
[101.66325378 -23.13888168]
[99.18078613 -31.92951012]
[102.90850067 -38.31119919]
[104.24673462 -53.25138474]
[105.58496857 -68.19156647]
[106.92320251 -83.13175201]
[108.26143646 -98.07193756]
[101.78617859 -112.50737000]
[110.62809753 -124.49359894]
[111.96633148 -139.43379211]
[113.30456543 -154.37397766]
[110.87384796 -160.52239990]
[111.77744293 -166.13314819]
[114.91156006 -169.73680115]
[116.69402313 -184.63052368]
[118.47648621 -199.52424622]
[120.25895691 -214.41795349]
[114.21636963 -229.03977966]
[123.41123962 -240.75744629]
[124.08102417 -255.74247742]
[123.63441467 -270.73583984]
[123.18781281 -285.72918701]
[122.74120331 -300.72253418]
[122.29460144 -315.71588135]
[121.84799194 -330.70922852]
[121.40139008 -345.70257568]
[120.95478058 -360.69592285]
[106.09083557 -363.01492310]
[91.90617371 -368.02590942]
[78.88391876 -375.55822754]
[67.46760559 -385.35528564]
[58.04606247 -397.08340454]
[50.94018936 -410.34317017]
[46.39201355 -424.68295288]
[44.55643463 -439.61428833]
[45.49597931 -454.62869263]
[49.17864609 -469.21472168]
[55.47900391 -482.87561035]
[64.18246460 -495.14608765]
[74.99258423 -505.60821533]
[87.54119110 -513.90563965]
[101.40086365 -519.75573730]
[116.09956360 -522.95935059]
[131.13665771 -523.40722656]
[145.99996948 -521.08422852]
[160.18328857 -516.06939697]
[173.20350647 -508.53359985]
[184.61718750 -498.73345947]
[194.03556824 -487.00280762]
[201.13786316 -473.74111938]
[205.68217468 -459.40014648]
[207.51371765 -444.46829224]
[206.57012939 -429.45416260]
[202.88352966 -414.86911011]
[196.57949829 -401.20989990]
[187.87272644 -388.94177246]
[177.05978394 -378.48257446]
[164.50895691 -370.18853760]
[150.64768982 -364.34216309]
[135.94813538 -361.14254761]
[136.39474487 -346.14920044]
[136.84133911 -331.15585327]
[137.28794861 -316.16247559]
[137.73455811 -301.16912842]
[138.18116760 -286.17578125]
[138.62776184 -271.18243408]
[139.07437134 -256.18908691]
[147.55920410 -268.55871582]
[161.04916382 -275.11773682]
[176.01802063 -274.15167236]
[188.55294800 -265.91299438]
[195.37734985 -252.55532837]
[194.70733643 -237.57029724]
[186.71804810 -224.87496948]
[173.49787903 -217.78787231]
[158.50253296 -218.16154480]
[145.65176392 -225.89833069]
[138.30496216 -238.97497559]
[144.47503662 -225.41845703]
[135.15267944 -212.63549805]
[133.37020874 -197.74177551]
[131.58773804 -182.84805298]
[129.80526733 -167.95434570]
[128.24475098 -153.03573608]
[126.90651703 -138.09555054]
[125.56828308 -123.15536499]
[132.13925171 -109.78855896]
[123.20162201 -96.73370361]
[121.86338806 -81.79351807]
[120.52515411 -66.85333252]
[119.18692017 -51.91315079]
[117.84868622 -36.97296524]
[116.62171173 -22.02323151]
[115.50605774 -7.06477880]
[114.39041138 7.89367437]
[113.27476501 22.85212708]
[126.58790588 26.37190247]
[139.07829285 32.17006302]
[150.35943604 40.06719208]
[160.08221436 49.81891632]
[167.94577026 61.12346649]
[173.70678711 73.63103485]
[177.18698120 86.95458221]
[178.27865601 100.68180847]
[176.94804382 114.38793945]
[173.23629761 127.64884186]
[167.25828552 140.05416870]
[159.19900513 151.22003174]
[149.30783081 160.80091858]
[137.89085388 168.50033569]
[125.30136108 174.08004761]
[111.92893219 177.36740112]
[98.18736267 178.26063538]
[96.40489197 193.15435791]
[94.62242889 208.04808044]
[92.83996582 222.94178772]
[94.92743683 231.83450317]
[90.91847992 238.04338074]
[88.91446686 252.90890503]
[86.91045380 267.77444458]
[94.29787445 284.64178467]
[83.03789520 298.10208130]
[81.25543213 312.99581909]
[79.47296143 327.88952637]
[77.69049835 342.78323364]
[85.32823181 359.53872681]
[74.26990509 373.16519165]
[80.52951813 387.69543457]
[71.51012421 399.54867554]
[69.94960022 414.46728516]
[79.62680054 426.67343140]
[77.83168793 441.78076172]
[66.13537598 450.93127441]
[64.57485199 465.84988403]
[79.09672546 469.73086548]
[92.83263397 475.83587646]
[105.44433594 484.01458740]
[116.62124634 494.06561279]
[126.08812714 505.74142456]
[133.61184692 518.75451660]
[139.00712585 532.78436279]
[142.14111328 547.48553467]
[142.93661499 562.49603271]
[141.37403870 577.44610596]
[137.49188232 591.96765137]
[131.38574219 605.70306396]
[123.20597839 618.31408691]
[113.15402985 629.49017334]
[101.47743225 638.95605469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 195]
[24 194]
[27 191]
[28 190]
[30 188]
[33 186]
[34 185]
[35 184]
[36 183]
[39 181]
[40 180]
[41 179]
[42 177]
[43 176]
[44 175]
[45 174]
[59 157]
[60 156]
[61 155]
[62 154]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[70 147]
[71 146]
[72 145]
[75 144]
[76 143]
[77 142]
[78 141]
[80 139]
[81 128]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
