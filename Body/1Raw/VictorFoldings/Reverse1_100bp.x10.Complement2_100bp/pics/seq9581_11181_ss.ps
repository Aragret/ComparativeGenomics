%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[-20.41017914 465.07949829]
[-16.44937897 479.58755493]
[-15.06823635 494.56298828]
[-16.30872154 509.55072021]
[-20.13313675 524.09527588]
[-26.42526436 537.75476074]
[-34.99389267 550.11395264]
[-45.57862854 560.79730225]
[-57.85781860 569.48022461]
[-71.45831299 575.89874268]
[-85.96679688 579.85791016]
[-100.94238281 581.23736572]
[-115.92998505 579.99517822]
[-130.47413635 576.16912842]
[-144.13285828 569.87542725]
[-156.49108887 561.30541992]
[-167.17326355 550.71942139]
[-175.85475159 538.43927002]
[-182.27175903 524.83807373]
[-186.22927856 510.32910156]
[-187.60702515 495.35336304]
[-186.36312866 480.36590576]
[-182.53541565 465.82220459]
[-176.24020386 452.16418457]
[-167.66876221 439.80694580]
[-157.08160400 429.12594604]
[-144.80044556 420.44586182]
[-131.19850159 414.03039551]
[-116.68911743 410.07452393]
[-101.71321106 408.69848633]
[-86.72589874 409.94406128]
[-72.18261719 413.77343750]
[-65.90525055 400.15011597]
[-59.62789154 386.52679443]
[-53.35053253 372.90347290]
[-47.07316971 359.28015137]
[-40.79581070 345.65682983]
[-34.62004089 331.98718262]
[-36.54109573 317.21697998]
[-23.87848854 307.73178101]
[-17.80465508 294.01651001]
[-11.73082161 280.30123901]
[-5.65698767 266.58596802]
[0.41684639 252.87071228]
[0.25103199 245.48191833]
[6.68456554 238.99751282]
[12.96192646 225.37419128]
[19.23928642 211.75088501]
[6.13355875 219.04743958]
[-8.86583328 218.91242981]
[-21.83808517 211.38110352]
[-29.39228058 198.42216492]
[-29.55377007 183.42303467]
[-22.28034210 170.30445862]
[-9.47325325 162.49559021]
[5.51975536 162.03764343]
[18.77954674 169.05033875]
[26.84004211 181.70057678]
[27.59443283 196.68074036]
[35.82323837 184.13934326]
[36.33615112 169.25357056]
[50.37585449 161.95991516]
[50.88876724 147.07414246]
[64.92847443 139.78050232]
[73.15727997 127.23909760]
[81.38608551 114.69770050]
[89.61489868 102.15629578]
[97.37128448 89.31735229]
[104.64451599 76.19866180]
[111.91774750 63.07996750]
[119.19097900 49.96127319]
[120.61514282 40.93854904]
[126.67140961 36.70257568]
[134.13914490 23.69362450]
[141.60688782 10.68467236]
[141.76701355 -5.13572359]
[154.81356812 -12.32161140]
[162.28129578 -25.33056450]
[162.64672852 -31.93192673]
[165.81544495 -36.64958572]
[170.17001343 -38.61090469]
[178.02175903 -51.39174652]
[185.87351990 -64.17259216]
[193.72528076 -76.95343018]
[201.57702637 -89.73427582]
[201.65229797 -108.14828491]
[217.39825439 -115.89631653]
[225.05885315 -128.79264832]
[232.71945190 -141.68896484]
[240.38005066 -154.58529663]
[247.84779358 -167.59425354]
[255.12101746 -180.71293640]
[255.04559326 -196.53396606]
[267.98370361 -203.91329956]
[275.25692749 -217.03199768]
[282.53015137 -230.15069580]
[289.80337524 -243.26939392]
[297.07659912 -256.38809204]
[304.34985352 -269.50677490]
[292.27438354 -278.44198608]
[281.46853638 -288.87698364]
[272.11721802 -300.63317871]
[264.38046265 -313.50939941]
[258.39062500 -327.28536987]
[254.25021362 -341.72531128]
[252.03007507 -356.58215332]
[251.76820374 -371.60168457]
[253.46907043 -386.52691650]
[257.10357666 -401.10241699]
[262.60952759 -415.07879639]
[269.89270020 -428.21691895]
[278.82849121 -440.29196167]
[289.26397705 -451.09732056]
[301.02062988 -460.44805908]
[313.89724731 -468.18420410]
[327.67346191 -474.17340088]
[342.11361694 -478.31311035]
[356.97058105 -480.53253174]
[371.99011230 -480.79370117]
[386.91525269 -479.09213257]
[401.49060059 -475.45693970]
[415.46670532 -469.95031738]
[428.60449219 -462.66650391]
[440.67910767 -453.73013306]
[451.48394775 -443.29412842]
[460.83413696 -431.53704834]
[468.56967163 -418.66006470]
[474.55819702 -404.88354492]
[478.69723511 -390.44320679]
[480.91595459 -375.58615112]
[481.17642212 -360.56658936]
[479.47412109 -345.64154053]
[475.83822632 -331.06637573]
[470.33096313 -317.09051514]
[463.04650879 -303.95309448]
[454.10958862 -291.87890625]
[443.67306519 -281.07455444]
[431.91552734 -271.72491455]
[419.03817749 -263.98999023]
[405.26138306 -258.00210571]
[390.82083130 -253.86376953]
[375.96368408 -251.64575195]
[360.94409180 -251.38601685]
[346.01913452 -253.08901978]
[331.44415283 -256.72558594]
[317.46853638 -262.23355103]
[310.19531250 -249.11485291]
[302.92208862 -235.99615479]
[295.64883423 -222.87745667]
[288.37561035 -209.75877380]
[281.10238647 -196.64007568]
[281.69805908 -181.75738525]
[268.23971558 -173.43971252]
[260.96649170 -160.32101440]
[261.39801025 -155.56468201]
[258.84625244 -150.48674011]
[253.27636719 -146.92469788]
[245.61576843 -134.02836609]
[237.95518494 -121.13204956]
[230.29458618 -108.23571777]
[232.97532654 -96.43994904]
[226.69869995 -85.63311005]
[214.35787964 -81.88252258]
[206.50611877 -69.10167694]
[198.65435791 -56.32083511]
[190.80261230 -43.53999329]
[182.95085144 -30.75914955]
[175.29025269 -17.86282349]
[167.82250977 -4.85387039]
[168.19653320 10.03603840]
[154.61584473 18.15241432]
[147.14810181 31.16136551]
[139.68035889 44.17031860]
[132.30967712 57.23450470]
[125.03643799 70.35319519]
[117.76321411 83.47189331]
[110.48998260 96.59058380]
[125.40855408 95.02976990]
[136.03874207 105.61273193]
[134.54437256 120.53810883]
[122.02702332 128.80346680]
[107.71403503 124.31588745]
[102.15629578 110.38510132]
[93.92749023 122.92650604]
[85.69867706 135.46791077]
[77.46987152 148.00930786]
[76.36837769 163.79211426]
[62.91725540 170.18872070]
[61.81576538 185.97154236]
[48.36463928 192.36814880]
[40.13583374 204.90954590]
[32.86260223 218.02824402]
[26.58524132 231.65155029]
[20.30788231 245.27487183]
[14.13211346 258.94454956]
[8.05827904 272.65982056]
[1.98444521 286.37506104]
[-4.08938885 300.09033203]
[-10.16322231 313.80560303]
[-8.67661095 329.55682373]
[-20.90477562 338.06100464]
[-21.51829529 347.17480469]
[-27.17249489 351.93420410]
[-33.44985580 365.55752563]
[-39.72721481 379.18084717]
[-46.00457764 392.80413818]
[-52.28193665 406.42745972]
[-58.55929947 420.05078125]
[-46.19913101 428.61801147]
[-35.51455688 439.20153809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 208]
[33 207]
[34 206]
[35 205]
[36 204]
[37 203]
[38 201]
[40 199]
[41 198]
[42 197]
[43 196]
[44 195]
[46 194]
[47 193]
[48 192]
[59 191]
[60 190]
[62 188]
[64 186]
[65 185]
[66 184]
[67 183]
[68 177]
[69 176]
[70 175]
[71 174]
[73 173]
[74 172]
[75 171]
[77 169]
[78 168]
[81 167]
[82 166]
[83 165]
[84 164]
[85 163]
[87 160]
[88 159]
[89 158]
[90 157]
[91 154]
[92 153]
[94 151]
[95 150]
[96 149]
[97 148]
[98 147]
[99 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
