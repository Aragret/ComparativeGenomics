%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[47.81987762 623.52441406]
[47.43103027 638.82501221]
[39.96607208 652.18658447]
[27.14039040 660.53887939]
[11.90123558 661.96252441]
[-2.24954724 656.13037109]
[-12.06021118 644.38262939]
[-15.27633858 629.41882324]
[-11.15888596 614.67755127]
[-0.65401322 603.54626465]
[13.82433510 598.58276367]
[16.04945183 583.74871826]
[18.27457047 568.91467285]
[12.51085091 555.18048096]
[22.20968056 542.68072510]
[24.43479919 527.84667969]
[26.54942322 512.99652100]
[20.58186150 499.34960938]
[30.09351349 486.70687866]
[32.09752655 471.84133911]
[18.59884644 465.41119385]
[7.73385525 455.10964966]
[0.57525420 441.93640137]
[-2.16483593 427.17553711]
[-0.20569718 412.27035522]
[6.27328253 398.68222046]
[16.64895439 387.74722290]
[29.91432762 380.54498291]
[44.77628326 377.79187012]
[46.78030014 362.92633057]
[48.78431320 348.06079102]
[50.78832626 333.19528198]
[52.79233932 318.32974243]
[54.68563080 303.44970703]
[56.46809769 288.55599976]
[58.25056458 273.66229248]
[60.03303146 258.76855469]
[61.81549454 243.87484741]
[59.93536377 240.89198303]
[59.40659714 236.85026550]
[60.71112442 232.39477539]
[64.02456665 228.36138916]
[66.47029114 213.56211853]
[68.91602325 198.76284790]
[55.38780212 205.24259949]
[41.82115173 198.84370422]
[38.21689987 184.28315735]
[47.23196793 172.29446411]
[62.22077942 171.71525574]
[72.13368988 182.97088623]
[75.67336273 168.39451599]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[97.66007233 66.78666687]
[98.20281982 62.17594910]
[100.27081299 58.66333389]
[103.16814423 56.65390396]
[99.59048462 41.24251556]
[110.57285309 31.18086815]
[114.75986481 16.77708626]
[118.94687653 2.37330484]
[123.13388824 -12.03047752]
[121.94928741 -16.20788002]
[122.13675690 -20.14861298]
[123.45341492 -23.45040131]
[125.55068970 -25.83117294]
[128.02265930 -27.15311623]
[133.05957031 -41.28214645]
[138.09648132 -55.41117477]
[143.13340759 -69.54020691]
[148.17031860 -83.66923523]
[153.20722961 -97.79826355]
[158.24415588 -111.92729187]
[154.50718689 -129.95828247]
[168.30891418 -140.79707336]
[173.13490295 -154.99952698]
[177.64253235 -169.30621338]
[181.82954407 -183.70999146]
[176.31282043 -195.36883545]
[180.09672546 -207.27958679]
[190.63294983 -213.22219849]
[195.03393555 -227.56204224]
[199.43493652 -241.90188599]
[203.83593750 -256.24172974]
[208.23693848 -270.58157349]
[203.69857788 -288.42773438]
[217.00254822 -299.87197876]
[221.18955994 -314.27575684]
[225.26922607 -328.71032715]
[229.24133301 -343.17483521]
[233.21342468 -357.63937378]
[237.18551636 -372.10388184]
[223.59387207 -378.54116821]
[211.32666016 -387.24096680]
[200.75663757 -397.93890381]
[192.20504761 -410.30987549]
[185.93173218 -423.97796631]
[182.12734985 -438.52780151]
[180.90750122 -453.51724243]
[182.30926514 -468.49075317]
[186.29005432 -482.99331665]
[192.72886658 -496.58422852]
[201.43005371 -508.85046387]
[212.12918091 -519.41925049]
[224.50114441 -527.96948242]
[238.16993713 -534.24121094]
[252.72021484 -538.04394531]
[267.70977783 -539.26208496]
[282.68313599 -537.85864258]
[297.18527222 -533.87622070]
[310.77542114 -527.43585205]
[323.04067993 -518.73327637]
[333.60827637 -508.03295898]
[342.15707397 -495.66003418]
[348.42727661 -481.99050903]
[352.22836304 -467.43981934]
[353.44479370 -452.45010376]
[352.03964233 -437.47689819]
[348.05557251 -422.97525024]
[341.61367798 -409.38580322]
[332.90969849 -397.12152100]
[322.20819092 -386.55514526]
[309.83428955 -378.00778198]
[296.16406250 -371.73910522]
[281.61291504 -367.93966675]
[266.62307739 -366.72494507]
[251.65003967 -368.13180542]
[247.67794800 -353.66726685]
[243.70585632 -339.20275879]
[239.73374939 -324.73822021]
[240.99378967 -317.45578003]
[235.59333801 -310.08874512]
[231.40632629 -295.68496704]
[236.95555115 -284.93637085]
[233.58517456 -272.90206909]
[222.57678223 -266.18057251]
[218.17578125 -251.84074402]
[213.77478027 -237.50088501]
[209.37379456 -223.16104126]
[204.97279358 -208.82119751]
[209.81799316 -191.95433044]
[196.23332214 -179.52297974]
[192.04631042 -165.11920166]
[193.41493225 -161.86970520]
[193.27763367 -157.79586792]
[191.26409912 -153.61268616]
[187.33735657 -150.17352295]
[182.51136780 -135.97106934]
[187.57510376 -124.98539734]
[183.67071533 -113.11360168]
[172.37318420 -106.89037323]
[167.33625793 -92.76134491]
[162.29934692 -78.63231659]
[157.26243591 -64.50328827]
[152.22550964 -50.37425995]
[147.18859863 -36.24522781]
[142.15168762 -22.11619949]
[137.53767395 -7.84346581]
[133.35066223 6.56031609]
[129.16365051 20.96409798]
[124.97663879 35.36788177]
[128.85377502 49.74901581]
[117.57192230 60.84091568]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[90.24974060 171.93418884]
[86.71006775 186.51055908]
[83.71529388 201.20857239]
[81.26956177 216.00784302]
[78.82383728 230.80711365]
[76.70921326 245.65730286]
[74.92675018 260.55102539]
[73.14427948 275.44473267]
[71.36181641 290.33847046]
[69.57934570 305.23217773]
[71.66681671 314.12487793]
[67.65786743 320.33377075]
[65.65385437 335.19927979]
[63.64984131 350.06481934]
[61.64582825 364.93035889]
[59.64181519 379.79586792]
[73.24417877 386.38626099]
[84.12879944 396.84414673]
[91.23841858 410.13632202]
[93.88788605 424.95507812]
[91.83009338 439.84695435]
[85.27905273 453.35525513]
[74.88764191 464.16259766]
[61.68259430 471.21929932]
[46.96305466 473.84533691]
[44.95904160 488.71087646]
[50.78326416 503.42105103]
[41.41495132 515.00048828]
[43.36978912 523.92333984]
[39.26884079 530.07183838]
[37.04372406 544.90588379]
[42.64828873 559.70111084]
[33.10861206 571.13983154]
[30.88349724 585.97387695]
[28.65837860 600.80792236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[15 206]
[16 205]
[17 203]
[19 201]
[20 200]
[29 191]
[30 190]
[31 189]
[32 188]
[33 187]
[34 185]
[35 184]
[36 183]
[37 182]
[38 181]
[42 180]
[43 179]
[44 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[57 170]
[58 169]
[62 168]
[64 166]
[65 165]
[66 164]
[67 163]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[80 153]
[81 152]
[82 148]
[83 147]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[92 138]
[93 137]
[94 135]
[95 134]
[96 133]
[97 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
