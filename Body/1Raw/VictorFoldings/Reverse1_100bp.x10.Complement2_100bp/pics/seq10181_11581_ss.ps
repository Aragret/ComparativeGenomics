%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[68.16110992 567.81787109]
[66.31303406 552.90917969]
[66.46864319 537.88726807]
[68.62515259 523.02008057]
[72.74408722 508.57299805]
[78.75193787 494.80386353]
[86.54148102 481.95837402]
[95.97370911 470.26580811]
[106.88029480 459.93478394]
[119.06658936 451.14968872]
[132.31512451 444.06735229]
[127.06840515 430.01486206]
[121.82168579 415.96240234]
[116.57496643 401.90991211]
[111.32825470 387.85745239]
[106.08153534 373.80499268]
[94.38122559 364.58804321]
[96.80273438 348.95324707]
[91.55601501 334.90075684]
[90.04214478 349.82418823]
[85.17244720 364.01171875]
[77.20239258 376.71911621]
[66.55005646 387.27978516]
[53.77425385 395.13973999]
[39.54516983 399.88665771]
[24.60923386 401.27151489]
[9.74995708 399.22164917]
[-4.25317383 393.84463501]
[-16.66558266 385.42251587]
[-26.83613777 374.39709473]
[-34.23131180 361.34677124]
[-38.46317291 346.95608521]
[-39.30971909 331.97998047]
[-36.72654724 317.20410156]
[-30.84916687 303.40350342]
[-21.98588943 291.30215454]
[-10.60166645 281.53491211]
[2.70630860 274.61407471]
[17.23992538 270.90274048]
[32.23678207 270.59561157]
[46.91016769 273.70874023]
[60.49035263 280.07888794]
[72.26494598 289.37182617]
[81.61627197 301.10012817]
[88.05431366 314.65005493]
[88.27764130 299.65173340]
[88.50096893 284.65338135]
[88.72429657 269.65505981]
[88.94762421 254.65672302]
[89.17095184 239.65838623]
[89.39427948 224.66004944]
[81.84732819 211.81898499]
[89.78923798 198.13554382]
[81.59181213 189.24011230]
[81.65512085 176.74291992]
[90.49063110 167.34629822]
[90.93724060 152.35293579]
[91.38384247 137.35958862]
[91.83045197 122.36624146]
[92.27705383 107.37289429]
[91.16140747 92.41443634]
[88.49561310 77.65322113]
[85.82981873 62.89200592]
[83.16402435 48.13078690]
[80.49822998 33.36957169]
[77.83242798 18.60835457]
[73.22771454 10.71947670]
[75.23854828 3.60763216]
[72.79281616 -11.19163895]
[57.92189407 -14.03434277]
[44.94517517 -21.77880669]
[35.41897202 -33.47375107]
[30.47807693 -47.69548035]
[30.70058823 -62.72119141]
[36.04035187 -76.73766327]
[45.83485794 -88.06006622]
[58.88737106 -95.33448029]
[49.00351334 -107.68842316]
[54.56211090 -121.50693512]
[52.11638641 -136.30621338]
[49.67065811 -151.10548401]
[39.78680038 -163.45942688]
[45.34539795 -177.27793884]
[42.89966965 -192.07720947]
[40.45394516 -206.87648010]
[25.41240120 -207.45692444]
[10.79568672 -211.05366516]
[-2.79765558 -217.51940918]
[-14.81098747 -226.58940125]
[-24.75236893 -237.89222717]
[-32.21471024 -250.96504211]
[-36.89242935 -265.27252197]
[-38.59397507 -280.22875977]
[-37.24967575 -295.22134399]
[-32.91457748 -309.63635254]
[-25.76619911 -322.88345337]
[-16.09726143 -334.42019653]
[-4.30370283 -343.77416992]
[9.13153839 -350.56231689]
[23.65829849 -354.50671387]
[38.68171310 -355.44580078]
[53.58658600 -353.34109497]
[67.76257324 -348.27886963]
[80.62916565 -340.46633911]
[91.65950012 -330.22344971]
[100.40188599 -317.96966553]
[106.49832153 -304.20672607]
[109.69916534 -289.49822998]
[109.87335205 -274.44650269]
[107.01373291 -259.66787720]
[101.23742676 -245.76756287]
[92.78095245 -233.31472778]
[81.99061584 -222.81933594]
[69.30825043 -214.71115112]
[55.25321579 -209.32220459]
[57.69894028 -194.52293396]
[60.14466858 -179.72366333]
[69.85359192 -168.42825317]
[64.46993256 -153.55120850]
[66.91565704 -138.75193787]
[69.36138153 -123.95266724]
[79.07030487 -112.65726471]
[73.68664551 -97.78020477]
[88.38558197 -95.09199524]
[101.30210876 -87.52281952]
[110.86752319 -75.96958160]
[115.91247559 -61.81436920]
[115.80988312 -46.75915527]
[110.55284119 -32.62113190]
[100.75773621 -21.11339378]
[87.59208679 -13.63736629]
[90.03781891 1.16190457]
[92.59365082 15.94255829]
[95.25944519 30.70377541]
[97.92523956 45.46499252]
[100.59103394 60.22621155]
[103.25682831 74.98742676]
[105.92262268 89.74864197]
[111.12439728 75.67947388]
[121.25771332 64.61982727]
[134.81936646 58.21033096]
[149.79756165 57.40180588]
[163.97036743 62.31418610]
[175.23535156 72.21875000]
[181.92138672 85.64621735]
[183.03666687 100.60469818]
[178.41574097 114.87519073]
[168.74409485 126.34075928]
[155.45645142 133.30055237]
[140.52397156 134.72212219]
[126.16178131 130.39457703]
[114.50043488 120.95990753]
[107.27040863 107.81949615]
[106.82379913 122.81285095]
[106.37719727 137.80619812]
[105.93058777 152.79954529]
[105.48398590 167.79289246]
[114.58611298 183.80017090]
[104.78757477 198.35887146]
[112.31855011 212.27270508]
[104.39261627 224.88337708]
[104.16928864 239.88171387]
[103.94596100 254.88005066]
[103.72263336 269.87838745]
[103.49930573 284.87670898]
[103.27597809 299.87506104]
[103.05265045 314.87338257]
[105.60848236 329.65405273]
[110.85520172 343.70651245]
[122.93078613 353.92858887]
[120.13400269 368.55825806]
[125.38072205 382.61074829]
[130.62744141 396.66320801]
[135.87416077 410.71566772]
[141.12088013 424.76815796]
[146.36759949 438.82061768]
[161.01586914 435.48724365]
[175.97775269 434.13610840]
[190.98622131 434.79132080]
[205.77343750 437.44119263]
[220.07550049 442.03842163]
[233.63717651 448.50094604]
[246.21643066 456.71347046]
[257.58880615 466.52944946]
[267.55130005 477.77362061]
[275.92614746 490.24542236]
[282.56390381 503.72219849]
[287.34606934 517.96350098]
[290.18734741 532.71508789]
[291.03698730 547.71380615]
[289.87985229 562.69195557]
[286.73660278 577.38220215]
[281.66333008 591.52239990]
[274.75051880 604.86022949]
[266.12161255 617.15759277]
[255.93057251 628.19506836]
[244.35925293 637.77569580]
[231.61418152 645.72845459]
[217.92280579 651.91143799]
[203.52944946 656.21435547]
[188.69099426 658.56030273]
[173.67224121 658.90753174]
[158.74122620 657.24981689]
[144.16439819 653.61663818]
[130.20191956 648.07299805]
[117.10293579 640.71771240]
[105.10123444 631.68206787]
[94.41100311 621.12731934]
[85.22300720 609.24188232]
[77.70122528 596.23779297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 176]
[12 175]
[13 174]
[14 173]
[15 172]
[16 171]
[18 169]
[19 168]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 162]
[51 161]
[53 159]
[56 157]
[57 156]
[58 155]
[59 154]
[60 153]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[66 133]
[68 132]
[69 131]
[77 123]
[79 121]
[80 120]
[81 119]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
