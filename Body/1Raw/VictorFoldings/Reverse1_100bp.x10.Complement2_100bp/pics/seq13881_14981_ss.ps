%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[76.73972321 660.49761963]
[66.90918732 649.12176514]
[59.08527374 636.28289795]
[53.48141098 622.33129883]
[50.25048065 607.64764404]
[49.48062897 592.63238525]
[51.19285202 577.69525146]
[55.34043884 563.24371338]
[61.81024551 549.67199707]
[70.42576599 537.35034180]
[80.95197296 526.61492920]
[93.10168457 517.75866699]
[106.54346466 511.02304077]
[120.91060638 506.59188843]
[118.90659332 491.72634888]
[116.90258026 476.86080933]
[114.89856720 461.99530029]
[112.89455414 447.12976074]
[99.09692383 437.51394653]
[96.47129822 420.56045532]
[107.12507629 406.68542480]
[104.89995575 391.85137939]
[102.67484283 377.01733398]
[100.44972229 362.18328857]
[98.22460938 347.34924316]
[95.99948883 332.51519775]
[90.59220886 346.50668335]
[80.54978180 357.64892578]
[67.19346619 364.47598267]
[52.28051758 366.08966064]
[37.77298737 362.27764893]
[25.57959175 353.54144287]
[17.30458260 341.03048706]
[14.03667641 326.39077759]
[16.20582581 311.54846191]
[23.52663994 298.45623779]
[35.03594208 288.83666992]
[49.21948242 283.95538330]
[64.21117401 284.45452881]
[78.03860474 290.26852417]
[88.88253021 300.63235474]
[95.31687164 314.18481445]
[96.43251801 299.22637939]
[97.21383667 284.24673462]
[97.54881287 269.25048828]
[97.77214050 254.25213623]
[97.99546814 239.25379944]
[98.21879578 224.25546265]
[98.44212341 209.25712585]
[98.10714722 194.26086426]
[97.21433258 179.28746033]
[88.73321533 167.04328918]
[95.63539124 152.80705261]
[94.74257660 137.83364868]
[80.67655182 132.94889832]
[69.54692841 123.05722046]
[63.04495621 109.66176605]
[62.15868378 94.79810333]
[67.02278900 80.72492981]
[76.89811707 69.58079529]
[90.28401947 63.05917358]
[89.39120483 48.08576584]
[88.49838257 33.11236191]
[87.60556793 18.13895607]
[86.71275330 3.16554976]
[76.21882629 -11.96584129]
[84.67942810 -27.34066391]
[83.56377411 -42.29911804]
[82.44812775 -57.25757217]
[81.33248138 -72.21602631]
[65.32743835 -79.47356415]
[55.25407028 -93.76474762]
[53.81372833 -111.10053253]
[61.31332016 -126.69763184]
[75.60547638 -136.29829407]
[74.04495239 -151.21688843]
[72.48442841 -166.13549805]
[70.92390442 -181.05410767]
[61.79289246 -193.97444153]
[68.16412354 -207.43759155]
[59.03311157 -220.35794067]
[65.40435028 -233.82109070]
[62.73035431 -237.24217224]
[61.41625214 -240.96206665]
[61.38899231 -244.51660156]
[62.43227768 -247.51295471]
[64.22226715 -249.67028809]
[63.55247879 -264.65533447]
[55.20668793 -278.09625244]
[62.36796570 -291.15631104]
[61.69818115 -306.14135742]
[60.91685867 -321.12100220]
[60.02404404 -336.09439087]
[59.13122940 -351.06781006]
[44.48635864 -354.86029053]
[31.73129082 -362.99438477]
[22.11563873 -374.67318726]
[16.58144569 -388.75253296]
[15.67089367 -403.85305786]
[19.47319221 -418.49539185]
[27.61582947 -431.24499512]
[39.30107117 -440.85281372]
[53.38412094 -446.37756348]
[68.48526001 -447.27801514]
[83.12503052 -443.46591187]
[95.86918640 -435.31472778]
[105.46917725 -423.62304688]
[110.98450470 -409.53628540]
[111.87481689 -394.43457031]
[108.05289459 -379.79733276]
[99.89318085 -367.05865479]
[88.19507599 -357.46649170]
[74.10463715 -351.96060181]
[74.99745178 -336.98721313]
[75.89026642 -322.01379395]
[79.42631531 -315.52395630]
[76.68321991 -306.81112671]
[77.35300446 -291.82611084]
[85.65089417 -279.45700073]
[78.53752136 -265.32510376]
[79.20730591 -250.34007263]
[80.32295227 -235.38162231]
[89.34234619 -223.52836609]
[83.08273315 -208.99812317]
[92.10212708 -197.14486694]
[85.84251404 -182.61462402]
[87.40303040 -167.69601440]
[88.96355438 -152.77742004]
[90.52407837 -137.85881042]
[102.54988861 -133.98605347]
[112.25347900 -125.82265472]
[118.17056274 -114.55429077]
[119.39083099 -101.83854675]
[115.69782257 -89.56105804]
[107.60633850 -79.55591583]
[96.29093170 -73.33167267]
[97.40658569 -58.37321854]
[98.52223206 -43.41476440]
[99.63787842 -28.45631218]
[108.59622955 -20.32768631]
[109.64811707 -7.87468338]
[101.68615723 2.27273393]
[102.57897186 17.24613953]
[103.47179413 32.21954727]
[104.36460876 47.19295120]
[105.25742340 62.16635513]
[119.32344818 67.05110931]
[130.45307922 76.94277954]
[136.95504761 90.33823395]
[137.84132385 105.20189667]
[132.97721863 119.27507019]
[123.10188293 130.41920471]
[109.71598053 136.94082642]
[110.60879517 151.91423035]
[119.15378571 165.22940063]
[112.18774414 178.39463806]
[113.08055878 193.36805725]
[124.83762360 184.05293274]
[139.48458862 187.28813171]
[146.22425842 200.68875122]
[140.08837891 214.37638855]
[125.60012054 218.26100159]
[113.44046783 209.48045349]
[113.21714020 224.47879028]
[112.99380493 239.47712708]
[112.77047729 254.47546387]
[112.54714966 269.47381592]
[115.54844666 278.10107422]
[112.20719147 284.69332886]
[114.68292999 289.28875732]
[115.10607147 293.91198730]
[113.80975342 297.77651978]
[111.39096832 300.34201050]
[110.27532196 315.30047607]
[110.83353424 330.29006958]
[113.05864716 345.12411499]
[115.28376770 359.95816040]
[117.50888824 374.79220581]
[119.73400116 389.62625122]
[121.95912170 404.46029663]
[133.64016724 411.16607666]
[139.24449158 423.19946289]
[136.92919922 436.07275391]
[127.76008606 445.12576294]
[129.76409912 459.99127197]
[131.76811218 474.85681152]
[133.77212524 489.72232056]
[135.77613831 504.58786011]
[150.80378723 505.05633545]
[165.54934692 507.99200439]
[179.61054993 513.31481934]
[192.60379028 520.87957764]
[204.17460632 530.47991943]
[214.00732422 541.85388184]
[221.83370972 554.69128418]
[227.44026184 568.64178467]
[230.67402649 583.32482910]
[231.44676208 598.33990479]
[229.73742676 613.27740479]
[225.59262085 627.72973633]
[219.12542725 641.30267334]
[210.51228333 653.62597656]
[199.98814392 664.36340332]
[187.84013367 673.22204590]
[174.39965820 679.96026611]
[160.03337097 684.39416504]
[145.13319397 686.40289307]
[130.10563660 685.93151855]
[115.36063385 682.99298096]
[101.30046082 677.66748047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[21 180]
[22 179]
[23 178]
[24 177]
[25 176]
[26 175]
[42 174]
[43 173]
[44 169]
[45 167]
[46 166]
[47 165]
[48 164]
[49 163]
[50 157]
[51 156]
[53 154]
[54 153]
[61 146]
[62 145]
[63 144]
[64 143]
[65 142]
[67 139]
[68 138]
[69 137]
[70 136]
[75 129]
[76 128]
[77 127]
[78 126]
[80 124]
[82 122]
[87 121]
[88 120]
[90 118]
[91 117]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
