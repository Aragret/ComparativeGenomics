%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[106.43349457 600.80072021]
[91.40115356 604.26947021]
[76.88751984 599.03894043]
[67.52384949 586.77825928]
[66.29804230 571.39965820]
[73.60125732 557.81042480]
[87.10305786 550.34686279]
[87.99588013 535.37347412]
[88.88869476 520.40008545]
[89.78150940 505.42666626]
[81.09294128 490.17950439]
[91.36042023 474.89355469]
[92.03020477 459.90853882]
[76.09421539 454.32348633]
[62.64138412 444.08746338]
[52.98844528 430.18844604]
[48.08448792 413.97360229]
[48.41765594 397.01876831]
[53.96656036 380.97518921]
[64.20130157 367.40881348]
[78.13404846 357.64739990]
[94.41438293 352.65060425]
[94.41438293 337.65060425]
[94.41438293 322.65060425]
[94.41438293 307.65060425]
[86.67708588 294.92333984]
[94.41438293 281.12316895]
[94.41438293 266.12316895]
[94.41438293 251.12315369]
[94.41438293 236.12315369]
[94.30271912 221.12358093]
[94.07939148 206.12524414]
[93.85606384 191.12690735]
[93.63273621 176.12857056]
[78.90468597 173.42402649]
[64.98714447 167.89845276]
[52.41483688 159.76414490]
[41.67080688 149.33361816]
[33.16785812 137.00762939]
[27.23267937 123.25977325]
[24.09330750 108.61824799]
[23.87036133 93.64559937]
[26.57240868 78.91709137]
[32.09563065 64.99861145]
[40.22782135 52.42493439]
[50.65653229 41.67914581]
[62.98107529 33.17411041]
[76.72792816 27.23661041]
[91.36892700 24.09476471]
[91.14559937 9.09642696]
[90.92227173 -5.90191031]
[90.69894409 -20.90024757]
[90.47561646 -35.89858627]
[90.25228882 -50.89692307]
[90.02896118 -65.89525604]
[74.89844513 -75.88651276]
[68.84741211 -92.81178284]
[74.12095642 -109.83061218]
[88.42721558 -120.18448639]
[87.75743103 -135.16952515]
[87.08763885 -150.15455627]
[86.41785431 -165.13960266]
[83.18749237 -170.90815735]
[83.33338165 -176.58934021]
[85.95795441 -180.57940674]
[71.54235840 -183.11775208]
[57.84548569 -188.26826477]
[45.33616638 -195.85299683]
[34.44228363 -205.61076355]
[25.53612900 -217.20603943]
[18.92169189 -230.24055481]
[14.82427788 -244.26696777]
[13.38283825 -258.80419922]
[14.64525509 -273.35391235]
[18.56675339 -287.41766357]
[25.01148796 -300.51394653]
[33.75724792 -312.19464111]
[44.50311661 -322.06036377]
[56.87982941 -329.77416992]
[70.46245575 -335.07305908]
[84.78500366 -337.77679443]
[84.78500366 -352.77679443]
[84.78500366 -367.77679443]
[84.78500366 -382.77679443]
[84.78500366 -397.77679443]
[84.56167603 -412.77514648]
[84.11507416 -427.76849365]
[83.66846466 -442.76184082]
[83.22185516 -457.75518799]
[80.07773590 -463.57119751]
[80.30819702 -469.24957275]
[82.99188232 -473.20013428]
[82.99188232 -488.20013428]
[82.99188232 -503.20013428]
[82.99188232 -518.20013428]
[82.99188232 -533.20013428]
[82.99188232 -548.20013428]
[68.73921204 -553.36126709]
[57.11328125 -563.08819580]
[49.51797867 -576.20642090]
[46.87047577 -591.13177490]
[49.49047089 -606.06201172]
[57.06158447 -619.19415283]
[68.66957092 -628.94250488]
[82.91270447 -634.12988281]
[98.07106018 -634.12988281]
[112.31419373 -628.94250488]
[123.92218018 -619.19415283]
[131.49328613 -606.06201172]
[134.11328125 -591.13177490]
[131.46578979 -576.20642090]
[123.87048340 -563.08819580]
[112.24455261 -553.36126709]
[97.99188232 -548.20013428]
[97.99188232 -533.20013428]
[97.99188232 -518.20013428]
[97.99188232 -503.20013428]
[97.99188232 -488.20013428]
[97.99188232 -473.20013428]
[98.21520996 -458.20178223]
[98.66181183 -443.20843506]
[99.10842133 -428.21508789]
[99.55502319 -413.22174072]
[102.35514069 -409.35284424]
[102.75457001 -403.68383789]
[99.78500366 -397.77679443]
[99.78500366 -382.77679443]
[99.78500366 -367.77679443]
[99.78500366 -352.77679443]
[99.78500366 -337.77679443]
[114.89169312 -334.84402466]
[129.14372253 -329.02716064]
[141.99600220 -320.54672241]
[152.95663452 -309.72512817]
[161.60565186 -296.97445679]
[167.61120605 -282.78073120]
[170.74223328 -267.68542480]
[170.87736511 -252.26477051]
[168.00961304 -237.10778809]
[162.24678040 -222.79377747]
[153.80728149 -209.87016296]
[143.01200867 -198.83158875]
[130.27198792 -190.10096741]
[116.07286835 -184.01329041]
[100.95629120 -180.80273438]
[101.40289307 -165.80938721]
[102.07267761 -150.82434082]
[102.74246979 -135.83930969]
[103.41225433 -120.85427094]
[114.42227173 -115.74010468]
[122.25950623 -106.37470245]
[125.38957977 -94.49600220]
[123.15915680 -82.34261322]
[115.93114471 -72.23200989]
[105.02729797 -66.11859131]
[105.25062561 -51.12025070]
[105.47395325 -36.12191391]
[105.69728088 -21.12357521]
[105.92060852 -6.12523794]
[106.14393616 8.87309933]
[106.36726379 23.87143707]
[121.09531403 26.57597160]
[135.01286316 32.10154724]
[147.58515930 40.23585892]
[158.32919312 50.66638565]
[166.83213806 62.99236679]
[172.76731873 76.74022675]
[175.90669250 91.38175201]
[176.12963867 106.35440063]
[173.42759705 121.08290863]
[167.90437317 135.00138855]
[159.77217102 147.57507324]
[149.34347534 158.32086182]
[137.01892090 166.82588196]
[123.27207184 172.76339722]
[108.63107300 175.90524292]
[108.85440063 190.90357971]
[109.07772827 205.90191650]
[109.30105591 220.90025330]
[112.55788422 229.43434143]
[109.41438293 236.12315369]
[109.41438293 251.12315369]
[109.41438293 266.12316895]
[109.41438293 281.12316895]
[117.15168762 294.92333984]
[109.41438293 307.65060425]
[109.41438293 322.65060425]
[109.41438293 337.65060425]
[109.41438293 352.65060425]
[122.16346741 356.07299805]
[133.70890808 362.45104980]
[143.37777710 371.40728760]
[150.60792542 382.41418457]
[154.98060608 394.82513428]
[156.24479675 407.91253662]
[154.33149719 420.91030884]
[149.35760498 433.05899048]
[141.61869812 443.64978027]
[131.57148743 452.06616211]
[119.80687714 457.81970215]
[107.01524353 460.57830811]
[106.34545898 475.56335449]
[114.45761108 485.59109497]
[113.59124756 498.05838013]
[104.75491333 506.31948853]
[103.86209869 521.29290771]
[102.96928406 536.26629639]
[102.07646942 551.23968506]
[114.59570312 560.25482178]
[120.23235321 574.61560059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[12 202]
[13 201]
[22 189]
[23 188]
[24 187]
[25 186]
[27 184]
[28 183]
[29 182]
[30 181]
[31 179]
[32 178]
[33 177]
[34 176]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[59 149]
[60 148]
[61 147]
[62 146]
[65 145]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 123]
[87 122]
[88 121]
[89 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
