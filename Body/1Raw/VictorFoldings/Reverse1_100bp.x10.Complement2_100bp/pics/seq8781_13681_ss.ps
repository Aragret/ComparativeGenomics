%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[247.21679688 297.68237305]
[256.58074951 285.94509888]
[245.93475342 275.37805176]
[235.28874207 264.81100464]
[224.64273071 254.24395752]
[213.99671936 243.67691040]
[203.27233887 233.18942261]
[192.47018433 222.78204346]
[177.93638611 219.52351379]
[173.36662292 204.37664795]
[162.56445312 193.96926880]
[165.14659119 208.74534607]
[160.08769226 222.86651611]
[148.71011353 232.64154053]
[133.98796082 235.51524353]
[119.76955414 230.73645020]
[109.77155304 219.55432129]
[106.60740662 204.89184570]
[111.10422516 190.58175659]
[122.08654022 180.36466980]
[136.68360901 176.91131592]
[151.07902527 181.12394714]
[144.51112366 177.73506165]
[141.89428711 168.98348999]
[132.93359375 156.95411682]
[119.12557983 151.36947632]
[117.08663177 135.68020630]
[108.12593079 123.65083313]
[99.16523743 111.62145233]
[100.17679596 126.58730316]
[94.67518616 140.54196167]
[83.72267151 150.79098511]
[69.43401337 155.35545349]
[54.56813812 153.35403442]
[41.99540329 145.17318726]
[34.14340591 132.39248657]
[32.52825165 117.47969818]
[37.46179581 103.31424713]
[47.99145126 92.63124847]
[62.08410263 87.49343109]
[77.01868439 88.89282990]
[89.91248322 96.56011200]
[83.23229218 83.12973022]
[76.55209351 69.69935608]
[69.87190247 56.26898193]
[63.24815369 49.97900391]
[63.19390106 42.58855057]
[56.71440506 29.06020355]
[50.23491287 15.53185749]
[45.92731476 12.58368587]
[43.43095779 8.66941833]
[42.81052780 4.64075708]
[43.78330994 1.25165224]
[37.91434860 -12.55252457]
[32.04539108 -26.35670090]
[26.17642975 -40.16087723]
[20.30746841 -53.96505356]
[5.92545414 -59.94798279]
[0.17013891 -74.03099060]
[5.96257782 -87.70516968]
[0.09361699 -101.50934601]
[-6.18374348 -115.13265991]
[-12.86393833 -128.56303406]
[-19.54413223 -141.99340820]
[-26.22432709 -155.42378235]
[-39.29784012 -164.33410645]
[-38.03822708 -179.17535400]
[-44.71842194 -192.60572815]
[-51.39861679 -206.03611755]
[-65.68381500 -201.37232971]
[-80.49585724 -198.83827209]
[-95.51900482 -198.48797607]
[-110.43305969 -200.32888794]
[-124.92011261 -204.32176208]
[-138.67137146 -210.38151550]
[-151.39373779 -218.37896729]
[-162.81604004 -228.14366150]
[-172.69477844 -239.46745300]
[-180.81941223 -252.10896301]
[-187.01676941 -265.79876709]
[-191.15473938 -280.24505615]
[-193.14512634 -295.13989258]
[-192.94549561 -310.16580200]
[-190.56011963 -325.00250244]
[-186.03982544 -339.33377075]
[-179.48097229 -352.85409546]
[-171.02337646 -365.27532959]
[-160.84727478 -376.33267212]
[-149.16961670 -385.79046631]
[-136.23927307 -393.44711304]
[-122.33187866 -399.13940430]
[-107.74386597 -402.74600220]
[-92.78617096 -404.19006348]
[-77.77762604 -403.44076538]
[-63.03813553 -400.51412964]
[-48.88187790 -395.47247314]
[-35.61058807 -388.42330933]
[-23.50714493 -379.51687622]
[-12.82953835 -368.94302368]
[-3.80535936 -356.92712402]
[3.37304044 -343.72528076]
[8.55265331 -329.61892700]
[11.62307453 -314.90869141]
[12.51885891 -299.90820312]
[11.22091293 -284.93710327]
[7.75690126 -270.31457520]
[2.20066071 -256.35226440]
[-5.32937765 -243.34779358]
[-14.67271042 -231.57833862]
[-25.63018417 -221.29478455]
[-37.96823883 -212.71630859]
[-31.28804588 -199.28593445]
[-24.60785103 -185.85556030]
[-12.01215076 -177.90586853]
[-12.79395199 -162.10398865]
[-6.11375713 -148.67361450]
[0.56643766 -135.24322510]
[7.24663210 -121.81285858]
[9.85816956 -120.79402924]
[12.22348785 -118.67934418]
[13.92317295 -115.55741119]
[14.57759666 -111.66687775]
[13.89779377 -107.37830353]
[19.76675415 -93.57412720]
[33.63306808 -88.25803375]
[39.78167725 -74.34223938]
[34.11164474 -59.83401489]
[39.98060608 -46.02983856]
[45.84956741 -32.22566223]
[51.71852875 -18.42148590]
[57.58748627 -4.61730862]
[63.76325607 9.05236149]
[70.24275208 22.58070755]
[76.72225189 36.10905457]
[83.30227661 49.58878708]
[89.98246765 63.01916504]
[96.66266632 76.44953918]
[103.34285736 89.87991333]
[111.19461823 102.66075897]
[120.15531158 114.69013214]
[129.11601257 126.71951294]
[143.56494141 133.16456604]
[144.96296692 147.99342346]
[153.92366028 160.02279663]
[162.97366333 171.98513794]
[172.97183228 183.16711426]
[183.77398682 193.57447815]
[199.08042908 197.57742310]
[202.87756348 211.97988892]
[213.67971802 222.38725281]
[222.03099060 226.08779907]
[224.56376648 233.03091431]
[235.20977783 243.59796143]
[245.85578918 254.16500854]
[256.50180054 264.73205566]
[267.14779663 275.29910278]
[278.81503296 265.84802246]
[291.43572998 257.71380615]
[304.86190796 250.99183655]
[318.93615723 245.76092529]
[333.49349976 242.08239746]
[348.36322021 239.99938965]
[363.37097168 239.53631592]
[378.34082031 240.69860840]
[393.09722900 243.47264099]
[407.46722412 247.82588196]
[421.28228760 253.70730591]
[434.38046265 261.04794312]
[446.60818481 269.76174927]
[457.82205200 279.74652100]
[467.89065552 290.88522339]
[476.69589233 303.04727173]
[484.13455200 316.09002686]
[490.11938477 329.86062622]
[494.58026123 344.19754028]
[497.46487427 358.93276978]
[498.73937988 373.89346313]
[498.38885498 388.90426636]
[496.41738892 403.78918457]
[492.84811401 418.37368774]
[487.72290039 432.48678589]
[481.10177612 445.96298218]
[473.06243896 458.64431763]
[463.69909668 470.38208008]
[453.12155151 481.03866577]
[441.45382690 490.48913574]
[428.83270264 498.62265015]
[415.40615845 505.34390259]
[401.33160400 510.57406616]
[386.77407837 514.25177002]
[371.90426636 516.33398438]
[356.89648438 516.79626465]
[341.92669678 515.63317871]
[327.17041016 512.85833740]
[312.80065918 508.50433350]
[298.98593140 502.62216187]
[285.88812256 495.28082275]
[273.66088867 486.56634521]
[262.44754028 476.58096313]
[252.37954712 465.44171143]
[243.57496643 453.27920532]
[236.13702393 440.23605347]
[230.15290833 426.46514893]
[225.69281006 412.12796021]
[222.80900574 397.39260864]
[221.53529358 382.43182373]
[221.88662720 367.42105103]
[223.85888672 352.53622437]
[227.42893982 337.95193481]
[232.55493164 323.83911133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[7 150]
[8 149]
[10 147]
[11 146]
[22 145]
[24 144]
[25 143]
[27 141]
[28 140]
[29 139]
[42 138]
[43 137]
[44 136]
[45 135]
[47 134]
[48 133]
[49 132]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[60 124]
[61 123]
[62 118]
[63 117]
[64 116]
[65 115]
[67 113]
[68 112]
[69 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
