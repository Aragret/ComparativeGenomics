%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[89.82373810 503.99017334]
[78.98036957 514.38616943]
[66.87278748 523.27777100]
[53.70816040 530.51293945]
[39.71176147 535.96783447]
[25.12308311 539.54913330]
[10.19175720 541.19549561]
[-4.82672215 540.87878418]
[-19.67536736 538.60443115]
[-34.10010147 534.41131592]
[-47.85409546 528.37121582]
[-60.70199966 520.58746338]
[-72.42397308 511.19332886]
[-82.81943512 500.34945679]
[-91.71051025 488.24145508]
[-98.94505310 475.07647705]
[-104.39926910 461.07983398]
[-107.97984314 446.49096680]
[-109.62549591 431.55957031]
[-109.30806732 416.54110718]
[-107.03299713 401.69256592]
[-102.83921051 387.26803589]
[-96.79846954 373.51431274]
[-89.01412964 360.66677856]
[-79.61940765 348.94525146]
[-68.77504730 338.55032349]
[-56.66661835 329.65982056]
[-43.50130463 322.42590332]
[-29.50438690 316.97235107]
[-14.91536617 313.39248657]
[0.01611642 311.74752808]
[15.03456497 312.06567383]
[29.88299370 314.34146118]
[34.07000732 299.93768311]
[38.25701523 285.53387451]
[42.44402695 271.13009644]
[46.63103867 256.72631836]
[50.81805038 242.32254028]
[55.00506210 227.91876221]
[51.12791824 213.53762817]
[62.40977478 202.44572449]
[66.59678650 188.04194641]
[70.78379822 173.63816833]
[63.40748215 160.74919128]
[67.44852448 146.08206177]
[81.01767731 138.43249512]
[85.20468140 124.02870941]
[89.39169312 109.62493134]
[86.24539948 96.00170135]
[96.20452118 86.18805695]
[100.39153290 71.78427887]
[104.57854462 57.38049316]
[108.76555634 42.97671127]
[112.95256805 28.57292938]
[117.13957977 14.16914749]
[107.00574493 25.22832680]
[94.87762451 34.05491257]
[81.23826599 40.29734802]
[66.63092804 43.70699692]
[51.63741684 44.14805603]
[36.85491180 41.60295868]
[22.87219620 36.17307281]
[10.24619675 28.07466888]
[-0.52019793 17.63030434]
[-8.99816608 5.25597286]
[-14.85003376 -8.55545902]
[-17.84272194 -23.25388718]
[-17.85703659 -38.25387955]
[-14.89240456 -52.95799255]
[-9.06690598 -66.78057098]
[-0.61256999 -79.17105865]
[10.13387203 -89.63594818]
[22.74439240 -97.75843811]
[36.71672058 -103.21499634]
[51.49433899 -105.78830719]
[66.48867035 -105.37586212]
[81.10248566 -101.99409485]
[94.75373077 -95.77770233]
[106.89867401 -86.97428131]
[117.05359650 -75.93446350]
[124.81402588 -63.09795761]
[129.87086487 -48.97604752]
[132.02270508 -34.13119888]
[131.18383789 -19.15467262]
[127.38912964 -4.64689779]
[137.21971130 -15.97649097]
[147.05029297 -27.30608368]
[156.88087463 -38.63567734]
[166.71145630 -49.96527100]
[176.54203796 -61.29486465]
[186.37261963 -72.62445831]
[196.20320129 -83.95404816]
[206.03378296 -95.28364563]
[215.86436462 -106.61323547]
[225.69494629 -117.94282532]
[235.52552795 -129.27241516]
[245.35610962 -140.60202026]
[248.55632019 -156.09617615]
[262.74145508 -160.63835144]
[272.57202148 -171.96795654]
[262.32205200 -182.93862915]
[253.27500916 -194.92063904]
[245.52999878 -207.78269958]
[239.17189026 -221.38388062]
[234.27035522 -235.57516479]
[230.87907410 -250.20106506]
[229.03523254 -265.10134888]
[228.75900269 -280.11270142]
[230.05343628 -295.07073975]
[232.90434265 -309.81149292]
[237.28047180 -324.17349243]
[243.13389587 -337.99938965]
[250.40048218 -351.13766479]
[259.00061035 -363.44439697]
[268.84002686 -374.78472900]
[279.81094360 -385.03445435]
[291.79318237 -394.08120728]
[304.65542603 -401.82589722]
[318.25677490 -408.18368530]
[332.44818115 -413.08486938]
[347.07415771 -416.47579956]
[361.97445679 -418.31927490]
[376.98583984 -418.59515381]
[391.94381714 -417.30035400]
[406.68450928 -414.44909668]
[421.04641724 -410.07260132]
[434.87216187 -404.21884155]
[448.01028442 -396.95193481]
[460.31680298 -388.35153198]
[471.65689087 -378.51181030]
[481.90634155 -367.54064941]
[490.95281982 -355.55819702]
[498.69720459 -342.69577026]
[505.05462646 -329.09426880]
[509.95550537 -314.90274048]
[513.34606934 -300.27667236]
[515.18920898 -285.37631226]
[515.46466064 -270.36492920]
[514.16949463 -255.40698242]
[511.31790161 -240.66636658]
[506.94107056 -226.30456543]
[501.08697510 -212.47897339]
[493.81976318 -199.34103394]
[485.21902466 -187.03471375]
[475.37905884 -175.69485474]
[464.40762329 -165.44567871]
[452.42495728 -156.39950562]
[439.56234741 -148.65544128]
[425.96069336 -142.29832458]
[411.76904297 -137.39781189]
[397.14291382 -134.00759888]
[382.24249268 -132.16484070]
[367.23110962 -131.88970947]
[352.27319336 -133.18522644]
[337.53262329 -136.03720093]
[323.17095947 -140.41438293]
[309.34548950 -146.26881409]
[296.20773315 -153.53636169]
[283.90161133 -162.13737488]
[274.07104492 -150.80776978]
[271.57397461 -136.12397766]
[256.68569946 -130.77143860]
[246.85511780 -119.44184113]
[237.02453613 -108.11225128]
[227.19395447 -96.78265381]
[217.36337280 -85.45306396]
[207.53279114 -74.12346649]
[197.70220947 -62.79387665]
[187.87162781 -51.46428299]
[178.04104614 -40.13468933]
[168.21046448 -28.80509567]
[158.37988281 -17.47550201]
[148.54930115 -6.14590979]
[138.71871948 5.18368340]
[131.54336548 18.35615921]
[127.35634613 32.75994110]
[123.16933441 47.16372299]
[118.98232269 61.56750488]
[114.79531860 75.97129059]
[110.60830688 90.37506866]
[113.75460052 103.99829865]
[103.79547882 113.81194305]
[99.60846710 128.21572876]
[95.42145538 142.61950684]
[102.77533722 156.35115051]
[98.32392883 170.89898682]
[85.18757629 177.82516479]
[81.00057220 192.22895813]
[76.81356049 206.63273621]
[80.39122009 222.04412842]
[69.40884399 232.10577393]
[65.22183228 246.50955200]
[61.03482056 260.91333008]
[56.84780884 275.31710815]
[52.66079712 289.72088623]
[48.47378922 304.12469482]
[44.28677750 318.52847290]
[58.04134369 324.56723022]
[70.88999176 332.34973145]
[82.61286163 341.74279785]
[93.00935364 352.58566284]
[101.90158081 364.69284058]
[109.13737488 377.85711670]
[114.59292603 391.85324097]
[118.17488861 406.44177246]
[119.82196045 421.37301636]
[119.50596619 436.39151001]
[117.23230743 451.24026489]
[113.03989410 465.66519165]
[107.00045776 479.41946411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 197]
[34 196]
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[41 189]
[42 188]
[43 187]
[46 184]
[47 183]
[48 182]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
[90 169]
[91 168]
[92 167]
[93 166]
[94 165]
[95 164]
[96 163]
[97 162]
[99 160]
[100 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
