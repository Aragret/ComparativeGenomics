%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACACCGGGGAGUCUUACUAUAAACCGGAGUGCCCUCCUGUAUCGGAUACUUCCGACAACGAUAUCAACGUUCGUCCUCCUAUUACGGCUACAAAGUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[66.46755981 672.14434814]
[52.30323410 666.74548340]
[40.84167480 656.82537842]
[33.46691895 643.58197021]
[31.06950569 628.61437988]
[33.93893051 613.73010254]
[41.72870255 600.72644043]
[53.49816132 591.17364502]
[67.82609558 586.22528076]
[68.04942322 571.22692871]
[68.27275085 556.22863770]
[68.49607849 541.23028564]
[65.45251465 534.49542236]
[68.83604431 526.01074219]
[69.28264618 511.01739502]
[66.33969116 504.23794556]
[69.84916687 495.80459595]
[70.51895142 480.81958008]
[71.18874359 465.83453369]
[71.85852814 450.84948730]
[64.69724274 437.78942871]
[73.04303741 424.34851074]
[73.71282196 409.36346436]
[74.38260651 394.37841797]
[66.45366669 385.24285889]
[66.88903809 372.75311279]
[76.00040436 363.62371826]
[76.89321899 348.65029907]
[77.78604126 333.67691040]
[78.67885590 318.70349121]
[76.62451172 315.83782959]
[75.85611725 311.83474731]
[76.89313507 307.30950928]
[79.96063232 303.08605957]
[81.52115631 288.16744995]
[83.08167267 273.24884033]
[84.30865479 258.29910278]
[85.20146942 243.32569885]
[86.09428406 228.35229492]
[86.98709869 213.37889099]
[87.87991333 198.40548706]
[79.19134521 183.15834045]
[89.45882416 167.87237549]
[90.12860870 152.88734436]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[84.04065704 61.94199371]
[93.83919525 47.38329697]
[94.06252289 32.38496017]
[84.02046967 43.52754593]
[69.37119293 46.75225067]
[55.57851028 40.85633469]
[47.78674698 28.03882980]
[48.90203857 13.08034897]
[58.50841141 1.56003666]
[73.02292633 -2.22531652]
[87.03202820 3.13613248]
[95.31098175 15.64582062]
[97.31499481 0.78029257]
[99.31900787 -14.08523560]
[93.49478149 -28.79540253]
[102.86309814 -40.37486649]
[97.03887939 -55.08503342]
[106.40718842 -66.66449738]
[99.01976776 -83.53185272]
[110.27974701 -96.99215698]
[112.06221008 -111.88587189]
[113.84468079 -126.77958679]
[101.66298676 -136.02911377]
[95.78542328 -150.04164124]
[97.69813538 -165.01521301]
[106.78810883 -176.94116211]
[120.53446198 -182.67730713]
[122.31693268 -197.57102966]
[123.98847198 -212.47760010]
[125.54899597 -227.39620972]
[127.10951996 -242.31480408]
[128.67004395 -257.23339844]
[130.23056030 -272.15200806]
[131.79109192 -287.07061768]
[133.35160828 -301.98922729]
[134.91212463 -316.90783691]
[136.47265625 -331.82644653]
[138.03317261 -346.74505615]
[139.59370422 -361.66363525]
[125.03443146 -365.38461304]
[111.17213440 -371.18585205]
[98.30226898 -378.94372559]
[86.69917297 -388.49285889]
[76.61016083 -399.62973022]
[68.25027466 -412.11691284]
[61.79771805 -425.68829346]
[57.39001846 -440.05459595]
[55.12113190 -454.90954590]
[55.03941345 -469.93655396]
[57.14661026 -484.81533813]
[61.39780426 -499.22869873]
[67.70238495 -512.86944580]
[75.92596436 -525.44683838]
[85.89326477 -536.69274902]
[97.39182281 -546.36749268]
[110.17654419 -554.26489258]
[123.97493744 -560.21655273]
[138.49287415 -564.09564209]
[153.42091370 -565.81945801]
[168.44085693 -565.35131836]
[183.23254395 -562.70111084]
[197.48071289 -557.92535400]
[210.88165283 -551.12591553]
[223.14971924 -542.44763184]
[234.02340698 -532.07550049]
[243.27096558 -520.23065186]
[250.69526672 -507.16552734]
[256.13806152 -493.15859985]
[259.48333740 -478.50845337]
[260.65979004 -463.52734375]
[259.64236450 -448.53457642]
[256.45269775 -433.84976196]
[251.15884399 -419.78588867]
[243.87358093 -406.64273071]
[234.75222778 -394.70040894]
[223.98919678 -384.21350098]
[211.81390381 -375.40554810]
[198.48587036 -368.46426392]
[184.28918457 -363.53762817]
[169.52642822 -360.73065186]
[154.51229858 -360.10311890]
[152.95178223 -345.18450928]
[151.39126587 -330.26589966]
[149.83073425 -315.34732056]
[148.27021790 -300.42871094]
[146.70968628 -285.51010132]
[145.14916992 -270.59149170]
[143.58863831 -255.67288208]
[142.02812195 -240.75428772]
[140.46760559 -225.83567810]
[138.90707397 -210.91706848]
[141.33764648 -203.93753052]
[137.21064758 -195.78855896]
[135.42817688 -180.89483643]
[147.43270874 -172.07685852]
[153.45170593 -158.34268188]
[151.77696228 -143.34062195]
[142.75874329 -131.11080933]
[128.73840332 -124.99712372]
[126.95593262 -110.10340881]
[125.17346191 -95.20968628]
[132.40097046 -85.50970459]
[131.03785706 -73.08691406]
[121.27271271 -64.66048431]
[127.24028015 -51.01359940]
[117.72862244 -38.37085342]
[123.69618988 -24.72396851]
[114.18453217 -12.08122158]
[112.18051910 2.78430629]
[110.17650604 17.64983368]
[109.06085968 32.60828781]
[108.83753204 47.60662460]
[117.03495789 56.50205994]
[116.97164917 68.99925232]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[105.11364746 153.55712891]
[104.44386292 168.54216003]
[112.55601501 178.56991577]
[111.68965149 191.03720093]
[102.85331726 199.29830933]
[101.96050262 214.27171326]
[101.06768799 229.24511719]
[100.17487335 244.21852112]
[99.28205872 259.19192505]
[101.61987305 263.85900879]
[101.90518188 268.49279785]
[100.49437714 272.31701660]
[98.00028229 274.80935669]
[96.43975830 289.72796631]
[94.87923431 304.64657593]
[93.65225983 319.59631348]
[92.75944519 334.56970215]
[91.86663055 349.54312134]
[90.97380829 364.51654053]
[99.59530640 380.78771973]
[89.36764526 395.04821777]
[88.69786072 410.03326416]
[88.02807617 425.01828003]
[95.14144897 439.15017700]
[86.84356689 451.51928711]
[86.17378235 466.50430298]
[85.50399017 481.48934937]
[84.83420563 496.47439575]
[84.27600098 511.46398926]
[83.82939148 526.45733643]
[83.49441528 541.45361328]
[83.27108765 556.45196533]
[83.04776001 571.45025635]
[82.82443237 586.44860840]
[96.99868011 591.82135010]
[108.47850037 601.72033691]
[115.87765503 614.95019531]
[118.30264282 629.91326904]
[115.46065521 644.80285645]
[107.69486237 657.82086182]
[95.94302368 667.39532471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[14 199]
[15 198]
[17 197]
[18 196]
[19 195]
[20 194]
[22 192]
[23 191]
[24 190]
[27 188]
[28 187]
[29 186]
[30 185]
[34 184]
[35 183]
[36 182]
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 165]
[49 164]
[51 161]
[52 160]
[61 159]
[62 158]
[63 157]
[65 155]
[67 153]
[69 150]
[70 149]
[71 148]
[76 143]
[77 142]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
