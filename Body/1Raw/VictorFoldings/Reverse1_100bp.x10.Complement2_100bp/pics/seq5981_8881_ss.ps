%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[236.87567139 440.51321411]
[245.68415833 428.33828735]
[256.17150879 417.57571411]
[268.11422729 408.45486450]
[260.84100342 395.33618164]
[253.56776428 382.21746826]
[240.62965393 374.83813477]
[240.70507812 359.01712036]
[233.43185425 345.89843750]
[226.15861511 332.77972412]
[218.88539124 319.66104126]
[211.61216736 306.54235840]
[198.67405701 299.16299438]
[198.74948120 283.34197998]
[183.24119568 275.12857056]
[183.71421814 256.72048950]
[176.24647522 243.71153259]
[168.77873230 230.70257568]
[161.31098938 217.69361877]
[153.84324646 204.68467712]
[146.37551880 191.67572021]
[138.90777588 178.66676331]
[131.44003296 165.65782166]
[123.97229004 152.64886475]
[116.50454712 139.63990784]
[108.65279388 126.85906982]
[100.42398071 114.31766510]
[88.02384186 107.85793304]
[87.03461456 93.91114044]
[78.80580902 81.36973572]
[71.48155212 75.91143799]
[70.54946899 68.57979584]
[65.92205811 66.16438293]
[62.97825241 62.57449722]
[61.88348770 58.64810944]
[62.44664764 55.16741943]
[54.97890854 42.15846634]
[47.51116562 29.14951515]
[40.04342651 16.14056206]
[32.57568359 3.13161039]
[26.19734764 16.70794296]
[11.64228535 20.33426094]
[-0.36005062 11.33737659]
[-0.96198589 -3.65054083]
[10.28020382 -13.58095646]
[25.07783890 -11.13448143]
[12.13843727 -20.23846054]
[13.61887455 -35.05931091]
[7.13937902 -48.58765411]
[0.65988302 -62.11600113]
[-5.81961298 -75.64434814]
[-12.49980736 -89.07472229]
[-19.37921906 -102.40415192]
[-26.25863266 -115.73358154]
[-40.14568710 -110.03804779]
[-54.47629547 -105.57453156]
[-69.14139557 -102.37700653]
[-84.02938080 -100.46981049]
[-99.02693176 -99.86745453]
[-114.01990509 -100.57453156]
[-128.89421082 -102.58564758]
[-143.53662109 -105.88550568]
[-157.83570862 -110.44898987]
[-171.68264771 -116.24136353]
[-184.97206116 -123.21854401]
[-197.60278320 -131.32743835]
[-209.47869873 -140.50631714]
[-220.50942993 -150.68533325]
[-230.61100769 -161.78701782]
[-239.70657349 -173.72688293]
[-247.72688293 -186.41403198]
[-254.61090088 -199.75193787]
[-260.30624390 -213.63906860]
[-264.76956177 -227.96974182]
[-267.96688843 -242.63488770]
[-269.87387085 -257.52288818]
[-270.47601318 -272.52044678]
[-269.76873779 -287.51342773]
[-267.75738525 -302.38769531]
[-264.45733643 -317.03005981]
[-259.89364624 -331.32910156]
[-254.10108948 -345.17596436]
[-247.12371826 -358.46527100]
[-239.01464844 -371.09588623]
[-229.83560181 -382.97164917]
[-219.65641785 -394.00225830]
[-208.55459595 -404.10366821]
[-196.61460876 -413.19906616]
[-183.92733765 -421.21920776]
[-170.58934021 -428.10302734]
[-156.70213318 -433.79818726]
[-142.37139893 -438.26129150]
[-127.70620728 -441.45840454]
[-112.81816864 -443.36517334]
[-97.82060242 -443.96710205]
[-82.82764435 -443.25961304]
[-67.95339966 -441.24807739]
[-53.31107712 -437.94781494]
[-39.01211548 -433.38394165]
[-25.16533852 -427.59118652]
[-11.87612915 -420.61361694]
[0.75436944 -412.50436401]
[12.63003063 -403.32516479]
[23.66047287 -393.14581299]
[33.76174545 -382.04385376]
[42.85696793 -370.10375977]
[50.87692261 -357.41635132]
[57.76057053 -344.07827759]
[63.45552063 -330.19097900]
[67.91843414 -315.86016846]
[71.11534119 -301.19494629]
[73.02191162 -286.30688477]
[73.62363434 -271.30929565]
[72.91593170 -256.31634521]
[70.90418243 -241.44213867]
[67.60371399 -226.79986572]
[63.03963089 -212.50096130]
[57.24667358 -198.65426636]
[50.26892853 -185.36515808]
[42.15950775 -172.73477173]
[32.98012161 -160.85923767]
[22.80064011 -149.82894897]
[11.69853115 -139.72782898]
[-0.24170780 -130.63276672]
[-12.92920303 -122.61299133]
[-6.04979086 -109.28356171]
[0.82962179 -95.95413208]
[5.02625275 -93.67436981]
[7.83530378 -88.73410034]
[7.70873260 -82.12384033]
[14.18822861 -68.59549713]
[20.66772461 -55.06715012]
[27.14722061 -41.53880692]
[39.62316513 -33.40246582]
[38.60618591 -17.61397743]
[45.58463669 -4.33613062]
[53.05237961 8.67282200]
[60.52011871 21.68177414]
[67.98786163 34.69072723]
[75.45560455 47.69968033]
[83.21199036 60.53862000]
[91.34720612 73.14093018]
[99.57601929 85.68233490]
[111.97615814 92.14206696]
[112.96538544 106.08885956]
[121.19419098 118.63026428]
[125.13937378 120.44395447]
[128.01316833 123.14688110]
[129.66760254 126.29303741]
[130.11471558 129.43415833]
[129.51350403 132.17216492]
[136.98124695 145.18112183]
[144.44897461 158.19007874]
[151.91671753 171.19902039]
[159.38446045 184.20797729]
[166.85220337 197.21693420]
[174.31994629 210.22589111]
[181.78768921 223.23483276]
[189.25543213 236.24378967]
[196.72317505 249.25274658]
[208.94685364 253.36911011]
[214.89892578 264.35803223]
[211.86817932 276.06875610]
[225.32652283 284.38641357]
[224.73085022 299.26910400]
[232.00408936 312.38781738]
[239.27731323 325.50650024]
[246.55055237 338.62518311]
[253.82377625 351.74389648]
[267.28210449 360.06155396]
[266.68646240 374.94424438]
[273.95968628 388.06295776]
[281.23291016 401.18164062]
[295.29562378 395.88464355]
[309.97973633 392.69171143]
[324.97225952 391.67095947]
[339.95364380 392.84408569]
[354.60452271 396.18609619]
[368.61267090 401.62576294]
[381.67944336 409.04718018]
[393.52636719 418.29208374]
[403.90087891 429.16348267]
[412.58187866 441.42959595]
[419.38433838 454.82904053]
[424.16323853 469.07614136]
[426.81674194 483.86724854]
[427.28823853 498.88708496]
[425.56774902 513.81549072]
[421.69189453 528.33428955]
[415.74328613 542.13403320]
[407.84875488 554.92047119]
[398.17654419 566.42120361]
[386.93283081 576.39099121]
[374.35729980 584.61737061]
[360.71795654 590.92498779]
[346.30551147 595.17938232]
[331.42721558 597.28991699]
[316.40020752 597.21154785]
[301.54470825 594.94592285]
[287.17745972 590.54144287]
[273.60464478 584.09191895]
[261.11557007 575.73480225]
[249.97648621 565.64825439]
[240.42475891 554.04730225]
[232.66403198 541.17913818]
[226.85969543 527.31817627]
[223.13549805 512.75970459]
[221.57080078 497.81414795]
[222.19895935 482.80004883]
[225.00657654 468.03741455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[14 163]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 146]
[27 145]
[29 143]
[30 142]
[32 141]
[36 140]
[37 139]
[38 138]
[39 137]
[40 136]
[46 135]
[48 133]
[49 132]
[50 131]
[51 130]
[52 127]
[53 126]
[54 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
