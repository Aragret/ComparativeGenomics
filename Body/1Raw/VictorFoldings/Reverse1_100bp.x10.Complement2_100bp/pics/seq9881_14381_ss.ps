%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[57.98513412 717.80078125]
[46.90599060 727.93487549]
[34.79609299 736.81170654]
[21.79741859 744.32708740]
[8.06237125 750.39306641]
[-6.24801350 754.93841553]
[-20.96595383 757.90985107]
[-35.91888809 759.27252197]
[-50.93150330 759.01055908]
[-65.82778168 757.12689209]
[-80.43307495 753.64367676]
[-94.57614136 748.60180664]
[-108.09115601 742.06024170]
[-120.81967163 734.09582520]
[-132.61244202 724.80187988]
[-143.33122253 714.28735352]
[-152.85031128 702.67553711]
[-161.05813599 690.10260010]
[-167.85842896 676.71594238]
[-173.17149353 662.67248535]
[-176.93501282 648.13690186]
[-179.10487366 633.27960205]
[-179.65562439 618.27478027]
[-178.58082581 603.29840088]
[-175.89306641 588.52606201]
[-171.62385559 574.13085938]
[-165.82325745 560.28167725]
[-158.55926514 547.14080811]
[-149.91706848 534.86236572]
[-139.99797058 523.59033203]
[-128.91828918 513.45684814]
[-116.80791473 504.58071899]
[-103.80883789 497.06597900]
[-90.07346344 491.00076294]
[-75.76283264 486.45620728]
[-61.04473495 483.48553467]
[-46.09172440 482.12365723]
[-31.07912445 482.38644409]
[-16.18294716 484.27090454]
[-1.57784319 487.75488281]
[3.45907307 473.62585449]
[8.49598885 459.49682617]
[13.53290558 445.36779785]
[18.56982231 431.23876953]
[10.71893311 416.36590576]
[16.16106415 400.09634399]
[31.99178505 392.65274048]
[36.81778336 378.45028687]
[41.64377975 364.24783325]
[38.41265488 349.70791626]
[50.17853928 339.13082886]
[54.15063477 324.66629028]
[57.25474548 309.99099731]
[60.35885620 295.31570435]
[63.46296692 280.64041138]
[66.56707764 265.96508789]
[69.67118835 251.28979492]
[72.44680023 236.54882812]
[74.89252472 221.74955750]
[77.33824921 206.95028687]
[79.78398132 192.15101624]
[82.00909424 177.31697083]
[84.01310730 162.45144653]
[78.04554749 148.80456543]
[87.55720520 136.16181946]
[89.56121826 121.29628754]
[91.56523132 106.43075562]
[92.90346527 91.49057007]
[93.57324982 76.50553131]
[90.83015442 67.79271698]
[94.36620331 61.30286407]
[95.25901794 46.32946014]
[96.15183258 31.35605431]
[97.04465485 16.38264847]
[97.93746948 1.40924275]
[98.83028412 -13.56416321]
[88.61769867 -25.32600403]
[89.73644257 -40.49844742]
[101.01249695 -50.16210175]
[101.90531921 -65.13550568]
[102.79813385 -80.10890961]
[103.69094849 -95.08232117]
[104.58376312 -110.05572510]
[105.36508179 -125.03536224]
[106.03487396 -140.02040100]
[106.70465851 -155.00543213]
[107.37444305 -169.99047852]
[107.59777069 -184.98881531]
[107.37444305 -199.98715210]
[107.15111542 -214.98548889]
[98.45648193 -224.51261902]
[98.57923889 -237.00936890]
[106.90819550 -245.78176880]
[106.90819550 -260.78176880]
[98.35637665 -270.43728638]
[98.66517639 -282.93081665]
[107.12382507 -291.57824707]
[107.34715271 -306.57659912]
[93.26653290 -312.24234009]
[82.18611908 -322.61483765]
[75.60445404 -336.29132080]
[74.41164398 -351.42214966]
[78.76901245 -365.96096802]
[88.08725739 -377.94155884]
[101.10616302 -385.74365234]
[116.06503296 -388.31204224]
[130.94079590 -385.29940796]
[143.72163391 -377.11315918]
[152.67904663 -364.86044312]
[156.60160828 -350.19830322]
[154.95883179 -335.10971069]
[147.97288513 -321.63525391]
[136.58854675 -311.59725952]
[122.34548950 -306.35327148]
[122.12216187 -291.35491943]
[131.48287964 -276.51095581]
[121.90819550 -260.78176880]
[121.90819550 -245.78176880]
[131.48889160 -231.07879639]
[122.14945221 -215.20881653]
[122.37277985 -200.21047974]
[122.59610748 -185.21214294]
[124.51132202 -183.16517639]
[125.73110962 -180.23622131]
[125.91546631 -176.68638611]
[124.82510376 -172.89485168]
[122.35948181 -169.32069397]
[121.68969727 -154.33564758]
[121.01991272 -139.35061646]
[120.35012054 -124.36557770]
[123.19181824 -117.54306793]
[119.55716705 -109.16291046]
[118.66435242 -94.18949890]
[117.77153778 -79.21609497]
[116.87872314 -64.24269104]
[115.98590851 -49.26928329]
[126.03372192 -38.33415985]
[125.34158325 -23.13627815]
[113.80368805 -12.67134762]
[112.91087341 2.30205870]
[112.01805878 17.27546501]
[111.12524414 32.24887085]
[110.23242188 47.22227478]
[109.33960724 62.19568253]
[108.55828857 77.17531586]
[107.88850403 92.16035461]
[119.66014862 82.86367798]
[134.57316589 84.47672272]
[144.08470154 96.07546234]
[142.74610901 111.01561737]
[131.32420349 120.73878479]
[116.36196136 119.67509460]
[106.43075562 108.43476868]
[104.42674255 123.30030060]
[102.42272949 138.16583252]
[108.24694824 152.87599182]
[98.87863922 164.45545959]
[96.87462616 179.32098389]
[99.02838135 185.57182312]
[97.87515259 191.13662720]
[94.58325195 194.59674072]
[92.13751984 209.39601135]
[89.69179535 224.19528198]
[87.24607086 238.99455261]
[89.08566284 243.87953186]
[88.88734436 248.51785278]
[87.08634186 252.17454529]
[84.34648895 254.39390564]
[81.24237823 269.06921387]
[78.13826752 283.74450684]
[75.03415680 298.41979980]
[71.93004608 313.09512329]
[68.82593536 327.77041626]
[80.82375336 318.76751709]
[95.81974792 318.42083740]
[108.22078705 326.85968018]
[113.40158081 340.93661499]
[109.42982483 355.40121460]
[97.78689575 364.85861206]
[82.81530762 365.78137207]
[70.09909058 357.82537842]
[64.38099670 343.95681763]
[67.26692963 359.51260376]
[55.84623718 369.07382202]
[51.02024078 383.27627563]
[46.19424057 397.47872925]
[53.49890137 408.79492188]
[52.96022415 422.05844116]
[44.99874496 432.43612671]
[32.69885254 436.27569580]
[27.66193581 450.40472412]
[22.62501907 464.53375244]
[17.58810234 478.66278076]
[12.55118656 492.79180908]
[26.06655693 499.33261108]
[38.79549789 507.29635620]
[50.58877563 516.58966064]
[61.30811310 527.10363770]
[70.82783508 538.71490479]
[79.03633118 551.28741455]
[85.83734894 564.67370605]
[91.15116119 578.71691895]
[94.91546631 593.25225830]
[97.08612823 608.10943604]
[97.63768768 623.11419678]
[96.56369019 638.09063721]
[93.87672424 652.86315918]
[89.60828400 667.25860596]
[83.80843353 681.10809326]
[76.54515839 694.24932861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[47 186]
[48 185]
[49 184]
[51 182]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[58 164]
[59 163]
[60 162]
[61 161]
[62 158]
[63 157]
[65 155]
[66 154]
[67 153]
[68 146]
[69 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 130]
[85 129]
[86 128]
[87 127]
[88 122]
[89 121]
[90 120]
[93 118]
[94 117]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
