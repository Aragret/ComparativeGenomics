%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[105.75161743 666.89495850]
[92.92532349 658.91607666]
[82.86753082 647.64587402]
[76.39357758 633.99798584]
[74.02827454 619.07879639]
[75.96337891 604.09777832]
[82.04200745 590.26928711]
[91.77140045 578.71435547]
[104.36283112 570.36975098]
[118.79558563 565.91192627]
[118.57225800 550.91357422]
[118.34893036 535.91522217]
[118.12560272 520.91693115]
[117.79062653 505.92065430]
[117.34401703 490.92730713]
[116.89741516 475.93395996]
[116.45080566 460.94061279]
[116.00419617 445.94726562]
[115.44599152 430.95764160]
[114.66466522 415.97799683]
[113.77185059 401.00460815]
[112.87903595 386.03118896]
[111.98622131 371.05780029]
[111.09340668 356.08438110]
[110.20058441 341.11099243]
[109.30776978 326.13757324]
[108.19212341 311.17910767]
[96.63334656 301.85546875]
[95.06335449 286.72308350]
[104.92121887 274.66238403]
[103.58298492 259.72219849]
[102.24475098 244.78201294]
[100.90651703 229.84182739]
[99.56828308 214.90164185]
[96.54284668 211.20626831]
[95.80670929 205.57109070]
[98.41941071 199.49777222]
[97.52659607 184.52436829]
[96.63378143 169.55096436]
[85.35772705 159.88729858]
[84.23897552 144.71485901]
[94.45156097 132.95301819]
[93.55874634 117.97961426]
[82.79138947 108.28372192]
[81.92896271 93.81989288]
[91.46784973 82.91320038]
[90.57503510 67.93979645]
[89.68222046 52.96639252]
[88.78939819 37.99298477]
[82.32560730 51.52883911]
[71.67068481 62.08690262]
[58.07637405 68.42682648]
[43.13970947 69.80379486]
[28.61543846 66.05605316]
[16.20985985 57.62387085]
[7.38036871 45.49786377]
[3.16424394 31.10257530]
[4.05679178 16.12915421]
[9.95315647 2.33665967]
[20.16063881 -8.65457726]
[33.48007584 -15.55331898]
[48.34671021 -17.54910660]
[63.01402664 -14.40747929]
[75.75891876 -6.49750996]
[85.08414459 5.25154495]
[89.89440918 19.46096802]
[92.56020355 4.69975090]
[95.22599792 -10.06146622]
[97.89179230 -24.82268333]
[100.55758667 -39.58390045]
[92.89210510 -58.22801208]
[106.01147461 -72.43256378]
[108.23659515 -87.26660156]
[110.46170807 -102.10064697]
[112.68682861 -116.93469238]
[110.86505127 -125.88561249]
[115.05709076 -131.97236633]
[117.50281525 -146.77163696]
[119.94853973 -161.57090759]
[122.39427185 -176.37017822]
[123.95479584 -191.28878784]
[124.40139771 -206.28213501]
[124.62472534 -221.28047180]
[115.28528595 -237.15045166]
[124.86598206 -251.85342407]
[124.86598206 -266.85342407]
[124.86598206 -281.85342407]
[124.86598206 -296.85342407]
[122.25451660 -301.37307739]
[121.69390869 -305.98165894]
[122.87459564 -309.88308716]
[125.21591187 -312.51947021]
[125.88570404 -327.50451660]
[118.77233124 -341.63641357]
[127.07021332 -354.00549316]
[127.73999786 -368.99053955]
[128.40979004 -383.97555542]
[114.17343903 -389.05670166]
[102.06826782 -398.10968018]
[93.17064667 -410.32949829]
[88.27175140 -424.62957764]
[87.80718994 -439.73837280]
[91.81826019 -454.31240845]
[99.94831085 -467.05578613]
[111.47442627 -476.83535767]
[125.37169647 -482.78155518]
[140.40440369 -484.36563110]
[155.23582458 -481.44671631]
[168.54719543 -474.28439331]
[179.15484619 -463.51550293]
[186.11557007 -450.09759521]
[188.81042480 -435.22381592]
[186.99977112 -420.21673584]
[180.84461975 -406.41073608]
[170.89227295 -395.03344727]
[158.02770996 -387.09655762]
[143.39482117 -383.30578613]
[142.72503662 -368.32073975]
[142.05525208 -353.33569336]
[149.21653748 -340.27563477]
[140.87074280 -326.83471680]
[140.20095825 -311.84967041]
[139.86598206 -296.85342407]
[139.86598206 -281.85342407]
[139.86598206 -266.85342407]
[139.86598206 -251.85342407]
[148.19493103 -243.08102417]
[148.31770325 -230.58427429]
[139.62306213 -221.05714417]
[139.39973450 -206.05880737]
[142.02430725 -202.06874084]
[142.17019653 -196.38755798]
[138.93983459 -190.61900330]
[149.30918884 -201.45765686]
[164.04797363 -204.24476624]
[177.65901184 -197.94081116]
[185.06568909 -184.89698792]
[183.50552368 -169.97834778]
[173.56040955 -158.74916077]
[158.93962097 -155.39764404]
[145.09635925 -161.17381287]
[137.19354248 -173.92445374]
[134.74781799 -159.12518311]
[132.30207825 -144.32591248]
[129.85635376 -129.52664185]
[127.52087402 -114.70957184]
[125.29575348 -99.87553406]
[123.07064056 -85.04148865]
[120.84552002 -70.20744324]
[127.63366699 -62.56977463]
[129.12866211 -52.23955917]
[124.59793091 -42.59317780]
[115.31880188 -36.91810608]
[112.65300751 -22.15688896]
[109.98721313 -7.39567089]
[107.32141876 7.36554623]
[104.65562439 22.12676430]
[103.76280975 37.10017014]
[104.65562439 52.07357407]
[105.54843903 67.04698181]
[106.44125366 82.02038574]
[117.20861053 91.71627808]
[118.07103729 106.18010712]
[108.53215027 117.08679962]
[109.42496490 132.06019592]
[120.96286011 142.52513123]
[121.65499878 157.72302246]
[111.60718536 168.65814209]
[112.50000000 183.63154602]
[113.39281464 198.60494995]
[114.50846100 213.56340027]
[115.84669495 228.50358582]
[117.18493652 243.44377136]
[118.52317047 258.38397217]
[119.86140442 273.32415771]
[131.70576477 283.44091797]
[132.85009766 298.61145020]
[123.13230896 309.84088135]
[126.61702728 315.45944214]
[126.72496033 321.14147949]
[124.28117371 325.24475098]
[125.17399597 340.21817017]
[126.06681061 355.19155884]
[126.95962524 370.16497803]
[127.85243988 385.13836670]
[128.74525452 400.11178589]
[129.63807678 415.08520508]
[133.27272034 423.46536255]
[130.43103027 430.28787231]
[133.94050598 438.72122192]
[130.99754333 445.50064087]
[131.44415283 460.49398804]
[131.89076233 475.48733521]
[132.33737183 490.48071289]
[132.78396606 505.47406006]
[136.16749573 513.95874023]
[133.12393188 520.69360352]
[133.34725952 535.69189453]
[133.57058716 550.69024658]
[133.79391479 565.68859863]
[148.35299683 569.71478271]
[161.18730164 577.68078613]
[171.25640869 588.94085693]
[177.74406433 602.58221436]
[180.12435913 617.49902344]
[178.20429993 632.48205566]
[172.13957214 646.31658936]
[162.42179871 657.88128662]
[149.83874512 666.23852539]
[135.41047668 670.71087646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 200]
[11 199]
[12 198]
[13 197]
[14 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 189]
[20 187]
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 178]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[37 170]
[38 169]
[39 168]
[42 165]
[43 164]
[46 161]
[47 160]
[48 159]
[49 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[72 149]
[73 148]
[74 147]
[75 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 133]
[82 130]
[83 129]
[85 126]
[86 125]
[87 124]
[88 123]
[92 122]
[93 121]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
