%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[92.02618408 834.57550049]
[77.42960358 831.05816650]
[63.28958893 826.00915527]
[49.76636505 819.48577881]
[37.01316071 811.56188965]
[25.17448044 802.32733154]
[14.38446236 791.88665771]
[4.76536798 780.35821533]
[-3.57381225 767.87261963]
[-10.53858852 754.57135010]
[-16.05004501 740.60510254]
[-20.04573059 726.13214111]
[-22.48037529 711.31640625]
[-23.32638741 696.32586670]
[-22.57418633 681.33032227]
[-20.23229027 666.49969482]
[-16.32723808 652.00201416]
[-10.90327549 638.00158691]
[-4.02186060 624.65698242]
[4.23903513 612.11944580]
[13.78580856 600.53106689]
[24.51028824 590.02307129]
[36.29095840 580.71459961]
[48.99433517 572.71105957]
[62.47647476 566.10321045]
[76.58461761 560.96582031]
[91.15891266 557.35723877]
[106.03421783 555.31823730]
[105.58760834 540.32489014]
[105.14100647 525.33154297]
[104.69439697 510.33819580]
[96.10794830 501.81765747]
[95.61316681 489.33010864]
[104.02028656 479.54833984]
[103.79695892 464.54998779]
[95.33831787 455.90255737]
[95.02951050 443.40902710]
[103.58132935 433.75350952]
[103.58132935 418.75350952]
[103.58132935 403.75350952]
[94.00064087 389.05053711]
[103.34008026 373.18057251]
[103.11675262 358.18222046]
[102.89342499 343.18389893]
[102.67009735 328.18554688]
[90.11288452 316.99826050]
[89.52046967 299.85290527]
[101.74754333 287.34219360]
[101.30093384 272.34881592]
[93.18812561 259.85757446]
[100.51111603 245.83314514]
[100.06450653 230.83979797]
[99.39472198 215.85475159]
[98.50190735 200.88134766]
[97.60909271 185.90794373]
[96.71627808 170.93453979]
[95.82346344 155.96113586]
[94.93064880 140.98773193]
[94.03782654 126.01432037]
[93.14501190 111.04091644]
[91.80677795 96.10073090]
[82.48441315 83.31777191]
[88.65449524 69.76124573]
[86.87203217 54.86753082]
[85.08956146 39.97381210]
[83.30709839 25.08009529]
[81.52462769 10.18637848]
[72.32273865 22.03227043]
[57.68629074 25.31471443]
[44.30688095 18.53302383]
[38.30138779 4.78769493]
[42.41544724 -9.63709259]
[54.76816559 -18.14652061]
[69.71204376 -16.85019302]
[80.41574860 -6.33910418]
[80.19242096 -21.33744049]
[79.96909332 -36.33577728]
[79.74576569 -51.33411789]
[79.52243805 -66.33245087]
[71.58053589 -80.01589966]
[79.12748718 -92.85695648]
[78.90415955 -107.85529327]
[78.68083191 -122.85363007]
[78.45750427 -137.85197449]
[75.20067596 -146.38607788]
[78.34416962 -153.07487488]
[78.34416962 -168.07487488]
[78.34416962 -183.07487488]
[78.23250580 -198.07446289]
[78.00917816 -213.07279968]
[75.33071136 -217.55308533]
[74.70155334 -222.15280151]
[75.82402039 -226.07136536]
[78.12583160 -228.74232483]
[70.80284882 -242.76673889]
[78.91565704 -255.25801086]
[79.36225891 -270.25134277]
[79.80886841 -285.24468994]
[80.25547028 -300.23806763]
[80.70207977 -315.23141479]
[67.13010406 -322.21453857]
[57.93891144 -334.39999390]
[54.95341110 -349.36825562]
[58.76637650 -364.14743042]
[68.62074280 -375.80310059]
[82.55991364 -382.02099609]
[97.81626892 -381.56652832]
[111.36063385 -374.52999878]
[120.50377655 -362.30847168]
[123.43030548 -347.32855225]
[119.55917358 -332.56451416]
[109.65898132 -320.94775391]
[95.69542694 -314.78479004]
[95.24882507 -299.79144287]
[94.80221558 -284.79809570]
[94.35561371 -269.80474854]
[93.90900421 -254.81140137]
[101.26393890 -241.85940552]
[93.11918640 -228.29571533]
[93.00751495 -213.29612732]
[93.23084259 -198.29779053]
[96.47357941 -191.65652466]
[93.34416962 -183.07487488]
[93.34416962 -168.07487488]
[93.34416962 -153.07487488]
[93.45584106 -138.07530212]
[93.67916870 -123.07695770]
[93.90249634 -108.07862091]
[94.12582397 -93.08028412]
[102.05175781 -80.46961975]
[94.52077484 -66.55577850]
[94.74410248 -51.55744553]
[94.96743011 -36.55910492]
[95.19075775 -21.56077003]
[95.41408539 -6.56243181]
[96.41835022 8.40391254]
[98.20081329 23.29763031]
[99.98328400 38.19134903]
[101.76574707 53.08506393]
[103.54821014 67.97878265]
[112.74308777 79.69644165]
[106.70049286 94.31826782]
[108.92820740 96.39836121]
[110.44829559 99.33500671]
[110.94204712 102.86766052]
[110.19146729 106.62171173]
[108.11841583 110.14810181]
[109.01123810 125.12150574]
[109.90405273 140.09490967]
[110.79686737 155.06831360]
[111.68968201 170.04171753]
[112.58249664 185.01513672]
[113.47531128 199.98854065]
[114.36813354 214.96194458]
[117.68402100 220.68176270]
[117.62273407 226.36448669]
[115.05786133 230.39318848]
[115.50446320 245.38653564]
[123.64921570 258.95022583]
[116.29428864 271.90222168]
[116.74089050 286.89556885]
[127.54232025 294.94192505]
[131.67700195 307.55599976]
[127.84835815 320.06292725]
[117.66843414 327.96221924]
[117.89176178 342.96057129]
[118.11508942 357.95889282]
[118.33841705 372.95724487]
[127.03305054 382.48437500]
[126.91028595 394.98110962]
[118.58132935 403.75350952]
[118.58132935 418.75350952]
[118.58132935 433.75350952]
[128.15602112 449.48269653]
[118.79529572 464.32666016]
[119.01862335 479.32501221]
[128.82643127 494.90988159]
[119.68774414 509.89157104]
[120.13435364 524.88494873]
[120.58095551 539.87829590]
[121.02756500 554.87164307]
[135.99786377 556.02160645]
[150.76109314 558.75634766]
[165.15000916 563.04486084]
[179.00155640 568.83856201]
[192.15878296 576.07177734]
[204.47262573 584.66253662]
[215.80352783 594.51354980]
[226.02313232 605.51318359]
[235.01562500 617.53680420]
[242.67913818 630.44812012]
[248.92680359 644.10095215]
[253.68785095 658.34045410]
[256.90832520 673.00543213]
[258.55172729 687.92962646]
[258.59948730 702.94390869]
[257.05099487 717.87823486]
[253.92384338 732.56335449]
[249.25344849 746.83288574]
[243.09272766 760.52514648]
[235.51148987 773.48498535]
[226.59562683 785.56555176]
[216.44618225 796.62994385]
[205.17814636 806.55279541]
[192.91918945 815.22167969]
[179.80821228 822.53845215]
[165.99378967 828.42010498]
[151.63244629 832.79998779]
[136.88688660 835.62860107]
[121.92421722 836.87371826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 181]
[29 180]
[30 179]
[31 178]
[34 176]
[35 175]
[38 173]
[39 172]
[40 171]
[42 168]
[43 167]
[44 166]
[45 165]
[48 161]
[49 160]
[51 158]
[52 157]
[53 154]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 142]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[81 129]
[82 128]
[83 127]
[84 126]
[86 125]
[87 124]
[88 123]
[89 121]
[90 120]
[94 119]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
