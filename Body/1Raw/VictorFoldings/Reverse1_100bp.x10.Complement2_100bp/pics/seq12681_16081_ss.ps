%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[46.88866425 405.65820312]
[49.53240585 420.53054810]
[47.87765503 435.54516602]
[42.05855560 449.48486328]
[32.54683304 461.21957397]
[20.11356735 469.79806519]
[5.76666260 474.52490234]
[-9.33084106 475.01690674]
[-23.95505714 471.23419189]
[-36.92046356 463.48339844]
[-47.17601776 452.39282227]
[-53.89033890 438.86160278]
[-56.51913834 423.98657227]
[-54.84930420 408.97363281]
[-49.01620102 395.03982544]
[-39.49269867 383.31463623]
[-27.05082130 374.74865723]
[-12.69917393 370.03622437]
[2.39881611 369.55938721]
[6.15511703 355.03732300]
[9.91141701 340.51525879]
[13.66771793 325.99322510]
[17.42401886 311.47116089]
[3.98332262 318.13055420]
[-10.27307606 313.46630859]
[-17.17846489 300.15032959]
[-12.77712345 285.81057739]
[0.40966037 278.66156006]
[14.82789707 282.79852295]
[22.21804619 295.85067749]
[27.25496292 281.72164917]
[32.29187775 267.59262085]
[37.32879639 253.46360779]
[34.31450653 238.87719727]
[46.23656464 228.47647095]
[51.27347946 214.34744263]
[56.31039429 200.21839905]
[61.34731293 186.08937073]
[66.38422394 171.96034241]
[71.42114258 157.83131409]
[68.40685272 143.24490356]
[80.32891083 132.84417725]
[85.36582947 118.71514893]
[90.40274048 104.58612061]
[94.37483978 90.12159729]
[97.26010895 75.40171051]
[100.14538574 60.68181610]
[103.03065491 45.96192551]
[105.91593170 31.24203300]
[104.13805389 24.87409210]
[105.62045288 19.38779068]
[109.11247253 16.12974358]
[107.96147919 7.06811953]
[112.59461975 1.31000841]
[116.13429260 -13.26636696]
[119.67396545 -27.84274292]
[123.10502625 -42.44506454]
[126.42728424 -57.07252502]
[129.74954224 -71.69998169]
[128.16204834 -78.11803436]
[129.80714417 -83.55776978]
[133.39462280 -86.71040344]
[137.15090942 -101.23246002]
[140.90721130 -115.75451660]
[144.66351318 -130.27658081]
[148.41981506 -144.79864502]
[152.17611694 -159.32069397]
[155.93241882 -173.84275818]
[141.69154358 -178.57250977]
[127.80246735 -184.25286865]
[114.32855988 -190.85791016]
[101.33129883 -198.35752869]
[88.86998749 -206.71746826]
[77.00148010 -215.89959717]
[65.77994537 -225.86203003]
[55.25656891 -236.55929565]
[45.47937393 -247.94258118]
[36.49296951 -259.95996094]
[28.33836365 -272.55661011]
[21.05275917 -285.67501831]
[14.66940308 -299.25537109]
[9.21741772 -313.23568726]
[4.72168112 -327.55215454]
[1.20270669 -342.13946533]
[-1.32344961 -356.93106079]
[-2.84526134 -371.85946655]
[-3.35578465 -386.85653687]
[-2.85269046 -401.85385132]
[-1.33827388 -416.78302002]
[1.18055487 -431.57586670]
[4.69230270 -446.16491699]
[9.18094635 -460.48361206]
[14.62600613 -474.46661377]
[21.00263405 -488.05010986]
[28.28173828 -501.17214966]
[36.43010330 -513.77282715]
[45.41055298 -525.79467773]
[55.18210983 -537.18280029]
[65.70018005 -547.88525391]
[76.91678619 -557.85327148]
[88.78073883 -567.04125977]
[101.23790741 -575.40740967]
[114.23145294 -582.91345215]
[127.70209503 -589.52514648]
[141.58834839 -595.21240234]
[155.82687378 -599.94921875]
[170.35270691 -603.71392822]
[185.09954834 -606.48944092]
[200.00012207 -608.26312256]
[214.98645020 -609.02673340]
[229.99012756 -608.77691650]
[244.94271851 -607.51477051]
[259.77600098 -605.24603271]
[274.42224121 -601.98114014]
[288.81469727 -597.73486328]
[302.88763428 -592.52667236]
[316.57684326 -586.38024902]
[329.81988525 -579.32373047]
[342.55633545 -571.38928223]
[354.72808838 -562.61303711]
[366.27957153 -553.03515625]
[377.15811157 -542.69927979]
[387.31405640 -531.65258789]
[396.70104980 -519.94543457]
[405.27627563 -507.63128662]
[413.00064087 -494.76629639]
[419.83883667 -481.40921021]
[425.75970459 -467.62094116]
[430.73620605 -453.46441650]
[434.74566650 -439.00424194]
[437.76977539 -424.30633545]
[439.79470825 -409.43783569]
[440.81127930 -394.46655273]
[440.81478882 -379.46078491]
[439.80526733 -364.48901367]
[437.78729248 -349.61956787]
[434.77011108 -334.92025757]
[430.76742554 -320.45819092]
[425.79757690 -306.29931641]
[419.88317871 -292.50827026]
[413.05123901 -279.14797974]
[405.33291626 -266.27938843]
[396.76345825 -253.96121216]
[387.38195801 -242.24966431]
[377.23120117 -231.19819641]
[366.35754395 -220.85719299]
[354.81054688 -211.27388000]
[342.64294434 -202.49197388]
[329.91021729 -194.55152893]
[316.67047119 -187.48878479]
[302.98413086 -181.33596802]
[288.91363525 -176.12115479]
[274.52319336 -171.86813354]
[259.87847900 -168.59632874]
[245.04626465 -166.32063293]
[230.09426880 -165.05146790]
[215.09071350 -164.79460144]
[200.10403442 -165.55122375]
[185.20262146 -167.31785583]
[170.45448303 -170.08645630]
[166.69818115 -155.56439209]
[162.94187927 -141.04234314]
[159.18557739 -126.52027893]
[155.42927551 -111.99822235]
[151.67297363 -97.47615814]
[147.91667175 -82.95410156]
[144.37699890 -68.37772369]
[141.05474854 -53.75026703]
[137.73248291 -39.12280655]
[139.31645203 -31.90388298]
[134.25033569 -24.30307007]
[130.71066284 -9.72669411]
[127.17098999 4.84968090]
[123.73992920 19.45200348]
[120.63581848 34.12730408]
[117.75054932 48.84719849]
[114.86528015 63.56708908]
[111.98000336 78.28697968]
[109.09473419 93.00687408]
[120.10850525 82.82370758]
[134.71615601 79.41538239]
[149.09927368 83.67283630]
[159.49815369 94.48316956]
[163.19454956 109.02059174]
[159.22222900 123.48505402]
[148.61955261 134.09558105]
[134.15803528 138.07861328]
[119.61788177 134.39299011]
[108.79985046 124.00211334]
[104.53177643 109.62303925]
[99.49485779 123.75206757]
[94.45793915 137.88110352]
[97.11195374 153.47810364]
[85.55017090 162.86824036]
[80.51325989 176.99726868]
[75.47634125 191.12629700]
[70.43942261 205.25532532]
[65.40251160 219.38435364]
[60.36559296 233.51338196]
[63.01960754 249.11039734]
[51.45782471 258.50051880]
[46.42090988 272.62954712]
[41.38399124 286.75857544]
[36.34707642 300.88760376]
[31.94607735 315.22744751]
[28.18977737 329.74951172]
[24.43347740 344.27157593]
[20.67717552 358.79364014]
[16.92087555 373.31570435]
[29.89406204 381.05346680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[30 204]
[31 203]
[32 202]
[33 201]
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[40 194]
[42 192]
[43 191]
[44 190]
[45 179]
[46 178]
[47 177]
[48 176]
[49 175]
[52 174]
[54 173]
[55 172]
[56 171]
[57 169]
[58 168]
[59 167]
[62 166]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
