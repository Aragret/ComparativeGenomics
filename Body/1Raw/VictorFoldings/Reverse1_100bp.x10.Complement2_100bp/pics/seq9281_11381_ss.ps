%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[92.65253448 634.99584961]
[79.08818817 641.44134521]
[64.85670471 646.23730469]
[50.15786362 649.31634521]
[35.19802475 650.63525391]
[20.18719292 650.17553711]
[5.33610296 647.94360352]
[-9.14676189 643.97082520]
[-23.05808640 638.31298828]
[-36.20257187 631.04943848]
[-48.39569855 622.28222656]
[-59.46628571 612.13439941]
[-69.25892639 600.74841309]
[-77.63613892 588.28411865]
[-84.48033142 574.91650391]
[-89.69541931 560.83319092]
[-93.20817566 546.23193359]
[-94.96930695 531.31768799]
[-94.95408630 516.29986572]
[-93.16271210 501.38919067]
[-89.62034607 486.79507446]
[-84.37671661 472.72238159]
[-77.50543976 459.36868286]
[-69.10296631 446.92138672]
[-59.28725815 435.55529785]
[-48.19611359 425.42993164]
[-35.98523712 416.68746948]
[-22.82604599 409.45059204]
[-8.90327835 403.82095337]
[5.58761263 399.87756348]
[20.44319916 397.67575073]
[35.45492935 397.24645996]
[50.41206360 398.59570312]
[53.51617432 383.92041016]
[56.62028503 369.24511719]
[59.72439575 354.56979370]
[62.39019012 339.80859375]
[64.61531067 324.97454834]
[66.84042358 310.14050293]
[59.90492630 300.22961426]
[61.63730621 287.85293579]
[71.64900970 279.72097778]
[74.09473419 264.92172241]
[76.54045868 250.12243652]
[78.98619080 235.32316589]
[80.99020386 220.45764160]
[82.55072784 205.53903198]
[84.11125183 190.62043762]
[72.97241211 178.02023315]
[74.42159271 160.92594910]
[88.04869080 149.95683289]
[89.38692474 135.01664734]
[90.72515869 120.07646179]
[92.06339264 105.13627625]
[89.69862366 100.45420074]
[90.12546539 94.78047943]
[93.67038727 89.77343750]
[95.45285034 74.87972260]
[97.23531342 59.98600388]
[99.01778412 45.09228897]
[100.80024719 30.19857025]
[92.26908112 42.53628159]
[80.38111877 51.68376923]
[66.26946259 56.76914597]
[51.27913284 57.30771255]
[36.83892059 53.24813080]
[24.32516670 44.97734070]
[14.93060780 33.28365707]
[9.55067253 19.28164482]
[8.69814110 4.30589247]
[12.45427227 -10.21621132]
[20.46105576 -22.90050888]
[31.95533371 -32.53801727]
[45.84154892 -38.21014786]
[60.79615021 -39.37627029]
[75.39376831 -35.92523575]
[88.24304199 -28.18597794]
[98.11926270 -16.89615059]
[104.08110046 -3.13183069]
[105.56024170 11.79619026]
[111.22302246 -2.09383702]
[116.88581085 -15.98386383]
[122.54859924 -29.87388992]
[127.48019409 -44.04002762]
[131.66720581 -58.44380951]
[135.85421753 -72.84758759]
[140.04122925 -87.25137329]
[144.22824097 -101.65515137]
[147.98454285 -116.17721558]
[151.30679321 -130.80467224]
[154.62905884 -145.43212891]
[157.95130920 -160.05960083]
[156.80032349 -169.12121582]
[161.43345642 -174.87933350]
[164.97312927 -189.45570374]
[168.51280212 -204.03207397]
[172.05247498 -218.60845947]
[158.33323669 -224.78074646]
[145.98188782 -233.36903381]
[135.41911316 -244.08082581]
[127.00466156 -256.55123901]
[121.02513885 -270.35559082]
[117.68420410 -285.02368164]
[117.09564972 -300.05593872]
[119.27951813 -314.94033813]
[124.16143036 -329.16992188]
[131.57510376 -342.26007080]
[141.26805115 -353.76492310]
[152.91011047 -363.29263306]
[166.10476685 -370.51867676]
[180.40260315 -375.19696045]
[195.31666565 -377.16809082]
[210.33897400 -376.36499023]
[224.95787048 -372.81500244]
[238.67544556 -366.63900757]
[251.02447510 -358.04739380]
[261.58438110 -347.33276367]
[269.99545288 -334.86007690]
[275.97125244 -321.05410767]
[279.30822754 -306.38513184]
[279.89273071 -291.35272217]
[277.70486450 -276.46890259]
[272.81912231 -262.24063110]
[265.40191650 -249.15246582]
[255.70587158 -237.65023804]
[244.06124878 -228.12567139]
[230.86463928 -220.90318298]
[216.56553650 -216.22875977]
[201.65093994 -214.26162720]
[186.62886047 -215.06878662]
[183.08918762 -200.49240112]
[179.54951477 -185.91603088]
[176.00984192 -171.33966064]
[172.57878113 -156.73733521]
[169.25651550 -142.10987854]
[165.93426514 -127.48241425]
[162.61199951 -112.85495758]
[163.99008179 -110.41384888]
[164.48425293 -107.27976990]
[163.82571411 -103.78667450]
[161.87142944 -100.35953522]
[158.63201904 -97.46813965]
[154.44500732 -83.06436157]
[150.25799561 -68.66057587]
[146.07098389 -54.25679779]
[141.88397217 -39.85301590]
[154.98715210 -47.15416336]
[169.74105835 -44.44821167]
[179.40040588 -32.97228622]
[179.54908752 -17.97302055]
[170.11909485 -6.30788326]
[155.42172241 -3.31001425]
[142.17640686 -10.34999943]
[136.43862915 -24.21110344]
[130.77583313 -10.32107735]
[125.11305237 3.56894970]
[119.45026398 17.45897675]
[115.69396210 31.98103523]
[113.91149902 46.87475204]
[112.12903595 61.76847076]
[110.34656525 76.66218567]
[108.56410217 91.55590820]
[107.00357819 106.47451019]
[105.66534424 121.41469574]
[104.32711029 136.35487366]
[102.98887634 151.29505920]
[112.75762177 160.56794739]
[115.36405182 173.58396912]
[110.07632446 185.54733276]
[99.02985382 192.18095398]
[97.46932983 207.09956360]
[95.90880585 222.01815796]
[97.81695557 225.91853333]
[98.33281708 229.82986450]
[97.62390900 233.31307983]
[95.98313904 236.02868652]
[93.78546143 237.76889038]
[91.33972931 252.56816101]
[88.89400482 267.36743164]
[86.44828033 282.16671753]
[93.33021545 299.24652100]
[81.67446899 312.36563110]
[79.44934845 327.19967651]
[77.22423553 342.03372192]
[78.95632172 346.01541138]
[79.29701996 349.94586182]
[78.43328094 353.39395142]
[76.67288971 356.03356934]
[74.39969635 357.67391968]
[71.29558563 372.34921265]
[68.19147491 387.02453613]
[65.08736420 401.69982910]
[79.30978394 406.52261353]
[92.86194611 412.99371338]
[105.55361176 421.02230835]
[117.20659637 430.49563599]
[127.65732574 441.28076172]
[136.75907898 453.22622681]
[144.38409424 466.16436768]
[150.42530823 479.91354370]
[154.79792786 494.28076172]
[157.44055176 509.06430054]
[158.31610107 524.05664062]
[157.41227722 539.04724121]
[154.74176025 553.82580566]
[150.34204102 568.18469238]
[144.27490234 581.92248535]
[136.62550354 594.84619141]
[127.50122070 606.77447510]
[117.03016663 617.53985596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 192]
[34 191]
[35 190]
[36 189]
[37 184]
[38 183]
[39 182]
[42 180]
[43 179]
[44 178]
[45 177]
[46 172]
[47 171]
[48 170]
[51 166]
[52 165]
[53 164]
[54 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[80 157]
[81 156]
[82 155]
[83 154]
[84 146]
[85 145]
[86 144]
[87 143]
[88 142]
[89 137]
[90 136]
[91 135]
[92 134]
[94 133]
[95 132]
[96 131]
[97 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
