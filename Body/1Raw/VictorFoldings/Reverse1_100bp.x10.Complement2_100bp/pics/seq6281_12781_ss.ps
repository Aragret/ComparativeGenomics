%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[97.77575684 602.13031006]
[82.88010406 604.38140869]
[67.85704803 603.26092529]
[53.46012878 598.82507324]
[40.41149521 591.29644775]
[29.36565971 581.05255127]
[20.87667465 568.60723877]
[15.37034607 554.58483887]
[13.12286949 539.68865967]
[14.24697685 524.66589355]
[18.68628311 510.27001953]
[26.21811485 497.22320557]
[36.46467972 486.17987061]
[48.91201019 477.69390869]
[62.93575668 472.19097900]
[77.83249664 469.94711304]
[78.94814301 454.98864746]
[80.06379700 440.03018188]
[81.17944336 425.07174683]
[78.54213715 418.16766357]
[82.42468262 409.89941406]
[75.85371399 396.53262329]
[84.79135132 383.47775269]
[86.12958527 368.53756714]
[87.35655975 353.58782959]
[88.47220612 338.62939453]
[89.58785248 323.67092896]
[90.59211731 308.70458984]
[91.48493195 293.73117065]
[92.37774658 278.75778198]
[93.15907288 263.77813721]
[93.82885742 248.79310608]
[94.49864197 233.80805969]
[95.16842651 218.82302856]
[95.16842651 203.82302856]
[94.49864197 188.83798218]
[93.82885742 173.85295105]
[90.97144318 170.02616882]
[90.48766327 164.36373901]
[93.36894989 158.41313171]
[93.14562225 143.41479492]
[92.92229462 128.41645813]
[82.85885620 123.74385071]
[75.25601959 115.66284180]
[71.20514679 105.33344269]
[71.28774261 94.23843384]
[75.49195862 83.97049713]
[83.21427155 76.00357056]
[93.34616089 71.48130798]
[93.79276276 56.48796082]
[94.23937225 41.49460983]
[94.68597412 26.50126076]
[95.13258362 11.50791073]
[84.57433319 0.05535040]
[85.24083710 -15.14367676]
[96.22417450 -25.13877487]
[96.67077637 -40.13212585]
[97.11738586 -55.12547302]
[82.90320587 -60.26497269]
[70.98966217 -69.53373718]
[62.53576660 -82.01412964]
[58.35901642 -96.47682953]
[58.85636139 -111.50198364]
[63.96652222 -125.61854553]
[73.17720795 -137.44831848]
[85.57645416 -145.84049988]
[99.94291687 -149.98364258]
[100.38952637 -164.97698975]
[100.83612823 -179.97033691]
[93.51314545 -193.99476624]
[101.62595367 -206.48602295]
[102.07255554 -221.47937012]
[102.51916504 -236.47271729]
[90.29209137 -248.98342896]
[90.88450623 -266.12881470]
[103.44171906 -277.31610107]
[103.66504669 -292.31442261]
[94.32560730 -308.18441772]
[103.90629578 -322.88739014]
[103.90629578 -337.88739014]
[103.90629578 -352.88739014]
[96.16899872 -366.68756104]
[103.90629578 -379.41482544]
[103.45969391 -394.40817261]
[102.56687927 -409.38159180]
[101.67406464 -424.35498047]
[92.56269073 -433.48437500]
[92.12731934 -445.97415161]
[100.05626678 -455.10971069]
[99.38648224 -470.09472656]
[98.71669006 -485.07977295]
[83.91120911 -487.88946533]
[70.15300751 -494.03833008]
[58.18405533 -503.19479370]
[48.64982224 -514.86505127]
[42.06447601 -528.41973877]
[38.78316116 -543.12792969]
[38.98283005 -558.19635010]
[42.65271378 -572.81237793]
[49.59490585 -586.18780518]
[59.43501663 -597.60137939]
[71.64237976 -606.43743896]
[85.55867767 -612.21960449]
[100.43341827 -614.63604736]
[115.46441650 -613.55633545]
[129.84107971 -609.03875732]
[142.78808594 -601.32696533]
[153.60722351 -590.83685303]
[161.71502686 -578.13409424]
[166.67425537 -563.90374756]
[168.21746826 -548.91320801]
[166.26142883 -533.97100830]
[160.91163635 -519.88281250]
[152.45660400 -507.40847778]
[141.35227966 -497.22070312]
[128.19750977 -489.86892700]
[113.70172882 -485.74957275]
[114.37152100 -470.76452637]
[115.04130554 -455.77947998]
[125.26895905 -441.51898193]
[116.64746857 -425.24780273]
[117.54028320 -410.27438354]
[118.43309784 -395.30099487]
[120.43781281 -393.34158325]
[121.78716278 -390.47003174]
[122.12984467 -386.93194580]
[121.20986938 -383.09552002]
[118.90629578 -379.41482544]
[126.64360046 -366.68756104]
[118.90629578 -352.88739014]
[118.90629578 -337.88739014]
[118.90629578 -322.88739014]
[127.23525238 -314.11499023]
[127.35801697 -301.61822510]
[118.66338348 -292.09109497]
[118.44005585 -277.09277344]
[128.61997986 -269.19348145]
[132.44862366 -256.68655396]
[128.31394958 -244.07246399]
[117.51251221 -236.02612305]
[117.06591034 -221.03276062]
[116.61930084 -206.03941345]
[123.97423553 -193.08741760]
[115.82948303 -179.52372742]
[115.38287354 -164.53038025]
[114.93627167 -149.53703308]
[129.03065491 -144.54612732]
[140.90841675 -135.43080139]
[149.39865112 -123.07378387]
[153.65951538 -108.67808533]
[153.26165771 -93.64997101]
[148.23147583 -79.46151733]
[139.04972839 -67.50643921]
[126.60562897 -58.96321106]
[112.11073303 -54.67886734]
[111.66413116 -39.68552017]
[111.21752167 -24.69216919]
[121.58646393 -14.06105137]
[121.34712982 1.15069926]
[110.12593079 11.95451641]
[109.67932892 26.94786644]
[109.23271942 41.94121552]
[108.78610992 56.93456650]
[108.33950806 71.92791748]
[123.53637695 82.57506561]
[129.28381348 100.21800995]
[123.27433014 117.77342224]
[107.92063141 128.19313049]
[108.14395905 143.19146729]
[108.36728668 158.18980408]
[108.81389618 173.18316650]
[109.48368073 188.16819763]
[110.15346527 203.15324402]
[121.04876709 192.84341431]
[136.04621887 193.11955261]
[146.55461121 203.82345581]
[146.55426025 218.82345581]
[136.04534912 229.52687073]
[121.04787445 229.80229187]
[110.15346527 219.49281311]
[109.48368073 234.47784424]
[108.81389618 249.46289062]
[108.14411163 264.44793701]
[110.88720703 273.16073608]
[107.35115051 279.65060425]
[106.45833588 294.62399292]
[105.56552124 309.59741211]
[108.17859650 318.35009766]
[104.54631042 324.78659058]
[103.43065643 339.74502563]
[102.31501007 354.70349121]
[104.79747772 363.49411011]
[101.06977081 369.87579346]
[99.73153687 384.81597900]
[106.20678711 399.25143433]
[97.36486816 411.23764038]
[96.13789368 426.18737793]
[95.02224731 441.14584351]
[93.90660095 456.10427856]
[92.79094696 471.06274414]
[107.19001770 475.49157715]
[120.24229431 483.01394653]
[131.29309082 493.25247192]
[139.78811646 505.69363403]
[145.30123901 519.71337891]
[147.55592346 534.60845947]
[146.43910217 549.63177490]
[142.00677490 564.02978516]
[134.48126221 577.08026123]
[124.24005127 588.12860107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 200]
[17 199]
[18 198]
[19 197]
[21 196]
[23 194]
[24 193]
[25 191]
[26 190]
[27 189]
[28 187]
[29 186]
[30 185]
[31 183]
[32 182]
[33 181]
[34 180]
[35 173]
[36 172]
[37 171]
[40 170]
[41 169]
[42 168]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[56 157]
[57 156]
[58 155]
[67 146]
[68 145]
[69 144]
[71 142]
[72 141]
[73 140]
[76 136]
[77 135]
[79 132]
[80 131]
[81 130]
[83 128]
[84 123]
[85 122]
[86 121]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
