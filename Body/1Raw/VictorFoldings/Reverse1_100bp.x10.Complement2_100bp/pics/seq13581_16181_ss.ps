%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[85.49604034 652.70312500]
[73.77939606 662.14331055]
[60.48778915 669.19525146]
[46.10171509 673.60400391]
[31.14122200 675.21026611]
[16.14711761 673.95599365]
[1.66143048 669.88641357]
[-11.79218960 663.14868164]
[-23.72740364 653.98645020]
[-33.71276093 642.73083496]
[-41.38729858 629.78869629]
[-46.47358322 615.62799072]
[-48.78775024 600.76049805]
[-48.24614716 585.72381592]
[-44.86834717 571.06134033]
[-38.77646255 557.30328369]
[-30.19070435 544.94683838]
[-19.42144585 534.43878174]
[-6.85798740 526.15893555]
[7.04550838 520.40655518]
[21.78643990 517.38970947]
[36.83193207 517.21740723]
[39.49772644 502.45617676]
[42.16352081 487.69494629]
[44.82931519 472.93371582]
[42.89044571 468.56912231]
[43.67281342 462.94018555]
[47.80050278 457.77551270]
[50.90461349 443.10021973]
[54.00872421 428.42492676]
[57.11283493 413.74960327]
[60.21694565 399.07431030]
[63.21171951 384.37631226]
[66.09699249 369.65643311]
[68.98226166 354.93652344]
[59.01197815 341.39282227]
[61.98045731 324.49597168]
[76.53182983 314.78634644]
[79.19763184 300.02514648]
[81.42274475 285.19110107]
[83.20521545 270.29739380]
[84.98767853 255.40367126]
[86.21465302 240.45393372]
[86.88443756 225.46888733]
[87.55422211 210.48385620]
[88.22400665 195.49880981]
[88.89379120 180.51377869]
[89.56357574 165.52873230]
[82.40229797 152.46867371]
[90.74809265 139.02775574]
[91.41787720 124.04271698]
[92.08766174 109.05767822]
[92.53427124 94.06432343]
[92.75759888 79.06598663]
[92.98092651 64.06764984]
[84.57380676 54.28587341]
[85.06858826 41.79832077]
[93.65503693 33.27779388]
[94.10163879 18.28444290]
[94.54824829 3.29109359]
[94.99485016 -11.70225620]
[95.44145966 -26.69560623]
[83.80952454 -17.22469521]
[68.87414551 -18.61552620]
[59.19098282 -30.07136726]
[60.30699158 -45.02979279]
[71.58287048 -54.92193985]
[86.55928802 -54.08113480]
[96.65673828 -42.98992157]
[98.43920898 -57.88363647]
[100.22167206 -72.77735138]
[98.13420105 -81.67006683]
[102.14315796 -87.87893677]
[104.14717102 -102.74446869]
[98.32294464 -117.45463562]
[107.69126129 -129.03410339]
[109.69527435 -143.89962769]
[111.69928741 -158.76515198]
[113.70330048 -173.63067627]
[115.70731354 -188.49621582]
[117.71132660 -203.36174011]
[119.71533966 -218.22726440]
[110.40585327 -230.71611023]
[112.64997101 -245.76332092]
[124.61354065 -254.56152344]
[126.61755371 -269.42706299]
[128.62156677 -284.29257202]
[130.62557983 -299.15811157]
[132.62959290 -314.02365112]
[134.63360596 -328.88916016]
[136.63761902 -343.75469971]
[130.81340027 -358.46487427]
[140.18171692 -370.04434204]
[141.63113403 -384.97415161]
[142.52395630 -399.94754028]
[143.41676331 -414.92095947]
[144.30958557 -429.89434814]
[145.20239258 -444.86776733]
[146.09521484 -459.84115601]
[132.17500305 -465.84146118]
[121.14865112 -476.24316406]
[114.34762573 -489.79019165]
[112.59318542 -504.84667969]
[116.09719849 -519.59448242]
[124.43653107 -532.25274658]
[136.60417175 -541.29290771]
[151.13081360 -545.62329102]
[166.26228333 -544.72106934]
[180.17141724 -538.69512939]
[191.17858887 -528.27313232]
[197.95463562 -514.71356201]
[199.68132019 -499.65390015]
[196.15013123 -484.91256714]
[187.78749084 -472.26971436]
[175.60321045 -463.25198364]
[161.06861877 -458.94836426]
[160.17579651 -443.97494507]
[159.28298950 -429.00152588]
[158.39016724 -414.02813721]
[157.49736023 -399.05471802]
[156.60453796 -384.08132935]
[169.38522339 -391.93331909]
[183.54397583 -386.98056030]
[188.64346313 -372.87399292]
[180.92456055 -360.01248169]
[166.07734680 -357.87704468]
[155.04724121 -368.04031372]
[161.01480103 -354.39343262]
[151.50315857 -341.75067139]
[149.49914551 -326.88516235]
[147.49513245 -312.01962280]
[145.49111938 -297.15411377]
[143.48709106 -282.28857422]
[141.48307800 -267.42303467]
[139.47906494 -252.55751038]
[148.68574524 -240.90534973]
[146.86514282 -225.80105591]
[134.58087158 -216.22325134]
[132.57685852 -201.35772705]
[130.57284546 -186.49220276]
[128.56883240 -171.62666321]
[126.56481171 -156.76113892]
[124.56079865 -141.89561462]
[122.55678558 -127.03008270]
[128.52435303 -113.38320160]
[119.01269531 -100.74045563]
[117.00868225 -85.87492371]
[115.11538696 -70.99488831]
[113.33292389 -56.10116959]
[111.55046082 -41.20745468]
[110.43480682 -26.24900055]
[109.98820496 -11.25565052]
[109.54159546 3.73769951]
[109.09499359 18.73104858]
[108.64838409 33.72439957]
[117.78707123 48.70610046]
[107.97926331 64.29097748]
[107.75593567 79.28931427]
[107.53260803 94.28765106]
[110.23906708 98.78087616]
[110.23539734 104.47062683]
[107.07270050 109.72746277]
[106.40291595 124.71250153]
[105.73313141 139.69754028]
[112.84650421 153.82943726]
[104.54861450 166.19851685]
[103.87882996 181.18356323]
[103.20904541 196.16859436]
[102.53926086 211.15364075]
[101.86947632 226.13867188]
[101.19969177 241.12371826]
[113.86206055 233.08229065]
[128.09297180 237.82373047]
[133.40193176 251.85279846]
[125.87536621 264.82781982]
[111.06158447 267.18405151]
[99.88139343 257.18612671]
[98.09893036 272.07983398]
[96.31645966 286.97357178]
[98.16632843 290.90191650]
[98.62390137 294.82049561]
[97.86321259 298.29275513]
[96.18218994 300.98364258]
[93.95884705 302.69094849]
[91.29305267 317.45214844]
[100.19554901 327.55957031]
[101.63035583 340.75622559]
[95.29640198 352.20016479]
[83.70215607 357.82180786]
[80.81687927 372.54168701]
[77.93161011 387.26159668]
[79.35189056 396.28491211]
[74.89225006 402.17843628]
[71.78813934 416.85372925]
[68.68402863 431.52902222]
[65.57991791 446.20434570]
[62.47580719 460.87963867]
[59.59053421 475.59951782]
[56.92473984 490.36074829]
[54.25894165 505.12194824]
[51.59314728 519.88317871]
[65.62796021 525.30725098]
[78.38248444 533.28967285]
[89.39566040 543.54180908]
[98.26936340 555.69305420]
[104.68281555 569.30426025]
[108.40417480 583.88330078]
[109.29891968 598.90313721]
[107.33470917 613.82086182]
[102.58253479 628.09716797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 201]
[23 200]
[24 199]
[25 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 191]
[34 190]
[35 189]
[38 185]
[39 184]
[40 179]
[41 178]
[42 177]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[50 164]
[51 163]
[52 162]
[53 159]
[54 158]
[55 157]
[58 155]
[59 154]
[60 153]
[61 152]
[62 151]
[69 150]
[70 149]
[71 148]
[73 147]
[74 146]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[93 127]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
