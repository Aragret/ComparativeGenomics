%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[23.84848022 713.57507324]
[19.85692215 699.05749512]
[18.97136497 684.02722168]
[21.23052216 669.14129639]
[26.53563118 655.05053711]
[34.65477753 642.37091064]
[45.23302841 631.65667725]
[57.80794525 623.37628174]
[71.82980347 617.89166260]
[69.38407898 603.09240723]
[66.93835449 588.29315186]
[64.49262238 573.49383545]
[62.04689789 558.69458008]
[59.60116959 543.89532471]
[57.15544128 529.09606934]
[54.70971680 514.29675293]
[52.26398849 499.49749756]
[49.81826019 484.69824219]
[47.37253189 469.89895630]
[44.92680359 455.09967041]
[42.48107910 440.30041504]
[40.03535080 425.50112915]
[35.63191223 439.84024048]
[27.84445953 452.66036987]
[17.14919853 463.17755127]
[4.20014811 470.74868774]
[-10.21085262 474.91079712]
[-25.20256615 475.40933228]
[-39.85824203 472.21383667]
[-53.28168106 465.51971436]
[-64.65203094 455.73632812]
[-73.27399445 443.46188354]
[-78.62033844 429.44702148]
[-80.36412811 414.54870605]
[-78.39872742 399.67803955]
[-72.84432220 385.74429321]
[-64.04057312 373.59960938]
[-52.52582169 363.98657227]
[-39.00420761 357.49301147]
[-24.30258369 354.51608276]
[-9.31995487 355.23776245]
[5.02748346 359.61395264]
[17.86237907 367.37704468]
[28.39987564 378.05230713]
[35.99559784 390.98693848]
[40.18507004 405.39004517]
[42.85086823 390.62881470]
[45.51666260 375.86761475]
[40.16441727 361.96786499]
[50.23111343 349.76245117]
[36.12321854 343.24420166]
[24.17053223 333.29434204]
[15.18880653 320.58447266]
[9.79296970 305.97473145]
[8.35501671 290.45571899]
[10.97837734 275.08132935]
[17.49049187 260.89706421]
[27.45415306 248.86897278]
[40.19685745 239.81796265]
[54.85619354 234.36363220]
[70.43820190 232.88198853]
[72.88392639 218.08271790]
[75.32965088 203.28344727]
[77.77538300 188.48416138]
[80.22110748 173.68489075]
[82.66683197 158.88562012]
[85.11256409 144.08634949]
[87.55828857 129.28707886]
[90.00402069 114.48781586]
[82.59313965 97.38896179]
[94.69466400 83.21697998]
[96.69867706 68.35144806]
[90.87445831 53.64128113]
[100.24276733 42.06181717]
[101.46974945 27.11208344]
[101.91635132 12.11873341]
[102.36296082 -2.87461615]
[94.10240936 -12.78047752]
[94.78305054 -25.25927925]
[103.49541473 -33.65102386]
[104.16519928 -48.63606262]
[104.83498383 -63.62110138]
[105.50476837 -78.60614014]
[102.76167297 -87.31896210]
[106.29772186 -93.80880737]
[107.19053650 -108.78221130]
[108.08335114 -123.75562286]
[93.38189697 -126.87406921]
[79.30945587 -132.14892578]
[66.18041992 -139.46234131]
[54.28808975 -148.65093994]
[43.89815521 -159.50942993]
[35.24272537 -171.79524231]
[28.51516342 -185.23390198]
[23.86576843 -199.52517700]
[21.39841080 -214.34982300]
[21.16820908 -229.37661743]
[23.18030739 -244.26986694]
[27.38975716 -258.69686890]
[33.70251465 -272.33529663]
[41.97755051 -284.88046265]
[52.02999878 -296.05212402]
[63.63528061 -305.60070801]
[76.53413391 -313.31283569]
[90.43839264 -319.01626587]
[105.03743744 -322.58358765]
[120.00510406 -323.93508911]
[135.00701904 -323.04058838]
[149.70803833 -319.92004395]
[163.77972412 -314.64318848]
[176.90771484 -307.32788086]
[188.79873657 -298.13760376]
[199.18711853 -287.27761841]
[207.84080505 -274.99057007]
[214.56645203 -261.55096436]
[219.21380615 -247.25901794]
[221.67906189 -232.43403625]
[221.90711975 -217.40719604]
[219.89289856 -202.51423645]
[215.68139648 -188.08782959]
[209.36669922 -174.45030212]
[201.08987427 -161.90631104]
[191.03584290 -150.73608398]
[179.42919922 -141.18917847]
[166.52923584 -133.47886658]
[152.62416077 -127.77740479]
[138.02462769 -124.21216583]
[123.05676270 -122.86280060]
[122.16394043 -107.88939667]
[121.27112579 -92.91599274]
[120.48980713 -77.93635559]
[119.82002258 -62.95131683]
[119.15023804 -47.96627808]
[118.48045349 -32.98123932]
[127.39506531 -17.86513710]
[117.35630798 -2.42801023]
[116.90969849 12.56534004]
[116.46309662 27.55868912]
[127.32041168 17.20887756]
[142.28184509 16.13393593]
[154.50723267 24.82531357]
[158.40728760 39.30942917]
[152.19894409 52.96434021]
[138.72059631 59.54720688]
[124.13435364 56.04842758]
[115.10829926 44.06583023]
[121.07585907 57.71271515]
[111.56420898 70.35546112]
[109.56019592 85.22099304]
[116.04396820 92.76070404]
[117.40686035 102.61103821]
[113.21386719 111.62799072]
[104.80329132 116.93354034]
[102.35755920 131.73281860]
[99.91183472 146.53208923]
[97.46611023 161.33135986]
[95.02037811 176.13063049]
[92.57465363 190.92990112]
[90.12892151 205.72917175]
[87.68319702 220.52844238]
[85.23747253 235.32771301]
[98.52274323 241.14437866]
[110.01860809 249.97064209]
[119.05732727 261.28811646]
[125.11526489 274.43386841]
[127.84320831 288.63931274]
[127.08650970 303.07504272]
[122.89382935 316.89929199]
[115.51404572 329.30715942]
[105.38148499 339.57720947]
[93.09035492 347.11364746]
[79.35990143 351.48080444]
[64.99233246 352.42825317]
[70.15390015 367.38378906]
[60.27787781 378.53338623]
[57.61208344 393.29461670]
[54.94628906 408.05581665]
[54.83462143 423.05541992]
[57.28034973 437.85467529]
[59.72607803 452.65396118]
[62.17180252 467.45321655]
[64.61753082 482.25250244]
[67.06325531 497.05175781]
[69.50898743 511.85104370]
[71.95471191 526.65032959]
[74.40044403 541.44958496]
[76.84616852 556.24884033]
[79.29189301 571.04809570]
[81.73762512 585.84741211]
[84.18334961 600.64666748]
[86.62907410 615.44592285]
[101.66999054 616.12762451]
[116.24037933 619.92199707]
[129.70330811 626.66320801]
[141.47021484 636.05645752]
[151.02673340 647.69116211]
[157.95504761 661.05877686]
[161.95231628 675.57476807]
[162.84379578 690.60473633]
[160.59048462 705.49151611]
[155.29092407 719.58435059]
[147.17675781 732.26721191]
[136.60273743 742.98553467]
[124.03107452 751.27093506]
[110.01136780 756.76104736]
[95.15650177 759.21594238]
[80.11585999 758.52832031]
[65.54695892 754.72821045]
[52.08668900 747.98175049]
[40.32347107 738.58386230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 191]
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[46 177]
[47 176]
[48 175]
[50 173]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[71 149]
[72 148]
[74 146]
[75 138]
[76 137]
[77 136]
[80 134]
[81 133]
[82 132]
[83 131]
[85 130]
[86 129]
[87 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
