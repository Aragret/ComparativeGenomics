%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[93.91120148 693.08410645]
[78.88721466 692.41259766]
[64.20812988 689.14221191]
[50.32001877 683.37231445]
[37.64493561 675.27825928]
[26.56805420 665.10607910]
[17.42599297 653.16479492]
[10.49656773 639.81732178]
[5.99035549 625.46936035]
[4.04429483 610.55682373]
[4.71752453 595.53289795]
[7.98958588 580.85418701]
[13.76104546 566.96673584]
[21.85651398 554.29254150]
[32.02997971 543.21685791]
[43.97228241 534.07611084]
[57.32050705 527.14819336]
[71.66902161 522.64361572]
[86.58178711 520.69927979]
[87.25157166 505.71420288]
[87.92135620 490.72918701]
[85.41675568 486.66271973]
[85.44007111 480.97973633]
[88.84075928 475.30990601]
[89.95640564 460.35144043]
[91.07205200 445.39300537]
[92.18770599 430.43453979]
[93.30335236 415.47610474]
[94.41899872 400.51763916]
[95.53465271 385.55917358]
[96.53890991 370.59283447]
[97.43172455 355.61944580]
[98.32453918 340.64602661]
[98.65951538 325.64978027]
[98.43618774 310.65142822]
[98.21286011 295.65310669]
[97.87788391 280.65682983]
[97.43128204 265.66348267]
[96.98467255 250.67013550]
[96.53807068 235.67678833]
[96.09146118 220.68344116]
[81.72499847 216.54029846]
[69.32574463 208.14811707]
[60.11506271 196.31834412]
[55.00490570 182.20178223]
[54.50756073 167.17663574]
[58.68431091 152.71392822]
[67.13820648 140.23353577]
[79.05174255 130.96476746]
[93.26593018 125.82527161]
[92.81932068 110.83192444]
[91.92650604 95.85852051]
[90.58827209 80.91833496]
[89.25003815 65.97814941]
[87.91180420 51.03796387]
[86.57357025 36.09777832]
[85.23533630 21.15759277]
[77.50180817 34.01031876]
[64.42616272 41.36065674]
[49.42634201 41.28725052]
[36.42326355 33.80928802]
[28.81590080 20.88148499]
[28.59280014 5.88314486]
[35.81227875 -7.26520586]
[48.58718491 -15.12661934]
[63.57818604 -15.64614010]
[76.86666870 -8.68796730]
[84.97879028 3.92820477]
[85.87160492 -11.04520130]
[86.76441956 -26.01860619]
[87.65723419 -40.99201202]
[73.54324341 -55.29148102]
[74.48138428 -75.05567932]
[89.41826630 -87.56183624]
[89.64159393 -102.56017303]
[80.30214691 -118.43015289]
[89.88284302 -133.13311768]
[89.88284302 -148.13311768]
[89.88284302 -163.13311768]
[76.20234680 -169.81184387]
[66.81649780 -181.71952820]
[63.54485703 -196.46118164]
[66.98404694 -211.10130310]
[76.39978027 -222.74833679]
[89.88284302 -229.12582397]
[89.88284302 -244.12582397]
[89.88284302 -259.12582397]
[89.77117920 -274.12542725]
[89.54785156 -289.12374878]
[89.32452393 -304.12210083]
[78.94585419 -308.99011230]
[71.16841888 -317.34188843]
[67.08779144 -327.94473267]
[67.25775146 -339.25311279]
[71.61547089 -349.63394165]
[79.49607849 -357.60223389]
[89.73384094 -362.03381348]
[90.18045044 -377.02716064]
[90.62705231 -392.02050781]
[91.07366180 -407.01388550]
[77.50168610 -413.99700928]
[68.31049347 -426.18243408]
[65.32498932 -441.15072632]
[69.13795471 -455.92990112]
[78.99232483 -467.58557129]
[92.93150330 -473.80343628]
[108.18785095 -473.34899902]
[121.73221588 -466.31246948]
[130.87535095 -454.09094238]
[133.80189514 -439.11102295]
[129.93075562 -424.34695435]
[120.03056335 -412.73022461]
[106.06700897 -406.56726074]
[105.62040710 -391.57391357]
[105.17379761 -376.58056641]
[104.72719574 -361.58721924]
[120.15025330 -351.03155518]
[126.14289093 -333.17050171]
[120.11196899 -315.16390991]
[104.32286072 -304.34542847]
[104.54618835 -289.34707642]
[104.76951599 -274.34875488]
[108.01225281 -267.70745850]
[104.88284302 -259.12582397]
[104.88284302 -244.12582397]
[104.88284302 -229.12582397]
[118.36590576 -222.74833679]
[127.78163910 -211.10130310]
[131.22082520 -196.46118164]
[127.94918823 -181.71952820]
[118.56333923 -169.81184387]
[104.88284302 -163.13311768]
[104.88284302 -148.13311768]
[104.88284302 -133.13311768]
[113.21179962 -124.36071777]
[113.33456421 -111.86396790]
[104.63993073 -102.33684540]
[104.41660309 -87.33850861]
[113.28604889 -82.17092133]
[119.25683594 -73.72195435]
[121.19686127 -63.47747803]
[118.69019318 -53.27354813]
[112.12405396 -44.96735001]
[102.63063812 -40.09919739]
[101.73782349 -25.12579155]
[100.84500885 -10.15238476]
[99.95219421 4.82102060]
[100.17552185 19.81935883]
[101.51375580 34.75954437]
[102.85198975 49.69972992]
[104.19022369 64.63991547]
[105.52845764 79.58010101]
[106.86669159 94.52028656]
[109.03148651 96.66578674]
[110.46346283 99.64638519]
[110.85181427 103.19217682]
[109.98979950 106.92221069]
[107.81267548 110.38531494]
[108.25927734 125.37866974]
[122.75417328 129.66300964]
[135.19827271 138.20623779]
[144.38002014 150.16131592]
[149.41020203 164.34977722]
[149.80805969 179.37788391]
[145.54719543 193.77357483]
[137.05696106 206.13059998]
[125.17919922 215.24592590]
[111.08481598 220.23683167]
[111.53141785 235.23017883]
[111.97802734 250.22352600]
[112.42462921 265.21688843]
[112.87123871 280.21023560]
[116.25476837 288.69488525]
[113.21119690 295.42977905]
[113.43452454 310.42810059]
[113.65785217 325.42645264]
[125.81913757 316.64559937]
[140.30703735 320.53158569]
[146.44160461 334.21978760]
[139.70066833 347.61978149]
[125.05340576 350.85357666]
[113.29795074 341.53884888]
[112.40512848 356.51226807]
[111.51231384 371.48565674]
[114.12538910 380.23834229]
[110.49310303 386.67483521]
[109.37745667 401.63330078]
[108.26181030 416.59173584]
[107.14615631 431.55020142]
[106.03050995 446.50863647]
[104.91486359 461.46710205]
[103.79920959 476.42556763]
[102.90639496 491.39895630]
[102.23661041 506.38400269]
[101.56682587 521.36901855]
[116.24665833 524.63610840]
[130.13607788 530.40283203]
[142.81298828 538.49401855]
[153.89218140 548.66369629]
[163.03695679 560.60290527]
[169.96940613 573.94873047]
[174.47886658 588.29571533]
[176.42831421 603.20782471]
[175.75848389 618.23187256]
[172.48976135 632.91137695]
[166.72145081 646.80010986]
[158.62886047 659.47613525]
[148.45790100 670.55413818]
[136.51766968 679.69757080]
[123.17102051 686.62854004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 195]
[20 194]
[21 193]
[24 192]
[25 191]
[26 190]
[27 189]
[28 188]
[29 187]
[30 186]
[31 184]
[32 183]
[33 182]
[34 176]
[35 175]
[36 174]
[37 172]
[38 171]
[39 170]
[40 169]
[41 168]
[50 159]
[51 158]
[52 153]
[53 152]
[54 151]
[55 150]
[56 149]
[57 148]
[68 147]
[69 146]
[70 145]
[71 144]
[74 138]
[75 137]
[77 134]
[78 133]
[79 132]
[85 126]
[86 125]
[87 124]
[88 122]
[89 121]
[90 120]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
