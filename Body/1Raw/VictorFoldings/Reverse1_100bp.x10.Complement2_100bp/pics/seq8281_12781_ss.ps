%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[51.10072327 686.64727783]
[36.39791870 689.63800049]
[21.55162621 691.80700684]
[6.60773802 693.14758301]
[-8.38755798 693.65557861]
[-23.38790894 693.32940674]
[-38.34695053 692.17010498]
[-53.21844864 690.18127441]
[-67.95642853 687.36901855]
[-82.51534271 683.74200439]
[-96.85018921 679.31152344]
[-110.91665649 674.09124756]
[-124.67126465 668.09729004]
[-138.07150269 661.34814453]
[-151.07595825 653.86474609]
[-163.64440918 645.67022705]
[-175.73803711 636.78985596]
[-187.31944275 627.25103760]
[-198.35284424 617.08343506]
[-208.80412292 606.31829834]
[-218.64097595 594.98901367]
[-227.83299255 583.13049316]
[-236.35179138 570.77947998]
[-244.17100525 557.97418213]
[-251.26647949 544.75402832]
[-257.61627197 531.16003418]
[-263.20077515 517.23419189]
[-268.00271606 503.01943970]
[-272.00726318 488.55984497]
[-275.20202637 473.89999390]
[-277.57714844 459.08529663]
[-279.12524414 444.16146851]
[-279.84158325 429.17468262]
[-279.72390747 414.17126465]
[-278.77261353 399.19754028]
[-276.99060059 384.29983521]
[-274.38342285 369.52420044]
[-270.95913696 354.91629028]
[-266.72827148 340.52127075]
[-261.70397949 326.38360596]
[-255.90173340 312.54702759]
[-249.33949280 299.05429077]
[-242.03753662 285.94711304]
[-234.01843262 273.26599121]
[-225.30697632 261.05010986]
[-215.93008423 249.33726501]
[-205.91673279 238.16363525]
[-195.29789734 227.56376648]
[-184.10638428 217.57041931]
[-172.37678528 208.21449280]
[-160.14535522 199.52488708]
[-147.44992065 191.52847290]
[-134.32969666 184.24996948]
[-120.82524872 177.71186829]
[-106.97831726 171.93437195]
[-92.83169556 166.93534851]
[-78.42912292 162.73025513]
[-63.81511307 159.33207703]
[-49.03483582 156.75132751]
[-34.13397217 154.99597168]
[-19.15858841 154.07144165]
[-4.15496540 153.98060608]
[10.83051777 154.72372437]
[25.75154305 156.29852295]
[40.56198883 158.70010376]
[55.21607590 161.92108154]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[116.12903595 29.22253418]
[120.95503235 15.02007866]
[108.87434387 5.93633127]
[100.20457458 -6.41994762]
[95.78448486 -20.83143997]
[96.03491211 -35.88309479]
[100.91874695 -50.10107040]
[109.94580078 -62.09703445]
[122.22196960 -70.70375824]
[136.53779602 -75.08866119]
[151.48757935 -74.83435059]
[156.31358337 -89.03680420]
[161.13958740 -103.23925781]
[165.96557617 -117.44171906]
[152.40347290 -123.89040375]
[139.68171692 -131.86999512]
[127.97238922 -141.27255249]
[117.43383789 -151.97093201]
[108.20857239 -163.82044983]
[100.42136383 -176.66084290]
[94.17752075 -190.31848145]
[89.56148529 -204.60864258]
[86.63568878 -219.33807373]
[85.43968964 -234.30758667]
[85.98967743 -249.31471252]
[88.27819824 -264.15652466]
[92.27430725 -278.63229370]
[97.92396545 -292.54623413]
[105.15077209 -305.71017456]
[113.85697937 -317.94613647]
[123.92485046 -329.08859253]
[135.21823120 -338.98687744]
[147.58439636 -347.50711060]
[160.85610962 -354.53408813]
[174.85386658 -359.97274780]
[189.38838196 -363.74957275]
[204.26309204 -365.81347656]
[219.27682495 -366.13653564]
[234.22654724 -364.71438599]
[248.91006470 -361.56625366]
[263.12881470 -356.73471069]
[276.69049072 -350.28512573]
[289.41171265 -342.30468750]
[301.12039185 -332.90133667]
[311.65826416 -322.20227051]
[320.88272095 -310.35211182]
[328.66906738 -297.51119995]
[334.91201782 -283.85314941]
[339.52709961 -269.56268311]
[342.45190430 -254.83305359]
[343.64691162 -239.86346436]
[343.09591675 -224.85636902]
[340.80639648 -210.01472473]
[336.80932617 -195.53923035]
[331.15872192 -181.62565613]
[323.93106079 -168.46217346]
[315.22402954 -156.22680664]
[305.15539551 -145.08502197]
[293.86135864 -135.18750000]
[281.49462891 -126.66808319]
[268.22244263 -119.64199066]
[254.22433472 -114.20425415]
[239.68955994 -110.42840576]
[224.81471252 -108.36550140]
[209.80096436 -108.04344940]
[194.85134888 -109.46660614]
[180.16802979 -112.61571503]
[175.34204102 -98.41326141]
[170.51603699 -84.21080780]
[165.69004822 -70.00835419]
[177.69979858 -61.10180283]
[186.38038635 -48.90271759]
[190.87141418 -34.59849548]
[190.72105408 -19.58622169]
[185.93147278 -5.33622408]
[176.95977783 6.75194263]
[164.67449951 15.48694706]
[150.27148438 20.00308800]
[135.15748596 19.84607697]
[130.33148193 34.04853058]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[97.78692627 176.38665771]
[111.36964417 182.76055908]
[124.57714081 189.87947083]
[137.36859131 197.72138977]
[149.70446777 206.26206970]
[161.54663086 215.47511292]
[172.85847473 225.33204651]
[183.60504150 235.80239868]
[193.75309753 246.85382080]
[203.27130127 258.45211792]
[212.13021851 270.56149292]
[220.30247498 283.14447021]
[227.76278687 296.16217041]
[234.48812866 309.57434082]
[240.45768738 323.33956909]
[245.65301514 337.41528320]
[250.05807495 351.75793457]
[253.65922546 366.32327271]
[256.44534302 381.06622314]
[258.40780640 395.94122314]
[259.54055786 410.90228271]
[259.84011841 425.90319824]
[259.30554199 440.89758301]
[257.93847656 455.83905029]
[255.74314880 470.68148804]
[252.72634888 485.37896729]
[248.89739990 499.88607788]
[244.26812744 514.15795898]
[238.85285950 528.15051270]
[232.66833496 541.82049561]
[225.73365784 555.12567139]
[218.07025146 568.02484131]
[209.70182800 580.47821045]
[200.65423584 592.44726562]
[190.95545959 603.89501953]
[180.63546753 614.78601074]
[169.72613525 625.08673096]
[158.26123047 634.76513672]
[146.27615356 643.79150391]
[133.80795288 652.13781738]
[120.89518738 659.77832031]
[107.57775879 666.68939209]
[93.89682007 672.84967041]
[79.89467621 678.24011230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[73 160]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[87 146]
[88 145]
[89 144]
[90 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
