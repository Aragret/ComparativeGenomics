%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[5.40418339 597.34033203]
[-3.28995776 609.62445068]
[-14.21375370 619.97607422]
[-26.94732475 627.99743652]
[-41.00122452 633.38024902]
[-55.83525848 635.91748047]
[-70.87924194 635.51171875]
[-85.55493927 632.17846680]
[-99.29823303 626.04595947]
[-111.58088684 617.34985352]
[-121.93078613 606.42437744]
[-129.95008850 593.68951416]
[-135.33058167 579.63470459]
[-137.86543274 564.80029297]
[-137.45722961 549.75634766]
[-134.12164307 535.08117676]
[-127.98688507 521.33886719]
[-119.28876495 509.05764771]
[-108.36161804 498.70953369]
[-95.62545013 490.69226074]
[-81.56980896 485.31405640]
[-66.73495483 482.78158569]
[-51.69110107 483.19226074]
[-48.36884308 468.56478882]
[-45.04658127 453.93731689]
[-41.72432327 439.30987549]
[-38.40206528 424.68240356]
[-48.89005280 435.40631104]
[-62.80286407 441.01287842]
[-77.79594421 440.55731201]
[-91.34269714 434.11639404]
[-101.16025543 422.77551270]
[-105.59419250 408.44583130]
[-103.89730072 393.54211426]
[-96.35554504 380.57592773]
[-84.23984528 371.73229980]
[-69.59191132 368.50152588]
[-54.88016510 371.42807007]
[-42.58380508 380.01873779]
[-34.77497864 392.82583618]
[-32.76973724 407.69284058]
[-26.69590187 393.97756958]
[-30.75935173 382.58395386]
[-25.81138802 371.10781860]
[-14.00369453 365.91732788]
[-7.72633362 352.29400635]
[-1.44897294 338.67068481]
[4.82838774 325.04739380]
[11.10574818 311.42407227]
[8.55741596 294.06109619]
[23.68113327 283.55609131]
[29.34391975 269.66607666]
[34.59063721 255.61360168]
[39.83735657 241.56112671]
[45.08407593 227.50866699]
[50.33079147 213.45619202]
[55.57751083 199.40371704]
[60.82423019 185.35124207]
[66.07094574 171.29878235]
[71.31766510 157.24630737]
[63.68908310 142.25819397]
[69.37284088 126.07147980]
[85.31262970 118.86437225]
[90.34954834 104.73534393]
[92.68503571 89.91827393]
[92.23842621 74.92492676]
[91.79182434 59.93157578]
[91.34521484 44.93822479]
[90.89861298 29.94487572]
[90.45200348 14.95152569]
[87.30788422 9.13550949]
[87.53834534 3.45713758]
[90.22203064 -0.49341777]
[90.22203064 -15.49341774]
[90.22203064 -30.49341774]
[79.66495514 -38.85779572]
[75.90768433 -51.58938217]
[80.10700226 -63.97678757]
[90.51760101 -71.56947327]
[90.74092865 -86.56781006]
[77.50566101 -91.82888031]
[66.88345337 -101.27185059]
[60.13669205 -113.74720001]
[58.05787659 -127.74668121]
[60.87654877 -141.58566284]
[68.23414612 -153.60586548]
[79.22947693 -162.37405396]
[92.52906036 -166.85293579]
[92.97566986 -181.84628296]
[80.86892700 -191.37167358]
[76.74072266 -206.02812195]
[81.97246552 -220.13815308]
[94.36126709 -228.36343384]
[94.80787659 -243.35679626]
[95.25448608 -258.35012817]
[95.70108795 -273.34347534]
[96.14769745 -288.33685303]
[88.82470703 -302.36126709]
[96.93751526 -314.85250854]
[97.38412476 -329.84588623]
[83.81214905 -336.82901001]
[74.62095642 -349.01443481]
[71.63545227 -363.98272705]
[75.44841766 -378.76190186]
[85.30278778 -390.41757202]
[99.24195862 -396.63543701]
[114.49831390 -396.18099976]
[128.04267883 -389.14447021]
[137.18582153 -376.92294312]
[140.11235046 -361.94302368]
[136.24121094 -347.17898560]
[126.34102631 -335.56222534]
[112.37747192 -329.39926147]
[111.93086243 -314.40591431]
[119.28579712 -301.45391846]
[111.14104462 -287.89022827]
[110.69443512 -272.89688110]
[110.24783325 -257.90353394]
[109.80122375 -242.91018677]
[109.35462189 -227.91683960]
[121.23188782 -218.96873474]
[125.61450195 -204.57231140]
[120.62125397 -190.18757629]
[107.96901703 -181.39967346]
[107.52240753 -166.40632629]
[122.07422638 -160.13172913]
[133.13087463 -148.72560120]
[138.97807312 -133.91394043]
[138.69294739 -117.95391846]
[132.28958130 -103.28992462]
[120.72138977 -92.17922974]
[105.73926544 -86.34448242]
[105.51593781 -71.34614563]
[117.73449707 -59.78995132]
[117.81616974 -42.63453674]
[105.22203064 -30.49341774]
[105.22203064 -15.49341774]
[105.22203064 -0.49341777]
[105.44535828 14.50492001]
[105.89196014 29.49827003]
[106.33856964 44.49161911]
[106.78517151 59.48497009]
[107.23178101 74.47831726]
[107.67838287 89.47167206]
[113.91311646 75.82879639]
[123.08849335 63.96234894]
[134.72317505 54.49481964]
[148.20684814 47.92286301]
[162.83218384 44.59122467]
[177.83193970 44.67467499]
[192.41929626 48.16884232]
[205.82901001 54.89042282]
[217.35763550 64.48681641]
[226.40040588 76.45462036]
[232.48295593 90.16603088]
[235.28619385 104.90175629]
[234.66310120 119.88880920]
[230.64633179 134.34098816]
[223.44660950 147.50016785]
[213.44160461 158.67604065]
[201.15618896 167.28234863]
[187.23480225 172.86761475]
[172.40776062 175.13883972]
[157.45281982 173.97688293]
[143.15452576 169.44271851]
[130.26292419 161.77418518]
[119.45427704 151.37355042]
[111.29558563 138.78642273]
[106.21484375 124.67308807]
[104.47857666 109.77226257]
[99.44165802 123.90129089]
[106.57702637 135.32499695]
[105.84094238 148.57899475]
[97.72583008 158.83702087]
[85.37014008 162.49302673]
[80.12342072 176.54550171]
[74.87670135 190.59796143]
[69.62998199 204.65043640]
[64.38326263 218.70291138]
[59.13654709 232.75538635]
[53.88982773 246.80784607]
[48.64310837 260.86032104]
[43.39639282 274.91278076]
[44.26700974 279.16671753]
[43.78696060 283.08261108]
[42.22837448 286.27731323]
[39.95983887 288.49551392]
[37.39640045 289.62994385]
[41.30603409 301.92129517]
[35.96476746 313.21972656]
[24.72906494 317.70141602]
[18.45170403 331.32473755]
[12.17434311 344.94805908]
[5.89698267 358.57138062]
[-0.38037813 372.19470215]
[1.73304093 390.48718262]
[-12.98063564 400.05142212]
[-19.05447006 413.76666260]
[-23.77460289 428.00466919]
[-27.09686279 442.63214111]
[-30.41912270 457.25958252]
[-33.74138260 471.88705444]
[-37.06364059 486.51449585]
[-23.31835747 492.64257812]
[-11.03288937 501.33474731]
[-0.67945945 512.25683594]
[7.34397459 524.98913574]
[12.72901344 539.04217529]
[15.26867008 553.87579346]
[14.86532784 568.91986084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 203]
[24 202]
[25 201]
[26 200]
[27 199]
[41 198]
[42 197]
[45 195]
[46 194]
[47 193]
[48 192]
[49 191]
[51 188]
[52 183]
[53 182]
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[59 176]
[60 175]
[63 171]
[64 170]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[73 138]
[74 137]
[75 136]
[79 133]
[80 132]
[88 125]
[89 124]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
