%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[81.15283203 784.49829102]
[66.29565430 786.64050293]
[51.30420303 787.40270996]
[36.30637360 786.77844238]
[21.43012428 784.77301025]
[6.80237961 781.40344238]
[-7.45206165 776.69860840]
[-21.21158218 770.69860840]
[-34.35878754 763.45458984]
[-46.78150558 755.02838135]
[-58.37375641 745.49194336]
[-69.03662872 734.92651367]
[-78.67914581 723.42230225]
[-87.21904755 711.07751465]
[-94.58347321 697.99737549]
[-100.70958710 684.29351807]
[-105.54512024 670.08288574]
[-109.04882050 655.48669434]
[-111.19079590 640.62951660]
[-111.95276642 625.63800049]
[-111.32823181 610.64019775]
[-109.32252502 595.76397705]
[-105.95275879 581.13629150]
[-101.24768066 566.88195801]
[-95.24742889 553.12249756]
[-88.00320435 539.97546387]
[-79.57680511 527.55285645]
[-70.04013062 515.96075439]
[-59.47454834 505.29806519]
[-47.97019577 495.65573120]
[-35.62522888 487.11602783]
[-22.54497147 479.75183105]
[-8.84102440 473.62594604]
[5.36969471 468.79064941]
[19.96594238 465.28720093]
[34.82318497 463.14547729]
[49.81466293 462.38375854]
[64.81246948 463.00854492]
[66.81648254 448.14300537]
[68.82050323 433.27746582]
[70.82451630 418.41195679]
[72.82852936 403.54641724]
[74.83254242 388.68087769]
[76.83655548 373.81536865]
[78.06352997 358.86563110]
[78.51013947 343.87228394]
[78.95674133 328.87893677]
[79.40335083 313.88558960]
[79.84995270 298.89224243]
[80.29656219 283.89886475]
[80.74316406 268.90551758]
[81.18977356 253.91218567]
[81.63637543 238.91882324]
[74.28144836 225.96682739]
[82.42620087 212.40315247]
[82.87280273 197.40979004]
[70.33156586 205.63885498]
[56.03163910 201.10981750]
[50.51439667 187.16134644]
[57.84694290 174.07571411]
[72.62400055 171.49917603]
[83.95181274 181.32952881]
[85.51232910 166.41093445]
[87.07285309 151.49232483]
[88.63337708 136.57371521]
[90.19390106 121.65511322]
[91.75442505 106.73651123]
[92.08940125 91.74024963]
[91.19658661 76.76684570]
[90.30377197 61.79344177]
[89.41094971 46.82003403]
[88.51813507 31.84662819]
[87.62532043 16.87322235]
[73.99372101 9.93587303]
[65.71942139 -2.80903578]
[64.94058990 -17.88417435]
[71.76638794 -31.23574448]
[84.27449036 -39.32357407]
[83.38166809 -54.29697800]
[82.48885345 -69.27038574]
[67.16303253 -73.18699646]
[53.81406403 -81.63751221]
[43.74225235 -93.78457642]
[37.92427444 -108.43144989]
[36.91849136 -124.13990784]
[40.81137085 -139.37150574]
[49.21020126 -152.63819885]
[61.28268433 -162.64772034]
[75.83937836 -168.42951965]
[74.72372437 -183.38796997]
[73.60807800 -198.34642029]
[64.86579895 -211.53289795]
[71.63505554 -224.80039978]
[70.51940918 -239.75885010]
[69.40376282 -254.71730042]
[54.87381744 -259.10424805]
[42.91220474 -268.44683838]
[35.13662720 -281.48159790]
[32.59866714 -296.44564819]
[35.64156723 -311.31527710]
[43.85379791 -324.07940674]
[56.12472534 -333.01187134]
[70.79479980 -336.90460205]
[85.88002014 -335.23114014]
[99.34024048 -328.21777344]
[109.35505676 -316.81304932]
[114.57006836 -302.55935669]
[114.27997589 -287.38436890]
[108.52401733 -273.34036255]
[98.08063507 -262.32675171]
[84.36221313 -255.83294678]
[85.47785950 -240.87449646]
[86.59351349 -225.91604614]
[95.25598907 -213.79949951]
[88.56652832 -199.46206665]
[89.68218231 -184.50361633]
[90.79782867 -169.54516602]
[104.72394562 -166.50392151]
[117.24224854 -159.65322876]
[127.33338165 -149.54067993]
[134.17274475 -136.97991943]
[137.19790649 -122.98515320]
[136.15480042 -108.68923950]
[131.11903381 -95.25201416]
[122.49055481 -83.76618958]
[110.96181488 -75.16847229]
[97.46226501 -70.16320038]
[98.35507965 -55.18979645]
[99.24789429 -40.21638870]
[112.62845612 -33.67221832]
[120.99246979 -21.22636795]
[122.01055145 -6.16549444]
[115.30936432 7.47235489]
[102.59872437 15.98040676]
[103.49154663 30.95381165]
[104.38436127 45.92721939]
[105.27717590 60.90062332]
[106.16999054 75.87403107]
[107.06280518 90.84743500]
[114.76837921 77.97792816]
[127.52375031 70.08486938]
[142.47935486 68.93158722]
[156.29405212 74.77572632]
[165.88162231 86.31169128]
[169.10015869 100.96232605]
[165.23065186 115.45462799]
[155.13755798 126.55098724]
[141.07568359 131.77244568]
[126.18649292 129.95252991]
[113.79627228 121.49779510]
[106.67302704 108.29703522]
[105.11250305 123.21563721]
[103.55198669 138.13424683]
[101.99146271 153.05284119]
[100.43093872 167.97145081]
[98.87041473 182.89006042]
[97.86615753 197.85639954]
[97.41954803 212.84974670]
[104.74253845 226.87417603]
[96.62973022 239.36543274]
[96.18312073 254.35877991]
[95.73651886 269.35214233]
[95.28990936 284.34548950]
[94.84330750 299.33883667]
[94.39669800 314.33218384]
[93.95008850 329.32553101]
[93.50348663 344.31887817]
[93.05687714 359.31222534]
[103.91419983 348.96243286]
[118.87563324 347.88748169]
[131.10101318 356.57885742]
[135.00106812 371.06298828]
[128.79273987 384.71789551]
[115.31438446 391.30075073]
[100.72814178 387.80197144]
[91.70207977 375.81936646]
[89.69806671 390.68490601]
[87.69405365 405.55044556]
[85.69004059 420.41595459]
[83.68602753 435.28149414]
[81.68201447 450.14700317]
[79.67800140 465.01254272]
[94.30586243 468.38159180]
[108.56045532 473.08593750]
[122.32017517 479.08551025]
[135.46762085 486.32907104]
[147.89062500 494.75485229]
[159.48318481 504.29095459]
[170.14640808 514.85601807]
[179.78932190 526.35986328]
[188.32963562 538.70440674]
[195.69448853 551.78430176]
[201.82106018 565.48791504]
[206.65707397 579.69842529]
[210.16125488 594.29449463]
[212.30372620 609.15161133]
[213.06619263 624.14306641]
[212.44216919 639.14093018]
[210.43695068 654.01721191]
[207.06767273 668.64501953]
[202.36306763 682.89953613]
[196.36326599 696.65911865]
[189.11947632 709.80645752]
[180.69349670 722.22930908]
[171.15721130 733.82171631]
[160.59197998 744.48480225]
[149.08795166 754.12750244]
[136.74327087 762.66760254]
[123.66326141 770.03222656]
[109.95951843 776.15856934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[55 158]
[56 157]
[62 156]
[63 155]
[64 154]
[65 153]
[66 152]
[67 151]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[78 129]
[79 128]
[80 127]
[89 117]
[90 116]
[91 115]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
