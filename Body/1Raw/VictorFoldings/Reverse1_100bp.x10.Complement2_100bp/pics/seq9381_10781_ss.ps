%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[109.91051483 483.34896851]
[95.05614471 480.41189575]
[81.96154785 472.80859375]
[72.04713440 461.36380005]
[66.38832855 447.31900024]
[65.59897614 432.19763184]
[69.76468658 417.63995361]
[78.43359375 405.22509766]
[90.66537476 396.29971313]
[105.13319397 391.83197021]
[105.57980347 376.83862305]
[106.02640533 361.84527588]
[106.47301483 346.85192871]
[106.02640533 331.85858154]
[104.68817139 316.91839600]
[103.34993744 301.97821045]
[102.01170349 287.03802490]
[100.67346954 272.09783936]
[99.33523560 257.15765381]
[90.49331665 245.17141724]
[96.96857452 230.73599243]
[95.63034058 215.79580688]
[94.29210663 200.85562134]
[92.95387268 185.91543579]
[82.52980042 196.70147705]
[67.53496552 197.09529114]
[56.55910492 186.87127686]
[55.88967896 171.88623047]
[65.91017151 160.72424316]
[80.88037872 159.77943420]
[92.22427368 169.59216309]
[92.22427368 154.59216309]
[92.22427368 139.59216309]
[92.22427368 124.59216309]
[92.22427368 109.59216309]
[85.31479645 122.90603638]
[74.83081818 133.63386536]
[61.67929840 140.84756470]
[46.99798203 143.92309570]
[32.05694580 142.59440613]
[18.14874077 136.97640991]
[6.47656488 127.55514526]
[-1.94982195 115.14562988]
[-6.40145254 100.82141876]
[-6.49321651 85.82170105]
[-2.21717548 71.44409943]
[6.05675077 58.93241882]
[17.61278343 49.36904526]
[31.45121193 43.58130646]
[46.37487411 42.06990433]
[61.09272003 44.96558380]
[74.33151245 52.01784134]
[84.94596100 62.61658859]
[92.01781464 75.84492493]
[94.93511200 90.55495453]
[99.12212372 76.15117645]
[103.30913544 61.74739456]
[107.49614716 47.34361267]
[111.68315887 32.93983078]
[115.87017059 18.53604698]
[115.26058197 9.42198086]
[120.22822571 3.94984818]
[124.62922668 -10.38999939]
[129.03022766 -24.72984695]
[133.43122864 -39.06969452]
[130.08340454 -54.53263855]
[141.21437073 -64.42965698]
[145.61537170 -78.76950836]
[132.85112000 -88.30436707]
[124.13814545 -101.61111450]
[120.51453400 -117.07080078]
[122.40051270 -132.81004333]
[129.54980469 -146.92807007]
[141.08161926 -157.72619629]
[155.58911133 -163.91226196]
[171.31101990 -164.75526428]
[175.49803162 -179.15904236]
[179.68504333 -193.56283569]
[183.87205505 -207.96661377]
[188.05906677 -222.37039185]
[192.24607849 -236.77416992]
[196.43309021 -251.17796326]
[200.62010193 -265.58172607]
[204.80711365 -279.98553467]
[208.99412537 -294.38931274]
[213.18113708 -308.79309082]
[217.36814880 -323.19686890]
[213.79048157 -338.60824585]
[224.77285767 -348.66989136]
[210.94854736 -354.53713989]
[197.91520691 -361.99829102]
[185.85583496 -370.94860840]
[174.93971252 -381.26242065]
[165.32009888 -392.79492188]
[157.13201904 -405.38427734]
[150.49041748 -418.85369873]
[145.48855591 -433.01412964]
[142.19664001 -447.66677856]
[140.66087341 -462.60589600]
[140.90283203 -477.62182617]
[142.91911316 -492.50372314]
[146.68139648 -507.04269409]
[152.13690186 -521.03460693]
[159.20899963 -534.28308105]
[167.79844666 -546.60211182]
[177.78462219 -557.81872559]
[189.02737427 -567.77545166]
[201.36885071 -576.33258057]
[214.63580322 -583.36993408]
[228.64196777 -588.78875732]
[243.19075012 -592.51293945]
[258.07788086 -594.49017334]
[273.09439087 -594.69281006]
[288.02944946 -593.11785889]
[302.67340088 -589.78753662]
[316.82067871 -584.74859619]
[330.27264404 -578.07171631]
[342.84048462 -569.85070801]
[354.34777832 -560.20086670]
[364.63293457 -549.25775146]
[373.55160522 -537.17498779]
[380.97854614 -524.12213135]
[386.80957031 -510.28247070]
[390.96273804 -495.85031128]
[393.37976074 -481.02822876]
[394.02676392 -466.02429199]
[392.89459229 -451.04916382]
[389.99917603 -436.31304932]
[385.38116455 -422.02282715]
[379.10537720 -408.37911987]
[371.25991821 -395.57345581]
[361.95492554 -383.78561401]
[351.32104492 -373.18103027]
[339.50753784 -363.90866089]
[326.68023682 -356.09860229]
[313.01925659 -349.86050415]
[298.71633911 -345.28198242]
[283.97229004 -342.42730713]
[268.99407959 -341.33648682]
[253.99198914 -342.02493286]
[239.17663574 -344.48287964]
[243.05378723 -330.10174561]
[231.77192688 -319.00985718]
[227.58491516 -304.60607910]
[223.39790344 -290.20230103]
[219.21089172 -275.79852295]
[215.02388000 -261.39471436]
[210.83686829 -246.99095154]
[206.64985657 -232.58715820]
[202.46284485 -218.18338013]
[198.27583313 -203.77960205]
[194.08882141 -189.37582397]
[189.90180969 -174.97203064]
[185.71479797 -160.56825256]
[197.38580322 -152.55569458]
[206.02479553 -141.31340027]
[210.77661133 -127.93243408]
[211.16419983 -113.71662140]
[207.13642883 -100.05546570]
[199.07437134 -88.28835297]
[187.75532532 -79.57323456]
[174.27786255 -74.77267456]
[159.95521545 -74.36850739]
[155.55421448 -60.02865982]
[159.21681213 -45.59139633]
[147.77107239 -34.66869354]
[143.37007141 -20.32884789]
[138.96907043 -5.98900080]
[134.56806946 8.35084629]
[130.27395630 22.72305870]
[126.08694458 37.12684250]
[121.89993286 51.53062439]
[117.71292114 65.93440247]
[113.52590942 80.33818817]
[109.33889771 94.74196625]
[107.22427368 109.59216309]
[107.22427368 124.59216309]
[107.22427368 139.59216309]
[107.22427368 154.59216309]
[107.22427368 169.59216309]
[107.89405823 184.57720947]
[109.23229218 199.51739502]
[110.57052612 214.45758057]
[111.90876007 229.39776611]
[120.84639740 242.45262146]
[114.27542114 255.81942749]
[115.61365509 270.75961304]
[116.95188904 285.69979858]
[118.29012299 300.63998413]
[119.62835693 315.58016968]
[120.96659088 330.52035522]
[129.79493713 318.39349365]
[144.02923584 313.66226196]
[158.36045837 318.09127808]
[167.44340515 330.02859497]
[167.89036560 345.02194214]
[159.53463745 357.47912598]
[145.49269104 362.75396729]
[131.00183105 358.87905884]
[121.46636200 347.29852295]
[121.01976013 362.29190063]
[120.57315063 377.28524780]
[120.12654877 392.27859497]
[134.30279541 397.59954834]
[145.98162842 407.23715210]
[153.89622498 420.14599609]
[157.18806458 434.92578125]
[155.50007629 449.97335815]
[149.01535034 463.65646362]
[138.43730164 474.49081421]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 203]
[11 202]
[12 201]
[13 200]
[14 191]
[15 190]
[16 189]
[17 188]
[18 187]
[19 186]
[21 184]
[22 183]
[23 182]
[24 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 171]
[60 170]
[62 169]
[63 168]
[64 167]
[65 166]
[67 164]
[68 163]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[89 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
