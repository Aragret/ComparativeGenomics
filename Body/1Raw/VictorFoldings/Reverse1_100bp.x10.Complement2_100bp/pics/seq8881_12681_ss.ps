%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[197.87722778 416.28768921]
[210.06671143 407.47537231]
[203.58720398 393.94702148]
[197.10771179 380.41870117]
[194.51162720 379.36108398]
[192.17805481 377.21142578]
[190.52503967 374.06454468]
[189.92861938 370.16467285]
[190.67219543 365.88671875]
[185.00941467 351.99667358]
[179.34661865 338.10665894]
[173.68383789 324.21664429]
[168.02105713 310.32659912]
[162.35826111 296.43658447]
[159.82974243 295.22634888]
[157.62825012 292.94158936]
[156.16548157 289.70187378]
[155.80223083 285.77343750]
[156.79911804 281.54733276]
[151.97311401 267.34484863]
[147.14712524 253.14241028]
[133.34539795 242.30361938]
[137.08236694 224.27262878]
[132.04545593 210.14360046]
[127.00852966 196.01457214]
[121.97161865 181.88554382]
[116.93470001 167.75651550]
[111.89778137 153.62748718]
[106.75582123 139.53634644]
[101.50910950 125.48387146]
[96.26239014 111.43139648]
[90.80702972 97.45860291]
[85.14424133 83.56857300]
[79.48146057 69.67854309]
[73.81867218 55.78851700]
[68.15588379 41.89849091]
[62.49309921 28.00846481]
[56.83031082 14.11843777]
[51.16752625 0.22841072]
[45.50473785 -13.66161633]
[39.22737885 -27.28493309]
[32.34796524 -40.61436081]
[25.46855354 -53.94379044]
[20.12057877 -57.83103943]
[17.87556267 -63.05185699]
[18.58944130 -67.77408600]
[12.10994625 -81.30242920]
[-2.52487516 -86.63719940]
[-8.90328884 -100.44916534]
[-3.72721171 -114.36835480]
[-16.66661453 -123.47233582]
[-15.18617630 -138.29318237]
[-21.66567230 -151.82153320]
[-28.14516830 -165.34988403]
[-34.62466431 -178.87821960]
[-48.67513657 -173.59867859]
[-63.13228989 -169.56382751]
[-77.88609314 -166.80435181]
[-92.82425690 -165.34127808]
[-107.83309174 -165.18571472]
[-122.79837036 -166.33886719]
[-137.60620117 -168.79196167]
[-152.14387512 -172.52632141]
[-166.30075073 -177.51350403]
[-179.96910095 -183.71559143]
[-193.04487610 -191.08535767]
[-205.42855835 -199.56671143]
[-217.02592468 -209.09512329]
[-227.74870300 -219.59805298]
[-237.51525879 -230.99557495]
[-246.25129700 -243.20095825]
[-253.89030457 -256.12127686]
[-260.37414551 -269.65823364]
[-265.65350342 -283.70877075]
[-269.68817139 -298.16598511]
[-272.44741821 -312.91983032]
[-273.91030884 -327.85800171]
[-274.06564331 -342.86685181]
[-272.91226196 -357.83212280]
[-270.45898438 -372.63989258]
[-266.72442627 -387.17752075]
[-261.73703003 -401.33435059]
[-255.53474426 -415.00259399]
[-248.16479492 -428.07827759]
[-239.68327332 -440.46185303]
[-230.15469360 -452.05908203]
[-219.65161133 -462.78170776]
[-208.25395203 -472.54809570]
[-196.04846191 -481.28396606]
[-183.12802124 -488.92279053]
[-169.59098816 -495.40646362]
[-155.54035950 -500.68560791]
[-141.08309937 -504.72006226]
[-126.32921600 -507.47909546]
[-111.39101410 -508.94177246]
[-96.38217163 -509.09689331]
[-81.41692352 -507.94332886]
[-66.60916901 -505.48983765]
[-52.07159805 -501.75506592]
[-37.91485596 -496.76745605]
[-24.24669075 -490.56500244]
[-11.17112160 -483.19488525]
[1.21233559 -474.71316528]
[12.80943298 -465.18444824]
[23.53190804 -454.68121338]
[33.29815292 -443.28341675]
[42.03384399 -431.07778931]
[49.67249298 -418.15725708]
[56.15596390 -404.62011719]
[61.43491364 -390.56942749]
[65.46916199 -376.11209106]
[68.22801208 -361.35818481]
[69.69046783 -346.41995239]
[69.84539032 -331.41110229]
[68.69160461 -316.44586182]
[66.23789215 -301.63815308]
[62.50292587 -287.10064697]
[57.51513672 -272.94396973]
[51.31247711 -259.27587891]
[43.94216156 -246.20042419]
[35.46028137 -233.81707764]
[25.93138885 -222.22012329]
[15.42800522 -211.49778748]
[4.03007078 -201.73170471]
[-8.17566872 -192.99618530]
[-21.09631729 -185.35771179]
[-14.61682224 -171.82937622]
[-8.13732624 -158.30102539]
[-1.65783048 -144.77267456]
[10.81811428 -136.63633728]
[9.80113411 -120.84785461]
[23.89099503 -116.15621948]
[30.65484047 -102.52885437]
[25.63829231 -87.78192139]
[32.11778641 -74.25357819]
[38.79798126 -60.82320404]
[45.67739487 -47.49377441]
[52.55680847 -34.16434479]
[58.13758469 -48.08752441]
[71.87415314 -54.11302948]
[85.89758301 -48.78917694]
[92.17461395 -35.16571045]
[87.10948181 -21.04677010]
[73.60372162 -14.52032757]
[59.39476395 -19.32440186]
[65.05754852 -5.43437576]
[70.72033691 8.45565128]
[76.38312531 22.34567833]
[82.04591370 36.23570633]
[87.70870209 50.12573242]
[93.37148285 64.01576233]
[99.03427124 77.90578461]
[104.69705963 91.79581451]
[108.94579315 94.87188721]
[111.16860962 100.10948181]
[110.31485748 106.18467712]
[115.56157684 120.23715210]
[120.80829620 134.28962708]
[126.74172211 141.23457336]
[126.02681732 148.59056091]
[131.06373596 162.71958923]
[136.10064697 176.84861755]
[141.13755798 190.97764587]
[146.17448425 205.10668945]
[151.21139526 219.23571777]
[162.50892639 225.45893860]
[166.41331482 237.33073425]
[161.34957886 248.31640625]
[166.17558289 262.51885986]
[171.00157166 276.72131348]
[176.24829102 290.77380371]
[181.91107178 304.66381836]
[187.57386780 318.55383301]
[193.23664856 332.44387817]
[198.89944458 346.33389282]
[204.56222534 360.22393799]
[210.63606262 373.93917847]
[217.11555481 387.46752930]
[223.59504700 400.99588013]
[238.10182190 397.02182007]
[253.08509827 395.70211792]
[268.06320190 397.07922363]
[282.55462646 401.10882568]
[296.09359741 407.66140747]
[308.24484253 416.52633667]
[318.61776733 427.41860962]
[326.87893677 439.98815918]
[332.76275635 453.83084106]
[336.08010864 468.50173950]
[336.72433472 483.52920532]
[334.67477417 498.43017578]
[329.99725342 512.72564697]
[322.84216309 525.95611572]
[313.43951416 537.69616699]
[302.09152222 547.56854248]
[289.16305542 555.25579834]
[275.06964111 560.51086426]
[260.26434326 563.16479492]
[245.22312927 563.13226318]
[230.42945862 560.41436768]
[216.35890198 555.09838867]
[203.46379089 547.35528564]
[192.15861511 537.43395996]
[182.80682373 525.65332031]
[175.70901489 512.39202881]
[171.09336853 498.07647705]
[169.10824585 483.16677856]
[169.81745911 468.14224243]
[173.19822693 453.48583984]
[179.14186096 439.66870117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[9 176]
[10 175]
[11 174]
[12 173]
[13 172]
[14 171]
[19 170]
[20 169]
[21 168]
[23 165]
[24 164]
[25 163]
[26 162]
[27 161]
[28 160]
[29 158]
[30 157]
[31 156]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[41 138]
[42 137]
[43 136]
[46 135]
[47 134]
[50 131]
[52 129]
[53 128]
[54 127]
[55 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
