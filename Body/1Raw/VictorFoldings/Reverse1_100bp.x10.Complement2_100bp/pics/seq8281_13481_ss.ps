%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[112.04007721 590.47033691]
[106.84272003 576.36761475]
[103.85916138 561.63671875]
[103.15933990 546.62304688]
[104.75965881 531.67846680]
[108.62260437 517.15338135]
[114.65762329 503.38827515]
[122.72325134 490.70574951]
[132.63041687 479.40316772]
[144.14686584 469.74545288]
[157.00265503 461.95898438]
[170.89642334 456.22628784]
[167.35676575 441.64993286]
[163.81709290 427.07354736]
[160.27742004 412.49716187]
[156.73774719 397.92080688]
[153.19807434 383.34442139]
[149.65840149 368.76803589]
[140.48919678 364.25820923]
[135.20497131 355.25680542]
[135.75874329 344.61380005]
[142.20878601 335.85562134]
[139.10467529 321.18032837]
[136.00056458 306.50500488]
[132.89645386 291.82971191]
[122.93241882 284.97079468]
[120.22623444 272.76995850]
[126.76110840 261.64981079]
[123.87583160 246.92990112]
[111.40979004 238.85937500]
[108.27402496 223.97241211]
[116.82366180 210.95159912]
[113.93839264 196.23171997]
[111.05311584 181.51182556]
[108.16784668 166.79193115]
[104.95456696 152.14015198]
[101.41490173 137.56376648]
[97.87522888 122.98739624]
[94.33555603 108.41101837]
[89.52436066 101.94380188]
[90.85340881 93.59128571]
[87.53115082 78.96382141]
[74.71049500 65.74594116]
[80.55104065 49.19737244]
[77.01136780 34.62099838]
[72.93170166 20.18644524]
[68.31768799 5.91371155]
[63.70368195 -8.35902214]
[59.08967209 -22.63175583]
[54.47566223 -36.90448761]
[49.86165237 -51.17722321]
[45.24764252 -65.44995880]
[40.63363266 -79.72268677]
[26.84274101 -86.96485901]
[22.36680031 -101.50516510]
[29.35609055 -114.60804749]
[24.74208260 -128.88078308]
[18.77051926 -142.64088440]
[11.49728966 -155.75958252]
[4.22406006 -168.87826538]
[-3.04916954 -181.99696350]
[-10.32239914 -195.11566162]
[-17.59562874 -208.23435974]
[-31.51216316 -202.58746338]
[-46.00790024 -198.65922546]
[-60.87144852 -196.50694275]
[-75.88605499 -196.16201782]
[-90.83275604 -197.62944031]
[-105.49359894 -200.88783264]
[-119.65476990 -205.88969421]
[-133.10977173 -212.56205750]
[-145.66236877 -220.80761719]
[-157.12953186 -230.50614929]
[-167.34403992 -241.51622009]
[-176.15690613 -253.67724609]
[-183.43962097 -266.81192017]
[-189.08599854 -280.72866821]
[-193.01368713 -295.22454834]
[-195.16540527 -310.08816528]
[-195.50978088 -325.10278320]
[-194.04179382 -340.04943848]
[-190.78285217 -354.71014404]
[-185.78047180 -368.87112427]
[-179.10760498 -382.32589722]
[-170.86157227 -394.87817383]
[-161.16261292 -406.34497070]
[-150.15216064 -416.55908203]
[-137.99079895 -425.37149048]
[-124.85586548 -432.65371704]
[-110.93891144 -438.29956055]
[-96.44287872 -442.22671509]
[-81.57917023 -444.37786865]
[-66.56453705 -444.72171021]
[-51.61794281 -443.25314331]
[-36.95734787 -439.99365234]
[-22.79654884 -434.99075317]
[-9.34205151 -428.31738281]
[3.20993948 -420.07086182]
[14.67637730 -410.37149048]
[24.89004707 -399.36065674]
[33.70200729 -387.19897461]
[40.98374557 -374.06375122]
[46.62908173 -360.14657593]
[50.55568695 -345.65042114]
[52.70629501 -330.78662109]
[53.04954910 -315.77197266]
[51.58044434 -300.82543945]
[48.32040024 -286.16497803]
[43.31696320 -272.00436401]
[36.64308929 -258.55010986]
[28.39611435 -245.99841309]
[18.69629478 -234.53234863]
[7.68508720 -224.31909180]
[-4.47693443 -215.50758362]
[2.79629517 -202.38888550]
[10.06952477 -189.27018738]
[17.34275436 -176.15150452]
[24.61598396 -163.03280640]
[31.88921356 -149.91410828]
[32.55968094 -164.89912415]
[39.19416046 -178.35214233]
[50.67462921 -188.00608826]
[65.06642151 -192.23413086]
[79.94427490 -190.32374573]
[92.80100250 -182.59686279]
[101.47001648 -170.35562134]
[104.49044800 -155.66287231]
[101.35329437 -140.99459839]
[92.58722687 -128.82266235]
[79.66946411 -121.19825745]
[64.77690125 -119.40621948]
[50.41917419 -123.74854279]
[39.01481628 -133.49478149]
[43.62882614 -119.22205353]
[56.96556473 -112.69006348]
[61.84814835 -98.28121185]
[54.90636826 -84.33670044]
[59.52037811 -70.06396484]
[64.13438416 -55.79122925]
[68.74839783 -41.51849747]
[73.36240387 -27.24576378]
[77.97640991 -12.97303104]
[82.59042358 1.29970241]
[87.20442963 15.57243538]
[96.25419617 3.60992050]
[111.24462128 3.07413435]
[121.12532806 14.36003876]
[118.61262512 29.14808464]
[105.55878448 36.53707504]
[91.58773804 31.08132553]
[95.12741089 45.65769958]
[105.29124451 52.21690369]
[108.35949707 64.33175659]
[102.15860748 75.64156342]
[105.48086548 90.26902771]
[108.91192627 104.87134552]
[112.45159912 119.44772339]
[115.99127197 134.02409363]
[119.53094482 148.60047913]
[123.13520050 152.37623596]
[124.76750183 156.72238159]
[124.54080963 160.79222107]
[122.88773346 163.90666199]
[125.77301025 178.62655640]
[128.65827942 193.34643555]
[131.54354858 208.06632996]
[144.37612915 216.89598083]
[147.09252930 231.86514282]
[138.59571838 244.04463196]
[141.48100281 258.76452637]
[153.90242004 272.35827637]
[147.57176208 288.72561646]
[150.67587280 303.40090942]
[153.77996826 318.07620239]
[156.88407898 332.75149536]
[171.02084351 347.12213135]
[164.23477173 365.22836304]
[167.77444458 379.80474854]
[171.31411743 394.38113403]
[174.85379028 408.95748901]
[178.39346313 423.53387451]
[181.93313599 438.11026001]
[185.47280884 452.68661499]
[200.44836426 451.40878296]
[215.44348145 452.43203735]
[230.10662842 455.73239136]
[244.09410095 461.23251343]
[257.07800293 468.80343628]
[268.75396729 478.26770020]
[278.84829712 489.40344238]
[287.12435913 501.94964600]
[293.38815308 515.61218262]
[297.49285889 530.07080078]
[299.34225464 544.98657227]
[298.89300537 560.00988770]
[296.15557861 574.78845215]
[291.19421387 588.97595215]
[284.12518311 602.23980713]
[275.11416626 614.26904297]
[264.37243652 624.78167725]
[252.15179443 633.53131104]
[238.73869324 640.31280518]
[224.44754028 644.96728516]
[209.61337280 647.38549805]
[194.58392334 647.51086426]
[179.71147156 645.34039307]
[165.34468079 640.92504883]
[151.82031250 634.36822510]
[139.45539856 625.82366943]
[128.53981018 615.49163818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[22 175]
[23 174]
[24 173]
[25 172]
[28 170]
[29 169]
[32 166]
[33 165]
[34 164]
[35 163]
[36 159]
[37 158]
[38 157]
[39 156]
[41 155]
[42 154]
[44 151]
[45 150]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[56 134]
[57 133]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[63 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
