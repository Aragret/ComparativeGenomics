%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[-45.14271927 433.32849121]
[-37.21476364 446.11370850]
[-31.77129936 460.13809204]
[-28.99772644 474.92398071]
[-28.98851585 489.96771240]
[-31.74397659 504.75698853]
[-37.17026520 518.78802490]
[-45.08255768 531.58294678]
[-55.21136856 542.70599365]
[-67.21170807 551.77825928]
[-80.67485809 558.49078369]
[-95.14226532 562.61499023]
[-110.12117767 564.01031494]
[-125.10140991 562.62927246]
[-139.57275391 558.51892090]
[-153.04229736 551.81927490]
[-165.05130005 542.75842285]
[-175.19073486 531.64508057]
[-183.11524963 518.85772705]
[-188.55493164 504.83187866]
[-191.32450867 490.04525757]
[-191.32966614 475.00149536]
[-188.57022095 460.21298218]
[-183.14015198 446.18341064]
[-175.22441101 433.39059448]
[-165.09260559 422.27029419]
[-153.08981323 413.20126343]
[-139.62486267 406.49234009]
[-125.15634155 402.37207031]
[-110.17705536 400.98077393]
[-95.19719696 402.36584473]
[-80.72696686 406.48007202]
[-74.04676819 393.04971313]
[-67.36657715 379.61932373]
[-60.68638229 366.18896484]
[-54.00618744 352.75857544]
[-67.87622833 358.47012329]
[-82.48122406 355.05047607]
[-92.37387085 343.77502441]
[-93.86444855 328.84927368]
[-86.39701843 315.84014893]
[-72.75674438 309.59973145]
[-58.03110504 312.45553589]
[-47.71240997 323.34243774]
[-45.64947128 338.20101929]
[-37.42066193 325.65960693]
[-29.19185448 313.11822510]
[-20.96304703 300.57681274]
[-12.73423958 288.03540039]
[-14.88559723 276.13171387]
[-8.13268185 265.61590576]
[4.36330318 262.42010498]
[12.77792168 250.00260925]
[21.19254112 237.58511353]
[29.60715866 225.16761780]
[37.07490158 212.15867615]
[43.55439758 198.63032532]
[50.03389359 185.10197449]
[56.51338959 171.57363892]
[62.99288177 158.04528809]
[59.27046585 146.53572083]
[64.55792236 135.21200562]
[76.51492310 130.37538147]
[83.19511414 116.94499969]
[89.87531281 103.51462555]
[94.59544373 89.27663422]
[97.26123810 74.51541901]
[99.92704010 59.75419998]
[102.59283447 44.99298096]
[104.15335846 30.07437706]
[104.59996033 15.08102703]
[105.04656982 0.08767751]
[105.26989746 -14.91065979]
[97.53259277 -28.71083260]
[105.26989746 -41.43810272]
[95.69520569 -57.16727829]
[105.05593109 -72.01126099]
[104.83260345 -87.00959778]
[104.60927582 -102.00793457]
[104.16267395 -117.00128174]
[103.49288940 -131.98632812]
[102.82310486 -146.97135925]
[102.15332031 -161.95640564]
[101.48353577 -176.94143677]
[100.81375122 -191.92648315]
[85.88208008 -193.67047119]
[71.42356873 -197.78720093]
[57.81272125 -204.17007446]
[45.40208817 -212.65373230]
[34.51314163 -223.01843262]
[25.42792892 -234.99569702]
[18.38177681 -248.27531433]
[13.55719852 -262.51327515]
[11.07916355 -277.34078979]
[11.01185799 -292.37380981]
[13.35702610 -307.22293091]
[18.05392075 -321.50354004]
[24.98088264 -334.84570312]
[33.95848465 -346.90383911]
[44.75418854 -357.36563110]
[57.08835602 -365.96005249]
[70.64151001 -372.46453857]
[85.06257629 -376.71060181]
[99.97802734 -378.58819580]
[115.00151825 -378.04876709]
[129.74389648 -375.10623169]
[143.82330322 -369.83685303]
[156.87504578 -362.37707520]
[168.56105042 -352.92016602]
[178.57862854 -341.71102905]
[186.66830444 -329.04006958]
[192.62051392 -315.23547363]
[196.28111267 -300.65478516]
[197.55525208 -285.67568970]
[196.40994263 -270.68621826]
[192.87484741 -256.07461548]
[187.04154968 -242.21932983]
[179.06112671 -229.47927856]
[169.14028931 -218.18444824]
[157.53602600 -208.62739563]
[144.54890442 -201.05567932]
[130.51531982 -195.66543579]
[115.79878998 -192.59626770]
[116.46857452 -177.61122131]
[117.13835907 -162.62619019]
[117.80814362 -147.64114380]
[118.47792816 -132.65611267]
[119.14771271 -117.67106628]
[122.00511932 -113.84428406]
[122.48890686 -108.18186951]
[119.60762024 -102.23126221]
[119.83094788 -87.23292542]
[120.05427551 -72.23458862]
[128.51290894 -63.58716202]
[128.82171631 -51.09362793]
[120.26989746 -41.43810272]
[128.00720215 -28.71083260]
[120.26989746 -14.91065979]
[122.95357513 -10.96010494]
[123.18403625 -5.28173208]
[120.03991699 0.53428346]
[119.59331512 15.52763367]
[119.14670563 30.52098274]
[128.35273743 18.67831039]
[142.20918274 12.93384361]
[157.09400940 14.78917408]
[169.11633301 23.75932312]
[175.13357544 37.49951553]
[173.57281494 52.41809464]
[164.84205627 64.61538696]
[151.22349548 70.90303802]
[136.27697754 69.63748169]
[123.90950012 61.14952850]
[117.35404968 47.65877914]
[114.68825531 62.41999435]
[112.02246094 77.18121338]
[109.35666656 91.94242859]
[118.52228546 80.06845093]
[130.74591064 71.37461090]
[144.97009277 66.61302185]
[159.96429443 66.19560242]
[174.43133545 70.15847015]
[187.11972046 78.15879059]
[196.93174744 89.50446320]
[203.01856995 103.21396637]
[204.85365295 118.10128784]
[202.27819824 132.87854004]
[195.51504517 146.26733398]
[185.14926147 157.10940552]
[172.07759094 164.46679688]
[157.43086243 167.70304871]
[142.47615051 166.53816223]
[128.50721741 161.07292175]
[116.73249817 151.78013611]
[108.17062378 139.46371460]
[103.56228638 125.18914032]
[103.30568695 110.19481659]
[96.62549591 123.62519073]
[89.94529724 137.05557251]
[91.51314545 155.40286255]
[76.52123260 164.52478027]
[70.04173279 178.05313110]
[63.56223679 191.58148193]
[57.08274078 205.10981750]
[50.60324478 218.63816833]
[63.81615829 211.53753662]
[78.81187439 211.89585876]
[91.67056274 219.61947632]
[99.03097534 232.68945312]
[98.96913147 247.68933105]
[91.50119781 260.69815063]
[78.57926178 268.31549072]
[63.58110046 268.55014038]
[50.42718887 261.34082031]
[42.55592728 248.57197571]
[42.02465439 233.58224487]
[33.61003494 245.99974060]
[25.19541740 258.41723633]
[16.78079796 270.83471680]
[15.88337421 289.22702026]
[-0.19283916 296.26422119]
[-8.42164707 308.80563354]
[-16.65045547 321.34701538]
[-24.87926292 333.88842773]
[-33.10807037 346.42980957]
[-40.57581329 359.43878174]
[-47.25600815 372.86914062]
[-53.93619919 386.29953003]
[-60.61639404 399.72988892]
[-67.29659271 413.16027832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 210]
[33 209]
[34 208]
[35 207]
[36 206]
[45 205]
[46 204]
[47 203]
[48 202]
[49 201]
[52 199]
[53 198]
[54 197]
[55 196]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[63 179]
[64 178]
[65 177]
[66 157]
[67 156]
[68 155]
[69 154]
[70 143]
[71 142]
[72 141]
[73 138]
[75 136]
[77 133]
[78 132]
[79 131]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
