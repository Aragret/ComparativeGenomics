%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUCCAAAACCGAGCAUUCUUCCGGAUCUAUCCCCUAACACGCCACACACUACGAUCCCAUCUUAGGCUCAUACAACCUCUUUAUUUUACACGUAUCACCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[75.69563293 716.43792725]
[62.56616211 709.06018066]
[51.32995605 699.03210449]
[42.51254272 686.82281494]
[36.52633286 673.00329590]
[33.65131378 658.21990967]
[34.02195358 643.16412354]
[37.62091446 628.54010010]
[44.27986908 615.03186035]
[53.68736649 603.27124023]
[65.40339661 593.80822754]
[78.87998962 587.08544922]
[93.48680878 583.41735840]
[93.04019928 568.42401123]
[92.59359741 553.43066406]
[92.14698792 538.43731689]
[91.70038605 523.44396973]
[77.43921661 520.82116699]
[64.03242493 515.28100586]
[52.06996918 507.06442261]
[42.07883835 496.53042603]
[34.49980545 484.13998413]
[29.66800499 470.43615723]
[27.79809570 456.02017212]
[28.97473907 441.52502441]
[33.14876556 427.58773804]
[40.13921738 414.82135010]
[49.64120483 403.78793335]
[61.23919296 394.97390747]
[74.42517853 388.76846313]
[88.62093353 385.44656372]
[88.39760590 370.44821167]
[88.17427826 355.44989014]
[87.95095062 340.45153809]
[87.72762299 325.45321655]
[87.50429535 310.45486450]
[76.67098999 300.29736328]
[76.23084259 285.09008789]
[86.95843506 273.79598999]
[86.73510742 258.79766846]
[86.51177979 243.79931641]
[86.28845215 228.80097961]
[86.06512451 213.80264282]
[85.84179688 198.80430603]
[76.13595581 210.24095154]
[61.58918762 213.90037537]
[47.62707138 208.41773987]
[39.45713806 195.83790588]
[40.12656784 180.85284424]
[49.38567734 169.05163574]
[63.78105164 164.83580017]
[77.94357300 169.77777100]
[86.59131622 182.03541565]
[88.15184021 167.11682129]
[89.71236420 152.19821167]
[90.82801056 137.23976135]
[91.49779510 122.25471497]
[92.16757965 107.26967621]
[91.16332245 92.30333710]
[88.49752045 77.54211426]
[85.83172607 62.78089905]
[83.16593170 48.01968384]
[80.50013733 33.25846481]
[77.83434296 18.49724770]
[67.76764679 6.29182911]
[73.11989594 -7.60791016]
[70.45409393 -22.36912727]
[65.84938049 -30.25800323]
[67.86021423 -37.36985016]
[65.41448212 -52.16912079]
[60.92772675 -60.12567902]
[63.04422379 -67.20679474]
[60.81910706 -82.04084015]
[58.59399033 -96.87488556]
[56.36887360 -111.70893097]
[46.67004395 -124.20865631]
[52.43376160 -137.94288635]
[50.20864487 -152.77691650]
[47.98352814 -167.61096191]
[32.95781326 -167.51766968]
[18.07177353 -169.56378174]
[3.62846971 -173.70765686]
[-10.07805347 -179.86492920]
[-22.76874733 -187.91024780]
[-34.18524551 -197.67980957]
[-44.09512329 -208.97471619]
[-52.29662704 -221.56503296]
[-58.62278748 -235.19444275]
[-62.94481277 -249.58543396]
[-65.17470551 -264.44506836]
[-65.26707458 -279.47076416]
[-63.22003555 -294.35668945]
[-59.07526398 -308.79974365]
[-52.91714478 -322.50588989]
[-44.87104797 -335.19607544]
[-35.10078049 -346.61196899]
[-23.80525208 -356.52114868]
[-11.21442795 -364.72186279]
[2.41536045 -371.04718018]
[16.80662727 -375.36831665]
[31.66638756 -377.59729004]
[46.69211197 -377.68872070]
[61.57789612 -375.64077759]
[76.02069092 -371.49511719]
[89.72644806 -365.33615112]
[102.41614532 -357.28924561]
[113.83143616 -347.51828003]
[123.73991394 -336.22213745]
[131.93986511 -323.63079834]
[138.26434326 -310.00064087]
[142.58457947 -295.60910034]
[144.81263733 -280.74920654]
[144.90313721 -265.72348022]
[142.85426331 -250.83781433]
[138.70770264 -236.39527893]
[132.54788208 -222.68989563]
[124.50021362 -210.00070190]
[114.72853851 -198.58601379]
[103.43178558 -188.67823792]
[90.83994293 -180.47906494]
[77.20937347 -174.15544128]
[62.81756973 -169.83609009]
[65.04268646 -155.00204468]
[67.26780701 -140.16799927]
[76.80747986 -128.72929382]
[71.20291901 -113.93404388]
[73.42803192 -99.10000610]
[75.65315247 -84.26596069]
[77.87826538 -69.43191528]
[80.21375275 -54.61484528]
[82.65948486 -39.81557465]
[85.21531677 -25.03492355]
[87.88111115 -10.27370548]
[97.75712585 0.87589228]
[92.59555817 15.83145237]
[95.26135254 30.59267044]
[97.92714691 45.35388565]
[100.59294891 60.11510468]
[103.25874329 74.87631989]
[105.92453766 89.63753510]
[110.91284180 75.49127197]
[120.61907196 64.05496216]
[133.76618958 56.83325577]
[148.62449646 54.77628326]
[163.23908997 58.15467834]
[175.68717957 66.52395630]
[184.33102417 78.78299713]
[188.03335571 93.31890869]
[186.30708313 108.21924591]
[179.37931824 121.52360535]
[168.16152954 131.48158264]
[154.12960815 136.78302002]
[139.12969971 136.73043823]
[125.13529968 131.33073425]
[113.98760986 121.29435730]
[107.15261841 107.93946075]
[106.48283386 122.92449951]
[105.81304932 137.90954590]
[107.94997406 141.68942261]
[108.69772339 145.56311035]
[108.19739532 149.08235168]
[106.72116852 151.89079285]
[104.63096619 153.75872803]
[103.07044220 168.67733765]
[101.50991821 183.59594727]
[100.84013367 198.58097839]
[101.06346130 213.57931519]
[101.28678894 228.57765198]
[101.51011658 243.57598877]
[101.73344421 258.57434082]
[101.95677185 273.57266235]
[113.01587677 284.54235840]
[113.02870178 299.75598145]
[102.50263214 310.23153687]
[102.72595978 325.22988892]
[102.94928741 340.22821045]
[103.17261505 355.22656250]
[103.39594269 370.22488403]
[103.61927032 385.22323608]
[118.82498169 388.41723633]
[132.93595886 394.90411377]
[145.24934387 404.35729980]
[155.15260315 416.30267334]
[162.15393066 430.14218140]
[165.90670776 445.18380737]
[166.22669983 460.67623901]
[163.10101318 475.84637451]
[156.68864441 489.93777466]
[147.31239319 502.24862671]
[135.44261169 512.16644287]
[121.67356110 519.19873047]
[106.69373322 522.99737549]
[107.14034271 537.99072266]
[107.58694458 552.98406982]
[108.03355408 567.97741699]
[108.48015594 582.97076416]
[123.27941132 585.76293945]
[137.13224792 591.67163086]
[149.39076233 600.42053223]
[159.48158264 611.60040283]
[166.93275452 624.68829346]
[171.39578247 639.07220459]
[172.66189575 654.07922363]
[170.67189026 669.00750732]
[165.51884460 683.15881348]
[157.44378662 695.87133789]
[146.82437134 706.55035400]
[134.15731812 714.69653320]
[120.03507233 719.92877197]
[105.11815643 722.00231934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 196]
[14 195]
[15 194]
[16 193]
[17 192]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[53 165]
[54 164]
[55 163]
[56 158]
[57 157]
[58 156]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[64 135]
[66 133]
[67 132]
[69 131]
[70 130]
[72 129]
[73 128]
[74 127]
[75 126]
[77 124]
[78 123]
[79 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
