%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[82.57034302 581.66577148]
[72.61034393 592.92388916]
[61.01173401 602.48516846]
[48.06014252 610.11425781]
[34.07450867 615.62322998]
[19.39924431 618.87640381]
[4.39574194 619.79364014]
[-10.56652546 618.35247803]
[-25.11909676 614.58825684]
[-38.90360260 608.59375000]
[-51.58058929 600.51660156]
[-62.83787155 590.55566406]
[-72.39823151 578.95629883]
[-80.02622986 566.00408936]
[-85.53402710 552.01794434]
[-88.78598785 537.34246826]
[-89.70202637 522.33886719]
[-88.25959015 507.37670898]
[-84.49420166 492.82446289]
[-78.49857330 479.04043579]
[-70.42036438 466.36413574]
[-60.45851135 455.10766602]
[-48.85832214 445.54824829]
[-35.90547180 437.92132568]
[-21.91892815 432.41467285]
[-7.24312782 429.16394043]
[7.76052618 428.24914551]
[22.72255516 429.69281006]
[26.47885513 415.17074585]
[30.23515701 400.64868164]
[25.93155098 386.38937378]
[36.87815857 374.96649170]
[29.12136269 362.30282593]
[32.72391510 347.52191162]
[46.05929565 339.47171021]
[49.81559753 324.94964600]
[53.57189560 310.42761230]
[57.32819748 295.90554810]
[61.08449936 281.38348389]
[64.84079742 266.86141968]
[68.59709930 252.33937073]
[72.35340118 237.81730652]
[75.45751190 223.14199829]
[77.90323639 208.34272766]
[80.34896088 193.54345703]
[82.79469299 178.74418640]
[84.90931702 163.89399719]
[86.69178009 149.00027466]
[88.47425079 134.10655212]
[90.25671387 119.21283722]
[92.03917694 104.31912231]
[90.10931396 100.98026276]
[89.66053772 96.80695343]
[91.03252411 92.47975159]
[94.24825287 88.80566406]
[96.69397736 74.00639343]
[99.13970184 59.20712280]
[101.58543396 44.40785217]
[103.14595795 29.48924637]
[103.81574249 14.50420761]
[94.95294952 -1.63680995]
[104.96715546 -16.04800606]
[105.41376495 -31.04135513]
[105.86036682 -46.03470612]
[105.19058228 -61.01974487]
[103.40811920 -75.91345978]
[101.62564850 -90.80718231]
[99.84318542 -105.70089722]
[98.06072235 -120.59461212]
[96.27825165 -135.48832703]
[94.49578857 -150.38204956]
[79.52177429 -151.98976135]
[65.28785706 -156.88713074]
[52.50687027 -164.82546997]
[41.81811142 -175.40393066]
[33.75538635 -188.08969116]
[28.72034454 -202.24481201]
[26.96247864 -217.15829468]
[28.56675720 -232.08181763]
[33.44952393 -246.26725769]
[41.36285019 -259.00424194]
[51.90713882 -269.65567017]
[64.55127716 -277.68960571]
[78.65940094 -282.70584106]
[76.87693787 -297.59957886]
[75.09446716 -312.49328613]
[73.20117950 -327.37332153]
[71.19716644 -342.23883057]
[69.19315338 -357.10437012]
[54.21425247 -358.86035156]
[40.14294052 -364.28704834]
[27.86373901 -373.04330444]
[18.14853668 -384.57870483]
[11.60803699 -398.16815186]
[8.65338135 -412.95736694]
[9.47030067 -428.01669312]
[14.00744438 -442.39950562]
[21.97960281 -455.20166016]
[32.88563919 -465.61843872]
[46.03999329 -472.99499512]
[60.61576843 -476.86767578]
[75.69672394 -476.99301147]
[90.33484650 -473.36312866]
[103.60998535 -466.20620728]
[114.68764496 -455.97213745]
[122.87148285 -443.30422974]
[127.64704895 -428.99884033]
[128.71414185 -413.95513916]
[126.00569916 -399.11886597]
[119.69196320 -385.42260742]
[110.16983032 -373.72732544]
[98.03785706 -364.76818848]
[84.05867767 -359.10839844]
[86.06269073 -344.24285889]
[88.06670380 -329.37731934]
[92.07565308 -323.16845703]
[89.98818970 -314.27575684]
[91.77065277 -299.38201904]
[93.55311584 -284.48831177]
[108.44653320 -282.94296265]
[122.62940979 -278.11965942]
[135.38941956 -270.25726318]
[146.08489990 -259.74734497]
[154.17723083 -247.11476135]
[159.25782776 -232.99128723]
[161.06886292 -218.08416748]
[159.51631165 -203.14064026]
[154.67486572 -188.91052246]
[146.78425598 -176.10848999]
[136.23750305 -165.37831116]
[123.56124878 -157.26036072]
[109.38950348 -152.16452026]
[111.17197418 -137.27079773]
[112.95443726 -122.37708282]
[114.73690033 -107.48336029]
[116.51937103 -92.58964539]
[118.30183411 -77.69593048]
[120.08429718 -62.80221176]
[127.43172455 -75.87949371]
[140.28273010 -83.61588287]
[155.27809143 -83.98911285]
[168.49804688 -76.90161133]
[176.48693848 -64.20603943]
[177.15650940 -49.22099304]
[170.33169556 -35.86352158]
[157.79652405 -27.62523842]
[142.82763672 -26.65960884]
[129.33787537 -33.21904755]
[120.85372162 -45.58810043]
[120.40711212 -30.59474945]
[119.96050262 -15.60139942]
[128.02458191 -6.58490276]
[127.77521515 5.90995932]
[118.80078125 15.17399216]
[118.13099670 30.15903091]
[128.50035095 19.32037354]
[143.23913574 16.53326416]
[156.85017395 22.83722687]
[164.25685120 35.88103867]
[162.69668579 50.79967880]
[152.75157166 62.02886581]
[138.13078308 65.38039398]
[124.28752899 59.60421753]
[116.38470459 46.85357666]
[113.93897247 61.65284729]
[111.49324799 76.45211792]
[109.04752350 91.25138855]
[106.93289948 106.10158539]
[105.15042877 120.99530792]
[103.36796570 135.88902283]
[101.58550262 150.78274536]
[99.80303192 165.67645264]
[101.85891724 170.47441101]
[101.86791229 175.11695862]
[100.23197937 178.85043335]
[97.59396362 181.18991089]
[95.14823914 195.98918152]
[92.70250702 210.78845215]
[90.25678253 225.58772278]
[103.04975891 217.75575256]
[117.66542816 221.12950134]
[125.73127747 233.77632141]
[122.62681580 248.45155334]
[110.13041687 256.74853516]
[95.40059662 253.91441345]
[86.87545776 241.57360840]
[83.11915588 256.09567261]
[79.36285400 270.61773682]
[75.60655975 285.13977051]
[71.85025787 299.66183472]
[68.09395599 314.18389893]
[64.33765411 328.70596313]
[60.58135605 343.22802734]
[68.34082031 356.73461914]
[64.32452393 371.40853882]
[51.40021896 378.72277832]
[55.43515015 394.02081299]
[44.75721359 404.40499878]
[41.00091553 418.92703247]
[37.24461365 433.44909668]
[51.03010941 439.44131470]
[63.70842743 447.51638794]
[74.96735382 457.47546387]
[84.52962494 469.07327271]
[92.15975952 482.02423096]
[97.66986847 496.00942993]
[100.92425537 510.68441772]
[101.84276581 525.68786621]
[100.40280151 540.65020752]
[96.63980865 555.20312500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 200]
[29 199]
[30 198]
[32 196]
[35 193]
[36 192]
[37 191]
[38 190]
[39 189]
[40 188]
[41 187]
[42 186]
[43 179]
[44 178]
[45 177]
[46 176]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[55 167]
[56 166]
[57 165]
[58 164]
[59 155]
[60 154]
[62 151]
[63 150]
[64 149]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[84 119]
[85 118]
[86 117]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
