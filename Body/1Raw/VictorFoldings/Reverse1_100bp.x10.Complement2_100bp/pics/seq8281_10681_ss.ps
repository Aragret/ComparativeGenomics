%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[30.56698608 627.90802002]
[33.99052811 613.06890869]
[43.15888596 600.90905762]
[56.48358536 593.53533936]
[55.14534760 578.59515381]
[53.80711365 563.65496826]
[52.46887970 548.71478271]
[51.13064575 533.77459717]
[49.79241180 518.83441162]
[36.93599319 511.36108398]
[30.87368584 497.58746338]
[34.12220383 482.71130371]
[45.64051437 472.48217773]
[44.30228043 457.54199219]
[42.96404648 442.60180664]
[41.62581253 427.66162109]
[40.28757858 412.72143555]
[33.31560516 426.00268555]
[21.32335281 435.01303101]
[6.62634230 438.01266479]
[-7.93766594 434.42245483]
[-19.55659103 424.93557739]
[-25.98699760 411.38381958]
[-25.98727798 396.38381958]
[-19.55737686 382.83184814]
[-7.93880701 373.34454346]
[6.62506723 369.75378418]
[21.32218933 372.75286865]
[33.31477737 381.76275635]
[40.28757858 395.04498291]
[41.62581253 380.10479736]
[35.05483627 366.73797607]
[43.99247360 353.68313599]
[45.33070755 338.74295044]
[38.75973511 325.37612915]
[47.69737244 312.32128906]
[49.03560638 297.38110352]
[50.37384033 282.44091797]
[51.71207428 267.50073242]
[53.05030823 252.56054688]
[44.98058319 265.20489502]
[33.58131790 274.95458984]
[19.83866882 280.96621704]
[4.94150972 282.71969604]
[-9.82140541 280.06332397]
[-23.17293739 273.22689819]
[-33.95804596 262.80184937]
[-41.24370575 249.69006348]
[-44.39964294 235.02581787]
[-43.15283203 220.07772827]
[-37.61113739 206.13894653]
[-28.25396729 194.41531372]
[-15.89081192 185.92106628]
[-1.59121037 181.39100647]
[13.40778065 181.21705627]
[27.80859947 185.41424561]
[40.36542892 193.61949158]
[49.99197769 205.12295532]
[55.85545731 218.92945862]
[57.44875717 233.84109497]
[62.90411377 219.86830139]
[68.35947418 205.89550781]
[73.81482697 191.92269897]
[79.27018738 177.94990540]
[84.72554016 163.97711182]
[88.15660095 149.37478638]
[89.49483490 134.43460083]
[90.83306885 119.49441528]
[92.17130280 104.55422974]
[90.14288330 101.27430725]
[89.57005310 97.11621857]
[90.81259155 92.75008392]
[93.91750336 88.98188019]
[95.92151642 74.11634827]
[97.92552948 59.25082016]
[99.70799255 44.35710526]
[101.26851654 29.43849945]
[95.00890350 14.90826225]
[104.02829742 3.05500150]
[105.58882141 -11.86360359]
[99.32920837 -26.39384079]
[108.34860229 -38.24710083]
[109.57557678 -53.19683456]
[110.46839142 -68.17024231]
[111.36120605 -83.14364624]
[112.25402069 -98.11705017]
[113.03534698 -113.09668732]
[113.70513153 -128.08172607]
[114.37491608 -143.06677246]
[115.04470062 -158.05180359]
[115.71448517 -173.03684998]
[113.57756042 -176.81672668]
[112.82981110 -180.69041443]
[113.33013916 -184.20965576]
[114.80636597 -187.01809692]
[116.89656830 -188.88603210]
[118.45709229 -203.80464172]
[120.01761627 -218.72325134]
[105.97914124 -224.27517700]
[93.95984650 -233.40968323]
[84.85163879 -245.44891357]
[79.33040619 -259.49948120]
[77.80586243 -274.51873779]
[80.39113617 -289.39218140]
[86.89438629 -303.01605225]
[96.83303070 -314.37942505]
[109.46955109 -322.63903809]
[123.86623383 -327.18194580]
[138.95474243 -327.67108154]
[153.61543274 -324.07009888]
[166.76036072 -316.64627075]
[177.41409302 -305.95043945]
[184.78605652 -292.77636719]
[188.32919312 -278.10159302]
[187.78059387 -263.01510620]
[183.18095398 -248.63645935]
[174.87159729 -236.03259277]
[163.46914673 -226.13882446]
[149.81973267 -219.68934631]
[134.93621826 -217.16271973]
[133.37570190 -202.24411011]
[131.81517029 -187.32551575]
[130.69952393 -172.36706543]
[130.02973938 -157.38201904]
[129.35995483 -142.39698792]
[128.69017029 -127.41194153]
[128.02038574 -112.42690277]
[130.86207581 -105.60440063]
[127.22743225 -97.22423553]
[126.33460999 -82.25083160]
[125.44179535 -67.27742004]
[124.54898071 -52.30401611]
[126.60332489 -49.43835449]
[127.37171936 -45.43527985]
[126.33470154 -40.91003036]
[123.26720428 -36.68657684]
[129.63844299 -23.22341919]
[120.50742340 -10.30308056]
[118.94689941 4.61552477]
[125.31813812 18.07868385]
[116.18712616 30.99902153]
[114.62660217 45.91762543]
[116.88472748 50.12594223]
[116.52318573 55.79747772]
[112.79106140 61.25483322]
[110.78704834 76.12036133]
[108.78302765 90.98589325]
[107.11148834 105.89246368]
[105.77325439 120.83264923]
[104.43502045 135.77284241]
[103.09678650 150.71301270]
[111.16651154 138.06867981]
[122.56578064 128.31896973]
[136.30842590 122.30734253]
[151.20558167 120.55387878]
[165.96850586 123.21025085]
[179.32003784 130.04666138]
[190.10513306 140.47171021]
[197.39080811 153.58349609]
[200.54673767 168.24774170]
[199.29992676 183.19583130]
[193.75822449 197.13461304]
[184.40106201 208.85824585]
[172.03790283 217.35250854]
[157.73831177 221.88255310]
[142.73931885 222.05650330]
[128.33850098 217.85931396]
[115.78166962 209.65406799]
[106.15512085 198.15061951]
[100.29164124 184.34410095]
[98.69834137 169.43246460]
[93.24298096 183.40525818]
[87.78762817 197.37806702]
[82.33226776 211.35086060]
[76.87691498 225.32365417]
[71.42155457 239.29644775]
[67.99049377 253.89877319]
[66.65225983 268.83895874]
[65.31402588 283.77914429]
[63.97579193 298.71932983]
[62.63755798 313.65951538]
[69.11281586 328.09494019]
[60.27089310 340.08117676]
[58.93265915 355.02136230]
[65.40791321 369.45678711]
[56.56599808 381.44302368]
[55.22776413 396.38320923]
[55.22776413 411.38320923]
[56.56599808 426.32339478]
[57.90423203 441.26358032]
[59.24246597 456.20376587]
[60.58069992 471.14395142]
[73.73356628 479.16320801]
[79.57416534 493.22521973]
[76.05620575 507.85696411]
[64.73259735 517.49615479]
[66.07083130 532.43634033]
[67.40906525 547.37652588]
[68.74729919 562.31671143]
[70.08553314 577.25689697]
[71.42376709 592.19708252]
[85.84681702 597.08538818]
[97.03025818 607.42224121]
[103.03650665 621.41668701]
[102.82493591 636.64416504]
[96.43219757 650.46636963]
[84.96588135 660.48846436]
[70.41259003 664.97418213]
[55.29377365 663.14630127]
[42.22885132 655.32147217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[9 196]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[30 187]
[31 186]
[33 184]
[34 183]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[60 176]
[61 175]
[62 174]
[63 173]
[64 172]
[65 171]
[66 151]
[67 150]
[68 149]
[69 148]
[73 147]
[74 146]
[75 145]
[76 142]
[77 141]
[79 139]
[80 138]
[82 136]
[83 132]
[84 131]
[85 130]
[86 129]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
