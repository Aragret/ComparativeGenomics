%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[44.58979416 696.95135498]
[50.63613510 681.11218262]
[50.63613510 666.11218262]
[42.89883423 653.38494873]
[50.63613510 639.58477783]
[50.63613510 624.58477783]
[50.63613510 609.58477783]
[50.63613510 594.58477783]
[50.63613510 579.58477783]
[50.63613510 564.58477783]
[40.33972931 556.83789062]
[36.32530594 544.38934326]
[40.27171707 531.71514893]
[50.95215225 523.50885010]
[51.17547989 508.51052856]
[51.39880753 493.51217651]
[43.85185623 480.67111206]
[51.79376221 466.98767090]
[52.01708984 451.98934937]
[52.24041748 436.99099731]
[52.35208511 421.99142456]
[52.35208511 406.99142456]
[49.20858383 400.30261230]
[52.46541214 391.76849365]
[52.68873978 376.77017212]
[52.91206741 361.77182007]
[43.42170715 373.38790894]
[29.19108772 378.13018799]
[14.62972069 374.52929688]
[4.24960518 363.70092773]
[1.26713276 349.00042725]
[6.60645485 334.98287964]
[18.61312485 325.99179077]
[33.56674576 324.81311035]
[46.83377457 331.81210327]
[54.30333710 344.82031250]
[56.52845383 329.98626709]
[50.76473618 316.25204468]
[60.46356583 303.75231934]
[62.68868256 288.91827393]
[64.91380310 274.08422852]
[67.13891602 259.25018311]
[69.36403656 244.41613770]
[60.75522232 236.92918396]
[56.78853989 226.10415649]
[58.55806351 214.59056091]
[65.73852539 205.26629639]
[76.63775635 200.51832581]
[79.30355072 185.75711060]
[81.96935272 170.99589539]
[84.41507721 156.19662476]
[86.64019012 141.36257935]
[79.34655762 125.40106964]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[100.09895325 42.29280472]
[101.88141632 27.39908600]
[95.83882904 12.77726364]
[105.03370667 1.05960298]
[106.81616974 -13.83411407]
[108.59863281 -28.72783089]
[93.59233093 -35.47418976]
[81.41555786 -46.51121902]
[73.25019073 -60.75214386]
[69.88392639 -76.80001068]
[71.63436890 -93.08468628]
[78.31907654 -108.01651001]
[89.27449036 -120.14144897]
[103.42179871 -128.28268433]
[119.37317657 -131.65487671]
[120.71141052 -146.59504700]
[122.04964447 -161.53523254]
[123.38787842 -176.47541809]
[115.73158264 -186.85539246]
[117.15377045 -199.27156067]
[126.35016632 -207.12986755]
[127.91069031 -222.04846191]
[125.69105530 -230.90911865]
[129.60711670 -237.17698669]
[131.38958740 -252.07069397]
[133.17205811 -266.96441650]
[134.84359741 -281.87100220]
[136.40411377 -296.78961182]
[137.85353088 -311.71942139]
[139.19177246 -326.65957642]
[140.30741882 -341.61804199]
[133.40524292 -355.85427856]
[141.88635254 -368.09844971]
[142.77917480 -383.07186890]
[143.67199707 -398.04525757]
[144.56480408 -413.01867676]
[145.45762634 -427.99206543]
[142.84455872 -436.74478149]
[146.47683716 -443.18124390]
[143.99436951 -451.97189331]
[147.72207642 -458.35357666]
[149.06031799 -473.29376221]
[135.32493591 -479.70587158]
[124.61315918 -490.43124390]
[118.21849060 -504.17474365]
[116.91312408 -519.27679443]
[120.85467529 -533.91375732]
[129.56719971 -546.31805420]
[141.99859619 -554.99194336]
[156.64773560 -558.88793945]
[171.74563599 -557.53558350]
[185.46917725 -551.09814453]
[196.16117859 -540.35308838]
[202.53050232 -526.59777832]
[203.80802917 -511.49337769]
[199.83950806 -496.86373901]
[191.10415649 -484.47546387]
[178.65678406 -475.82452393]
[164.00050354 -471.95553589]
[162.66226196 -457.01535034]
[161.43528748 -442.06561279]
[160.43103027 -427.09927368]
[159.53820801 -412.12585449]
[158.64540100 -397.15246582]
[157.75257874 -382.17904663]
[156.85977173 -367.20562744]
[163.82580566 -354.04040527]
[155.28082275 -340.72521973]
[157.72460938 -336.62194824]
[157.61668396 -330.93991089]
[154.13195801 -325.32135010]
[152.79371643 -310.38116455]
[155.32794189 -303.43859863]
[151.32272339 -295.22906494]
[149.76219177 -280.31045532]
[152.19276428 -273.33093262]
[148.06576538 -265.18194580]
[146.28330994 -250.28823853]
[144.50083923 -235.39451599]
[142.82929993 -220.48794556]
[141.26876831 -205.56933594]
[149.26785278 -189.94943237]
[138.32806396 -175.13719177]
[136.98983765 -160.19700623]
[135.65159607 -145.25682068]
[134.31336975 -130.31663513]
[147.06958008 -125.49700165]
[158.15090942 -117.52819061]
[166.79605103 -106.94954681]
[172.40895081 -94.47996521]
[174.59991455 -80.96909332]
[173.21264648 -67.33938599]
[168.33540344 -54.52316284]
[160.29537964 -43.39881516]
[149.63677979 -34.73061371]
[137.08398438 -29.11619568]
[123.49235535 -26.94536591]
[121.70988464 -12.05164814]
[119.92742157 2.84206891]
[126.09750366 16.39859390]
[116.77513885 29.18155289]
[114.99266815 44.07527161]
[117.31906128 51.09023285]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[112.98754120 123.80760193]
[111.01235199 136.14787292]
[101.47423553 143.58769226]
[99.24912262 158.42173767]
[101.30957031 164.70394897]
[100.07362366 170.25096130]
[96.73056793 173.66168213]
[94.06477356 188.42289734]
[91.39897919 203.18412781]
[102.78705597 218.32432556]
[99.54772186 236.66607666]
[84.19808197 246.64125061]
[81.97296143 261.47531128]
[79.74784851 276.30932617]
[77.52272797 291.14337158]
[75.29760742 305.97741699]
[80.90217590 320.77267456]
[71.36249542 332.21136475]
[69.13738251 347.04541016]
[67.91040802 361.99514771]
[67.68708038 376.99349976]
[67.46375275 391.99182129]
[67.35208130 406.99142456]
[67.35208130 421.99142456]
[70.48149109 430.57305908]
[67.23875427 437.21432495]
[67.01542664 452.21267700]
[66.79209900 467.21099854]
[74.32307434 481.12484741]
[66.39714813 493.73550415]
[66.17382050 508.73385620]
[65.95049286 523.73217773]
[78.36247253 536.05944824]
[78.02539062 553.21173096]
[65.63613129 564.58477783]
[65.63613129 579.58477783]
[65.63613129 594.58477783]
[65.63613129 609.58477783]
[65.63613129 624.58477783]
[65.63613129 639.58477783]
[73.37343597 653.38494873]
[65.63613129 666.11218262]
[65.63613129 681.11218262]
[71.68247223 696.95135498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[14 198]
[15 197]
[16 196]
[18 194]
[19 193]
[20 192]
[21 190]
[22 189]
[24 188]
[25 187]
[26 186]
[36 185]
[37 184]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[48 175]
[49 174]
[50 173]
[51 170]
[52 169]
[54 166]
[56 164]
[57 163]
[58 162]
[59 160]
[60 159]
[62 157]
[63 156]
[64 155]
[73 144]
[74 143]
[75 142]
[76 141]
[79 139]
[80 138]
[82 137]
[83 136]
[84 135]
[85 133]
[86 132]
[87 130]
[88 129]
[89 126]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[97 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
