%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[116.80370331 468.22302246]
[114.82018280 483.16720581]
[109.31726074 497.20220947]
[100.61487579 509.51205444]
[89.21897125 519.38104248]
[75.79209137 526.23541260]
[61.11485672 529.67663574]
[46.04057693 529.50469971]
[31.44565773 525.72955322]
[18.17862511 518.57067871]
[7.01080704 508.44430542]
[-1.40851295 495.93917847]
[-6.58984661 481.78228760]
[-8.23195839 466.79672241]
[-6.23937893 451.85372925]
[-0.72795260 437.82208252]
[7.98189259 425.51751709]
[19.38377762 415.65545654]
[32.81481171 408.80923462]
[47.49413300 405.37689209]
[62.56830597 405.55798340]
[66.32460785 391.03591919]
[70.08090973 376.51385498]
[65.77729797 362.25454712]
[76.72390747 350.83166504]
[80.48020935 336.30960083]
[84.23651123 321.78753662]
[87.23128510 307.08953857]
[89.45640564 292.25549316]
[91.57102966 277.40530396]
[93.57504272 262.53976440]
[94.69068909 247.58131409]
[94.91401672 232.58297729]
[95.13734436 217.58464050]
[95.36067200 202.58630371]
[95.36067200 187.58630371]
[95.13734436 172.58796692]
[94.91401672 157.58963013]
[94.69068909 142.59129333]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[90.00129700 58.31773376]
[89.10848236 43.34432602]
[88.21566772 28.37092209]
[79.67665863 21.63341331]
[76.32431793 11.51698780]
[79.03627777 1.43762040]
[86.68392181 -5.33928919]
[86.23731232 -20.33263969]
[85.79071045 -35.32598877]
[85.34410095 -50.31933975]
[75.12206268 -39.34163666]
[60.25113678 -37.37808228]
[47.53010941 -45.32638168]
[42.77486420 -59.55268097]
[48.15943527 -73.55290985]
[61.22206879 -80.92635345]
[75.99070740 -78.30196381]
[85.71397400 -66.87785339]
[75.67764282 -78.79044342]
[77.02215576 -93.94454956]
[88.44084167 -103.43924713]
[89.55648804 -118.39769745]
[90.67213440 -133.35615540]
[88.18966675 -142.14677429]
[91.91738129 -148.52847290]
[93.25561523 -163.46865845]
[94.59384918 -178.40884399]
[95.93208313 -193.34902954]
[81.17409515 -198.37422180]
[68.05075073 -206.77401733]
[57.31937790 -218.05871582]
[49.59809494 -231.57229614]
[45.33018875 -246.53051758]
[44.75867462 -262.06646729]
[47.91246796 -277.28073120]
[54.60493851 -291.29360962]
[64.44496918 -303.29577637]
[76.85979462 -312.59524536]
[91.12834167 -318.65704346]
[106.42311859 -321.13418579]
[107.53876495 -336.09265137]
[108.65441895 -351.05108643]
[109.77006531 -366.00955200]
[101.39177704 -382.40728760]
[111.83062744 -396.51394653]
[112.72344208 -411.48733521]
[113.61625671 -426.46075439]
[101.79849243 -436.34237671]
[98.10849762 -451.11523438]
[103.75801849 -465.06323242]
[116.38623810 -472.91601562]
[117.27905273 -487.88943481]
[118.17186737 -502.86282349]
[119.06468201 -517.83624268]
[104.97424316 -523.34210205]
[93.27613831 -532.93426514]
[85.11641693 -545.67297363]
[81.29450226 -560.31018066]
[82.18481445 -575.41192627]
[87.70013428 -589.49865723]
[97.30012512 -601.19036865]
[110.04428101 -609.34155273]
[124.68405914 -613.15362549]
[139.78520203 -612.25323486]
[153.86824036 -606.72845459]
[165.55348206 -597.12060547]
[173.69612122 -584.37103271]
[177.49842834 -569.72869873]
[176.58787537 -554.62817383]
[171.05368042 -540.54882812]
[161.43801880 -528.86999512]
[148.68295288 -520.73590088]
[134.03808594 -516.94342041]
[133.14527893 -501.97003174]
[132.25245667 -486.99661255]
[131.35963440 -472.02322388]
[142.96522522 -462.72543335]
[146.91726685 -448.20492554]
[141.49794006 -433.97521973]
[128.58966064 -425.56793213]
[127.69684601 -410.59451294]
[126.80403137 -395.62112427]
[134.59608459 -386.36853027]
[133.97480774 -373.88662720]
[124.72851562 -364.89389038]
[123.61286926 -349.93545532]
[122.49722290 -334.97698975]
[121.38157654 -320.01855469]
[135.18389893 -315.72857666]
[147.68838501 -308.46475220]
[158.26348877 -298.59008789]
[166.37428284 -286.59945679]
[171.60943604 -273.09497070]
[173.70213318 -258.75564575]
[172.54362488 -244.30326843]
[168.18896484 -230.46604919]
[160.85426331 -217.94200134]
[150.90608215 -207.36364746]
[138.84309387 -199.26609802]
[125.27101135 -194.06002808]
[110.87226868 -192.01078796]
[109.53403473 -177.07060242]
[108.19580078 -162.13041687]
[106.85756683 -147.19023132]
[105.63059235 -132.24050903]
[104.51493835 -117.28205109]
[103.39929199 -102.32359314]
[113.28318787 -91.24008179]
[112.36485291 -76.05419159]
[100.67243195 -65.76220703]
[100.33745575 -50.76594543]
[100.78405762 -35.77259445]
[101.23066711 -20.77924538]
[101.67726898 -5.78589535]
[113.01573944 9.87699413]
[103.18907166 27.47810555]
[104.08188629 42.45151138]
[104.97470856 57.42491913]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[111.98173523 131.06507874]
[112.81565857 135.63211060]
[111.86927795 139.59689331]
[109.68902588 142.36796570]
[109.91235352 157.36630249]
[110.13568115 172.36463928]
[110.35900879 187.36297607]
[113.41619110 193.22515869]
[113.10121155 198.89945984]
[110.35900879 202.80963135]
[110.13568115 217.80796814]
[109.91235352 232.80630493]
[109.68902588 247.80464172]
[119.73107910 236.66204834]
[134.38035583 233.43734741]
[148.17303467 239.33326721]
[155.96479797 252.15077209]
[154.84950256 267.10925293]
[145.24313354 278.62954712]
[130.72862244 282.41491699]
[116.71952057 277.05346680]
[108.44056702 264.54379272]
[106.43655396 279.40930176]
[108.39139557 288.33212280]
[104.29044342 294.48062134]
[102.06533051 309.31463623]
[114.07559967 300.32836914]
[129.05876160 301.03890991]
[140.16471863 311.12145996]
[142.31596375 325.96640015]
[134.52899170 338.78680420]
[120.36389923 343.72140503]
[106.29676819 338.51409912]
[98.75856781 325.54385376]
[95.00227356 340.06588745]
[91.24597168 354.58795166]
[95.28089905 369.88598633]
[84.60296631 380.27017212]
[80.84666443 394.79223633]
[77.09036255 409.31427002]
[90.36173248 416.46508789]
[101.53569031 426.58468628]
[109.96258545 439.08471680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 207]
[22 206]
[23 205]
[25 203]
[26 202]
[27 201]
[28 193]
[29 192]
[30 190]
[31 189]
[32 180]
[33 179]
[34 178]
[35 177]
[36 174]
[37 173]
[38 172]
[39 171]
[40 167]
[41 166]
[43 164]
[44 163]
[45 162]
[46 161]
[47 160]
[51 158]
[52 157]
[53 156]
[54 155]
[62 154]
[65 151]
[66 150]
[67 149]
[69 148]
[70 147]
[71 146]
[72 145]
[84 132]
[85 131]
[86 130]
[87 129]
[89 126]
[90 125]
[91 124]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
