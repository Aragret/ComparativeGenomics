%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[74.39133453 535.35119629]
[66.32657623 548.16674805]
[54.53602219 557.66735840]
[40.29861832 562.82244873]
[25.15873718 563.07287598]
[10.75863743 558.39141846]
[-1.33966660 549.28594971]
[-9.82384014 536.74414062]
[-13.77358437 522.12640381]
[-12.76045990 507.01837158]
[-6.89436340 493.05886841]
[3.18839478 481.76211548]
[16.39411354 474.35348511]
[31.29033279 471.63662720]
[33.51544952 456.80258179]
[35.74056625 441.96853638]
[37.96568680 427.13449097]
[32.20196533 413.40029907]
[41.90079498 400.90054321]
[44.12591171 386.06649780]
[46.01920700 371.18646240]
[47.57972717 356.26788330]
[49.14025116 341.34927368]
[42.76901627 327.88610840]
[51.90003204 314.96575928]
[49.46945953 307.98620605]
[53.59645844 299.83724976]
[55.37892532 284.94354248]
[57.16139221 270.04980469]
[55.28125763 267.06695557]
[54.75249100 263.02523804]
[56.05701828 258.56973267]
[59.37046051 254.53636169]
[61.81618881 239.73709106]
[60.29524612 237.38232422]
[59.61540985 234.28323364]
[60.06486511 230.75712585]
[61.81169510 227.21974182]
[64.87327576 224.14065552]
[68.19553375 209.51319885]
[71.51779175 194.88574219]
[66.79154205 180.76087952]
[77.39319611 169.01713562]
[80.71545410 154.38967896]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[96.60898590 65.43959808]
[98.17291260 59.97597885]
[101.71304321 56.77028275]
[105.25271606 42.19390869]
[108.79238892 27.61753273]
[110.79640198 12.75200462]
[111.24301147 -2.24134517]
[111.46633911 -17.23968315]
[111.46633911 -32.23968124]
[111.46633911 -47.23968124]
[110.57352448 -62.21308899]
[108.79105377 -77.10680389]
[107.00859070 -92.00052643]
[105.22612762 -106.89424133]
[95.58751678 -115.46512604]
[94.40951538 -127.90682983]
[101.78063965 -137.49813843]
[100.22011566 -152.41673279]
[91.08910370 -165.33708191]
[97.46034241 -178.80023193]
[95.89981842 -193.71884155]
[94.33929443 -208.63745117]
[92.77877045 -223.55604553]
[91.21824646 -238.47465515]
[89.65772247 -253.39326477]
[88.09719849 -268.31185913]
[86.53667450 -283.23046875]
[84.97615814 -298.14907837]
[83.41563416 -313.06768799]
[81.85511017 -327.98629761]
[80.29458618 -342.90487671]
[78.62304688 -357.81146240]
[76.84057617 -372.70516968]
[75.05811310 -387.59890747]
[63.68215561 -402.07885742]
[71.21263123 -417.92999268]
[69.20861816 -432.79553223]
[67.20460510 -447.66104126]
[52.20748520 -449.13864136]
[37.95557404 -454.03555298]
[25.21745110 -462.08770752]
[14.68006706 -472.86080933]
[6.91169214 -485.77395630]
[2.33126378 -500.13070679]
[1.18579876 -515.15686035]
[3.53707075 -530.04199219]
[9.25827885 -543.98345947]
[18.04088402 -556.22937012]
[29.41125488 -566.11938477]
[42.75619888 -573.11999512]
[57.35603714 -576.85382080]
[72.42342377 -577.11944580]
[87.14579773 -573.90252686]
[100.72918701 -567.37658691]
[112.44106293 -557.89349365]
[121.64982605 -545.96472168]
[127.85884857 -532.23358154]
[130.73329163 -517.44049072]
[130.11813354 -502.38336182]
[126.04656219 -487.87408447]
[118.73813629 -474.69515991]
[108.58700562 -463.55734253]
[96.14059448 -455.06124878]
[82.07012939 -449.66506958]
[84.07414246 -434.79953003]
[86.07815552 -419.93402100]
[95.50444794 -412.35299683]
[97.29568481 -399.98468018]
[89.95182800 -389.38137817]
[91.73429871 -374.48764038]
[93.51676178 -359.59393311]
[97.43283081 -353.32604980]
[95.21318817 -344.46542358]
[96.77371216 -329.54681396]
[98.33423615 -314.62820435]
[99.89476013 -299.70959473]
[101.45528412 -284.79098511]
[103.01580811 -269.87237549]
[104.57633209 -254.95378113]
[106.13684845 -240.03517151]
[107.69737244 -225.11657715]
[109.25789642 -210.19796753]
[110.81842041 -195.27935791]
[112.37894440 -180.36076355]
[121.39833832 -168.50749207]
[115.13872528 -153.97726440]
[116.69924927 -139.05865479]
[127.75757599 -125.43219757]
[120.11984253 -108.67670441]
[121.90230560 -93.78298950]
[123.68477631 -78.88927460]
[125.46723938 -63.99555588]
[133.93060303 -76.37987518]
[148.01773071 -81.53282928]
[162.47447205 -77.53248596]
[171.90881348 -65.87087250]
[172.80198669 -50.89748764]
[164.82084656 -38.19702911]
[150.94218445 -32.50646210]
[136.34237671 -35.94821548]
[126.46633911 -47.23968124]
[126.46633911 -32.23968124]
[126.46633911 -17.23968315]
[129.15002441 -13.28912735]
[129.38047791 -7.61075497]
[126.23635864 -1.79473925]
[125.78975677 13.19861031]
[133.79040527 0.51044554]
[145.99307251 -8.21280384]
[160.58753967 -11.67709637]
[175.40882874 -9.36852264]
[188.25827026 -1.62954795]
[197.22973633 10.39179802]
[200.99237061 24.91222000]
[198.98799133 39.77769852]
[191.51394653 52.78302765]
[179.67895508 61.99895096]
[165.23869324 66.05833435]
[150.33526611 64.35898590]
[137.17950439 57.15301132]
[127.72300720 45.50936127]
[123.36876678 31.15720558]
[119.82909393 45.73358154]
[116.28942108 60.30995560]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[99.88980865 151.88548279]
[95.34291077 157.71192932]
[92.02065277 172.33938599]
[96.50927734 187.51051331]
[86.14524841 198.20800781]
[82.82299042 212.83546448]
[79.50073242 227.46292114]
[76.61546326 242.18281555]
[74.16973114 256.98208618]
[72.05510712 271.83227539]
[70.27264404 286.72601318]
[68.49017334 301.61972046]
[66.81863403 316.52627563]
[73.07825470 331.05651855]
[64.05885315 342.90979004]
[62.49833298 357.82839966]
[60.93780899 372.74700928]
[63.06490326 377.51382446]
[63.14301682 382.15570068]
[61.56285095 385.91311646]
[58.95995712 388.29162598]
[56.73484039 403.12567139]
[62.33940506 417.92092896]
[52.79972839 429.35961914]
[50.57461166 444.19366455]
[48.34949493 459.02770996]
[46.12437820 473.86175537]
[59.56788635 480.82958984]
[70.01873016 491.78671265]
[76.34327698 505.54458618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 207]
[15 206]
[16 205]
[17 204]
[19 202]
[20 201]
[21 197]
[22 196]
[23 195]
[25 193]
[27 192]
[28 191]
[29 190]
[33 189]
[34 188]
[39 187]
[40 186]
[41 185]
[43 183]
[44 182]
[45 180]
[46 179]
[47 178]
[49 176]
[50 175]
[53 174]
[54 173]
[55 172]
[56 157]
[57 156]
[58 153]
[59 152]
[60 151]
[61 142]
[62 141]
[63 140]
[64 139]
[67 137]
[68 136]
[70 134]
[71 133]
[72 132]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 121]
[83 120]
[84 119]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
