%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[176.53916931 507.51358032]
[170.07728577 493.96997070]
[164.57589722 480.00863647]
[160.06181335 465.69750977]
[156.55703735 451.10638428]
[154.07861328 436.30630493]
[152.63864136 421.36941528]
[152.24411011 406.36843872]
[152.89697266 391.37649536]
[154.59403992 376.46661377]
[157.32702637 361.71142578]
[161.08264160 347.18283081]
[165.84257507 332.95159912]
[171.58363342 319.08706665]
[178.27784729 305.65679932]
[185.89260864 292.72622681]
[194.39082336 280.35830688]
[203.73107910 268.61334229]
[213.86787415 257.54852295]
[203.54119873 246.66918945]
[193.21453857 235.78985596]
[195.13430786 250.66648865]
[189.44990540 264.54769897]
[177.64720154 273.80493164]
[162.81141663 276.01837158]
[148.82057190 270.60946655]
[139.33186340 258.99206543]
[136.82557678 244.20291138]
[141.95689392 230.10789490]
[153.38447571 220.39138794]
[168.12117004 217.59327698]
[182.31413269 222.44448853]
[173.71557617 210.15364075]
[165.11700439 197.86280823]
[156.51844788 185.57197571]
[147.91987610 173.28112793]
[138.95918274 161.25175476]
[129.64430237 149.49450684]
[120.32941437 137.73724365]
[111.01453400 125.98000336]
[101.69965363 114.22274780]
[88.77265167 108.89505768]
[86.54309845 95.09213257]
[77.22821045 83.33488464]
[67.91333008 71.57762909]
[60.13131332 66.79453278]
[58.54885101 59.57528305]
[49.41004944 47.68064880]
[40.27124786 35.78601456]
[32.56130600 30.88758469]
[31.08650208 23.64557266]
[22.12580490 11.61619473]
[7.67686844 5.17113543]
[6.27884817 -9.65771484]
[-2.68184805 -21.68709183]
[-15.60755730 -14.04784298]
[-29.27205276 -7.82581329]
[-43.52050781 -3.09150457]
[-58.19147110 0.10144033]
[-73.11871338 1.71684277]
[-88.13309479 1.73639894]
[-103.06449890 0.15988727]
[-117.74372864 -2.99482918]
[-132.00447083 -7.69200468]
[-145.68511963 -13.87841702]
[-158.63069153 -21.48397064]
[-170.69447327 -30.42248535]
[-181.73980713 -40.59268570]
[-191.64151001 -51.87932968]
[-200.28739929 -64.15453339]
[-207.57951355 -77.27921295]
[-213.43521118 -91.10465240]
[-217.78817749 -105.47419739]
[-220.58905029 -120.22503662]
[-221.80612183 -135.19001770]
[-221.42559814 -150.19960022]
[-219.45176697 -165.08367920]
[-215.90702820 -179.67364502]
[-210.83152771 -193.80415344]
[-204.28276062 -207.31510925]
[-196.33496094 -220.05342102]
[-187.07815552 -231.87474060]
[-176.61724854 -242.64514160]
[-165.07077026 -252.24258423]
[-152.56953430 -260.55831909]
[-139.25520325 -267.49810791]
[-125.27864838 -272.98333740]
[-110.79821014 -276.95184326]
[-95.97798157 -279.35867310]
[-80.98587799 -280.17654419]
[-65.99176788 -279.39620972]
[-51.16556168 -277.02645874]
[-36.67523956 -273.09420776]
[-22.68498993 -267.64398193]
[-9.35333538 -260.73751831]
[3.16866755 -252.45310974]
[14.73913479 -242.88459778]
[25.22696495 -232.14042664]
[34.51332092 -220.34230042]
[42.49298477 -207.62391663]
[49.07553482 -194.12939453]
[54.18639374 -180.01164246]
[57.76764297 -165.43060303]
[59.77870941 -150.55149841]
[60.19680405 -135.54292297]
[59.01719284 -120.57493591]
[56.25323868 -105.81713104]
[51.93626022 -91.43673706]
[46.11516953 -77.59668732]
[38.85593033 -64.45379639]
[30.24078941 -52.15699005]
[20.36736488 -40.84560013]
[9.34752941 -30.64778900]
[18.30822563 -18.61841011]
[32.11623383 -13.03377342]
[34.15518188 2.65549874]
[43.11587906 14.68487644]
[52.16587830 26.64721298]
[61.30467987 38.54184723]
[70.44348145 50.43647766]
[79.67058563 62.26274872]
[88.98546600 74.01999664]
[98.30034637 85.77725220]
[111.22734833 91.10494232]
[113.45690155 104.90786743]
[122.77178955 116.66511536]
[132.08666992 128.42236328]
[141.40155029 140.17962646]
[150.71643066 151.93687439]
[154.80769348 153.39135742]
[157.91117859 155.82711792]
[159.83969116 158.81312561]
[160.56526184 161.90184021]
[160.21072388 164.68257141]
[168.80928040 176.97340393]
[177.40785217 189.26423645]
[186.00640869 201.55508423]
[194.60498047 213.84591675]
[204.09387207 225.46318054]
[214.42054749 236.34251404]
[224.74720764 247.22184753]
[236.32501221 237.67517090]
[248.54055786 228.95936584]
[261.33432007 221.11691284]
[274.64401245 214.18600464]
[288.40472412 208.20043945]
[302.54946899 203.18934631]
[317.00930786 199.17715454]
[331.71380615 196.18341064]
[346.59130859 194.22270203]
[361.56936646 193.30456543]
[376.57495117 193.43350220]
[391.53503418 194.60885620]
[406.37664795 196.82492065]
[421.02752686 200.07087708]
[435.41629028 204.33093262]
[449.47283936 209.58432007]
[463.12869263 215.80546570]
[476.31732178 222.96403503]
[488.97445679 231.02516174]
[501.03842163 239.94956970]
[512.45050049 249.69378662]
[523.15502930 260.21032715]
[533.09985352 271.44796753]
[542.23657227 283.35195923]
[550.52069092 295.86431885]
[557.91174316 308.92404175]
[564.37384033 322.46752930]
[569.87542725 336.42880249]
[574.38970947 350.73986816]
[577.89471436 365.33093262]
[580.37335205 380.13098145]
[581.81353760 395.06787109]
[582.20825195 410.06881714]
[581.55560303 425.06079102]
[579.85876465 439.97070312]
[577.12597656 454.72592163]
[573.37060547 469.25457764]
[568.61083984 483.48587036]
[562.86999512 497.35046387]
[556.17596436 510.78082275]
[548.56140137 523.71154785]
[540.06335449 536.07958984]
[530.72326660 547.82464600]
[520.58660889 558.88964844]
[509.70281982 569.22052002]
[498.12487793 578.76702881]
[485.90921021 587.48266602]
[473.11532593 595.32495117]
[459.80557251 602.25567627]
[446.04473877 608.24102783]
[431.89993286 613.25189209]
[417.44003296 617.26391602]
[402.73550415 620.25744629]
[387.85797119 622.21795654]
[372.87991333 623.13586426]
[357.87429810 623.00671387]
[342.91427612 621.83111572]
[328.07266235 619.61486816]
[313.42184448 616.36871338]
[299.03311157 612.10845947]
[284.97665405 606.85485840]
[271.32089233 600.63348389]
[258.13238525 593.47473145]
[245.47535706 585.41345215]
[233.41151428 576.48883057]
[221.99958801 566.74450684]
[211.29521179 556.22778320]
[201.35052490 544.98999023]
[192.21397400 533.08587646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 141]
[20 140]
[21 139]
[32 138]
[33 137]
[34 136]
[35 135]
[36 134]
[37 129]
[38 128]
[39 127]
[40 126]
[41 125]
[43 123]
[44 122]
[45 121]
[47 120]
[48 119]
[49 118]
[51 117]
[52 116]
[54 114]
[55 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
