%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[210.72012329 398.28372192]
[214.76109314 383.82385254]
[220.29142761 369.86557007]
[227.25050354 356.56185913]
[235.56211853 344.05847168]
[245.13516235 332.49237061]
[255.86477661 321.99032593]
[246.54989624 310.23306274]
[237.23501587 298.47583008]
[227.92013550 286.71856689]
[218.60523987 274.96130371]
[211.98762512 271.67059326]
[209.24076843 262.95895386]
[200.10195923 251.06433105]
[195.56698608 249.56668091]
[191.92466736 245.20428467]
[190.87445068 238.67675781]
[182.09384155 226.51530457]
[173.31323242 214.35383606]
[159.58990479 208.56423950]
[157.78477478 192.84635925]
[149.00416565 180.68489075]
[140.22357178 168.52343750]
[125.35352325 168.66407776]
[113.10715485 159.91819763]
[108.30272675 145.46929932]
[112.98158264 130.79229736]
[104.20097351 118.63083649]
[89.91375732 116.21801758]
[81.43197632 104.47043610]
[83.63756561 90.14976501]
[74.85696411 77.98831177]
[60.50558853 71.32884216]
[59.32850266 56.48082352]
[50.54789734 44.31936646]
[41.76729584 32.15790939]
[32.98669052 19.99645424]
[24.20608902 7.83499861]
[25.59207344 22.77083015]
[21.23033333 37.12266541]
[11.76790428 48.76149750]
[-1.39151800 55.96077728]
[-16.29581261 57.65253067]
[-30.73401260 53.58579636]
[-42.56430054 44.36384964]
[-50.03172302 31.35471344]
[-52.02853012 16.48821640]
[-48.25851059 1.96971226]
[-39.28092194 -10.04706287]
[-26.42753601 -17.77949333]
[-11.60507774 -20.08051872]
[2.98763061 -16.60879517]
[15.18453598 -7.88072300]
[9.11070156 -21.59598923]
[3.03686810 -35.31125641]
[-3.03696585 -49.02652359]
[-3.87607169 -34.05001068]
[-8.84624100 -19.89736366]
[-17.55550575 -7.68471909]
[-29.31701660 1.62478518]
[-43.20321274 7.29696131]
[-58.11896896 8.88447762]
[-72.88796997 6.26213741]
[-86.34546661 -0.36325246]
[-97.43014526 -10.46918488]
[-105.26782227 -23.25866508]
[-109.24038696 -37.72306061]
[-109.03454590 -52.72164536]
[-104.66653442 -67.07157898]
[-96.48082733 -79.64115143]
[-85.12299347 -89.43908691]
[-71.48874664 -95.69266510]
[-56.65334320 -97.90872192]
[-41.78676987 -95.91246796]
[-28.06146431 -89.86135864]
[-16.55986214 -80.23258972]
[-8.18751240 -67.78241730]
[-9.96997833 -82.67613220]
[-11.75244427 -97.56984711]
[-14.19817162 -112.36911774]
[-17.30228233 -127.04442596]
[-20.40639305 -141.71972656]
[-23.51050186 -156.39503479]
[-26.61461258 -171.07032776]
[-29.71872330 -185.74563599]
[-44.78169632 -185.97917175]
[-59.41492081 -189.55917358]
[-72.88439941 -196.30609131]
[-84.51450348 -205.88150024]
[-93.72188568 -217.80508423]
[-100.04469299 -231.47877502]
[-103.16577911 -246.21670532]
[-102.92859650 -261.27963257]
[-99.34503937 -275.91198730]
[-92.59485626 -289.37982178]
[-83.01663208 -301.00759888]
[-71.09081268 -310.21209717]
[-57.41559219 -316.53158569]
[-42.67690659 -319.64910889]
[-27.61404610 -319.40826416]
[-12.98255825 -315.82116699]
[0.48364809 -309.06771851]
[12.10911369 -299.48669434]
[21.31071091 -287.55865479]
[27.62689018 -273.88189697]
[30.74083519 -259.14245605]
[30.49635315 -244.07965088]
[26.90570450 -229.44903564]
[20.14899635 -215.98445129]
[10.56514263 -204.36131287]
[-1.36513567 -195.16261292]
[-15.04341984 -188.84974670]
[-11.93931007 -174.17443848]
[-8.83520031 -159.49914551]
[-5.73108959 -144.82383728]
[-2.62697959 -130.14852905]
[0.47713044 -115.47322845]
[9.54562950 -127.42154694]
[24.38741493 -129.59442139]
[36.50044250 -120.74712372]
[38.94581223 -105.94779968]
[30.32271385 -93.67416382]
[15.57084370 -90.95711517]
[3.14127278 -99.35231781]
[4.92373848 -84.45859528]
[6.70620441 -69.56488037]
[10.67830086 -55.10035706]
[16.75213432 -41.38508987]
[22.82596779 -27.66982460]
[28.89980316 -13.95455742]
[36.36754227 -0.94560468]
[45.14814758 11.21585083]
[53.92874908 23.37730598]
[62.70935440 35.53876114]
[71.48995972 47.70021820]
[85.21328735 53.48981857]
[87.01841736 69.20771027]
[95.79902649 81.36916351]
[110.08624268 83.78198242]
[118.56802368 95.52956390]
[116.36243439 109.85023499]
[125.14303589 122.01168823]
[140.54675293 122.18901825]
[152.74981689 131.29609680]
[157.19775391 145.67245483]
[152.38502502 159.74284363]
[161.16563416 171.90429688]
[169.94622803 184.06575012]
[184.29760742 190.72521973]
[185.47470093 205.57324219]
[194.25529480 217.73469543]
[203.03590393 229.89614868]
[211.99659729 241.92552185]
[221.13540649 253.82015991]
[230.36250305 265.64642334]
[239.67738342 277.40368652]
[248.99226379 289.16091919]
[258.30715942 300.91818237]
[267.62203979 312.67544556]
[280.29992676 304.63250732]
[293.74908447 297.95883179]
[307.82217407 292.72760010]
[322.36499023 288.99606323]
[337.21817017 286.80511475]
[352.21902466 286.17880249]
[367.20315552 287.12396240]
[382.00640869 289.63021851]
[396.46658325 293.67013550]
[410.42526245 299.19943237]
[423.72949219 306.15756226]
[436.23348999 314.46826172]
[447.80026245 324.04046631]
[458.30310059 334.76931763]
[467.62692261 346.53723145]
[475.66955566 359.21533203]
[482.34289551 372.66464233]
[487.57379150 386.73785400]
[491.30496216 401.28076172]
[493.49554443 416.13403320]
[494.12149048 431.13488770]
[493.17599487 446.11898804]
[490.66937256 460.92218018]
[486.62908936 475.38226318]
[481.09945679 489.34082031]
[474.14099121 502.64486694]
[465.83001709 515.14868164]
[456.25750732 526.71520996]
[445.52841187 537.21777344]
[433.76025391 546.54132080]
[421.08197021 554.58361816]
[407.63247681 561.25665283]
[393.55914307 566.48718262]
[379.01614380 570.21801758]
[364.16284180 572.40826416]
[349.16198730 573.03381348]
[334.17788696 572.08795166]
[319.37475586 569.58099365]
[304.91476440 565.54034424]
[290.95635986 560.01037598]
[277.65249634 553.05157471]
[265.14889526 544.74029541]
[253.58256531 535.16754150]
[243.08024597 524.43817139]
[233.75700378 512.66979980]
[225.71499634 499.99130249]
[219.04231262 486.54165649]
[213.81208801 472.46820068]
[210.08161926 457.92510986]
[207.89176941 443.07174683]
[207.26654053 428.07086182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[13 154]
[14 153]
[17 152]
[18 151]
[19 150]
[21 148]
[22 147]
[23 146]
[27 142]
[28 141]
[31 138]
[32 137]
[34 135]
[35 134]
[36 133]
[37 132]
[38 131]
[53 130]
[54 129]
[55 128]
[56 127]
[77 126]
[78 125]
[79 124]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
