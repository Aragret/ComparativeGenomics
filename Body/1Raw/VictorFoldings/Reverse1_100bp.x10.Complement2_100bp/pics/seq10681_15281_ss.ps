%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[75.92636108 589.81988525]
[63.39451981 598.13018799]
[49.63842010 604.20288086]
[35.05385971 607.86328125]
[20.06045914 609.00604248]
[5.08961010 607.59832764]
[-9.42794704 603.68060303]
[-23.07451248 597.36560059]
[-35.45744705 588.83502197]
[-46.22047043 578.33428955]
[-55.05390549 566.16552734]
[-61.70360184 552.67889404]
[-65.97823334 538.26239014]
[-67.75480652 523.33081055]
[-66.98220825 508.31378174]
[-63.68266296 493.64337158]
[-57.95111465 479.74166870]
[-49.95246506 467.00866699]
[-39.91685486 455.81069946]
[-28.13302422 446.46997070]
[-14.94002056 439.25521851]
[-0.71743202 434.37402344]
[14.12552929 431.96682739]
[29.16180229 432.10293579]
[31.82759666 417.34170532]
[34.49339294 402.58050537]
[37.15918732 387.81927490]
[39.82498550 373.05807495]
[33.18764496 362.94509888]
[35.28775406 350.62545776]
[45.53713608 342.79519653]
[48.42240906 328.07531738]
[51.30768204 313.35540771]
[54.19295502 298.63552856]
[42.21567917 291.32223511]
[33.43544006 280.33651733]
[28.92285919 266.98526001]
[29.23930359 252.86569214]
[34.36714935 239.67433167]
[43.70943451 229.00312805]
[56.15930176 222.14732361]
[70.23110199 219.94831848]
[73.33521271 205.27301025]
[67.00454712 188.90568542]
[79.42597198 175.31193542]
[82.31124115 160.59205627]
[85.19651031 145.87216187]
[87.75234222 131.09150696]
[89.97746277 116.25746155]
[81.44966125 104.54324341]
[83.59905243 90.21403503]
[95.18849182 81.51742554]
[97.41361237 66.68338013]
[99.63872528 51.84933472]
[101.86384583 37.01529312]
[88.03355408 28.81581306]
[78.43175507 15.96762371]
[74.50502777 0.45580649]
[76.82597351 -15.33713627]
[85.00993347 -28.99721146]
[97.77837372 -38.44792557]
[113.15852356 -42.26590729]
[115.16253662 -57.13143539]
[117.16655731 -71.99696350]
[119.17057037 -86.86249542]
[121.17458344 -101.72801971]
[123.17859650 -116.59355164]
[112.79046631 -105.77288818]
[98.41158295 -101.50114441]
[83.80055237 -104.89495087]
[72.77667236 -115.06716156]
[68.22154236 -129.35879517]
[71.32587433 -144.03405762]
[81.27820587 -155.25685120]
[95.47700500 -160.09358215]
[110.21075439 -157.27993774]
[121.62808228 -147.55139160]
[126.74445343 -133.45184326]
[130.93145752 -147.85563660]
[129.68539429 -152.92459106]
[130.43347168 -157.50648499]
[132.65625000 -160.92324829]
[135.64041138 -162.80130005]
[140.46641541 -177.00375366]
[145.29241943 -191.20620728]
[150.11840820 -205.40867615]
[154.94441223 -219.61112976]
[159.77040100 -233.81358337]
[164.59640503 -248.01603699]
[168.24449158 -262.56564331]
[170.69021606 -277.36492920]
[173.13594055 -292.16418457]
[158.88839722 -296.96041870]
[145.59478760 -303.98010254]
[133.59944153 -313.04141235]
[123.21306610 -323.90969849]
[114.70470428 -336.30340576]
[108.29473877 -349.90151978]
[104.14920044 -364.35180664]
[102.37547302 -379.27996826]
[103.01950073 -394.29934692]
[106.06459045 -409.02087402]
[111.43188477 -423.06323242]
[118.98234558 -436.06274414]
[128.52040100 -447.68261719]
[139.79898071 -457.62191772]
[152.52597046 -465.62316895]
[166.37168884 -471.47912598]
[180.97749329 -475.03811646]
[195.96508789 -476.20794678]
[210.94622803 -474.95831299]
[225.53286743 -471.32156372]
[239.34719849 -465.39193726]
[252.03138733 -457.32299805]
[263.25686646 -447.32379150]
[272.73291016 -435.65325928]
[280.21401978 -422.61373901]
[285.50643921 -408.54296875]
[288.47305298 -393.80541992]
[289.03707886 -378.78283691]
[287.18386841 -363.86431885]
[282.96142578 -349.43634033]
[276.47909546 -335.87255859]
[267.90484619 -323.52435303]
[257.46072388 -312.71154785]
[245.41729736 -303.71423340]
[232.08648682 -296.76547241]
[217.81358337 -292.04519653]
[202.96832275 -289.67575073]
[187.93521118 -289.71847534]
[185.48948669 -274.91918945]
[183.04376221 -260.11993408]
[193.40834045 -270.96316528]
[207.59510803 -275.83505249]
[222.43470764 -273.64727783]
[234.61192322 -264.88854980]
[241.40634155 -251.51559448]
[241.30007935 -236.51597595]
[234.31684875 -223.24063110]
[222.01675415 -214.65531921]
[207.14765930 -212.67802429]
[193.03134155 -217.75045776]
[182.82142639 -228.73945618]
[178.79885864 -243.19003296]
[173.97285461 -228.98757935]
[169.14686584 -214.78512573]
[164.32086182 -200.58267212]
[159.49487305 -186.38021851]
[154.66886902 -172.17776489]
[149.84288025 -157.97531128]
[145.33525085 -143.66862488]
[141.14823914 -129.26483154]
[138.04412842 -114.58953094]
[136.04011536 -99.72400665]
[134.03610229 -84.85847473]
[132.03208923 -69.99295044]
[130.02806091 -55.12742233]
[128.02404785 -40.26189423]
[140.41539001 -33.67446899]
[149.83393860 -23.23084068]
[155.13320923 -10.17184830]
[155.65773010 3.94151807]
[151.32414246 17.41470528]
[142.63357544 28.62306213]
[130.61384583 36.20773697]
[116.69789124 39.24040985]
[114.47277069 54.07445145]
[112.24765778 68.90849304]
[110.02253723 83.74253845]
[118.55033875 95.45675659]
[116.40094757 109.78596497]
[104.81150818 118.48257446]
[102.58638763 133.31661987]
[104.49851227 138.17366028]
[104.36927032 142.81442261]
[102.62290955 146.49752808]
[99.91640472 148.75743103]
[97.03113556 163.47732544]
[94.14585876 178.19721985]
[100.68073273 189.31738281]
[97.97454071 201.51821899]
[88.01051331 208.37712097]
[84.90640259 223.05242920]
[98.22412872 232.06056213]
[107.04416656 245.45748901]
[110.04065704 261.17553711]
[106.78381348 276.80230713]
[97.80130005 289.95104980]
[84.49298096 298.62503052]
[68.91284943 301.52078247]
[66.02757263 316.24069214]
[63.14229965 330.96057129]
[60.25702667 345.68048096]
[66.62738800 362.95761108]
[54.58620071 375.72384644]
[51.92040634 390.48507690]
[49.25461197 405.24630737]
[46.58881378 420.00750732]
[43.92301941 434.76873779]
[58.05707169 439.90063477]
[71.12043762 447.34756470]
[82.73725891 456.89520264]
[92.57329559 468.26885986]
[100.34554291 481.14132690]
[105.83038330 495.14221191]
[108.86999512 509.86865234]
[109.37693787 524.89703369]
[107.33661652 539.79479980]
[102.80773926 554.13348389]
[95.92060852 567.50042725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[31 193]
[32 192]
[33 191]
[34 190]
[42 183]
[43 182]
[45 179]
[46 178]
[47 177]
[48 173]
[49 172]
[52 169]
[53 168]
[54 167]
[55 166]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[78 152]
[79 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 132]
[91 131]
[92 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
