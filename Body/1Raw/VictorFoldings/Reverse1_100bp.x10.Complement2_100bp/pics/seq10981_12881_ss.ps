%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[-12.52173996 407.39755249]
[-13.15674782 422.39633179]
[-15.25885487 437.26065063]
[-18.80781555 451.84735107]
[-23.76945114 466.01593018]
[-30.09597778 479.62997437]
[-37.72646332 492.55831909]
[-46.58742142 504.67651367]
[-56.59351730 515.86779785]
[-67.64837646 526.02441406]
[-79.64554596 535.04852295]
[-92.46946716 542.85327148]
[-105.99664307 549.36340332]
[-120.09680176 554.51635742]
[-134.63414001 558.26232910]
[-149.46864319 560.56536865]
[-164.45747375 561.40332031]
[-179.45623779 560.76800537]
[-194.32051086 558.66558838]
[-208.90713501 555.11633301]
[-223.07563782 550.15441895]
[-236.68952942 543.82763672]
[-249.61773682 536.19689941]
[-261.73574829 527.33569336]
[-272.92681885 517.32934570]
[-283.08322144 506.27429199]
[-292.10711670 494.27694702]
[-299.91159058 481.45288086]
[-306.42147827 467.92556763]
[-311.57409668 453.82528687]
[-315.31982422 439.28790283]
[-317.62258911 424.45333862]
[-318.46017456 409.46450806]
[-317.82458496 394.46572876]
[-315.72186279 379.60150146]
[-312.17233276 365.01495361]
[-307.21011353 350.84655762]
[-300.88305664 337.23278809]
[-293.25204468 324.30471802]
[-284.39059448 312.18688965]
[-274.38406372 300.99603271]
[-263.32879639 290.83984375]
[-251.33126831 281.81619263]
[-238.50703430 274.01199341]
[-224.97959900 267.50234985]
[-210.87924194 262.35000610]
[-196.34175110 258.60458374]
[-181.50714111 256.30212402]
[-166.51829529 255.46481323]
[-151.51954651 256.10073853]
[-136.65534973 258.20373535]
[-122.06887817 261.75357056]
[-107.90058136 266.71603394]
[-94.28692627 273.04339600]
[-81.35903168 280.67465210]
[-69.24138641 289.53634644]
[-59.24320984 278.35437012]
[-49.24504089 267.17239380]
[-39.24686813 255.99041748]
[-29.24869537 244.80844116]
[-19.25052261 233.62646484]
[-16.59240913 216.27995300]
[0.94787258 210.67459106]
[3.44494009 195.99079895]
[18.33321762 190.63825989]
[27.90833855 179.09194946]
[37.22322083 167.33470154]
[46.53810501 155.57745361]
[55.85298538 143.82020569]
[65.16786957 132.06294250]
[74.48274994 120.30569458]
[76.32166290 105.52504730]
[90.95608521 99.51303864]
[91.05946350 95.65795135]
[92.86159515 91.86714935]
[96.29567719 88.89830017]
[100.95886230 87.45104218]
[110.78944397 76.12144470]
[120.62002563 64.79185486]
[130.45060730 53.46226120]
[140.28118896 42.13266754]
[149.59606934 30.37541771]
[158.37667847 18.21396065]
[167.15727234 6.05250549]
[175.93788147 -6.10895014]
[184.44470215 -18.46345901]
[192.67352295 -31.00485992]
[200.90232849 -43.54626083]
[208.27301025 -56.61044693]
[214.75250244 -70.13879395]
[221.23200989 -83.66713715]
[227.71150208 -97.19548035]
[234.19099426 -110.72383118]
[240.56959534 -124.30003357]
[246.84696960 -137.92335510]
[253.12432861 -151.54666138]
[253.87347412 -160.65032959]
[259.59790039 -165.32501221]
[266.07739258 -178.85334778]
[272.55688477 -192.38169861]
[260.12057495 -200.81947327]
[249.08084106 -211.01661682]
[239.68428040 -222.74531555]
[232.14083862 -235.74354553]
[226.61903381 -249.72093201]
[223.24221802 -264.36520386]
[222.08583069 -279.34921265]
[223.17572021 -294.33819580]
[226.48751831 -308.99731445]
[231.94725037 -322.99905396]
[239.43295288 -336.03063965]
[248.77737427 -347.80090332]
[259.77175903 -358.04693604]
[272.17050171 -366.53979492]
[285.69659424 -373.08978271]
[300.04788208 -377.55056763]
[314.90371704 -379.82244873]
[329.93225098 -379.85473633]
[344.79772949 -377.64666748]
[359.16802979 -373.24755859]
[372.72213745 -366.75573730]
[385.15722656 -358.31619263]
[396.19552612 -348.11746216]
[405.59042358 -336.38745117]
[413.13201904 -323.38812256]
[418.65182495 -309.40997314]
[422.02655029 -294.76519775]
[423.18081665 -279.78103638]
[422.08877563 -264.79220581]
[418.77490234 -250.13356018]
[413.31317139 -236.13258362]
[405.82562256 -223.10208130]
[396.47952271 -211.33312988]
[385.48367310 -201.08866882]
[373.08370972 -192.59756470]
[359.55667114 -186.04951477]
[345.20477295 -181.59078979]
[330.34860229 -179.32099915]
[315.32006836 -179.29087830]
[300.45492554 -181.50106812]
[286.08523560 -185.90220642]
[279.60574341 -172.37385559]
[273.12625122 -158.84552002]
[266.74765015 -145.26930237]
[260.47027588 -131.64599609]
[254.19291687 -118.02267456]
[254.24870300 -110.63222504]
[247.71934509 -104.24433136]
[241.23985291 -90.71598816]
[234.76034546 -77.18763733]
[228.28085327 -63.65929413]
[221.80136108 -50.13095093]
[235.28192139 -56.70927811]
[250.19108582 -55.06095886]
[261.90905762 -45.69673157]
[266.80496216 -31.51821327]
[263.36166382 -16.91876793]
[252.64616394 -6.42219257]
[237.97875977 -3.28096581]
[223.90431213 -8.46843147]
[214.78393555 -20.37719536]
[213.44372559 -35.31745148]
[205.21492004 -22.77605247]
[196.98611450 -10.23465157]
[197.34109497 -6.72661448]
[196.01457214 -2.87234712]
[192.86230469 0.53595740]
[188.09933472 2.67165279]
[179.31874084 14.83310890]
[170.53813171 26.99456406]
[161.75752258 39.15602112]
[176.69976807 37.84090424]
[188.28353882 47.37064743]
[189.87315369 62.28618240]
[180.55798340 74.04321289]
[165.67419434 75.90677643]
[153.74789429 66.80934143]
[151.61077881 51.96324921]
[141.78019714 63.29284286]
[131.94961548 74.62243652]
[122.11904144 85.95202637]
[112.28845978 97.28162384]
[102.71334076 108.82792664]
[100.20816803 124.44953156]
[86.24000549 129.62057495]
[76.92511749 141.37782288]
[67.61023712 153.13508606]
[58.29535675 164.89233398]
[48.98047256 176.64958191]
[39.66558838 188.40682983]
[38.90582275 193.57112122]
[36.48334503 197.53153992]
[33.13515472 199.85633850]
[29.66281128 200.46884155]
[26.46259499 215.96299744]
[12.27746582 220.50517273]
[12.40875149 233.40267944]
[3.98759580 242.63674927]
[-8.06854916 243.62463379]
[-18.06672096 254.80661011]
[-28.06489372 265.98858643]
[-38.06306458 277.17056274]
[-48.06123734 288.35253906]
[-58.05941010 299.53451538]
[-47.90257263 310.58917236]
[-38.87820816 322.58615112]
[-31.07322311 335.40991211]
[-24.56278801 348.93698120]
[-19.40960121 363.03701782]
[-15.66329479 377.57427979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 204]
[57 203]
[58 202]
[59 201]
[60 200]
[61 199]
[63 196]
[65 194]
[66 190]
[67 189]
[68 188]
[69 187]
[70 186]
[71 185]
[73 183]
[77 182]
[78 181]
[79 180]
[80 179]
[81 178]
[82 171]
[83 170]
[84 169]
[85 168]
[86 164]
[87 163]
[88 162]
[89 152]
[90 151]
[91 150]
[92 149]
[93 148]
[94 146]
[95 145]
[96 144]
[98 143]
[99 142]
[100 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
