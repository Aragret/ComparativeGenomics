%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[78.11775970 600.60803223]
[66.86866760 610.58630371]
[54.09495163 618.51977539]
[40.16414642 624.18023682]
[25.47706795 627.40478516]
[10.45628834 628.10064697]
[-4.46601009 626.24780273]
[-18.86048508 621.89953613]
[-32.31298065 615.18103027]
[-44.43643570 606.28558350]
[-54.88204193 595.46905518]
[-63.34925461 583.04266357]
[-69.59445190 569.36401367]
[-73.43795776 554.82666016]
[-74.76917267 539.84881592]
[-73.54980469 524.86145020]
[-69.81493378 510.29574585]
[-63.67201614 496.57086182]
[-55.29780579 484.08163452]
[-44.93323898 473.18743896]
[-32.87652206 464.20169067]
[-19.47455788 457.38293457]
[-5.11294413 452.92736816]
[9.79510784 450.96319580]
[24.82066154 451.54690552]
[27.92477226 436.87161255]
[31.02888298 422.19631958]
[34.13299179 407.52099609]
[37.01826477 392.80111694]
[39.68405914 378.03988647]
[42.34985733 363.27868652]
[45.01565170 348.51745605]
[47.68144608 333.75625610]
[50.34724045 318.99502563]
[53.01303864 304.23379517]
[55.67883301 289.47259521]
[50.32658768 275.57284546]
[60.39328384 263.36743164]
[51.71609116 251.31579590]
[54.20930862 236.30784607]
[66.90901184 227.28813171]
[69.57480621 212.52691650]
[64.22255707 198.62716675]
[74.28925323 186.42175293]
[72.35037994 182.05714417]
[73.13275146 176.42820740]
[77.26044464 171.26354980]
[80.36455536 156.58824158]
[83.46865845 141.91294861]
[86.57276917 127.23764038]
[89.67687988 112.56233978]
[84.06761932 96.75371552]
[95.41504669 84.40008545]
[97.64016724 69.56604004]
[99.20069122 54.64743805]
[100.76120758 39.72883606]
[93.26029968 29.23601913]
[94.86719513 16.84240532]
[104.17957306 9.12189770]
[105.96203613 -5.77181911]
[107.74450684 -20.66553688]
[109.52696991 -35.55925369]
[111.30943298 -50.45297241]
[113.09190369 -65.34668732]
[114.87436676 -80.24040222]
[108.83177948 -94.86222839]
[118.02664948 -106.57988739]
[115.97076416 -111.37785339]
[115.96177673 -116.02039337]
[117.59770203 -119.75386047]
[120.23572540 -122.09334564]
[122.68144989 -136.89262390]
[125.12717438 -151.69189453]
[127.57290649 -166.49116516]
[130.01863098 -181.29043579]
[132.46435547 -196.08970642]
[134.91007996 -210.88897705]
[136.58163452 -225.79554749]
[137.47444153 -240.76895142]
[138.36726379 -255.74235535]
[138.25558472 -270.74194336]
[137.13993835 -285.70040894]
[136.02429199 -300.65884399]
[134.90864563 -315.61730957]
[133.79299927 -330.57574463]
[132.67735291 -345.53421021]
[117.71866608 -347.10827637]
[103.28150177 -351.32821655]
[89.82993317 -358.05838013]
[77.79639435 -367.08245850]
[67.56769562 -378.11029053]
[59.47265625 -390.78744507]
[53.77149582 -404.70635986]
[50.64748383 -419.41964722]
[50.20104218 -434.45428467]
[52.44652557 -449.32699585]
[57.31174850 -463.55969238]
[64.64031982 -476.69482422]
[74.19664001 -488.31018066]
[85.67353821 -498.03234863]
[98.70205688 -505.54882812]
[112.86339569 -510.61798096]
[127.70232391 -513.07684326]
[142.74182129 -512.84643555]
[157.49844360 -509.93405151]
[171.49783325 -504.43341064]
[184.28994751 -496.52127075]
[195.46357727 -486.45202637]
[204.65954590 -474.54934692]
[211.58222961 -461.19583130]
[216.00910950 -446.82077026]
[217.79786682 -431.88626099]
[216.89099121 -416.87234497]
[213.31765747 -402.26168823]
[207.19271851 -388.52398682]
[198.71307373 -376.10079956]
[188.15130615 -365.39151001]
[175.84693909 -356.74038696]
[162.19548035 -350.42550659]
[147.63580322 -346.64987183]
[148.75144958 -331.69140625]
[149.86709595 -316.73294067]
[150.98274231 -301.77450562]
[152.09840393 -286.81604004]
[153.21405029 -271.85760498]
[161.63023376 -284.27401733]
[175.38101196 -290.26702881]
[190.20556641 -287.97955322]
[201.51036072 -278.12045288]
[205.79244995 -263.74465942]
[201.72500610 -249.30665588]
[190.56835938 -239.28022766]
[175.77952576 -236.77217102]
[161.94097900 -242.55963135]
[153.34066772 -254.84954834]
[152.44784546 -239.87614441]
[151.55503845 -224.90272522]
[162.71569824 -234.92469788]
[177.70249939 -235.55369568]
[189.66368103 -226.50218201]
[193.13075256 -211.90837097]
[186.51861572 -198.44435120]
[172.85025024 -192.26570129]
[158.37464905 -196.19721985]
[149.70935059 -208.44325256]
[147.26362610 -193.64398193]
[144.81790161 -178.84471130]
[142.37217712 -164.04544067]
[139.92645264 -149.24617004]
[137.48071289 -134.44689941]
[135.03498840 -119.64762115]
[132.92036438 -104.79742432]
[139.09045410 -91.24089813]
[129.76808167 -78.45793915]
[127.98561859 -63.56422424]
[126.20315552 -48.67050552]
[124.42068481 -33.77678680]
[122.63822174 -18.88306999]
[120.85575867 -3.98935342]
[119.07328796 10.90436363]
[126.83892822 26.64163780]
[115.67981720 41.28935623]
[114.11929321 56.20796204]
[112.55876923 71.12656403]
[124.86289978 62.54703140]
[139.65345764 65.04485321]
[148.45776367 77.18916321]
[146.23228455 92.02315521]
[134.25189209 101.04924011]
[119.37950134 99.09687042]
[110.13494110 87.28536224]
[116.03817749 97.32493591]
[113.71292877 108.73696899]
[104.35218811 115.66644287]
[101.24807739 130.34175110]
[98.14396667 145.01704407]
[95.03985596 159.69235229]
[91.93574524 174.36766052]
[89.05046844 189.08755493]
[94.21204376 204.04310608]
[84.33602142 215.19270325]
[81.67022705 229.95391846]
[90.41277313 242.84599304]
[87.49900055 257.77798462]
[75.15450287 266.03323364]
[80.31607056 280.98880005]
[70.44004822 292.13839722]
[67.77425385 306.89959717]
[65.10845947 321.66082764]
[62.44266510 336.42202759]
[59.77686691 351.18325806]
[57.11107254 365.94448853]
[54.44527817 380.70568848]
[51.77948380 395.46691895]
[53.65197372 401.80767822]
[52.25141525 407.31542969]
[48.80829620 410.62512207]
[45.70418549 425.30041504]
[42.60007477 439.97570801]
[39.49596405 454.65103149]
[53.47095490 460.20147705]
[66.30680847 468.03402710]
[77.63420868 477.92330933]
[87.12725067 489.58480835]
[94.51278687 502.68295288]
[99.57833862 516.84094238]
[102.17814636 531.65136719]
[102.23741150 546.68817139]
[99.75443268 561.51861572]
[94.80064392 575.71606445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 200]
[26 199]
[27 198]
[28 197]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[38 185]
[41 182]
[42 181]
[44 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[53 171]
[54 164]
[55 163]
[56 162]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[67 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 137]
[79 136]
[80 135]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
