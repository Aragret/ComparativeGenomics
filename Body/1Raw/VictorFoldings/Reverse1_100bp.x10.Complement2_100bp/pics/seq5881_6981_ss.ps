%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGAGUAGUGAUCUGUAGCAUGAUGUGCUGUGCAUGAUGCAACAUCGGGUGAAGGUGAUACAGGAUAGUUAUCCUCGACAUAAACGGUAGUAUCCUCCGAA\
) } def
/len { sequence length } bind def

/coor [
[150.93698120 642.98303223]
[155.28546143 628.41735840]
[164.88087463 616.62768555]
[178.25994873 609.41180420]
[169.24055481 597.55859375]
[175.50018311 583.02832031]
[173.93965149 568.10974121]
[172.37913513 553.19110107]
[168.55682373 546.86566162]
[170.90812683 538.03900146]
[169.56990051 523.09881592]
[160.49151611 515.10449219]
[159.25434875 502.66854858]
[167.06433105 492.40368652]
[165.94868469 477.44525146]
[164.83303833 462.48678589]
[163.71739197 447.52835083]
[161.27166748 432.72906494]
[157.51536560 418.20700073]
[153.75906372 403.68493652]
[150.00276184 389.16290283]
[146.24645996 374.64083862]
[133.28910828 362.80554199]
[138.35681152 345.10244751]
[134.38471985 330.63790894]
[130.41262817 316.17337036]
[126.44052124 301.70886230]
[122.46842957 287.24432373]
[118.49633026 272.77981567]
[111.07231140 272.51095581]
[103.84847260 270.72988892]
[97.13000488 267.50711060]
[91.20172119 262.97421265]
[86.31596375 257.31826782]
[82.68186951 250.77438354]
[80.45644379 243.61581421]
[79.73775482 236.14250183]
[80.56063843 228.66859436]
[82.89503479 221.50923157]
[86.64703369 214.96719360]
[91.66269684 209.32017517]
[97.73433685 204.80889893]
[104.60910034 201.62699890]
[102.82663727 186.73329163]
[101.04417419 171.83956909]
[99.26170349 156.94584656]
[85.62166595 155.10569763]
[72.82142639 150.04698181]
[61.60860825 142.06513977]
[52.63813400 131.62640381]
[46.43394089 119.34043884]
[43.35839462 105.92485046]
[43.59113693 92.16321564]
[47.11856842 78.85929871]
[53.73466110 66.79016113]
[63.05298996 56.66071701]
[74.52928925 49.06260300]
[87.49327087 44.43960953]
[86.15503693 29.49942398]
[84.81680298 14.55923939]
[83.47856903 -0.38094527]
[79.99385071 -5.99950790]
[79.88591766 -11.68153000]
[82.32970428 -15.78481674]
[81.43688202 -30.75822258]
[80.54406738 -45.73162842]
[79.53981018 -60.69797134]
[78.42416382 -75.65642548]
[77.30850983 -90.61487579]
[76.19286346 -105.57333374]
[74.96588898 -120.52306366]
[73.07259369 -135.40310669]
[70.62686920 -150.20237732]
[68.18114471 -165.00164795]
[58.16943741 -173.13359070]
[56.43706131 -185.51028442]
[63.37255859 -195.42115784]
[61.14744186 -210.25520325]
[58.92232513 -225.08924866]
[56.58683777 -239.90632629]
[54.14110947 -254.70559692]
[51.69538116 -269.50485229]
[49.24965668 -284.30413818]
[40.92178726 -288.72610474]
[35.64057541 -296.37072754]
[34.48643875 -305.45159912]
[37.59277344 -313.91598511]
[44.14406204 -319.90878296]
[42.36159515 -334.80249023]
[40.57912827 -349.69619751]
[38.79666519 -364.58993530]
[23.89772987 -367.07958984]
[10.30432606 -373.66714478]
[-0.88158834 -383.81860352]
[-8.75322247 -396.71099854]
[-12.67245865 -411.29922485]
[-12.32158089 -426.40066528]
[-7.72903490 -440.79113770]
[0.73288393 -453.30401611]
[12.37820530 -462.92501831]
[26.26289368 -468.87411499]
[41.26138306 -470.66912842]
[56.15780640 -468.16452026]
[69.74458313 -461.56329346]
[80.92029572 -451.40060425]
[88.77897644 -438.50030518]
[92.68355560 -423.90814209]
[92.31750488 -408.80706787]
[87.71050262 -394.42123413]
[79.23602295 -381.91683960]
[67.58103943 -372.30755615]
[53.69038010 -366.37237549]
[55.47284698 -351.47866821]
[57.25531387 -336.58496094]
[59.03778076 -321.69122314]
[72.80022430 -306.31072998]
[64.04892731 -286.74984741]
[66.49465179 -271.95059204]
[68.94038391 -257.15130615]
[71.38610840 -242.35205078]
[75.57814026 -236.26528931]
[73.75637054 -227.31436157]
[75.98148346 -212.48033142]
[78.20660400 -197.64628601]
[89.86235046 -184.52719116]
[82.98041534 -167.44737244]
[85.42613983 -152.64810181]
[87.87186432 -137.84883118]
[98.59603882 -148.33654785]
[113.50009918 -146.64270020]
[121.59732056 -134.01594543]
[116.91873932 -119.76425171]
[102.91323090 -114.39343262]
[89.90607452 -121.86129761]
[93.63378143 -115.47961426]
[91.15131378 -106.68898010]
[92.26696777 -91.73052979]
[93.38261414 -76.77207184]
[94.49826050 -61.81362152]
[98.13054657 -55.37714005]
[95.51747894 -46.62444305]
[96.41029358 -31.65103912]
[97.30310822 -16.67763329]
[98.41875458 -1.71917939]
[99.75698853 13.22100544]
[101.09522247 28.16119003]
[102.43345642 43.10137558]
[118.32015991 46.07646942]
[132.73126221 53.39484787]
[144.50601196 64.46704865]
[152.69601440 78.40126038]
[156.64160156 94.07514954]
[156.02497864 110.22624969]
[150.89581299 125.55368042]
[141.66723633 138.82289124]
[129.08256531 148.96508789]
[114.15541840 155.16339111]
[115.93788910 170.05709839]
[117.72035217 184.95082092]
[119.50282288 199.84454346]
[140.87307739 209.27345276]
[152.22354126 229.54861450]
[149.12251282 252.45384216]
[132.96086121 268.80770874]
[136.93295288 283.27224731]
[140.90504456 297.73675537]
[144.87715149 312.20129395]
[148.84924316 326.66580200]
[152.82133484 341.13034058]
[163.62472534 348.17660522]
[166.63529968 360.30590820]
[160.76852417 370.88452148]
[164.52481079 385.40658569]
[168.28111267 399.92864990]
[172.03741455 414.45071411]
[175.79371643 428.97277832]
[180.50691223 414.73248291]
[190.86955261 403.88742065]
[204.88081360 398.53158569]
[219.83529663 399.69912720]
[232.84556580 407.16458130]
[241.39950562 419.48651123]
[243.84552002 434.28573608]
[239.71128845 448.70474243]
[229.79508972 459.95947266]
[216.01158142 465.87680054]
[201.02212524 465.31420898]
[187.72097778 458.38024902]
[178.67584229 446.41268921]
[179.79148865 461.37115479]
[180.90713501 476.32958984]
[182.02278137 491.28805542]
[192.74082947 506.26153564]
[184.51008606 521.76062012]
[185.84831238 536.70080566]
[187.29772949 551.63061523]
[188.85826111 566.54919434]
[190.41877747 581.46783447]
[199.54978943 594.38812256]
[193.17855835 607.85131836]
[207.76129150 612.14227295]
[219.58874512 621.69110107]
[226.85734558 635.04156494]
[228.45864868 650.15795898]
[224.14849854 664.73504639]
[214.58415222 676.54992676]
[201.22409058 683.80090332]
[186.10565186 685.38238525]
[171.53425598 681.05303955]
[159.73196411 671.47314453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[6 198]
[7 197]
[8 196]
[10 195]
[11 194]
[14 192]
[15 191]
[16 190]
[17 189]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[43 160]
[44 159]
[45 158]
[46 157]
[58 147]
[59 146]
[60 145]
[61 144]
[64 143]
[65 142]
[66 141]
[67 139]
[68 138]
[69 137]
[70 136]
[71 134]
[72 128]
[73 127]
[74 126]
[77 124]
[78 123]
[79 122]
[80 120]
[81 119]
[82 118]
[83 117]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
