%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[214.45640564 384.90719604]
[223.13752747 372.64407349]
[233.44091797 361.70852661]
[245.16601562 352.31338501]
[237.50541687 339.41708374]
[229.84481812 326.52075195]
[222.18421936 313.62442017]
[206.43827820 305.87640381]
[206.36300659 287.46237183]
[198.51124573 274.68154907]
[190.65948486 261.90069580]
[182.80773926 249.11985779]
[174.95597839 236.33900452]
[167.10421753 223.55816650]
[152.60272217 220.35783386]
[144.45785522 207.50808716]
[147.91299438 192.31927490]
[140.06123352 179.53843689]
[125.22192383 178.57270813]
[113.65995789 168.94020081]
[109.94349670 154.17398071]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[65.40239716 83.94235992]
[51.15220261 82.66978455]
[38.01137161 77.06687164]
[27.25947762 67.69358826]
[19.93901443 55.47634888]
[16.75433350 41.61642838]
[18.00388527 27.47186661]
[23.55230522 14.42440510]
[32.84493637 3.74449801]
[25.18433952 -9.15182877]
[17.52374077 -22.04815674]
[5.24012899 -25.98206902]
[-0.87490284 -36.88115692]
[1.98116183 -48.63570786]
[-5.48657942 -61.64466095]
[-12.95432091 -74.65361023]
[-21.18312836 -87.19501495]
[-30.14382362 -99.22438812]
[-39.10451889 -111.25376892]
[-48.06521606 -123.28314972]
[-57.02591324 -135.31253052]
[-61.07205582 -136.88818359]
[-64.10163879 -139.41526794]
[-65.94039917 -142.45736694]
[-66.57368469 -145.56631470]
[-66.13649750 -148.33525085]
[-74.36530304 -160.87664795]
[-82.59411621 -173.41804504]
[-90.82292175 -185.95945740]
[-104.15559387 -179.05699158]
[-118.12732697 -173.56201172]
[-132.59001160 -169.53277588]
[-147.39033508 -167.01197815]
[-162.37139893 -166.02635193]
[-177.37442017 -166.58633423]
[-192.24034119 -168.68600464]
[-206.81156921 -172.30308533]
[-220.93363953 -177.39924622]
[-234.45687866 -183.92047119]
[-247.23789978 -191.79762268]
[-259.14123535 -200.94720459]
[-270.04067993 -211.27221680]
[-279.82073975 -222.66320801]
[-288.37768555 -234.99943542]
[-295.62084961 -248.15011597]
[-301.47341919 -261.97586060]
[-305.87338257 -276.33010864]
[-308.77410889 -291.06069946]
[-310.14477539 -306.01144409]
[-309.97094727 -321.02389526]
[-308.25439453 -335.93893433]
[-305.01336670 -350.59838867]
[-300.28216553 -364.84689331]
[-294.11099243 -378.53338623]
[-286.56524658 -391.51281738]
[-277.72491455 -403.64758301]
[-267.68371582 -414.80905151]
[-256.54809570 -424.87890625]
[-244.43606567 -433.75036621]
[-231.47605896 -441.32943726]
[-217.80545044 -447.53576660]
[-203.56913757 -452.30352783]
[-188.91806030 -455.58221436]
[-174.00750732 -457.33706665]
[-158.99554443 -457.54949951]
[-144.04132080 -456.21719360]
[-129.30332947 -453.35433960]
[-114.93783569 -448.99127197]
[-101.09709930 -443.17422485]
[-87.92784119 -435.96487427]
[-75.56967163 -427.43963623]
[-64.15359497 -417.68890381]
[-53.80061722 -406.81597900]
[-44.62049103 -394.93621826]
[-36.71053314 -382.17547607]
[-30.15459251 -368.66903687]
[-25.02216530 -354.56008911]
[-21.36765671 -339.99819946]
[-19.22980881 -325.13772583]
[-18.63128281 -310.13619995]
[-19.57842445 -295.15264893]
[-22.06119156 -280.34588623]
[-26.05326843 -265.87289429]
[-31.51233292 -251.88710022]
[-38.38051987 -238.53674316]
[-46.58501816 -225.96336365]
[-56.03886032 -214.30021667]
[-66.64183044 -203.67095947]
[-78.28152466 -194.18826294]
[-70.05271149 -181.64686584]
[-61.82390594 -169.10545349]
[-53.59510040 -156.56405640]
[-44.99653625 -144.27322388]
[-36.03583908 -132.24383545]
[-27.07514191 -120.21446228]
[-18.11444664 -108.18508911]
[-9.15375042 -96.15570831]
[-7.97931147 -111.10966492]
[1.67254484 -122.59189606]
[16.20191383 -126.31981659]
[30.18970108 -120.90300751]
[38.41880798 -108.36180878]
[37.81998062 -93.37376404]
[28.61656570 -81.52905273]
[14.24121094 -77.24546051]
[0.05463189 -82.12135315]
[7.52237320 -69.11240387]
[14.99011421 -56.10345078]
[30.61896324 -48.12184525]
[30.42006874 -29.70875359]
[38.08066559 -16.81242561]
[45.74126434 -3.91609955]
[61.17333603 -7.03704405]
[76.76770020 -4.68103886]
[90.63614655 2.88523030]
[101.09307098 14.76308346]
[106.86038208 29.52855110]
[107.22364807 45.40307236]
[102.12056732 60.46773148]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[143.82972717 133.35638428]
[155.32162476 143.34587097]
[158.68798828 158.01322937]
[152.84208679 171.68667603]
[160.69383240 184.46752930]
[175.80424500 188.25080872]
[183.58497620 201.32426453]
[179.88507080 215.70640564]
[187.73681641 228.48725891]
[195.58857727 241.26809692]
[203.44033813 254.04893494]
[211.29208374 266.82977295]
[219.14384460 279.61062622]
[231.48466492 283.36120605]
[237.76129150 294.16806030]
[235.08055115 305.96383667]
[242.74114990 318.86013794]
[250.40174866 331.75646973]
[258.06234741 344.65280151]
[271.92160034 338.85046387]
[286.45352173 335.03347778]
[301.37524414 333.27618408]
[316.39633179 333.61276245]
[331.22436523 336.03668213]
[345.57073975 340.50076294]
[359.15615845 346.91809082]
[371.71624756 355.16372681]
[383.00643921 365.07723999]
[392.80703735 376.46560669]
[400.92721558 389.10714722]
[407.20892334 402.75579834]
[411.52990723 417.14593506]
[413.80606079 431.99737549]
[413.99307251 447.02105713]
[412.08728027 461.92453003]
[408.12579346 476.41772461]
[402.18569946 490.21853638]
[394.38269043 503.05825806]
[384.86859131 514.68701172]
[373.82864380 524.87847900]
[361.47769165 533.43420410]
[348.05618286 540.18768311]
[333.82537842 545.00744629]
[319.06225586 547.79962158]
[304.05419922 548.51000977]
[289.09335327 547.12463379]
[274.47094727 543.67053223]
[260.47155762 538.21496582]
[247.36773682 530.86401367]
[235.41453552 521.76092529]
[224.84461975 511.08273315]
[215.86375427 499.03741455]
[208.64672852 485.85937500]
[203.33406067 471.80514526]
[200.02912903 457.14828491]
[198.79627991 442.17407227]
[199.65951538 427.17404175]
[202.60202026 412.44015503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 171]
[5 170]
[6 169]
[7 168]
[9 165]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[17 157]
[18 156]
[22 152]
[23 151]
[24 150]
[26 148]
[27 147]
[36 139]
[37 138]
[38 137]
[41 135]
[42 134]
[43 133]
[44 124]
[45 123]
[46 122]
[47 121]
[48 120]
[53 119]
[54 118]
[55 117]
[56 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
