%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[11.27942276 621.78430176]
[0.84077650 632.56823730]
[-10.45275688 642.45336914]
[-22.52402878 651.37213135]
[-35.29058075 659.26354980]
[-48.66520309 666.07379150]
[-62.55653000 671.75622559]
[-76.86966705 676.27215576]
[-91.50684357 679.59069824]
[-106.36807251 681.68914795]
[-121.35182953 682.55316162]
[-136.35575867 682.17694092]
[-151.27737427 680.56292725]
[-166.01473999 677.72222900]
[-180.46717834 673.67419434]
[-194.53596497 668.44647217]
[-208.12500000 662.07489014]
[-221.14144897 654.60284424]
[-233.49639893 646.08142090]
[-245.10546875 636.56878662]
[-255.88931274 626.13000488]
[-265.77429199 614.83636475]
[-274.69290161 602.76501465]
[-282.58416748 589.99835205]
[-289.39422607 576.62365723]
[-295.07653809 562.73223877]
[-299.59231567 548.41906738]
[-302.91064453 533.78186035]
[-305.00894165 518.92059326]
[-305.87280273 503.93682861]
[-305.49633789 488.93289185]
[-303.88217163 474.01132202]
[-301.04125977 459.27398682]
[-296.99307251 444.82159424]
[-291.76522827 430.75286865]
[-285.39343262 417.16390991]
[-277.92123413 404.14752197]
[-269.39965820 391.79269409]
[-259.88693237 380.18374634]
[-249.44802856 369.40002441]
[-238.15425110 359.51516724]
[-226.08277893 350.59671021]
[-213.31604004 342.70556641]
[-199.94125366 335.89569092]
[-186.04978943 330.21353149]
[-171.73654175 325.69793701]
[-157.09928894 322.37976074]
[-142.23800659 320.28167725]
[-127.25423431 319.41799927]
[-112.25031281 319.79461670]
[-97.32873535 321.40896606]
[-82.59143829 324.25006104]
[-68.13909912 328.29843140]
[-54.07043076 333.52642822]
[-40.48154831 339.89837646]
[-33.01380539 326.88943481]
[-25.54606628 313.88049316]
[-24.94228745 306.51452637]
[-17.86906052 300.73461914]
[-18.02134514 285.84078979]
[-4.32132292 277.92752075]
[3.33927441 265.03118896]
[10.99987221 252.13487244]
[10.84758854 237.24104309]
[24.54760933 229.32775879]
[32.20820618 216.43142700]
[39.86880493 203.53511047]
[47.52940369 190.63877869]
[54.60650635 177.41325378]
[61.08600235 163.88490295]
[67.56549835 150.35656738]
[74.04499817 136.82821655]
[80.52449036 123.29987335]
[87.00399017 109.77152252]
[83.80295563 98.57354736]
[88.91191101 88.10742188]
[99.70967865 83.74285126]
[103.57398224 69.24916077]
[104.46680450 54.27575684]
[105.35961914 39.30234909]
[106.25243378 24.32894325]
[92.99371338 16.84778404]
[84.33326721 4.40256166]
[81.94486237 -10.50769424]
[86.24935150 -24.91714859]
[96.34163666 -35.98309708]
[110.18038940 -41.54676437]
[111.07320404 -56.52016830]
[111.96601868 -71.49357605]
[112.85883331 -86.46697998]
[104.23734283 -102.73815918]
[114.46500397 -116.99866486]
[115.13478851 -131.98370361]
[115.80457306 -146.96873474]
[116.47435760 -161.95378113]
[117.14414215 -176.93881226]
[117.81392670 -191.92385864]
[118.37213898 -206.91346741]
[118.81874084 -221.90681458]
[104.94002533 -228.10758972]
[94.49432373 -239.15093994]
[89.07453156 -253.35285950]
[89.50713348 -268.54763794]
[95.72615814 -282.41818237]
[106.78324890 -292.84936523]
[120.99227905 -298.25045776]
[136.18647766 -297.79788208]
[150.04882812 -291.56060791]
[160.46543884 -280.48980713]
[165.84785461 -266.27368164]
[165.37527466 -251.08009338]
[159.11978149 -237.22595215]
[148.03527832 -226.82391357]
[133.81208801 -221.46020508]
[133.36549377 -206.46685791]
[136.30844116 -199.68742371]
[132.79896545 -191.25407410]
[132.12918091 -176.26902771]
[131.45939636 -161.28399658]
[130.78961182 -146.29895020]
[130.11982727 -131.31391907]
[129.45004272 -116.32888031]
[137.37898254 -107.19332123]
[136.94361877 -94.70355225]
[127.83224487 -85.57416534]
[126.93943024 -70.60076141]
[126.04660797 -55.62735367]
[125.15379333 -40.65394592]
[138.23335266 -33.48522949]
[146.93914795 -21.29841232]
[149.50085449 -6.47954845]
[145.35757446 8.04124451]
[135.27960205 19.36915588]
[121.22583771 25.22175980]
[120.33302307 40.19516754]
[119.44020844 55.16857147]
[118.54739380 70.14197540]
[125.96407318 57.10385132]
[135.97712708 45.93519211]
[148.13099670 37.14410019]
[161.87278748 31.13051605]
[176.57733154 28.16801453]
[191.57566833 28.39136887]
[206.18547058 31.79041862]
[219.74211121 38.21052933]
[231.62881470 47.35963058]
[241.30485535 58.82149887]
[248.33000183 72.07469177]
[252.38468933 86.51628876]
[253.28443909 101.48927307]
[250.98831177 116.31249237]
[245.60078430 130.31158447]
[237.36694336 142.84968567]
[226.66137695 153.35638428]
[213.97111511 161.35371399]
[199.87347412 166.47782898]
[185.00981140 168.49563599]
[170.05632019 167.31532288]
[155.69328308 162.99060059]
[142.57414246 155.71820068]
[131.29570007 145.82897949]
[122.37105560 133.77282715]
[116.20623779 120.09820557]
[113.08169556 105.42724609]
[113.14005280 90.42304993]
[114.61179352 107.13263702]
[100.53233337 116.25102234]
[94.05283356 129.77937317]
[87.57334137 143.30770874]
[81.09384155 156.83605957]
[74.61434937 170.36441040]
[68.13484955 183.89274597]
[82.60550690 179.94303894]
[95.69850922 187.26242065]
[99.91359711 201.65800476]
[92.83617401 214.88336182]
[78.52050781 219.36239624]
[65.16726685 212.52932739]
[60.42572784 198.29937744]
[52.76513290 211.19570923]
[45.10453415 224.09202576]
[37.44393539 236.98835754]
[37.04828262 252.80461121]
[23.89619827 259.79547119]
[16.23560143 272.69180298]
[8.57500362 285.58810425]
[8.17934990 301.40438843]
[-4.97273397 308.39523315]
[-12.53711319 321.34823608]
[-20.00485420 334.35717773]
[-27.47259521 347.36611938]
[-15.11743927 355.88726807]
[-3.50815725 365.39956665]
[7.27594566 375.83807373]
[17.16120338 387.13150024]
[26.08008575 399.20266724]
[33.97166824 411.96911621]
[40.78204727 425.34365845]
[46.46469116 439.23492432]
[50.98078918 453.54800415]
[54.29948425 468.18515015]
[56.39811325 483.04635620]
[57.26233673 498.03009033]
[56.88624954 513.03405762]
[55.27242279 527.95568848]
[52.43187714 542.69305420]
[48.38402176 557.14556885]
[43.15650940 571.21441650]
[36.78504181 584.80352783]
[29.31315231 597.82006836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 191]
[56 190]
[57 189]
[59 188]
[61 186]
[62 185]
[63 184]
[65 182]
[66 181]
[67 180]
[68 179]
[69 172]
[70 171]
[71 170]
[72 169]
[73 168]
[74 167]
[77 165]
[78 137]
[79 136]
[80 135]
[81 134]
[87 128]
[88 127]
[89 126]
[90 125]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
