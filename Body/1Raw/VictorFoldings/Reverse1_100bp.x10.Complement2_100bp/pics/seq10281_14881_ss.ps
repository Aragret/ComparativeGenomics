%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[113.55937195 622.81298828]
[99.12333679 627.57421875]
[83.96450806 626.44360352]
[70.39448547 619.59356689]
[60.48259735 608.06872559]
[55.74034500 593.62640381]
[56.89087677 578.46911621]
[63.75875092 564.90808105]
[75.29666138 555.01135254]
[89.74517059 550.28814697]
[90.86081696 535.32965088]
[91.97647095 520.37121582]
[89.96501923 517.47528076]
[89.25630951 513.46124268]
[90.36058807 508.95190430]
[93.49062347 504.77459717]
[95.27308655 489.88088989]
[97.05555725 474.98715210]
[98.83802032 460.09344482]
[91.07238007 444.35617065]
[102.23149109 429.70843506]
[103.79201508 414.78985596]
[105.35253906 399.87124634]
[106.91306305 384.95263672]
[108.47358704 370.03402710]
[108.36191559 355.03445435]
[106.57945251 340.14071655]
[104.79698944 325.24700928]
[103.01451874 310.35330200]
[100.48359680 307.89834595]
[99.01600647 304.09555054]
[99.23229218 299.45803833]
[101.50036621 294.75665283]
[100.38471985 279.79821777]
[99.26906586 264.83975220]
[96.29898834 261.09976196]
[95.64682770 255.45425415]
[98.34967041 249.42048645]
[97.67988586 234.43545532]
[97.01010132 219.45040894]
[96.34030914 204.46537781]
[88.04242706 192.09628296]
[95.15579987 177.96438599]
[94.48601532 162.97935486]
[91.04698181 156.43757629]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[83.38900757 54.10970688]
[90.74394226 41.15771103]
[90.29733276 26.16436005]
[89.85073090 11.17101002]
[82.38240051 24.17962265]
[70.31688690 33.09160233]
[55.68744278 36.40512848]
[40.95938873 33.56180573]
[28.61466217 25.04079247]
[20.73356247 12.27802277]
[18.64419556 -2.57574892]
[22.69865417 -17.01740265]
[32.21369171 -28.61326599]
[45.58586121 -35.40923309]
[60.56171036 -36.26005936]
[74.61754608 -31.02237320]
[85.38471985 -20.57881165]
[91.04907227 -6.68766785]
[93.49479675 -21.48693848]
[95.94052124 -36.28620911]
[98.38625336 -51.08547974]
[100.50087738 -65.93567657]
[102.28334045 -80.82939148]
[104.06581116 -95.72311401]
[98.02321625 -110.34493256]
[107.21809387 -122.06259918]
[109.00055695 -136.95631409]
[110.78302002 -151.85003662]
[104.74043274 -166.47184753]
[113.93531036 -178.18951416]
[115.71777344 -193.08323669]
[104.69158173 -199.80653381]
[97.05491638 -210.16299438]
[93.91381836 -222.59313965]
[95.70065308 -235.24171448]
[102.11499786 -246.23461914]
[112.17342377 -253.95660400]
[124.36016083 -257.28851318]
[126.58528137 -272.12255859]
[128.81039429 -286.95660400]
[131.03552246 -301.79064941]
[125.43095398 -316.58587646]
[134.97062683 -328.02459717]
[135.97488403 -342.99093628]
[135.75155640 -357.98925781]
[135.52822876 -372.98760986]
[135.30490112 -387.98593140]
[121.61947632 -394.83923340]
[112.69593048 -407.27423096]
[110.58483887 -422.43344116]
[115.77130890 -436.83340454]
[127.06352997 -447.16513062]
[141.86663818 -451.05444336]
[156.77897644 -447.60760498]
[168.37380981 -437.61666870]
[173.98672485 -423.37750244]
[172.32791138 -408.16213989]
[163.77854919 -395.46697998]
[150.30323792 -388.20925903]
[150.52656555 -373.21093750]
[150.74989319 -358.21258545]
[150.97322083 -343.21426392]
[159.24575806 -355.72686768]
[172.34085083 -363.04248047]
[187.33303833 -363.52682495]
[200.87300110 -357.07165527]
[209.93589783 -345.11907959]
[212.49705505 -330.33935547]
[207.98428345 -316.03427124]
[197.40577698 -305.39965820]
[183.12477112 -300.81130981]
[168.33169556 -303.29425049]
[156.33135986 -312.29382324]
[149.80467224 -325.79946899]
[155.56838989 -312.06524658]
[145.86955261 -299.56552124]
[143.64443970 -284.73147583]
[141.41932678 -269.89743042]
[139.19421387 -255.06338501]
[153.04341125 -244.83412170]
[159.83908081 -228.91770935]
[157.62609863 -211.66352844]
[146.92463684 -197.83641052]
[130.61149597 -191.30076599]
[128.82902527 -176.40704346]
[134.99911499 -162.85052490]
[125.67674255 -150.06756592]
[123.89427185 -135.17384338]
[122.11180878 -120.28012848]
[128.28189087 -106.72360229]
[118.95952606 -93.94064331]
[117.17705536 -79.04692841]
[115.39459229 -64.15321350]
[117.27472687 -61.17035294]
[117.80348969 -57.12863922]
[116.49896240 -52.67313766]
[113.18552399 -48.63975143]
[110.73979187 -33.84048080]
[108.29406738 -19.04121017]
[105.84834290 -4.24194002]
[104.84407806 10.72440434]
[105.29068756 25.71775436]
[105.73728943 40.71110535]
[113.85009766 53.20236588]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[109.47105408 162.30957031]
[110.14083862 177.29460144]
[118.48663330 190.73551941]
[111.32534790 203.79559326]
[111.99514008 218.78062439]
[112.66492462 233.76567078]
[113.33470917 248.75070190]
[114.22752380 263.72412109]
[115.34317017 278.68255615]
[116.45881653 293.64102173]
[117.90824127 308.57083130]
[119.69070435 323.46453857]
[121.47316742 338.35827637]
[123.25563812 353.25198364]
[129.07710266 339.42770386]
[139.44682312 328.58938599]
[153.00047302 322.16302490]
[167.95486450 320.99407959]
[182.34246826 325.23635864]
[194.27033997 334.33172607]
[202.16918945 347.08352661]
[204.99977112 361.81402588]
[202.38966370 376.58520508]
[194.68229675 389.45361328]
[182.89169312 398.72625732]
[168.56909180 403.18310547]
[153.59890747 402.23779297]
[139.95071411 396.01470947]
[129.42016602 385.33258057]
[123.39218903 371.59454346]
[121.83166504 386.51315308]
[120.27114868 401.43176270]
[118.71062469 416.35037231]
[117.15010071 431.26898193]
[124.65100861 441.76177979]
[123.04411316 454.15539551]
[113.73173523 461.87591553]
[111.94927216 476.76962280]
[110.16680908 491.66333008]
[108.38433838 506.55706787]
[106.93492126 521.48687744]
[105.81927490 536.44531250]
[104.70362091 551.40374756]
[118.29162598 558.21807861]
[128.23379517 569.71685791]
[133.01402283 584.14660645]
[131.90338135 599.30688477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 206]
[11 205]
[12 204]
[16 203]
[17 202]
[18 201]
[19 200]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 177]
[27 176]
[28 175]
[29 174]
[33 173]
[34 172]
[35 171]
[38 170]
[39 169]
[40 168]
[41 167]
[43 165]
[44 164]
[46 163]
[47 162]
[48 161]
[51 158]
[52 157]
[54 155]
[55 154]
[56 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 145]
[75 144]
[76 143]
[78 141]
[79 140]
[80 139]
[82 137]
[83 136]
[90 131]
[91 130]
[92 129]
[93 128]
[95 126]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
