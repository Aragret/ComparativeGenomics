%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[76.58519745 679.74346924]
[64.21772003 671.03137207]
[55.14936447 658.92272949]
[50.26855087 644.60375977]
[50.05345535 629.47729492]
[54.52514648 615.02532959]
[63.24553680 602.66369629]
[75.36029053 593.60345459]
[89.68252563 588.73223877]
[89.45919800 573.73388672]
[89.12422180 558.73767090]
[88.67761230 543.74432373]
[88.23101044 528.75097656]
[87.78440094 513.75762939]
[87.33779907 498.76425171]
[85.03598785 496.09329224]
[83.91351318 492.17474365]
[84.54267883 487.57501221]
[87.22114563 483.09472656]
[87.44447327 468.09640503]
[87.66780090 453.09805298]
[77.14172363 442.62249756]
[77.15455627 427.40887451]
[88.21365356 416.43917847]
[88.43698120 401.44085693]
[88.66030884 386.44250488]
[74.17239380 382.67572021]
[60.99911880 375.54656982]
[49.90830612 365.46560669]
[41.54755783 353.01565552]
[36.40648270 338.91793823]
[34.78799820 323.99047852]
[36.79050446 309.10052490]
[42.30190659 295.11419678]
[51.00586319 282.84603882]
[62.39997864 273.01174927]
[75.82476044 266.18624878]
[90.50180817 262.77014160]
[90.72513580 247.77180481]
[80.19906616 237.29624939]
[80.21189117 222.08261108]
[91.27099609 211.11293030]
[83.72404480 198.27186584]
[91.66594696 184.58842468]
[91.88927460 169.59008789]
[92.11260223 154.59175110]
[92.22427368 139.59216309]
[92.22427368 124.59216309]
[92.22427368 109.59216309]
[85.31479645 122.90603638]
[74.83081818 133.63386536]
[61.67929840 140.84756470]
[46.99798203 143.92309570]
[32.05694580 142.59440613]
[18.14874077 136.97640991]
[6.47656488 127.55514526]
[-1.94982195 115.14562988]
[-6.40145254 100.82141876]
[-6.49321651 85.82170105]
[-2.21717548 71.44409943]
[6.05675077 58.93241882]
[17.61278343 49.36904526]
[31.45121193 43.58130646]
[46.37487411 42.06990433]
[61.09272003 44.96558380]
[74.33151245 52.01784134]
[84.94596100 62.61658859]
[92.01781464 75.84492493]
[94.93511200 90.55495453]
[99.12212372 76.15117645]
[103.30913544 61.74739456]
[107.49614716 47.34361267]
[111.68315887 32.93983078]
[108.10549927 17.52844048]
[119.08787537 7.46679497]
[123.27488708 -6.93698692]
[127.46189880 -21.34076881]
[131.64891052 -35.74455261]
[135.83592224 -50.14833450]
[140.02293396 -64.55211639]
[132.66905212 -78.28376007]
[137.12045288 -92.83160400]
[150.25680542 -99.75778198]
[154.44381714 -114.16156006]
[158.63082886 -128.56533813]
[162.81784058 -142.96913147]
[158.01426697 -160.74572754]
[171.14639282 -172.38677979]
[167.33967590 -187.74319458]
[178.17103577 -197.96723938]
[182.14312744 -212.43176270]
[185.24723816 -227.10707092]
[179.64266968 -241.90231323]
[189.18234253 -253.34101868]
[191.40747070 -268.17507935]
[193.63258362 -283.00909424]
[188.02801514 -297.80435181]
[197.56768799 -309.24307251]
[199.79281616 -324.07711792]
[202.01792908 -338.91113281]
[188.31013489 -345.25726318]
[176.94642639 -355.20928955]
[168.84800720 -367.96044922]
[164.67137146 -382.47708130]
[164.75509644 -397.58236694]
[169.09240723 -412.05178833]
[177.33169556 -424.71240234]
[188.80502319 -434.53784180]
[202.58232117 -440.73159790]
[217.54672241 -442.79159546]
[232.48510742 -440.55084229]
[246.18652344 -434.19094849]
[257.54022217 -424.22750854]
[265.62582397 -411.46820068]
[269.78790283 -396.94738770]
[269.68899536 -381.84219360]
[265.33712769 -367.37713623]
[257.08514404 -354.72482300]
[245.60194397 -344.91091919]
[231.81842041 -338.73098755]
[216.85197449 -336.68603516]
[214.62686157 -321.85198975]
[212.40173340 -307.01794434]
[218.16545105 -293.28372192]
[208.46662903 -280.78399658]
[206.24150085 -265.94995117]
[204.01638794 -251.11590576]
[209.78010559 -237.38168335]
[200.08128357 -224.88195801]
[211.52195740 -234.58302307]
[226.47073364 -235.82165527]
[239.35206604 -228.13587952]
[245.36155701 -214.39230347]
[242.25779724 -199.71691895]
[231.19841003 -189.58331299]
[216.30828857 -187.77104187]
[203.14108276 -194.95605469]
[196.60765076 -208.45967102]
[192.63555908 -193.99514771]
[196.72637939 -179.67332458]
[185.61091614 -168.41468811]
[191.31954956 -157.74989319]
[188.12870789 -145.66674805]
[177.22161865 -138.78211975]
[173.03460693 -124.37833405]
[168.84759521 -109.97454834]
[164.66058350 -95.57077026]
[172.03689575 -82.68180084]
[167.99586487 -68.01467133]
[154.42671204 -60.36510468]
[150.23970032 -45.96132278]
[146.05268860 -31.55754089]
[141.86567688 -17.15375710]
[137.67866516 -2.74997592]
[133.49165344 11.65380573]
[137.36880493 26.03494072]
[126.08694458 37.12684250]
[121.89993286 51.53062439]
[117.71292114 65.93440247]
[113.52590942 80.33818817]
[109.33889771 94.74196625]
[107.22427368 109.59216309]
[107.22427368 124.59216309]
[107.22427368 139.59216309]
[110.35368347 148.17381287]
[107.11094666 154.81507874]
[106.88761902 169.81341553]
[106.66429138 184.81175232]
[114.19526672 198.72558594]
[106.26933289 211.33625793]
[116.99692535 222.63035583]
[116.55677795 237.83761597]
[105.72348022 247.99513245]
[105.50015259 262.99346924]
[120.06898499 266.84503174]
[133.28459167 274.06723022]
[144.38085938 284.23641968]
[152.71568298 296.75827026]
[157.80821228 310.90249634]
[159.36650085 325.84548950]
[157.30429077 340.71810913]
[151.74575806 354.65652466]
[143.01803589 366.85202026]
[131.63198853 376.59829712]
[118.25229645 383.33209229]
[103.65864563 386.66583252]
[103.43531799 401.66418457]
[103.21199036 416.66250610]
[113.93958282 427.95660400]
[113.49943542 443.16387939]
[102.66613770 453.32138062]
[102.44281006 468.31973267]
[102.21948242 483.31805420]
[102.33114624 498.31765747]
[102.77775574 513.31097412]
[103.22435760 528.30432129]
[103.67096710 543.29766846]
[104.11756897 558.29101562]
[107.50109863 566.77569580]
[104.45753479 573.51055908]
[104.68086243 588.50891113]
[119.14178467 592.95153809]
[131.52091980 601.64709473]
[140.60549927 613.74359131]
[145.50549316 628.05603027]
[145.74085999 643.18212891]
[141.28854370 657.64007568]
[132.58473206 670.01336670]
[120.48212433 679.08984375]
[106.16643524 683.98028564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 201]
[10 200]
[11 198]
[12 197]
[13 196]
[14 195]
[15 194]
[19 193]
[20 192]
[21 191]
[24 188]
[25 187]
[26 186]
[38 174]
[39 173]
[42 170]
[44 168]
[45 167]
[46 166]
[47 164]
[48 163]
[49 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[75 155]
[76 154]
[77 153]
[78 152]
[79 151]
[80 150]
[83 147]
[84 146]
[85 145]
[86 144]
[88 141]
[90 139]
[91 138]
[92 129]
[94 127]
[95 126]
[96 125]
[98 123]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
