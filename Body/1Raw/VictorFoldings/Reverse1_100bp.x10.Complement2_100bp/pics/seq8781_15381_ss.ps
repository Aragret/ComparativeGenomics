%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[96.39978027 472.42956543]
[89.88066864 486.01074219]
[80.50250244 497.80047607]
[68.73567963 507.20736694]
[55.17041779 513.75958252]
[40.48714447 517.12841797]
[25.42236900 517.14495850]
[10.73173237 513.80834961]
[-2.84788775 507.28598022]
[-14.63534355 497.90493774]
[-24.03938293 486.13586426]
[-30.58830070 472.56900024]
[-33.95360565 457.88491821]
[-33.96649933 442.82012939]
[-30.62633133 428.13031006]
[-24.10064507 414.55227661]
[-14.71676445 402.76708984]
[-2.94538283 393.36590576]
[10.62305355 386.82025146]
[25.30795670 383.45852661]
[40.37273788 383.44927979]
[43.69499969 368.82180786]
[47.01725769 354.19436646]
[50.33951569 339.56689453]
[53.66177750 324.93942261]
[56.76588821 310.26412964]
[59.65116119 295.54425049]
[57.85296249 288.37567139]
[62.69052124 280.62741089]
[65.79463196 265.95208740]
[68.89874268 251.27679443]
[72.00285339 236.60148621]
[74.99762726 221.90348816]
[77.88290405 207.18359375]
[80.76817322 192.46369934]
[83.65344238 177.74382019]
[85.87856293 162.90977478]
[87.43908691 147.99116516]
[88.99961090 133.07255554]
[82.62837219 119.60939789]
[91.75938416 106.68906403]
[92.42917633 91.70402527]
[92.20584869 76.70568848]
[91.98252106 61.70734787]
[91.75919342 46.70901108]
[81.95137787 31.12413406]
[91.09006500 16.14243317]
[90.64345551 1.14908302]
[90.19685364 -13.84426689]
[74.94527435 -16.81153297]
[60.73928070 -23.08758163]
[48.28650665 -32.35640335]
[38.20650101 -44.15300751]
[30.99990654 -57.88673401]
[27.02359009 -72.87082672]
[26.47298050 -88.35678864]
[29.37246323 -103.57176208]
[35.57431412 -117.75708771]
[44.76623154 -130.20616150]
[56.48704529 -140.29962158]
[70.14986420 -147.53613281]
[85.07147217 -151.55734253]
[84.40168762 -166.54237366]
[83.73190308 -181.52742004]
[83.06211853 -196.51245117]
[72.79463959 -211.79841614]
[81.48320770 -227.04556274]
[80.59039307 -242.01896667]
[79.69757843 -256.99237061]
[78.80476379 -271.96578979]
[77.91194916 -286.93917847]
[77.01912689 -301.91259766]
[65.48123932 -312.37753296]
[64.78909302 -327.57540894]
[74.83691406 -338.51052856]
[73.94409943 -353.48394775]
[73.05128479 -368.45733643]
[72.15846252 -383.43075562]
[57.64390182 -385.32287598]
[43.73071289 -389.85665894]
[30.89519501 -396.87524414]
[19.57647133 -406.13684082]
[10.16144180 -417.32287598]
[2.97157979 -430.04904175]
[-1.74805927 -443.87850952]
[-3.83718204 -458.33685303]
[-3.22570324 -472.92843628]
[0.06390390 -487.15325928]
[5.91743088 -500.52426147]
[14.13289642 -512.58380127]
[24.42751884 -522.91955566]
[36.44744873 -531.17828369]
[49.77992249 -537.07836914]
[63.96745682 -540.41894531]
[63.29766846 -555.40399170]
[62.62788391 -570.38903809]
[61.95809937 -585.37408447]
[47.76771545 -590.90155029]
[37.05698776 -601.72747803]
[31.68161774 -615.97613525]
[32.57292175 -631.17895508]
[39.57647324 -644.70190430]
[51.47886276 -654.20208740]
[66.21793365 -658.03344727]
[81.24005890 -655.53228760]
[93.94255066 -647.13189697]
[102.12463379 -634.28771973]
[104.36870575 -619.22503662]
[100.28598022 -604.55358887]
[90.58380127 -592.81530762]
[76.94313812 -586.04388428]
[77.61292267 -571.05883789]
[78.28270721 -556.07379150]
[78.95249176 -541.08874512]
[94.17507172 -538.83343506]
[108.67262268 -533.65881348]
[121.89075470 -525.76068115]
[133.32365417 -515.43933105]
[142.53340149 -503.08755493]
[149.16674805 -489.17614746]
[152.96868896 -474.23568726]
[153.79225159 -458.83645630]
[151.60417175 -443.56655884]
[146.48622131 -429.00949097]
[138.63223267 -415.72192383]
[128.34060669 -404.21231079]
[116.00314331 -394.92153931]
[102.09001160 -388.20590210]
[87.13187408 -384.32357788]
[88.02468872 -369.35015869]
[88.91750336 -354.37673950]
[89.81031799 -339.40335083]
[101.08637238 -329.73968506]
[102.20511627 -314.56726074]
[91.99253845 -302.80541992]
[92.88535309 -287.83200073]
[93.77816772 -272.85858154]
[94.67098236 -257.88519287]
[95.56379700 -242.91178894]
[96.45661163 -227.93838501]
[105.29294586 -219.67727661]
[106.15930939 -207.20999146]
[98.04715729 -197.18223572]
[98.71694183 -182.19720459]
[99.38672638 -167.21215820]
[100.05651093 -152.22712708]
[114.35514832 -149.81697083]
[127.84294128 -144.47700500]
[139.92640686 -136.43946838]
[150.07325745 -126.05536652]
[157.83592224 -113.77914429]
[162.87123108 -100.14878845]
[164.95556641 -85.76222992]
[163.99485779 -71.25116730]
[160.02879333 -57.25328445]
[153.22918701 -44.38423157]
[143.89253235 -33.21057510]
[132.42706299 -24.22483444]
[119.33492279 -17.82376862]
[105.19020081 -14.29087257]
[105.63681030 0.70247704]
[106.08341217 15.69582653]
[114.66986847 24.21635628]
[115.16464996 36.70390701]
[106.75753021 46.48568344]
[106.98085785 61.48402023]
[107.20418549 76.48236084]
[107.42751312 91.48069763]
[117.13335419 80.04405975]
[131.68011475 76.38462067]
[145.64224243 81.86726379]
[153.81216431 94.44709778]
[153.14274597 109.43215179]
[143.88363647 121.23337555]
[129.48825073 125.44920349]
[115.32573700 120.50723267]
[106.67799377 108.24958801]
[112.93760681 122.77982330]
[103.91821289 134.63308716]
[102.35768890 149.55168152]
[100.79716492 164.47029114]
[113.10129547 155.89076233]
[127.89186096 158.38858032]
[136.69616699 170.53288269]
[134.47068787 185.36688232]
[122.49029541 194.39295959]
[107.61789703 192.44059753]
[98.37333679 180.62908936]
[95.48806763 195.34898376]
[92.60279083 210.06886292]
[89.71752167 224.78875732]
[91.13779449 233.81210327]
[86.67815399 239.70559692]
[83.57404327 254.38090515]
[80.46993256 269.05621338]
[77.36582184 283.73150635]
[74.37104797 298.42950439]
[71.48577881 313.14941406]
[73.26365662 319.51733398]
[71.78125000 325.00366211]
[68.28923798 328.26168823]
[64.96697998 342.88916016]
[61.64471817 357.51660156]
[58.32246017 372.14407349]
[55.00019836 386.77154541]
[68.58297729 393.28735352]
[80.37497711 402.66265869]
[89.78472137 414.42721558]
[96.34020996 427.99087524]
[99.71263123 442.67333984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 205]
[22 204]
[23 203]
[24 202]
[25 201]
[26 198]
[27 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 191]
[34 190]
[35 189]
[36 188]
[37 181]
[38 180]
[39 179]
[41 177]
[42 168]
[43 167]
[44 166]
[45 165]
[47 162]
[48 161]
[49 160]
[62 146]
[63 145]
[64 144]
[65 143]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[75 132]
[76 131]
[77 130]
[78 129]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
