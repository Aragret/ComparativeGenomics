%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[38.43360138 673.92303467]
[31.80230141 687.47619629]
[21.88840675 698.85058594]
[9.36786556 707.27069092]
[-4.90565157 712.16241455]
[-19.95895195 713.19226074]
[-34.76567841 710.28997803]
[-48.31628036 703.65344238]
[-59.68685532 693.73516846]
[-68.10214233 681.21136475]
[-72.98837280 666.93597412]
[-74.01239014 651.88226318]
[-71.10438538 637.07666016]
[-64.46261597 623.52862549]
[-54.53993988 612.16186523]
[-42.01290131 603.75140381]
[-27.73561096 598.87072754]
[-12.68151855 597.85247803]
[-9.79624653 583.13262939]
[-6.91097355 568.41271973]
[-12.05567837 554.43481445]
[-1.80837965 542.38067627]
[-14.90039921 535.15844727]
[-25.13296700 524.22845459]
[-31.49479103 510.65249634]
[-33.35144043 495.75469971]
[-30.50860405 480.99255371]
[-23.23233032 467.81414795]
[-12.22419167 457.51611328]
[1.44634759 451.11621094]
[16.44582367 449.25256348]
[19.33109665 434.53268433]
[22.10670853 419.79171753]
[24.77250290 405.03048706]
[27.43829918 390.26928711]
[30.10409355 375.50805664]
[28.40483856 372.41857910]
[28.11757469 368.35256958]
[29.68498802 363.98260498]
[33.23262405 360.15359497]
[36.55488586 345.52612305]
[39.87714386 330.89868164]
[43.19940567 316.27120972]
[31.46371841 307.06582642]
[24.86146545 293.62261963]
[24.75024223 278.58438110]
[31.20566940 264.93347168]
[42.99577332 255.40034485]
[57.81573105 251.91749573]
[61.13798904 237.29003906]
[64.46025085 222.66258240]
[52.22702408 214.10235596]
[44.18135452 201.47648621]
[41.57554245 186.69221497]
[44.83733749 171.99703979]
[53.50009537 159.63700867]
[66.26924896 151.51347351]
[81.21569824 148.89060974]
[84.53795624 134.26315308]
[87.86021423 119.63569641]
[91.18247223 105.00823975]
[89.75488281 97.07511139]
[94.66461945 90.18849945]
[98.20429230 75.61212158]
[101.74396515 61.03575134]
[104.29979706 46.25509644]
[105.86032104 31.33649063]
[107.42084503 16.41788673]
[108.98136902 1.49928200]
[110.54188538 -13.41932297]
[112.10240936 -28.33792686]
[113.44064331 -43.27811432]
[114.55629730 -58.23656464]
[115.33761597 -73.21620178]
[108.01463318 -87.24062347]
[116.12744141 -99.73188782]
[116.57404327 -114.72523499]
[117.02065277 -129.71858215]
[117.46725464 -144.71192932]
[117.91386414 -159.70529175]
[118.36046600 -174.69863892]
[118.80707550 -189.69198608]
[119.25367737 -204.68533325]
[119.70028687 -219.67868042]
[106.74196625 -227.80451965]
[99.63770294 -241.23680115]
[100.20690918 -256.32131958]
[108.19666290 -269.01068115]
[121.37644196 -275.95034790]
[121.82305145 -290.94369507]
[122.26965332 -305.93704224]
[122.38132477 -320.93661499]
[122.15799713 -335.93496704]
[121.93466949 -350.93328857]
[113.99275970 -364.61672974]
[121.53971100 -377.45779419]
[121.31638336 -392.45614624]
[107.07331848 -397.70013428]
[95.68899536 -407.73812866]
[88.70304871 -421.21258545]
[87.06026459 -436.30117798]
[90.98282623 -450.96331787]
[99.94023132 -463.21603394]
[112.72106934 -471.40228271]
[127.59683990 -474.41491699]
[142.55570984 -471.84652710]
[155.57461548 -464.04446411]
[164.89286804 -452.06384277]
[169.25022888 -437.52502441]
[168.05741882 -422.39419556]
[161.47575378 -408.71771240]
[150.39533997 -398.34521484]
[136.31472778 -392.67947388]
[136.53805542 -377.68112183]
[144.46398926 -365.07046509]
[136.93299866 -351.15661621]
[137.15632629 -336.15829468]
[137.37965393 -321.15994263]
[139.64144897 -318.45501709]
[140.70545959 -314.52017212]
[140.00787354 -309.93032837]
[137.26300049 -305.49041748]
[136.81640625 -290.49707031]
[136.36979675 -275.50372314]
[149.11315918 -267.79190063]
[156.33345032 -254.64947510]
[156.00381470 -239.55783081]
[148.11264038 -226.57221985]
[134.69363403 -219.23208618]
[134.24702454 -204.23872375]
[133.80043030 -189.24537659]
[133.35382080 -174.25202942]
[132.90721130 -159.25868225]
[132.46060181 -144.26533508]
[132.01399231 -129.27198792]
[131.56739807 -114.27863312]
[131.12078857 -99.28527832]
[138.47572327 -86.33328247]
[130.33096313 -72.76959991]
[132.46972656 -69.96636963]
[133.35696411 -65.98794556]
[132.45513916 -61.43383026]
[129.51475525 -57.12091827]
[128.39909363 -42.16246414]
[130.78152466 -38.02324677]
[130.58900452 -32.34346390]
[127.02101898 -26.77740479]
[125.46049500 -11.85879993]
[123.89997101 3.05980492]
[122.33944702 17.97841072]
[120.77892303 32.89701462]
[119.21839905 47.81562042]
[129.70726013 37.09255981]
[144.30421448 33.63875961]
[158.48625183 38.52441788]
[167.85891724 50.23566055]
[169.51799011 65.14362335]
[162.94937134 78.62892914]
[150.18843079 86.51299286]
[135.18928528 86.35285950]
[122.59958649 78.19814301]
[116.32034302 64.57542419]
[112.78067017 79.15179443]
[109.24099731 93.72817230]
[105.80993652 108.33049774]
[102.48767090 122.95795441]
[99.16541290 137.58541870]
[95.84315491 152.21287537]
[108.19021606 161.03477478]
[116.19748688 173.87715149]
[118.67122650 188.76654053]
[115.26518250 203.42897034]
[106.52871704 215.63711548]
[93.81845856 223.54879761]
[79.08770752 225.98483276]
[75.76544952 240.61230469]
[72.44319153 255.23976135]
[84.30468750 264.78262329]
[90.82007599 278.47338867]
[90.74541473 293.57351685]
[84.14909363 307.08831787]
[72.38757324 316.36065674]
[57.82686615 319.59347534]
[54.50460434 334.22094727]
[51.18234634 348.84838867]
[47.86008453 363.47586060]
[44.86531067 378.17385864]
[42.19951630 392.93508911]
[39.53372192 407.69628906]
[36.86792374 422.45751953]
[38.42238998 431.45870972]
[34.05098724 437.41793823]
[31.16571617 452.13784790]
[44.35169983 459.52615356]
[54.59455490 470.61337280]
[60.90040970 484.30514526]
[62.66314697 499.25534058]
[59.72262573 513.99835205]
[52.37916946 527.09277344]
[41.36291504 537.26245117]
[27.76125908 543.52062988]
[12.91151142 545.26593018]
[17.84984207 560.29669189]
[7.80891800 571.29797363]
[4.92364502 586.01788330]
[2.03837252 600.73779297]
[15.59409618 607.36383057]
[26.97232819 617.27337646]
[35.39728546 629.79064941]
[40.29453659 644.06225586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 206]
[19 205]
[20 204]
[22 202]
[31 193]
[32 192]
[33 190]
[34 189]
[35 188]
[36 187]
[40 186]
[41 185]
[42 184]
[43 183]
[49 177]
[50 176]
[51 175]
[58 168]
[59 167]
[60 166]
[61 165]
[63 164]
[64 163]
[65 162]
[66 152]
[67 151]
[68 150]
[69 149]
[70 148]
[71 147]
[72 144]
[73 143]
[74 139]
[76 137]
[77 136]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[89 124]
[90 123]
[91 122]
[92 118]
[93 117]
[94 116]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
