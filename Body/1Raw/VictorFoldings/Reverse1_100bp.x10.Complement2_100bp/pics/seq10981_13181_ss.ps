%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[63.92319107 727.32159424]
[54.55919647 715.56097412]
[47.20311737 702.45050049]
[42.04549408 688.32977295]
[39.21991730 673.56451416]
[38.79958344 658.53723145]
[40.79537201 643.63714600]
[45.15559387 629.25018311]
[51.76730347 615.74902344]
[60.45924377 603.48333740]
[71.00627899 592.77093506]
[83.13520050 583.88916016]
[96.53186035 577.06817627]
[110.84923553 572.48461914]
[108.62411499 557.65063477]
[106.39900208 542.81658936]
[96.85932159 531.37786865]
[102.46389008 516.58258057]
[100.23876953 501.74856567]
[97.90328217 486.93148804]
[95.45755768 472.13223267]
[93.01182556 457.33294678]
[90.56610107 442.53369141]
[88.12037659 427.73440552]
[81.79549408 441.33572388]
[69.93048859 450.51296997]
[55.17602539 453.21591187]
[40.82829285 448.84066772]
[30.09260559 438.36474609]
[25.36734962 424.12844849]
[27.70815659 409.31222534]
[36.59208298 397.22604370]
[50.03444290 390.57000732]
[65.03217316 390.83105469]
[78.23474121 397.95089722]
[86.69267273 410.33895874]
[86.69267273 395.33895874]
[86.69267273 380.33895874]
[86.58100128 365.33935547]
[86.35767365 350.34103394]
[86.02269745 335.34478760]
[85.57609558 320.35140991]
[82.77597809 316.48251343]
[82.37654877 310.81353760]
[85.34611511 304.90649414]
[85.34611511 289.90649414]
[85.34611511 274.90649414]
[85.34611511 259.90649414]
[85.34611511 244.90647888]
[85.34611511 229.90647888]
[82.66242981 225.95591736]
[82.43196869 220.27755737]
[85.57609558 214.46153259]
[86.02269745 199.46818542]
[86.46930695 184.47483826]
[86.91590881 169.48149109]
[87.36251831 154.48814392]
[74.82128143 162.71719360]
[60.52135086 158.18817139]
[55.00410843 144.23968506]
[62.33665848 131.15405273]
[77.11371613 128.57751465]
[88.44152069 138.40788269]
[90.00204468 123.48927307]
[91.56256866 108.57066345]
[92.90080261 93.63047791]
[94.01644897 78.67202759]
[95.13209534 63.71357346]
[85.09576416 51.80098724]
[86.44027710 36.64688110]
[97.85896301 27.15218163]
[98.97460938 12.19372940]
[100.09026337 -2.76472425]
[101.20590973 -17.72317696]
[98.72344208 -26.51380730]
[102.45115662 -32.89549637]
[103.78939056 -47.83568192]
[105.12762451 -62.77586746]
[106.46585846 -77.71604919]
[96.60799408 -89.77674866]
[98.17798615 -104.90915680]
[109.73676300 -114.23278809]
[110.74102020 -129.19914246]
[111.41080475 -144.18417358]
[112.08058929 -159.16921997]
[109.33749390 -167.88203430]
[112.87355042 -174.37188721]
[113.76636505 -189.34529114]
[106.86418152 -203.58152771]
[115.34530640 -215.82569885]
[100.05501556 -227.33840942]
[94.83414459 -245.59634399]
[101.61833954 -263.17199707]
[117.49735260 -273.02847290]
[109.96637726 -286.94229126]
[117.89231110 -299.55294800]
[118.11563873 -314.55130005]
[118.33896637 -329.54965210]
[118.56229401 -344.54797363]
[104.72606659 -350.91027832]
[94.67869568 -362.35449219]
[90.16095734 -376.89785767]
[91.95556641 -392.02066040]
[99.75160217 -405.10278320]
[112.19834900 -413.87765503]
[127.13933563 -416.82498169]
[141.98594666 -413.43411255]
[154.16592407 -404.29254150]
[161.56900024 -390.98413086]
[162.91255188 -375.81457520]
[157.96380615 -361.41217041]
[147.58015442 -350.27215576]
[133.56062317 -344.32464600]
[133.33729553 -329.32632446]
[133.11396790 -314.32797241]
[132.89064026 -299.32962036]
[140.43759155 -286.48858643]
[132.49569702 -272.80514526]
[142.52536011 -267.92083740]
[150.04231262 -259.60858154]
[153.93215942 -249.04354858]
[153.59700012 -237.73883057]
[149.04699707 -227.32876587]
[140.90438843 -219.33261108]
[130.31871033 -214.93287659]
[137.28475952 -201.76763916]
[128.73977661 -188.45246887]
[127.84695435 -173.47906494]
[127.06562805 -158.49943542]
[126.39584351 -143.51438904]
[125.72605896 -128.52935791]
[127.82283783 -125.69459534]
[128.65075684 -121.70339966]
[127.68122101 -117.16321564]
[124.67694855 -112.89455414]
[134.39472961 -101.66511536]
[133.25039673 -86.49458313]
[121.40604401 -76.37781525]
[120.06780243 -61.43763351]
[118.72956848 -46.49744797]
[117.39133453 -31.55726242]
[116.16436005 -16.60752869]
[115.04871368 -1.64907563]
[113.93306732 13.30937767]
[112.81741333 28.26783180]
[122.70130920 39.35134125]
[121.78297424 54.53723526]
[110.09055328 64.82922363]
[108.97490692 79.78767395]
[107.85925293 94.74613190]
[110.29347229 99.39247894]
[109.95115662 105.07192230]
[106.48117065 110.13118744]
[104.92064667 125.04979706]
[103.36012268 139.96839905]
[102.35586548 154.93473816]
[101.90926361 169.92808533]
[101.46265411 184.92144775]
[101.01604462 199.91479492]
[100.56944275 214.90814209]
[100.34611511 229.90647888]
[100.34611511 244.90647888]
[100.34611511 259.90649414]
[100.34611511 274.90649414]
[100.34611511 289.90649414]
[100.34611511 304.90649414]
[100.56944275 319.90481567]
[101.01604462 334.89816284]
[104.39957428 343.38284302]
[101.35601044 350.11770630]
[101.57933807 365.11602783]
[104.83616638 373.65014648]
[101.69267273 380.33895874]
[101.69267273 395.33895874]
[101.69267273 410.33895874]
[102.91964722 425.28869629]
[105.36537170 440.08795166]
[107.81109619 454.88723755]
[110.25682831 469.68649292]
[112.70255280 484.48577881]
[117.18930817 492.44232178]
[115.07281494 499.52343750]
[117.29792786 514.35748291]
[126.99676514 526.85723877]
[121.23303986 540.59143066]
[123.45816040 555.42547607]
[125.68327332 570.25952148]
[140.71536255 570.44061279]
[155.52369690 573.03088379]
[169.72473145 577.96307373]
[182.95060730 585.10955811]
[194.85876465 594.28521729]
[205.14073181 605.25231934]
[213.53018188 617.72680664]
[219.80982971 631.38555908]
[223.81700134 645.87481689]
[225.44789124 660.81927490]
[224.66027832 675.83178711]
[221.47454834 690.52355957]
[215.97323608 704.51397705]
[208.29881287 717.44067383]
[198.65007019 728.96881104]
[187.27696228 738.79980469]
[174.47404480 746.67895508]
[160.57296753 752.40228271]
[145.93379211 755.82141113]
[130.93569946 756.84790039]
[115.96719360 755.45501709]
[101.41599274 751.67901611]
[87.65899658 745.61755371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 187]
[15 186]
[16 185]
[18 183]
[19 182]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[36 175]
[37 174]
[38 173]
[39 171]
[40 170]
[41 168]
[42 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[63 155]
[64 154]
[65 153]
[66 150]
[67 149]
[68 148]
[71 145]
[72 144]
[73 143]
[74 142]
[76 141]
[77 140]
[78 139]
[79 138]
[82 135]
[83 131]
[84 130]
[85 129]
[87 128]
[88 127]
[90 125]
[94 118]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
