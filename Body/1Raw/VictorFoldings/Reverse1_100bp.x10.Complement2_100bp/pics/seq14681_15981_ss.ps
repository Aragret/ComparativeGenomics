%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[77.21274567 525.59234619]
[62.89705276 520.70190430]
[50.79445267 511.62545776]
[42.09063721 499.25213623]
[37.63831711 484.79418945]
[37.87368774 469.66806030]
[42.77368546 455.35565186]
[51.85826111 443.25912476]
[64.23739624 434.56362915]
[78.69831848 430.12097168]
[78.92164612 415.12265015]
[79.14497375 400.12429810]
[79.36830139 385.12597656]
[71.82135010 372.28491211]
[79.76325226 358.60147095]
[79.98657990 343.60311890]
[80.20990753 328.60479736]
[67.72621155 324.13815308]
[57.20822906 316.02828979]
[49.68811035 305.05325317]
[45.90925598 292.27316284]
[46.25286865 278.92773438]
[50.69954681 266.31610107]
[58.82979202 255.67018127]
[69.86356354 248.03453064]
[82.73509216 244.16377258]
[83.40487671 229.17872620]
[84.07466125 214.19369507]
[84.74444580 199.20864868]
[85.41423035 184.22361755]
[72.75186920 192.26502991]
[58.52095413 187.52360535]
[53.21199799 173.49453735]
[60.73855972 160.51951599]
[75.55233765 158.16326904]
[86.73252869 168.16119385]
[88.51499939 153.26748657]
[90.29746246 138.37376404]
[92.07992554 123.48004913]
[92.74971008 108.49501038]
[92.19150543 93.50539398]
[91.52172089 78.52035522]
[90.85192871 63.53532028]
[79.56393433 59.40866089]
[70.35511017 51.73955917]
[64.28916931 41.44423676]
[62.05650711 29.74044609]
[63.89572906 18.00344276]
[69.56833649 7.60438442]
[78.38941193 -0.24984604]
[89.31019592 -4.65669823]
[89.31019592 -19.65669823]
[89.31019592 -34.65669632]
[89.31019592 -49.65669632]
[89.31019592 -64.65670013]
[79.73551178 -80.38587189]
[89.09623718 -95.22985077]
[88.87290955 -110.22818756]
[88.64958191 -125.22652435]
[88.42625427 -140.22486877]
[80.48435211 -153.90830994]
[88.03130341 -166.74937439]
[87.80797577 -181.74771118]
[75.03446198 -193.69996643]
[74.86071014 -210.85470581]
[86.90585327 -222.59153748]
[86.45925140 -237.58488464]
[86.01264191 -252.57823181]
[85.56604004 -267.57159424]
[70.58116913 -268.43356323]
[55.72845078 -270.59832764]
[41.12092209 -274.04934692]
[26.86976242 -278.76037598]
[13.08342934 -284.69555664]
[-0.13315248 -291.80972290]
[-12.67939472 -300.04870605]
[-24.45981026 -309.34985352]
[-35.38474274 -319.64233398]
[-45.37104416 -330.84783936]
[-54.34271240 -342.88104248]
[-62.23146439 -355.65042114]
[-68.97726440 -369.05877686]
[-74.52877045 -383.00402832]
[-78.84372711 -397.38006592]
[-81.88930511 -412.07748413]
[-83.64231110 -426.98440552]
[-84.08941650 -441.98736572]
[-83.22721100 -456.97222900]
[-81.06225586 -471.82492065]
[-77.61103821 -486.43240356]
[-72.89981079 -500.68350220]
[-66.96443176 -514.46972656]
[-59.85008621 -527.68621826]
[-51.61090469 -540.23236084]
[-42.30960464 -552.01263428]
[-32.01696777 -562.93743896]
[-20.81133080 -572.92358398]
[-8.77797794 -581.89508057]
[3.99150753 -589.78363037]
[17.39994049 -596.52923584]
[31.34527397 -602.08056641]
[45.72137451 -606.39532471]
[60.41882706 -609.44067383]
[75.32577515 -611.19348145]
[90.32875824 -611.64038086]
[105.31360626 -610.77795410]
[120.16625977 -608.61279297]
[134.77369690 -605.16137695]
[149.02471924 -600.44995117]
[162.81088257 -594.51440430]
[176.02726746 -587.39984131]
[188.57328796 -579.16052246]
[200.35343933 -569.85900879]
[211.27807617 -559.56622314]
[221.26406860 -548.36047363]
[230.23539734 -536.32696533]
[238.12379456 -523.55737305]
[244.86921692 -510.14886475]
[250.42033386 -496.20346069]
[254.73489380 -481.82730103]
[257.78005981 -467.12979126]
[259.53265381 -452.22283936]
[259.97930908 -437.21981812]
[259.11669922 -422.23498535]
[256.95132446 -407.38238525]
[253.49969482 -392.77499390]
[248.78807068 -378.52401733]
[242.85231018 -364.73794556]
[235.73759460 -351.52166748]
[227.49806213 -338.97576904]
[218.19642639 -327.19573975]
[207.90347290 -316.27124023]
[196.69757080 -306.28540039]
[184.66395569 -297.31423950]
[171.89425659 -289.42602539]
[158.48562622 -282.68078613]
[144.54014587 -277.12988281]
[130.16392517 -272.81552124]
[115.46638489 -269.77056885]
[100.55938721 -268.01818848]
[101.00599670 -253.02484131]
[101.45259857 -238.03147888]
[101.89920807 -223.03813171]
[112.42169952 -215.60128784]
[116.80498505 -203.27778625]
[113.23767853 -190.49166870]
[102.80631256 -181.97103882]
[103.02964020 -166.97270203]
[110.95557404 -154.36203003]
[103.42459106 -140.44819641]
[103.64791870 -125.44985199]
[103.87124634 -110.45151520]
[104.09457397 -95.45317841]
[112.55321503 -86.80575562]
[112.86202240 -74.31221771]
[104.31019592 -64.65670013]
[104.31019592 -49.65669632]
[104.31019592 -34.65669632]
[104.31019592 -19.65669823]
[104.31019592 -4.65669823]
[120.40320587 3.67310309]
[130.08531189 19.09126091]
[130.60282898 37.37518692]
[121.72609711 53.46539307]
[105.83696747 62.86553574]
[106.50675964 77.85057068]
[107.17654419 92.83560944]
[110.65391541 100.10750580]
[107.74306488 108.04840088]
[116.22789001 95.67877197]
[129.71784973 89.11973572]
[144.68670654 90.08582306]
[157.22163391 98.32448578]
[164.04603577 111.68215942]
[163.37602234 126.66719055]
[155.38673401 139.36251831]
[142.16656494 146.44961548]
[127.17121887 146.07594299]
[114.32045746 138.33915710]
[106.97364807 125.26251221]
[105.19117737 140.15623474]
[103.40871429 155.04994202]
[101.62625122 169.94366455]
[100.39926910 184.89340210]
[99.72948456 199.87843323]
[99.05970001 214.86347961]
[98.38991547 229.84851074]
[97.72013092 244.83355713]
[113.11138153 251.74450684]
[124.64245605 264.01019287]
[130.56497192 279.72958374]
[129.99679565 296.48126221]
[123.05333710 311.69635010]
[110.82546234 323.05242920]
[95.20825195 328.82812500]
[94.98492432 343.82644653]
[94.76159668 358.82479858]
[102.29257202 372.73864746]
[94.36663818 385.34930420]
[94.14331055 400.34762573]
[93.91998291 415.34597778]
[93.69665527 430.34429932]
[108.01889038 435.21551514]
[120.13364410 444.27575684]
[128.85403442 456.63739014]
[133.32572937 471.08935547]
[133.11062622 486.21578979]
[128.22981262 500.53475952]
[119.16146088 512.64343262]
[106.79398346 521.35552979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 202]
[11 201]
[12 200]
[13 199]
[15 197]
[16 196]
[17 195]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 169]
[41 167]
[42 166]
[43 165]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[57 153]
[58 152]
[59 151]
[60 150]
[62 148]
[63 147]
[66 143]
[67 142]
[68 141]
[69 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
