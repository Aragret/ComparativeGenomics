%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[84.64578247 536.59771729]
[77.32506561 523.47570801]
[71.94639587 509.44537354]
[68.61928558 494.79232788]
[67.41146088 479.81494141]
[68.34752655 464.81814575]
[71.40840912 450.10720825]
[76.53180695 435.98162842]
[83.61340332 422.72903442]
[92.50903320 410.61917114]
[103.03759003 399.89862061]
[114.98473358 390.78561401]
[128.10722351 383.46569824]
[142.13789368 378.08792114]
[138.81564331 363.46044922]
[135.49337769 348.83297729]
[132.17112732 334.20553589]
[127.62422943 328.37908936]
[128.91000366 319.33560181]
[125.80589294 304.66027832]
[121.34625244 298.76678467]
[122.76653290 289.74343872]
[119.88125610 275.02355957]
[116.99598694 260.30368042]
[114.11071014 245.58377075]
[111.22544098 230.86387634]
[107.83197784 227.50331116]
[106.51358032 221.97531128]
[108.48026276 215.66311646]
[106.03453827 200.86384583]
[103.58881378 186.06457520]
[100.95079041 183.72509766]
[99.31486511 179.99162292]
[99.32385254 175.34907532]
[101.37973785 170.55111694]
[99.59727478 155.65740967]
[97.81481171 140.76368713]
[95.92151642 125.88365173]
[93.91750336 111.01811981]
[91.58201599 96.20105743]
[88.91622162 81.43983459]
[86.25042725 66.67861938]
[83.58463287 51.91740417]
[71.70909882 45.56237793]
[65.74898529 33.70120239]
[67.67996979 20.76468849]
[76.57547760 11.44270039]
[74.12974548 -3.35657072]
[71.68402100 -18.15584183]
[68.25296021 -32.75816345]
[63.85196304 -47.09801102]
[50.08372116 -59.32572937]
[54.67725754 -76.26285553]
[50.06324768 -90.53559113]
[45.44923782 -104.80832672]
[40.83523178 -119.08105469]
[29.72799301 -125.63789368]
[26.17880630 -137.62066650]
[31.56738281 -148.45071411]
[27.16638374 -162.79055786]
[22.76538658 -177.13040161]
[18.19338799 -181.90621948]
[16.91195107 -187.44291687]
[18.45369911 -191.96308899]
[14.48160267 -206.42761230]
[0.30386636 -207.78515625]
[-12.53199291 -213.88777161]
[-22.49287796 -223.98399353]
[-28.39679527 -236.84675598]
[-29.55309105 -250.92245483]
[-25.84318924 -264.51864624]
[-17.73240089 -276.00747681]
[-6.21165466 -284.02069092]
[-9.96795559 -298.54275513]
[-13.72425652 -313.06481934]
[-17.48055649 -327.58688354]
[-21.23685837 -342.10894775]
[-24.99315834 -356.63101196]
[-28.74945831 -371.15304565]
[-32.50576019 -385.67510986]
[-36.26206207 -400.19717407]
[-40.01836014 -414.71923828]
[-55.05170822 -413.95541382]
[-69.93102264 -416.23379517]
[-84.04700470 -421.46102905]
[-96.82161713 -429.42306519]
[-107.73174286 -439.79388428]
[-116.33061981 -452.14880371]
[-122.26613617 -465.98190308]
[-125.29523468 -480.72671509]
[-125.29386902 -495.77944946]
[-122.26210022 -510.52371216]
[-116.32407379 -524.35571289]
[-107.72294617 -536.70910645]
[-96.81093597 -547.07794189]
[-84.03488159 -555.03765869]
[-69.91795349 -560.26232910]
[-55.03822708 -562.53802490]
[-40.00502014 -561.77148438]
[-25.43393326 -557.99414062]
[-11.92164326 -551.36065674]
[-0.02147044 -542.14270020]
[9.77928066 -530.71771240]
[17.07927513 -517.55352783]
[21.57958412 -503.18930054]
[23.09592247 -488.21310425]
[21.56619453 -473.23831177]
[17.05304527 -458.87808228]
[9.74128437 -445.72045898]
[-0.06967763 -434.30422974]
[-11.97808647 -425.09692383]
[-25.49630165 -418.47552490]
[-21.74000168 -403.95349121]
[-17.98369980 -389.43142700]
[-14.22739983 -374.90936279]
[-10.47109890 -360.38729858]
[-6.71479845 -345.86523438]
[-2.95849752 -331.34317017]
[0.79780304 -316.82113647]
[4.55410385 -302.29907227]
[8.31040478 -287.77700806]
[24.03527451 -285.81372070]
[37.83628082 -277.94726562]
[47.58549881 -265.35647583]
[51.76668930 -249.95123291]
[49.71106720 -234.08270264]
[41.70406723 -220.18455505]
[28.94612694 -210.39971924]
[32.91822052 -195.93519592]
[37.10523224 -181.53140259]
[41.50623322 -167.19155884]
[45.90723038 -152.85171509]
[59.38012314 -141.60679626]
[55.10796356 -123.69506836]
[59.72197342 -109.42233276]
[64.33598328 -95.14959717]
[68.94998932 -80.87686920]
[79.57351685 -75.09178162]
[83.53433990 -63.23869324]
[78.19181061 -51.49900818]
[82.59280396 -37.15916061]
[88.04992676 -51.13127136]
[100.13184357 -60.02099609]
[115.09485626 -61.07375336]
[128.30250549 -53.96334076]
[135.66226196 -40.89299011]
[134.89361572 -25.91269684]
[126.23474884 -13.66426563]
[112.36870575 -7.94300747]
[97.59202576 -10.52171612]
[86.48329163 -20.60156822]
[88.92901611 -5.80229807]
[91.37474823 8.99697304]
[105.45256042 18.19772911]
[108.58179474 35.06553268]
[98.34584808 49.25160599]
[101.01164246 64.01282501]
[103.67743683 78.77404022]
[106.34323120 93.53526306]
[109.16778564 96.16095734]
[110.82125854 100.01892090]
[110.77925873 104.55821991]
[108.78302765 109.01410675]
[110.78704834 123.87963867]
[115.03491211 131.96626282]
[112.70852661 138.98121643]
[114.49098969 153.87493896]
[116.27346039 168.76866150]
[118.38808441 183.61885071]
[120.83380890 198.41812134]
[123.27953339 213.21739197]
[125.94533539 227.97860718]
[128.83061218 242.69850159]
[131.71588135 257.41839600]
[134.60115051 272.13827515]
[137.48641968 286.85818481]
[140.48120117 301.55618286]
[143.58531189 316.23147583]
[146.79858398 330.88327026]
[150.12083435 345.51074219]
[153.44309998 360.13818359]
[156.76536560 374.76565552]
[171.74252319 373.55505371]
[186.73950195 374.48834229]
[201.45101929 377.54647827]
[215.57752991 382.66726685]
[228.83145142 389.74639893]
[240.94296265 398.63977051]
[251.66546631 409.16635132]
[260.78067017 421.11178589]
[268.10302734 434.23291016]
[273.48342896 448.26260376]
[276.81234741 462.91522217]
[278.02203369 477.89245605]
[277.08782959 492.88937378]
[274.02874756 507.60070801]
[268.90710449 521.72686768]
[261.82714844 534.98040771]
[252.93302917 547.09130859]
[242.40579224 557.81317139]
[230.45977783 566.92767334]
[217.33819580 574.24920654]
[203.30818176 579.62872314]
[188.65536499 582.95672607]
[173.67807007 584.16552734]
[158.68118286 583.23034668]
[143.97006226 580.17041016]
[129.84417725 575.04785156]
[116.59112549 567.96710205]
[104.48072052 559.07220459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 182]
[15 181]
[16 180]
[17 179]
[19 178]
[20 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[29 171]
[30 170]
[31 169]
[35 168]
[36 167]
[37 166]
[38 164]
[39 163]
[40 159]
[41 158]
[42 157]
[43 156]
[47 153]
[48 152]
[49 151]
[50 141]
[51 140]
[53 137]
[54 136]
[55 135]
[56 134]
[59 132]
[60 131]
[61 130]
[64 129]
[65 128]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
