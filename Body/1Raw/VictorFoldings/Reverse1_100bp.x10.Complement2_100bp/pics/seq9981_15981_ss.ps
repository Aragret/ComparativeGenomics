%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[74.34989929 339.15020752]
[76.55303192 354.02285767]
[76.27799988 369.05529785]
[73.53231049 383.83743286]
[68.39086914 397.96594238]
[60.99394226 411.05545044]
[51.54331589 422.74887085]
[40.29681015 432.72714233]
[27.56124306 440.71807861]
[13.68404770 446.50369263]
[-0.95619655 449.92614746]
[-15.96009254 450.89205933]
[-30.91832161 449.37506104]
[-45.42281342 445.41659546]
[-59.07787704 439.12460327]
[-71.51098633 430.67074585]
[-82.38296509 420.28567505]
[-91.39721680 408.25265503]
[-98.30781555 394.89999390]
[-102.92624664 380.59197998]
[-105.12651062 365.71887207]
[-104.84858704 350.68649292]
[-102.10005188 335.90490723]
[-96.95588684 321.77737427]
[-89.55643463 308.68927002]
[-80.10355377 296.99771118]
[-68.85513306 287.02160645]
[-56.11802292 279.03311157]
[-42.23971558 273.25015259]
[-27.59881210 269.83053589]
[-12.59473038 268.86752319]
[2.36320710 270.38739014]
[16.86693764 274.34866333]
[23.14429855 260.72534180]
[29.42165756 247.10202026]
[35.69902039 233.47869873]
[41.67058182 219.71859741]
[47.33337021 205.82858276]
[52.99615479 191.93855286]
[48.59527588 180.67094421]
[53.19935989 169.05259705]
[64.84727478 163.51284790]
[70.71623993 149.70866394]
[76.58519745 135.90449524]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.74166107 72.03072357]
[109.61062622 58.22654724]
[95.73268890 63.91889954]
[81.40486908 59.47889709]
[73.17765045 46.93645477]
[74.81241608 32.02580261]
[85.56175995 21.56389046]
[100.51123810 20.33376884]
[112.82614136 28.89782715]
[116.87613678 43.34254456]
[124.14936066 30.22385216]
[131.42259216 17.10515785]
[138.69581604 3.98646307]
[124.01573181 7.06786251]
[111.38159943 -1.01784599]
[108.03083038 -15.63880062]
[115.88288879 -28.41945457]
[130.43977356 -32.03847122]
[143.36262512 -24.42270851]
[147.24877930 -9.93576813]
[155.66339111 -22.35326385]
[164.07801819 -34.77075958]
[172.49263000 -47.18825531]
[180.90725708 -59.60575104]
[189.32186890 -72.02324677]
[177.42108154 -81.16130066]
[166.08253479 -90.98832703]
[155.34605408 -101.46978760]
[145.24937439 -112.56888580]
[135.82794189 -124.24662018]
[127.11485291 -136.46199036]
[119.14070892 -149.17205811]
[111.93353271 -162.33221436]
[105.51863098 -175.89620972]
[99.91853333 -189.81640625]
[95.15292358 -204.04391479]
[91.23852539 -218.52874756]
[88.18909454 -233.22003174]
[86.01534271 -248.06616211]
[84.72490692 -263.01501465]
[84.32231903 -278.01403809]
[84.80899048 -293.01055908]
[86.18321991 -307.95193481]
[88.44017029 -322.78564453]
[91.57191467 -337.45962524]
[95.56745911 -351.92227173]
[100.41276550 -366.12283325]
[106.09081268 -380.01141357]
[112.58166504 -393.53924561]
[119.86251068 -406.65878296]
[127.90777588 -419.32394409]
[136.68920898 -431.49026489]
[146.17596436 -443.11499023]
[156.33471680 -454.15731812]
[167.12979126 -464.57843018]
[178.52325439 -474.34173584]
[190.47509766 -483.41290283]
[202.94332886 -491.76013184]
[215.88415527 -499.35406494]
[229.25212097 -506.16806030]
[243.00028992 -512.17810059]
[257.08035278 -517.36322021]
[271.44284058 -521.70507812]
[286.03732300 -525.18841553]
[300.81253052 -527.80108643]
[315.71658325 -529.53387451]
[330.69708252 -530.38073730]
[345.70147705 -530.33856201]
[360.67700195 -529.40765381]
[375.57107544 -527.59118652]
[390.33139038 -524.89562988]
[404.90606689 -521.33032227]
[419.24395752 -516.90789795]
[433.29467773 -511.64385986]
[447.00888062 -505.55667114]
[460.33837891 -498.66775513]
[473.23635864 -491.00125122]
[485.65753174 -482.58416748]
[497.55822754 -473.44598389]
[508.89669800 -463.61886597]
[519.63305664 -453.13732910]
[529.72967529 -442.03814697]
[539.15100098 -430.36032104]
[547.86401367 -418.14486694]
[555.83801270 -405.43472290]
[563.04504395 -392.27450562]
[569.45983887 -378.71044922]
[575.05981445 -364.79022217]
[579.82531738 -350.56268311]
[583.73956299 -336.07778931]
[586.78887939 -321.38647461]
[588.96252441 -306.54034424]
[590.25280762 -291.59149170]
[590.65527344 -276.59243774]
[590.16845703 -261.59591675]
[588.79412842 -246.65455627]
[586.53704834 -231.82086182]
[583.40515137 -217.14692688]
[579.40948486 -202.68431091]
[574.56408691 -188.48377991]
[568.88586426 -174.59524536]
[562.39489746 -161.06748962]
[555.11395264 -147.94801331]
[547.06860352 -135.28291321]
[538.28704834 -123.11667633]
[528.80017090 -111.49201965]
[518.64135742 -100.44979858]
[507.84616089 -90.02878571]
[496.45263672 -80.26558685]
[484.50070190 -71.19449615]
[472.03240967 -62.84738159]
[459.09149170 -55.25355911]
[445.72348022 -48.43970108]
[431.97525024 -42.42974472]
[417.89514160 -37.24479675]
[403.53262329 -32.90307236]
[388.93811035 -29.41981888]
[374.16287231 -26.80727577]
[359.25881958 -25.07461739]
[344.27828979 -24.22793007]
[329.27392578 -24.27018929]
[314.29840088 -25.20124245]
[299.40432739 -27.01782417]
[284.64404297 -29.71355057]
[270.06939697 -33.27895355]
[255.73153687 -37.70150757]
[241.68086243 -42.96568298]
[227.96672058 -49.05298615]
[214.63728333 -55.94203186]
[201.73936462 -63.60862732]
[193.32475281 -51.19113159]
[184.91012573 -38.77363586]
[176.49551392 -26.35614014]
[168.08088684 -13.93864536]
[159.66627502 -1.52114987]
[151.81451416 11.25969219]
[144.54129028 24.37838745]
[137.26805115 37.49708176]
[129.99482727 50.61577606]
[123.41480255 64.09551239]
[117.54583740 77.89968872]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.38937378 141.77345276]
[84.52041626 155.57762146]
[78.65145111 169.38180542]
[81.30857086 187.60325623]
[66.88618469 197.60133362]
[61.22339630 211.49136353]
[55.56060791 225.38139343]
[56.27257156 230.55247498]
[55.05186844 235.03167725]
[52.48569107 238.19865417]
[49.32233429 239.75607300]
[43.04497528 253.37937927]
[36.76761246 267.00268555]
[30.49025345 280.62600708]
[42.92499542 289.07745361]
[53.79897308 299.46044922]
[62.81553650 311.49172974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 207]
[34 206]
[35 205]
[36 204]
[37 200]
[38 199]
[39 198]
[42 196]
[43 195]
[44 194]
[45 193]
[46 192]
[48 190]
[49 189]
[50 188]
[58 187]
[59 186]
[60 185]
[61 184]
[68 183]
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
