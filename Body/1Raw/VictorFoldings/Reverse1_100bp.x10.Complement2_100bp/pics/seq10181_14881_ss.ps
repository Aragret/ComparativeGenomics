%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[126.15475464 665.44421387]
[121.53471375 651.15051270]
[118.81996155 636.37603760]
[118.05695343 621.37359619]
[119.25873566 606.39996338]
[122.40475464 591.71124268]
[127.44116974 577.55889893]
[134.28181458 564.18499756]
[142.80961609 551.81848145]
[152.87866211 540.67083740]
[164.31668091 530.93292236]
[176.92791748 522.77130127]
[190.49658203 516.32568359]
[185.88256836 502.05297852]
[181.26856995 487.78024292]
[176.65455627 473.50750732]
[172.04054260 459.23477173]
[167.42654419 444.96203613]
[162.81253052 430.68930054]
[158.19851685 416.41656494]
[155.76701355 415.02160645]
[153.74156189 412.57943726]
[152.52378845 409.23992920]
[152.45373535 405.29534912]
[153.76217651 401.15505981]
[150.00587463 386.63302612]
[146.24957275 372.11096191]
[135.57164001 361.72677612]
[139.60658264 346.42874146]
[135.85028076 331.90667725]
[132.09397888 317.38464355]
[122.34823608 328.78729248]
[107.35249329 328.42987061]
[98.16105652 316.57586670]
[101.54949951 301.96359253]
[115.02000427 295.36468506]
[128.64154053 301.64233398]
[125.97574615 286.88113403]
[123.30995178 272.11990356]
[113.43393707 260.97030640]
[118.59550476 246.01473999]
[115.92971039 231.25352478]
[113.26390839 216.49230957]
[99.20050812 211.58453369]
[89.41680145 200.22077942]
[86.61623383 185.38758850]
[91.64933777 171.05006409]
[103.25889587 161.09187317]
[100.59310150 146.33065796]
[88.24859619 138.07542419]
[85.33482361 123.14343262]
[94.07737732 110.25135803]
[88.87560272 124.32052612]
[78.74228668 135.38017273]
[65.18063354 141.78967285]
[50.20243835 142.59819031]
[36.02962875 137.68582153]
[24.76465607 127.78125000]
[18.07861137 114.35378265]
[16.96332932 99.39530182]
[21.58425522 85.12480927]
[31.25590515 73.65924072]
[44.54354095 66.69945526]
[59.47602844 65.27788544]
[73.83821869 69.60541534]
[85.49956512 79.04009247]
[92.72959137 92.18050385]
[93.17620087 77.18714905]
[93.62280273 62.19380188]
[86.29981995 48.16938019]
[94.41262817 35.67811584]
[94.85923004 20.68476677]
[85.75710297 4.67749310]
[95.55564117 -9.88120270]
[95.77896881 -24.87953949]
[93.23508453 -29.43758011]
[92.74315643 -34.05399704]
[93.98179626 -37.93740082]
[96.36211395 -40.53863907]
[97.25492859 -55.51204300]
[98.14774323 -70.48545074]
[89.52625275 -86.75662994]
[99.75390625 -101.01713562]
[100.42369843 -116.00217438]
[101.09348297 -130.98721313]
[90.92042542 -139.81463623]
[87.73539734 -152.70130920]
[92.48365021 -164.88883972]
[103.22290039 -172.00909424]
[104.11571503 -186.98249817]
[105.00853729 -201.95591736]
[102.39546204 -210.70860291]
[106.02774811 -217.14508057]
[107.14339447 -232.10354614]
[108.25904083 -247.06199646]
[109.37469482 -262.02044678]
[109.82129669 -277.01379395]
[109.59796906 -292.01214600]
[109.37464142 -307.01046753]
[95.68921661 -313.86376953]
[86.76567078 -326.29876709]
[84.65457916 -341.45797729]
[89.84104919 -355.85794067]
[101.13327026 -366.18966675]
[115.93637848 -370.07894897]
[130.84870911 -366.63211060]
[142.44354248 -356.64120483]
[148.05645752 -342.40203857]
[146.39764404 -327.18667603]
[137.84829712 -314.49151611]
[124.37297821 -307.23379517]
[124.59630585 -292.23547363]
[124.81963348 -277.23712158]
[136.01707458 -287.21798706]
[150.99964905 -286.49545288]
[161.18469238 -275.48339844]
[160.73773193 -260.49005127]
[149.91479492 -250.10429382]
[134.91578674 -250.27552795]
[124.33314514 -260.90478516]
[123.21749878 -245.94635010]
[122.10185242 -230.98789978]
[120.98619843 -216.02943420]
[119.98194122 -201.06309509]
[119.08912659 -186.08969116]
[118.19631195 -171.11628723]
[129.88667297 -159.02603149]
[129.20222473 -141.88407898]
[116.07852173 -130.31742859]
[115.40873718 -115.33238983]
[114.73894501 -100.34735107]
[122.66789246 -91.21178436]
[122.23252106 -78.72202301]
[113.12114716 -69.59263611]
[112.22833252 -54.61922836]
[111.33551788 -39.64582062]
[110.77730560 -24.65621185]
[110.55397797 -9.65787506]
[118.75140381 -0.76243889]
[118.68809509 11.73475075]
[109.85258484 21.13137245]
[109.40597534 36.12472153]
[116.76091003 49.07672119]
[108.61615753 62.64040756]
[108.16954803 77.63375854]
[107.72294617 92.62710571]
[108.83859253 107.58556366]
[121.53829193 116.60527802]
[124.03150940 131.61323547]
[115.35431671 143.66487122]
[118.02011108 158.42608643]
[132.37950134 163.69442749]
[142.10966492 175.36578369]
[144.67437744 190.24156189]
[139.48352051 204.30964661]
[128.02513123 213.82650757]
[130.69091797 228.58773804]
[133.35671997 243.34895325]
[143.42341614 255.55436707]
[138.07116699 269.45410156]
[140.73696899 284.21533203]
[143.40275574 298.97653198]
[146.61602783 313.62832642]
[150.37232971 328.15039062]
[154.12863159 342.67245483]
[165.07524109 354.09533691]
[160.77163696 368.35464478]
[164.52793884 382.87670898]
[168.28424072 397.39877319]
[172.47125244 411.80255127]
[177.08526611 426.07528687]
[181.69926453 440.34802246]
[186.31327820 454.62075806]
[190.92729187 468.89349365]
[195.54130554 483.16622925]
[200.15530396 497.43896484]
[204.76931763 511.71170044]
[219.54341125 508.99484253]
[234.54573059 508.22967529]
[249.51956177 509.42932129]
[264.20870972 512.57324219]
[278.36178589 517.60766602]
[291.73663330 524.44635010]
[304.10440063 532.97241211]
[315.25344849 543.03985596]
[324.99301147 554.47650146]
[333.15640259 567.08654785]
[339.60397339 580.65429688]
[344.22537231 594.94757080]
[346.94152832 609.72180176]
[347.70596313 624.72412109]
[346.50561523 639.69793701]
[343.36099243 654.38690186]
[338.32592773 668.53979492]
[331.48657227 681.91430664]
[322.95993042 694.28167725]
[312.89193726 705.43023682]
[301.45486450 715.16925049]
[288.84442139 723.33203125]
[275.27633667 729.77893066]
[260.98284912 734.39965820]
[246.20851135 737.11511230]
[231.20611572 737.87884521]
[216.23239136 736.67779541]
[201.54354858 733.53247070]
[187.39094543 728.49670410]
[174.01673889 721.65673828]
[161.64978027 713.12951660]
[150.50169373 703.06097412]
[140.76322937 691.62341309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[25 169]
[26 168]
[27 167]
[29 165]
[30 164]
[31 163]
[37 162]
[38 161]
[39 160]
[41 158]
[42 157]
[43 156]
[48 151]
[49 150]
[52 147]
[67 146]
[68 145]
[69 144]
[71 142]
[72 141]
[74 138]
[75 137]
[79 136]
[80 135]
[81 134]
[83 131]
[84 130]
[85 129]
[89 126]
[90 125]
[91 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
