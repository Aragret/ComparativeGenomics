%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[3.20186543 226.12376404]
[4.26667786 241.09336853]
[4.18244791 256.10055542]
[2.94966865 271.05725098]
[0.57557547 285.87570190]
[-2.92589951 300.46893311]
[-7.53420830 314.75131226]
[-13.22230721 328.63900757]
[-19.95681572 342.05053711]
[-27.69821167 354.90719604]
[-36.40106583 367.13351440]
[-46.01430511 378.65777588]
[-56.48151779 389.41232300]
[-67.74127197 399.33404541]
[-79.72749329 408.36474609]
[-92.36984253 416.45138550]
[-105.59412384 423.54653931]
[-119.32273102 429.60855103]
[-133.47509766 434.60183716]
[-147.96818542 438.49713135]
[-162.71691895 441.27154541]
[-177.63476562 442.90884399]
[-192.63417053 443.39935303]
[-207.62712097 442.74020386]
[-222.52560425 440.93530273]
[-237.24221802 437.99523926]
[-251.69059753 433.93722534]
[-265.78591919 428.78509521]
[-279.44549561 422.56909180]
[-292.58917236 415.32571411]
[-305.13980103 407.09744263]
[-317.02371216 397.93255615]
[-328.17120361 387.88485718]
[-338.51681519 377.01327515]
[-347.99987793 365.38168335]
[-356.56472778 353.05825806]
[-364.16107178 340.11538696]
[-370.74435425 326.62896729]
[-376.27593994 312.67819214]
[-380.72335815 298.34490967]
[-384.06051636 283.71322632]
[-386.26785278 268.86901855]
[-387.33239746 253.89939880]
[-387.24786377 238.89221191]
[-386.01480103 223.93553162]
[-383.64044189 209.11712646]
[-380.13867188 194.52395630]
[-375.53009033 180.24166870]
[-369.84173584 166.35408020]
[-363.10696411 152.94267273]
[-355.36532593 140.08616638]
[-346.66226196 127.86000824]
[-337.04879761 116.33593750]
[-326.58139038 105.58158875]
[-315.32144165 95.66007996]
[-303.33505249 86.62962341]
[-290.69253540 78.54322052]
[-277.46810913 71.44831848]
[-263.73941040 65.38656616]
[-249.58692932 60.39353180]
[-235.09378052 56.49851227]
[-220.34498596 53.72436905]
[-205.42710876 52.08737946]
[-190.42768860 51.59715652]
[-175.43476868 52.25657272]
[-160.53630066 54.06175613]
[-145.81974792 57.00211716]
[-131.37145996 61.06039429]
[-117.27622223 66.21278381]
[-103.61676025 72.42903137]
[-90.47322845 79.67267609]
[-77.92276001 87.90119934]
[-66.03900909 97.06630707]
[-54.89171982 107.11421967]
[-44.54629898 117.98597717]
[-35.06346512 129.61776733]
[-26.49886703 141.94134521]
[-18.90276527 154.88436890]
[-5.42303038 148.30433655]
[8.05670357 141.72431946]
[21.53643799 135.14428711]
[34.81428528 128.16583252]
[47.87847137 120.79514313]
[60.94265366 113.42445374]
[74.00684357 106.05376434]
[87.07102203 98.68307495]
[99.90996552 90.92668152]
[112.51227570 82.79146576]
[125.11458588 74.65625000]
[137.71690369 66.52103424]
[150.31921387 58.38582230]
[162.92152405 50.25060654]
[174.81616211 41.11180115]
[185.92338562 31.03066444]
[197.03062439 20.94952583]
[208.13786316 10.86838627]
[219.24508667 0.78724784]
[210.13639832 -11.14193630]
[202.07218933 -23.80062294]
[195.11056519 -37.09760284]
[189.30169678 -50.93707275]
[184.68743896 -65.21931458]
[181.30102539 -79.84142303]
[179.16687012 -94.69804382]
[178.30033875 -109.68213654]
[178.70767212 -124.68572998]
[180.38595581 -139.60073853]
[183.32307434 -154.31967163]
[187.49787903 -168.73649597]
[192.88029480 -182.74732971]
[199.43151855 -196.25123596]
[207.10437012 -209.15089417]
[215.84355164 -221.35337830]
[225.58610535 -232.77075195]
[236.26182556 -243.32077026]
[247.79379272 -252.92739868]
[260.09893799 -261.52145386]
[273.08856201 -269.04095459]
[286.66909790 -275.43179321]
[300.74270630 -280.64788818]
[315.20797729 -284.65164185]
[329.96066284 -287.41421509]
[344.89450073 -288.91571045]
[359.90185547 -289.14532471]
[374.87463379 -288.10137939]
[389.70495605 -285.79141235]
[404.28591919 -282.23205566]
[418.51251221 -277.44894409]
[432.28219604 -271.47656250]
[445.49578857 -264.35794067]
[458.05807495 -256.14437866]
[469.87854004 -246.89501953]
[480.87200928 -236.67652893]
[490.95928955 -225.56254578]
[500.06768799 -213.63311768]
[508.13156128 -200.97422791]
[515.09283447 -187.67706299]
[520.90136719 -173.83744812]
[525.51525879 -159.55508423]
[528.90124512 -144.93289185]
[531.03503418 -130.07621765]
[531.90118408 -115.09210205]
[531.49346924 -100.08851624]
[529.81481934 -85.17356110]
[526.87731934 -70.45469666]
[522.70208740 -56.03797913]
[517.31933594 -42.02728271]
[510.76776123 -28.52355576]
[503.09457397 -15.62409306]
[494.35510254 -3.42183757]
[484.61224365 7.99529076]
[473.93624878 18.54503059]
[462.40402222 28.15136909]
[450.09866333 36.74509048]
[437.10885620 44.26427841]
[423.52813721 50.65475464]
[409.45440674 55.87047195]
[394.98904419 59.87385559]
[380.23626709 62.63605881]
[365.30239868 64.13717651]
[350.29501343 64.36639404]
[335.32226562 63.32206726]
[320.49203491 61.01171112]
[305.91116333 57.45197296]
[291.68469238 52.66850662]
[277.91513062 46.69577408]
[264.70172119 39.57680893]
[252.13966370 31.36290741]
[240.31944275 22.11325073]
[229.32623291 11.89448166]
[218.21899414 21.97562027]
[207.11177063 32.05675888]
[196.00453186 42.13789749]
[184.89729309 52.21903610]
[199.75479126 50.15626526]
[213.90003967 55.14744568]
[224.17295837 66.07754517]
[228.27856445 80.50473785]
[225.29965210 95.20596313]
[215.90170288 106.89692688]
[202.18424988 112.96583557]
[187.21182251 112.05688477]
[174.32926941 104.37313080]
[166.41461182 91.63114166]
[165.23599243 76.67752075]
[171.05674744 62.85291672]
[158.45442200 70.98813629]
[145.85211182 79.12335205]
[133.24980164 87.25856781]
[120.64749146 95.39378357]
[108.04518127 103.52899933]
[107.15312958 106.44339752]
[105.18093109 109.09763336]
[102.22290802 111.09101105]
[98.52008057 112.06328583]
[94.44171143 111.74726105]
[81.37753296 119.11795044]
[68.31334686 126.48863983]
[55.24916077 133.85932922]
[42.18497467 141.23002625]
[40.11121368 145.04492188]
[37.22195053 147.73130798]
[33.97209167 149.17138672]
[30.80807686 149.40719604]
[28.11646652 148.62402344]
[14.63673115 155.20405579]
[1.15699708 161.78407288]
[-12.32273769 168.36410522]
[-6.79088640 182.31477356]
[-2.34318733 196.64797974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[78 208]
[79 207]
[80 206]
[81 205]
[82 200]
[83 199]
[84 198]
[85 197]
[86 196]
[87 191]
[88 190]
[89 189]
[90 188]
[91 187]
[92 186]
[93 174]
[94 173]
[95 172]
[96 171]
[97 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
