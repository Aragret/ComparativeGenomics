%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[88.45626068 496.45486450]
[77.94217682 507.40103149]
[64.18222809 513.80633545]
[49.03732300 514.80456543]
[34.55569839 510.26068115]
[22.69586754 500.78918457]
[15.06177711 487.67108154]
[12.68587494 472.68041992]
[15.88948154 457.84460449]
[24.23933601 445.17007446]
[36.60618973 436.37088013]
[51.31752396 432.63711548]
[53.09999084 417.74340820]
[54.88245773 402.84970093]
[52.68723679 398.60821533]
[53.13317871 392.94268799]
[56.94614410 387.54150391]
[59.17126083 372.70745850]
[61.39637756 357.87341309]
[63.51100159 343.02322388]
[65.51501465 328.15768433]
[67.51902771 313.29217529]
[69.52304077 298.42663574]
[71.52705383 283.56112671]
[73.53106689 268.69558716]
[60.50425339 259.13449097]
[54.03946304 244.22267151]
[55.98806381 227.99246216]
[65.91223145 214.88496399]
[81.17879486 208.53486633]
[82.96126556 193.64114380]
[84.74372864 178.74742126]
[86.52619934 163.85371399]
[88.08671570 148.93510437]
[81.51574707 135.56829834]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[97.59284973 17.79012489]
[96.70003510 2.81671953]
[88.15505219 -10.49845314]
[95.12109375 -23.66369247]
[94.22827911 -38.63710022]
[93.33546448 -53.61050415]
[90.99997711 -68.42757416]
[87.24367523 -82.94963074]
[83.48737335 -97.47168732]
[79.62306976 -111.96538544]
[75.65097046 -126.42990875]
[71.67887878 -140.89442444]
[67.70677948 -155.35896301]
[63.73468399 -169.82348633]
[51.81304550 -171.34753418]
[41.13434982 -176.78656006]
[32.93880844 -185.48268127]
[28.16940117 -196.40130615]
[27.36338234 -208.25416565]
[30.59188271 -219.65133667]
[37.45428848 -229.26423645]
[47.12780380 -235.98040771]
[43.80554199 -250.60787964]
[40.48328400 -265.23532104]
[37.16102219 -279.86279297]
[33.83876419 -294.49026489]
[30.51650429 -309.11770630]
[15.60456562 -307.36666870]
[0.59098065 -307.21060181]
[-14.35413551 -308.65130615]
[-29.06144333 -311.67242432]
[-43.36429596 -316.23974609]
[-57.10063171 -322.30154419]
[-70.11480713 -329.78906250]
[-82.25936890 -338.61755371]
[-93.39669800 -348.68688965]
[-103.40060425 -359.88305664]
[-112.15774536 -372.07913208]
[-119.56887817 -385.13699341]
[-125.55004120 -398.90859985]
[-130.03346252 -413.23800659]
[-132.96833801 -427.96276855]
[-134.32141113 -442.91604614]
[-134.07736206 -457.92846680]
[-132.23893738 -472.82989502]
[-128.82698059 -487.45147705]
[-123.88015747 -501.62753296]
[-117.45450592 -515.19744873]
[-109.62284088 -528.00750732]
[-100.47389984 -539.91253662]
[-90.11135101 -550.77758789]
[-78.65260315 -560.47961426]
[-66.22749329 -568.90863037]
[-52.97680664 -575.96917725]
[-39.05068970 -581.58129883]
[-24.60693359 -585.68127441]
[-9.80919647 -588.22271729]
[5.17485189 -589.17687988]
[20.17543030 -588.53289795]
[35.02257156 -586.29803467]
[49.54804611 -582.49768066]
[63.58726883 -577.17486572]
[76.98116302 -570.38989258]
[89.57796478 -562.21966553]
[101.23494720 -552.75677490]
[111.82003021 -542.10839844]
[121.21326447 -530.39520264]
[129.30822754 -517.74987793]
[136.01319885 -504.31576538]
[141.25219727 -490.24505615]
[144.96586609 -475.69717407]
[147.11212158 -460.83697510]
[147.66665649 -445.83282471]
[146.62316895 -430.85470581]
[143.99351501 -416.07238770]
[139.80744934 -401.65335083]
[134.11242676 -387.76095581]
[126.97297668 -374.55261230]
[118.46999359 -362.17797852]
[108.69981384 -350.77728271]
[97.77315521 -340.47970581]
[85.81381226 -331.40191650]
[72.95729828 -323.64678955]
[59.34928513 -317.30218506]
[45.14396667 -312.43997192]
[48.46622467 -297.81250000]
[51.78848267 -283.18505859]
[55.11074448 -268.55758667]
[58.43300247 -253.93013000]
[61.75526428 -239.30267334]
[79.29350281 -234.74409485]
[92.15002441 -221.85328674]
[96.70428467 -204.13809204]
[91.61173248 -186.48144531]
[78.19921112 -173.79557800]
[82.17130280 -159.33105469]
[86.14340210 -144.86653137]
[90.11549377 -130.40200806]
[94.08759308 -115.93747711]
[98.89011383 -110.31987000]
[98.00943756 -101.22798920]
[101.76573181 -86.70593262]
[105.52203369 -72.18387604]
[109.92368317 -86.52352142]
[119.71567535 -97.88648224]
[133.24789429 -104.35789490]
[148.23991394 -104.84722137]
[162.16531372 -99.27199554]
[172.67742920 -88.57173920]
[178.00477600 -74.54963684]
[177.24960327 -59.56865692]
[170.53918457 -46.15335846]
[159.00431824 -36.56445694]
[144.58885193 -32.41784668]
[129.72204590 -34.41231155]
[116.90920258 -42.21173859]
[108.30886841 -54.50331879]
[109.20168304 -39.52991486]
[110.09449768 -24.55650902]
[118.57562256 -12.31233406]
[111.67343903 1.92390370]
[112.56626129 16.89731026]
[121.16636658 4.60755444]
[135.00485229 -1.18003893]
[149.79371643 1.32787812]
[160.95045471 11.35420036]
[165.01803589 25.79216194]
[160.73608398 40.16800690]
[149.43139648 50.02721786]
[134.60685730 52.31481552]
[120.85601807 46.32196045]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[111.86882019 138.28710938]
[103.02690125 150.27333069]
[105.45762634 156.42176819]
[104.55403137 162.03251648]
[101.41991425 165.63616943]
[99.63744354 180.52989197]
[97.85498047 195.42361450]
[96.07251740 210.31732178]
[107.68949127 218.10890198]
[114.78223419 230.08843994]
[116.01564026 243.88905334]
[111.20578003 256.81243896]
[101.34474945 266.35650635]
[88.39659882 270.69958496]
[86.39258575 285.56512451]
[84.38857269 300.43066406]
[82.38455963 315.29617310]
[80.38054657 330.16171265]
[78.37653351 345.02725220]
[80.33136749 353.95004272]
[76.23042297 360.09854126]
[74.00530243 374.93258667]
[71.78018951 389.76663208]
[69.77617645 404.63214111]
[67.99370575 419.52587891]
[66.21124268 434.41958618]
[79.62602234 441.51947021]
[89.56719971 452.98843384]
[94.69032288 467.27542114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 207]
[13 206]
[14 205]
[17 204]
[18 203]
[19 202]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[30 189]
[31 188]
[32 187]
[33 186]
[34 183]
[36 181]
[37 180]
[38 178]
[39 177]
[40 176]
[41 175]
[42 174]
[43 164]
[44 163]
[46 161]
[47 160]
[48 159]
[49 145]
[50 144]
[51 143]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[64 132]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
