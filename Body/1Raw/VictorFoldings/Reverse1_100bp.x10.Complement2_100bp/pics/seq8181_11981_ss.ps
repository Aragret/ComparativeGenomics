%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[131.68579102 444.82934570]
[122.69022369 457.27825928]
[108.66882324 463.54690552]
[93.39327240 461.94903564]
[80.97262573 452.91448975]
[74.74796295 438.87353516]
[76.39369965 423.60305786]
[85.46713257 411.21078491]
[99.52755737 405.03015137]
[101.08808136 390.11157227]
[102.64860535 375.19296265]
[104.20912170 360.27435303]
[101.77854919 353.29479980]
[105.90555573 345.14584351]
[107.68801880 330.25210571]
[109.47048187 315.35839844]
[110.47474670 300.39205933]
[110.69807434 285.39370728]
[110.92140198 270.39538574]
[111.14472961 255.39704895]
[111.36805725 240.39871216]
[111.59138489 225.40037537]
[110.47573853 210.44190979]
[108.03000641 195.64263916]
[105.58428192 180.84336853]
[103.13854980 166.04409790]
[93.42962646 154.74870300]
[98.81329346 139.87164307]
[96.36756897 125.07237244]
[93.92183685 110.27310181]
[88.72346497 124.34353638]
[78.84804535 135.63406372]
[65.59485626 142.65922546]
[50.70758820 144.49475098]
[36.14490891 140.89913940]
[23.82279587 132.34545898]
[15.36243343 119.95909119]
[11.87692642 105.36966705]
[13.82485485 90.49668121]
[20.94993401 77.29693604]
[32.31473923 67.50708771]
[46.42403030 62.41514969]
[61.42149353 62.69105530]
[75.33395386 68.29850769]
[86.33097839 78.49974823]
[92.96638489 91.95492554]
[93.85919952 76.98152161]
[94.75201416 62.00811386]
[95.64482880 47.03470612]
[96.53764343 32.06130219]
[83.93798828 25.65853500]
[74.75815582 14.96953011]
[70.35904694 1.62961352]
[71.37348938 -12.33682728]
[77.61537933 -24.82354546]
[88.11280823 -33.96006393]
[101.25918579 -38.39186859]
[102.37483215 -53.35032272]
[103.49048615 -68.30877686]
[104.60613251 -83.26722717]
[105.72177887 -98.22568512]
[93.67855072 -89.28361511]
[78.82017517 -91.33995819]
[69.65819550 -103.21674347]
[71.44101715 -118.11042023]
[83.14736176 -127.48920441]
[98.07129669 -125.98050690]
[107.66342926 -114.44947815]
[110.10915375 -129.24874878]
[112.55488586 -144.04801941]
[115.00061035 -158.84729004]
[117.44634247 -173.64656067]
[119.89206696 -188.44583130]
[122.33779144 -203.24510193]
[124.78352356 -218.04437256]
[127.22924805 -232.84364319]
[129.45436096 -247.67768860]
[131.45837402 -262.54321289]
[133.46238708 -277.40875244]
[135.46640015 -292.27426147]
[137.47041321 -307.13980103]
[138.47468567 -322.10614014]
[138.47468567 -337.10614014]
[138.47468567 -352.10614014]
[138.47468567 -367.10614014]
[138.47468567 -382.10614014]
[138.47468567 -397.10614014]
[138.47468567 -412.10614014]
[138.47468567 -427.10614014]
[123.68637085 -429.86666870]
[109.65718842 -435.29776001]
[96.86497498 -443.21444702]
[85.74541473 -453.34707642]
[76.67723846 -465.35052490]
[69.96931458 -478.81597900]
[65.85009766 -493.28479004]
[64.45989990 -508.26419067]
[65.84606171 -523.24395752]
[69.96137238 -537.71386719]
[76.66567230 -551.18115234]
[85.73061371 -563.18701172]
[96.84743500 -573.32263184]
[109.63751984 -581.24279785]
[123.66523743 -586.67767334]
[138.45280457 -589.44213867]
[153.49656677 -589.44213867]
[168.28411865 -586.67767334]
[182.31184387 -581.24279785]
[195.10192871 -573.32263184]
[206.21875000 -563.18701172]
[215.28369141 -551.18115234]
[221.98799133 -537.71386719]
[226.10330200 -523.24395752]
[227.48945618 -508.26419067]
[226.09925842 -493.28479004]
[221.98004150 -478.81597900]
[215.27212524 -465.35052490]
[206.20394897 -453.34707642]
[195.08438110 -443.21444702]
[182.29217529 -435.29776001]
[168.26298523 -429.86666870]
[153.47468567 -427.10614014]
[153.47468567 -412.10614014]
[153.47468567 -397.10614014]
[153.47468567 -382.10614014]
[153.47468567 -367.10614014]
[153.47468567 -352.10614014]
[153.47468567 -337.10614014]
[153.47468567 -322.10614014]
[162.79104614 -333.86221313]
[176.94947815 -338.81588745]
[191.56285095 -335.43215942]
[202.10302734 -324.75955200]
[205.30404663 -310.10507202]
[200.17401123 -296.00958252]
[188.30253601 -286.84072876]
[173.36811829 -285.43954468]
[159.99835205 -292.24026489]
[152.33595276 -305.13580322]
[150.33193970 -290.27026367]
[148.32792664 -275.40472412]
[146.32391357 -260.53921509]
[144.31990051 -245.67367554]
[146.45172119 -241.39999390]
[145.92147827 -235.74174500]
[142.02851868 -230.39791870]
[139.58279419 -215.59864807]
[137.13706970 -200.79937744]
[134.69132996 -186.00010681]
[132.24560547 -171.20083618]
[129.79988098 -156.40156555]
[127.35415649 -141.60229492]
[124.90842438 -126.80302429]
[122.46269989 -112.00375366]
[120.68023682 -97.11003113]
[119.56458282 -82.15158081]
[118.44893646 -67.19313049]
[117.33329010 -52.23467636]
[116.21763611 -37.27622223]
[130.20967102 -29.55783272]
[139.46870422 -16.46263885]
[142.09960938 -0.58303040]
[137.52558899 14.91015244]
[126.61373138 26.90077019]
[111.51104736 32.95411682]
[110.61823273 47.92752457]
[109.72541809 62.90092850]
[108.83260345 77.87433624]
[107.93978882 92.84774017]
[108.72110748 107.82737732]
[111.16683960 122.62664795]
[113.61256409 137.42591858]
[123.49642181 149.77986145]
[117.93782043 163.59837341]
[120.38355255 178.39764404]
[122.82927704 193.19691467]
[125.27500916 207.99618530]
[131.23985291 194.23316956]
[142.52873230 184.35586548]
[156.96192932 180.27140808]
[171.75262451 182.76846313]
[184.04496765 191.36488342]
[191.46549988 204.40081787]
[192.58143616 219.35925293]
[187.17729187 233.35194397]
[176.29653931 243.67710876]
[162.04006958 248.34114075]
[147.16058350 246.44346619]
[134.53109741 238.35050964]
[126.58972168 225.62370300]
[126.36639404 240.62203979]
[126.14306641 255.62037659]
[125.91973877 270.61871338]
[125.69641113 285.61703491]
[125.47308350 300.61538696]
[136.17510986 290.10507202]
[151.11888123 288.80749512]
[163.47230530 297.31588745]
[167.58757019 311.74032593]
[161.58322144 325.48617554]
[148.20437622 332.26898193]
[133.56765747 328.98776245]
[124.36420441 317.14086914]
[122.58173370 332.03457642]
[120.79927063 346.92831421]
[119.12773132 361.83486938]
[117.56720734 376.75347900]
[116.00668335 391.67208862]
[114.44615936 406.59069824]
[126.92320251 415.54718018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[12 206]
[14 205]
[15 204]
[16 203]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 177]
[24 176]
[25 175]
[26 174]
[28 172]
[29 171]
[30 170]
[46 169]
[47 168]
[48 167]
[49 166]
[50 165]
[57 159]
[58 158]
[59 157]
[60 156]
[61 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
