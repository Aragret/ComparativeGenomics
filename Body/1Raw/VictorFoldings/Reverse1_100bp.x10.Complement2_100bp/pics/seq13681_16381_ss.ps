%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[95.24707794 624.32098389]
[96.09944916 609.24865723]
[100.98778534 594.96551514]
[109.54933167 582.53161621]
[121.14875793 572.86950684]
[134.92532349 566.69628906]
[132.70021057 551.86224365]
[130.47508240 537.02819824]
[128.24996948 522.19415283]
[125.91448212 507.37707520]
[123.46875763 492.57781982]
[121.02303314 477.77853394]
[107.95130920 473.82287598]
[97.81048584 464.57666016]
[92.61798859 451.80221558]
[93.43994904 437.97097778]
[100.17286682 425.78558350]
[111.55271149 417.65158081]
[109.32759094 402.81753540]
[107.10247803 387.98348999]
[103.00152588 381.83499146]
[104.95636749 372.91220093]
[102.95235443 358.04666138]
[100.94834137 343.18115234]
[91.52204895 335.60012817]
[89.73081207 323.23181152]
[97.07466888 312.62847900]
[95.29219818 297.73477173]
[93.50973511 282.84106445]
[91.72727203 267.94732666]
[83.26390076 280.33166504]
[69.17678070 285.48461914]
[54.72004318 281.48425293]
[45.28569794 269.82266235]
[44.39252853 254.84927368]
[52.37365723 242.14881897]
[66.25232697 236.45825195]
[80.85212708 239.90000916]
[90.72817230 251.19146729]
[90.72817230 236.19146729]
[90.72817230 221.19146729]
[90.72817230 206.19146729]
[77.85194397 202.24198914]
[66.59521484 194.81671143]
[57.87450027 184.50888062]
[52.40303040 172.14685059]
[50.63241959 158.72760010]
[52.71540070 145.33625793]
[58.49269104 133.05841064]
[67.50515747 122.89205933]
[79.03025818 115.66652679]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[92.01352692 38.85090637]
[91.20818329 34.98878860]
[91.65605927 31.46248627]
[93.09030914 28.63237572]
[95.15246582 26.73352432]
[96.49069977 11.79333878]
[97.04891205 -3.19627070]
[96.82558441 -18.19460869]
[96.60225677 -33.19294739]
[96.37892914 -48.19128418]
[96.04395294 -63.18754196]
[95.59734344 -78.18089294]
[95.15074158 -93.17424011]
[83.12154388 -84.21331024]
[68.57739258 -87.88315582]
[62.23970413 -101.47851562]
[68.78038025 -114.97738647]
[83.37788391 -118.42890930]
[95.27072144 -109.29021454]
[95.94050598 -124.27525330]
[96.61029053 -139.26029968]
[84.83863831 -129.96362305]
[69.92562103 -131.57666016]
[60.41408920 -143.17539978]
[61.75268173 -158.11555481]
[73.17459106 -167.83871460]
[88.13683319 -166.77502441]
[98.06803131 -155.53471375]
[100.07204437 -170.40023804]
[102.07606506 -185.26576233]
[104.08007812 -200.13128662]
[105.97336578 -215.01132202]
[107.75583649 -229.90504456]
[109.53829956 -244.79876709]
[101.06118011 -251.27658081]
[96.07573700 -260.61749268]
[95.42241669 -271.10446167]
[99.15219879 -280.84109497]
[106.52948761 -288.09442139]
[116.17612457 -291.60348511]
[118.62185669 -306.40274048]
[121.06758118 -321.20202637]
[123.51330566 -336.00128174]
[109.83018494 -342.37896729]
[98.37589264 -352.21267700]
[90.00041962 -364.77267456]
[85.32527924 -379.12698364]
[84.69740295 -394.21035767]
[88.16337585 -408.90353394]
[95.46600342 -422.11618042]
[106.06338501 -432.86785889]
[119.16912079 -440.36065674]
[133.81068420 -444.03863525]
[148.90155029 -443.62878418]
[163.32191467 -439.16159058]
[176.00166321 -430.96850586]
[185.99987793 -419.65753174]
[192.57463074 -406.06802368]
[195.23803711 -391.20837402]
[193.79244995 -376.18130493]
[188.34512329 -362.10192871]
[179.30030823 -350.01498413]
[167.32919312 -340.81744385]
[153.32008362 -335.19183350]
[138.31257629 -333.55557251]
[135.86685181 -318.75628662]
[133.42112732 -303.95703125]
[130.97540283 -289.15774536]
[143.45190430 -274.19610596]
[140.86262512 -254.57980347]
[124.43201447 -243.01629639]
[122.64955139 -228.12257385]
[120.86708832 -213.22886658]
[123.19347382 -206.21389771]
[118.94560242 -198.12727356]
[116.94158936 -183.26174927]
[114.93757629 -168.39622498]
[112.93356323 -153.53070068]
[111.59532928 -138.59051514]
[110.92554474 -123.60546875]
[110.25576019 -108.62042999]
[110.14408875 -93.62084961]
[110.59069824 -78.62749481]
[111.03730011 -63.63414764]
[114.37856293 -57.04189682]
[111.37726593 -48.41461182]
[111.60059357 -33.41627502]
[111.82392120 -18.41793633]
[112.04724884 -3.41959858]
[122.43159485 -14.24389267]
[137.33010864 -15.98582554]
[149.93138123 -7.84900856]
[154.47430420 6.44651413]
[148.88188171 20.36502266]
[135.71092224 27.54316139]
[120.98299408 24.69918442]
[111.43088531 13.13157272]
[110.09265137 28.07175827]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[122.66934204 118.37750244]
[135.20797729 129.27574158]
[143.24531555 143.78565979]
[145.82531738 160.14503479]
[142.65354919 176.37388611]
[134.13058472 190.51412964]
[121.30159760 200.86579895]
[105.72817230 206.19146729]
[105.72817230 221.19146729]
[105.72817230 236.19146729]
[105.72817230 251.19146729]
[106.62098694 266.16488647]
[108.40345001 281.05859375]
[110.18592072 295.95230103]
[111.96838379 310.84603882]
[123.34434509 325.32598877]
[115.81386566 341.17712402]
[117.81787872 356.04266357]
[119.82189941 370.90817261]
[121.93652344 385.75839233]
[124.16163635 400.59243774]
[126.38675690 415.42648315]
[141.83561707 421.31921387]
[152.14564514 434.12542725]
[154.57661438 450.29043579]
[148.55867004 465.38812256]
[135.82229614 475.33282471]
[138.26802063 490.13208008]
[140.71376038 504.93136597]
[145.20051575 512.88793945]
[143.08401489 519.96905518]
[145.30912781 534.80310059]
[147.53425598 549.63714600]
[149.75936890 564.47119141]
[164.74084473 566.33068848]
[178.66464233 572.16424561]
[190.49749756 581.53900146]
[199.36135864 593.75927734]
[204.59844971 607.91821289]
[205.82014465 622.96514893]
[202.93580627 637.78344727]
[196.15945435 651.27362061]
[185.99394226 662.43444824]
[173.19360352 670.43786621]
[158.70834351 674.68988037]
[143.61303711 674.87493896]
[129.02786255 670.97943115]
[116.03513336 663.29229736]
[105.59900665 652.38403320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 195]
[7 194]
[8 193]
[9 192]
[10 190]
[11 189]
[12 188]
[18 183]
[19 182]
[20 181]
[22 180]
[23 179]
[24 178]
[27 176]
[28 175]
[29 174]
[30 173]
[39 172]
[40 171]
[41 170]
[42 169]
[52 161]
[54 159]
[55 158]
[56 157]
[57 156]
[62 155]
[63 154]
[64 146]
[65 145]
[66 144]
[67 143]
[68 141]
[69 140]
[70 139]
[76 138]
[77 137]
[78 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 130]
[90 129]
[91 128]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
