%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUUAGCACACUCCCACCCUGACAGAUGACUCAUCGGAGGAGUCUAAGUAACUUGAUCCAGACAGGGUUACAUACCCUACCGCCUAUCAUUCAAACAUUAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[169.69056702 513.38616943]
[176.01512146 499.62832642]
[186.46595764 488.67120361]
[199.90946960 481.70333862]
[197.68435669 466.86932373]
[195.45922852 452.03527832]
[193.23411560 437.20123291]
[191.00900269 422.36718750]
[188.78388977 407.53314209]
[186.44839478 392.71606445]
[184.00267029 377.91680908]
[180.57160950 363.31448364]
[176.17060852 348.97463989]
[171.76960754 334.63476562]
[167.36862183 320.29492188]
[162.22665405 306.20379639]
[156.35769653 292.39962769]
[150.48873901 278.59542847]
[144.61976624 264.79125977]
[136.67333984 277.51345825]
[121.79048920 279.38449097]
[110.94230652 269.02508545]
[112.12566376 254.07185364]
[124.46823883 245.54771423]
[138.87030029 249.73527527]
[134.04431152 235.53282166]
[129.21830750 221.33036804]
[124.39231110 207.12791443]
[119.56631470 192.92544556]
[116.58215332 191.04739380]
[114.35937500 187.63063049]
[113.61128998 183.04873657]
[114.85736084 177.97978210]
[110.67034912 163.57598877]
[106.48333740 149.17221069]
[95.50096893 139.11056519]
[99.07862854 123.69918060]
[94.89161682 109.29539490]
[89.96002197 95.12926483]
[84.29723358 81.23923492]
[80.67504883 95.79532623]
[70.33145142 106.65856934]
[55.97024155 110.98933411]
[41.34539795 107.65557861]
[30.27981949 97.52873230]
[25.66602707 83.25592804]
[28.71005058 68.56804657]
[38.61619186 57.30446243]
[52.79500961 52.40944672]
[67.54019165 55.16254807]
[78.99687958 64.84338379]
[75.45720673 50.26701355]
[71.91753387 35.69063568]
[68.37786102 21.11426163]
[57.60253525 9.52966213]
[62.11796188 -4.66400433]
[58.57828903 -19.24037933]
[55.03861618 -33.81675339]
[51.49894333 -48.39313126]
[42.10720062 -50.82734680]
[34.29400253 -56.48103333]
[29.10793686 -64.54338837]
[27.22595596 -73.88407135]
[28.86525726 -83.21160889]
[33.75912094 -91.25195312]
[41.19924164 -96.92249298]
[38.53344727 -111.68370819]
[35.86765289 -126.44493103]
[28.15641975 -113.57881165]
[14.40098000 -107.59651947]
[-0.26823071 -110.72929382]
[-10.37995815 -121.80868530]
[-12.16277885 -136.70236206]
[-4.95174360 -149.85534668]
[8.56360912 -156.36189270]
[23.34238625 -153.79524231]
[33.87299728 -143.11161804]
[32.98018265 -158.08503723]
[32.08736420 -173.05844116]
[31.19454956 -188.03184509]
[22.64956665 -201.34701538]
[29.61560822 -214.51225281]
[28.72279167 -229.48565674]
[27.82997704 -244.45906067]
[26.93716049 -259.43246460]
[26.04434395 -274.40588379]
[25.15152931 -289.37927246]
[16.61252213 -296.11679077]
[13.26018143 -306.23321533]
[15.97213554 -316.31259155]
[23.61978149 -323.08950806]
[23.17317581 -338.08285522]
[22.72656822 -353.07620239]
[22.27996254 -368.06954956]
[7.66255665 -371.87850952]
[-5.28892612 -379.65252686]
[-15.52456760 -390.76147461]
[-22.21460915 -404.30474854]
[-24.81671906 -419.18444824]
[-23.11995506 -434.19436646]
[-17.26186943 -448.11770630]
[-7.71734858 -459.82577515]
[4.73987627 -468.36944580]
[19.09995270 -473.05612183]
[34.19877243 -473.50585938]
[48.81234741 -469.68222046]
[61.75601196 -461.89517212]
[71.98049164 -450.77597046]
[78.65692139 -437.22598267]
[81.24407959 -422.34365845]
[79.53224182 -407.33544922]
[73.66017151 -393.41799927]
[64.10388947 -381.71954346]
[51.63809204 -373.18838501]
[37.27331161 -368.51614380]
[37.71991730 -353.52279663]
[38.16652298 -338.52944946]
[38.61313248 -323.53610229]
[49.95159912 -307.87319946]
[40.12493515 -290.27209473]
[41.01774979 -275.29870605]
[41.91056824 -260.32528687]
[42.80338287 -245.35188293]
[43.69619751 -230.37847900]
[44.58901215 -215.40507507]
[53.07013702 -203.16088867]
[46.16795731 -188.92465210]
[47.06077194 -173.95124817]
[47.95358658 -158.97784424]
[48.84640503 -144.00444031]
[50.62886810 -129.11071777]
[53.29466629 -114.34950256]
[55.96046066 -99.58828735]
[73.67218018 -89.38600159]
[78.15747833 -69.14305115]
[66.07531738 -51.93280411]
[69.61499023 -37.35642624]
[73.15466309 -22.78005219]
[76.69433594 -8.20367718]
[87.21648407 2.33832216]
[82.95423126 17.57458878]
[86.49390411 32.15096283]
[90.03357697 46.72734070]
[93.57324982 61.30371475]
[98.18726349 75.57644653]
[103.85004425 89.46647644]
[109.58657837 75.60674286]
[122.83131409 68.56565094]
[137.52894592 71.56229401]
[146.95989990 83.22663879]
[146.81248474 98.22591400]
[137.15408325 109.70265198]
[122.40039825 112.40983582]
[109.29539490 105.10838318]
[113.48240662 119.51216888]
[124.76426697 130.60406494]
[120.88712311 144.98519897]
[125.07413483 159.38899231]
[129.26113892 173.79277039]
[133.76876831 188.09945679]
[138.59477234 202.30191040]
[143.42076111 216.50436401]
[148.24676514 230.70681763]
[153.07276917 244.90927124]
[158.42395020 258.92230225]
[164.29290771 272.72647095]
[170.16186523 286.53063965]
[176.03083801 300.33483887]
[181.56037903 286.39123535]
[194.69880676 279.15371704]
[209.43942261 281.93121338]
[219.04299927 293.45385742]
[219.11891174 308.45364380]
[209.63246155 320.07290649]
[194.92071533 322.99945068]
[181.70846558 315.89392090]
[186.10946655 330.23379517]
[190.51045227 344.57363892]
[194.91145325 358.91348267]
[200.36857605 344.94137573]
[212.45050049 336.05163574]
[227.41349792 334.99887085]
[240.62115479 342.10928345]
[247.98091125 355.17965698]
[247.21226501 370.15994263]
[238.55340576 382.40835571]
[224.68736267 388.12963867]
[209.91067505 385.55093384]
[198.80194092 375.47106934]
[201.24766541 390.27032471]
[205.73442078 398.22689819]
[203.61793518 405.30801392]
[205.84304810 420.14205933]
[208.06816101 434.97610474]
[210.29327393 449.81015015]
[212.51840210 464.64419556]
[214.74351501 479.47824097]
[229.63973999 482.19509888]
[242.84545898 489.60372925]
[252.92820740 500.90048218]
[258.79431152 514.85998535]
[259.80743408 529.96801758]
[255.85768127 544.58575439]
[247.37351990 557.12756348]
[235.27520752 566.23303223]
[220.87510681 570.91448975]
[205.73522949 570.66406250]
[191.49783325 565.50897217]
[179.70727539 556.00836182]
[171.64251709 543.19281006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[10 190]
[11 189]
[12 179]
[13 178]
[14 177]
[15 176]
[16 168]
[17 167]
[18 166]
[19 165]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[33 159]
[34 158]
[35 157]
[37 155]
[38 154]
[39 146]
[40 145]
[51 144]
[52 143]
[53 142]
[54 141]
[56 139]
[57 138]
[58 137]
[59 136]
[66 133]
[67 132]
[68 131]
[77 130]
[78 129]
[79 128]
[80 127]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
