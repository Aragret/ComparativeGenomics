%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[25.56974792 645.13177490]
[18.04796791 658.13586426]
[8.85997486 670.02130127]
[-1.83026171 680.57604980]
[-13.83196068 689.61169434]
[-26.93093872 696.96697998]
[-40.89342880 702.51062012]
[-55.47025299 706.14373779]
[-70.40126801 707.80151367]
[-85.42002106 707.45428467]
[-100.25847626 705.10827637]
[-114.65183258 700.80541992]
[-128.34321594 694.62243652]
[-141.08828735 686.66961670]
[-152.65959167 677.08905029]
[-162.85064697 666.05157471]
[-171.47955322 653.75415039]
[-178.39234924 640.41638184]
[-183.46563721 626.27618408]
[-186.60888672 611.58593750]
[-187.76602173 596.60778809]
[-186.91636658 581.60906982]
[-184.07510376 566.85748291]
[-179.29292297 552.61614990]
[-172.65518188 539.13940430]
[-164.28031921 526.66760254]
[-154.31782532 515.42340088]
[-142.94546509 505.60745239]
[-130.36619568 497.39492798]
[-116.80452728 490.93237305]
[-102.50246429 486.33517456]
[-87.71524811 483.68530273]
[-72.70677948 483.03009033]
[-57.74489975 484.38122559]
[-43.09662247 487.71459961]
[-37.84990311 473.66210938]
[-32.60318375 459.60964966]
[-27.35646629 445.55718994]
[-34.98505020 430.56906128]
[-29.30129242 414.38235474]
[-13.36150074 407.17523193]
[-8.32458496 393.04620361]
[-3.28766847 378.91717529]
[-8.18728352 367.85733032]
[-4.10657835 356.04498291]
[7.28235912 349.99066162]
[12.52907753 335.93817139]
[17.77579498 321.88571167]
[13.94312286 304.76037598]
[28.24362755 293.15963745]
[33.28054428 279.03060913]
[38.31745911 264.90155029]
[43.24905396 250.73542786]
[48.07505035 236.53297424]
[52.90104675 222.33052063]
[57.72704697 208.12806702]
[62.55304337 193.92561340]
[58.21218491 176.92196655]
[72.16094971 164.90058899]
[76.77496338 150.62785339]
[81.38896942 136.35511780]
[85.78997040 122.01527405]
[89.97698212 107.61149597]
[93.84128571 93.11779785]
[97.38095856 78.54142761]
[100.92063141 63.96504974]
[104.46030426 49.38867569]
[107.89136505 34.78635406]
[111.21362305 20.15889168]
[113.87941742 5.39767504]
[115.88343048 -9.46785259]
[117.77672577 -24.34788895]
[119.55918884 -39.24160385]
[121.34165192 -54.13532257]
[123.12412262 -69.02903748]
[124.90658569 -83.92276001]
[113.75981140 -73.88536072]
[98.85454559 -72.20218658]
[85.75008392 -79.50102997]
[79.33406830 -93.05960083]
[81.99951172 -107.82087708]
[92.75227356 -118.27928162]
[107.58183289 -120.53408051]
[120.95713806 -113.74428558]
[127.88972473 -100.44117737]
[131.42939758 -115.01755524]
[134.96907043 -129.59393311]
[138.50874329 -144.17030334]
[140.18028259 -159.07687378]
[139.95695496 -174.07522583]
[139.73362732 -189.07356262]
[139.51029968 -204.07189941]
[139.17532349 -219.06814575]
[138.72871399 -234.06150818]
[138.28210449 -249.05485535]
[137.83551025 -264.04821777]
[123.43548584 -268.78268433]
[111.52510834 -278.15917969]
[103.54259491 -291.04541016]
[100.45188141 -305.88534546]
[102.62618256 -320.88696289]
[109.80294800 -334.23870850]
[121.11553955 -344.32836914]
[135.19790649 -349.93753052]
[150.34954834 -350.38885498]
[164.74081421 -345.62783813]
[176.63389587 -336.22940063]
[184.59265137 -323.32849121]
[187.65600586 -308.48287964]
[185.45407104 -293.48532104]
[178.25271606 -280.14678955]
[166.92153931 -270.07800293]
[152.82885742 -264.49481201]
[153.27546692 -249.50146484]
[153.72206116 -234.50810242]
[154.16867065 -219.51475525]
[157.50993347 -212.92250061]
[154.50863647 -204.29522705]
[154.73196411 -189.29689026]
[154.95529175 -174.29855347]
[155.17861938 -159.30020142]
[162.10107422 -172.60733032]
[172.92376709 -182.99334717]
[186.50454712 -189.36219788]
[201.41023254 -191.04174805]
[216.06774902 -187.85475159]
[228.93029785 -180.13755798]
[238.64042664 -168.70455933]
[244.17341614 -154.76231384]
[244.94535828 -139.78219604]
[240.87478638 -125.34507751]
[232.39128113 -112.97454071]
[220.39012146 -103.97608185]
[206.13783264 -99.29933167]
[191.13845825 -99.43784332]
[176.97496033 -104.37698364]
[165.14202881 -113.59552765]
[156.88841248 -126.12061310]
[153.08511353 -140.63063049]
[149.54544067 -126.05426025]
[146.00576782 -111.47788239]
[142.46609497 -96.90151215]
[139.80030823 -82.14028931]
[138.01783752 -67.24657440]
[136.23536682 -52.35285568]
[134.45291138 -37.45914078]
[132.67044067 -22.56542206]
[134.99682617 -15.55045891]
[130.74896240 -7.46383953]
[128.74494934 7.40168905]
[141.29905701 -0.80770361]
[156.00869751 2.12938023]
[164.44752502 14.53044605]
[161.78137207 29.29159927]
[149.53755188 37.95698166]
[134.72987366 35.56266785]
[125.84107971 23.48115158]
[122.51882172 38.10861206]
[124.10278320 45.32753372]
[119.03667450 52.92834854]
[115.49700165 67.50472260]
[111.95732880 82.08110046]
[108.41765594 96.65747070]
[109.93708801 100.20200348]
[109.88677216 104.39907074]
[108.01029968 108.53257751]
[104.38076019 111.79850769]
[100.19374847 126.20228577]
[101.39642334 132.70344543]
[99.43046570 138.03561401]
[95.66170502 140.96913147]
[91.04769135 155.24186707]
[86.43368530 169.51460266]
[91.60083008 181.33251953]
[87.46398163 193.12533569]
[76.75550079 198.75160217]
[71.92950439 212.95405579]
[67.10350037 227.15650940]
[62.27750778 241.35897827]
[57.45150757 255.56143188]
[57.65352631 264.69363403]
[52.44648743 269.93847656]
[47.40957260 284.06750488]
[42.37265778 298.19653320]
[47.18564987 310.16308594]
[42.69951630 321.82748413]
[31.82826614 327.13241577]
[26.58154869 341.18490601]
[21.33483124 355.23736572]
[24.80292892 373.32199097]
[10.84136105 383.95410156]
[5.80444479 398.08312988]
[0.76752853 412.21215820]
[7.90289736 423.63586426]
[7.16680765 436.88986206]
[-0.94830042 447.14788818]
[-13.30399513 450.80389404]
[-18.55071259 464.85635376]
[-23.79743195 478.90884399]
[-29.04414940 492.96130371]
[-15.79561806 500.04367065]
[-3.60932159 508.82873535]
[7.29726171 519.15979004]
[16.72949028 530.85235596]
[24.51903534 543.69781494]
[30.52688408 557.46697998]
[34.64582062 571.91406250]
[36.80233383 586.78118896]
[36.95793915 601.80316162]
[35.10986328 616.71185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 200]
[36 199]
[37 198]
[38 197]
[41 193]
[42 192]
[43 191]
[46 189]
[47 188]
[48 187]
[50 184]
[51 183]
[52 182]
[53 180]
[54 179]
[55 178]
[56 177]
[57 176]
[59 173]
[60 172]
[61 171]
[62 168]
[63 167]
[64 163]
[65 162]
[66 161]
[67 160]
[68 158]
[69 157]
[70 150]
[71 149]
[72 147]
[73 146]
[74 145]
[75 144]
[76 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 121]
[90 120]
[91 119]
[92 118]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
