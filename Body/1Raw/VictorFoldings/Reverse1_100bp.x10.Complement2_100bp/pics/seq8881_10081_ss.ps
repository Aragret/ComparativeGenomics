%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[65.06480408 527.02423096]
[56.83948517 539.58514404]
[47.32560349 551.20056152]
[36.63095474 561.73889160]
[24.87671852 571.08074951]
[12.19608402 579.12023926]
[-1.26727140 585.76629639]
[-15.36079597 590.94360352]
[-29.92480087 594.59356689]
[-44.79426193 596.67468262]
[-59.80070114 597.16351318]
[-74.77407837 596.05444336]
[-89.54473877 593.36004639]
[-103.94531250 589.11090088]
[-117.81263733 583.35504150]
[-130.98959351 576.15783691]
[-143.32685852 567.60070801]
[-154.68464661 557.78070068]
[-164.93426514 546.80902100]
[-173.95957947 534.81005859]
[-181.65834045 521.91967773]
[-187.94328308 508.28402710]
[-192.74322510 494.05755615]
[-196.00376892 479.40145874]
[-197.68795776 464.48184204]
[-197.77673340 449.46771240]
[-196.26905823 434.52917480]
[-193.18205261 419.83557129]
[-188.55065918 405.55334473]
[-182.42736816 391.84429932]
[-174.88157654 378.86380005]
[-165.99876404 366.75894165]
[-155.87959290 355.66687012]
[-144.63871765 345.71322632]
[-132.40348816 337.01086426]
[-119.31256104 329.65832520]
[-105.51426697 323.73895264]
[-91.16493988 319.31979370]
[-76.42716980 316.45092773]
[-61.46795273 315.16488647]
[-46.45678329 315.47622681]
[-31.56375313 317.38143921]
[-16.95760918 320.85888672]
[-2.80385303 325.86920166]
[3.67564273 312.34085083]
[10.15513897 298.81250000]
[16.63463402 285.28414917]
[23.11413002 271.75582886]
[29.59362602 258.22747803]
[36.07312012 244.69912720]
[42.55261612 231.17077637]
[49.03211212 217.64242554]
[54.69490051 203.75241089]
[59.52089691 189.54994202]
[58.25093079 184.94601440]
[59.85964584 179.49540710]
[64.70780182 175.00019836]
[69.95451355 160.94772339]
[75.20123291 146.89526367]
[80.34319305 132.80412292]
[85.38011169 118.67508698]
[90.41703033 104.54605865]
[94.81802368 90.20620728]
[98.57432556 75.68415070]
[102.33062744 61.16209030]
[106.08692932 46.64003372]
[109.84323120 32.11797333]
[113.59952545 17.59591293]
[117.35582733 3.07385421]
[121.11212921 -11.44820499]
[122.67265320 -26.36680984]
[122.00286865 -41.35184860]
[113.65707397 -54.79276657]
[120.81835175 -67.85283661]
[120.14856720 -82.83787537]
[119.47878265 -97.82291412]
[109.21130371 -113.10886383]
[117.89987183 -128.35601807]
[117.00705719 -143.32942200]
[116.11424255 -158.30282593]
[115.22142792 -173.27622986]
[114.32861328 -188.24963379]
[113.43579865 -203.22305298]
[112.54297638 -218.19645691]
[97.58265686 -219.65771484]
[83.03514862 -223.44140625]
[69.25868225 -229.45436096]
[56.59253693 -237.54850769]
[45.34861755 -247.52452087]
[35.80381775 -259.13671875]
[28.19318390 -272.09915161]
[22.70413589 -286.09262085]
[19.47184944 -300.77249146]
[18.57592010 -315.77728271]
[20.03841019 -330.73748779]
[23.82330704 -345.28469849]
[29.83740044 -359.06063843]
[37.93259430 -371.72613525]
[47.90953064 -382.96923828]
[59.52251816 -392.51306152]
[72.48558044 -400.12261963]
[86.47949219 -405.61053467]
[101.15963745 -408.84161377]
[116.16450500 -409.73629761]
[131.12458801 -408.27255249]
[145.67147827 -404.48648071]
[159.44694519 -398.47125244]
[172.11175537 -390.37500000]
[183.35401917 -380.39712524]
[192.89691162 -368.78335571]
[200.50540161 -355.81967163]
[205.99214172 -341.82531738]
[209.22200012 -327.14489746]
[210.11546326 -312.13995361]
[208.65049744 -297.17999268]
[204.86320496 -282.63342285]
[198.84683228 -268.85845947]
[190.74955750 -256.19430542]
[180.77076721 -244.95285034]
[169.15620422 -235.41093445]
[156.19187927 -227.80349731]
[142.19706726 -222.31791687]
[127.51638794 -219.08926392]
[128.40919495 -204.11585999]
[129.30201721 -189.14245605]
[130.19483948 -174.16905212]
[131.08764648 -159.19564819]
[131.98046875 -144.22224426]
[132.87327576 -129.24884033]
[141.70960999 -120.98773193]
[142.57597351 -108.52044678]
[134.46382141 -98.49269867]
[135.13360596 -83.50765991]
[135.80339050 -68.52262115]
[144.10127258 -56.15353012]
[136.98789978 -42.02163315]
[137.65768433 -27.03659439]
[143.88615417 -40.68233871]
[153.66314697 -52.05820847]
[166.21762085 -60.26705170]
[180.55947876 -64.66149139]
[195.55766296 -64.89495850]
[210.02934265 -60.94904327]
[222.83325195 -53.13493729]
[232.95957947 -42.06888962]
[239.60974121 -28.62362289]
[242.25929260 -13.85947895]
[240.69924927 1.05917680]
[235.05265808 14.95579720]
[225.76484680 26.73443604]
[213.56825256 35.46618271]
[199.42478943 40.46241379]
[184.44984436 41.32910538]
[169.82441711 37.99790573]
[156.70193481 30.73153114]
[146.11726379 20.10303497]
[138.90518188 6.95062447]
[135.63418579 -7.69190407]
[131.87788391 6.83015490]
[128.12158203 21.35221481]
[124.36528778 35.87427521]
[120.60898590 50.39633179]
[116.85268402 64.91838837]
[113.09638214 79.44045258]
[109.34008789 93.96250916]
[122.78077698 87.30310822]
[137.03718567 91.96733856]
[143.94256592 105.28333282]
[139.54122925 119.62306976]
[126.35444641 126.77210999]
[111.93620300 122.63514709]
[104.54605865 109.58296967]
[99.50914001 123.71200562]
[94.47222137 137.84103394]
[94.53825378 146.97521973]
[89.25370789 152.14196777]
[84.00698853 166.19444275]
[78.76026917 180.24691772]
[73.72335052 194.37594604]
[68.89735413 208.57839966]
[81.87998962 201.06500244]
[96.81092072 202.50277710]
[108.12129211 212.35546875]
[111.59260559 226.94827271]
[105.93014526 240.83843994]
[93.24588013 248.84526062]
[78.27071381 247.98240662]
[66.59002686 238.57170105]
[62.56045914 224.12193298]
[56.08096313 237.65026855]
[49.60146713 251.17861938]
[43.12197113 264.70697021]
[36.64247513 278.23532104]
[30.16297913 291.76364136]
[23.68348503 305.29199219]
[17.20398903 318.82034302]
[10.72449207 332.34869385]
[23.50010872 340.23638916]
[35.36492157 349.43737793]
[46.18449020 359.84741211]
[55.83622742 371.34857178]
[64.21076965 383.81045532]
[71.21322632 397.09194946]
[76.76425171 411.04251099]
[80.80094910 425.50408936]
[83.27758026 440.31280518]
[84.16609192 455.30090332]
[83.45639801 470.29852295]
[81.15655518 485.13571167]
[77.29261780 499.64440918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 197]
[45 196]
[46 195]
[47 194]
[48 193]
[49 192]
[50 191]
[51 190]
[52 189]
[53 180]
[54 179]
[57 178]
[58 177]
[59 176]
[60 174]
[61 173]
[62 172]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 137]
[72 136]
[74 134]
[75 133]
[76 132]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
