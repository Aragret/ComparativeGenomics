%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[98.57866669 751.44604492]
[84.10668182 747.44860840]
[70.13182068 741.96032715]
[56.80720901 735.04138184]
[44.27883530 726.76745605]
[32.68396759 717.22930908]
[22.14964676 706.53137207]
[12.79129028 694.79089355]
[4.71143484 682.13647461]
[-2.00139236 668.70678711]
[-7.27364159 654.64904785]
[-11.04754734 640.11718750]
[-13.28176117 625.27044678]
[-13.95180416 610.27148438]
[-13.05033302 595.28460693]
[-10.58722687 580.47412109]
[-6.58947134 566.00225830]
[-1.10086882 552.02752686]
[5.81844473 538.70306396]
[14.09265709 526.17492676]
[23.63111305 514.58026123]
[34.32929993 504.04620361]
[46.07000732 494.68814087]
[58.72459793 486.60858154]
[72.15441895 479.89608765]
[86.21232605 474.62417603]
[100.74428558 470.85061646]
[115.59109497 468.61676025]
[114.92131042 453.63171387]
[114.25151825 438.64669800]
[113.58173370 423.66165161]
[110.14270020 417.11987305]
[113.01521301 408.44885254]
[104.90240479 395.95761108]
[112.22539520 381.93316650]
[111.77878571 366.93981934]
[111.33218384 351.94647217]
[110.88557434 336.95312500]
[109.99275970 321.97970581]
[98.43398285 312.65609741]
[96.86399078 297.52368164]
[106.72185516 285.46298218]
[105.38362122 270.52279663]
[104.04538727 255.58261108]
[102.70715332 240.64242554]
[101.36891937 225.70223999]
[100.03068542 210.76205444]
[91.18876648 198.77581787]
[97.66401672 184.34039307]
[96.32578278 169.40020752]
[92.59807587 163.01852417]
[95.08054352 154.22789001]
[92.11046600 150.48788452]
[91.45830536 144.84237671]
[94.16114044 138.80862427]
[93.49135590 123.82357788]
[92.82157135 108.83853912]
[84.03943634 120.99889374]
[70.11631012 126.57981110]
[55.36643219 123.85198975]
[44.36020660 113.66066742]
[40.50802994 99.16374969]
[45.00354767 84.85324860]
[56.45376968 75.16343689]
[71.31072235 73.09680939]
[84.97081757 79.29373169]
[93.20140076 91.83426666]
[94.53963470 76.89408112]
[95.87786865 61.95389557]
[97.21610260 47.01371002]
[98.55433655 32.07352448]
[99.89257050 17.13333893]
[101.23080444 2.19315386]
[102.56903839 -12.74703121]
[102.90401459 -27.74328995]
[102.23423004 -42.72832870]
[101.56444550 -57.71336746]
[93.21865082 -71.15428925]
[100.37993622 -84.21435547]
[99.71015167 -99.19939423]
[96.20066833 -107.63274384]
[99.14362335 -114.41217804]
[98.69702148 -129.40553284]
[95.55290222 -135.22154236]
[95.78335571 -140.89991760]
[98.46704102 -144.85047913]
[98.46704102 -159.85047913]
[98.46704102 -174.85047913]
[87.57248688 -185.98359680]
[87.78617096 -201.19573975]
[98.46704102 -211.51341248]
[98.46704102 -226.51341248]
[90.72974396 -240.31358337]
[98.46704102 -253.04086304]
[98.46704102 -268.04086304]
[89.91521454 -277.69638062]
[90.22402191 -290.18991089]
[98.68266296 -298.83734131]
[98.90599060 -313.83566284]
[85.06976318 -320.19796753]
[75.02239990 -331.64218140]
[70.50465393 -346.18557739]
[72.29926300 -361.30838013]
[80.09529877 -374.39050293]
[92.54205322 -383.16534424]
[107.48303986 -386.11267090]
[122.32965088 -382.72183228]
[134.50962830 -373.58026123]
[141.91270447 -360.27182007]
[143.25625610 -345.10229492]
[138.30751038 -330.69985962]
[127.92385101 -319.55987549]
[113.90432739 -313.61233521]
[113.68099976 -298.61401367]
[123.04172516 -283.77001953]
[113.46704102 -268.04086304]
[113.46704102 -253.04086304]
[121.20434570 -240.31358337]
[113.46704102 -226.51341248]
[113.46704102 -211.51341248]
[124.14791107 -201.19573975]
[124.36159515 -185.98359680]
[113.46704102 -174.85047913]
[113.46704102 -159.85047913]
[113.46704102 -144.85047913]
[113.69036865 -129.85214233]
[114.13697815 -114.85878754]
[114.69519043 -99.86917877]
[115.36497498 -84.88414001]
[123.66285706 -72.51505280]
[116.54948425 -58.38315201]
[117.21926880 -43.39811325]
[117.88905334 -28.41307640]
[126.67118835 -40.57342529]
[140.59431458 -46.15434265]
[155.34419250 -43.42652130]
[166.35041809 -33.23520279]
[170.20259094 -18.73827934]
[165.70707703 -4.42778206]
[154.25685120 5.26202679]
[139.39990234 7.32865477]
[125.73980713 1.13173461]
[117.50922394 -11.40879726]
[116.17098999 3.53138804]
[114.83275604 18.47157288]
[113.49452209 33.41175842]
[112.15628815 48.35194397]
[110.81805420 63.29212952]
[109.47982025 78.23231506]
[108.14158630 93.17250061]
[107.80661011 108.16875458]
[108.47639465 123.15379333]
[109.14617920 138.13883972]
[110.03899384 153.11224365]
[111.26596832 168.06198120]
[112.60420227 183.00216675]
[121.54183960 196.05700684]
[114.97087097 209.42382812]
[116.30910492 224.36401367]
[117.64733887 239.30418396]
[118.98557281 254.24436951]
[120.32380676 269.18457031]
[121.66204071 284.12475586]
[133.50639343 294.24151611]
[134.65072632 309.41204834]
[124.93294525 320.64147949]
[127.55570221 324.10198975]
[128.81428528 327.84103394]
[128.78862000 331.39556885]
[127.70082855 334.37606812]
[125.87892914 336.50653076]
[126.32553101 351.49987793]
[126.77214050 366.49322510]
[127.21874237 381.48657227]
[135.36349487 395.05026245]
[128.00856018 408.00225830]
[128.56677246 422.99185181]
[129.23655701 437.97689819]
[129.90634155 452.96194458]
[130.57612610 467.94699097]
[145.56301880 468.84735107]
[160.37370300 471.30938721]
[174.84588623 475.30609131]
[188.82101440 480.79367065]
[202.14596558 487.71200562]
[214.67472839 495.98532104]
[226.27006531 505.52291870]
[236.80490112 516.22033691]
[246.16383362 527.96038818]
[254.24430847 540.61437988]
[260.95779419 554.04370117]
[266.23071289 568.10119629]
[270.00534058 582.63293457]
[272.24026489 597.47955322]
[272.91104126 612.47845459]
[272.01028442 627.46533203]
[269.54791260 642.27593994]
[265.55084229 656.74804688]
[260.06292725 670.72302246]
[253.14425659 684.04785156]
[244.87065125 696.57641602]
[235.33276367 708.17150879]
[224.63508606 718.70605469]
[212.89483643 728.06469727]
[200.24064636 736.14489746]
[186.81114197 742.85803223]
[172.75349426 748.13061523]
[158.22171021 751.90490723]
[143.37501526 754.13946533]
[128.37608337 754.80987549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 180]
[29 179]
[30 178]
[31 177]
[33 176]
[35 174]
[36 173]
[37 172]
[38 171]
[39 166]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[49 156]
[50 155]
[52 154]
[55 153]
[56 152]
[57 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[75 133]
[76 132]
[77 131]
[79 129]
[80 128]
[82 127]
[83 126]
[86 125]
[87 124]
[88 123]
[91 120]
[92 119]
[94 117]
[95 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
