%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[53.11680984 779.15704346]
[38.33916473 781.78289795]
[23.39206886 783.14599609]
[8.38321590 783.23663330]
[-6.57924986 782.05407715]
[-21.38752365 779.60687256]
[-35.93490982 775.91259766]
[-50.11659241 770.99798584]
[-63.83039093 764.89831543]
[-76.97749329 757.65765381]
[-89.46317291 749.32806396]
[-101.19747162 739.96966553]
[-112.09584045 729.64978027]
[-122.07975769 718.44287109]
[-131.07728577 706.42962646]
[-139.02359009 693.69659424]
[-145.86141968 680.33551025]
[-151.54151917 666.44268799]
[-156.02294922 652.11822510]
[-159.27342224 637.46533203]
[-161.26951599 622.58947754]
[-161.99685669 607.59802246]
[-161.45019531 592.59887695]
[-159.63348389 577.70007324]
[-156.55979919 563.00903320]
[-152.25128174 548.63159180]
[-146.73899841 534.67138672]
[-140.06265259 521.22888184]
[-132.27033997 508.40103149]
[-123.41821289 496.28024292]
[-113.57005310 484.95382690]
[-102.79681396 474.50341797]
[-91.17612457 465.00427246]
[-78.79171753 456.52490234]
[-65.73281097 449.12631226]
[-52.09350204 442.86187744]
[-37.97206497 437.77673340]
[-23.47024536 433.90747070]
[-8.69253349 431.28201294]
[6.25459814 429.91925049]
[21.26345253 429.82904053]
[36.22588730 431.01199341]
[38.67161560 416.21270752]
[41.11734390 401.41342163]
[43.56307220 386.61416626]
[46.00879669 371.81488037]
[33.28774643 363.99798584]
[24.50483704 351.87338257]
[21.02366829 337.27041626]
[23.40500832 322.40716553]
[31.31672478 309.55343628]
[43.57971954 300.68426514]
[58.34355164 297.17642212]
[60.78927994 282.37716675]
[63.12476349 267.56008911]
[65.34988403 252.72604370]
[67.57499695 237.89199829]
[61.81127930 224.15777588]
[71.51010895 211.65805054]
[73.73522949 196.82400513]
[71.94474030 193.78648376]
[71.53654480 189.73081970]
[72.97315216 185.31613159]
[76.40521240 181.38319397]
[79.29048920 166.66329956]
[82.17575836 151.94340515]
[85.06102753 137.22352600]
[87.94630432 122.50363159]
[90.83157349 107.78373718]
[93.49736786 93.02252197]
[95.94309998 78.22325134]
[98.38882446 63.42398071]
[100.83455658 48.62471008]
[91.90103149 35.86422729]
[94.59216309 20.89050102]
[106.81239319 12.45239067]
[95.70388794 22.53213120]
[80.92723083 25.11097908]
[67.06113434 19.38985443]
[58.40214920 7.14150620]
[57.63336563 -7.83877993]
[64.99299622 -20.90919876]
[78.20057678 -28.01974106]
[93.16359711 -26.96712494]
[105.24560547 -18.07751846]
[110.70287323 -4.10520267]
[115.10387421 -18.44504929]
[119.50487518 -32.78489685]
[123.90586853 -47.12474442]
[128.30686951 -61.46459198]
[132.70787048 -75.80443573]
[136.89488220 -90.20822144]
[140.86697388 -104.67274475]
[144.83906555 -119.13726807]
[139.14938354 -130.71267700]
[142.75552368 -142.67843628]
[153.20210266 -148.77726746]
[157.38911438 -163.18104553]
[161.57612610 -177.58482361]
[165.76313782 -191.98861694]
[152.44805908 -199.00955200]
[140.81906128 -208.56733704]
[131.35235596 -220.27059937]
[124.43558502 -233.64009094]
[120.35199738 -248.12832642]
[119.26879883 -263.14205933]
[121.23036194 -278.06643677]
[126.15635681 -292.29034424]
[133.84506226 -305.23129272]
[143.98162842 -316.35940552]
[156.15098572 -325.21896362]
[169.85478210 -331.44720459]
[184.53187561 -334.78903198]
[199.58123779 -335.10763550]
[214.38661194 -332.38995361]
[228.34172058 -326.74728394]
[240.87512207 -318.41070557]
[251.47358704 -307.72155762]
[259.70309448 -295.11758423]
[265.22665405 -281.11489868]
[267.81808472 -266.28689575]
[267.37127686 -251.24079895]
[263.90451050 -236.59271240]
[257.55975342 -222.94247437]
[248.59684753 -210.84906006]
[237.38278198 -200.80766296]
[224.37677002 -193.22949219]
[210.11140442 -188.42486572]
[195.17085266 -186.59053040]
[180.16691589 -187.80160522]
[175.97990417 -173.39781189]
[171.79289246 -158.99403381]
[167.60588074 -144.59025574]
[172.70166016 -127.79740143]
[159.30358887 -115.16516876]
[155.33149719 -100.70064545]
[151.35940552 -86.23612213]
[152.90115356 -81.71594238]
[151.61970520 -76.17925262]
[147.04771423 -71.40344238]
[142.64671326 -57.06359482]
[138.24571228 -42.72374725]
[133.84471130 -28.38389969]
[129.44372559 -14.04405212]
[125.04272461 0.29579532]
[121.61166382 14.89811802]
[130.46731567 26.81922913]
[128.19783020 41.86263275]
[115.63382721 51.07043457]
[113.18809509 65.86970520]
[110.74237061 80.66897583]
[108.29663849 95.46824646]
[110.30662537 100.31324005]
[109.45897675 105.93949890]
[105.55146790 110.66901398]
[102.66619110 125.38890076]
[99.78092194 140.10879517]
[96.89565277 154.82868958]
[94.01037598 169.54856873]
[91.12510681 184.26846313]
[88.56927490 199.04911804]
[86.34415436 213.88316345]
[91.94871521 228.67842102]
[82.40904236 240.11711121]
[80.18392944 254.95115662]
[77.95880890 269.78521729]
[79.78058624 278.73611450]
[75.58854675 284.82287598]
[73.14282227 299.62216187]
[85.99308014 307.69351196]
[94.75054932 320.03649902]
[98.10613251 334.75225830]
[95.57884979 349.59143066]
[87.58451843 362.29794312]
[75.36770630 370.95211792]
[60.80806732 374.26062012]
[58.36234283 389.05990601]
[55.91661453 403.85916138]
[53.47088623 418.65844727]
[51.02515793 433.45770264]
[65.57263947 437.15158081]
[79.75444794 442.06585693]
[93.46840668 448.16513062]
[106.61569214 455.40548706]
[119.10159302 463.73471069]
[130.83613586 473.09283447]
[141.73477173 483.41241455]
[151.71896362 494.61907959]
[160.71679688 506.63211060]
[168.66343689 519.36492920]
[175.50161743 532.72583008]
[181.18206787 546.61846924]
[185.66386414 560.94287109]
[188.91471863 575.59570312]
[190.91120911 590.47143555]
[191.63893127 605.46289062]
[191.09266663 620.46209717]
[189.27633667 635.36090088]
[186.20301819 650.05200195]
[181.89488220 664.42956543]
[176.38296509 678.38995361]
[169.70695496 691.83258057]
[161.91497803 704.66064453]
[153.06315613 716.78167725]
[143.21530151 728.10833740]
[132.44233704 738.55902100]
[120.82189178 748.05847168]
[108.43769836 756.53820801]
[95.37898254 763.93707275]
[81.73983002 770.20190430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[53 169]
[54 168]
[55 166]
[56 165]
[57 164]
[59 162]
[60 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 152]
[71 151]
[72 150]
[73 149]
[76 146]
[86 145]
[87 144]
[88 143]
[89 142]
[90 141]
[91 140]
[92 137]
[93 136]
[94 135]
[97 133]
[98 132]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
