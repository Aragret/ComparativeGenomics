%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[120.35115814 563.22760010]
[122.75700378 548.37469482]
[127.93054962 534.24560547]
[135.68478394 521.35113525]
[145.73939514 510.15731812]
[157.73091125 501.06884766]
[171.22583008 494.41427612]
[167.25373840 479.94976807]
[163.28164673 465.48522949]
[159.30953979 451.02072144]
[155.33744812 436.55618286]
[144.50610352 426.33215332]
[148.31282043 410.97573853]
[144.67880249 407.87686157]
[142.95289612 402.46221924]
[144.44465637 396.02124023]
[140.90498352 381.44485474]
[137.36531067 366.86849976]
[132.73217773 361.11038208]
[133.88316345 352.04876709]
[130.56091309 337.42129517]
[127.23864746 322.79382324]
[123.91638947 308.16638184]
[120.59413147 293.53890991]
[117.27187347 278.91146851]
[113.94961548 264.28399658]
[106.03003693 277.02291870]
[91.81449890 281.81027222]
[77.80216217 276.45730591]
[70.39926147 263.41134644]
[72.99031830 248.63681030]
[84.39072418 238.88844299]
[99.38838196 238.62306213]
[111.12752533 247.96354675]
[109.34505463 233.06983948]
[106.21093750 229.46617126]
[105.30735016 223.85542297]
[107.73806763 217.70700073]
[106.39983368 202.76681519]
[105.06159973 187.82662964]
[103.72336578 172.88644409]
[102.38513184 157.94625854]
[101.04689789 143.00607300]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[79.38173676 78.01697540]
[84.10798645 63.89210892]
[73.50633240 52.14836502]
[78.23258209 38.02349854]
[74.91032410 23.39603806]
[71.58806610 8.76857758]
[68.26580811 -5.85888243]
[64.94354248 -20.48634148]
[61.62128448 -35.11380386]
[58.07913208 -20.53803062]
[51.06855392 -7.27711725]
[41.01824951 3.85802412]
[28.54279900 12.18647671]
[14.40508080 17.19895363]
[-0.53037834 18.58893776]
[-15.35026932 16.27143097]
[-29.14834976 10.38815308]
[-41.08086395 1.29886508]
[-50.41812897 -10.44061756]
[-56.58917236 -24.11242104]
[-59.21662903 -38.88051224]
[-58.13983154 -53.84181213]
[-53.42462540 -68.08143616]
[-45.35934830 -80.72862244]
[-34.43719482 -91.00998688]
[-21.32605743 -98.29682922]
[-6.82768679 -102.14355469]
[8.17133427 -102.31492615]
[22.75381088 -98.80046844]
[36.02801895 -91.81510162]
[47.18223572 -81.78596497]
[55.53437424 -69.32636261]
[60.57370758 -55.19816589]
[58.48623657 -64.09087372]
[62.49518585 -70.29975128]
[64.49919891 -85.16527557]
[57.11178207 -102.03263092]
[68.37175751 -115.49293518]
[70.15422821 -130.38665771]
[71.93669128 -145.28036499]
[69.84922028 -154.17308044]
[73.85816956 -160.38195801]
[75.86219025 -175.24748230]
[77.86620331 -190.11300659]
[79.87021637 -204.97853088]
[81.87422943 -219.84407043]
[67.56508636 -224.47961426]
[54.31371307 -231.59584045]
[42.54607391 -240.96400452]
[32.64045715 -252.28295898]
[24.91528893 -265.18884277]
[19.61889458 -279.26675415]
[16.92153740 -294.06417847]
[16.90992355 -309.10543823]
[19.58442497 -323.90704346]
[24.85907173 -337.99313354]
[32.56430054 -350.91091919]
[42.45242691 -362.24514771]
[54.20558167 -371.63146973]
[67.44595337 -378.76815796]
[81.74791718 -383.42578125]
[96.65172577 -385.45465088]
[111.67827606 -384.78952026]
[126.34454346 -381.45178223]
[140.17904663 -375.54873657]
[152.73709106 -367.27011108]
[163.61495972 -356.88204956]
[172.46298218 -344.71847534]
[178.99673462 -331.17044067]
[183.00619507 -316.67340088]
[184.36245728 -301.69338989]
[183.02192688 -286.71197510]
[179.02770996 -272.21075439]
[172.50817871 -258.65582275]
[163.67294312 -246.48298645]
[152.80598450 -236.08351135]
[140.25665283 -227.79170227]
[126.42835236 -221.87411499]
[111.76560211 -218.52096558]
[96.73975372 -217.84005737]
[94.73574066 -202.97451782]
[92.73172760 -188.10899353]
[90.72771454 -173.24346924]
[88.72370148 -158.37792969]
[86.83040619 -143.49790955]
[85.04794312 -128.60418701]
[83.26548004 -113.71046448]
[90.49298859 -104.01048279]
[89.12987518 -91.58769226]
[79.36473083 -83.16126251]
[77.36071777 -68.29573822]
[75.46742249 -53.41569901]
[76.24874878 -38.43606186]
[79.57100677 -23.80860138]
[82.89326477 -9.18114185]
[86.21552277 5.44631863]
[89.53778076 20.07377815]
[92.86004639 34.70124054]
[103.22406769 45.39872742]
[98.73545074 60.56984711]
[109.09947205 71.26733398]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[119.82006836 111.33921814]
[132.52970886 103.37272644]
[147.52958679 103.43578339]
[160.17179871 111.50884247]
[166.53903198 125.09038544]
[164.65834045 139.97201538]
[155.11247253 151.54249573]
[140.85929871 156.21659851]
[126.31534576 152.54600525]
[115.98708344 141.66783142]
[117.32531738 156.60801697]
[118.66355133 171.54820251]
[120.00178528 186.48838806]
[121.34001923 201.42857361]
[122.67825317 216.36875916]
[124.23877716 231.28736877]
[126.02124023 246.18109131]
[128.57707214 260.96173096]
[131.89933777 275.58920288]
[135.22158813 290.21664429]
[138.54385376 304.84411621]
[141.86610413 319.47158813]
[145.18836975 334.09902954]
[148.51063538 348.72650146]
[151.94169617 363.32882690]
[155.48136902 377.90518188]
[159.02104187 392.48156738]
[162.77734375 407.00363159]
[173.89280701 418.26226807]
[169.80197144 432.58407593]
[173.77406311 447.04861450]
[177.74617004 461.51312256]
[181.71826172 475.97766113]
[185.69035339 490.44216919]
[200.69122314 489.27154541]
[215.64253235 490.96124268]
[230.00378418 495.45022583]
[243.25582886 502.57620239]
[254.91963196 512.08160400]
[264.57354736 523.62274170]
[271.86856079 536.78253174]
[276.54101562 551.08514404]
[278.42196655 566.01354980]
[277.44345093 581.02819824]
[273.64080811 595.58624268]
[267.15148926 609.16143799]
[258.21014404 621.26300049]
[247.13993835 631.45355225]
[234.34106445 639.36462402]
[220.27621460 644.71032715]
[205.45381165 647.29736328]
[190.40966797 647.03222656]
[175.68762207 643.92449951]
[161.81988525 638.08648682]
[149.30775452 629.72924805]
[138.60351562 619.15496826]
[130.09416199 606.74578857]
[124.08726501 592.95037842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[13 180]
[16 179]
[17 178]
[18 177]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[34 169]
[35 168]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 152]
[45 151]
[47 149]
[49 147]
[51 145]
[52 144]
[53 143]
[54 142]
[55 141]
[56 140]
[80 139]
[82 138]
[83 137]
[85 134]
[86 133]
[87 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
