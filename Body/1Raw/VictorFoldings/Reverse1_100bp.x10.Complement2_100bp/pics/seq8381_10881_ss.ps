%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[99.94027710 483.84161377]
[92.87644958 497.41958618]
[80.30513000 506.15002441]
[65.11511993 508.02676392]
[50.79696655 502.61849976]
[40.64087677 491.16809082]
[36.98064804 476.30667114]
[40.65737534 461.44934082]
[50.82616806 450.01019287]
[65.15031433 444.61785889]
[66.93278503 429.72412109]
[68.71524811 414.83041382]
[70.49771881 399.93670654]
[72.28018188 385.04296875]
[74.06264496 370.14926147]
[75.62316895 355.23065186]
[76.73881531 340.27221680]
[77.63163757 325.29879761]
[78.52445221 310.32537842]
[79.41726685 295.35198975]
[80.31008148 280.37857056]
[81.20289612 265.40518188]
[82.09571075 250.43176270]
[75.12966919 237.26652527]
[83.67465210 223.95135498]
[84.56747437 208.97795105]
[76.77542114 199.72535706]
[77.39669800 187.24345398]
[86.64298248 178.25073242]
[87.75862885 163.29228210]
[88.87428284 148.33383179]
[89.98992920 133.37536621]
[83.22067261 120.10787964]
[91.96295166 106.92140198]
[92.40955353 91.92805481]
[92.18622589 76.92971802]
[84.24432373 63.24626923]
[91.79127502 50.40521240]
[91.56794739 35.40687561]
[91.34461975 20.40853691]
[91.12129211 5.41019917]
[82.42665863 -4.11692905]
[82.54941559 -16.61367607]
[90.87837219 -25.38607788]
[90.87837219 -40.38607788]
[90.87837219 -55.38607788]
[90.87837219 -70.38607788]
[80.32130432 -78.75045776]
[76.56403351 -91.48204803]
[80.76335144 -103.86945343]
[91.17395020 -111.46213531]
[91.39727783 -126.46047211]
[91.62060547 -141.45881653]
[91.84393311 -156.45715332]
[92.06726074 -171.45549011]
[92.29058838 -186.45382690]
[84.75961304 -200.36766052]
[92.68554688 -212.97833252]
[92.90887451 -227.97666931]
[89.90757751 -236.60394287]
[93.24883270 -243.19619751]
[93.69544220 -258.18954468]
[83.48860931 -247.19770813]
[68.79294586 -244.19146729]
[55.08956909 -250.29208374]
[47.48950195 -263.22418213]
[48.82738113 -278.16439819]
[58.60420990 -289.54040527]
[73.17346954 -293.10925293]
[87.10119629 -287.53982544]
[95.19297791 -274.90823364]
[97.41809845 -289.74227905]
[99.64321899 -304.57632446]
[101.86833191 -319.41036987]
[104.09345245 -334.24441528]
[89.50031281 -337.75579834]
[75.26875305 -342.52569580]
[61.50707626 -348.51782227]
[48.32001877 -355.68658447]
[35.80794525 -363.97738647]
[24.06608391 -373.32714844]
[13.18379784 -383.66470337]
[3.24390793 -394.91140747]
[-5.67793465 -406.98159790]
[-13.51382828 -419.78347778]
[-20.20413589 -433.21960449]
[-25.69794083 -447.18768311]
[-29.95343018 -461.58145142]
[-32.93821335 -476.29132080]
[-34.62958145 -491.20535278]
[-35.01465225 -506.21005249]
[-34.09050369 -521.19122314]
[-31.86416245 -536.03485107]
[-28.35257912 -550.62792969]
[-23.58247375 -564.85943604]
[-17.59015465 -578.62103271]
[-10.42122459 -591.80798340]
[-2.13024640 -604.31994629]
[7.21968031 -616.06164551]
[17.55739594 -626.94378662]
[28.80422211 -636.88354492]
[40.87456131 -645.80517578]
[53.67655182 -653.64093018]
[67.11275482 -660.33105469]
[81.08092499 -665.82464600]
[95.47473907 -670.07995605]
[110.18465424 -673.06451416]
[125.09871674 -674.75567627]
[140.10342407 -675.14050293]
[155.08457947 -674.21618652]
[169.92816162 -671.98962402]
[184.52119446 -668.47784424]
[198.75262451 -663.70751953]
[212.51412964 -657.71502686]
[225.70098877 -650.54589844]
[238.21282959 -642.25476074]
[249.95442200 -632.90466309]
[260.83642578 -622.56677246]
[270.77600098 -611.31982422]
[279.69750977 -599.24932861]
[287.53305054 -586.44726562]
[294.22296143 -573.01098633]
[299.71636963 -559.04272461]
[303.97146606 -544.64886475]
[306.95584106 -529.93890381]
[308.64678955 -515.02478027]
[309.03143311 -500.02008057]
[308.10687256 -485.03894043]
[305.88012695 -470.19540405]
[302.36813354 -455.60241699]
[297.59762573 -441.37103271]
[291.60491943 -427.60961914]
[284.43560791 -414.42285156]
[276.14428711 -401.91113281]
[266.79403687 -390.16967773]
[256.45599365 -379.28781128]
[245.20889282 -369.34838867]
[233.13830566 -360.42706299]
[220.33610535 -352.59170532]
[206.89970398 -345.90197754]
[192.93138123 -340.40875244]
[178.53744507 -336.15386963]
[163.82745361 -333.16970825]
[148.91334534 -331.47897339]
[133.90861511 -331.09451294]
[118.92749023 -332.01931763]
[116.70237732 -317.18527222]
[114.47725677 -302.35122681]
[112.25214386 -287.51718140]
[110.02702332 -272.68313599]
[108.68878937 -257.74295044]
[108.24218750 -242.74958801]
[107.90721130 -227.75334167]
[107.68388367 -212.75500488]
[115.23083496 -199.91394043]
[107.28892517 -186.23049927]
[107.06559753 -171.23216248]
[106.84226990 -156.23382568]
[106.61894226 -141.23548889]
[106.39561462 -126.23714447]
[106.17228699 -111.23880768]
[118.39084625 -99.68260956]
[118.47251892 -82.52719879]
[105.87837219 -70.38607788]
[105.87837219 -55.38607788]
[105.87837219 -40.38607788]
[105.87837219 -25.38607788]
[115.45906830 -10.68311119]
[106.11962891 5.18687153]
[106.34295654 20.18520927]
[106.56628418 35.18354797]
[106.78961182 50.18188477]
[114.71554565 62.79254913]
[107.18456268 76.70639038]
[107.40789032 91.70472717]
[118.60532379 81.72386932]
[133.58790588 82.44641113]
[143.77294922 93.45845032]
[143.32598877 108.45178986]
[132.50305176 118.83756256]
[117.50403595 118.66632843]
[106.92140198 108.03704834]
[113.61086273 122.37447357]
[104.94837952 134.49102783]
[103.83273315 149.44947815]
[102.71708679 164.40792847]
[101.60143280 179.36637878]
[109.97972107 195.76411438]
[99.54087830 209.87077332]
[98.64806366 224.84417725]
[105.55023956 239.08041382]
[97.06912231 251.32458496]
[96.17630005 266.29800415]
[95.28348541 281.27139282]
[94.39067078 296.24481201]
[93.49785614 311.21820068]
[92.60504150 326.19161987]
[91.71222687 341.16500854]
[94.32492828 347.23834229]
[93.58879089 352.87350464]
[90.56335449 356.56887817]
[92.99407196 362.71731567]
[92.09048462 368.32806396]
[88.95636749 371.93173218]
[87.17389679 386.82543945]
[85.39143372 401.71917725]
[83.60896301 416.61288452]
[81.82649994 431.50659180]
[80.04403687 446.40032959]
[92.69116974 455.02053833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 201]
[17 198]
[18 197]
[19 196]
[20 195]
[21 194]
[22 193]
[23 192]
[25 190]
[26 189]
[29 187]
[30 186]
[31 185]
[32 184]
[34 182]
[35 175]
[36 174]
[38 172]
[39 171]
[40 170]
[41 169]
[44 167]
[45 166]
[46 165]
[47 164]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[58 154]
[59 153]
[61 152]
[62 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
