%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[82.67536926 597.07757568]
[71.36657715 606.97998047]
[58.64787292 614.99127197]
[44.83246231 620.91418457]
[30.26056480 624.60284424]
[15.29102421 625.96643066]
[0.29248124 624.97137451]
[-14.36571312 621.64208984]
[-28.32258606 616.06066895]
[-41.23443985 608.36456299]
[-52.78330231 598.74322510]
[-62.68478012 587.43359375]
[-70.69503784 574.71423340]
[-76.61681366 560.89831543]
[-80.30427551 546.32611084]
[-81.66662598 531.35650635]
[-80.67030334 516.35803223]
[-77.33985138 501.70010376]
[-71.75728607 487.74368286]
[-64.06008148 474.83245850]
[-54.43778992 463.28439331]
[-43.12736511 453.38385010]
[-30.40733719 445.37466431]
[-16.59095001 439.45401001]
[-2.01844215 435.76776123]
[12.95132256 434.40664673]
[27.94970131 435.40420532]
[31.27196121 420.77673340]
[34.59421921 406.14929199]
[29.86797142 392.02441406]
[40.46962357 380.28067017]
[35.74337387 366.15579224]
[46.34502792 354.41204834]
[40.25875092 337.95230103]
[52.88118744 324.54498291]
[55.98529434 309.86968994]
[59.08940506 295.19439697]
[62.19351578 280.51907349]
[52.42597961 266.82843018]
[55.64569855 249.97766113]
[70.34002686 240.48576355]
[73.22529602 225.76586914]
[76.11057281 211.04598999]
[78.99584198 196.32609558]
[81.44156647 181.52682495]
[83.44558716 166.66128540]
[85.44960022 151.79576111]
[87.45361328 136.93023682]
[89.45762634 122.06470490]
[91.46163940 107.19918060]
[93.35492706 92.31914520]
[95.13739777 77.42543030]
[96.91986084 62.53171158]
[83.69447327 69.60907745]
[69.85562897 63.82233429]
[65.60481262 49.43725204]
[74.07556152 37.05797958]
[89.02355957 35.81005478]
[99.42917633 46.61183548]
[102.31444550 31.89194298]
[105.19972229 17.17205238]
[93.05935669 7.98658228]
[86.13923645 -5.50411558]
[85.76426697 -20.59979630]
[91.95528412 -34.30498886]
[103.43551636 -43.92339706]
[117.89351654 -47.58831406]
[120.77879333 -62.30820465]
[123.66406250 -77.02809906]
[126.54933929 -91.74798584]
[129.43460083 -106.46788025]
[132.31988525 -121.18777466]
[134.32389832 -136.05329895]
[135.43954468 -151.01174927]
[136.55519104 -165.97019958]
[137.67083740 -180.92866516]
[138.56365967 -195.90206909]
[139.23344421 -210.88710022]
[123.80122375 -215.03976440]
[109.67709351 -222.50245667]
[97.56050110 -232.90226746]
[88.05072021 -245.72087097]
[81.61722565 -260.32046509]
[78.57652283 -275.97540283]
[79.07656097 -291.90832520]
[83.08953857 -307.32876587]
[90.41346741 -321.47225952]
[100.68226624 -333.63845825]
[113.38414764 -343.22555542]
[127.88703156 -349.76025391]
[143.47007751 -352.92098999]
[143.69340515 -367.91931152]
[143.80506897 -382.91888428]
[143.80506897 -397.91888428]
[143.80506897 -412.91888428]
[143.80506897 -427.91888428]
[143.80506897 -442.91888428]
[129.55239868 -448.08001709]
[117.92647552 -457.80697632]
[110.33117676 -470.92517090]
[107.68367004 -485.85052490]
[110.30366516 -500.78076172]
[117.87477875 -513.91296387]
[129.48275757 -523.66131592]
[143.72589111 -528.84869385]
[158.88426208 -528.84869385]
[173.12739563 -523.66131592]
[184.73536682 -513.91296387]
[192.30648804 -500.78076172]
[194.92648315 -485.85052490]
[192.27897644 -470.92517090]
[184.68367004 -457.80697632]
[173.05773926 -448.08001709]
[158.80506897 -442.91888428]
[158.80506897 -427.91888428]
[158.80506897 -412.91888428]
[158.80506897 -397.91888428]
[158.80506897 -382.91888428]
[161.94857788 -376.23007202]
[158.69174194 -367.69598389]
[158.46841431 -352.69766235]
[172.20745850 -349.66806030]
[185.09011841 -344.00039673]
[196.61506653 -335.91299438]
[206.33337402 -325.71838379]
[213.86605835 -313.81121826]
[218.91871643 -300.65304565]
[221.29316711 -286.75433350]
[220.89518738 -272.65469360]
[217.73820496 -258.90197754]
[211.94287109 -246.03091431]
[203.73251343 -234.54241943]
[193.42446899 -224.88397217]
[181.41780090 -217.43231201]
[168.17791748 -212.47863770]
[154.21847534 -210.21731567]
[153.54869080 -195.23228455]
[156.05329895 -191.16583252]
[156.02998352 -185.48283386]
[152.62928772 -179.81301880]
[151.51364136 -164.85455322]
[150.39799500 -149.89610291]
[149.28234863 -134.93765259]
[159.96981812 -145.46276855]
[174.78504944 -147.80981445]
[188.20234680 -141.10339355]
[195.21739197 -127.84484100]
[193.21372986 -112.97926331]
[182.93869019 -102.05116272]
[168.22459412 -99.13643646]
[154.55946350 -105.32221985]
[147.03977966 -118.30249786]
[144.15449524 -103.58261108]
[141.26922607 -88.86271667]
[138.38395691 -74.14282227]
[135.49868774 -59.42293549]
[132.61340332 -44.70304108]
[144.61796570 -35.85115051]
[151.61755371 -22.61048126]
[152.17646790 -7.58222055]
[146.13034058 6.25485039]
[134.62930298 16.13478279]
[119.91960907 20.05732536]
[117.03433990 34.77721786]
[114.14906311 49.49710846]
[111.81358337 64.31417847]
[110.03111267 79.20789337]
[108.24864960 94.10160828]
[110.49381256 101.84317017]
[106.32716370 109.20319366]
[104.32315063 124.06871796]
[102.31913757 138.93424988]
[100.31512451 153.79977417]
[98.31111145 168.66529846]
[96.30709839 183.53083801]
[98.09827423 187.48629761]
[98.49745178 191.41123962]
[97.68515015 194.87181091]
[95.96424866 197.53735352]
[93.71573639 199.21136475]
[90.83045959 213.93125916]
[87.94519043 228.65115356]
[85.05991364 243.37103271]
[93.81094360 253.60989380]
[95.04911804 266.82644653]
[88.54547882 278.17477417]
[76.86882019 283.62319946]
[73.76470947 298.29849243]
[70.66059875 312.97378540]
[67.55648804 327.64910889]
[73.92507172 338.86532593]
[71.03753662 351.02450562]
[60.97248840 357.73431396]
[65.46110535 372.90542603]
[55.09708405 383.60293579]
[59.58570480 398.77404785]
[49.22167969 409.47152710]
[45.89942169 424.09899902]
[42.57716370 438.72647095]
[56.53495789 444.30557251]
[69.44808197 451.99957275]
[80.99852753 461.61901855]
[90.90187073 472.92700195]
[98.91423035 485.64501953]
[104.83827972 499.45996094]
[108.52815247 514.03155518]
[109.89296722 529.00097656]
[108.89912415 543.99957275]
[105.57109833 558.65808105]
[99.99083710 572.61541748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 199]
[28 198]
[29 197]
[31 195]
[33 193]
[35 190]
[36 189]
[37 188]
[38 187]
[41 183]
[42 182]
[43 181]
[44 180]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[50 170]
[51 168]
[52 167]
[53 166]
[59 165]
[60 164]
[61 163]
[67 157]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[73 143]
[74 142]
[75 141]
[76 140]
[77 137]
[78 136]
[91 121]
[92 120]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
