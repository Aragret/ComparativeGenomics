%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[97.79121399 586.19573975]
[100.19379425 601.06317139]
[99.34368134 616.09954834]
[95.28063965 630.60144043]
[88.19470978 643.89068604]
[78.41730499 655.34564209]
[66.40573883 664.43060303]
[52.72181320 670.72064209]
[38.00554657 673.92150879]
[22.94524574 673.88348389]
[8.24530983 670.60845947]
[-5.40671730 664.24951172]
[-17.37230682 655.10406494]
[-27.09180641 643.59991455]
[-34.11061859 630.27514648]
[-38.10046005 615.75286865]
[-38.87471771 600.71246338]
[-36.39717484 585.85729980]
[-30.78372002 571.88220215]
[-22.29689789 559.44085693]
[-11.33365250 549.11505127]
[1.59324336 541.38787842]
[15.87917614 536.62066650]
[30.85596657 535.03643799]
[45.82312393 536.70922852]
[50.64912033 522.50677490]
[55.47511673 508.30435181]
[48.68168259 495.09884644]
[53.37361145 480.62680054]
[67.27080536 473.59075928]
[72.09680176 459.38830566]
[76.92279816 445.18585205]
[81.74879456 430.98339844]
[86.57479095 416.78094482]
[91.40078735 402.57846069]
[93.84651947 387.77920532]
[93.84651947 372.77920532]
[93.84651947 357.77920532]
[93.84651947 342.77920532]
[86.10921478 330.05194092]
[93.84651947 316.25177002]
[93.84651947 301.25177002]
[93.84651947 286.25177002]
[93.62319183 271.25341797]
[93.17658234 256.26007080]
[92.72998047 241.26672363]
[89.92986298 237.39782715]
[89.53043365 231.72883606]
[92.50000000 225.82177734]
[92.50000000 210.82177734]
[92.50000000 195.82177734]
[92.50000000 180.82177734]
[77.77803040 178.06788635]
[63.81266022 172.65594482]
[51.07939148 164.77024841]
[40.01176071 154.67926025]
[30.98659325 142.72656250]
[24.31117439 129.31913757]
[20.21278954 114.91345215]
[18.83097839 100.00000000]
[20.21278954 85.08654785]
[24.31117439 70.68086243]
[30.98659325 57.27343369]
[40.01176071 45.32074356]
[51.07939148 35.22975922]
[63.81266022 27.34405327]
[77.77803040 21.93211937]
[92.50000000 19.17822075]
[92.50000000 4.17822075]
[92.50000000 -10.82177925]
[92.50000000 -25.82177925]
[82.92531586 -41.55095291]
[92.28604126 -56.39493179]
[92.06271362 -71.39327240]
[79.28919983 -83.34553528]
[79.11544800 -100.50026703]
[91.16059113 -112.23709869]
[83.01583862 -125.80078125]
[90.37077332 -138.75277710]
[80.33201599 -154.18991089]
[89.24662781 -169.30599976]
[88.57684326 -184.29104614]
[79.60240936 -193.55508423]
[79.35304260 -206.04994202]
[87.41712189 -215.06643677]
[86.97051239 -230.05978394]
[86.52391052 -245.05313110]
[86.07730103 -260.04647827]
[85.63069916 -275.03982544]
[84.73787689 -290.01324463]
[83.39964294 -304.95343018]
[82.06140900 -319.89361572]
[80.72317505 -334.83380127]
[65.97188568 -338.18856812]
[52.98028946 -345.93930054]
[43.02117920 -357.32662964]
[37.07024384 -371.23495483]
[35.71049881 -386.30166626]
[39.07515335 -401.05072021]
[46.83457565 -414.03710938]
[58.22857666 -423.98858643]
[72.14089203 -429.93020630]
[87.20852661 -431.27984619]
[101.95530701 -427.90533447]
[114.93650818 -420.13720703]
[124.88034821 -408.73654175]
[130.81263733 -394.82025146]
[132.15219116 -379.75170898]
[128.76777649 -365.00717163]
[120.99095154 -352.03118896]
[109.58362579 -342.09500122]
[95.66336060 -336.17202759]
[97.00159454 -321.23184204]
[98.33982849 -306.29165649]
[99.67806244 -291.35147095]
[101.74022675 -289.45263672]
[103.17447662 -286.62252808]
[103.62235260 -283.09622192]
[102.81700897 -279.23410034]
[100.62404633 -275.48645020]
[101.07064819 -260.49310303]
[101.51725769 -245.49974060]
[101.96386719 -230.50639343]
[102.41046906 -215.51304626]
[112.42467499 -201.10185242]
[103.56188202 -184.96083069]
[104.23166656 -169.97579956]
[112.94403076 -161.58404541]
[113.62467194 -149.10523987]
[105.36412048 -139.19938660]
[113.47692871 -126.70812225]
[106.15394592 -112.68370056]
[116.67643738 -105.24685669]
[121.05972290 -92.92334747]
[117.49241638 -80.13722992]
[107.06105042 -71.61660004]
[107.28437805 -56.61825943]
[115.74301910 -47.97083664]
[116.05182648 -35.47730255]
[107.50000000 -25.82177925]
[107.50000000 -10.82177925]
[107.50000000 4.17822075]
[107.50000000 19.17822075]
[122.22196960 21.93211937]
[136.18733215 27.34405327]
[148.92060852 35.22975922]
[159.98823547 45.32074356]
[169.01341248 57.27343369]
[175.68882751 70.68086243]
[179.78721619 85.08654785]
[181.16902161 100.00000000]
[179.78721619 114.91345215]
[175.68882751 129.31913757]
[169.01341248 142.72656250]
[159.98823547 154.67926025]
[148.92060852 164.77024841]
[136.18733215 172.65594482]
[122.22196960 178.06788635]
[107.50000000 180.82177734]
[107.50000000 195.82177734]
[107.50000000 210.82177734]
[107.50000000 225.82177734]
[107.72332764 240.82011414]
[108.16993713 255.81346130]
[108.61653900 270.80682373]
[111.76065826 276.62283325]
[111.53019714 282.30120850]
[108.84651947 286.25177002]
[108.84651947 301.25177002]
[108.84651947 316.25177002]
[116.58381653 330.05194092]
[108.84651947 342.77920532]
[108.84651947 357.77920532]
[108.84651947 372.77920532]
[108.84651947 387.77920532]
[115.56628418 374.36859131]
[125.48821259 363.11889648]
[137.95420837 354.77630615]
[152.13745117 349.89413452]
[167.09721375 348.79617310]
[181.84126282 351.55529785]
[195.39170837 357.98846436]
[206.84976196 367.66900635]
[215.45545959 379.95486450]
[220.63804626 394.03109741]
[222.05374146 408.96414185]
[219.60865784 423.76351929]
[213.46498108 437.44766235]
[204.03019714 449.10888672]
[191.93006897 457.97381592]
[177.96716309 463.45446777]
[163.06759644 465.18728638]
[148.21957397 463.05734253]
[134.40794373 457.20593262]
[122.54877472 448.02117920]
[113.42863464 436.11221313]
[107.65243530 422.26898193]
[105.60324860 407.40447998]
[100.77724457 421.60693359]
[95.95124817 435.80938721]
[91.12525177 450.01184082]
[86.29925537 464.21429443]
[81.47325897 478.41674805]
[88.20665741 492.46307373]
[83.11008453 506.79763794]
[69.67757416 513.13031006]
[64.85157776 527.33276367]
[60.02557755 541.53521729]
[72.91333008 549.32751465]
[83.82435608 559.70849609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 208]
[26 207]
[27 206]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 175]
[37 174]
[38 173]
[39 172]
[41 170]
[42 169]
[43 168]
[44 165]
[45 164]
[46 163]
[49 162]
[50 161]
[51 160]
[52 159]
[68 143]
[69 142]
[70 141]
[71 140]
[73 137]
[74 136]
[77 132]
[79 130]
[81 127]
[82 126]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 115]
[91 114]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
