%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[134.32270813 626.02282715]
[134.79142761 610.96533203]
[138.59950256 596.38983154]
[145.55592346 583.02734375]
[155.31176758 571.54815674]
[167.37768555 562.52813721]
[181.14843750 556.41961670]
[178.26316833 541.69970703]
[175.37789917 526.97979736]
[172.49261475 512.25994873]
[169.60734558 497.54003906]
[166.61257935 482.84201050]
[163.50846863 468.16671753]
[160.40435791 453.49142456]
[156.97329712 438.88909912]
[153.21699524 424.36703491]
[149.46069336 409.84497070]
[145.70439148 395.32290649]
[141.94808960 380.80087280]
[131.27015686 370.41668701]
[135.30508423 355.11865234]
[122.38078308 347.80441284]
[118.36448669 333.13049316]
[126.12395477 319.62390137]
[122.36765289 305.10183716]
[118.61135101 290.57977295]
[114.85504913 276.05770874]
[110.99074554 261.56402588]
[107.01864624 247.09950256]
[103.04655457 232.63497925]
[97.17584991 246.43841553]
[84.83460999 254.96447754]
[69.84688568 255.57125854]
[56.85679626 248.07075500]
[49.88945770 234.78707886]
[51.10377884 219.83630371]
[60.12348557 207.85110474]
[74.15372467 202.54522705]
[88.84707642 205.56275940]
[99.65077209 215.96888733]
[97.64675903 201.10336304]
[95.64274597 186.23783875]
[93.63873291 171.37229919]
[85.97650909 184.26766968]
[72.60681152 191.06848145]
[57.67238617 189.66746521]
[45.80082321 180.49871826]
[40.67065811 166.40327454]
[43.87152863 151.74876404]
[54.41160965 141.07606506]
[69.02494049 137.69219971]
[83.18342590 142.64572144]
[92.50000000 154.40194702]
[92.50000000 139.40194702]
[92.50000000 124.40194702]
[92.50000000 109.40194702]
[92.27667236 94.40361023]
[91.83006287 79.41025543]
[91.38346100 64.41690826]
[90.93685150 49.42355728]
[80.89809418 33.98643112]
[89.81271362 18.87032890]
[82.97917175 32.22333145]
[71.83205414 42.26035690]
[57.83796692 47.66085815]
[42.83805847 47.71430969]
[28.80583763 42.41367722]
[17.58747673 32.45634842]
[10.65894508 19.15238380]
[8.93181133 4.25214911]
[12.63331032 -10.28397560]
[21.27644348 -22.54351234]
[33.72406006 -30.91350746]
[48.33846283 -34.29274368]
[63.19687653 -32.23662567]
[76.34441376 -25.01567268]
[86.05130005 -13.57992268]
[91.04079437 0.56840467]
[93.70658875 -14.19281292]
[96.37238312 -28.95402908]
[99.03817749 -43.71524811]
[101.70397949 -58.47646332]
[104.36977386 -73.23767853]
[105.81919098 -88.16748810]
[106.04251862 -103.16582489]
[106.15418243 -118.16541290]
[106.15418243 -133.16540527]
[98.41688538 -146.96559143]
[106.15418243 -159.69285583]
[106.15418243 -174.69285583]
[105.93085480 -189.69119263]
[105.48425293 -204.68453979]
[97.33950043 -218.24822998]
[104.69442749 -231.20022583]
[104.24782562 -246.19357300]
[103.80121613 -261.18692017]
[89.40119934 -265.92141724]
[77.49081421 -275.29791260]
[69.50830841 -288.18414307]
[66.41759491 -303.02407837]
[68.59189606 -318.02566528]
[75.76866150 -331.37744141]
[87.08125305 -341.46710205]
[101.16362762 -347.07626343]
[116.31526184 -347.52755737]
[130.70652771 -342.76657104]
[142.59960938 -333.36813354]
[150.55836487 -320.46719360]
[153.62171936 -305.62161255]
[151.41978455 -290.62402344]
[144.21841431 -277.28552246]
[132.88725281 -267.21673584]
[118.79457092 -261.63354492]
[119.24117279 -246.64018250]
[119.68778229 -231.64683533]
[127.80059052 -219.15557861]
[120.47760010 -205.13114929]
[120.92420959 -190.13780212]
[123.72431946 -186.26890564]
[124.12374878 -180.59989929]
[121.15418243 -174.69285583]
[121.15418243 -159.69285583]
[128.89147949 -146.96559143]
[121.15418243 -133.16540527]
[121.15418243 -118.16541290]
[124.29768372 -111.47660065]
[121.04085541 -102.94249725]
[120.81752777 -87.94416046]
[129.45893860 -100.20491028]
[142.76605225 -107.12740326]
[157.76600647 -107.16514587]
[171.10777283 -100.30970764]
[179.81077576 -88.09259796]
[181.93074036 -73.24316406]
[176.99406433 -59.07880020]
[166.10360718 -48.76386261]
[151.69232178 -44.60273743]
[136.97973633 -47.52502823]
[125.25267792 -56.87788773]
[119.13098907 -70.57188416]
[116.46519470 -55.81066895]
[113.79940033 -41.04944992]
[111.13359833 -26.28823471]
[108.46780396 -11.52701664]
[105.80200958 3.23420024]
[104.79775238 18.20054436]
[113.51010895 26.59228897]
[114.19075775 39.07109070]
[105.93020630 48.97695160]
[106.37680817 63.97030258]
[106.82341766 78.96365356]
[107.27001953 93.95700073]
[110.17441559 98.32489014]
[110.42481232 104.00913239]
[107.50000000 109.40194702]
[107.50000000 124.40194702]
[107.50000000 139.40194702]
[107.50000000 154.40194702]
[108.50425720 169.36828613]
[110.50827026 184.23382568]
[112.51229095 199.09934998]
[114.51630402 213.96487427]
[117.51107788 228.66287231]
[121.48316956 243.12739563]
[125.45526886 257.59191895]
[130.74543762 265.03854370]
[129.37710571 272.30142212]
[133.13340759 286.82348633]
[136.88970947 301.34552002]
[140.64601135 315.86758423]
[153.98138428 323.91778564]
[157.58393860 338.69869995]
[149.82714844 351.36236572]
[160.77375793 362.78524780]
[156.47015381 377.04455566]
[160.22645569 391.56661987]
[163.98275757 406.08868408]
[167.73904419 420.61074829]
[171.49534607 435.13278198]
[175.15542603 438.85449219]
[176.85224915 443.17584229]
[176.68617249 447.24859619]
[175.07965088 450.38729858]
[178.18376160 465.06262207]
[181.28787231 479.73791504]
[186.12544250 487.48620605]
[184.32723999 494.65475464]
[187.21250916 509.37463379]
[190.09777832 524.09454346]
[192.98306274 538.81445312]
[195.86833191 553.53430176]
[210.92616272 553.99206543]
[225.50445557 557.78955078]
[238.87199402 564.73626709]
[250.35824585 574.48376465]
[259.38708496 586.54315186]
[265.50561523 600.30944824]
[268.40692139 615.09222412]
[267.94549561 630.14990234]
[264.14447021 644.72729492]
[257.19451904 658.09313965]
[247.44425964 669.57702637]
[235.38272095 678.60296631]
[221.61491394 684.71813965]
[206.83145142 687.61590576]
[191.77384949 687.15081787]
[177.19738770 683.34625244]
[163.83322144 676.39306641]
[152.35169983 666.64001465]
[143.32870483 654.57629395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[12 185]
[13 184]
[14 183]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[21 173]
[24 170]
[25 169]
[26 168]
[27 167]
[28 165]
[29 164]
[30 163]
[40 162]
[41 161]
[42 160]
[43 159]
[53 158]
[54 157]
[55 156]
[56 155]
[57 152]
[58 151]
[59 150]
[60 149]
[62 146]
[78 145]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 128]
[85 127]
[86 125]
[87 124]
[89 122]
[90 121]
[91 118]
[92 117]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
