%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[166.79084778 701.05871582]
[151.73947144 703.83624268]
[137.12478638 699.28985596]
[126.30516815 688.46417236]
[121.76686096 673.84698486]
[124.55274200 658.79718018]
[134.02264404 646.77307129]
[148.00042725 640.53765869]
[148.89324951 625.56427002]
[149.78607178 610.59088135]
[150.67887878 595.61743164]
[136.15292358 589.54406738]
[124.56506348 578.84564209]
[117.32878876 564.80218506]
[115.33537292 549.10327148]
[118.84405518 533.64459229]
[127.44853210 520.29937744]
[140.12391663 510.69104004]
[155.34877014 505.99597168]
[156.01855469 491.01095581]
[156.68835449 476.02590942]
[157.35813904 461.04086304]
[158.02792358 446.05581665]
[157.46971130 431.06622314]
[155.68724060 416.17251587]
[153.90476990 401.27877808]
[152.12231445 386.38507080]
[150.33984375 371.49136353]
[148.55737305 356.59762573]
[146.77491760 341.70391846]
[135.51493835 328.24362183]
[142.90235901 311.37625122]
[133.53404236 299.79678345]
[139.35826111 285.08663940]
[137.35424805 270.22109985]
[134.35946655 255.52308655]
[130.38737488 241.05856323]
[126.41528320 226.59403992]
[121.61275482 220.97644043]
[122.49343872 211.88455200]
[118.73713684 197.36250305]
[105.77979279 185.52720642]
[110.84749603 167.82409668]
[106.87539673 153.35957336]
[102.90330505 138.89505005]
[98.93120575 124.43052673]
[94.95910645 109.96600342]
[90.87944031 95.53144836]
[86.69242859 81.12767029]
[82.50542450 66.72388458]
[71.22356415 55.63198471]
[75.10070801 41.25085068]
[70.91369629 26.84706879]
[66.40606689 12.54038334]
[61.58007050 -1.66207278]
[56.75407028 -15.86452866]
[42.85688400 -22.90056992]
[38.16495514 -37.37262726]
[44.95838928 -50.57811356]
[40.13238907 -64.78057098]
[35.30639267 -78.98302460]
[23.54050827 -89.56010437]
[26.77163315 -104.10001373]
[21.94563675 -118.30246735]
[7.81943512 -130.11483765]
[11.90665436 -147.18122864]
[6.86973763 -161.31025696]
[1.83282149 -175.43928528]
[-3.99654722 -182.47180176]
[-3.17219830 -189.81632996]
[-17.06938744 -196.85237122]
[-21.76131630 -211.32443237]
[-14.96788216 -224.52992249]
[-26.73376656 -235.10699463]
[-23.50264168 -249.64691162]
[-28.32863808 -263.84936523]
[-33.15463638 -278.05181885]
[-37.98063278 -292.25427246]
[-52.87081146 -290.11013794]
[-67.90142822 -290.73883057]
[-82.56054688 -294.11889648]
[-96.34888458 -300.13522339]
[-108.79681396 -308.58291626]
[-119.48036957 -319.17425537]
[-128.03565979 -331.54849243]
[-134.17131042 -345.28414917]
[-137.67832947 -359.91342163]
[-138.43728638 -374.93801880]
[-136.42231750 -389.84622192]
[-131.70205688 -404.13027954]
[-124.43727112 -417.30361938]
[-114.87539673 -428.91763306]
[-103.34210968 -438.57672119]
[-90.23023224 -445.95190430]
[-75.98634338 -450.79199219]
[-61.09559250 -452.93209839]
[-46.06514740 -452.29937744]
[-31.40693855 -448.91537476]
[-17.62022400 -442.89529419]
[-5.17457008 -434.44424438]
[5.50612736 -423.85003662]
[14.05808735 -411.47348022]
[20.19003487 -397.73617554]
[23.69311523 -383.10595703]
[24.44801712 -368.08117676]
[22.42902946 -353.17349243]
[17.70491600 -338.89074707]
[10.43657970 -325.71932983]
[0.87157673 -314.10791016]
[-10.66431236 -304.45190430]
[-23.77817917 -297.08026123]
[-18.95218086 -282.87780762]
[-14.12618351 -268.67535400]
[-9.30018520 -254.47290039]
[2.12051105 -244.91168213]
[-0.76542658 -229.35591125]
[12.66708851 -223.02320862]
[17.76365662 -208.68865967]
[11.03025723 -194.64233398]
[15.96185112 -180.47619629]
[20.99876785 -166.34716797]
[26.03568268 -152.21813965]
[36.82674408 -146.75192261]
[41.13871765 -135.02201843]
[36.14809036 -123.12847137]
[40.97409058 -108.92601013]
[52.39478683 -99.36479187]
[49.50885010 -83.80902100]
[54.33484650 -69.60656738]
[59.16084290 -55.40410995]
[72.59336090 -49.07140732]
[77.68992615 -34.73684692]
[70.95652771 -20.69052696]
[75.78252411 -6.48807049]
[80.60852051 7.71438551]
[83.59268951 9.59243965]
[85.81546021 13.00921059]
[86.56355286 17.59109497]
[85.31747437 22.66005898]
[89.50448608 37.06383896]
[100.48686218 47.12548447]
[96.90920258 62.53687668]
[101.09621429 76.94065857]
[105.28322601 91.34443665]
[110.37839508 97.59037781]
[109.42363739 105.99390411]
[113.39572906 120.45843506]
[117.36782837 134.92295837]
[121.33992004 149.38748169]
[125.31201935 163.85200500]
[136.11540222 170.89825439]
[139.12599182 183.02757263]
[133.25920105 193.60620117]
[137.01550293 208.12825012]
[140.87980652 222.62194824]
[144.85189819 237.08647156]
[148.82398987 251.55099487]
[154.69470215 237.74755859]
[167.03593445 229.22149658]
[182.02366638 228.61471558]
[195.01374817 236.11521912]
[201.98109436 249.39889526]
[200.76676941 264.34967041]
[191.74707031 276.33486938]
[177.71682739 281.64074707]
[163.02346802 278.62322998]
[152.21977234 268.21707153]
[154.22378540 283.08261108]
[163.73544312 295.72537231]
[157.76788330 309.37225342]
[167.53302002 317.79867554]
[168.89613342 330.22146606]
[161.66862488 339.92144775]
[163.45109558 354.81515503]
[165.23356628 369.70889282]
[167.01602173 384.60260010]
[168.79849243 399.49630737]
[170.58096313 414.39004517]
[172.36341858 429.28375244]
[179.28932190 415.97842407]
[191.55227661 407.34014893]
[206.41271973 405.29873657]
[220.55078125 410.31024170]
[230.80798340 421.25509644]
[234.89283752 435.68817139]
[231.89279175 450.38510132]
[222.47804260 462.06256104]
[208.75189209 468.11172485]
[193.78077698 467.18124390]
[180.90930176 459.47897339]
[173.01295471 446.72561646]
[172.34317017 461.71066284]
[171.67338562 476.69567871]
[171.00360107 491.68072510]
[170.33381653 506.66577148]
[183.68910217 511.85592651]
[194.77200317 520.90338135]
[202.50732422 532.91333008]
[206.14993286 546.70440674]
[205.35649109 560.92486572]
[200.21780396 574.18505859]
[191.24865723 585.19342041]
[179.33619690 592.88201904]
[165.65228271 596.51025391]
[164.75947571 611.48370361]
[163.86665344 626.45709229]
[162.97384644 641.43048096]
[176.11163330 649.28265381]
[184.08560181 662.34692383]
[185.06335449 677.62115479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[30 173]
[32 170]
[34 168]
[35 167]
[36 157]
[37 156]
[38 155]
[40 154]
[41 153]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[48 144]
[49 143]
[50 142]
[52 140]
[53 139]
[54 135]
[55 134]
[56 133]
[59 130]
[60 129]
[61 128]
[63 126]
[64 125]
[66 122]
[67 121]
[68 120]
[70 119]
[73 116]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
