%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[97.78879547 384.61441040]
[82.87973022 382.41973877]
[68.87889099 376.84542847]
[56.54131699 368.19201660]
[46.53236771 356.92626953]
[39.39180374 343.65563965]
[35.50471497 329.09585571]
[35.08072281 314.03210449]
[38.14269257 299.27673340]
[44.52549744 285.62548828]
[53.88492203 273.81454468]
[65.71621704 264.48089600]
[79.38134766 258.12786865]
[94.14336395 255.09808350]
[94.58996582 240.10472107]
[87.23503876 227.15272522]
[95.37979126 213.58905029]
[95.37979126 198.58905029]
[94.93318176 183.59568787]
[94.48657990 168.60234070]
[94.03997040 153.60899353]
[93.59336090 138.61564636]
[93.14675903 123.62229156]
[92.70014954 108.62894440]
[83.16566467 120.20881653]
[68.67498779 124.08442688]
[54.63279343 118.81027222]
[46.27647018 106.35346985]
[46.72271729 91.36010742]
[55.80509949 79.42234039]
[70.13611603 74.99265289]
[84.37064362 79.72322083]
[93.19992065 91.85075378]
[94.53815460 76.91056824]
[95.87638855 61.97038269]
[82.34593201 56.88442993]
[70.60539246 48.47316742]
[61.45313644 37.31630707]
[55.50952530 24.17999458]
[53.17485046 9.96420097]
[54.60239792 -4.35893106]
[59.68839264 -17.81157112]
[68.07950592 -29.47695351]
[79.19741821 -38.56185150]
[92.27864838 -44.45052338]
[106.42700195 -46.74642944]
[107.98752594 -61.66503525]
[109.54804993 -76.58364105]
[111.10857391 -91.50224304]
[112.66909790 -106.42084503]
[114.22962189 -121.33945465]
[115.79014587 -136.25805664]
[117.35066223 -151.17666626]
[118.91118622 -166.09526062]
[120.47171021 -181.01387024]
[122.03223419 -195.93247986]
[123.59275818 -210.85107422]
[121.68460846 -214.75144958]
[121.16874695 -218.66278076]
[121.87765503 -222.14599609]
[123.51842499 -224.86160278]
[125.71610260 -226.60182190]
[128.16183472 -241.40109253]
[130.60755920 -256.20034790]
[115.99686432 -259.61990356]
[101.64411926 -263.99761963]
[87.61208344 -269.31436157]
[73.96211243 -275.54684448]
[60.75389099 -282.66784668]
[48.04518509 -290.64624023]
[35.89156342 -299.44708252]
[24.34616852 -309.03195190]
[13.45948982 -319.35888672]
[3.27913046 -330.38278198]
[-6.15039349 -342.05538940]
[-14.78784847 -354.32568359]
[-22.59546471 -367.14001465]
[-29.53910065 -380.44232178]
[-35.58839417 -394.17446899]
[-40.71689224 -408.27639771]
[-44.90217209 -422.68643188]
[-48.12592697 -437.34155273]
[-50.37406540 -452.17773438]
[-51.63674927 -467.13003540]
[-51.90846634 -482.13308716]
[-51.18802643 -497.12130737]
[-49.47857285 -512.02911377]
[-46.78759003 -526.79138184]
[-43.12683868 -541.34350586]
[-38.51232529 -555.62188721]
[-32.96423721 -569.56408691]
[-26.50682449 -583.10913086]
[-19.16833115 -596.19775391]
[-10.98084259 -608.77276611]
[-1.98016238 -620.77911377]
[7.79435110 -632.16442871]
[18.29995537 -642.87878418]
[29.49071503 -652.87542725]
[41.31769180 -662.11059570]
[53.72916794 -670.54388428]
[66.67087555 -678.13848877]
[80.08621979 -684.86114502]
[93.91654205 -690.68249512]
[108.10136414 -695.57708740]
[122.57865143 -699.52343750]
[137.28511047 -702.50433350]
[152.15641785 -704.50677490]
[167.12756348 -705.52197266]
[182.13307190 -705.54553223]
[197.10731506 -704.57727051]
[211.98483276 -702.62145996]
[226.70056152 -699.68664551]
[241.19015503 -695.78570557]
[255.39025879 -690.93566895]
[269.23876953 -685.15777588]
[282.67510986 -678.47717285]
[295.64059448 -670.92321777]
[308.07846069 -662.52886963]
[319.93432617 -653.33081055]
[331.15637207 -643.36932373]
[341.69552612 -632.68792725]
[351.50570679 -621.33337402]
[360.54397583 -609.35522461]
[368.77087402 -596.80596924]
[376.15036011 -583.74041748]
[382.65020752 -570.21575928]
[388.24200439 -556.29101562]
[392.90127563 -542.02716064]
[396.60763550 -527.48657227]
[399.34487915 -512.73284912]
[401.10107422 -497.83044434]
[401.86853027 -482.84457397]
[401.64385986 -467.84072876]
[400.42807007 -452.88455200]
[398.22647095 -438.04141235]
[395.04867554 -423.37622070]
[390.90859985 -408.95312500]
[385.82434082 -394.83520508]
[379.81814575 -381.08416748]
[372.91625977 -367.76013184]
[365.14886475 -354.92138672]
[356.54992676 -342.62408447]
[347.15704346 -330.92196655]
[337.01132202 -319.86621094]
[326.15707397 -309.50515747]
[314.64178467 -299.88415527]
[302.51583862 -291.04522705]
[289.83221436 -283.02703857]
[276.64639282 -275.86462402]
[263.01602173 -269.58938599]
[249.00071716 -264.22866821]
[234.66177368 -259.80596924]
[220.06187439 -256.34060669]
[205.26487732 -253.84774780]
[190.33546448 -252.33828735]
[175.33892822 -251.81881714]
[160.34086609 -252.29162598]
[145.40682983 -253.75462341]
[142.96110535 -238.95535278]
[140.51538086 -224.15608215]
[138.51136780 -209.29055786]
[136.95083618 -194.37194824]
[135.39031982 -179.45335388]
[133.82978821 -164.53474426]
[132.26927185 -149.61613464]
[130.70874023 -134.69754028]
[129.14822388 -119.77893066]
[127.58769989 -104.86032867]
[126.02717590 -89.94171906]
[124.46665192 -75.02311707]
[122.90613556 -60.10451126]
[121.34561157 -45.18590546]
[135.82411194 -39.38780594]
[148.09643555 -29.73957253]
[157.16499329 -17.01506996]
[162.28973389 -2.23863888]
[163.04847717 13.39736843]
[159.37167358 28.62879944]
[151.54875183 42.22190094]
[140.20527649 53.07326889]
[126.25302124 60.29939651]
[110.81657410 63.30861664]
[109.47834015 78.24880219]
[108.14010620 93.18898773]
[107.69350433 108.18233490]
[108.14010620 123.17568970]
[108.58671570 138.16903687]
[109.03331757 153.16238403]
[109.47992706 168.15573120]
[109.92652893 183.14909363]
[110.37313843 198.14244080]
[112.78527832 201.75291443]
[113.81906891 205.56025696]
[113.58187866 209.10696411]
[112.31861877 212.01742554]
[110.37313843 214.03564453]
[117.69612885 228.06007385]
[109.58332062 240.55133057]
[109.13671112 255.54467773]
[123.69221497 259.44775391]
[136.95497131 266.60287476]
[148.20974731 276.62420654]
[156.84957886 288.97128296]
[162.40853882 302.97824097]
[164.58682251 317.88967896]
[163.26696777 332.90151978]
[158.52015686 347.20410156]
[150.60237122 360.02618408]
[139.94061279 370.67623901]
[127.10986328 378.57992554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 199]
[15 198]
[17 196]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[33 184]
[34 183]
[35 182]
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 161]
[62 160]
[63 159]
[64 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
