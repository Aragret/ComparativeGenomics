%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[166.13525391 280.24938965]
[172.49989319 266.65017700]
[180.29757690 253.81883240]
[189.43687439 241.90580750]
[199.81065369 231.05076599]
[190.14984131 219.57606506]
[180.48902893 208.10136414]
[170.82821655 196.62666321]
[161.16740417 185.15196228]
[151.50660706 173.67726135]
[141.84579468 162.20256042]
[132.18498230 150.72785950]
[122.52416992 139.25315857]
[115.81150055 136.16093445]
[112.80648804 127.53495026]
[103.31758881 115.91768646]
[87.48400879 110.37926483]
[84.97109222 93.79428101]
[75.31027985 82.31958771]
[65.64946747 70.84488678]
[55.98865891 59.37018585]
[46.32784653 47.89548492]
[36.66703796 36.42078400]
[27.00622749 24.94608307]
[30.50290298 39.53283310]
[30.15823364 54.52887344]
[25.99508286 68.93956757]
[18.28957367 81.80911255]
[7.55278826 92.28391266]
[-5.50314283 99.66921234]
[-20.01226616 103.47517395]
[-35.01224518 103.44935608]
[-49.50818253 99.59348297]
[-62.53861618 92.16328430]
[-73.23928070 81.65158844]
[-80.90045166 68.75559998]
[-85.01397705 54.33066177]
[-85.30702209 39.33352280]
[-81.76016235 24.75889587]
[-74.60863495 11.57346153]
[-64.32678986 0.65176082]
[-51.59656906 -7.28180790]
[-37.26232910 -11.70103931]
[-22.27481079 -12.31282234]
[-7.62807989 -9.07657909]
[5.70639849 -2.20695782]
[16.84753227 7.84430361]
[11.39217472 -6.12849426]
[5.93681765 -20.10129166]
[0.48146054 -34.07408905]
[-7.84023714 -21.59413147]
[-22.77219772 -20.16704941]
[-33.30713654 -30.84483528]
[-31.67908478 -45.75622177]
[-19.08818626 -53.90909195]
[-4.81718254 -49.29458237]
[-9.21818066 -63.63442993]
[-13.61917877 -77.97428131]
[-18.02017593 -92.31412506]
[-22.42117500 -106.65396881]
[-26.82217216 -120.99382019]
[-41.50868607 -117.89340973]
[-56.41399765 -116.12198639]
[-71.41809082 -115.69380188]
[-86.40016937 -116.61231232]
[-101.23959351 -118.87012482]
[-115.81688690 -122.44905853]
[-130.01467896 -127.32028961]
[-143.71865845 -133.44461060]
[-156.81848145 -140.77268982]
[-169.20867920 -149.24554443]
[-180.78948975 -158.79495239]
[-191.46765137 -169.34402466]
[-201.15722656 -180.80781555]
[-209.78016663 -193.09403992]
[-217.26705933 -206.10374451]
[-223.55761719 -219.73222351]
[-228.60118103 -233.86970520]
[-232.35716248 -248.40238953]
[-234.79530334 -263.21325684]
[-235.89599609 -278.18304443]
[-235.65034485 -293.19125366]
[-234.06036377 -308.11700439]
[-231.13882446 -322.84014893]
[-226.90925598 -337.24212646]
[-221.40573120 -351.20697021]
[-214.67254639 -364.62228394]
[-206.76391602 -377.38003540]
[-197.74351501 -389.37747192]
[-187.68399048 -400.51803589]
[-176.66630554 -410.71200562]
[-164.77919006 -419.87728882]
[-152.11834717 -427.94012451]
[-138.78572083 -434.83560181]
[-124.88866425 -440.50814819]
[-110.53906250 -444.91213989]
[-95.85245514 -448.01211548]
[-80.94709015 -449.78308105]
[-65.94297791 -450.21081543]
[-50.96093369 -449.29183960]
[-36.12157822 -447.03356934]
[-21.54439354 -443.45419312]
[-7.34674835 -438.58251953]
[6.35704184 -432.45779419]
[19.45664215 -425.12930298]
[31.84657860 -416.65606689]
[43.42709351 -407.10632324]
[54.10494614 -396.55691528]
[63.79416275 -385.09283447]
[72.41672516 -372.80636597]
[79.90322113 -359.79641724]
[86.19335938 -346.16775513]
[91.23649597 -332.03009033]
[94.99203491 -317.49731445]
[97.42973328 -302.68637085]
[98.52996063 -287.71655273]
[98.28385925 -272.70834351]
[96.69341278 -257.78265381]
[93.77142334 -243.05960083]
[89.54142761 -228.65774536]
[84.03746796 -214.69305420]
[77.30387115 -201.27793884]
[69.39485168 -188.52044678]
[60.37408829 -176.52328491]
[50.31421280 -165.38304138]
[39.29621887 -155.18940735]
[27.40882683 -146.02445984]
[14.74774170 -137.96200562]
[1.41490734 -131.06695557]
[-12.48232555 -125.39482117]
[-8.08132744 -111.05496979]
[-3.68032932 -96.71512604]
[0.72066867 -82.37527466]
[5.12166691 -68.03543091]
[9.52266502 -53.69558334]
[14.45425797 -39.52944565]
[19.90961456 -25.55664825]
[25.36497307 -11.58385086]
[30.82032967 2.38894653]
[38.48092651 15.28527355]
[48.14173889 26.75997353]
[57.80254745 38.23467255]
[67.46335602 49.70937347]
[77.12416840 61.18407440]
[86.78498077 72.65877533]
[96.44579315 84.13347626]
[107.96855164 85.82674408]
[115.40300751 94.79168701]
[114.93485260 106.42878723]
[124.42375183 118.04605103]
[133.99887085 129.59234619]
[143.65968323 141.06704712]
[153.32049561 152.54174805]
[162.98129272 164.01644897]
[172.64210510 175.49114990]
[182.30291748 186.96585083]
[191.96372986 198.44055176]
[201.62454224 209.91525269]
[211.28535461 221.38995361]
[223.74923706 213.01745605]
[237.04530334 206.04164124]
[251.01765442 200.54429626]
[265.50247192 196.58988953]
[280.32992554 194.22477722]
[295.32617188 193.47668457]
[310.31539917 194.35438538]
[325.12185669 196.84757996]
[339.57196045 200.92706299]
[353.49624634 206.54498291]
[366.73150635 213.63546753]
[379.12255859 222.11540222]
[390.52410889 231.88534546]
[400.80249023 242.83076477]
[409.83718872 254.82333374]
[417.52224731 267.72244263]
[423.76763916 281.37683105]
[428.50006104 295.62643433]
[431.66406250 310.30419922]
[433.22256470 325.23797607]
[433.15725708 340.25274658]
[431.46893311 355.17242432]
[428.17736816 369.82208252]
[423.32116699 384.02999878]
[416.95727539 397.62954712]
[409.16027832 410.46133423]
[400.02160645 422.37484741]
[389.64840698 433.23043823]
[378.16232300 442.90084839]
[365.69796753 451.27267456]
[352.40155029 458.24777222]
[338.42889404 463.74438477]
[323.94387817 467.69799805]
[309.11627197 470.06231689]
[294.11999512 470.80960083]
[279.13082886 469.93109131]
[264.32449341 467.43710327]
[249.87461853 463.35684204]
[235.95062256 457.73818970]
[222.71572876 450.64697266]
[210.32514954 442.16638184]
[198.92411804 432.39581299]
[188.64633179 421.44982910]
[179.61228943 409.45678711]
[171.92790222 396.55728149]
[165.68327332 382.90255737]
[160.95161438 368.65267944]
[157.78839111 353.97476196]
[156.23069763 339.04089355]
[156.29681396 324.02612305]
[157.98594666 309.10653687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[11 153]
[12 152]
[13 151]
[15 150]
[16 149]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[47 139]
[48 138]
[49 137]
[50 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
