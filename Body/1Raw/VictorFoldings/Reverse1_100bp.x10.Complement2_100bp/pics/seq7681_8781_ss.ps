%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[117.46494293 587.94610596]
[102.39150238 587.27239990]
[88.00635529 582.71936035]
[75.29028320 574.59753418]
[65.11031342 563.46063232]
[58.16051102 550.06805420]
[54.91474152 535.33276367]
[55.59429550 520.25958252]
[60.15284729 505.87622070]
[68.27958679 493.16326904]
[79.42041016 482.98760986]
[92.81573486 476.04296875]
[107.55222321 472.80288696]
[108.22200775 457.81787109]
[108.89179993 442.83282471]
[109.56158447 427.84777832]
[100.64696503 412.73168945]
[110.68572235 397.29455566]
[111.13233185 382.30120850]
[111.46730804 367.30493164]
[111.69063568 352.30661011]
[111.91396332 337.30825806]
[104.36701202 324.46722412]
[112.30891418 310.78375244]
[112.53224182 295.78543091]
[100.31369019 284.22921753]
[100.23200989 267.07382202]
[112.82615662 254.93269348]
[112.82615662 239.93269348]
[112.15637207 224.94766235]
[110.81813812 210.00747681]
[109.47990417 195.06729126]
[108.14167023 180.12710571]
[106.80343628 165.18692017]
[105.46520233 150.24673462]
[102.68959045 135.50576782]
[98.50257874 121.10198975]
[94.31556702 106.69820404]
[91.77851105 105.00917053]
[89.79994965 102.35967255]
[88.73680878 98.95479584]
[88.86525726 95.12860870]
[90.33558655 91.31139374]
[87.01332855 76.68393707]
[83.69107056 62.05647659]
[73.08941650 50.31273270]
[77.81566620 36.18786621]
[74.49340820 21.56040764]
[71.17115021 6.93294716]
[67.84888458 -7.69451332]
[64.52662659 -22.32197380]
[60.87854004 -36.87159348]
[49.76307678 -48.13023376]
[53.85390091 -62.45204926]
[49.88180542 -76.91657257]
[45.90970993 -91.38109589]
[41.93761444 -105.84561920]
[37.21747971 -120.08361053]
[31.76212311 -134.05641174]
[26.30676651 -148.02920532]
[20.85140800 -162.00199890]
[15.39605141 -175.97480774]
[9.94069481 -189.94760132]
[5.02615023 -194.37013245]
[3.33646297 -199.79617310]
[4.53774452 -204.41851807]
[-0.49917156 -218.54754639]
[-5.53608799 -232.67657471]
[-9.34305859 -218.16770935]
[-19.38821411 -207.02792358]
[-33.42744064 -201.74586487]
[-48.32433701 -203.50155640]
[-60.75090027 -211.90278625]
[-67.93100739 -225.07267761]
[-68.26059723 -240.06904602]
[-61.66604233 -253.54168701]
[-49.62058640 -262.48074341]
[-34.81520844 -264.88925171]
[-20.55747414 -260.22909546]
[-10.03258133 -249.54138184]
[-12.69837666 -264.30261230]
[-15.36417198 -279.06381226]
[-18.02996826 -293.82504272]
[-20.69576263 -308.58624268]
[-35.74295044 -308.84774780]
[-50.44992828 -312.04010010]
[-64.25140381 -318.04055786]
[-76.61687469 -326.61853027]
[-87.07105255 -337.44424438]
[-95.21211243 -350.10162354]
[-100.72711945 -364.10415649]
[-103.40409851 -378.91363525]
[-103.14015961 -393.96075439]
[-99.94544220 -408.66723633]
[-93.94274139 -422.46774292]
[-85.36278534 -434.83181763]
[-74.53536224 -445.28424072]
[-61.87665939 -453.42324829]
[-47.87323761 -458.93600464]
[-33.06334686 -461.61056519]
[-18.01624489 -461.34420776]
[-3.31030154 -458.14709473]
[10.48922729 -452.14215088]
[22.85192299 -443.56021118]
[33.30259705 -432.73110962]
[41.43955612 -420.07107544]
[46.95003128 -406.06677246]
[49.62221909 -391.25643921]
[49.35340881 -376.20938110]
[46.15392685 -361.50396729]
[40.14675903 -347.70538330]
[31.56280327 -335.34408569]
[20.73200035 -324.89517212]
[8.07066250 -316.76025391]
[-5.93454552 -311.25204468]
[-3.26875019 -296.49084473]
[-0.60295475 -281.72961426]
[2.06284070 -266.96838379]
[4.72863626 -252.20718384]
[8.59294128 -237.71348572]
[13.62985802 -223.58445740]
[18.66677475 -209.45542908]
[23.91349220 -195.40295410]
[29.36884880 -181.43016052]
[34.82420731 -167.45736694]
[40.27956390 -153.48455811]
[45.73492050 -139.51176453]
[51.19027710 -125.53897095]
[57.13252640 -139.31175232]
[70.48062134 -146.15487671]
[85.13200378 -142.93974304]
[94.38825226 -131.13626099]
[94.01753235 -116.14085388]
[84.18933868 -104.80918884]
[69.39698029 -102.32196045]
[56.40213776 -109.81771851]
[60.37423325 -95.35319519]
[64.34632874 -80.88867188]
[68.31842804 -66.42414856]
[79.14978027 -56.20010376]
[75.34306335 -40.84368896]
[78.21015930 -38.79134369]
[80.22561646 -35.24832916]
[80.69966125 -30.63004112]
[79.15409088 -25.64423370]
[82.47634888 -11.01677227]
[85.79860687 3.61068749]
[89.12086487 18.23814774]
[92.44312286 32.86560822]
[102.80715179 43.56309891]
[98.31852722 58.73421860]
[101.64079285 73.36167908]
[104.96305084 87.98913574]
[108.71935272 102.51119995]
[112.90635681 116.91497803]
[117.09336853 131.31875610]
[121.06612396 116.85441589]
[130.51545715 105.20494843]
[143.84899902 98.33349609]
[158.81979370 97.39802551]
[172.90501404 102.55616760]
[183.73106384 112.93869781]
[189.47354126 126.79596710]
[189.16474915 141.79278564]
[182.85671997 155.40193176]
[171.61247253 165.33001709]
[157.32685852 169.90399170]
[142.40725708 168.35305786]
[129.36787415 160.93856812]
[120.40538788 148.90849304]
[121.74362183 163.84867859]
[123.08185577 178.78886414]
[124.42008972 193.72904968]
[125.75832367 208.66923523]
[127.09655762 223.60942078]
[137.52062988 212.82337952]
[152.51545715 212.42958069]
[163.49133301 222.65357971]
[164.16075134 237.63864136]
[154.14025879 248.80061340]
[139.17004395 249.74543762]
[127.82615662 239.93269348]
[127.82615662 254.93269348]
[138.38322449 263.29708862]
[142.14050293 276.02865601]
[137.94117737 288.41607666]
[127.53057861 296.00875854]
[127.30725098 311.00708008]
[134.83822632 324.92092896]
[126.91230011 337.53158569]
[126.68897247 352.52993774]
[126.46564484 367.52825928]
[129.46693420 376.15554810]
[126.12567902 382.74780273]
[125.67907715 397.74114990]
[133.93962097 407.64703369]
[133.25897217 420.12582397]
[124.54662323 428.51757812]
[123.87683868 443.50259399]
[123.20705414 458.48764038]
[122.53726196 473.47268677]
[136.92593384 478.01455688]
[149.64826965 486.12658691]
[159.83683777 497.25561523]
[166.79698181 510.64288330]
[170.05412292 525.37561035]
[169.38621521 540.44927979]
[164.83876038 554.83624268]
[156.72184753 567.55541992]
[145.58888245 577.73968506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 201]
[14 200]
[15 199]
[16 198]
[18 195]
[19 194]
[20 192]
[21 191]
[22 190]
[24 188]
[25 187]
[28 183]
[29 182]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[36 156]
[37 155]
[38 154]
[43 153]
[44 152]
[45 151]
[47 149]
[48 148]
[49 147]
[50 146]
[51 145]
[52 141]
[54 139]
[55 138]
[56 137]
[57 136]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 123]
[66 122]
[67 121]
[68 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
