%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[135.06790161 754.17108154]
[120.27125549 751.61041260]
[105.86297607 747.37963867]
[92.03089142 741.53405762]
[78.95533752 734.14978027]
[66.80677795 725.32305908]
[55.74359512 715.16906738]
[45.91002274 703.82012939]
[37.43425369 691.42419434]
[30.42679596 678.14288330]
[24.97900009 664.14935303]
[21.16189384 649.62597656]
[19.02523804 634.76220703]
[18.59688950 619.75170898]
[19.88243103 604.79028320]
[22.86510468 590.07287598]
[27.50602531 575.79144287]
[33.74468994 562.13214111]
[41.49975967 549.27301025]
[50.67013550 537.38177490]
[61.13626480 526.61340332]
[72.76169586 517.10827637]
[85.39486694 508.99035645]
[98.87108612 502.36544800]
[113.01465607 497.31991577]
[127.64118195 493.91958618]
[142.55998230 492.20870972]
[142.55998230 477.20870972]
[142.55998230 462.20870972]
[142.55998230 447.20870972]
[142.11338806 432.21536255]
[141.22056580 417.24197388]
[140.32774353 402.26855469]
[139.43493652 387.29516602]
[137.87440491 372.37655640]
[135.64929199 357.54251099]
[133.42417908 342.70846558]
[123.88449860 331.26977539]
[129.48905945 316.47451782]
[113.50107574 314.85873413]
[98.46057129 309.17059326]
[85.38704681 299.78979492]
[75.16819000 287.34643555]
[68.49962616 272.67883301]
[65.83753967 256.77706909]
[67.36747742 240.71595764]
[72.99144745 225.58265686]
[82.33415985 212.40289307]
[94.76806641 202.07153320]
[109.45550537 195.29176331]
[106.78971100 180.53054810]
[104.12391663 165.76931763]
[94.24789429 154.61972046]
[99.40946960 139.66416931]
[96.74366760 124.90294647]
[94.07787323 110.14173126]
[88.62187958 124.11428070]
[78.01187134 134.71746826]
[64.03582001 140.16448975]
[49.04893494 139.53739929]
[35.57676697 132.94189453]
[25.88961792 121.48941803]
[21.61994171 107.10992432]
[23.48725128 92.22660828]
[31.17687416 79.34756470]
[43.39297485 70.64314270]
[58.07692337 67.58019257]
[72.75421906 70.67487335]
[84.95147705 79.40567780]
[92.61377716 92.30287933]
[92.83710480 77.30453491]
[92.94877625 62.30495453]
[83.37408447 46.57577896]
[92.73481750 31.73180008]
[92.51148987 16.73346329]
[92.28816223 1.73512626]
[84.34625244 -11.94831944]
[91.89320374 -24.78937721]
[91.66987610 -39.78771591]
[91.44654846 -54.78605270]
[88.18972015 -63.32015228]
[91.33322144 -70.00896454]
[91.33322144 -85.00896454]
[91.33322144 -100.00896454]
[91.33322144 -115.00896454]
[91.10989380 -130.00730896]
[90.66328430 -145.00065613]
[90.21668243 -159.99400330]
[89.77007294 -174.98735046]
[89.32347107 -189.98069763]
[88.87686157 -204.97404480]
[88.43025970 -219.96740723]
[73.69036102 -223.12950134]
[60.13582230 -229.72782898]
[48.55468750 -239.37876892]
[39.62026978 -251.52124023]
[33.85200500 -265.44927979]
[31.58524895 -280.35314941]
[32.95178986 -295.36636353]
[37.87217712 -309.61602783]
[46.06035233 -322.27371216]
[57.04025650 -332.60354614]
[70.17353821 -340.00491333]
[84.69664001 -344.04754639]
[99.76522064 -344.49639893]
[114.50319672 -341.32534790]
[128.05372620 -334.71881104]
[139.62901306 -325.06085205]
[148.55606079 -312.91296387]
[154.31588745 -298.98141479]
[156.57360840 -284.07617188]
[155.19796753 -269.06381226]
[150.26893616 -254.81712341]
[142.07308960 -242.16439819]
[131.08692932 -231.84124756]
[117.94915771 -224.44783020]
[103.42360687 -220.41400146]
[103.87020874 -205.42065430]
[104.31681824 -190.42730713]
[104.76342773 -175.43395996]
[105.21002960 -160.44061279]
[105.65663910 -145.44725037]
[106.10324097 -130.45390320]
[108.90335846 -126.58500671]
[109.30278015 -120.91601562]
[106.33322144 -115.00896454]
[106.33322144 -100.00896454]
[106.33322144 -85.00896454]
[106.33322144 -70.00896454]
[106.44488525 -55.00938034]
[106.66821289 -40.01104355]
[106.89154053 -25.01270485]
[114.81747437 -12.40204144]
[107.28649902 1.51179850]
[107.50982666 16.51013565]
[107.73315430 31.50847244]
[116.19179535 40.15589905]
[116.50059509 52.64943314]
[107.94877625 62.30495453]
[111.09227753 68.99376678]
[107.83544159 77.52786255]
[107.61211395 92.52620697]
[108.83909607 107.47593689]
[111.50489044 122.23715210]
[114.17068481 136.99836731]
[124.23738098 149.20379639]
[118.88513184 163.10353088]
[121.55092621 177.86474609]
[124.21672058 192.62596130]
[138.17666626 193.42677307]
[151.59739685 197.32368469]
[163.80157471 204.11639404]
[174.17407227 213.45849609]
[182.19297791 224.87522888]
[187.45587158 237.78753662]
[189.69999695 251.54147339]
[188.81539917 265.44134521]
[184.85026550 278.78479004]
[178.00837708 290.89840698]
[168.63859558 301.17169189]
[157.21708679 309.08776855]
[144.32310486 314.24938965]
[154.02194214 326.74911499]
[148.25822449 340.48333740]
[150.48333740 355.31738281]
[152.70845032 370.15142822]
[162.47204590 358.76406860]
[177.41685486 357.47845459]
[188.98181152 367.03103638]
[190.54197693 381.94967651]
[181.20361328 393.68829346]
[166.31617737 395.52246094]
[154.40834045 386.40234375]
[155.30116272 401.37573242]
[156.19396973 416.34915161]
[157.08679199 431.32254028]
[159.60534668 434.85961914]
[160.75204468 438.63449097]
[160.62055969 442.18667603]
[159.44451904 445.13345337]
[157.55998230 447.20870972]
[157.55998230 462.20870972]
[157.55998230 477.20870972]
[157.55998230 492.20870972]
[172.47879028 493.91958618]
[187.10531616 497.31991577]
[201.24888611 502.36544800]
[214.72511292 508.99035645]
[227.35827637 517.10827637]
[238.98370361 526.61340332]
[249.44984436 537.38177490]
[258.62020874 549.27301025]
[266.37527466 562.13214111]
[272.61395264 575.79144287]
[277.25488281 590.07287598]
[280.23754883 604.79028320]
[281.52307129 619.75170898]
[281.09472656 634.76220703]
[278.95806885 649.62597656]
[275.14096069 664.14935303]
[269.69317627 678.14288330]
[262.68572998 691.42419434]
[254.20996094 703.82012939]
[244.37637329 715.16906738]
[233.31320190 725.32305908]
[221.16464233 734.14978027]
[208.08908081 741.53405762]
[194.25700378 747.37963867]
[179.84872437 751.61041260]
[165.05207825 754.17108154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 184]
[28 183]
[29 182]
[30 181]
[31 176]
[32 175]
[33 174]
[34 173]
[35 166]
[36 165]
[37 164]
[39 162]
[50 149]
[51 148]
[52 147]
[54 145]
[55 144]
[56 143]
[70 142]
[71 141]
[72 139]
[74 136]
[75 135]
[76 134]
[78 132]
[79 131]
[80 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
