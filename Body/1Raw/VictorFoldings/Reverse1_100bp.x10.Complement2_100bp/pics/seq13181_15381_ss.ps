%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[99.99350739 728.26794434]
[85.33116913 725.02264404]
[71.14473724 720.09698486]
[57.62607956 713.55767822]
[44.95801163 705.49316406]
[33.31186295 696.01245117]
[22.84513092 685.24377441]
[13.69936371 673.33282471]
[5.99824905 660.44061279]
[-0.15406328 646.74151611]
[-4.67437124 632.42077637]
[-7.50154257 617.67205811]
[-8.59734344 602.69488525]
[-7.94695330 587.69177246]
[-5.55916929 572.86560059]
[-1.46628249 558.41693115]
[4.27635479 544.54107666]
[11.59108067 531.42578125]
[20.37897110 519.24835205]
[30.52118111 508.17355347]
[41.88054657 498.35104370]
[54.30344772 489.91375732]
[67.62187958 482.97573853]
[81.65571594 477.63085938]
[96.21517944 473.95138550]
[111.10336304 471.98706055]
[110.88003540 456.98870850]
[110.65670776 441.99038696]
[110.43338013 426.99203491]
[97.87616730 415.80477905]
[97.28375244 398.65939331]
[109.51082611 386.14868164]
[109.06421661 371.15533447]
[108.61761475 356.16198730]
[108.17100525 341.16864014]
[107.72440338 326.17529297]
[107.27779388 311.18191528]
[106.49647522 296.20230103]
[105.38082886 281.24383545]
[102.41074371 277.50381470]
[101.75859070 271.85833740]
[104.46142578 265.82455444]
[103.79164124 250.83952332]
[103.12185669 235.85449219]
[86.67295074 228.25158691]
[76.31204224 213.28114319]
[74.97862244 195.03855896]
[83.12803650 178.56803894]
[98.58158112 168.46777344]
[97.24334717 153.52758789]
[95.90511322 138.58740234]
[94.56687927 123.64722443]
[93.22864532 108.70703888]
[81.75413513 118.36807251]
[67.01734161 115.57041168]
[59.88167572 102.37638855]
[65.60729218 88.51214600]
[79.97347260 84.19788361]
[92.38916779 92.61249542]
[92.16584015 77.61415863]
[84.22393036 63.93070984]
[91.77088928 51.08965302]
[91.54755402 36.09131622]
[91.32422638 21.09297943]
[90.98925018 6.09671926]
[90.54264832 -8.89663029]
[90.09603882 -23.88998032]
[89.64943695 -38.88333130]
[89.20282745 -53.87668228]
[88.75622559 -68.87003326]
[88.30961609 -83.86338043]
[87.86301422 -98.85672760]
[87.41640472 -113.85008240]
[80.55246735 -100.51268005]
[69.58791351 -90.27653503]
[55.81086349 -84.34417725]
[40.83982468 -83.41253662]
[26.43357849 -87.59106445]
[14.28455830 -96.38886261]
[5.82001781 -108.77237701]
[2.03436327 -123.28681946]
[3.37232971 -138.22702026]
[9.67673397 -151.83784485]
[20.20694160 -162.52029419]
[33.72587204 -169.01940918]
[48.64533997 -170.57168579]
[63.21261597 -166.99473572]
[75.71635437 -158.70881653]
[84.68762207 -146.68731689]
[89.07268524 -132.34098816]
[92.17679596 -147.01628113]
[85.80821228 -158.23251343]
[88.69575500 -170.39170837]
[98.76079559 -177.10150146]
[102.08306122 -191.72897339]
[105.40531921 -206.35643005]
[108.72757721 -220.98388672]
[112.04983521 -235.61134338]
[115.37209320 -250.23881531]
[101.74360657 -256.64804077]
[89.81181335 -265.83752441]
[80.13478851 -277.37741089]
[73.16514587 -290.72799683]
[69.22886658 -305.26483154]
[68.51006317 -320.30801392]
[71.04235077 -335.15396118]
[76.70728302 -349.10824585]
[85.23991394 -361.51824951]
[96.24114990 -371.80352783]
[109.19644928 -379.48303223]
[123.49985504 -384.19750977]
[138.48239136 -385.72653198]
[153.44326782 -383.99856567]
[167.68276978 -379.09442139]
[180.53488159 -371.24343872]
[191.39846802 -360.81289673]
[199.76544189 -348.29058838]
[205.24444580 -334.26226807]
[207.57922363 -319.38397217]
[206.66058350 -304.35168457]
[202.53149414 -289.86843872]
[195.38505554 -276.61163330]
[185.55554199 -265.20135498]
[173.50268555 -256.17123413]
[159.79023743 -249.94367981]
[145.05952454 -246.80992126]
[129.99955750 -246.91654968]
[126.67729950 -232.28909302]
[123.35503387 -217.66162109]
[120.03277588 -203.03416443]
[116.71051788 -188.40670776]
[113.38825989 -173.77925110]
[119.47453308 -157.31947327]
[106.85210419 -143.91217041]
[103.74799347 -129.23687744]
[102.40975952 -114.29668427]
[102.85636139 -99.30333710]
[103.30297089 -84.30998993]
[103.74957275 -69.31663513]
[104.19618225 -54.32328796]
[104.64278412 -39.32993698]
[105.08939362 -24.33658600]
[105.53599548 -9.34323692]
[105.98260498 5.65011358]
[109.32386017 12.24236584]
[106.32257080 20.86965179]
[106.54589844 35.86798859]
[106.76922607 50.86632538]
[114.69515228 63.47698975]
[107.16417694 77.39083099]
[107.38750458 92.38916779]
[108.16882324 107.36880493]
[109.50706482 122.30899048]
[110.84529877 137.24917603]
[112.18353271 152.18936157]
[113.52176666 167.12954712]
[124.98276520 170.74804688]
[134.52485657 177.99830627]
[141.04444885 188.01249695]
[143.79748535 199.60493469]
[142.48419189 211.41235352]
[137.28157043 222.05433655]
[128.82000732 230.29461670]
[118.10689545 235.18470764]
[118.77667999 250.16973877]
[119.44646454 265.15478516]
[120.33927917 280.12817383]
[121.45492554 295.08663940]
[124.39531708 299.39956665]
[125.29714203 303.95367432]
[124.40989685 307.93209839]
[122.27114868 310.73532104]
[122.71775055 325.72866821]
[123.16436005 340.72201538]
[123.61096191 355.71536255]
[124.05757141 370.70870972]
[124.50417328 385.70205688]
[135.30560303 393.74841309]
[139.44027710 406.36248779]
[135.61164856 418.86944580]
[125.43171692 426.76870728]
[125.65504456 441.76705933]
[125.87837219 456.76538086]
[126.10169983 471.76373291]
[141.04176331 473.28390503]
[155.70433044 476.52825928]
[169.89108276 481.45294189]
[183.41018677 487.99133301]
[196.07878113 496.05502319]
[207.72557068 505.53494263]
[218.19302368 516.30291748]
[227.33958435 528.21325684]
[235.04154968 541.10498047]
[241.19477844 554.80364990]
[245.71604919 569.12408447]
[248.54420471 583.87261963]
[249.64100647 598.84967041]
[248.99160767 613.85284424]
[246.60481262 628.67919922]
[242.51289368 643.12811279]
[236.77117920 657.00433350]
[229.45733643 670.12017822]
[220.67025757 682.29815674]
[210.52879333 693.37365723]
[199.17007446 703.19689941]
[186.74774170 711.63507080]
[173.42977905 718.57397461]
[159.39628601 723.91979980]
[144.83706665 727.60021973]
[129.94902039 729.56555176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 184]
[27 183]
[28 182]
[29 181]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 168]
[39 167]
[42 166]
[43 165]
[44 164]
[49 156]
[50 155]
[51 154]
[52 153]
[53 152]
[59 151]
[60 150]
[62 148]
[63 147]
[64 146]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[90 135]
[91 134]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
