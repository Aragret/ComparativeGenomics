%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[201.41076660 558.82666016]
[208.93174744 545.72662354]
[219.83973694 535.27709961]
[233.25048828 528.32525635]
[230.36521912 513.60534668]
[225.99380493 507.64608765]
[227.54827881 498.64489746]
[224.88247681 483.88369751]
[222.21669006 469.12246704]
[212.34066772 457.97286987]
[217.50224304 443.01730347]
[214.83644104 428.25610352]
[212.17063904 413.49487305]
[199.82614136 405.23965454]
[196.91236877 390.30764771]
[205.65492249 377.41558838]
[202.98912048 362.65435791]
[198.69499207 348.28213501]
[186.59480286 339.59683228]
[188.31576538 323.86950684]
[182.44680786 310.06533813]
[176.57783508 296.26113892]
[162.71153259 290.94506836]
[156.56292725 277.02926636]
[162.23295593 262.52102661]
[156.36399841 248.71685791]
[150.49502563 234.91268921]
[144.62606812 221.10850525]
[129.03889465 222.64674377]
[113.72029114 219.28875732]
[100.17237854 211.35153198]
[89.72742462 199.60168457]
[83.41686249 185.18141174]
[81.86942291 169.49749756]
[85.24855042 154.08406067]
[93.23518372 140.45248413]
[105.05788422 129.94323730]
[98.98404694 116.22796631]
[85.18231964 106.69442749]
[87.15090942 90.03606415]
[80.87355042 76.41275024]
[74.59619141 62.78943253]
[61.79376602 53.49381638]
[63.49470139 38.69665146]
[57.21733856 25.07333374]
[50.63731384 11.59360027]
[43.75790024 -1.73582923]
[30.55317497 -10.45051861]
[31.59168434 -25.30887604]
[24.71227074 -38.63830566]
[17.83285904 -51.96773529]
[10.95344639 -65.29716492]
[4.07403374 -78.62659454]
[0.33894581 -80.84088135]
[-2.23806047 -83.82811737]
[-3.55620098 -87.12931824]
[-3.67410421 -90.29991913]
[-2.79129958 -92.96051788]
[-8.86513329 -106.67578125]
[-14.93896770 -120.39105225]
[-21.01280212 -134.10632324]
[-27.08663559 -147.82157898]
[-27.75897026 -132.83665466]
[-32.08787537 -118.47488403]
[-39.80864334 -105.61448669]
[-50.44913864 -95.04188538]
[-63.35869217 -87.40360260]
[-77.74787903 -83.16671753]
[-92.73680115 -82.59031677]
[-107.40887451 -85.70964813]
[-120.86689758 -92.33396912]
[-132.28791809 -102.05818939]
[-140.97351074 -114.28768158]
[-146.39256287 -128.27459717]
[-148.21369934 -143.16363525]
[-146.32556152 -158.04432678]
[-140.84359741 -172.00669861]
[-132.10304260 -184.19697571]
[-120.63837433 -193.86968994]
[-107.15067291 -200.43336487]
[-92.46470642 -203.48661804]
[-77.47853088 -202.84275818]
[-63.10855484 -198.54113770]
[-50.23351669 -190.84481812]
[-39.64072037 -180.22444153]
[-31.97790909 -167.32939148]
[-33.09355927 -182.28784180]
[-34.20920563 -197.24629211]
[-43.45549011 -206.23901367]
[-44.07676697 -218.72091675]
[-36.28471756 -227.97351074]
[-44.82970047 -241.28868103]
[-37.86365891 -254.45393372]
[-38.75647354 -269.42733765]
[-39.64929199 -284.40072632]
[-40.54210663 -299.37414551]
[-54.91868973 -304.31198120]
[-66.30797577 -314.37939453]
[-72.97319031 -328.04113770]
[-73.89792633 -343.21392822]
[-68.94116974 -357.58398438]
[-58.85879517 -368.96002197]
[-45.18828964 -375.60726929]
[-30.01430321 -376.51205444]
[-15.65076160 -371.53637695]
[-4.28800011 -361.43905640]
[2.34124374 -347.75982666]
[3.22605777 -332.58465576]
[-1.76848531 -318.22766113]
[-11.88075447 -306.87820435]
[-25.56870079 -300.26696777]
[-24.67588615 -285.29354858]
[-23.78306961 -270.32015991]
[-22.89025307 -255.34674072]
[-14.40913105 -243.10256958]
[-21.31131172 -228.86633301]
[-10.87246895 -214.75968933]
[-19.25075340 -198.36193848]
[-18.13510513 -183.40348816]
[-17.01945686 -168.44503784]
[-13.37136841 -153.89541626]
[-7.29753447 -140.18014526]
[-1.22370064 -126.46488190]
[4.85013342 -112.74961853]
[10.92396736 -99.03434753]
[17.40346336 -85.50600433]
[24.28287506 -72.17657471]
[31.16228867 -58.84714508]
[38.04170227 -45.51771545]
[44.92111206 -32.18828964]
[57.63377762 -24.42700768]
[57.08732986 -8.61524200]
[63.96673965 4.71418715]
[67.19648743 6.12878895]
[69.90151215 9.17802906]
[71.32100677 13.59824848]
[70.84065247 18.79597282]
[77.11801910 32.41928864]
[89.47144318 40.74047852]
[88.21950531 56.51207352]
[94.49686432 70.13539124]
[100.77422333 83.75870514]
[111.43725586 88.44283295]
[116.23233795 99.05642700]
[112.69931793 110.15412903]
[118.77314758 123.86940002]
[133.06478882 122.12595367]
[147.25271606 124.47873688]
[160.18794250 130.72811890]
[170.82554626 140.35928345]
[178.30899048 152.58464050]
[182.03912354 166.40821838]
[181.72218323 180.70678711]
[177.39280701 194.32115173]
[169.41059875 206.15011597]
[158.43025208 215.23954773]
[164.29920959 229.04373169]
[170.16816711 242.84790039]
[176.03712463 256.65206909]
[190.41914368 262.63500977]
[196.17445374 276.71801758]
[190.38201904 290.39218140]
[196.25097656 304.19638062]
[202.11993408 318.00054932]
[214.63992310 327.67321777]
[212.49917603 342.41317749]
[214.23042297 327.51342773]
[221.16262817 314.21136475]
[232.38374329 304.25714111]
[246.41741943 298.96038818]
[261.41732788 299.01797485]
[275.40991211 304.42233276]
[286.55426025 314.46243286]
[293.38409424 327.81732178]
[295.00088501 342.72994995]
[291.19189453 357.23828125]
[282.45822144 369.43350220]
[269.94900513 377.71112061]
[255.30998230 380.98205566]
[240.46719360 378.81600952]
[227.37347412 371.49792480]
[217.75033569 359.98855591]
[220.41613770 374.74978638]
[233.11582947 383.76950073]
[235.60905457 398.77743530]
[226.93186951 410.82907104]
[229.59765625 425.59030151]
[232.26345825 440.35153198]
[242.33013916 452.55694580]
[236.97790527 466.45666504]
[239.64369202 481.21789551]
[242.30949402 495.97912598]
[245.08509827 510.72006226]
[247.97038269 525.43994141]
[263.01321411 526.81457520]
[277.05892944 532.37286377]
[288.96890259 541.66424561]
[297.77761841 553.93548584]
[302.77102661 568.19183350]
[303.54431152 583.27752686]
[300.03479004 597.96966553]
[292.52697754 611.07733154]
[281.62948608 621.53778076]
[268.22573853 628.50311279]
[253.40229797 631.40869141]
[238.36083984 630.01892090]
[224.32072449 624.44653320]
[212.42010498 615.14318848]
[203.62370300 602.86315918]
[198.64462280 588.60180664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[7 192]
[8 191]
[9 190]
[11 188]
[12 187]
[13 186]
[16 183]
[17 182]
[18 166]
[20 164]
[21 163]
[22 162]
[25 159]
[26 158]
[27 157]
[28 156]
[37 146]
[38 145]
[40 142]
[41 141]
[42 140]
[44 138]
[45 137]
[46 133]
[47 132]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
[86 120]
[87 119]
[88 118]
[91 116]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
