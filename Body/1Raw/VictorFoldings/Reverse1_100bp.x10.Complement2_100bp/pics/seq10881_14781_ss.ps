%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[205.02644348 574.57562256]
[211.88197327 561.17828369]
[221.21968079 549.37603760]
[232.68069458 539.62249756]
[245.82444763 532.29254150]
[241.21043396 518.01983643]
[236.59642029 503.74707031]
[231.98240662 489.47433472]
[227.36840820 475.20159912]
[222.75439453 460.92889404]
[211.47731018 451.19866943]
[214.59454346 435.68759155]
[209.98052979 421.41485596]
[205.15452576 407.21240234]
[193.59274292 397.82229614]
[196.24676514 382.22528076]
[191.20983887 368.09625244]
[186.17292786 353.96722412]
[181.13601685 339.83819580]
[164.67852783 340.05123901]
[149.11840820 334.60852051]
[136.34211731 324.15130615]
[127.90495300 309.92984009]
[124.84177399 293.65402222]
[127.54007721 277.28771973]
[135.69108582 262.81185913]
[148.32498169 251.98469543]
[142.86961365 238.01188660]
[137.41426086 224.03909302]
[131.95890808 210.06629944]
[120.76541901 207.85902405]
[111.93602753 200.44569397]
[107.73863983 189.57942200]
[109.32390594 177.91802979]
[116.41263580 168.37411499]
[111.37572479 154.24508667]
[106.33880615 140.11605835]
[101.30188751 125.98702240]
[88.34888458 123.26524353]
[78.41075897 114.52326202]
[74.05916595 102.02317047]
[76.42012024 88.99956512]
[84.88270569 78.82247162]
[80.05670929 64.62001801]
[75.23071289 50.41756058]
[70.40471649 36.21510696]
[65.57871246 22.01265144]
[53.81283188 11.43557453]
[57.04395676 -3.10433960]
[52.21796036 -17.30679512]
[47.39196014 -31.50925064]
[45.43443680 -16.63752937]
[40.14448547 -2.60127497]
[31.79961586 9.86319923]
[20.83757591 20.10203171]
[7.83341455 27.57811165]
[-6.53069592 31.89926338]
[-21.50124168 32.83880234]
[-36.29290009 30.34744835]
[-50.12973022 24.55588722]
[-62.28587723 15.76793671]
[-72.12365723 4.44459295]
[-79.12699127 -8.82014370]
[-82.92851257 -23.33043098]
[-83.32878876 -38.32508850]
[-80.30683136 -53.01752853]
[-74.02116394 -66.63701630]
[-64.80151367 -78.46909332]
[-53.13152695 -87.89307404]
[-39.62339401 -94.41460419]
[-24.98571968 -97.69156647]
[-9.98636818 -97.55206299]
[4.58782434 -94.00341797]
[17.97232437 -87.23177338]
[29.46500969 -77.59236145]
[38.46299744 -65.59085083]
[44.49475479 -51.85523224]
[45.16453934 -66.84027100]
[45.83432388 -81.82530975]
[46.50410843 -96.81034851]
[39.39073563 -110.94224548]
[47.68862152 -123.31133270]
[40.57524872 -137.44322205]
[48.87313461 -149.81231689]
[49.54291916 -164.79736328]
[40.68012619 -180.93836975]
[50.69433594 -195.34956360]
[51.14094162 -210.34292603]
[51.58754730 -225.33627319]
[43.32699585 -235.24212646]
[44.00764465 -247.72093201]
[52.72000122 -256.11267090]
[53.38978577 -271.09771729]
[54.05957031 -286.08276367]
[54.72935486 -301.06777954]
[55.39914322 -316.05282593]
[56.06892776 -331.03787231]
[56.73871231 -346.02291870]
[42.64325333 -351.55435181]
[31.10919952 -361.36477661]
[23.38767242 -374.39001465]
[20.31624985 -389.21716309]
[22.22809601 -404.23794556]
[28.91582680 -417.82296753]
[39.65400696 -428.49865723]
[53.27784348 -435.10696411]
[68.30951691 -436.93112183]
[83.11850739 -433.77319336]
[96.09844971 -425.97576904]
[105.84137726 -414.38464355]
[111.29044342 -400.25714111]
[111.85457611 -385.12570190]
[107.47258759 -370.63165283]
[98.61979675 -358.34725952]
[86.25649261 -349.60498047]
[71.72374725 -345.35311890]
[71.05396271 -330.36807251]
[70.38417816 -315.38305664]
[69.71439362 -300.39801025]
[69.04460907 -285.41296387]
[68.37482452 -270.42791748]
[67.70503998 -255.44288635]
[76.61965179 -240.32679749]
[66.58089447 -224.88966370]
[66.13429260 -209.89631653]
[65.68768311 -194.90296936]
[73.75176239 -185.88647461]
[73.50239563 -173.39160156]
[64.52796173 -164.12757874]
[63.85817337 -149.14253235]
[71.01945496 -136.08247375]
[62.67366028 -122.64154816]
[69.83493805 -109.58148193]
[61.48914719 -96.14056396]
[60.81936264 -81.15552521]
[60.14957809 -66.17048645]
[59.47979355 -51.18544769]
[61.59441757 -36.33524704]
[66.42041779 -22.13279343]
[71.24641418 -7.93033695]
[82.66710663 1.63088429]
[79.78117371 17.18665314]
[84.60717010 31.38910866]
[89.43316650 45.59156418]
[94.25916290 59.79402161]
[99.08515930 73.99647522]
[114.69849396 78.52968597]
[124.57315826 91.44545746]
[124.85382843 107.70114136]
[115.43092346 120.95010376]
[120.46783447 135.07913208]
[125.50475311 149.20816040]
[130.54167175 163.33718872]
[147.95567322 170.79820251]
[154.27775574 188.31802368]
[145.93170166 204.61094666]
[151.38705444 218.58374023]
[156.84242249 232.55653381]
[162.29777527 246.52932739]
[175.88595581 245.60453796]
[189.16813660 248.54046631]
[201.07110596 255.09017944]
[210.63577271 264.71511841]
[217.09454346 276.62945557]
[219.93286133 289.86407471]
[218.93017578 303.34558105]
[214.17713928 315.98327637]
[206.06739807 326.75735474]
[195.26504517 334.80126953]
[200.30195618 348.93029785]
[205.33888245 363.05932617]
[210.37579346 377.18835449]
[222.29785156 387.58908081]
[219.28355408 402.17550659]
[224.06425476 406.74240112]
[225.59162903 412.21633911]
[224.25326538 416.80087280]
[228.86726379 431.07360840]
[240.47438049 441.82467651]
[237.02713013 456.31488037]
[241.64114380 470.58761597]
[246.25514221 484.86035156]
[250.86915588 499.13305664]
[255.48316956 513.40582275]
[260.09716797 527.67852783]
[275.04440308 525.92736816]
[290.04605103 527.12622070]
[304.52545166 531.22900391]
[317.92608643 538.07806396]
[329.73287964 547.41003418]
[339.49200439 558.86627197]
[346.82830811 572.00646973]
[351.45983887 586.32550049]
[353.20858765 601.27301025]
[352.00729370 616.27447510]
[347.90219116 630.75323486]
[341.05099487 644.15277100]
[331.71710205 655.95800781]
[320.25924683 665.71527100]
[307.11785889 673.04949951]
[292.79806519 677.67871094]
[277.85028076 679.42504883]
[262.84902954 678.22131348]
[248.37095642 674.11383057]
[234.97253418 667.26049805]
[223.16876221 657.92468262]
[213.41336060 646.46527100]
[206.08129883 633.32269287]
[201.45439148 619.00213623]
[199.71049500 604.05407715]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 185]
[6 184]
[7 183]
[8 182]
[9 181]
[10 180]
[12 178]
[13 177]
[14 174]
[16 172]
[17 171]
[18 170]
[19 169]
[27 159]
[28 158]
[29 157]
[30 156]
[35 153]
[36 152]
[37 151]
[38 150]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[49 140]
[50 139]
[51 138]
[77 137]
[78 136]
[79 135]
[80 134]
[82 132]
[84 130]
[85 129]
[87 126]
[88 125]
[89 124]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
