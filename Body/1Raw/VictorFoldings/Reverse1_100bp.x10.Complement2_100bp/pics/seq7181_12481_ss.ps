%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[107.90455627 585.51306152]
[107.01173401 570.53967285]
[106.11891937 555.56628418]
[103.73860931 552.96502686]
[102.49996185 549.08160400]
[102.99189758 544.46520996]
[105.53578186 539.90716553]
[105.31245422 524.90881348]
[105.08912659 509.91049194]
[104.86579895 494.91217041]
[104.64247131 479.91381836]
[104.41914368 464.91549683]
[96.49320984 452.30480957]
[104.02418518 438.39099121]
[103.80085754 423.39263916]
[103.57752991 408.39431763]
[100.33479309 401.75305176]
[103.46420288 393.17138672]
[103.46420288 378.17138672]
[103.24087524 363.17306519]
[102.79426575 348.17971802]
[102.34766388 333.18637085]
[101.90105438 318.19299316]
[93.78824615 305.70175171]
[101.11123657 291.67733765]
[100.66462708 276.68395996]
[100.21802521 261.69061279]
[99.77141571 246.69728088]
[99.32481384 231.70391846]
[91.21200562 219.21266174]
[98.53498840 205.18824768]
[97.86520386 190.20320129]
[96.97238922 175.22979736]
[96.07957458 160.25639343]
[95.18675995 145.28298950]
[94.29394531 130.30958557]
[81.82255554 124.91606140]
[72.87924957 114.68654633]
[69.19985962 101.60650635]
[71.49850464 88.21464539]
[79.32904816 77.11022949]
[91.17165375 70.44852448]
[90.50186920 55.46348190]
[89.83208466 40.47844315]
[89.16230011 25.49340439]
[88.49250793 10.50836563]
[76.59806061 19.64740372]
[62.00088501 16.19449997]
[55.46148300 2.69501066]
[61.80045700 -10.89974594]
[76.34495544 -14.56822014]
[88.37253571 -5.60760975]
[88.81913757 -20.60095978]
[89.26574707 -35.59431076]
[89.71234894 -50.58765793]
[90.15895844 -65.58100891]
[90.60556030 -80.57435608]
[91.05216980 -95.56771088]
[91.49877167 -110.56105804]
[91.49877167 -125.56105804]
[91.05216980 -140.55441284]
[90.60556030 -155.54776001]
[90.15895844 -170.54110718]
[82.01420593 -184.10479736]
[89.36913300 -197.05679321]
[88.92253113 -212.05014038]
[79.38803864 -200.47027588]
[64.89736176 -196.59466553]
[50.85517120 -201.86882019]
[42.49884796 -214.32562256]
[42.94509506 -229.31898499]
[52.02747726 -241.25674438]
[66.35848999 -245.68643188]
[80.59301758 -240.95587158]
[89.42230225 -228.82833862]
[90.76053619 -243.76852417]
[92.09877014 -258.70870972]
[93.43700409 -273.64889526]
[85.30378723 -290.16955566]
[95.95149994 -304.11920166]
[97.06714630 -319.07766724]
[98.18279266 -334.03613281]
[99.29844666 -348.99456787]
[100.41409302 -363.95303345]
[101.41835022 -378.91937256]
[91.20577240 -390.68121338]
[92.32451630 -405.85366821]
[103.60057068 -415.51730347]
[104.49338531 -430.49072266]
[105.38619995 -445.46411133]
[93.53704071 -458.33334351]
[94.63967896 -475.45346069]
[107.52440643 -486.26190186]
[108.19419098 -501.24694824]
[108.86397552 -516.23199463]
[109.53376007 -531.21704102]
[110.20354462 -546.20208740]
[110.87333679 -561.18713379]
[111.54312134 -576.17211914]
[112.21290588 -591.15716553]
[98.57224274 -597.92858887]
[88.87006378 -609.66693115]
[84.78733826 -624.33837891]
[87.03141022 -639.40100098]
[95.21349335 -652.24523926]
[107.91598511 -660.64562988]
[122.93810272 -663.14678955]
[137.67718506 -659.31536865]
[149.57957458 -649.81524658]
[156.58311462 -636.29229736]
[157.47442627 -621.08947754]
[152.09906006 -606.84075928]
[141.38832092 -596.01489258]
[127.19794464 -590.48742676]
[126.52816010 -575.50238037]
[125.85837555 -560.51733398]
[125.18858337 -545.53228760]
[124.51879883 -530.54724121]
[123.84901428 -515.56219482]
[123.17922974 -500.57717896]
[122.50944519 -485.59213257]
[132.44966125 -477.39324951]
[135.90422058 -464.77786255]
[131.39581299 -452.29248047]
[120.35961151 -444.57131958]
[119.46678925 -429.59790039]
[118.57397461 -414.62448120]
[128.62179565 -403.68936157]
[127.92964935 -388.49148560]
[116.39176178 -378.02655029]
[119.13156128 -371.16250610]
[115.37254333 -362.83737183]
[114.25689697 -347.87893677]
[113.14125061 -332.92047119]
[112.02560425 -317.96200562]
[110.90995026 -303.00357056]
[118.56337738 -293.63598633]
[117.75633240 -281.16470337]
[108.37718964 -272.31066895]
[107.03895569 -257.37048340]
[105.70072174 -242.43028259]
[104.36248779 -227.49009705]
[103.91587830 -212.49674988]
[104.36248779 -197.50340271]
[112.47529602 -185.01213074]
[105.15230560 -170.98771667]
[105.59891510 -155.99436951]
[106.04551697 -141.00102234]
[106.49212646 -126.00766754]
[108.43760681 -123.98944092]
[109.70086670 -121.07897949]
[109.93805695 -117.53226471]
[108.90426636 -113.72492981]
[106.49212646 -110.11445618]
[106.04551697 -95.12110138]
[105.59891510 -80.12775421]
[105.15230560 -65.13440704]
[104.70570374 -50.14105225]
[104.25909424 -35.14770508]
[103.81249237 -20.15435410]
[103.36588287 -5.16100359]
[103.47754669 9.83858109]
[104.14733887 24.82361984]
[104.81712341 39.80865860]
[105.48690796 54.79369736]
[106.15669250 69.77873230]
[120.52288818 76.97738647]
[129.31820679 90.42544556]
[130.15521240 106.47248840]
[122.80667877 120.76258850]
[109.26734924 129.41676331]
[110.16016388 144.39016724]
[111.05297852 159.36357117]
[111.94579315 174.33697510]
[112.83860779 189.31037903]
[116.15450287 195.03021240]
[116.09320831 200.71292114]
[113.52834320 204.74163818]
[121.67309570 218.30531311]
[114.31816101 231.25732422]
[114.76477051 246.25067139]
[115.21137238 261.24401855]
[115.65798187 276.23736572]
[116.10458374 291.23071289]
[124.24933624 304.79440308]
[116.89440918 317.74639893]
[117.34101105 332.73974609]
[117.78762054 347.73309326]
[118.23422241 362.72644043]
[121.37834167 368.54248047]
[121.14788818 374.22082520]
[118.46420288 378.17138672]
[118.46420288 393.17138672]
[118.57586670 408.17098999]
[118.79919434 423.16931152]
[119.02252197 438.16766357]
[126.96443176 451.85110474]
[119.41748047 464.69216919]
[119.64080811 479.69049072]
[119.86413574 494.68884277]
[120.08746338 509.68716431]
[120.31079102 524.68548584]
[120.53411865 539.68383789]
[121.09233093 554.67346191]
[121.98514557 569.64685059]
[122.87796021 584.62023926]
[133.87451172 596.30169678]
[131.45532227 612.16125488]
[117.47618103 620.03295898]
[102.66069031 613.87823486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[14 196]
[15 195]
[16 194]
[18 193]
[19 192]
[20 189]
[21 188]
[22 187]
[23 186]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[31 178]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 154]
[60 149]
[61 148]
[62 147]
[63 146]
[65 144]
[66 143]
[75 142]
[76 141]
[77 140]
[78 139]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[85 130]
[88 127]
[89 126]
[90 125]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
