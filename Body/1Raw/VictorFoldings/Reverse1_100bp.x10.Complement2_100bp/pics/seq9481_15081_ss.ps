%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[49.55965424 449.67721558]
[48.35268021 464.73443604]
[42.95119476 478.84118652]
[33.79307938 490.85391235]
[21.62073708 499.79879761]
[7.42092848 504.95068359]
[-7.65523338 505.89196777]
[-22.38559151 502.54635620]
[-35.57601929 495.18502808]
[-46.15723419 484.40472412]
[-53.27145767 471.07940674]
[-56.34197235 456.28924561]
[-55.11986923 441.23324585]
[-49.70421600 427.13192749]
[-40.53403854 415.12838745]
[-28.35271645 406.19573975]
[-14.14773941 401.05810547]
[0.92936015 400.13195801]
[4.25161982 385.50451660]
[7.57387924 370.87704468]
[10.89613914 356.24960327]
[9.51804924 353.80847168]
[9.02388000 350.67440796]
[9.68241596 347.18130493]
[11.63670063 343.75418091]
[14.87611771 340.86279297]
[19.06312943 326.45898438]
[23.25013924 312.05520630]
[27.43715096 297.65142822]
[13.23479080 302.47772217]
[0.52465683 294.51199341]
[-1.32381284 279.62634277]
[9.05200481 268.79385376]
[24.00344276 269.99987793]
[32.50859451 282.35372925]
[37.75531387 268.30126953]
[43.00203323 254.24879456]
[48.24875259 240.19631958]
[41.85150528 226.79443359]
[46.97224045 212.46847534]
[61.07275772 205.84933472]
[66.31947327 191.79685974]
[70.93348694 177.52412415]
[74.90557861 163.05960083]
[78.87767792 148.59507751]
[82.84977722 134.13055420]
[71.10322571 124.98001862]
[63.74783325 112.03350830]
[61.90132904 97.25838470]
[65.84431458 82.89987946]
[74.97760010 71.13990784]
[87.91330719 63.76552963]
[102.68569946 61.89735031]
[106.65779877 47.43282318]
[110.62989044 32.96829987]
[109.30848694 27.91845131]
[109.98827362 23.32593727]
[112.15993500 19.87645149]
[115.11580658 17.95417404]
[119.72982025 3.68144131]
[124.34382629 -10.59129238]
[111.41692352 -18.31794167]
[100.53888702 -28.72258568]
[92.25304413 -41.28107834]
[86.97227478 -55.36181259]
[84.95841217 -70.25746918]
[86.30927277 -85.22056580]
[90.95389557 -99.50095367]
[98.65628815 -112.38343048]
[109.02739716 -123.22356415]
[121.54475403 -131.47990417]
[135.57882690 -136.74107361]
[150.42462158 -138.74620056]
[165.33717346 -137.39793396]
[169.95117188 -151.67066956]
[174.56518555 -165.94340515]
[179.17919922 -180.21614075]
[183.79319763 -194.48886108]
[188.40721130 -208.76159668]
[175.60960388 -216.71815491]
[165.09460449 -227.49995422]
[157.47033691 -240.47723389]
[153.17622375 -254.89343262]
[152.45774841 -269.90933228]
[155.35229492 -284.65185547]
[161.68737793 -298.26489258]
[171.09080505 -309.95898438]
[183.01258850 -319.05706787]
[196.75708008 -325.03375244]
[211.52363586 -327.54556274]
[226.45312500 -326.45083618]
[231.06713867 -340.72357178]
[235.68115234 -354.99630737]
[235.34318542 -364.12448120]
[240.47155762 -369.44625854]
[245.29756165 -383.64871216]
[250.12355042 -397.85119629]
[236.82191467 -404.85211182]
[224.77931213 -413.84777832]
[214.29229736 -424.61666870]
[205.61911011 -436.89358521]
[198.97335815 -450.37619019]
[194.51867676 -464.73245239]
[192.36479187 -479.60885620]
[192.56472778 -494.63903809]
[195.11355591 -509.45288086]
[199.94851685 -523.68554688]
[206.95054626 -536.98663330]
[215.94721985 -549.02850342]
[226.71696472 -559.51458740]
[238.99458313 -568.18676758]
[252.47773743 -574.83142090]
[266.83435059 -579.28491211]
[281.71093750 -581.43756104]
[296.74111938 -581.23638916]
[311.55474854 -578.68634033]
[325.78704834 -573.85021973]
[339.08752441 -566.84710693]
[351.12863159 -557.84942627]
[361.61389160 -547.07879639]
[370.28503418 -534.80047607]
[376.92855835 -521.31677246]
[381.38085938 -506.95977783]
[383.53231812 -492.08303833]
[383.32989502 -477.05288696]
[380.77862549 -462.23947144]
[375.94131470 -448.00756836]
[368.93707275 -434.70767212]
[359.93844604 -422.66726685]
[349.16696167 -412.18292236]
[336.88790894 -403.51278687]
[323.40365601 -396.87036133]
[309.04629517 -392.41925049]
[294.16937256 -390.26904297]
[279.13922119 -390.47268677]
[264.32601929 -393.02517700]
[259.50000000 -378.82272339]
[254.67401123 -364.62026978]
[249.95387268 -350.38229370]
[245.33987427 -336.10955811]
[240.72586060 -321.83682251]
[253.47099304 -313.98504639]
[263.97280884 -303.30462646]
[271.61776733 -290.41326904]
[275.95773315 -276.05819702]
[276.73629761 -261.07254028]
[273.90383911 -246.32719421]
[267.62072754 -232.68008423]
[258.24829102 -220.92631531]
[246.32794189 -211.75184631]
[232.54989624 -205.69338989]
[217.71334839 -203.10710144]
[202.67994690 -204.14759827]
[198.06593323 -189.87486267]
[193.45193481 -175.60212708]
[188.83792114 -161.32939148]
[184.22390747 -147.05665588]
[179.60989380 -132.78392029]
[192.48970032 -125.14764404]
[203.35237122 -114.83161163]
[211.65093994 -102.35088348]
[216.96652222 -88.32960510]
[219.02951050 -73.46984863]
[217.73327637 -58.51642990]
[213.13960266 -44.21956635]
[205.47583008 -31.29727554]
[195.12353516 -20.39927864]
[182.59959412 -12.07435226]
[168.53031921 -6.74269342]
[153.62019348 -4.67470312]
[138.61656189 -5.97728252]
[134.00254822 8.29545116]
[129.38853455 22.56818390]
[125.09442139 36.94039536]
[121.12232208 51.40492249]
[117.15022278 65.86944580]
[128.89677429 75.01998138]
[136.25216675 87.96649170]
[138.09866333 102.74161530]
[134.15568542 117.10012054]
[125.02239990 128.86009216]
[112.08669281 136.23446655]
[97.31430054 138.10264587]
[93.34220123 152.56716919]
[89.37010956 167.03169250]
[85.39801025 181.49621582]
[98.93636322 175.03767395]
[113.12174225 179.91363525]
[119.82810974 193.33096313]
[115.21375275 207.60359192]
[101.92199707 214.55551147]
[87.56694794 210.20433044]
[80.37194824 197.04357910]
[75.12522888 211.09605408]
[81.43743134 225.33662415]
[75.91632843 239.51307678]
[62.30122375 245.44303894]
[57.05450439 259.49551392]
[51.80778503 273.54797363]
[46.56106567 287.60046387]
[41.84093475 301.83843994]
[37.65392303 316.24221802]
[33.46691132 330.64599609]
[29.27989960 345.04980469]
[25.52359962 359.57183838]
[22.20133972 374.19931030]
[18.87907982 388.82678223]
[15.55681992 403.45422363]
[28.75463867 410.80230713]
[39.34667587 421.57196045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 208]
[19 207]
[20 206]
[21 205]
[26 204]
[27 203]
[28 202]
[29 201]
[35 200]
[36 199]
[37 198]
[38 197]
[41 194]
[42 193]
[43 186]
[44 185]
[45 184]
[46 183]
[53 176]
[54 175]
[55 174]
[59 173]
[60 172]
[61 171]
[74 158]
[75 157]
[76 156]
[77 155]
[78 154]
[79 153]
[91 141]
[92 140]
[93 139]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
