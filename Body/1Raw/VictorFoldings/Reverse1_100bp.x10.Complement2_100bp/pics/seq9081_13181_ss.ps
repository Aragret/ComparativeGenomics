%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[153.61804199 451.39526367]
[164.48573303 440.94747925]
[177.53831482 433.40469360]
[173.35130310 419.00091553]
[169.16429138 404.59713745]
[158.18191528 394.53549194]
[161.75958252 379.12408447]
[157.57257080 364.72030640]
[153.38555908 350.31652832]
[149.19854736 335.91275024]
[145.01153564 321.50897217]
[140.82452393 307.10519409]
[127.52054596 295.66091919]
[132.05891418 277.81478882]
[127.65791321 263.47494507]
[119.69155121 276.18466187]
[105.10280609 279.67300415]
[92.24876404 271.94165039]
[88.49281311 257.41949463]
[95.98652649 244.42549133]
[110.43716431 240.40318298]
[123.56615448 247.65599060]
[120.46204376 232.98069763]
[117.35793304 218.30538940]
[114.25382233 203.63008118]
[111.14971924 188.95478821]
[98.56489563 181.07075500]
[95.20783234 166.23213196]
[103.56266022 153.08546448]
[100.45854950 138.41017151]
[97.35443878 123.73486328]
[94.25033569 109.05956268]
[88.89914703 95.04653931]
[81.43140411 82.03759003]
[73.96366119 69.02863312]
[66.49592590 56.01968384]
[59.02818298 43.01073074]
[51.56044006 30.00177765]
[44.57405090 24.11720657]
[44.08000946 16.74308205]
[36.80677795 3.62438750]
[28.86009598 -9.09764862]
[20.26153183 -21.38848686]
[11.66296673 -33.67932510]
[3.06440306 -45.97016144]
[5.12172127 -31.11191750]
[2.96664762 -16.26753616]
[-3.23085999 -2.60770845]
[-12.98204041 8.79029465]
[-25.51787376 17.02758026]
[-39.84973526 21.45451927]
[-54.84734726 21.72198677]
[-69.32794189 17.80888939]
[-82.14952087 10.02382946]
[-92.30091858 -1.01923156]
[-98.98154449 -14.44939041]
[-101.66455078 -29.20748901]
[-100.13833618 -44.12964249]
[-94.52326965 -58.03902817]
[-85.26216888 -69.83869171]
[-73.08541870 -78.59806824]
[-58.95331192 -83.62634277]
[-43.98037338 -84.52698517]
[-29.34743118 -81.22895050]
[-16.20850182 -73.99234009]
[-5.59768677 -63.38509369]
[-16.70492554 -69.94192505]
[-20.25411034 -81.92470551]
[-14.86553478 -92.75475311]
[-19.26653290 -107.09459686]
[-23.66753006 -121.43444061]
[-28.06852913 -135.77429199]
[-32.46952820 -150.11413574]
[-43.91527557 -161.03683472]
[-40.25267410 -175.47410583]
[-44.65367508 -189.81394958]
[-49.05467224 -204.15379333]
[-53.45566940 -218.49365234]
[-68.38018036 -216.64160156]
[-83.39955139 -217.40951538]
[-98.05735779 -220.77401733]
[-111.90815735 -226.63288879]
[-124.53105927 -234.80805969]
[-135.54244995 -245.05113220]
[-144.60771179 -257.05081177]
[-151.45135498 -270.44244385]
[-155.86541748 -284.81906128]
[-157.71577454 -299.74377441]
[-156.94616699 -314.76306152]
[-153.58000183 -329.42047119]
[-147.71955872 -343.27059937]
[-139.54293823 -355.89257812]
[-129.29862976 -366.90280151]
[-117.29792786 -375.96670532]
[-103.90552521 -382.80883789]
[-89.52841187 -387.22128296]
[-74.60347748 -389.06994629]
[-59.58428192 -388.29861450]
[-44.92724228 -384.93078613]
[-31.07776833 -379.06878662]
[-18.45672607 -370.89074707]
[-7.44765997 -360.64517212]
[1.61487973 -348.64343262]
[8.45549202 -335.25027466]
[12.86629772 -320.87265015]
[14.71325874 -305.94750977]
[13.94024754 -290.92840576]
[10.57075405 -276.27175903]
[4.70717525 -262.42294312]
[-3.47230315 -249.80282593]
[-13.71911526 -238.79492188]
[-25.72187233 -229.73373413]
[-39.11582184 -222.89463806]
[-34.71482468 -208.55479431]
[-30.31382751 -194.21495056]
[-25.91282845 -179.87510681]
[-14.78186798 -169.97808838]
[-18.12968063 -154.51513672]
[-13.72868156 -140.17529297]
[-9.32768345 -125.83544159]
[-4.92668581 -111.49559784]
[-0.52568763 -97.15574646]
[12.94720650 -85.91083527]
[8.67504597 -67.99909973]
[15.35524082 -54.56872559]
[23.95380592 -42.27788925]
[32.55236816 -29.98705101]
[41.15093231 -17.69621277]
[43.67528534 -32.48227692]
[55.03158569 -42.28199005]
[70.02788544 -42.61506271]
[81.80808258 -33.32921219]
[84.98642731 -18.66980934]
[78.10981750 -5.33893204]
[64.32215881 0.56872094]
[49.92547226 -3.64884186]
[57.19870377 9.46985245]
[64.56938934 22.53403664]
[72.03713226 35.54298782]
[79.50487518 48.55194092]
[86.97261810 61.56089401]
[94.44035339 74.56984711]
[101.90809631 87.57879639]
[101.11447144 72.59980774]
[104.33762360 57.95019150]
[111.34486389 44.68751144]
[121.63033295 33.76922226]
[134.45150757 25.98351479]
[148.88284302 21.89245033]
[163.88250732 21.79136658]
[178.36766052 25.68756104]
[191.29260254 33.29976273]
[201.72428894 44.07844162]
[208.90963745 57.24547577]
[212.32994080 71.85031891]
[211.73826599 86.83864594]
[207.17733765 101.12843323]
[198.97640991 113.68807983]
[187.72752380 123.61090851]
[174.24273682 130.18057251]
[159.49552917 132.92280579]
[144.55050659 131.63963318]
[130.48658752 126.42370605]
[118.31903076 117.65155029]
[108.92563629 105.95545197]
[112.02974701 120.63075256]
[115.13385773 135.30606079]
[118.23796844 149.98135376]
[131.20059204 158.61897278]
[134.13954163 173.54603577]
[125.82501984 185.85067749]
[128.92912292 200.52597046]
[132.03323364 215.20127869]
[135.13734436 229.87658691]
[138.24145508 244.55187988]
[141.99775696 259.07394409]
[146.39875793 273.41378784]
[157.40715027 280.13525391]
[160.77752686 292.16955566]
[155.22830200 302.91818237]
[159.41531372 317.32196045]
[163.60232544 331.72573853]
[167.78933716 346.12951660]
[171.97634888 360.53329468]
[176.16336060 374.93707275]
[187.44522095 386.02899170]
[183.56808472 400.41012573]
[187.75508118 414.81390381]
[191.94209290 429.21768188]
[207.00419617 428.58786011]
[221.77920532 431.58163452]
[235.40812683 438.02490234]
[247.09858704 447.54315186]
[256.17092896 459.58291626]
[262.09768677 473.44427490]
[264.53427124 488.32128906]
[263.33908081 503.34912109]
[258.58154297 517.65399170]
[250.53828430 530.40423584]
[239.67691040 540.85864258]
[226.62890625 548.40930176]
[212.15286255 552.61737061]
[197.09037781 553.23803711]
[182.31718445 550.23529053]
[168.69218445 543.78375244]
[157.00749207 534.25848389]
[147.94245911 522.21319580]
[142.02410889 508.34823608]
[139.59651184 493.46972656]
[140.80084229 478.44265747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[7 185]
[8 184]
[9 183]
[10 182]
[11 181]
[12 180]
[14 177]
[15 176]
[22 175]
[23 174]
[24 173]
[25 172]
[26 171]
[29 168]
[30 167]
[31 166]
[32 165]
[33 143]
[34 142]
[35 141]
[36 140]
[37 139]
[38 138]
[40 137]
[41 136]
[42 128]
[43 127]
[44 126]
[45 125]
[66 124]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[75 116]
[76 115]
[77 114]
[78 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
