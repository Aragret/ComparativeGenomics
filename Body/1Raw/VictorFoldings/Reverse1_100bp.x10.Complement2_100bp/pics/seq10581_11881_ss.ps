%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[40.68683243 706.97967529]
[26.17249870 702.85699463]
[13.22025394 695.11737061]
[2.71320391 684.28851318]
[-4.63226223 671.10870361]
[-8.31531906 656.47662354]
[-8.08484840 641.38989258]
[-3.95656514 626.87719727]
[3.78805780 613.92791748]
[14.62097931 603.42504883]
[27.80359268 596.08465576]
[42.43708420 592.40728760]
[42.66041183 577.40893555]
[42.88373947 562.41058350]
[30.87456703 553.64031982]
[26.27809334 539.31072998]
[31.05662346 524.85327148]
[43.57661819 515.87799072]
[43.79994583 500.87963867]
[44.02327347 485.88128662]
[44.24660110 470.88296509]
[44.46992874 455.88461304]
[44.69325638 440.88629150]
[44.91658401 425.88793945]
[45.13991165 410.88961792]
[45.36323929 395.89126587]
[45.58656693 380.89291382]
[37.97035599 393.81552124]
[26.24559021 403.17126465]
[11.95486736 407.72924805]
[-3.02162480 406.88980103]
[-16.71347046 400.76333618]
[-27.31927109 390.15594482]
[-33.44365311 376.46316528]
[-34.28084564 361.48654175]
[-29.72070503 347.19650269]
[-20.36319351 335.47317505]
[-7.43945360 327.85888672]
[7.35017347 325.35552979]
[22.05986023 328.29238892]
[34.75429153 336.28308105]
[43.76329803 348.27633667]
[47.90182114 362.69656372]
[51.44149399 348.12017822]
[54.98116684 333.54379272]
[58.41222763 318.94146729]
[61.73448563 304.31402588]
[64.61975861 289.59411621]
[67.06549072 274.79486084]
[69.51121521 259.99557495]
[71.95693970 245.19630432]
[74.29242706 230.37924194]
[76.51754761 215.54519653]
[78.74266052 200.71115112]
[80.85728455 185.86096191]
[82.86129761 170.99543762]
[84.86531830 156.12989807]
[86.86933136 141.26437378]
[88.87334442 126.39884949]
[77.18598175 117.32692719]
[71.58348846 103.63363647]
[73.56011963 88.97119904]
[82.58869171 77.25032043]
[96.26113129 71.59713745]
[98.26514435 56.73161316]
[100.26915741 41.86608505]
[102.27317047 27.00055504]
[100.28894806 22.17251778]
[100.34907532 17.53035355]
[102.04041290 13.82165718]
[104.71296692 11.52170563]
[99.55139923 -3.43385410]
[109.42742157 -14.58345222]
[104.26584625 -29.53901291]
[114.14186859 -40.68861008]
[116.80766296 -55.44982529]
[119.47345734 -70.21104431]
[122.13925171 -84.97225952]
[124.58498383 -99.77153015]
[126.81009674 -114.60557556]
[129.03521729 -129.43962097]
[131.26033020 -144.27366638]
[133.48544312 -159.10771179]
[135.71057129 -173.94175720]
[137.93568420 -188.77578735]
[127.41763306 -197.68429565]
[122.71224213 -210.52478027]
[124.94813538 -223.90649414]
[133.43580627 -234.35176086]
[145.87524414 -239.19967651]
[140.49157715 -254.07673645]
[150.20050049 -265.37213135]
[152.64624023 -280.17141724]
[155.09196472 -294.97067261]
[157.53768921 -309.76995850]
[152.15402222 -324.64700317]
[161.86294556 -335.94241333]
[164.30867004 -350.74166870]
[150.40510559 -356.55438232]
[138.21717834 -365.41729736]
[128.40216064 -376.85241699]
[121.48936462 -390.24307251]
[117.85158539 -404.86715698]
[117.68501282 -419.93597412]
[120.99862671 -434.63687134]
[127.61372375 -448.17706299]
[137.17356873 -459.82638550]
[149.16259766 -468.95654297]
[162.93426514 -475.07516479]
[177.74589539 -477.85232544]
[192.79869080 -477.13821411]
[207.28089905 -472.97137451]
[220.41148376 -465.57647705]
[231.48234558 -455.35238647]
[239.89645386 -442.85040283]
[245.20004272 -428.74475098]
[247.10708618 -413.79617310]
[245.51473999 -398.81082153]
[240.50889587 -384.59680176]
[232.35948181 -371.92068481]
[221.50601196 -361.46606445]
[208.53379822 -353.79678345]
[194.14241028 -349.32635498]
[179.10794067 -348.29595947]
[176.66221619 -333.49667358]
[182.22080994 -319.67816162]
[172.33695984 -307.32421875]
[169.89123535 -292.52496338]
[167.44551086 -277.72567749]
[164.99977112 -262.92642212]
[170.55838013 -249.10789490]
[160.67451477 -236.75395203]
[172.57254028 -225.44403076]
[175.41323853 -209.10719299]
[167.88191223 -194.14790344]
[152.76972961 -186.55067444]
[150.54461670 -171.71662903]
[148.31948853 -156.88258362]
[146.09437561 -142.04855347]
[143.86926270 -127.21450043]
[141.64414978 -112.38045502]
[139.41902161 -97.54641724]
[141.48698425 -93.24147034]
[140.87255859 -87.59173584]
[136.90046692 -82.30646515]
[134.23468018 -67.54524994]
[131.56887817 -52.78403091]
[128.90309143 -38.02281570]
[134.25532532 -24.12307549]
[124.18863678 -11.91765594]
[129.54087830 1.98208272]
[119.47418976 14.18750191]
[117.13870239 29.00457001]
[115.13468170 43.87009811]
[113.13066864 58.73562622]
[111.12665558 73.60115051]
[122.81401825 82.67307281]
[128.41651917 96.36636353]
[126.43988037 111.02880096]
[117.41130829 122.74967957]
[103.73886871 128.40286255]
[101.73485565 143.26838684]
[99.73084259 158.13391113]
[97.72682953 172.99945068]
[95.72281647 187.86497498]
[97.67765808 196.78778076]
[93.57670593 202.93627930]
[91.35159302 217.77032471]
[89.12647247 232.60435486]
[90.94824982 241.55528259]
[86.75621033 247.64204407]
[84.31048584 262.44131470]
[81.86476135 277.24057007]
[79.41902924 292.03985596]
[81.09164429 296.04687500]
[81.37378693 299.98196411]
[80.45880890 303.41683960]
[78.65930939 306.02996826]
[76.36194611 307.63626099]
[73.03968811 322.26373291]
[74.19068146 331.32534790]
[69.55754089 337.08346558]
[66.01786804 351.65985107]
[62.47819901 366.23623657]
[60.58490372 381.11624146]
[60.36157608 396.11459351]
[60.13824844 411.11294556]
[59.91492081 426.11126709]
[59.69159317 441.10961914]
[59.46826553 456.10794067]
[59.24493790 471.10629272]
[59.02161026 486.10461426]
[58.79828262 501.10296631]
[58.57495499 516.10131836]
[70.82217407 525.44537354]
[75.16812897 540.03875732]
[70.14704895 554.22509766]
[57.88207626 562.63391113]
[57.65874863 577.63226318]
[57.43542099 592.63061523]
[71.95293427 596.74206543]
[84.91115570 604.47167969]
[95.42655945 615.29241943]
[102.78220367 628.46655273]
[106.47656250 643.09576416]
[106.25773621 658.18267822]
[102.14066315 672.69860840]
[94.40604401 685.65380859]
[83.58123779 696.16503906]
[70.40429688 703.51562500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[27 185]
[43 184]
[44 183]
[45 182]
[46 180]
[47 179]
[48 174]
[49 173]
[50 172]
[51 171]
[52 169]
[53 168]
[54 167]
[55 165]
[56 164]
[57 163]
[58 162]
[59 161]
[64 156]
[65 155]
[66 154]
[67 153]
[71 152]
[73 150]
[75 148]
[76 147]
[77 146]
[78 145]
[79 142]
[80 141]
[81 140]
[82 139]
[83 138]
[84 137]
[85 136]
[90 132]
[92 130]
[93 129]
[94 128]
[95 127]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
