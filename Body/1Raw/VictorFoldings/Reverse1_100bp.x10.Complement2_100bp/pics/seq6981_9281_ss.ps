%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[222.95687866 431.35479736]
[233.20762634 420.36477661]
[244.98191833 411.02542114]
[237.51417542 398.01647949]
[230.04643250 385.00750732]
[222.57868958 371.99856567]
[208.17890930 368.36788940]
[200.42024231 355.28134155]
[204.32606506 340.20211792]
[196.85832214 327.19317627]
[189.39057922 314.18423462]
[181.92283630 301.17526245]
[174.45509338 288.16632080]
[168.39883423 283.93035889]
[166.97467041 274.90762329]
[159.70144653 261.78894043]
[155.65252686 276.23214722]
[143.33833313 284.79724121]
[128.38874817 283.56835938]
[117.63853455 273.10733032]
[116.00252533 258.19683838]
[124.22869110 245.65368652]
[138.55613708 241.21249390]
[152.43592834 246.90492249]
[146.56697083 233.10075378]
[140.69801331 219.29656982]
[129.60072327 214.48234558]
[124.59822083 203.02989197]
[128.87208557 190.86038208]
[123.20929718 176.97035217]
[117.54650879 163.08032227]
[111.88372040 149.19029236]
[99.91417694 140.32580566]
[101.86910248 124.62583923]
[96.20631409 110.73580933]
[92.01749420 125.13906860]
[80.77685547 135.07124329]
[65.96743011 137.45472717]
[52.17808914 131.55099487]
[43.68160629 119.18937683]
[43.11070633 104.20024109]
[50.64229202 91.22814941]
[63.94261551 84.29263306]
[78.89043427 85.54274750]
[90.85414886 94.59133911]
[87.09784698 80.06927490]
[83.34155273 65.54721832]
[79.58525085 51.02515793]
[75.82894897 36.50310135]
[72.07264709 21.98104095]
[68.31634521 7.45898151]
[64.56004333 -7.06307793]
[60.80374527 -21.58513641]
[56.08361053 -35.82312775]
[50.42082596 -49.71315384]
[44.75803757 -63.60317993]
[39.09525299 -77.49320984]
[33.43246460 -91.38323212]
[21.05788231 -101.24124146]
[23.41784859 -115.94769287]
[11.04326534 -125.80570221]
[13.40323067 -140.51216125]
[7.74044418 -154.40217590]
[-4.63413858 -164.26019287]
[-2.27417302 -178.96664429]
[-7.93695974 -192.85667419]
[-16.07192612 -180.25419617]
[-30.98098564 -178.60496521]
[-41.67373276 -189.12471008]
[-40.26787186 -204.05868530]
[-27.79975128 -212.39811707]
[-13.46162605 -207.99658203]
[-18.07563591 -222.26931763]
[-22.68964386 -236.54205322]
[-37.50862885 -234.04895020]
[-52.53269196 -233.74017334]
[-67.44159698 -235.62229919]
[-81.91756439 -239.65521240]
[-95.65202332 -245.75294495]
[-108.35224152 -253.78552246]
[-119.74749756 -263.58175659]
[-129.59490967 -274.93280029]
[-137.68457031 -287.59674072]
[-143.84407043 -301.30361938]
[-147.94209290 -315.76126099]
[-149.89129639 -330.66156006]
[-149.65014648 -345.68685913]
[-147.22377014 -360.51690674]
[-142.66387939 -374.83560181]
[-136.06768799 -388.33776855]
[-127.57579041 -400.73556519]
[-117.36917877 -411.76473999]
[-105.66541290 -421.19024658]
[-92.71395874 -428.81112671]
[-78.79088593 -434.46493530]
[-64.19295502 -438.03121948]
[-49.23133087 -439.43392944]
[-34.22491455 -438.64315796]
[-19.49356842 -435.67578125]
[-5.35129690 -430.59503174]
[7.90045929 -423.50921631]
[19.97923851 -414.56936646]
[30.62757874 -403.96603394]
[39.61851120 -391.92523193]
[46.76039505 -378.70361328]
[51.90100098 -364.58297729]
[54.93075180 -349.86431885]
[55.78507614 -334.86138916]
[54.44575500 -319.89395142]
[50.94134140 -305.28106689]
[45.34653091 -291.33416748]
[37.78057861 -278.35055542]
[28.40475273 -266.60696411]
[17.41889954 -256.35372925]
[5.05718040 -247.80938721]
[-8.41691113 -241.15606689]
[-3.80290151 -226.88333130]
[0.81110770 -212.61059570]
[5.95306730 -198.51945496]
[11.61585426 -184.62942505]
[23.58539581 -175.76493835]
[21.63047028 -160.06497192]
[27.29325676 -146.17494202]
[39.26279831 -137.31044006]
[37.30787277 -121.61048126]
[49.27741623 -112.74598694]
[47.32249069 -97.04602051]
[52.98527908 -83.15599060]
[58.64806366 -69.26596832]
[64.31085205 -55.37593842]
[69.97364044 -41.48591232]
[74.16246033 -55.88916779]
[85.40310669 -65.82133484]
[100.21252441 -68.20483398]
[114.00186920 -62.30109787]
[122.49835205 -49.93947601]
[123.06925201 -34.95034409]
[115.53766632 -21.97824860]
[102.23733521 -15.04273796]
[87.28952026 -16.29285240]
[75.32580566 -25.34143829]
[79.08210754 -10.81937885]
[82.83840942 3.70268059]
[86.59470367 18.22473907]
[90.35100555 32.74679947]
[94.10730743 47.26885986]
[97.86360931 61.79091644]
[101.61991119 76.31298065]
[105.37621307 90.83503723]
[110.09634399 105.07302856]
[115.75913239 118.96305084]
[128.13371277 128.82106018]
[125.77375031 143.52751160]
[131.43653870 157.41754150]
[137.09931946 171.30757141]
[142.76210022 185.19760132]
[157.56634521 196.14820862]
[154.50218201 213.42761230]
[160.37113953 227.23179626]
[166.24011230 241.03596497]
[172.82012939 254.51570129]
[180.09336853 267.63439941]
[187.46405029 280.69857788]
[194.93179321 293.70751953]
[202.39953613 306.71649170]
[209.86727905 319.72543335]
[217.33502197 332.73440552]
[232.32608032 336.96591187]
[239.71412659 350.26519775]
[235.58764648 364.53082275]
[243.05538940 377.53976440]
[250.52311707 390.54873657]
[257.99087524 403.55767822]
[271.99340820 398.09997559]
[286.65298462 394.79028320]
[301.64215088 393.70254517]
[316.62597656 394.86108398]
[331.26977539 398.24002075]
[345.24633789 403.76385498]
[358.24349976 411.30917358]
[369.97082520 420.70742798]
[380.16638184 431.74862671]
[388.60235596 444.18615723]
[395.09030151 457.74212646]
[399.48529053 472.11367798]
[401.68908691 486.97979736]
[401.65252686 502.00830078]
[399.37637329 516.86346436]
[394.91146851 531.21350098]
[388.35760498 544.73773193]
[379.86120605 557.13403320]
[369.61203003 568.12548828]
[357.83905029 577.46655273]
[344.80532837 584.94848633]
[330.80203247 590.40423584]
[316.14196777 593.71179199]
[301.15264893 594.79742432]
[286.16897583 593.63671875]
[271.52569580 590.25567627]
[257.54989624 584.72985840]
[244.55381775 577.18273926]
[232.82780457 567.78277588]
[222.63383484 556.74011230]
[214.19963074 544.30139160]
[207.71360779 530.74450684]
[203.32067871 516.37231445]
[201.11898804 501.50592041]
[201.15771484 486.47738647]
[203.43597412 471.62252808]
[207.90290833 457.27316284]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 173]
[4 172]
[5 171]
[6 170]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[15 162]
[16 161]
[24 160]
[25 159]
[26 158]
[29 156]
[30 155]
[31 154]
[32 153]
[34 151]
[35 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[60 125]
[62 123]
[63 122]
[65 120]
[66 119]
[72 118]
[73 117]
[74 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
