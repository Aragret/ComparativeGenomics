%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUACUCUCAUUAUCUAUCCCGAGUCCGCAAACACAUACUAUACAAACGCCAAAGCUACUACACCAGAAACCUCAUCUUUGGACACUCCUUUCCAUAAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[106.48710632 677.80572510]
[93.48317719 670.28900146]
[81.52391815 661.20172119]
[70.79793549 650.68713379]
[61.47439575 638.91107178]
[53.70034790 626.05932617]
[47.59839630 612.33453369]
[43.26478195 597.95324707]
[40.76784897 583.14215088]
[40.14697647 568.13488770]
[41.41196060 553.16815186]
[44.54284668 538.47796631]
[49.49025726 524.29608154]
[56.17616653 510.84609985]
[64.49512482 498.34017944]
[74.31593323 486.97552490]
[85.48370361 476.93142700]
[97.82229614 468.36624146]
[111.13713074 461.41510010]
[125.21819305 456.18759155]
[139.84341431 452.76617432]
[138.28289795 437.84756470]
[136.72236633 422.92895508]
[127.70298004 411.07571411]
[133.96258545 396.54547119]
[132.40206909 381.62686157]
[130.84155273 366.70825195]
[129.05908203 351.81454468]
[127.05506897 336.94900513]
[125.05105591 322.08346558]
[123.04704285 307.21795654]
[121.04302216 292.35241699]
[119.03900909 277.48690796]
[107.07543945 268.68869019]
[104.83132172 253.64146423]
[114.14080811 241.15263367]
[112.13679504 226.28710938]
[110.13278198 211.42156982]
[108.12876892 196.55604553]
[105.90364838 181.72200012]
[103.45792389 166.92272949]
[101.01219940 152.12345886]
[84.87970734 149.89244080]
[70.22278595 142.79249573]
[58.47179031 131.51646423]
[50.77348328 117.16477966]
[47.87913513 101.13800812]
[50.07120132 85.00017548]
[57.13576126 70.32616425]
[68.38339233 58.54798126]
[82.71645355 50.81505585]
[79.83117676 36.09516525]
[76.94590759 21.37527466]
[74.06063080 6.65538311]
[71.17536163 -8.06450844]
[68.29008484 -22.78439903]
[51.93616867 -24.58771706]
[36.95478821 -31.34403801]
[24.80479050 -42.38282776]
[16.66540718 -56.61715698]
[13.32180691 -72.65071869]
[15.08936882 -88.91480255]
[21.78397560 -103.82175446]
[32.74111176 -115.91999817]
[46.88180923 -124.03533173]
[43.55955124 -138.66279602]
[40.23729324 -153.29025269]
[36.91503143 -167.91770935]
[33.59277344 -182.54518127]
[23.11479759 -190.06680298]
[20.64881706 -202.31843567]
[26.98211288 -212.62455750]
[23.87800407 -227.29985046]
[20.77389336 -241.97515869]
[8.15145969 -255.38246155]
[14.23773575 -271.84222412]
[10.91547585 -286.46969604]
[7.59321642 -301.09713745]
[4.27095699 -315.72460938]
[-5.25232172 -320.97967529]
[-10.20926952 -330.41415405]
[-9.17703247 -340.80081177]
[-2.73669243 -348.73397827]
[-5.62196493 -363.45385742]
[-10.34362793 -371.27331543]
[-8.43890190 -378.41430664]
[-11.10469723 -393.17550659]
[-13.77049255 -407.93673706]
[-28.80775642 -409.17895508]
[-43.01079559 -414.27169800]
[-55.41122818 -422.86773682]
[-65.16357422 -434.38095093]
[-71.60289001 -448.02636719]
[-74.29014587 -462.87362671]
[-73.04211426 -477.91040039]
[-67.94388580 -492.11148071]
[-59.34307098 -504.50860596]
[-47.82608414 -514.25646973]
[-34.17817688 -520.69055176]
[-19.32988167 -523.37207031]
[-4.29358244 -522.11822510]
[9.90552139 -517.01452637]
[22.29931259 -508.40890503]
[32.04275894 -496.88815308]
[38.47153854 -483.23776245]
[41.14732742 -468.38845825]
[39.88768387 -453.35263062]
[34.77849197 -439.15548706]
[26.16810608 -426.76504517]
[14.64359760 -417.02603149]
[0.99072433 -410.60253906]
[3.65651989 -395.84130859]
[6.32231522 -381.08007812]
[9.09792614 -366.33914185]
[11.98319912 -351.61923218]
[25.72374916 -338.01467896]
[18.89841652 -319.04687500]
[22.22067642 -304.41940308]
[25.54293633 -289.79196167]
[28.86519623 -275.16448975]
[38.93024063 -268.45468140]
[41.81778336 -256.29550171]
[35.44919586 -245.07926941]
[38.55330658 -230.40396118]
[41.65741730 -215.72866821]
[54.07336426 -203.32659912]
[48.22023392 -185.86743164]
[51.54249191 -171.23997498]
[54.86475372 -156.61251831]
[58.18701172 -141.98504639]
[61.50926971 -127.35758972]
[75.12953186 -126.69544983]
[88.12480164 -122.52162933]
[99.60478973 -115.11513519]
[108.78120422 -104.97666931]
[115.02188873 -92.79480743]
[117.89439392 -79.39920807]
[117.19589233 -65.70412445]
[112.96753693 -52.64601898]
[105.49205780 -41.11949921]
[95.27488708 -31.91604805]
[83.00997925 -25.66967201]
[85.89524841 -10.94978046]
[88.78052521 3.77011037]
[91.66579437 18.49000168]
[94.55107117 33.20989227]
[97.43634033 47.92978287]
[111.01367188 49.04336548]
[123.83895874 53.63639450]
[135.03645325 61.39525604]
[143.84158325 71.79014587]
[149.65307617 84.11128235]
[152.07414246 97.51733398]
[150.93943787 111.09291840]
[146.32646179 123.91104126]
[138.55020142 135.09646606]
[128.14163208 143.88540649]
[115.81147003 149.67773438]
[118.25719452 164.47700500]
[120.70291901 179.27627563]
[124.59587860 184.62008667]
[125.12612152 190.27835083]
[122.99430084 194.55203247]
[124.99831390 209.41755676]
[127.00232697 224.28309631]
[129.00633240 239.14862061]
[141.29061890 248.72640991]
[143.11120605 263.83071899]
[133.90454102 275.48287964]
[135.90855408 290.34841919]
[137.91256714 305.21392822]
[139.91658020 320.07946777]
[141.92059326 334.94500732]
[143.92460632 349.81051636]
[147.65673828 355.26788330]
[148.01828003 360.93942261]
[145.76014709 365.14773560]
[147.32067871 380.06634521]
[148.88119507 394.98495483]
[158.01220703 407.90527344]
[151.64097595 421.36843872]
[153.20149231 436.28704834]
[154.76202393 451.20565796]
[169.77868652 451.52642822]
[184.63673401 453.72683716]
[199.10182190 457.77215576]
[212.94581604 463.59857178]
[225.95037842 471.11419678]
[237.91040039 480.20050049]
[248.63726807 490.71417236]
[257.96179199 502.48944092]
[265.73693848 515.34051514]
[271.84002686 529.06475830]
[276.17486572 543.44573975]
[278.67303467 558.25665283]
[279.29516602 573.26385498]
[278.03146362 588.23071289]
[274.90179443 602.92114258]
[269.95559692 617.10345459]
[263.27081299 630.55395508]
[254.95289612 643.06060791]
[245.13304138 654.42608643]
[233.96612549 664.47113037]
[221.62825012 673.03735352]
[208.31401062 679.98962402]
[194.23338318 685.21832275]
[179.60844421 688.64093018]
[164.66986084 690.20355225]
[149.65321350 689.88146973]
[134.79534912 687.67980957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 183]
[22 182]
[23 181]
[25 179]
[26 178]
[27 177]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 169]
[36 166]
[37 165]
[38 164]
[39 163]
[40 160]
[41 159]
[42 158]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[56 142]
[65 131]
[66 130]
[67 129]
[68 128]
[69 127]
[72 125]
[73 124]
[74 123]
[76 120]
[77 119]
[78 118]
[79 117]
[83 115]
[84 114]
[86 113]
[87 112]
[88 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
