%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[8.66188335 578.74414062]
[6.67775583 593.63745117]
[2.64012098 608.10961914]
[-3.37242723 621.87896729]
[-11.24285221 634.67749023]
[-20.81795502 646.25604248]
[-31.91135216 656.38934326]
[-44.30710983 664.88000488]
[-57.76393509 671.56280518]
[-72.01989746 676.30767822]
[-86.79748535 679.02221680]
[-101.80906677 679.65368652]
[-116.76242065 678.18963623]
[-131.36648560 674.65875244]
[-145.33697510 669.12957764]
[-158.40197754 661.70989990]
[-170.30714417 652.54406738]
[-180.82077026 641.81042480]
[-189.73818970 629.71807861]
[-196.88580322 616.50225830]
[-202.12451172 602.42028809]
[-205.35234070 587.74621582]
[-206.50643921 572.76580811]
[-205.56434631 557.77050781]
[-202.54440308 543.05224609]
[-197.50540161 528.89758301]
[-190.54542542 515.58203125]
[-181.79995728 503.36471558]
[-171.43920898 492.48348999]
[-159.66487122 483.15014648]
[-146.70613098 475.54638672]
[-132.81523132 469.82019043]
[-118.26257324 466.08303833]
[-103.33142853 464.40768433]
[-88.31241608 464.82672119]
[-73.49790955 467.33200073]
[-59.17626190 471.87475586]
[-52.69676590 458.34640503]
[-46.21726990 444.81805420]
[-39.73777390 431.28970337]
[-41.21821213 416.46887207]
[-28.27881050 407.36489868]
[-22.20497513 393.64962769]
[-16.54218864 379.75958252]
[-10.87940216 365.86956787]
[-11.26513577 358.48898315]
[-5.02751923 351.81591797]
[0.84144169 338.01171875]
[6.71040249 324.20755005]
[12.16575909 310.23474121]
[17.20267487 296.10571289]
[22.23959160 281.97668457]
[11.85670567 273.73114014]
[4.50718164 262.66845703]
[0.91793787 249.85749817]
[1.45178092 236.54113770]
[6.07078600 224.01585388]
[14.33862114 213.50540161]
[25.46173096 206.04129028]
[38.36548233 202.36155701]
[51.79798889 202.83779907]
[49.21932983 188.16812134]
[61.44577026 178.12696838]
[66.90112305 164.15415955]
[72.35648346 150.18136597]
[77.81184387 136.20857239]
[65.61647034 124.92284393]
[58.68518448 109.82144928]
[58.07914734 93.21641541]
[63.89114761 77.64993286]
[75.23136902 65.50521851]
[90.36363983 58.64162064]
[106.97122955 58.10994339]
[112.00814819 43.98091507]
[117.04505920 29.85188484]
[122.08197784 15.72285461]
[127.11889648 1.59382522]
[132.05049133 -12.57230949]
[136.87648010 -26.77476501]
[141.70248413 -40.97722244]
[146.52848816 -55.17967606]
[149.52325439 -69.87767792]
[150.63890076 -84.83613586]
[151.75454712 -99.79458618]
[145.06509399 -114.13201141]
[153.72756958 -126.24855804]
[154.84321594 -141.20701599]
[148.15376282 -155.54443359]
[156.81623840 -167.66098022]
[157.93188477 -182.61943054]
[151.24243164 -196.95686340]
[159.90490723 -209.07339478]
[160.68623352 -224.05303955]
[161.13284302 -239.04638672]
[161.57945251 -254.03973389]
[161.69111633 -269.03933716]
[161.46778870 -284.03765869]
[161.24446106 -299.03601074]
[161.02113342 -314.03433228]
[147.33569336 -320.88763428]
[138.41215515 -333.32260132]
[136.30105591 -348.48184204]
[141.48753357 -362.88180542]
[152.77975464 -373.21350098]
[167.58285522 -377.10281372]
[182.49520874 -373.65597534]
[194.09002686 -363.66506958]
[199.70294189 -349.42590332]
[198.04412842 -334.21054077]
[189.49478149 -321.51538086]
[176.01947021 -314.25765991]
[176.24279785 -299.25933838]
[176.46612549 -284.26098633]
[176.68945312 -269.26266479]
[178.95123291 -266.55770874]
[180.01524353 -262.62289429]
[179.31767273 -258.03305054]
[176.57279968 -253.59313965]
[176.12619019 -238.59977722]
[175.67958069 -223.60643005]
[177.81832886 -220.80320740]
[178.70558167 -216.82478333]
[177.80375671 -212.27066040]
[174.86335754 -207.95774841]
[181.63262939 -194.69026184]
[172.89035034 -181.50378418]
[171.77468872 -166.54533386]
[178.54396057 -153.27783203]
[169.80168152 -140.09135437]
[168.68601990 -125.13291168]
[175.45529175 -111.86541748]
[166.71301270 -98.67893982]
[165.59735107 -83.72048950]
[164.48170471 -68.76203156]
[172.56376648 -81.39850616]
[184.26988220 -90.77754974]
[198.36473083 -95.90937805]
[213.36079407 -96.25241089]
[227.67555237 -91.77044678]
[239.79829407 -82.93648529]
[248.44970703 -70.68278503]
[252.71676636 -56.30251312]
[252.14916992 -41.31325531]
[246.80682373 -27.29686356]
[237.25349426 -15.73252010]
[224.49739075 -7.84063673]
[209.88468933 -4.45406389]
[194.95750427 -5.93019438]
[181.29112244 -12.11324883]
[170.32780457 -22.35071564]
[163.22453308 -35.56220627]
[160.73094177 -50.35367966]
[155.90493774 -36.15122223]
[151.07893372 -21.94876862]
[146.25294495 -7.74631214]
[147.07728577 -0.40177417]
[141.24792480 6.63074160]
[136.21101379 20.75977135]
[131.17408752 34.88880157]
[126.13717651 49.01782990]
[121.10025787 63.14685822]
[131.42042542 71.43197632]
[138.68894958 82.49170685]
[142.19989014 95.25189209]
[141.61224365 108.47322845]
[136.98310852 120.87162018]
[128.76205444 131.24290466]
[117.74755859 138.57977295]
[105.00936127 142.16967773]
[91.78463745 141.66392517]
[86.32928467 155.63671875]
[80.87392426 169.60952759]
[75.41856384 183.58232117]
[77.60702515 199.25143433]
[65.77079010 208.29316711]
[78.12020874 219.78854370]
[85.09190369 235.11198425]
[85.64206696 251.90106201]
[79.71453857 267.57925415]
[68.24505615 279.75140381]
[53.01370239 286.56961060]
[36.36862183 287.01361084]
[31.33170509 301.14263916]
[26.29478836 315.27166748]
[27.22864723 319.51217651]
[26.80695343 323.43475342]
[25.29610062 326.65234375]
[23.06084442 328.90405273]
[20.51457977 330.07650757]
[14.64561844 343.88067627]
[8.77665806 357.68487549]
[3.01062441 371.53234863]
[-2.65216231 385.42239380]
[-8.31494904 399.31240845]
[-7.57137060 403.59039307]
[-8.16779709 407.49023438]
[-9.82081318 410.63711548]
[-12.15438557 412.78677368]
[-14.75046444 413.84439087]
[-13.73348331 429.63287354]
[-26.20942879 437.76922607]
[-32.68892288 451.29754639]
[-39.16841888 464.82589722]
[-45.64791489 478.35424805]
[-33.13137817 486.66583252]
[-21.89345360 496.63854980]
[-12.15288830 508.07827759]
[-4.09928608 520.76232910]
[2.11058784 534.44384766]
[6.35585594 548.85650635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 204]
[38 203]
[39 202]
[40 201]
[42 199]
[43 194]
[44 193]
[45 192]
[47 191]
[48 190]
[49 189]
[50 184]
[51 183]
[52 182]
[61 175]
[63 173]
[64 172]
[65 171]
[66 170]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 155]
[79 154]
[80 153]
[81 152]
[82 134]
[83 133]
[84 132]
[86 130]
[87 129]
[89 127]
[90 126]
[92 124]
[93 120]
[94 119]
[95 118]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
