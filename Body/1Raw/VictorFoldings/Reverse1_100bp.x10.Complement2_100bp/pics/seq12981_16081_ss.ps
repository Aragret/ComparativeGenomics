%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[115.57185364 494.21426392]
[127.05500031 483.59957886]
[126.16218567 468.62619019]
[125.26937103 453.65277100]
[124.37655640 438.67938232]
[123.48373413 423.70596313]
[112.74449158 416.58572388]
[107.99623108 404.39816284]
[111.18125916 391.51150513]
[121.35431671 382.68408203]
[120.68453217 367.69903564]
[120.01474762 352.71398926]
[119.34496307 337.72897339]
[118.11798096 322.77923584]
[116.33551788 307.88549805]
[107.02313995 300.16500854]
[105.41625214 287.77139282]
[112.91716003 277.27856445]
[111.35663605 262.35995483]
[109.79611206 247.44136047]
[96.29089355 237.41899109]
[94.17120361 220.39483643]
[105.23336792 206.84317017]
[103.45090485 191.94944763]
[101.66843414 177.05574036]
[99.88597107 162.16201782]
[98.10350800 147.26829529]
[82.04644775 143.76710510]
[68.15618134 134.98371887]
[58.10909653 121.97820282]
[53.11775970 106.32016754]
[53.78456497 89.89936829]
[60.02904510 74.69759369]
[71.09755707 62.54953003]
[85.65425873 54.92130661]
[83.42913818 40.08726120]
[81.20402527 25.25321770]
[78.97890472 10.41917419]
[76.75379181 -4.41486979]
[74.52867126 -19.24891281]
[57.82602692 -21.30694008]
[42.38334656 -27.96159172]
[29.43727303 -38.67174149]
[20.02221298 -52.57183456]
[14.88769245 -68.54182434]
[14.43868542 -85.29744720]
[18.70368576 -101.49346924]
[27.33302498 -115.83171082]
[39.62752914 -127.16507721]
[54.59515762 -134.58937073]
[51.70988464 -149.30926514]
[48.82461166 -164.02914429]
[38.57522964 -171.85940552]
[36.47511673 -184.17904663]
[43.11245728 -194.29202271]
[40.44666290 -209.05323792]
[37.78086853 -223.81445312]
[35.11507034 -238.57566833]
[32.44927597 -253.33688354]
[20.23162460 -267.11404419]
[26.80526924 -283.38531494]
[23.91999817 -298.10522461]
[21.03472519 -312.82510376]
[8.61330509 -326.41885376]
[14.94396782 -342.78619385]
[11.83985806 -357.46148682]
[8.73574734 -372.13677979]
[5.63163757 -386.81210327]
[-9.29529381 -385.20654297]
[-24.30806923 -385.11941528]
[-39.25263214 -386.55154419]
[-53.97562790 -389.48828125]
[-68.32597351 -393.89947510]
[-82.15641785 -399.73983765]
[-95.32502747 -406.94946289]
[-107.69667053 -415.45437622]
[-119.14440918 -425.16726685]
[-129.55075073 -435.98849487]
[-138.80892944 -447.80700684]
[-146.82391357 -460.50152588]
[-153.51348877 -473.94180298]
[-158.80897522 -487.98986816]
[-162.65606689 -502.50161743]
[-165.01525879 -517.32812500]
[-165.86236572 -532.31726074]
[-165.18867493 -547.31512451]
[-163.00109863 -562.16796875]
[-159.32209778 -576.72320557]
[-154.18942261 -590.83160400]
[-147.65574646 -604.34832764]
[-139.78810120 -617.13470459]
[-130.66723633 -629.05950928]
[-120.38673401 -640.00036621]
[-109.05209351 -649.84503174]
[-96.77963257 -658.49243164]
[-83.69528198 -665.85388184]
[-69.93331146 -671.85375977]
[-55.63494110 -676.43066406]
[-40.94689178 -679.53741455]
[-26.01989174 -681.14233398]
[-11.00711250 -681.22882080]
[3.93738794 -679.79602051]
[18.66025543 -676.85864258]
[33.01041031 -672.44683838]
[46.84059143 -666.60583496]
[60.00888443 -659.39562988]
[72.38015747 -650.89019775]
[83.82746124 -641.17675781]
[94.23332977 -630.35510254]
[103.49098206 -618.53619385]
[111.50541687 -605.84130859]
[118.19438934 -592.40075684]
[123.48927307 -578.35241699]
[127.33571625 -563.84051514]
[129.69425964 -549.01391602]
[130.54069519 -534.02471924]
[129.86634827 -519.02685547]
[127.67812347 -504.17416382]
[123.99848938 -489.61904907]
[118.86518860 -475.51089478]
[112.33091736 -461.99444580]
[104.46270752 -449.20843506]
[95.34131622 -437.28402710]
[85.06033325 -426.34362793]
[73.72526550 -416.49948120]
[61.45241928 -407.85260010]
[48.36774826 -400.49176025]
[34.60551453 -394.49243164]
[20.30694008 -389.91619873]
[23.41105080 -375.24090576]
[26.51515961 -360.56558228]
[29.61927032 -345.89028931]
[39.58330154 -339.03137207]
[42.28948975 -326.83056641]
[35.75461578 -315.71038818]
[38.63988876 -300.99047852]
[41.52516174 -286.27059937]
[51.38596725 -279.26409912]
[53.91020584 -267.02432251]
[47.21049500 -256.00268555]
[49.87628937 -241.24147034]
[52.54208374 -226.48023987]
[55.20787811 -211.71902466]
[57.87367630 -196.95780945]
[69.91486359 -184.19157410]
[63.54450226 -166.91442871]
[66.42977142 -152.19453430]
[69.31504822 -137.47463989]
[82.57351685 -136.89010620]
[95.37336731 -133.35304260]
[107.06521606 -127.03906250]
[117.05503845 -118.26478577]
[124.83433533 -107.47193146]
[130.00604248 -95.20508575]
[132.30480957 -82.08422089]
[131.61051941 -68.77337646]
[127.95470428 -55.94703674]
[121.51899719 -44.25596237]
[112.62620544 -34.29416275]
[101.72406006 -26.56873703]
[89.36271667 -21.47403145]
[91.58782959 -6.63998699]
[93.81295013 8.19405651]
[96.03806305 23.02810097]
[98.26318359 37.86214447]
[100.48830414 52.69618607]
[113.78175354 54.74569321]
[125.96105194 60.45366287]
[136.04159546 69.35865021]
[143.20845032 80.74076080]
[146.88224792 93.67983246]
[146.76596069 107.12983704]
[142.86900330 120.00345612]
[135.50640869 131.25994873]
[125.27339172 139.98930359]
[112.99722290 145.48583984]
[114.77968597 160.37954712]
[116.56215668 175.27326965]
[118.34461975 190.16699219]
[120.12708282 205.06069946]
[131.60330200 212.11131287]
[136.84686279 224.30621338]
[134.14930725 237.10485840]
[124.71471405 245.88084412]
[126.27523804 260.79943848]
[127.83576202 275.71804810]
[138.99487305 290.36578369]
[131.22923279 306.10305786]
[133.01170349 320.99676514]
[144.19348145 310.99838257]
[159.00703430 313.35601807]
[166.53236389 326.33172607]
[161.22209167 340.36032104]
[146.99072266 345.10040283]
[134.33000183 337.05917358]
[134.99978638 352.04421997]
[135.66957092 367.02926636]
[136.33935547 382.01428223]
[149.46307373 393.58093262]
[150.14750671 410.72290039]
[138.45713806 422.81314087]
[139.34996033 437.78656006]
[140.24278259 452.75994873]
[141.13558960 467.73336792]
[142.02841187 482.70678711]
[154.69154358 491.88168335]
[158.44438171 507.06228638]
[151.51493835 521.08074951]
[137.17510986 527.31793213]
[122.19569397 522.82891846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[10 198]
[11 197]
[12 196]
[13 195]
[14 189]
[15 188]
[18 186]
[19 185]
[20 184]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[50 148]
[51 147]
[52 146]
[55 144]
[56 143]
[57 142]
[58 141]
[59 140]
[61 137]
[62 136]
[63 135]
[65 132]
[66 131]
[67 130]
[68 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
