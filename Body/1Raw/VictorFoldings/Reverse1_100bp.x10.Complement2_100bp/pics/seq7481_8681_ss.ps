%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[170.00860596 437.06274414]
[173.93492126 422.55465698]
[180.02996826 408.81600952]
[188.15087891 396.16882324]
[198.10728455 384.90957642]
[209.66578674 375.30221558]
[222.55545044 367.57196045]
[216.89266968 353.68191528]
[211.22987366 339.79190063]
[205.56709290 325.90185547]
[199.90429688 312.01184082]
[185.48191833 302.01376343]
[188.13902283 283.79229736]
[182.27006531 269.98812866]
[176.40110779 256.18395996]
[172.38566589 253.59837341]
[169.95182800 248.46286011]
[170.56970215 241.88032532]
[165.11434937 227.90753174]
[159.65898132 213.93472290]
[154.20362854 199.96192932]
[148.74827576 185.98913574]
[141.67117310 172.76361084]
[133.07260132 160.47276306]
[124.47403717 148.18193054]
[115.87547302 135.89109802]
[107.27690887 123.60025787]
[98.67834473 111.30941772]
[97.78364563 126.28270721]
[89.02199554 138.45782471]
[75.10828400 144.06217957]
[60.35383224 141.35919189]
[49.33046722 131.18640137]
[45.45389557 116.69599152]
[49.92531204 102.37794495]
[61.35920715 92.66887665]
[76.21266174 90.57723999]
[89.88336182 96.75132751]
[83.00395203 83.42189789]
[76.12454224 70.09246826]
[69.24512482 56.76303864]
[62.36571503 43.43360901]
[55.48630142 30.10417938]
[43.45861816 25.44610786]
[38.00315475 14.20236874]
[41.55379868 2.63865447]
[34.87360382 -10.79172134]
[28.19340897 -24.22209740]
[21.51321411 -37.65247345]
[14.83301926 -51.08285141]
[8.15282440 -64.51322937]
[-3.80417418 -69.34985352]
[-9.09163189 -80.67356873]
[-5.36921453 -92.18314362]
[-11.84871006 -105.71148682]
[-24.22024345 -104.51766205]
[-36.33758545 -107.17156219]
[-47.03533173 -113.40258789]
[-55.28932571 -122.59685516]
[-60.31469727 -133.85765076]
[-61.64048386 -146.09283447]
[-59.15373230 -158.12083435]
[-53.10895538 -168.78466797]
[-44.10215759 -177.06332397]
[-49.97111893 -190.86749268]
[-55.84008026 -204.67167664]
[-61.70904160 -218.47584534]
[-67.57800293 -232.28002930]
[-73.44696045 -246.08419800]
[-74.50895691 -231.12184143]
[-79.68928528 -217.04476929]
[-88.57941437 -204.96313477]
[-100.47822571 -195.82977295]
[-114.44732666 -190.36497498]
[-129.38507080 -188.99971008]
[-144.11338806 -191.84164429]
[-157.47074890 -198.66667175]
[-168.40373230 -208.93650818]
[-176.05014038 -221.84126282]
[-179.80690002 -236.36320496]
[-179.37777710 -251.35707092]
[-174.79660034 -265.64038086]
[-166.42466736 -278.08666992]
[-154.92221069 -287.71441650]
[-141.19636536 -293.76431274]
[-126.32961273 -295.75924683]
[-111.49440765 -293.54187012]
[-97.86071777 -287.28707886]
[-86.50374603 -277.48815918]
[-78.31769562 -264.91470337]
[-79.87821198 -279.83331299]
[-81.43873596 -294.75192261]
[-82.99925995 -309.67050171]
[-97.75930786 -313.04980469]
[-110.62104034 -321.04071045]
[-120.18931580 -332.77642822]
[-125.42623901 -346.98394775]
[-125.76374817 -362.12213135]
[-121.16522217 -376.54891968]
[-112.12949371 -388.69940186]
[-99.63667297 -397.25558472]
[-85.04190063 -401.28936768]
[-69.92829895 -400.36315918]
[-55.93528748 -394.57745361]
[-44.58071518 -384.55984497]
[-37.09624481 -371.39697266]
[-34.29373932 -356.51663208]
[-36.47718811 -341.53292847]
[-43.40974808 -328.07119751]
[-54.33942795 -317.59164429]
[-68.08065796 -311.23104858]
[-66.52013397 -296.31243896]
[-64.95960999 -281.39382935]
[-63.39908600 -266.47521973]
[-59.64278793 -251.95317078]
[-53.77382660 -238.14898682]
[-47.90486526 -224.34481812]
[-42.03590393 -210.54063416]
[-36.16694260 -196.73645020]
[-30.29798317 -182.93228149]
[-12.60372448 -182.76156616]
[3.27991772 -174.84297180]
[14.13052368 -160.73117065]
[17.72413063 -143.24249268]
[13.29093838 -125.89286041]
[1.67963517 -112.19097900]
[8.15913105 -98.66263580]
[23.15104675 -89.54071808]
[21.58320045 -71.19342041]
[28.26339531 -57.76304245]
[34.94358826 -44.33266830]
[41.62378311 -30.90229225]
[48.30397797 -17.47191620]
[54.98417282 -4.04154015]
[70.11023712 4.85615873]
[68.81573486 23.22476768]
[75.69514465 36.55419540]
[82.57455444 49.88362503]
[89.45397186 63.21305466]
[96.33338165 76.54248047]
[103.21279144 89.87191010]
[110.96918488 102.71085358]
[119.56774902 115.00169373]
[128.16632080 127.29252625]
[136.76487732 139.58337402]
[145.36343384 151.87420654]
[153.96200562 164.16503906]
[152.38417053 149.24826050]
[155.93614197 134.67488098]
[164.20062256 122.15695953]
[176.20672607 113.16510010]
[190.54397583 108.75565338]
[205.52806091 109.44664001]
[219.39863586 115.15687561]
[230.52622986 125.21553802]
[237.60357666 138.44093323]
[239.79922485 153.27937317]
[236.85525513 167.98764038]
[229.11749268 180.83781433]
[217.49497986 190.32028198]
[203.35311890 195.32104492]
[188.35327148 195.25263977]
[174.25761414 190.12306213]
[162.72106934 180.53378296]
[168.17642212 194.50657654]
[173.63179016 208.47937012]
[179.08714294 222.45216370]
[184.54249573 236.42497253]
[190.20529175 250.31500244]
[196.07424927 264.11917114]
[201.94320679 277.92333984]
[213.59112549 283.46310425]
[218.19520569 295.08145142]
[213.79432678 306.34906006]
[219.45712280 320.23907471]
[225.11990356 334.12911987]
[230.78268433 348.01913452]
[236.44548035 361.90914917]
[251.06579590 358.42395020]
[266.04681396 357.21151733]
[281.03729248 358.30020142]
[295.68591309 361.66455078]
[309.64923096 367.22567749]
[322.59994507 374.85321045]
[334.23449707 384.36834717]
[344.28012085 395.54806519]
[352.50134277 408.13024902]
[358.70544434 421.82000732]
[362.74700928 436.29641724]
[364.53125000 451.22012329]
[364.01641846 466.24127197]
[361.21450806 481.00778198]
[356.19125366 495.17349243]
[349.06439209 508.40634155]
[340.00097656 520.39611816]
[329.21343994 530.86175537]
[316.95471191 539.55798340]
[303.51214600 546.28088379]
[289.20080566 550.87292480]
[274.35623169 553.22637939]
[259.32638550 553.28613281]
[244.46354675 551.05078125]
[230.11616516 546.57269287]
[216.62054443 539.95690918]
[204.29306030 531.35845947]
[193.42265320 520.97894287]
[184.26417542 509.06158447]
[177.03230286 495.88583374]
[171.89656067 481.76052856]
[168.97734070 467.01675415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 178]
[8 177]
[9 176]
[10 175]
[11 174]
[13 171]
[14 170]
[15 169]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[23 147]
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[43 136]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[51 129]
[54 127]
[55 126]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[90 114]
[91 113]
[92 112]
[93 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
