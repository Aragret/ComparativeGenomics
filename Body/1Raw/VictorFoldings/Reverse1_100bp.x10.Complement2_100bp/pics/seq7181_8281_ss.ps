%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[-29.15994072 368.66094971]
[-30.10877991 383.64056396]
[-32.35958099 398.48049927]
[-35.89521027 413.06777954]
[-40.68876266 427.29138184]
[-46.70375443 441.04309082]
[-53.89440918 454.21820068]
[-62.20599747 466.71649170]
[-71.57526398 478.44277954]
[-81.93090057 489.30789185]
[-93.19409180 499.22906494]
[-105.27912140 508.13082886]
[-118.09400177 515.94543457]
[-131.54121399 522.61340332]
[-145.51841736 528.08398438]
[-159.91923523 532.31555176]
[-174.63404846 535.27587891]
[-189.55087280 536.94244385]
[-204.55619812 537.30255127]
[-219.53581238 536.35351562]
[-234.37570190 534.10253906]
[-248.96292114 530.56671143]
[-263.18646240 525.77294922]
[-276.93807983 519.75775146]
[-290.11309814 512.56689453]
[-302.61126709 504.25512695]
[-314.33743286 494.88571167]
[-325.20239258 484.52993774]
[-335.12341309 473.26660156]
[-344.02499390 461.18142700]
[-351.83944702 448.36645508]
[-358.50720215 434.91912842]
[-363.97760010 420.94186401]
[-368.20895386 406.54098511]
[-371.16906738 391.82614136]
[-372.83544922 376.90927124]
[-373.19537354 361.90396118]
[-372.24609375 346.92434692]
[-369.99487305 332.08450317]
[-366.45883179 317.49731445]
[-361.66488647 303.27383423]
[-355.64950562 289.52230835]
[-348.45849609 276.34738159]
[-340.14654541 263.84933472]
[-330.77694702 252.12330627]
[-320.42102051 241.25849915]
[-309.15756226 231.33763123]
[-297.07226562 222.43620300]
[-284.25717163 214.62196350]
[-270.80975342 207.95437622]
[-256.83239746 202.48419189]
[-242.43148804 198.25303650]
[-227.71658325 195.29312134]
[-212.79971313 193.62695312]
[-197.79437256 193.26724243]
[-182.81478882 194.21672058]
[-167.97496033 196.46813965]
[-153.38783264 200.00437927]
[-139.16442871 204.79853821]
[-125.41297913 210.81410217]
[-112.23815918 218.00531006]
[-99.74023438 226.31742859]
[-88.01432037 235.68719482]
[-77.14966583 246.04328918]
[-65.89356995 236.12863159]
[-54.63747787 226.21397400]
[-43.38138199 216.29933167]
[-32.12528610 206.38467407]
[-20.86918831 196.47003174]
[-9.61309338 186.55537415]
[1.64300227 176.64071655]
[12.89909840 166.72607422]
[24.15519333 156.81141663]
[35.41128922 146.89677429]
[46.66738510 136.98211670]
[57.92348099 127.06746674]
[52.00273895 114.11893463]
[49.96920395 100.02693176]
[51.98756409 85.93275452]
[57.89435959 72.97785187]
[67.21121216 62.21142578]
[79.18356323 54.50541687]
[92.84178925 50.48392868]
[107.07975769 50.47265244]
[120.74433899 54.47249603]
[132.72888184 62.15952682]
[144.13134766 52.41356277]
[155.53381348 42.66759491]
[157.27275085 37.74588776]
[160.41177368 34.32539749]
[164.14462280 32.68804169]
[167.66993713 32.75489044]
[179.49621582 23.52779198]
[191.32247925 14.30069351]
[203.14874268 5.07359505]
[214.97502136 -4.15350342]
[226.80128479 -13.38060188]
[218.53829956 -25.90909004]
[211.29681396 -39.05447388]
[205.12263489 -52.73364258]
[200.05480957 -66.86010742]
[196.12535095 -81.34456635]
[193.35911560 -96.09542847]
[191.77359009 -111.01944733]
[191.37879944 -126.02225494]
[192.17723083 -141.00900269]
[194.16386414 -155.88493347]
[197.32611084 -170.55599976]
[201.64398193 -184.92944336]
[207.09019470 -198.91439819]
[213.63029480 -212.42243958]
[221.22296143 -225.36816406]
[229.82015991 -237.66970825]
[239.36753845 -249.24932861]
[249.80476379 -260.03378296]
[261.06582642 -269.95492554]
[273.07952881 -278.94998169]
[285.76989746 -286.96209717]
[299.05673218 -293.94064331]
[312.85601807 -299.84149170]
[327.08050537 -304.62731934]
[341.64025879 -308.26785278]
[356.44323730 -310.74011230]
[371.39584351 -312.02844238]
[386.40353394 -312.12469482]
[401.37142944 -311.02828979]
[416.20489502 -308.74612427]
[430.81015015 -305.29266357]
[445.09487915 -300.68969727]
[458.96871948 -294.96636963]
[472.34396362 -288.15884399]
[485.13610840 -280.31015015]
[497.26419067 -271.46994019]
[508.65158081 -261.69409180]
[519.22631836 -251.04440308]
[528.92144775 -239.58821106]
[537.67572021 -227.39796448]
[545.43383789 -214.55070496]
[552.14666748 -201.12767029]
[557.77185059 -187.21372986]
[562.27374268 -172.89685059]
[565.62390137 -158.26756287]
[567.80120850 -143.41833496]
[568.79180908 -128.44305420]
[568.58953857 -113.43642426]
[567.19555664 -98.49330139]
[564.61877441 -83.70816040]
[560.87548828 -69.17449188]
[555.98925781 -54.98417664]
[549.99108887 -41.22693253]
[542.91882324 -27.98973656]
[534.81719971 -15.35628223]
[525.73748779 -3.40644288]
[515.73706055 7.78422976]
[504.87908936 18.14498329]
[493.23229980 27.61031342]
[480.87033081 36.12037659]
[467.87127686 43.62136841]
[454.31735229 50.06586838]
[440.29428101 55.41312408]
[425.89068604 59.62933350]
[411.19763184 62.68783569]
[396.30801392 64.56929779]
[381.31600952 65.26182556]
[366.31637573 64.76103973]
[351.40393066 63.07009888]
[336.67297363 60.19969940]
[322.21664429 56.16799545]
[308.12634277 51.00046539]
[294.49114990 44.72978973]
[281.39724731 37.39561081]
[268.92745972 29.04429626]
[257.16061401 19.72864914]
[246.17109680 9.50756550]
[236.02838135 -1.55433178]
[224.20211792 7.67276669]
[212.37585449 16.89986420]
[200.54957581 26.12696266]
[188.72331238 35.35406113]
[176.89703369 44.58116150]
[165.27976990 54.07005692]
[153.87731934 63.81602478]
[142.47485352 73.56198883]
[148.56353760 87.97234344]
[149.90408325 103.55866241]
[146.36541748 118.79705048]
[138.29353333 132.19761658]
[126.47763062 142.45016479]
[112.07295990 148.55229187]
[96.48789978 149.90737915]
[81.24622345 146.38293457]
[67.83813477 138.32356262]
[56.58203506 148.23822021]
[45.32593918 158.15286255]
[34.06984329 168.06752014]
[22.81374931 177.98216248]
[11.55765343 187.89682007]
[0.30155775 197.81147766]
[-10.95453835 207.72612000]
[-22.21063423 217.64077759]
[-33.46672821 227.55541992]
[-44.72282410 237.47007751]
[-55.97891998 247.38471985]
[-67.23501587 257.29937744]
[-58.33308029 269.38427734]
[-50.51829529 282.19906616]
[-43.85013962 295.64617920]
[-38.37936401 309.62329102]
[-34.14760590 324.02404785]
[-31.18706703 338.73883057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 204]
[65 203]
[66 202]
[67 201]
[68 200]
[69 199]
[70 198]
[71 197]
[72 196]
[73 195]
[74 194]
[75 193]
[76 192]
[86 183]
[87 182]
[88 181]
[92 180]
[93 179]
[94 178]
[95 177]
[96 176]
[97 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
