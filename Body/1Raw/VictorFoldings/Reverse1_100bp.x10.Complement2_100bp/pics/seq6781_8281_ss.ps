%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[201.74848938 410.83786011]
[199.24530029 396.04067993]
[197.88218689 381.09527588]
[197.66714478 366.08941650]
[198.60142517 351.11108398]
[200.67955017 336.24826050]
[203.88931274 321.58810425]
[208.21189880 307.21667480]
[213.62193298 293.21829224]
[220.08764648 279.67514038]
[227.57113647 266.66665649]
[236.02844238 254.26922607]
[245.40997314 242.55555725]
[234.45405579 232.31016541]
[223.49815369 222.06477356]
[212.54223633 211.81938171]
[201.58633423 201.57398987]
[190.63041687 191.32859802]
[179.67451477 181.08320618]
[168.56727600 171.00207520]
[157.31118774 161.08741760]
[146.05508423 151.17277527]
[134.79899597 141.25811768]
[123.54289246 131.34347534]
[116.44578552 129.28121948]
[112.19442749 121.19643402]
[101.08719635 111.11529541]
[89.90522003 101.11712646]
[78.64912415 91.20247650]
[63.17921448 87.88700104]
[58.74276352 73.66844940]
[47.48666763 63.75379944]
[36.15707397 53.92321777]
[24.39982414 44.60833359]
[12.30407143 35.73743820]
[0.20831971 26.86654282]
[-11.88743210 17.99564743]
[-21.74492264 29.31361580]
[-32.51491165 39.76703262]
[-44.12185669 49.28256607]
[-56.48433685 57.79347610]
[-69.51564026 65.24006653]
[-83.12435913 71.57009888]
[-97.21504211 76.73916626]
[-111.68883514 80.71102905]
[-126.44423676 83.45780945]
[-141.37773132 84.96025085]
[-156.38456726 85.20780182]
[-171.35949707 84.19874573]
[-186.19746399 81.94013977]
[-200.79438782 78.44783783]
[-215.04789734 73.74633789]
[-228.85800171 67.86861420]
[-242.12782288 60.85589981]
[-254.76429749 52.75737762]
[-266.67877197 43.62985992]
[-277.78771973 33.53736496]
[-288.01315308 22.55068779]
[-297.28335571 10.74689579]
[-305.53335571 -1.79121673]
[-312.70523071 -14.97570229]
[-318.74868774 -28.71407890]
[-323.62136841 -42.90998077]
[-327.28906250 -57.46383286]
[-329.72604370 -72.27355194]
[-330.91522217 -87.23524475]
[-330.84823608 -102.24398041]
[-329.52560425 -117.19447327]
[-326.95657349 -131.98185730]
[-323.15914917 -146.50239563]
[-318.16000366 -160.65425110]
[-311.99420166 -174.33815002]
[-304.70495605 -187.45811462]
[-296.34341431 -199.92211914]
[-286.96823120 -211.64271545]
[-276.64514160 -222.53770447]
[-265.44662476 -232.53067017]
[-253.45115662 -241.55151367]
[-240.74291992 -249.53694153]
[-227.41104126 -256.43096924]
[-213.54904175 -262.18524170]
[-199.25415039 -266.75933838]
[-184.62663269 -270.12124634]
[-169.76910400 -272.24737549]
[-154.78578186 -273.12277222]
[-139.78173828 -272.74130249]
[-124.86225128 -271.10565186]
[-110.13195038 -268.22732544]
[-95.69416809 -264.12646484]
[-81.65017700 -258.83187866]
[-68.09848022 -252.38064575]
[-55.13414764 -244.81806946]
[-42.84810638 -236.19718933]
[-31.32653618 -226.57846069]
[-20.65025520 -216.02935791]
[-10.89415073 -204.62387085]
[-2.12665749 -192.44201660]
[5.59072733 -179.56922913]
[12.20387077 -166.09582520]
[17.66638565 -152.11628723]
[21.93995476 -137.72868347]
[24.99460411 -123.03392792]
[26.80890465 -108.13510895]
[27.37013054 -93.13672638]
[26.67434692 -78.14398193]
[24.72643089 -63.26203918]
[21.54005051 -48.59528732]
[17.13755226 -34.24661255]
[11.54981899 -20.31665039]
[4.81604481 -6.90311956]
[-3.01653671 5.89989567]
[9.07921505 14.77079105]
[21.17496681 23.64168739]
[33.27071762 32.51258087]
[33.60540009 17.51631546]
[45.44546127 8.30692005]
[60.06284714 11.67321777]
[66.68216705 25.13369942]
[60.42390823 38.76580048]
[45.90304184 42.52075577]
[53.03006363 44.47710800]
[57.40131760 52.49770355]
[68.65741730 62.41235352]
[83.32221985 65.01866150]
[88.56378174 79.94638062]
[99.81987762 89.86103058]
[107.46936798 92.40224457]
[111.16833496 100.00806427]
[122.27557373 110.08920288]
[133.45755005 120.08737183]
[144.71363831 130.00202942]
[155.96974182 139.91667175]
[167.22583008 149.83132935]
[178.48193359 159.74597168]
[184.87742615 161.42202759]
[188.86746216 165.46882629]
[189.91990662 170.12730408]
[200.87580872 180.37269592]
[211.83172607 190.61808777]
[222.78762817 200.86347961]
[233.74354553 211.10887146]
[244.69944763 221.35426331]
[255.65536499 231.59965515]
[266.71463013 221.45494080]
[278.51803589 212.18658447]
[290.99630737 203.84896851]
[304.07617188 196.49102783]
[317.68093872 190.15594482]
[331.73071289 184.88087463]
[346.14309692 180.69680786]
[360.83346558 177.62826538]
[375.71560669 175.69328308]
[390.70220947 174.90318298]
[405.70535278 175.26264954]
[420.63693237 176.76953125]
[435.40933228 179.41499329]
[449.93588257 183.18351746]
[464.13134766 188.05299377]
[477.91238403 193.99484253]
[491.19815063 200.97418213]
[503.91067505 208.95007324]
[515.97534180 217.87570190]
[527.32135010 227.69868469]
[537.88208008 238.36137390]
[547.59564209 249.80120850]
[556.40496826 261.95101929]
[564.25842285 274.73956299]
[571.10980225 288.09173584]
[576.91900635 301.92922974]
[581.65191650 316.17080688]
[585.28076172 330.73287964]
[587.78424072 345.53002930]
[589.14764404 360.47540283]
[589.36297607 375.48126221]
[588.42895508 390.45959473]
[586.35113525 405.32247925]
[583.14166260 419.98269653]
[578.81933594 434.35421753]
[573.40954590 448.35269165]
[566.94409180 461.89596558]
[559.46087646 474.90457153]
[551.00378418 487.30218506]
[541.62249756 499.01602173]
[531.37200928 509.97735596]
[520.31256104 520.12182617]
[508.50897217 529.38995361]
[496.03054810 537.72735596]
[482.95053101 545.08502197]
[469.34564209 551.41986084]
[455.29577637 556.69470215]
[440.88333130 560.87847900]
[426.19290161 563.94671631]
[411.31069946 565.88146973]
[396.32406616 566.67126465]
[381.32095337 566.31152344]
[366.38940430 564.80432129]
[351.61706543 562.15863037]
[337.09057617 558.38977051]
[322.89520264 553.52008057]
[309.11425781 547.57794189]
[295.82864380 540.59832764]
[283.11627197 532.62219238]
[271.05178833 523.69635010]
[259.70596313 513.87316895]
[249.14540100 503.21026611]
[239.43206787 491.77026367]
[230.62297058 479.62026978]
[222.76979065 466.83157349]
[215.91862488 453.47927856]
[210.10968018 439.64169312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[26 129]
[27 128]
[28 126]
[29 125]
[31 123]
[32 122]
[33 120]
[34 114]
[35 113]
[36 112]
[37 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
