%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[70.01705933 731.68884277]
[55.01317978 731.97387695]
[40.02783966 731.17553711]
[25.13916779 729.29797363]
[10.42479038 726.35101318]
[-4.03857803 722.34991455]
[-18.17553329 717.31561279]
[-31.91236877 711.27429199]
[-45.17746735 704.25756836]
[-57.90167236 696.30187988]
[-70.01864624 687.44885254]
[-81.46520996 677.74450684]
[-92.18168640 667.23950195]
[-102.11220551 655.98864746]
[-111.20500183 644.05047607]
[-119.41265869 631.48736572]
[-126.69238281 618.36474609]
[-133.00624084 604.75103760]
[-138.32128906 590.71722412]
[-142.60981750 576.33648682]
[-145.84950256 561.68371582]
[-148.02340698 546.83544922]
[-149.12023926 531.86901855]
[-149.13424683 516.86242676]
[-148.06538391 501.89392090]
[-145.91920471 487.04159546]
[-142.70689392 472.38284302]
[-138.44522095 457.99411011]
[-133.15638733 443.95040894]
[-126.86797333 430.32492065]
[-119.61276245 417.18872070]
[-111.42858887 404.61029053]
[-102.35810089 392.65521240]
[-92.44860840 381.38577271]
[-81.75177002 370.86080933]
[-70.32334900 361.13510132]
[-58.22293472 352.25942993]
[-45.51361084 344.28002930]
[-32.26163864 337.23852539]
[-18.53610802 331.17160034]
[-4.40858078 326.11090088]
[10.04729080 322.08279419]
[24.75613785 319.10830688]
[39.64127731 317.20294189]
[54.62509918 316.37661743]
[69.62948608 316.63366699]
[70.96772003 301.69348145]
[64.39674377 288.32666016]
[73.33438110 275.27182007]
[74.67261505 260.33163452]
[76.01084900 245.39144897]
[74.04273987 242.46589661]
[73.39387512 238.44171143]
[74.56516266 233.94934082]
[77.75704956 229.81909180]
[79.76106262 214.95356750]
[81.76507568 200.08804321]
[83.54754639 185.19432068]
[85.10806274 170.27571106]
[78.73683167 156.81256104]
[87.86784363 143.89221191]
[89.42836761 128.97361755]
[78.00328064 121.61882782]
[70.84756470 110.06801605]
[69.35008240 96.56308746]
[73.80149841 83.72523499]
[83.33781433 74.04617310]
[96.10811615 69.40452576]
[97.89057922 54.51081085]
[99.67304993 39.61709213]
[97.42646790 33.39902115]
[98.49671173 27.81766129]
[101.73673248 24.30891418]
[103.96185303 9.47487068]
[106.18696594 -5.35917330]
[108.41208649 -20.19321632]
[94.59844208 -26.24454117]
[82.83108521 -35.65807343]
[73.90838623 -47.78743744]
[68.43375397 -61.80224991]
[66.77476501 -76.74498749]
[69.03855896 -91.59639740]
[75.06485748 -105.34500122]
[84.43739319 -117.05602264]
[96.51255798 -125.93491364]
[110.46369171 -131.38127136]
[125.33760071 -133.02941895]
[127.56271362 -147.86346436]
[129.78782654 -162.69750977]
[131.23725891 -177.62731934]
[131.90704346 -192.61235046]
[132.57682800 -207.59739685]
[133.24661255 -222.58242798]
[133.91639709 -237.56747437]
[131.21356201 -243.60122681]
[131.86570740 -249.24673462]
[134.83580017 -252.98674011]
[135.95144653 -267.94519043]
[137.06709290 -282.90365601]
[138.18273926 -297.86209106]
[124.46431732 -304.35589600]
[114.02093506 -315.36953735]
[108.26497650 -329.41351318]
[107.97488403 -344.58850098]
[113.18989563 -358.84219360]
[123.20471191 -370.24691772]
[136.66493225 -377.26028442]
[151.75015259 -378.93374634]
[166.42022705 -375.04104614]
[178.69114685 -366.10858154]
[186.90338135 -353.34442139]
[189.94628906 -338.47482300]
[187.40832520 -323.51074219]
[179.63275146 -310.47598267]
[167.67112732 -301.13339233]
[153.14118958 -296.74645996]
[152.02554321 -281.78799438]
[150.90989685 -266.82955933]
[149.79425049 -251.87109375]
[148.90142822 -236.89768982]
[148.23164368 -221.91264343]
[147.56185913 -206.92761230]
[146.89207458 -191.94256592]
[146.22229004 -176.95753479]
[157.23249817 -187.14454651]
[172.20828247 -187.99661255]
[184.30290222 -179.12419128]
[187.98687744 -164.58361816]
[181.57592773 -151.02264404]
[168.00106812 -144.64118958]
[153.46853638 -148.35673523]
[144.62187195 -160.47239685]
[142.39675903 -145.63835144]
[140.17164612 -130.80430603]
[153.90737915 -124.86468506]
[165.64656067 -115.56476593]
[174.58523560 -103.53378296]
[180.10926819 -89.58826447]
[181.83650208 -74.67662048]
[179.64326477 -59.81463623]
[173.67309570 -46.01627350]
[164.32745361 -34.22451019]
[152.23869324 -25.24688339]
[138.22729492 -19.70018387]
[123.24613190 -17.96809959]
[121.02101135 -3.13405609]
[118.79589844 11.69998741]
[116.57077789 26.53403091]
[114.56676483 41.39955902]
[112.78430176 56.29327774]
[111.00183105 71.18699646]
[124.00205231 80.63169861]
[130.48699951 95.33386230]
[128.69635010 111.30263519]
[119.11616516 124.20333862]
[104.34696960 130.53413391]
[102.78645325 145.45274353]
[109.04606628 159.98297119]
[100.02667236 171.83624268]
[98.46614838 186.75483704]
[100.80506134 192.93878174]
[99.81803131 198.53544617]
[96.63060760 202.09205627]
[94.62659454 216.95758057]
[92.62258148 231.82310486]
[90.95103455 246.72967529]
[89.61280060 261.66986084]
[88.27456665 276.61004639]
[94.74982452 291.04547119]
[85.90790558 303.03170776]
[84.56967163 317.97189331]
[99.38088989 320.38552856]
[113.97933197 323.86160278]
[128.28889465 328.38201904]
[142.23497009 333.92321777]
[155.74485779 340.45626831]
[168.74809265 347.94717407]
[181.17692566 356.35681152]
[192.96652222 365.64135742]
[204.05543518 375.75244141]
[214.38583374 386.63729858]
[223.90388489 398.23922729]
[232.55995178 410.49771118]
[240.30889893 423.34884644]
[247.11033630 436.72561646]
[252.92878723 450.55831909]
[257.73394775 464.77478027]
[261.50073242 479.30093384]
[264.20953369 494.06103516]
[265.84619141 508.97808838]
[266.40222168 523.97436523]
[265.87469482 538.97167969]
[264.26635742 553.89184570]
[261.58560181 568.65704346]
[257.84640503 583.19036865]
[253.06825256 597.41589355]
[247.27607727 611.25964355]
[240.50006104 624.64929199]
[232.77552795 637.51513672]
[224.14277649 649.79003906]
[214.64677429 661.41003418]
[204.33706665 672.31445312]
[193.26737976 682.44659424]
[181.49543762 691.75354004]
[169.08261108 700.18676758]
[156.09361267 707.70233154]
[142.59616089 714.26104736]
[128.66062927 719.82873535]
[114.35968781 724.37628174]
[99.76786804 727.88012695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 171]
[47 170]
[49 168]
[50 167]
[51 166]
[55 165]
[56 164]
[57 163]
[58 160]
[59 159]
[61 157]
[62 156]
[68 151]
[69 150]
[70 149]
[73 148]
[74 147]
[75 146]
[76 145]
[87 134]
[88 133]
[89 132]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
