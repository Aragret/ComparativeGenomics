%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUAAGUGACUAAAGGGGAUAAGAGUCCGAUGUGGGAUCUGGUUUGGAUGCGGUUUUAGGUAAAGUGAUAGUAUAAGUAGCCGCAUUUAGAUUGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[190.63262939 415.84072876]
[199.62187195 403.79125977]
[210.42765808 393.33987427]
[222.77011108 384.75735474]
[216.29060364 371.22900391]
[209.81111145 357.70065308]
[203.33161926 344.17230225]
[196.85212708 330.64395142]
[190.37261963 317.11563110]
[183.69242859 303.68524170]
[170.97976685 295.92395020]
[171.52621460 280.11218262]
[164.44911194 266.88665771]
[157.17588806 253.76797485]
[149.90264893 240.64927673]
[142.62942505 227.53057861]
[136.63690186 223.20491028]
[135.34722900 214.16198730]
[129.41976929 209.74757385]
[128.26486206 200.68644714]
[121.38545227 187.35700989]
[114.50604248 174.02758789]
[113.66109467 189.00376892]
[107.21864319 202.54980469]
[96.13439178 212.65618896]
[82.05261230 217.82373047]
[67.06225586 217.28585815]
[53.38705826 211.12232971]
[43.05565262 200.24749756]
[37.60063934 186.27456665]
[37.83123779 171.27633667]
[43.71323776 157.47770691]
[54.37408447 146.92562866]
[68.23229980 141.18544006]
[83.23210144 141.10865784]
[97.14836121 146.70666504]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[73.64778900 32.36009979]
[60.23862457 31.43630600]
[47.78771210 26.43410110]
[37.50148773 17.85330582]
[30.37197113 6.53974390]
[27.08109665 -6.39811325]
[27.93551636 -19.69774818]
[32.83806992 -32.06579971]
[41.29861832 -42.30382919]
[52.48298645 -49.42446136]
[48.94331741 -64.00083923]
[45.40364456 -78.57720947]
[41.86397171 -93.15358734]
[36.79786301 -100.75440216]
[38.38182449 -107.97332001]
[35.05956650 -122.60078430]
[31.73730659 -137.22824097]
[28.41504669 -151.85569763]
[24.55074120 -166.34939575]
[20.14974213 -180.68923950]
[8.70399380 -191.61193848]
[12.36659431 -206.04920959]
[7.96559620 -220.38905334]
[-4.58096504 -225.28787231]
[-11.90832520 -236.35676575]
[-11.52828312 -249.43107605]
[-3.80354643 -259.74407959]
[-7.99055767 -274.14785767]
[-12.17756844 -288.55163574]
[-21.99675179 -293.23056030]
[-27.50645828 -302.35324097]
[-27.09427834 -312.78292847]
[-21.13754654 -321.08535767]
[-24.89384651 -335.60742188]
[-28.65014648 -350.12948608]
[-32.40644836 -364.65155029]
[-36.16275024 -379.17361450]
[-51.19609451 -378.40979004]
[-66.07540894 -380.68814087]
[-80.19139099 -385.91537476]
[-92.96600342 -393.87741089]
[-103.87612915 -404.24826050]
[-112.47501373 -416.60317993]
[-118.41053009 -430.43627930]
[-121.43962097 -445.18109131]
[-121.43825531 -460.23382568]
[-118.40648651 -474.97808838]
[-112.46846008 -488.81008911]
[-103.86734009 -501.16345215]
[-92.95532990 -511.53231812]
[-80.17926788 -519.49200439]
[-66.06233978 -524.71667480]
[-51.18261337 -526.99237061]
[-36.14940643 -526.22583008]
[-21.57831955 -522.44848633]
[-8.06603050 -515.81500244]
[3.83414197 -506.59704590]
[13.63489342 -495.17205811]
[20.93488884 -482.00790405]
[25.43519592 -467.64364624]
[26.95153427 -452.66748047]
[25.42180824 -437.69268799]
[20.90865898 -423.33242798]
[13.59689713 -410.17480469]
[3.78593493 -398.75860596]
[-8.12247467 -389.55130005]
[-21.64068985 -382.92990112]
[-17.88438797 -368.40783691]
[-14.12808800 -353.88577271]
[-10.37178707 -339.36370850]
[-6.61548662 -324.84167480]
[7.91046000 -312.07907104]
[2.22621322 -292.73864746]
[6.41322422 -278.33486938]
[10.60023594 -263.93109131]
[25.67163658 -256.46841431]
[30.78311539 -240.09196472]
[22.30544281 -224.79005432]
[26.70644188 -210.45021057]
[37.83740234 -200.55319214]
[34.48958969 -185.09024048]
[38.89058685 -170.75039673]
[48.11745453 -182.57684326]
[63.11419678 -182.88938904]
[72.82577515 -171.45762634]
[70.09317780 -156.70863342]
[56.93077087 -149.51481628]
[43.04250717 -155.17796326]
[46.36476517 -140.55050659]
[49.68702698 -125.92304230]
[53.00928497 -111.29558563]
[56.44034576 -96.69326019]
[59.98001862 -82.11688232]
[63.51969147 -67.54051208]
[67.05936432 -52.96413422]
[83.56793213 -50.79085922]
[98.00730896 -42.42508698]
[108.14821625 -29.12575340]
[112.41250610 -12.91595554]
[110.11867523 3.72477961]
[101.59063721 18.23977280]
[88.11231232 28.38800240]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[127.83547211 167.14817810]
[134.71488953 180.47760010]
[141.59429932 193.80703735]
[148.57275391 207.08488464]
[155.74812317 220.25735474]
[163.02134705 233.37605286]
[170.29457092 246.49475098]
[177.56781006 259.61343384]
[183.02914429 263.33972168]
[185.42860413 268.49139404]
[184.85565186 273.23278809]
[198.06036377 281.94747925]
[197.02186584 296.80581665]
[202.36982727 300.69308472]
[204.61485291 305.91390991]
[203.90097046 310.63610840]
[210.38046265 324.16445923]
[216.85997009 337.69281006]
[223.33946228 351.22116089]
[229.81895447 364.74951172]
[236.29844666 378.27786255]
[250.72210693 374.04058838]
[265.63870239 372.17202759]
[280.66186523 372.72061157]
[295.40243530 375.67208862]
[309.47863770 380.95007324]
[322.52584839 388.41775513]
[334.20608521 397.88180542]
[344.21685791 409.09701538]
[352.29879761 421.77288818]
[358.24261475 435.58111572]
[361.89434814 450.16403198]
[363.15939331 465.14385986]
[362.00494385 480.13265991]
[358.46096802 494.74212646]
[352.61923218 508.59384155]
[344.63107300 521.32904053]
[334.70336914 532.61785889]
[323.09329224 542.16784668]
[310.10156250 549.73162842]
[296.06472778 555.11334229]
[281.34631348 558.17358398]
[266.32760620 558.83300781]
[251.39764404 557.07464600]
[236.94309998 552.94396973]
[223.33842468 546.54797363]
[210.93597412 538.05230713]
[200.05703735 527.67712402]
[190.98336792 515.69110107]
[183.95002747 502.40472412]
[179.13919067 488.16210938]
[176.67546082 473.33218384]
[176.62265015 458.29913330]
[178.98214722 443.45227051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 177]
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 169]
[12 167]
[13 164]
[14 163]
[15 162]
[16 161]
[18 160]
[20 159]
[21 158]
[22 157]
[37 156]
[38 155]
[39 154]
[40 153]
[42 151]
[43 150]
[44 149]
[45 148]
[46 147]
[55 140]
[56 139]
[57 138]
[58 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 127]
[65 126]
[67 124]
[68 123]
[72 120]
[73 119]
[74 118]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
