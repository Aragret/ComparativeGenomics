%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[104.44528198 806.75482178]
[89.42741394 806.75061035]
[74.51545715 804.97021484]
[59.91875458 801.43853760]
[45.84221268 796.20526123]
[32.48345184 789.34375000]
[20.03000450 780.95043945]
[8.65669918 771.14306641]
[-1.47680128 760.05938721]
[-10.22823811 747.85491943]
[-17.47475433 734.70104980]
[-23.11462212 720.78240967]
[-27.06866455 706.29443359]
[-29.28137207 691.44049072]
[-29.72168541 676.42907715]
[-28.38341904 661.47094727]
[-25.28536415 646.77606201]
[-20.47101021 632.55084229]
[-14.00794220 618.99481201]
[-5.98689413 606.29840088]
[3.47953224 594.63977051]
[14.25844288 584.18267822]
[26.19851875 575.07385254]
[39.13214111 567.44116211]
[52.87773895 561.39178467]
[67.24234772 557.01062012]
[82.02431488 554.35925293]
[97.01611328 553.47479248]
[97.90892792 538.50140381]
[98.80175018 523.52801514]
[99.69456482 508.55459595]
[100.58737946 493.58117676]
[101.48019409 478.60778809]
[102.03840637 463.61816406]
[102.26173401 448.61984253]
[102.48506165 433.62149048]
[102.70838928 418.62316895]
[102.93171692 403.62481689]
[102.70838928 388.62649536]
[102.03860474 373.64144897]
[98.59956360 367.09967041]
[101.47208405 358.42864990]
[101.02547455 343.43530273]
[91.01126862 329.02410889]
[99.87406158 312.88308716]
[99.20427704 297.89804077]
[98.53449249 282.91302490]
[95.09545135 276.37124634]
[97.96796417 267.70022583]
[97.52136230 252.70687866]
[89.40855408 240.21562195]
[96.73153687 226.19119263]
[96.28493500 211.19784546]
[95.83832550 196.20449829]
[87.72551727 183.71322632]
[95.04850769 169.68881226]
[94.60189819 154.69546509]
[94.15529633 139.70210266]
[93.59708405 124.71250153]
[92.92729950 109.72746277]
[92.03448486 94.75405121]
[90.91883850 79.79560089]
[89.80318451 64.83715057]
[81.06090546 51.65067291]
[87.83016205 38.38317871]
[86.38074493 23.45336914]
[77.05838013 10.67041111]
[83.22846222 -2.88611364]
[81.44599915 -17.77983093]
[79.66352844 -32.67354965]
[73.09008026 -19.19060516]
[61.37141418 -9.82722378]
[46.77023315 -6.39132309]
[32.10578537 -9.54632378]
[20.20955276 -18.68304443]
[13.37851048 -32.03732681]
[12.93162441 -47.03066635]
[18.95518112 -60.76808929]
[30.28612900 -70.59710693]
[44.73663712 -74.61990356]
[59.51653671 -72.05972290]
[71.77206421 -63.41090393]
[79.13723755 -50.34217834]
[80.03005219 -65.31558228]
[80.92286682 -80.28899384]
[81.81568146 -95.26239777]
[82.70850372 -110.23580170]
[83.15510559 -125.22915649]
[75.41780853 -139.02932739]
[83.15510559 -151.75659180]
[83.15510559 -166.75659180]
[75.41780853 -180.55676270]
[83.15510559 -193.28404236]
[83.15510559 -208.28404236]
[73.58042145 -224.01321411]
[82.94114685 -238.85719299]
[82.71781921 -253.85552979]
[82.49449158 -268.85388184]
[82.27116394 -283.85220337]
[68.58573151 -290.70550537]
[59.66218948 -303.14047241]
[57.55109406 -318.29971313]
[62.73756790 -332.69967651]
[74.02979279 -343.03137207]
[88.83289337 -346.92068481]
[103.74523163 -343.47384644]
[115.34006500 -333.48294067]
[120.95298004 -319.24377441]
[119.29416656 -304.02841187]
[110.74481201 -291.33325195]
[97.26950073 -284.07553101]
[97.49282837 -269.07720947]
[97.71615601 -254.07885742]
[97.93948364 -239.08052063]
[106.39812469 -230.43310547]
[106.70693207 -217.93955994]
[98.15510559 -208.28404236]
[98.15510559 -193.28404236]
[105.89240265 -180.55676270]
[98.15510559 -166.75659180]
[98.15510559 -151.75659180]
[105.89240265 -139.02932739]
[98.15510559 -125.22915649]
[100.03963470 -123.15390015]
[101.21567535 -120.20711517]
[101.34716034 -116.65491486]
[100.20046997 -112.88005066]
[97.68190765 -109.34298706]
[96.78909302 -94.36958313]
[95.89627075 -79.39617920]
[95.00345612 -64.42276764]
[94.11064148 -49.44936371]
[94.55725098 -34.45601273]
[96.33971405 -19.56229591]
[98.12217712 -4.66857958]
[107.31705475 7.04908180]
[101.27446747 21.67090416]
[103.80538940 24.12585068]
[105.27297974 27.92864227]
[105.05669403 32.56615448]
[102.78862000 37.26752853]
[111.45110321 49.38407516]
[104.76164246 63.72150040]
[105.87728882 78.67995453]
[106.99293518 93.63840485]
[110.08946991 97.87225342]
[110.59342957 103.53964233]
[107.91233826 109.05767822]
[108.58212280 124.04271698]
[112.09159851 132.47605896]
[109.14864349 139.25550842]
[109.59525299 154.24885559]
[110.04185486 169.24220276]
[118.18660736 182.80589294]
[110.83168030 195.75788879]
[111.27828217 210.75123596]
[111.72489166 225.74458313]
[119.86964417 239.30827332]
[112.51470947 252.26026917]
[112.96131897 267.25363159]
[113.51953125 282.24322510]
[114.18931580 297.22827148]
[114.85910034 312.21331787]
[123.83353424 321.47732544]
[124.08290100 333.97219849]
[116.01882172 342.98870850]
[116.46543121 357.98205566]
[117.02364349 372.97164917]
[117.69342804 387.95669556]
[120.15904999 391.53085327]
[121.24941254 395.32238770]
[121.06505585 398.87222290]
[119.84527588 401.80117798]
[117.93005371 403.84814453]
[117.70672607 418.84649658]
[117.48339844 433.84481812]
[117.26007080 448.84317017]
[117.03674316 463.84149170]
[119.58062744 468.39953613]
[120.07255554 473.01596069]
[118.83391571 476.89935303]
[116.45359802 479.50061035]
[115.56078339 494.47399902]
[114.66796875 509.44741821]
[113.77515411 524.42083740]
[112.88233948 539.39422607]
[111.98951721 554.36761475]
[126.76999664 557.02728271]
[141.13215637 561.41644287]
[154.87437439 567.47351074]
[167.80372620 575.11340332]
[179.73870850 584.22894287]
[190.51176453 594.69207764]
[199.97166443 606.35595703]
[207.98561096 619.05688477]
[214.44110107 632.61651611]
[219.24749756 646.84448242]
[222.33734131 661.54101562]
[223.66723633 676.49987793]
[223.21853638 691.51104736]
[220.99752808 706.36376953]
[217.03538513 720.84954834]
[211.38772583 734.76501465]
[204.13385010 747.91485596]
[195.37559509 760.11444092]
[185.23590088 771.19244385]
[173.85711670 780.99346924]
[161.39897156 789.37982178]
[148.03637695 796.23382568]
[133.95690918 801.45922852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 187]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 169]
[40 168]
[42 167]
[43 166]
[45 163]
[46 162]
[47 161]
[49 160]
[50 159]
[52 157]
[53 156]
[54 155]
[56 153]
[57 152]
[58 151]
[59 149]
[60 148]
[61 145]
[62 144]
[63 143]
[65 141]
[66 137]
[68 135]
[69 134]
[70 133]
[83 132]
[84 131]
[85 130]
[86 129]
[87 128]
[88 123]
[90 121]
[91 120]
[93 118]
[94 117]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
