%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[129.32081604 847.65460205]
[114.76213074 844.01995850]
[100.47549438 839.43109131]
[86.52337646 833.90802002]
[72.96678925 827.47497559]
[59.86500931 820.15997314]
[47.27532578 811.99505615]
[35.25279236 803.01593018]
[23.84998512 793.26190186]
[13.11676216 782.77551270]
[3.10005784 771.60272217]
[-6.15632677 759.79235840]
[-14.61191559 747.39605713]
[-22.22973442 734.46801758]
[-28.97647095 721.06475830]
[-34.82262421 707.24487305]
[-39.74263000 693.06890869]
[-43.71497726 678.59869385]
[-46.72229004 663.89764404]
[-48.75141907 649.02990723]
[-49.79349899 634.06060791]
[-49.84396362 619.05517578]
[-48.90259552 604.07922363]
[-46.97351074 589.19824219]
[-44.06514740 574.47723389]
[-40.19021988 559.98065186]
[-35.36567688 545.77191162]
[-29.61260796 531.91302490]
[-22.95617676 518.46472168]
[-15.42548561 505.48571777]
[-7.05346775 493.03280640]
[2.12326908 481.16043091]
[12.06459713 469.92050171]
[22.72704506 459.36221313]
[34.06398773 449.53167725]
[46.02585220 440.47189331]
[58.56033325 432.22250366]
[71.61261749 424.81954956]
[85.12562561 418.29541016]
[99.04028320 412.67864990]
[113.29573059 407.99380493]
[127.82963562 404.26132202]
[142.57844543 401.49758911]
[140.79597473 386.60388184]
[139.01351929 371.71014404]
[137.23104858 356.81643677]
[135.44857788 341.92272949]
[133.33395386 327.07250977]
[130.88822937 312.27325439]
[128.44250488 297.47396851]
[125.99678040 282.67471313]
[123.22116852 267.93374634]
[120.11705780 253.25843811]
[117.01294708 238.58312988]
[113.90883636 223.90783691]
[110.80472565 209.23252869]
[108.06487274 207.01316833]
[106.26387024 203.35647583]
[106.06555176 198.71815491]
[107.90514374 193.83319092]
[105.45941925 179.03392029]
[93.23919678 170.59580994]
[90.54805756 155.62208557]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[77.44070435 84.87110901]
[62.53664398 83.17727661]
[54.43941879 70.55052185]
[59.11800003 56.29882050]
[73.12351227 50.92800140]
[86.13066864 58.39587021]
[84.79243469 43.45568848]
[83.45420074 28.51550102]
[71.97969055 38.17653656]
[57.24289703 35.37887955]
[50.10723495 22.18485260]
[55.83284760 8.32060528]
[70.19902802 4.00634432]
[82.61472321 12.42095757]
[82.39139557 -2.57737970]
[82.16806793 -17.57571793]
[81.94474030 -32.57405472]
[81.60976410 -47.57031250]
[71.57100677 -63.00743866]
[80.48562622 -78.12354279]
[79.81584167 -93.10858154]
[79.14605713 -108.09362030]
[78.47626495 -123.07865906]
[63.71376419 -126.16399384]
[50.18270493 -132.82441711]
[38.73366547 -142.64125061]
[30.08634377 -154.99740601]
[24.78431511 -169.11616516]
[23.16086960 -184.11001587]
[25.31805992 -199.03640747]
[31.12028122 -212.95707703]
[40.20280457 -224.99694824]
[51.99468994 -234.39920044]
[65.75469208 -240.57278442]
[80.61785126 -243.12962341]
[95.64984131 -241.90899658]
[109.90575409 -236.98764038]
[122.48944855 -228.67491150]
[132.60989380 -217.49334717]
[139.63092041 -204.14584351]
[143.11117554 -189.47142029]
[142.83189392 -174.39253235]
[138.81062317 -159.85705566]
[131.30014038 -146.77868652]
[120.77256775 -135.97956848]
[107.88968658 -128.13851929]
[93.46130371 -123.74844360]
[94.13109589 -108.76340485]
[94.80088043 -93.77836609]
[95.47066498 -78.79332733]
[104.18302155 -70.40158081]
[104.86367035 -57.92277908]
[96.60311890 -48.01691818]
[99.94437408 -41.42466736]
[96.94307709 -32.79738235]
[97.16640472 -17.79904556]
[97.38973236 -2.80070734]
[97.61306000 12.19762993]
[98.39438629 27.17726707]
[99.73262024 42.11745071]
[101.07085419 57.05763626]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[126.84485626 149.62367249]
[129.11434937 164.66708374]
[120.25868988 176.58819580]
[122.70441437 191.38746643]
[125.48002625 206.12841797]
[128.58413696 220.80372620]
[131.68824768 235.47903442]
[134.79235840 250.15432739]
[137.89646912 264.82962036]
[141.38670349 268.71102905]
[142.88888550 273.10385132]
[142.54110718 277.16513062]
[140.79605103 280.22897339]
[143.24177551 295.02825928]
[145.68750000 309.82751465]
[148.13322449 324.62680054]
[151.44667053 328.66018677]
[152.75120544 333.11569214]
[152.22242737 337.15737915]
[150.34230042 340.14025879]
[152.12477112 355.03396606]
[153.90722656 369.92767334]
[155.68969727 384.82141113]
[157.47216797 399.71511841]
[172.45663452 398.92041016]
[187.46084595 399.11776733]
[202.41921997 400.30636597]
[217.26634216 402.48095703]
[231.93727112 405.63204956]
[246.36787415 409.74588013]
[260.49502563 414.80441284]
[274.25698853 420.78558350]
[287.59353638 427.66323853]
[300.44641113 435.40725708]
[312.75933838 443.98379517]
[324.47854614 453.35534668]
[335.55273438 463.48095703]
[345.93350220 474.31634521]
[355.57546997 485.81408691]
[364.43643188 497.92395020]
[372.47769165 510.59298706]
[379.66406250 523.76574707]
[385.96411133 537.38464355]
[391.35031128 551.39019775]
[395.79910278 565.72106934]
[399.29101562 580.31463623]
[401.81079102 595.10705566]
[403.34741211 610.03369141]
[403.89416504 625.02929688]
[403.44866943 640.02819824]
[402.01281738 654.96484375]
[399.59295654 669.77398682]
[396.19964600 684.39074707]
[391.84768677 698.75134277]
[386.55618286 712.79290771]
[380.34820557 726.45404053]
[373.25091553 739.67504883]
[365.29534912 752.39801025]
[356.51632690 764.56744385]
[346.95220947 776.13000488]
[336.64480591 787.03521729]
[325.63922119 797.23535156]
[313.98358154 806.68579102]
[301.72879028 815.34527588]
[288.92852783 823.17590332]
[275.63870239 830.14337158]
[261.91741943 836.21734619]
[247.82473755 841.37115479]
[233.42224121 845.58227539]
[218.77290344 848.83233643]
[203.94081116 851.10711670]
[188.99079895 852.39660645]
[173.98825073 852.69531250]
[158.99876404 852.00177002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 152]
[49 151]
[50 150]
[51 149]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[60 140]
[61 139]
[64 136]
[65 135]
[66 134]
[68 132]
[69 131]
[75 130]
[76 129]
[77 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 122]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
