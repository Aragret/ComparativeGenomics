%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[87.63179779 515.80023193]
[78.20694733 503.96691895]
[72.90196991 489.79962158]
[72.23659515 474.68630981]
[76.27601624 460.10760498]
[84.62448883 447.49182129]
[96.46411133 438.07489014]
[110.63496399 432.77941895]
[109.96517944 417.79437256]
[109.29539490 402.80932617]
[100.99750519 390.44024658]
[108.11087799 376.30834961]
[107.44109344 361.32330322]
[106.77130890 346.33828735]
[105.54433441 331.38854980]
[103.76187134 316.49484253]
[101.97940063 301.60110474]
[100.19693756 286.70739746]
[98.41447449 271.81369019]
[89.21959686 260.09600830]
[95.26218414 245.47419739]
[93.47972107 230.58047485]
[84.27782440 242.42636108]
[69.64138031 245.70881653]
[56.26196671 238.92712402]
[50.25647736 225.18179321]
[54.37053680 210.75700378]
[66.72325134 202.24757385]
[81.66713715 203.54389954]
[92.37084198 214.05499268]
[92.14751434 199.05665588]
[91.92418671 184.05831909]
[91.70085907 169.05998230]
[88.95865631 165.14981079]
[88.64367676 159.47550964]
[91.70085907 153.61332703]
[91.92418671 138.61499023]
[84.37723541 125.77392578]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[92.23636627 42.71611023]
[90.23234558 27.85058022]
[88.22833252 12.98505211]
[86.22431946 -1.88047576]
[71.36236572 -4.63359642]
[58.09699249 -11.83584499]
[47.72132111 -22.77082443]
[41.24234009 -36.35897827]
[39.28319931 -51.26415634]
[42.02329254 -66.02500916]
[49.18189240 -79.19826508]
[60.04688263 -89.49982452]
[73.54556274 -95.92995453]
[71.54154968 -110.79547882]
[69.53753662 -125.66101074]
[67.53352356 -140.52653503]
[65.52951050 -155.39205933]
[62.53473282 -170.09007263]
[58.56263733 -184.55459595]
[54.84756470 -188.22137451]
[53.08658600 -192.51698303]
[53.19200516 -196.59178162]
[54.75161362 -199.75405884]
[51.42935562 -214.38151550]
[48.10709381 -229.00897217]
[44.78483582 -243.63642883]
[41.46257782 -258.26388550]
[38.14031601 -272.89135742]
[33.00522995 -258.79769897]
[22.32427597 -248.26597595]
[8.15977573 -243.32969666]
[-6.75332594 -244.94195557]
[-19.53554344 -252.79147339]
[-27.71882820 -265.36264038]
[-29.72311974 -280.22811890]
[-25.16141891 -294.51766968]
[-14.91451931 -305.47216797]
[-0.96093613 -310.97647095]
[14.00511265 -309.96780396]
[27.09391594 -302.64093018]
[35.77872467 -290.40936279]
[35.10894012 -305.39440918]
[34.43915558 -320.37942505]
[33.76937103 -335.36447144]
[33.09958267 -350.34951782]
[32.42979813 -365.33456421]
[31.76001358 -380.31958008]
[31.09022903 -395.30462646]
[30.42044258 -410.28967285]
[22.07464981 -423.73059082]
[29.23593140 -436.79064941]
[28.56614494 -451.77569580]
[14.03340626 -456.02752686]
[1.67010188 -464.76980591]
[-7.18268728 -477.05422974]
[-11.56467819 -491.54824829]
[-11.00054359 -506.67968750]
[-5.55147791 -520.80718994]
[4.19144535 -532.39831543]
[17.17138672 -540.19573975]
[31.98037910 -543.35369873]
[47.01205444 -541.52954102]
[60.63588715 -534.92120361]
[71.37406921 -524.24554443]
[78.06179810 -510.66052246]
[79.97364807 -495.63973999]
[76.90222168 -480.81256104]
[69.18069458 -467.78732300]
[57.64664078 -457.97689819]
[43.55118561 -452.44546509]
[44.22097015 -437.46044922]
[52.51885605 -425.09133911]
[45.40548325 -410.95944214]
[46.07526779 -395.97442627]
[46.74505234 -380.98937988]
[47.41483688 -366.00433350]
[48.08462143 -351.01928711]
[48.75440979 -336.03427124]
[49.42419434 -321.04922485]
[50.09397888 -306.06417847]
[50.76376343 -291.07913208]
[52.76777649 -276.21362305]
[56.09003830 -261.58615112]
[59.41229630 -246.95869446]
[62.73455429 -232.33123779]
[66.05681610 -217.70376587]
[69.37907410 -203.07630920]
[73.02716064 -188.52668762]
[76.99925995 -174.06216431]
[82.86995697 -187.86560059]
[95.21120453 -196.39166260]
[110.19892120 -196.99844360]
[123.18901825 -189.49794006]
[130.15635681 -176.21426392]
[128.94203186 -161.26350403]
[119.92232513 -149.27830505]
[105.89208221 -143.97242737]
[91.19873047 -146.98994446]
[80.39503479 -157.39608765]
[82.39904785 -142.53054810]
[84.40306091 -127.66502380]
[86.40708160 -112.79949188]
[88.41109467 -97.93396759]
[103.13063049 -95.30791473]
[116.33567810 -88.25122833]
[126.72708893 -77.44388580]
[133.27813721 -63.93556213]
[135.33592224 -49.04368210]
[132.68646240 -34.22492981]
[125.57683563 -20.93276596]
[114.69221497 -10.47486973]
[101.08985138 -3.88448954]
[103.09386444 10.98103905]
[105.09787750 25.84656715]
[107.10189056 40.71209335]
[114.25379944 27.52686882]
[126.98819733 19.60000229]
[141.97633362 19.00355911]
[155.30035400 25.89344597]
[163.47738647 38.46866608]
[164.36996460 53.44208527]
[157.74479675 66.89968872]
[145.33366394 75.32369232]
[130.38081360 76.51207733]
[116.79488373 70.15420532]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.84845734 126.22765350]
[106.92252350 138.83831787]
[106.69919586 153.83665466]
[106.69919586 168.83665466]
[106.92252350 183.83499146]
[107.14585114 198.83332825]
[107.36917877 213.83166504]
[108.37343597 228.79800415]
[110.15590668 243.69172668]
[119.47827148 256.47467041]
[113.30818939 270.03121948]
[115.09065247 284.92492676]
[116.87312317 299.81863403]
[118.65558624 314.71237183]
[120.43804932 329.60607910]
[131.61982727 319.60769653]
[146.43338013 321.96533203]
[153.95872498 334.94107056]
[148.64843750 348.96963501]
[134.41706848 353.70971680]
[121.75634766 345.66848755]
[122.42613220 360.65353394]
[123.09591675 375.63858032]
[131.44171143 389.07949829]
[124.28043365 402.13955688]
[124.95021820 417.12460327]
[125.62000275 432.10961914]
[140.20678711 436.11975098]
[152.83934021 444.44284058]
[162.28004456 456.26351929]
[167.60400391 470.42367554]
[168.28962708 485.53610229]
[164.26974487 500.12017822]
[155.93818665 512.74713135]
[144.11119080 522.17993164]
[129.94744873 527.49438477]
[114.83457947 528.16992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 200]
[9 199]
[10 198]
[12 196]
[13 195]
[14 194]
[15 188]
[16 187]
[17 186]
[18 185]
[19 184]
[21 182]
[22 181]
[30 180]
[31 179]
[32 178]
[33 177]
[36 176]
[37 175]
[39 173]
[41 171]
[42 170]
[43 169]
[44 158]
[45 157]
[46 156]
[47 155]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[61 132]
[62 131]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
