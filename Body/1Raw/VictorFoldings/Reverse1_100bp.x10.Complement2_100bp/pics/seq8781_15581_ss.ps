%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[106.63506317 748.30920410]
[92.41173553 743.49670410]
[78.80415344 737.14868164]
[65.97751617 729.34228516]
[54.08750916 720.17218018]
[43.27847672 709.74969482]
[33.68163300 698.20135498]
[25.41346550 685.66735840]
[18.57435036 672.29986572]
[13.24730587 658.26116943]
[9.49699593 643.72161865]
[7.36894751 628.85772705]
[6.88899231 613.84997559]
[8.06295681 598.88049316]
[10.87658978 584.13104248]
[15.29573727 569.78063965]
[21.26675415 556.00347900]
[28.71715736 542.96679688]
[37.55650711 530.82891846]
[47.67749786 519.73706055]
[58.95727921 509.82595825]
[71.25891113 501.21591187]
[84.43307495 494.01144409]
[98.31984711 488.29998779]
[112.75064850 484.15087891]
[127.55030823 481.61447144]
[126.65749359 466.64105225]
[125.76467896 451.66766357]
[124.87186432 436.69424438]
[122.86714935 434.73483276]
[121.51779938 431.86328125]
[121.17511749 428.32522583]
[122.09509277 424.48880005]
[124.39865875 420.80807495]
[124.39865875 405.80807495]
[124.39865875 390.80807495]
[123.95205688 375.81472778]
[123.05924225 360.84133911]
[122.16642761 345.86791992]
[121.27360535 330.89453125]
[120.38079071 315.92111206]
[119.48797607 300.94772339]
[111.00685120 288.70352173]
[117.90903473 274.46728516]
[116.34851074 259.54870605]
[106.80883789 248.11000061]
[112.41339874 233.31474304]
[110.18828583 218.48069763]
[107.96316528 203.64665222]
[98.42349243 192.20796204]
[104.02805328 177.41270447]
[101.80294037 162.57865906]
[99.57781982 147.74461365]
[84.85115814 145.27957153]
[71.60601044 138.38630676]
[61.13771820 127.73896027]
[54.47005081 114.37882233]
[52.25508881 99.61247253]
[54.70944977 84.88402557]
[61.59310150 71.63388062]
[72.23284149 61.15786362]
[85.58813477 54.48049927]
[83.36302185 39.64645767]
[81.13790131 24.81241417]
[78.91278839 9.97836971]
[76.68766785 -4.85567427]
[73.43464661 -8.93794346]
[72.19659424 -13.41237450]
[72.78547668 -17.44576836]
[74.70981598 -20.40030289]
[73.14929199 -35.31890869]
[69.14407349 -43.52841949]
[71.67829132 -50.47100449]
[70.34005737 -65.41119385]
[62.60652924 -52.55846405]
[49.53088379 -45.20812607]
[34.53106308 -45.28153229]
[21.52798653 -52.75949478]
[13.92062283 -65.68729401]
[13.69752216 -80.68563843]
[20.91700172 -93.83399200]
[33.69190598 -101.69540405]
[48.68290710 -102.21492004]
[61.97138977 -95.25675201]
[70.08351135 -82.64057922]
[70.97632599 -97.61398315]
[64.07414246 -111.85021973]
[72.55526733 -124.09439850]
[73.44808197 -139.06779480]
[74.22940826 -154.04743958]
[74.89919281 -169.03247070]
[62.85973358 -181.72384644]
[63.70735931 -198.85850525]
[76.42974091 -209.85758972]
[76.87634277 -224.85093689]
[77.32295227 -239.84428406]
[77.76956177 -254.83763123]
[63.52143478 -259.92153931]
[51.54291916 -269.16116333]
[43.00754166 -281.65124512]
[38.75151443 -296.16818237]
[39.19179916 -311.28973389]
[44.28525925 -325.53445435]
[53.53289032 -337.50677490]
[66.02870178 -346.03378296]
[80.54848480 -350.28009033]
[95.66973877 -349.82965088]
[109.91104126 -344.72665405]
[121.87715912 -335.47100830]
[130.39579773 -322.96948242]
[134.63235474 -308.44686890]
[134.17181396 -293.32589722]
[129.05926514 -279.08804321]
[119.79560089 -267.12811279]
[107.28836823 -258.61785889]
[92.76290894 -254.39102173]
[92.31629944 -239.39767456]
[91.86969757 -224.40432739]
[91.42308807 -209.41098022]
[101.48427582 -201.36100769]
[105.12628174 -188.79844666]
[100.80426025 -176.24732971]
[89.88423157 -168.36268616]
[89.21444702 -153.37765503]
[92.05613708 -146.55514526]
[88.42148590 -138.17498779]
[87.52867126 -123.20158386]
[94.49471283 -110.03633881]
[85.94972992 -96.72116852]
[85.05691528 -81.74776459]
[85.28024292 -66.74942780]
[86.61847687 -51.80923843]
[88.06789398 -36.87943268]
[89.62841797 -21.96082687]
[91.52171326 -7.08079147]
[93.74682617 7.75325251]
[95.97194672 22.58729553]
[98.19705963 37.42134094]
[100.42218018 52.25538254]
[115.14884186 54.72043228]
[128.39398193 61.61370087]
[138.86227417 72.26103973]
[145.52995300 85.62117767]
[147.74490356 100.38752747]
[145.29055786 115.11597443]
[138.40690613 128.36611938]
[127.76715851 138.84213257]
[114.41186523 145.51950073]
[116.63697815 160.35354614]
[118.86209869 175.18759155]
[128.56092834 187.68731689]
[122.79721069 201.42153931]
[125.02232361 216.25558472]
[127.24744415 231.08963013]
[136.94627380 243.58935547]
[131.18255615 257.32357788]
[140.94615173 245.93620300]
[155.89096069 244.65058899]
[167.45590210 254.20317078]
[169.01606750 269.12182617]
[159.67771912 280.86044312]
[144.79028320 282.69461060]
[132.88244629 273.57449341]
[141.42742920 286.88964844]
[134.46138000 300.05490112]
[135.35420227 315.02828979]
[136.24700928 330.00170898]
[137.13983154 344.97509766]
[138.03263855 359.94851685]
[138.92546082 374.92193604]
[141.44403076 378.45898438]
[142.59071350 382.23385620]
[142.45922852 385.78604126]
[141.28318787 388.73281860]
[139.39866638 390.80807495]
[139.39866638 405.80807495]
[139.39866638 420.80807495]
[139.84526062 435.80145264]
[140.73808289 450.77484131]
[141.63090515 465.74826050]
[142.52371216 480.72164917]
[157.51991272 481.48141479]
[172.34150696 483.88629150]
[186.80857849 487.90710449]
[200.74551392 493.49505615]
[213.98313904 500.58227539]
[226.36073303 509.08276367]
[237.72807312 518.89331055]
[247.94714355 529.89483643]
[256.89392090 541.95379639]
[264.45977783 554.92376709]
[270.55288696 568.64739990]
[275.09927368 582.95800781]
[278.04376221 597.68188477]
[279.35061646 612.64038086]
[279.00393677 627.65179443]
[277.00793457 642.53393555]
[273.38687134 657.10626221]
[268.18469238 671.19171143]
[261.46453857 684.61938477]
[253.30798340 697.22631836]
[243.81405640 708.85937500]
[233.09799194 719.37738037]
[221.28988647 728.65270996]
[208.53305054 736.57275391]
[194.98237610 743.04132080]
[180.80233765 747.97991943]
[166.16506958 751.32855225]
[151.24826050 753.04663086]
[136.23297119 753.11334229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 181]
[27 180]
[28 179]
[29 178]
[34 177]
[35 176]
[36 175]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[44 163]
[45 156]
[47 154]
[48 153]
[49 152]
[51 150]
[52 149]
[53 148]
[62 139]
[63 138]
[64 137]
[65 136]
[66 135]
[70 134]
[71 133]
[73 132]
[74 131]
[85 130]
[86 129]
[88 127]
[89 126]
[90 124]
[91 123]
[94 119]
[95 118]
[96 117]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
