%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[95.36063385 725.18457031]
[81.67625427 718.96490479]
[69.13338470 710.68103027]
[58.04091644 700.53686523]
[48.67200089 688.78228760]
[41.25735855 675.70678711]
[35.97958755 661.63226318]
[32.96864700 646.90539551]
[32.29869461 631.88879395]
[33.98622513 616.95233154]
[37.98967743 602.46374512]
[44.21046829 588.77990723]
[52.49540329 576.23767090]
[62.64045715 565.14605713]
[74.39579773 555.77813721]
[87.47194672 548.36456299]
[101.54688263 543.08795166]
[116.27400208 540.07824707]
[115.60421753 525.09320068]
[114.93443298 510.10815430]
[114.26464844 495.12310791]
[105.96675873 482.75402832]
[113.08013153 468.62213135]
[102.85247803 454.36160278]
[111.47396851 438.09042358]
[110.58115387 423.11703491]
[109.68833923 408.14361572]
[108.79551697 393.17022705]
[96.92793274 387.05447388]
[89.57299042 375.78286743]
[88.74140167 362.24114990]
[94.75711823 349.95986938]
[106.14488220 342.19393921]
[105.47509766 327.20892334]
[104.80531311 312.22387695]
[104.13552856 297.23883057]
[103.35420990 282.25918579]
[102.46138763 267.28579712]
[101.56857300 252.31239319]
[100.67575836 237.33898926]
[99.78294373 222.36557007]
[91.30181885 210.12139893]
[98.20400238 195.88516235]
[97.31118774 180.91175842]
[83.21444702 179.19714355]
[69.63418579 175.04571533]
[56.98824692 168.58522034]
[45.66573334 160.01441956]
[36.01502609 149.59703064]
[28.33307266 137.65361023]
[22.85623360 124.55161285]
[19.75302696 110.69419861]
[19.11893654 96.50772858]
[20.97347069 82.42871857]
[25.25956726 68.89035034]
[31.84534836 56.30920029]
[40.52817535 45.07236862]
[51.04088974 35.52560043]
[63.06002426 27.96264458]
[76.21575928 22.61619949]
[90.10331726 19.65077400]
[89.65670776 4.65742397]
[89.21010590 -10.33592606]
[88.76349640 -25.32927513]
[79.92798615 -34.72589874]
[79.86467743 -47.22308731]
[88.06210327 -56.11852264]
[87.83877563 -71.11685944]
[87.61544800 -86.11519623]
[87.39212036 -101.11353302]
[76.31108856 -106.89960480]
[68.78524780 -116.79051971]
[66.19395447 -128.87210083]
[68.96897125 -140.83874512]
[76.52388763 -150.43333435]
[87.37676239 -155.87303162]
[87.60009003 -170.87136841]
[87.82341766 -185.86970520]
[77.39205170 -194.39033508]
[73.82474518 -207.17645264]
[78.20803070 -219.49996948]
[88.73052216 -226.93681335]
[89.17713165 -241.93016052]
[89.62373352 -256.92352295]
[80.60249329 -262.61920166]
[74.80358124 -271.47808838]
[73.21726227 -281.86495972]
[76.06350708 -291.89550781]
[82.76427460 -299.77810669]
[92.05937958 -304.13378906]
[93.17502594 -319.09222412]
[94.29067993 -334.05068970]
[95.40632629 -349.00915527]
[96.52197266 -363.96759033]
[97.63762665 -378.92605591]
[98.19583130 -393.91564941]
[98.19583130 -408.91564941]
[98.19583130 -423.91564941]
[98.19583130 -438.91564941]
[98.19583130 -453.91564941]
[84.85470581 -461.52551270]
[77.11973572 -474.79449463]
[77.07159424 -490.15332031]
[84.72322845 -503.47052002]
[98.01638794 -511.16384888]
[113.37528229 -511.16384888]
[126.66844177 -503.47052002]
[134.32006836 -490.15332031]
[134.27192688 -474.79449463]
[126.53696442 -461.52551270]
[113.19583130 -453.91564941]
[113.19583130 -438.91564941]
[113.19583130 -423.91564941]
[113.19583130 -408.91564941]
[113.19583130 -393.91564941]
[125.48650360 -402.51446533]
[139.91493225 -398.41320801]
[145.84503174 -384.63519287]
[138.90533447 -371.33703613]
[124.21154785 -368.32165527]
[112.59607697 -377.81039429]
[111.48043060 -362.85195923]
[110.36477661 -347.89349365]
[109.24913025 -332.93502808]
[108.13348389 -317.97659302]
[107.01782990 -303.01812744]
[120.77940369 -289.22924805]
[119.95053101 -269.46017456]
[104.61708069 -256.47689819]
[104.17047882 -241.48356628]
[103.72386932 -226.49020386]
[115.76902008 -214.75337219]
[115.59526825 -197.59864807]
[102.82175446 -185.64637756]
[102.59842682 -170.64804077]
[102.37509918 -155.64970398]
[116.98328400 -145.72637939]
[122.76120758 -128.87210083]
[117.21678925 -111.77418518]
[102.39045715 -101.33686066]
[102.61378479 -86.33852386]
[102.83711243 -71.34018707]
[103.06044006 -56.34185028]
[112.85897064 -41.78315735]
[103.75685120 -25.77588272]
[104.20345306 -10.78253174]
[104.65006256 4.21081829]
[105.09666443 19.20416832]
[120.66219330 21.72474098]
[135.44386292 27.21486664]
[148.88087463 35.46626663]
[160.46348572 46.16590118]
[169.75225830 58.90785599]
[176.39483643 73.20874023]
[180.13919067 88.52600861]
[180.84327698 104.27857208]
[178.48039246 119.86881256]
[173.14018250 134.70529175]
[165.02520752 148.22514343]
[154.44337463 159.91546631]
[141.79608154 169.33274841]
[127.56317902 176.11973572]
[112.28459167 180.01893616]
[113.17740631 194.99235535]
[121.72238922 208.30752563]
[114.75634766 221.47276306]
[115.64916229 236.44616699]
[116.54198456 251.41957092]
[117.43479919 266.39297485]
[118.32761383 281.36639404]
[121.96226501 289.74655151]
[119.12056732 296.56906128]
[119.79035187 311.55407715]
[120.46013641 326.53912354]
[121.12992096 341.52416992]
[135.36973572 350.65237427]
[141.30389404 366.31399536]
[136.77902222 382.26666260]
[123.76892853 392.27740479]
[124.66174316 407.25079346]
[125.55455780 422.22421265]
[126.44737244 437.19763184]
[135.55874634 446.32699585]
[135.99411011 458.81677246]
[128.06517029 467.95233154]
[136.41096497 481.39324951]
[129.24967957 494.45330811]
[129.91946411 509.43835449]
[130.58924866 524.42340088]
[131.25903320 539.40844727]
[146.19595337 541.09228516]
[160.68551636 545.09210205]
[174.37092590 551.30950928]
[186.91516113 559.59136963]
[198.00930786 569.73364258]
[207.38015747 581.48669434]
[214.79695129 594.56103516]
[220.07705688 608.63464355]
[223.09042358 623.36102295]
[223.76284790 638.37750244]
[222.07778931 653.31427002]
[218.07672119 667.80346680]
[211.85820007 681.48840332]
[203.57533264 694.03192139]
[193.43209839 705.12524414]
[181.67831421 714.49511719]
[168.60337830 721.91082764]
[154.52932739 727.18975830]
[139.80270386 730.20190430]
[124.78617096 730.87310791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 190]
[19 189]
[20 188]
[21 187]
[23 185]
[25 182]
[26 181]
[27 180]
[28 179]
[33 175]
[34 174]
[35 173]
[36 172]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[43 164]
[44 163]
[61 148]
[62 147]
[63 146]
[64 145]
[67 143]
[68 142]
[69 141]
[70 140]
[76 136]
[77 135]
[78 134]
[82 131]
[83 130]
[84 129]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
