%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[120.57350159 590.12554932]
[110.28769684 579.09588623]
[103.06872559 565.85437012]
[99.37037659 551.23339844]
[99.42513275 536.15203857]
[103.22954559 521.55828857]
[110.54447174 508.36956787]
[120.91009521 497.41491699]
[133.67480469 489.38290405]
[148.03622437 484.77850342]
[147.14341736 469.80511475]
[146.25059509 454.83169556]
[145.13494873 439.87326050]
[143.79670715 424.93307495]
[142.45848083 409.99288940]
[141.12023926 395.05270386]
[126.29933167 388.61428833]
[116.69236755 375.50466919]
[114.99784088 359.24597168]
[121.77243805 344.26596069]
[135.25340271 334.69226074]
[133.69287109 319.77365112]
[132.13235474 304.85507202]
[130.57182312 289.93646240]
[129.01130676 275.01785278]
[127.45078278 260.09924316]
[125.77923584 245.19267273]
[123.99677277 230.29895020]
[121.33097839 215.53773499]
[117.79130554 200.96136475]
[114.25163269 186.38497925]
[110.71195984 171.80860901]
[107.06387329 157.25898743]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[80.88975525 61.41239929]
[74.61238861 47.78908157]
[68.33502960 34.16576767]
[56.52733612 28.97527695]
[51.57937241 17.49915314]
[55.64282227 6.10551739]
[49.56898880 -7.60974932]
[43.49515533 -21.32501602]
[37.42132187 -35.04028320]
[36.74898529 -20.05535889]
[32.42007828 -5.69358397]
[24.69931412 7.16681242]
[14.05881977 17.73941231]
[1.14926529 25.37769699]
[-13.23992538 29.61458206]
[-28.22884560 30.19098282]
[-42.90092087 27.07164955]
[-56.35894394 20.44733047]
[-67.77995300 10.72310734]
[-76.46555328 -1.50638127]
[-81.88461304 -15.49329758]
[-83.70574951 -30.38233566]
[-81.81760406 -45.26302338]
[-76.33564758 -59.22540665]
[-67.59508514 -71.41567230]
[-56.13042068 -81.08838654]
[-42.64271545 -87.65206146]
[-27.95674706 -90.70532227]
[-12.97057247 -90.06145477]
[1.39940035 -85.75984192]
[14.27444172 -78.06352234]
[24.86723900 -67.44313812]
[32.53004837 -54.54808807]
[31.41439819 -69.50653839]
[30.29874992 -84.46499634]
[29.18310165 -99.42344666]
[28.06745338 -114.38190460]
[19.32517242 -127.56837463]
[26.09443283 -140.83587646]
[24.97878265 -155.79432678]
[23.86313438 -170.75277710]
[22.74748611 -185.71122742]
[21.63183784 -200.66967773]
[18.23115349 -206.33950806]
[18.20783043 -212.02250671]
[20.71243668 -216.08895874]
[20.04265022 -231.07398987]
[19.37286568 -246.05903625]
[18.70308113 -261.04406738]
[3.17803502 -273.79760742]
[2.05491877 -293.55215454]
[15.60966682 -307.54440308]
[14.27143288 -322.48458862]
[12.93319893 -337.42477417]
[11.59496498 -352.36495972]
[-3.06132364 -356.23391724]
[-15.50868893 -364.88488770]
[-24.24405098 -377.27316284]
[-28.21257210 -391.90280151]
[-26.93503571 -407.00723267]
[-20.56570816 -420.76251221]
[-9.87371826 -431.50759888]
[3.84982419 -437.94500732]
[18.94773483 -439.29736328]
[33.59687042 -435.40136719]
[46.02827072 -426.72750854]
[54.74078751 -414.32315063]
[58.68234253 -399.68621826]
[57.37697220 -384.58416748]
[50.98230743 -370.84066772]
[40.27053070 -360.11529541]
[26.53515053 -353.70318604]
[27.87338448 -338.76300049]
[29.21161842 -323.82281494]
[30.54985237 -308.88262939]
[39.90877914 -304.66583252]
[46.72615814 -296.88388062]
[49.72143555 -286.89682007]
[48.28993225 -276.48748779]
[42.62355804 -267.54324341]
[33.68811798 -261.71386719]
[34.35790634 -246.72882080]
[35.02769089 -231.74377441]
[35.69747543 -216.75874329]
[36.59029007 -201.78533936]
[37.70594025 -186.82687378]
[38.82158661 -171.86842346]
[39.93723679 -156.90997314]
[41.05288696 -141.95152283]
[49.71536636 -129.83497620]
[43.02590561 -115.49755096]
[44.14155579 -100.53910065]
[45.25720215 -85.58064270]
[46.37285233 -70.62219238]
[47.48850250 -55.66373825]
[51.13658905 -41.11411667]
[57.21042252 -27.39884949]
[63.28425598 -13.68358326]
[69.35809326 0.03168321]
[84.07176971 9.59592152]
[81.95835114 27.88840675]
[88.23571014 41.51172256]
[94.51306915 55.13503647]
[96.62044525 40.28380966]
[104.89075470 27.76973915]
[117.72712708 20.00909233]
[132.65106201 18.50033188]
[146.78096008 23.53477478]
[157.38859558 34.14035034]
[162.42578125 48.26928329]
[160.91990662 63.19350433]
[153.16174316 76.03137970]
[140.64927673 84.30410767]
[125.79846191 86.41436768]
[111.47675323 81.95468903]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.58592987 153.50268555]
[126.76464844 161.02723694]
[125.28833771 168.26893616]
[128.82800293 182.84532166]
[132.36767578 197.42169189]
[135.90734863 211.99806213]
[142.83911133 198.69578552]
[156.21409607 191.90534973]
[171.04376221 194.15943909]
[181.79701233 204.61734009]
[184.46316528 219.37849426]
[178.04779053 232.93736267]
[164.94367981 240.23683167]
[150.03833008 238.55436707]
[138.89048767 228.51649475]
[140.67295837 243.41020203]
[144.79995728 251.55917358]
[142.36938477 258.53872681]
[143.92990112 273.45733643]
[145.49043274 288.37594604]
[147.05094910 303.29452515]
[148.61148071 318.21313477]
[150.17199707 333.13174438]
[163.22616577 338.15682983]
[172.79603577 348.26791382]
[177.05541992 361.45260620]
[175.22734070 375.12036133]
[167.72506714 386.61141968]
[156.06042480 393.71444702]
[157.39866638 408.65463257]
[158.73689270 423.59481812]
[160.07513428 438.53500366]
[163.55984497 444.15356445]
[163.66778564 449.83560181]
[161.22399902 453.93887329]
[162.11682129 468.91229248]
[163.00962830 483.88568115]
[177.81643677 486.75088501]
[191.44515991 493.20913696]
[203.03909302 502.85443115]
[211.86941528 515.08044434]
[217.38105774 529.11871338]
[219.22756958 544.08673096]
[217.29284668 559.04357910]
[211.69853210 573.04907227]
[202.79626465 585.22283936]
[191.14567566 594.79962158]
[177.47911072 601.17736816]
[162.65567017 603.95526123]
[147.60716248 602.95855713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 197]
[11 196]
[12 195]
[13 192]
[14 191]
[15 190]
[16 189]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[27 176]
[28 175]
[29 166]
[30 165]
[31 164]
[32 163]
[33 161]
[34 160]
[35 159]
[36 158]
[38 156]
[39 155]
[40 142]
[41 141]
[42 140]
[45 138]
[46 137]
[47 136]
[48 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[85 123]
[86 122]
[87 121]
[88 120]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
