%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[19.63603401 783.97039795]
[7.63886547 793.12078857]
[-6.31818390 798.85345459]
[-21.28349876 800.77746582]
[-36.23672104 798.76159668]
[-50.15830994 792.94342041]
[-62.09907532 783.71948242]
[-71.24487305 771.71881104]
[-76.97212219 757.75952148]
[-78.89034271 742.79345703]
[-76.86872864 727.84100342]
[-71.04513550 713.92169189]
[-61.81661224 701.98449707]
[-49.81238174 692.84332275]
[-35.85091019 687.12145996]
[-20.88411331 685.20898438]
[-18.88010025 670.34350586]
[-16.87608528 655.47796631]
[-14.87207222 640.61242676]
[-12.86805820 625.74688721]
[-10.86404514 610.88134766]
[-18.39451981 595.03021240]
[-7.01856041 580.55029297]
[-5.23609447 565.65655518]
[-16.38286972 575.69396973]
[-31.28813553 577.37713623]
[-44.39259720 570.07830811]
[-50.80861282 556.51971436]
[-48.14316559 541.75842285]
[-37.39040756 531.30004883]
[-22.56084633 529.04522705]
[-9.18554306 535.83502197]
[-2.25295687 549.13812256]
[1.28671551 534.56176758]
[4.60897493 519.93426514]
[7.71308517 505.25900269]
[10.81719494 490.58367920]
[13.92130566 475.90838623]
[17.02541542 461.23309326]
[20.12952614 446.55776978]
[23.23363495 431.88247681]
[26.33774567 417.20718384]
[29.44185638 402.53186035]
[15.74403572 396.47668457]
[3.59987664 387.70227051]
[-6.45836782 376.59020996]
[-13.98924255 363.62457275]
[-18.66146278 349.37088013]
[-20.26849365 334.45144653]
[-18.73767281 319.51809692]
[-14.13349247 305.22387695]
[-6.65489054 292.19430542]
[3.37334800 281.00012207]
[15.51469326 272.13229370]
[29.23987389 265.98034668]
[43.94994736 262.81546021]
[59.00243378 262.77832031]
[62.10654449 248.10301208]
[57.17052078 234.05007935]
[67.59615326 222.14979553]
[70.70026398 207.47450256]
[64.36959839 191.10716248]
[76.79102325 177.51341248]
[79.67629242 162.79353333]
[82.56156158 148.07363892]
[76.07552338 137.86296082]
[78.35882568 125.57596588]
[88.72365570 117.89916992]
[91.82776642 103.22386932]
[90.38773346 100.53763580]
[89.89328766 97.26807404]
[90.56236267 93.76439667]
[92.48083496 90.45143127]
[95.57821655 87.77950287]
[99.55030823 73.31497955]
[103.52240753 58.85045624]
[107.49450684 44.38593292]
[103.68778992 29.02951813]
[114.51914215 18.80547714]
[117.73241425 4.15368938]
[112.34875488 -10.72336483]
[122.05767822 -22.01876640]
[124.50340271 -36.81803513]
[126.94912720 -51.61730576]
[129.39485168 -66.41658020]
[131.39886475 -81.28210449]
[132.95939636 -96.20071411]
[134.51991272 -111.11931610]
[136.08044434 -126.03791809]
[133.86080933 -134.89855957]
[137.77687073 -141.16644287]
[139.55932617 -156.06015015]
[132.21548462 -166.66348267]
[134.00671387 -179.03179932]
[143.43301392 -186.61280823]
[145.43702698 -201.47833252]
[147.33030701 -216.35836792]
[149.11277771 -231.25209045]
[135.10177612 -236.85157776]
[123.01802826 -245.88735962]
[113.68540955 -257.74334717]
[107.74024963 -271.61120605]
[105.58789062 -286.54537964]
[107.37509155 -301.52764893]
[112.97998810 -315.53649902]
[122.02043152 -327.61676025]
[133.88003540 -336.94479370]
[147.75018311 -342.88461304]
[162.68519592 -345.03118896]
[177.66677856 -343.23822021]
[191.67344666 -337.62789917]
[203.75021362 -328.58279419]
[213.07366943 -316.71960449]
[219.00811768 -302.84713745]
[221.14894104 -287.91131592]
[219.35018921 -272.93041992]
[213.73446655 -258.92593384]
[204.68469238 -246.85264587]
[192.81790161 -237.53376770]
[178.94316101 -231.60467529]
[164.00650024 -229.46961975]
[162.22402954 -214.57589722]
[164.55041504 -207.56094360]
[160.30255127 -199.47431946]
[158.29853821 -184.60879517]
[165.82901001 -168.75764465]
[154.45304871 -154.27769470]
[152.67057800 -139.38397217]
[150.99903870 -124.47740173]
[149.43852234 -109.55879211]
[147.87799072 -94.64019012]
[146.31747437 -79.72158051]
[147.97587585 -77.46153259]
[148.83897400 -74.40838623]
[148.60018921 -70.86178589]
[147.06700134 -67.22669983]
[144.19412231 -63.97085190]
[141.74839783 -49.17158127]
[139.30267334 -34.37231064]
[136.85694885 -19.57303810]
[142.41554260 -5.75452709]
[132.53169250 6.59941673]
[144.67442322 -2.20706344]
[159.64533997 -1.27350771]
[170.59994507 8.97327518]
[172.52993774 23.84859467]
[164.55296326 36.55165482]
[150.31596375 41.27478409]
[136.32791138 35.85863876]
[128.98365784 22.77757263]
[133.07449341 37.09938812]
[121.95903015 48.35802841]
[117.98693085 62.82255554]
[114.01483154 77.28707886]
[110.04273987 91.75160217]
[106.50306702 106.32798004]
[103.39895630 121.00328064]
[109.51137543 138.37336731]
[97.28145599 150.95890808]
[94.39618683 165.67880249]
[91.51091003 180.39869690]
[98.04578400 191.51885986]
[95.33959198 203.71969604]
[85.37556458 210.57859802]
[82.27145386 225.25390625]
[86.98545074 240.35652161]
[76.78184509 251.20712280]
[73.67773438 265.88241577]
[87.42595673 272.01147461]
[99.59459686 280.86172485]
[109.65317535 292.04437256]
[117.16384125 305.06900024]
[121.80039978 319.36508179]
[123.36250305 334.30694580]
[121.78428650 349.24121094]
[117.13715363 363.51541138]
[109.62654877 376.50628662]
[99.58286285 387.64727783]
[87.44692993 396.45297241]
[73.75064087 402.54049683]
[59.09366226 405.64596558]
[44.11715698 405.63598633]
[41.01305008 420.31127930]
[37.90893936 434.98660278]
[34.80482864 449.66189575]
[31.70071793 464.33718872]
[28.59660721 479.01251221]
[25.49249840 493.68780518]
[22.38838768 508.36309814]
[19.28427696 523.03839111]
[20.96714973 529.43212891]
[19.40322685 534.89575195]
[15.86309052 538.10144043]
[12.32341862 552.67779541]
[9.65762329 567.43902588]
[7.87515688 582.33276367]
[15.21901131 592.93609619]
[13.42777348 605.30438232]
[4.00148344 612.88537598]
[1.99746966 627.75091553]
[-0.00654401 642.61645508]
[-2.01055765 657.48199463]
[-4.01457119 672.34747314]
[-6.01858521 687.21301270]
[7.90749550 693.02050781]
[19.85537910 702.23516846]
[29.01044083 714.22882080]
[34.74847031 728.18365479]
[36.67824173 743.14825439]
[34.66818237 758.10223389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 204]
[17 203]
[18 202]
[19 201]
[20 200]
[21 199]
[23 196]
[24 195]
[33 194]
[34 193]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 182]
[57 168]
[58 167]
[60 165]
[61 164]
[63 161]
[64 160]
[65 159]
[68 157]
[69 156]
[74 155]
[75 154]
[76 153]
[77 152]
[79 150]
[80 142]
[82 140]
[83 139]
[84 138]
[85 137]
[86 132]
[87 131]
[88 130]
[89 129]
[91 128]
[92 127]
[95 125]
[96 124]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
