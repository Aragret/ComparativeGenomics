%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[68.77373505 625.80010986]
[57.13143539 635.28771973]
[44.43039703 643.30273438]
[30.85583687 649.72839355]
[16.60571480 654.47088623]
[1.88783693 657.46112061]
[-13.08316612 658.65545654]
[-28.08897209 658.03649902]
[-42.91075516 655.61322021]
[-57.33236694 651.42102051]
[-71.14349365 645.52099609]
[-84.14273834 637.99926758]
[-96.14053345 628.96539307]
[-106.96190643 618.55120850]
[-116.44905090 606.90856934]
[-124.46362305 594.20721436]
[-130.88874817 580.63244629]
[-135.63072205 566.38214111]
[-138.62039185 551.66412354]
[-139.81416321 536.69311523]
[-139.19462585 521.68731689]
[-136.77082825 506.86563110]
[-132.57809448 492.44415283]
[-126.67757416 478.63327026]
[-119.15531921 465.63430786]
[-110.12102509 453.63684082]
[-99.70643616 442.81585693]
[-88.06343079 433.32913208]
[-75.36179352 425.31503296]
[-61.78675079 418.89044189]
[-47.53627396 414.14898682]
[-32.81817245 411.15988159]
[-17.84708023 409.96664429]
[-2.84132004 410.58676147]
[11.98027992 413.01110840]
[16.16729164 398.60733032]
[20.35430336 384.20355225]
[24.54131317 369.79977417]
[28.72832489 355.39599609]
[32.70042038 340.93145752]
[36.45672226 326.40939331]
[40.21302414 311.88732910]
[43.96932220 297.36529541]
[38.10253525 286.78665161]
[41.11312103 274.65734863]
[51.91650391 267.61108398]
[55.88859940 253.14656067]
[59.86069489 238.68203735]
[63.83279037 224.21751404]
[67.80488586 209.75299072]
[63.71406174 195.43118286]
[74.82952881 184.17253113]
[78.80162048 169.70800781]
[82.44970703 155.15838623]
[85.77197266 140.53092957]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.51166534 57.10488129]
[100.07218933 42.18627548]
[101.63271332 27.26766968]
[95.37310028 12.73743343]
[104.39249420 0.88417310]
[105.95301819 -14.03443146]
[107.51354218 -28.95303726]
[109.07406616 -43.87164307]
[110.63458252 -58.79024506]
[110.18798065 -73.78359222]
[107.74225616 -88.58287048]
[105.29652405 -103.38214111]
[102.74069214 -118.16278839]
[100.07489777 -132.92401123]
[90.00820160 -145.12942505]
[95.36045074 -159.02915955]
[92.69464874 -173.79039001]
[90.02885437 -188.55160522]
[87.36306000 -203.31282043]
[84.69726562 -218.07403564]
[80.72517395 -223.35929871]
[80.11074829 -229.00903320]
[82.17871094 -233.31398010]
[79.95359802 -248.14802551]
[77.72847748 -262.98208618]
[75.50335693 -277.81610107]
[73.27824402 -292.65014648]
[58.25587463 -293.77984619]
[43.86167908 -298.22448730]
[30.81766701 -305.76116943]
[19.77811813 -316.01184082]
[11.29677010 -328.46231079]
[5.79904652 -342.48809814]
[3.56070924 -357.38568115]
[4.69403267 -372.40777588]
[9.14217091 -386.80087280]
[16.68200493 -399.84307861]
[26.93534279 -410.88012695]
[39.38787842 -419.35845947]
[53.41500092 -424.85278320]
[68.31311035 -427.08752441]
[83.33493042 -425.95056152]
[97.72696686 -421.49893188]
[110.76732635 -413.95593262]
[121.80191040 -403.69992065]
[130.27722168 -391.24533081]
[135.76814270 -377.21688843]
[137.99926758 -362.31823730]
[136.85865784 -347.29669189]
[132.40354919 -332.90573120]
[124.85739899 -319.86718750]
[114.59870911 -308.83511353]
[102.14206696 -300.36279297]
[88.11228943 -294.87527466]
[90.33740234 -280.04122925]
[92.56252289 -265.20718384]
[94.78763580 -250.37313843]
[97.01275635 -235.53910828]
[99.45848083 -220.73983765]
[102.12427521 -205.97860718]
[104.79007721 -191.21739197]
[107.45587158 -176.45617676]
[110.12166595 -161.69496155]
[119.99768066 -150.54536438]
[114.83611298 -135.58979797]
[117.50190735 -120.82859039]
[121.78410339 -114.80491638]
[120.09579468 -105.82786560]
[122.54152679 -91.02859497]
[124.98725128 -76.22932434]
[129.73544312 -90.45797729]
[138.59750366 -102.56020355]
[150.72875977 -111.38249207]
[164.97291565 -116.08396912]
[179.97233582 -116.21649933]
[194.29734802 -111.76747131]
[206.58259583 -103.16092682]
[215.65713501 -91.21719360]
[220.65602112 -77.07466125]
[221.10279846 -62.08131790]
[216.95489502 -47.66622543]
[208.60765076 -35.20334244]
[196.85665894 -25.88055229]
[182.82197571 -20.58644104]
[167.84129333 -19.82561111]
[153.34245300 -23.67057991]
[140.70741272 -31.75486946]
[131.14045715 -43.30793762]
[125.55319214 -57.22972107]
[123.99266815 -42.31111908]
[122.43214417 -27.39251328]
[120.87162018 -12.47390842]
[119.31109619 2.44469619]
[125.68233490 15.90785408]
[116.55132294 28.82819366]
[114.99079895 43.74679947]
[113.43027496 58.66540146]
[115.35460663 61.61993790]
[115.94348907 65.65332794]
[114.70544434 70.12776184]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[116.81186676 121.33462524]
[130.47229004 127.53083801]
[134.29292297 142.03610229]
[125.45735168 154.15768433]
[110.47882080 154.95999146]
[100.39942932 143.85319519]
[97.07717133 158.48065186]
[98.62274170 163.46646118]
[98.14870453 168.08474731]
[96.13323975 171.62776184]
[93.26614380 173.68011475]
[89.29405212 188.14463806]
[93.10076904 203.50105286]
[82.26940918 213.72508240]
[78.29731750 228.18960571]
[74.32521820 242.65412903]
[70.35312653 257.11865234]
[66.38102722 271.58319092]
[71.44872284 289.28628540]
[58.49138260 301.12158203]
[54.73508072 315.64364624]
[50.97878265 330.16571045]
[47.22248077 344.68777466]
[48.61818314 351.15023804]
[46.81185532 356.53857422]
[43.13210678 359.58300781]
[38.94509506 373.98678589]
[34.75808334 388.39056396]
[30.57107353 402.79434204]
[26.38406181 417.19812012]
[40.19563293 423.09707642]
[53.19544220 430.61788940]
[65.19390869 439.65084839]
[76.01605988 450.06420898]
[85.50408173 461.70614624]
[93.51959991 474.40689087]
[99.94573975 487.98120117]
[104.68877411 502.23117065]
[107.67955017 516.94891357]
[108.87444305 531.91986084]
[108.25603485 546.92572021]
[105.83333588 561.74755859]
[101.64167786 576.16937256]
[95.74219513 589.98071289]
[88.22090912 602.98022461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 195]
[36 194]
[37 193]
[38 192]
[39 191]
[40 188]
[41 187]
[42 186]
[43 185]
[46 183]
[47 182]
[48 181]
[49 180]
[50 179]
[52 177]
[53 176]
[54 172]
[55 171]
[56 165]
[57 164]
[59 162]
[60 161]
[61 157]
[62 156]
[63 155]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[70 130]
[71 129]
[72 128]
[73 126]
[74 125]
[76 123]
[77 122]
[78 121]
[79 120]
[80 119]
[83 118]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
