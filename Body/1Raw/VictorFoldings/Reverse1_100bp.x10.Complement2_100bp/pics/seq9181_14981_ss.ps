%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[220.33537292 577.23608398]
[207.15821838 569.34570312]
[199.70570374 555.91607666]
[199.98251343 540.55963135]
[207.91418457 527.40728760]
[221.36714172 519.99694824]
[221.59046936 504.99859619]
[221.81379700 490.00024414]
[222.03712463 475.00192261]
[222.26045227 460.00357056]
[220.14582825 445.15338135]
[215.74482727 430.81353760]
[211.34382629 416.47369385]
[206.51782227 402.27124023]
[201.27110291 388.21875000]
[196.02439880 374.16629028]
[190.77767944 360.11383057]
[176.65936279 349.69076538]
[179.85781860 331.55651855]
[174.40246582 317.58370972]
[168.94709778 303.61090088]
[163.38787842 289.67910767]
[157.72509766 275.78909302]
[152.06230164 261.89904785]
[146.39952087 248.00903320]
[134.62316895 248.05108643]
[123.48972321 244.10816956]
[114.31103516 236.62014771]
[108.17697144 226.44599915]
[105.82601166 214.76539612]
[107.55640411 202.94190979]
[113.18856049 192.36380005]
[122.08337402 184.28106689]
[117.04646301 170.15203857]
[112.00954437 156.02301025]
[97.10442352 157.22256470]
[82.39653778 154.52453613]
[68.88766479 148.11267090]
[57.49795151 138.42372131]
[49.00317001 126.11761475]
[43.98193359 112.03256989]
[42.77624893 97.12794495]
[45.46823883 82.41894531]
[51.87454605 68.90744019]
[61.55881500 57.51374435]
[73.86142731 49.01390839]
[68.82450867 34.88488007]
[63.78759384 20.75585175]
[57.95822525 13.72333527]
[58.78257370 6.37879705]
[53.95657730 -7.82365847]
[49.13058090 -22.02611351]
[44.41841507 -26.66368103]
[42.97269821 -32.15976334]
[44.37918091 -36.72384644]
[39.97817993 -51.06369400]
[35.57718277 -65.40354156]
[31.17618561 -79.74338531]
[19.78996849 -83.16255188]
[11.55237484 -91.56748962]
[8.42721748 -102.78922272]
[11.07944393 -114.00891113]
[18.73757744 -122.46581268]
[14.76548100 -136.93034363]
[10.79338455 -151.39486694]
[6.82128859 -165.85939026]
[2.84919238 -180.32391357]
[-0.39296377 -165.67848206]
[-7.94788218 -152.71997070]
[-19.09547615 -142.68347168]
[-32.77322769 -136.52563477]
[-47.67746353 -134.83335876]
[-62.38759995 -137.76794434]
[-75.50157166 -145.04968262]
[-85.76942444 -155.98454285]
[-92.21250153 -169.53027344]
[-94.21669006 -184.39578247]
[-91.59096527 -199.16416931]
[-84.58557892 -212.42782593]
[-73.86826324 -222.92254639]
[-60.46050262 -229.64802551]
[-45.64025497 -231.96324158]
[-30.82008553 -229.64752197]
[-17.41255760 -222.92158508]
[-6.69559431 -212.42651367]
[0.30970261 -199.16152954]
[0.30970261 -214.16152954]
[0.30970261 -229.16152954]
[0.30970261 -244.16152954]
[-7.42759752 -257.96170044]
[0.30970261 -270.68899536]
[0.30970261 -285.68899536]
[0.30970261 -300.68899536]
[0.30970261 -315.68899536]
[0.30970261 -330.68899536]
[0.30970261 -345.68899536]
[-7.42759752 -359.48916626]
[0.30970261 -372.21643066]
[0.30970261 -387.21643066]
[-13.46416569 -393.79238892]
[-23.01409340 -405.69876099]
[-26.44393158 -420.57150269]
[-23.07268715 -435.45767212]
[-13.56972218 -447.40155029]
[0.17814386 -454.03170776]
[15.44126129 -454.03170776]
[29.18912697 -447.40155029]
[38.69209290 -435.45767212]
[42.06333923 -420.57150269]
[38.63349915 -405.69876099]
[29.08357048 -393.79238892]
[15.30970287 -387.21643066]
[15.30970287 -372.21643066]
[23.04700279 -359.48916626]
[15.30970287 -345.68899536]
[15.30970287 -330.68899536]
[15.30970287 -315.68899536]
[15.30970287 -300.68899536]
[15.30970287 -285.68899536]
[15.30970287 -270.68899536]
[23.04700279 -257.96170044]
[15.30970287 -244.16152954]
[15.30970287 -229.16152954]
[15.30970287 -214.16152954]
[15.30970287 -199.16152954]
[17.31371689 -184.29600525]
[21.28581238 -169.83148193]
[25.25790787 -155.36695862]
[29.23000526 -140.90243530]
[33.20210266 -126.43791199]
[49.62834549 -118.35742950]
[55.02429199 -100.53057861]
[45.51603317 -84.14438629]
[49.91703033 -69.80454254]
[54.31802750 -55.46469116]
[58.71902466 -41.12484360]
[63.33303452 -26.85211182]
[68.15903473 -12.64965630]
[72.98503113 1.55279958]
[77.91662598 15.71893501]
[82.95353699 29.84796333]
[87.99045563 43.97699356]
[102.89557648 42.77743530]
[117.60346222 45.47547150]
[131.11233521 51.88732910]
[142.50204468 61.57628250]
[150.99682617 73.88238525]
[156.01806641 87.96743011]
[157.22375488 102.87205505]
[154.53175354 117.58105469]
[148.12545776 131.09255981]
[138.44117737 142.48625183]
[126.13857269 150.98608398]
[131.17549133 165.11511230]
[136.21240234 179.24415588]
[154.47450256 181.95025635]
[168.76873779 193.49867249]
[175.19204712 210.62498474]
[172.04704285 228.55741882]
[160.28955078 242.34623718]
[165.95233154 256.23626709]
[171.61511230 270.12631226]
[177.27790833 284.01632690]
[183.41548157 290.78152466]
[182.91990662 298.15554810]
[188.37525940 312.12835693]
[193.83061218 326.10113525]
[205.30842590 331.98522949]
[209.56454468 343.73553467]
[204.83013916 354.86709595]
[210.07685852 368.91958618]
[215.32357788 382.97204590]
[220.57029724 397.02450562]
[224.01579285 399.66696167]
[226.21955872 402.93927002]
[227.13607788 406.37368774]
[226.87638855 409.53585815]
[225.68367004 412.07269287]
[230.08467102 426.41253662]
[234.48567200 440.75238037]
[237.02935791 425.96963501]
[243.41711426 412.39773560]
[253.18778992 401.01644897]
[265.63604736 392.64736938]
[279.86322021 387.89471436]
[294.84222412 387.10156250]
[309.49172974 390.32519531]
[322.75418091 397.33285522]
[333.67214966 407.61865234]
[341.45745850 420.44009399]
[345.54806519 434.87155151]
[345.64868164 449.87121582]
[341.75201416 464.35623169]
[334.13940430 477.28094482]
[323.36041260 487.71231079]
[310.19314575 494.89721680]
[295.58819580 498.31707764]
[280.59988403 497.72491455]
[266.31024170 493.16354370]
[253.75085449 484.96221924]
[243.82838440 473.71301270]
[237.25878906 460.22689819]
[237.03546143 475.22525024]
[236.81213379 490.22357178]
[236.58880615 505.22192383]
[236.36547852 520.22027588]
[249.59182739 528.02789307]
[257.12838745 541.41058350]
[256.94784546 556.76837158]
[249.09878540 569.97021484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 180]
[12 179]
[13 178]
[14 173]
[15 172]
[16 171]
[17 170]
[19 167]
[20 166]
[21 165]
[22 163]
[23 162]
[24 161]
[25 160]
[33 155]
[34 154]
[35 153]
[46 142]
[47 141]
[48 140]
[50 139]
[51 138]
[52 137]
[55 136]
[56 135]
[57 134]
[58 133]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[86 125]
[87 124]
[88 123]
[89 122]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
