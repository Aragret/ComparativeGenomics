%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[172.70982361 555.44128418]
[160.85804749 564.74890137]
[147.17900085 571.07189941]
[132.41036987 574.06927490]
[117.34860992 573.57940674]
[102.80597687 569.62860107]
[89.56674194 562.43005371]
[78.34487915 552.37188721]
[69.74556732 539.99658203]
[64.23256683 525.97143555]
[62.10316849 511.05294800]
[63.47222519 496.04553223]
[68.26589966 481.75854492]
[76.22566986 468.96252441]
[86.92227936 458.34747314]
[99.77887726 450.48587036]
[114.10211945 445.80169678]
[129.11956787 444.54754639]
[131.34468079 429.71350098]
[133.56980896 414.87945557]
[135.79492188 400.04541016]
[138.02003479 385.21136475]
[138.57824707 370.22177124]
[137.46260071 355.26330566]
[136.34695435 340.30487061]
[134.34294128 325.43933105]
[131.45765686 310.71945190]
[128.46289062 296.02142334]
[125.35877991 281.34613037]
[122.25466919 266.67083740]
[119.15055847 251.99552917]
[116.04644775 237.32022095]
[105.84284210 226.46961975]
[110.55683899 211.36700439]
[107.81699371 209.14764404]
[106.01598358 205.49095154]
[105.81766510 200.85263062]
[107.65726471 195.96766663]
[105.21153259 181.16839600]
[102.76580811 166.36912537]
[100.32007599 151.56985474]
[96.12804413 145.48309326]
[97.94982147 136.53216553]
[95.72470093 121.69812775]
[93.49958801 106.86408234]
[90.09673309 102.87227631]
[89.17264557 97.25806427]
[91.43589783 91.55590820]
[89.65343475 76.66218567]
[87.87096405 61.76847076]
[86.08850098 46.87475204]
[84.30603790 31.98103523]
[68.21818542 23.61809731]
[60.43916702 7.41419268]
[63.91354370 -10.06092072]
[77.06500244 -21.84695816]
[74.83988953 -36.68099976]
[72.61476898 -51.51504517]
[58.35893631 -61.65361023]
[55.89485550 -78.63133240]
[66.26396942 -91.87219238]
[63.81824112 -106.67146301]
[61.37251663 -121.47073364]
[58.92678833 -136.27000427]
[56.48106003 -151.06927490]
[54.03533173 -165.86854553]
[44.02363205 -174.00048828]
[42.29125214 -186.37719727]
[49.22674942 -196.28807068]
[47.00163269 -211.12211609]
[44.77651596 -225.95614624]
[42.55139923 -240.79019165]
[40.32628250 -255.62423706]
[35.95848465 -263.64672852]
[38.18017197 -270.69555664]
[36.17615891 -285.56106567]
[20.60684204 -289.57412720]
[7.80032635 -299.23144531]
[-0.30020165 -313.03060913]
[-2.47985721 -328.84368896]
[1.56581795 -344.24520874]
[11.18872261 -356.88439941]
[24.89181709 -364.84375000]
[22.66670036 -379.67779541]
[20.44158363 -394.51184082]
[18.21646500 -409.34588623]
[8.32694530 -417.62597656]
[6.77902937 -430.02709961]
[13.86131763 -439.83361816]
[11.85730457 -454.69915771]
[-3.09483075 -456.78149414]
[-16.93022346 -462.82174683]
[-28.62219810 -472.37164307]
[-37.30313110 -484.72250366]
[-42.32883835 -498.95782471]
[-43.32637787 -514.02130127]
[-40.22173309 -528.79504395]
[-33.24528122 -542.18280029]
[-22.91472244 -553.19104004]
[-9.99665642 -561.00299072]
[4.55031300 -565.03887939]
[19.64670372 -564.99920654]
[34.17226410 -560.88690186]
[47.04909897 -553.00720215]
[57.32166290 -541.94482422]
[64.22766113 -528.52056885]
[67.25463104 -513.73071289]
[66.17794037 -498.67272949]
[61.07749176 -484.46398926]
[52.33177567 -472.15890503]
[40.58977890 -462.67059326]
[26.72283173 -456.70315552]
[28.72684669 -441.83761597]
[40.18598175 -428.54644775]
[33.05051041 -411.57098389]
[35.27562714 -396.73693848]
[37.50074387 -381.90289307]
[39.72586060 -367.06884766]
[53.46343994 -364.20211792]
[65.42279816 -356.80264282]
[74.15663910 -345.74191284]
[78.59983826 -332.33593750]
[78.19932556 -318.18862915]
[72.98282623 -304.99993896]
[63.55799866 -294.36163330]
[51.04168701 -287.56509399]
[53.04570007 -272.69955444]
[55.16032410 -257.84936523]
[57.38544464 -243.01531982]
[59.61056137 -228.18127441]
[61.83567810 -213.34722900]
[64.06079102 -198.51318359]
[75.71654510 -185.39410400]
[68.83460236 -168.31427002]
[71.28033447 -153.51499939]
[73.72605896 -138.71572876]
[76.17178345 -123.91645813]
[78.61751556 -109.11718750]
[81.06324005 -94.31791687]
[92.48497009 -88.35355377]
[98.47538757 -76.72613525]
[96.64830780 -63.57804489]
[87.44881439 -53.74016190]
[89.67393494 -38.90612030]
[91.89904785 -24.07207489]
[103.38137817 -20.13108826]
[112.15041351 -11.63185406]
[116.49930573 -0.14324339]
[115.54535675 12.17623425]
[109.40841675 22.98393822]
[99.19975281 30.19857025]
[100.98221588 45.09228897]
[102.76468658 59.98600388]
[104.54714966 74.87972260]
[106.32961273 89.77343750]
[108.33362579 104.63896942]
[110.55874634 119.47301483]
[112.78386688 134.30705261]
[115.11935425 149.12413025]
[117.56507874 163.92340088]
[120.01080322 178.72267151]
[122.45653534 193.52194214]
[125.23214722 208.26289368]
[135.65777588 220.16317749]
[130.72175598 234.21611023]
[133.82586670 248.89141846]
[136.92997742 263.56671143]
[140.03408813 278.24203491]
[143.13819885 292.91732788]
[147.97575378 300.66561890]
[146.17755127 307.83416748]
[149.06282043 322.55404663]
[156.58164978 309.57455444]
[170.24649048 303.38812256]
[184.96072388 306.30215454]
[195.23628235 317.22976685]
[197.24064636 332.09524536]
[190.22624207 345.35412598]
[176.80926514 352.06118774]
[161.99391174 349.71484375]
[151.30540466 339.18920898]
[152.42105103 354.14767456]
[153.53669739 369.10610962]
[159.96965027 355.55557251]
[170.81297302 345.19110107]
[184.64007568 339.37634277]
[199.63172913 338.87631226]
[213.81555176 343.75680542]
[225.32540894 353.37570190]
[232.64697266 366.46749878]
[234.81698608 381.30969238]
[231.54991150 395.94958496]
[223.27563477 408.46102905]
[211.08273315 417.19790649]
[196.57542419 421.01077271]
[181.66238403 419.39794922]
[168.30567932 412.57165527]
[158.26260376 401.42999268]
[152.85408020 387.43649292]
[150.62896729 402.27053833]
[148.40383911 417.10458374]
[146.17872620 431.93862915]
[143.95361328 446.77267456]
[157.94216919 452.37774658]
[170.26071167 461.05819702]
[180.24490356 472.34591675]
[187.35629272 485.63217163]
[191.21139526 500.20046997]
[191.60231018 515.26513672]
[188.50793457 530.01373291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 183]
[24 182]
[25 181]
[26 172]
[27 171]
[28 169]
[29 168]
[30 167]
[31 166]
[32 165]
[34 163]
[38 162]
[39 161]
[40 160]
[41 159]
[43 158]
[44 157]
[45 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[56 145]
[57 144]
[58 143]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 134]
[69 132]
[70 131]
[71 130]
[72 129]
[73 128]
[75 127]
[76 126]
[83 118]
[84 117]
[85 116]
[86 115]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
