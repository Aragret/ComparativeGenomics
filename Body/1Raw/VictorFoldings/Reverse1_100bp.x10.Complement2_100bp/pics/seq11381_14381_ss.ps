%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[197.42161560 588.22375488]
[210.33212280 580.41473389]
[206.14511108 566.01098633]
[201.95809937 551.60717773]
[197.55711365 537.26733398]
[192.94309998 522.99462891]
[181.66601562 513.26440430]
[184.78323364 497.75332642]
[180.16923523 483.48059082]
[175.55522156 469.20785522]
[171.78646851 466.27435303]
[169.82051086 460.94216919]
[171.02317810 454.44100952]
[166.83616638 440.03723145]
[155.85379028 429.97558594]
[159.43144226 414.56420898]
[155.24444580 400.16043091]
[151.05743408 385.75665283]
[146.87042236 371.35284424]
[142.68341064 356.94906616]
[138.49639893 342.54528809]
[134.30938721 328.14151001]
[129.90838623 313.80166626]
[125.29437256 299.52893066]
[120.68036652 285.25619507]
[109.40328979 275.52600098]
[112.52050781 260.01492310]
[107.90650177 245.74218750]
[103.29248810 231.46945190]
[98.67848206 217.19671631]
[96.19936371 231.99043274]
[89.52357483 245.42300415]
[79.22864532 256.33236694]
[66.20517731 263.77478027]
[51.57984161 267.10635376]
[36.61787033 266.03894043]
[22.61362457 260.66482544]
[10.77861214 251.44892883]
[2.13668013 239.18855286]
[-2.56455755 224.94430542]
[-2.91839767 209.94848633]
[1.10577106 195.49836731]
[9.15981770 182.84402466]
[20.54698563 173.08018494]
[34.28217316 167.05154419]
[49.17714691 165.27960205]
[63.94334412 167.91767883]
[77.30333710 174.73753357]
[88.10136414 185.14920044]
[95.40203094 198.24865723]
[94.95542145 183.25531006]
[94.50881958 168.26196289]
[94.06221008 153.26861572]
[93.61560822 138.27526855]
[93.16899872 123.28191376]
[92.72239685 108.28856659]
[80.69319153 117.24949646]
[66.14904785 113.57964325]
[59.81135941 99.98429108]
[66.35203552 86.48542023]
[80.94953918 83.03389740]
[92.84237671 92.17258453]
[93.51216125 77.18754578]
[86.39878845 63.05565262]
[94.69667053 50.68656158]
[95.36645508 35.70152283]
[96.03623962 20.71648598]
[93.29314423 12.00366592]
[96.82919312 5.51381779]
[97.72201538 -9.45958805]
[90.81983185 -23.69582558]
[99.30095673 -35.93999863]
[100.19377136 -50.91340637]
[101.08658600 -65.88681030]
[101.19824982 -80.88639832]
[100.52846527 -95.87143707]
[99.85868073 -110.85647583]
[99.18889618 -125.84151459]
[87.80809021 -136.47706604]
[87.34230042 -151.68356323]
[97.55181122 -162.46788025]
[87.28433228 -177.75382996]
[95.97290039 -193.00099182]
[95.08008575 -207.97439575]
[94.18727112 -222.94779968]
[93.29445648 -237.92120361]
[92.40163422 -252.89460754]
[91.50881958 -267.86801147]
[90.61600494 -282.84143066]
[89.72319031 -297.81481934]
[88.83037567 -312.78823853]
[87.71472168 -327.74670410]
[86.37648773 -342.68685913]
[71.62519836 -346.04165649]
[58.63360214 -353.79235840]
[48.67449188 -365.17968750]
[42.72355652 -379.08801270]
[41.36381149 -394.15475464]
[44.72846603 -408.90380859]
[52.48788834 -421.89019775]
[63.88189316 -431.84167480]
[77.79420471 -437.78329468]
[92.86183929 -439.13293457]
[107.60862732 -435.75839233]
[120.58982086 -427.99026489]
[130.53366089 -416.58959961]
[136.46595764 -402.67330933]
[137.80551147 -387.60476685]
[134.42108154 -372.86026001]
[126.64426422 -359.88427734]
[115.23693848 -349.94805908]
[101.31667328 -344.02511597]
[102.65490723 -329.08493042]
[105.68034363 -325.38955688]
[106.41648102 -319.75439453]
[103.80377960 -313.68106079]
[104.69659424 -298.70764160]
[105.58940887 -283.73425293]
[106.48222351 -268.76083374]
[107.37504578 -253.78742981]
[108.26786041 -238.81402588]
[109.16067505 -223.84062195]
[110.05348969 -208.86721802]
[110.94630432 -193.89379883]
[119.78263855 -185.63270569]
[120.64900208 -173.16542053]
[112.53684998 -163.13766479]
[123.66777802 -153.30720520]
[124.56050110 -138.11978149]
[114.17393494 -126.51129913]
[114.84371948 -111.52626038]
[115.51350403 -96.54122162]
[116.18328857 -81.55618286]
[126.24075317 -92.68486023]
[141.08079529 -94.86959839]
[153.91874695 -87.11157990]
[158.88528442 -72.95765686]
[153.70974731 -58.87881088]
[140.75834656 -51.31170273]
[125.95227051 -53.71591568]
[116.05998993 -64.99399567]
[115.16717529 -50.02059174]
[114.27436066 -35.04718399]
[121.24040222 -21.88194466]
[112.69541931 -8.56677246]
[111.80260468 6.40663338]
[111.02127838 21.38627052]
[110.35149384 36.37131119]
[109.68170929 51.35634995]
[116.84298706 64.41641235]
[108.49720001 77.85733032]
[107.82741547 92.84236908]
[107.71574402 107.84195709]
[108.16235352 122.83530426]
[108.60895538 137.82865906]
[109.05556488 152.82200623]
[109.50216675 167.81535339]
[109.94877625 182.80870056]
[110.39537811 197.80206299]
[112.95121002 212.58271790]
[117.56522369 226.85543823]
[122.17922974 241.12817383]
[126.79324341 255.40090942]
[138.40034485 266.15197754]
[134.95309448 280.64218140]
[139.56710815 294.91491699]
[144.18112183 309.18765259]
[148.82371521 313.89486694]
[150.18743896 319.41186523]
[148.71316528 323.95449829]
[152.90017700 338.35827637]
[157.08718872 352.76205444]
[161.27420044 367.16583252]
[165.46121216 381.56964111]
[169.64822388 395.97341919]
[173.83523560 410.37719727]
[185.11709595 421.46908569]
[181.23994446 435.85021973]
[185.42695618 450.25399780]
[189.82795715 464.59384155]
[194.44197083 478.86657715]
[199.05596924 493.13931274]
[210.66307068 503.89041138]
[207.21583557 518.38061523]
[211.82983398 532.65332031]
[216.47244263 537.36053467]
[217.83616638 542.87756348]
[216.36189270 547.42016602]
[220.54890442 561.82397461]
[224.73591614 576.22772217]
[239.82081604 575.89880371]
[254.47660828 579.48632812]
[267.70404053 586.74560547]
[278.60122681 597.18176270]
[286.42520142 610.08325195]
[290.64251709 624.57037354]
[290.96560669 639.65539551]
[287.37243652 654.30981445]
[280.10803223 667.53442383]
[269.66766357 678.42761230]
[256.76318359 686.24658203]
[242.27442932 690.45831299]
[227.18928528 690.77557373]
[212.53627014 687.17675781]
[199.31443787 679.90722656]
[188.42530823 669.46264648]
[180.61129761 656.55517578]
[176.40518188 642.06481934]
[176.09373474 626.97949219]
[179.69821167 612.32788086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 190]
[3 189]
[4 188]
[5 185]
[6 184]
[8 182]
[9 181]
[10 180]
[13 179]
[14 178]
[16 176]
[17 175]
[18 174]
[19 173]
[20 172]
[21 171]
[22 170]
[23 167]
[24 166]
[25 165]
[27 163]
[28 162]
[29 161]
[30 160]
[50 159]
[51 158]
[52 157]
[53 156]
[54 155]
[55 154]
[56 153]
[62 152]
[63 151]
[65 149]
[66 148]
[67 147]
[69 146]
[70 145]
[72 143]
[73 142]
[74 141]
[75 133]
[76 132]
[77 131]
[78 130]
[81 127]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
