%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[131.03334045 218.78521729]
[131.40791321 203.78387451]
[132.81654358 188.84411621]
[135.25253296 174.03713989]
[138.70428467 159.43350220]
[143.15533447 145.10279846]
[148.58447266 131.11334229]
[135.00825500 124.73473358]
[121.43205261 118.35613251]
[107.85585022 111.97752380]
[93.90888214 112.96432495]
[85.76554871 101.59868622]
[72.18933868 95.22007751]
[56.40886307 96.35456848]
[48.17987061 83.93953705]
[34.60366440 77.56093597]
[21.02745628 71.18232727]
[7.45124865 64.80372620]
[-6.12495852 58.42511749]
[-13.36264801 71.56937408]
[-21.42762566 84.22290802]
[-30.28675079 96.33370972]
[-39.90361786 107.85202026]
[-50.23870850 118.73051453]
[-61.24955368 128.92448425]
[-72.89090729 138.39202881]
[-85.11493683 147.09426880]
[-97.87140656 154.99542236]
[-111.10788727 162.06301880]
[-124.77000427 168.26803589]
[-138.80160522 173.58497620]
[-153.14505005 177.99197388]
[-167.74136353 181.47091675]
[-182.53059387 184.00752258]
[-197.45195007 185.59136963]
[-212.44413757 186.21594238]
[-227.44554138 185.87867737]
[-242.39450073 184.58096313]
[-257.22961426 182.32812500]
[-271.88989258 179.12942505]
[-286.31512451 174.99800110]
[-300.44598389 169.95083618]
[-314.22448730 164.00866699]
[-327.59393311 157.19592285]
[-340.49938965 149.54058838]
[-352.88787842 141.07411194]
[-364.70846558 131.83129883]
[-375.91256714 121.85013580]
[-386.45416260 111.17161560]
[-396.28991699 99.83963776]
[-405.37939453 87.90076447]
[-413.68530273 75.40405273]
[-421.17343140 62.40085220]
[-427.81307983 48.94459915]
[-433.57696533 35.09059143]
[-438.44134521 20.89575195]
[-442.38626099 6.41841507]
[-445.39550781 -8.28192902]
[-447.45669556 -23.14487267]
[-448.56140137 -38.10934067]
[-448.70504761 -53.11384201]
[-447.88705444 -68.09671783]
[-446.11077881 -82.99639893]
[-443.38351440 -97.75166321]
[-439.71649170 -112.30187225]
[-435.12475586 -126.58723450]
[-429.62719727 -140.54905701]
[-423.24639893 -154.12995911]
[-416.00854492 -167.27413940]
[-407.94342041 -179.92758179]
[-399.08416748 -192.03828430]
[-389.46719360 -203.55648804]
[-379.13195801 -214.43486023]
[-368.12100220 -224.62870789]
[-356.47955322 -234.09613037]
[-344.25543213 -242.79823303]
[-331.49887085 -250.69923401]
[-318.26229858 -257.76669312]
[-304.60012817 -263.97155762]
[-290.56845093 -269.28833008]
[-276.22497559 -273.69519043]
[-261.62860107 -277.17398071]
[-246.83935547 -279.71041870]
[-231.91798401 -281.29409790]
[-216.92578125 -281.91848755]
[-201.92439270 -281.58105469]
[-186.97544861 -280.28317261]
[-172.14036560 -278.03018188]
[-157.48010254 -274.83129883]
[-143.05493164 -270.69973755]
[-128.92410278 -265.65240479]
[-115.14569855 -259.71008301]
[-101.77632904 -252.89720154]
[-88.87093353 -245.24171448]
[-76.48254395 -236.77510071]
[-64.66206360 -227.53216553]
[-53.45806885 -217.55087280]
[-42.91660309 -206.87223816]
[-33.08098221 -195.54016113]
[-23.99161720 -183.60118103]
[-15.68586540 -171.10437012]
[-8.19785404 -158.10108948]
[-1.55835438 -144.64476013]
[4.20535135 -130.79069519]
[9.06957817 -116.59579468]
[13.01433754 -102.11841583]
[16.02341843 -87.41803741]
[18.08445930 -72.55507660]
[19.18898773 -57.59059143]
[19.33246613 -42.58609009]
[18.51430321 -27.60322380]
[16.73786354 -12.70356274]
[14.01044559 2.05166936]
[10.34325695 16.60183716]
[5.75136805 30.88715172]
[0.25364658 44.84891129]
[13.82985401 51.22751617]
[27.40606117 57.60612106]
[40.98226929 63.98472595]
[54.55847549 70.36333466]
[69.36788940 68.77259827]
[78.56794739 81.64386749]
[92.14414978 88.02247620]
[106.09111786 87.03567505]
[114.23445129 98.40131378]
[127.81066132 104.77992249]
[141.38687134 111.15852356]
[154.96307373 117.53713226]
[162.26586914 104.42797852]
[170.45568848 91.85389709]
[179.49348450 79.87480164]
[189.33621216 68.54778290]
[199.93696594 57.92681122]
[211.24519348 48.06251144]
[223.20704651 39.00188828]
[235.76548767 30.78811646]
[248.86070251 23.46034431]
[262.43026733 17.05348778]
[276.40948486 11.59808159]
[290.73181152 7.12012196]
[305.32891846 3.64094901]
[320.13131714 1.17714286]
[335.06838989 -0.25955534]
[350.06900024 -0.66229898]
[365.06167603 -0.02916875]
[379.97491455 1.63681805]
[394.73770142 4.32772255]
[409.27966309 8.03072071]
[423.53149414 12.72816563]
[437.42526245 18.39767265]
[450.89480591 25.01222420]
[463.87591553 32.54029465]
[476.30670166 40.94601440]
[488.12792969 50.18932343]
[499.28332520 60.22617340]
[509.71963501 71.00873566]
[519.38720703 82.48561859]
[528.23992920 94.60213470]
[536.23559570 107.30054474]
[543.33618164 120.52033234]
[549.50775146 134.19850159]
[554.72094727 148.26985168]
[558.95092773 162.66735840]
[562.17755127 177.32237244]
[564.38537598 192.16508484]
[565.56396484 207.12475586]
[565.70758057 222.13009644]
[564.81567383 237.10958862]
[562.89239502 251.99185181]
[559.94702148 266.70596313]
[555.99346924 281.18179321]
[551.05059814 295.35040283]
[545.14202881 309.14422607]
[538.29589844 322.49752808]
[530.54479980 335.34667969]
[521.92565918 347.63049316]
[512.47961426 359.29034424]
[502.25161743 370.27075195]
[491.29046631 380.51934814]
[479.64834595 389.98727417]
[467.38076782 398.62945557]
[454.54620361 406.40469360]
[441.20578003 413.27590942]
[427.42306519 419.21038818]
[413.26379395 424.17984009]
[398.79541016 428.16058350]
[384.08685303 431.13363647]
[369.20822144 433.08483887]
[354.23043823 434.00491333]
[339.22485352 433.88943481]
[324.26300049 432.73898315]
[309.41616821 430.55902100]
[294.75509644 427.35998535]
[280.34967041 423.15704346]
[266.26855469 417.97027588]
[252.57882690 411.82440186]
[239.34571838 404.74868774]
[226.63230896 396.77688599]
[214.49919128 387.94692993]
[203.00416565 378.30093384]
[192.20201111 367.88488770]
[182.14422607 356.74838257]
[172.87872314 344.94451904]
[164.44967651 332.52954102]
[156.89723206 319.56262207]
[150.25738525 306.10552979]
[144.56178284 292.22241211]
[139.83758545 277.97943115]
[136.10726929 263.44445801]
[133.38864136 248.68675232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 128]
[8 127]
[9 126]
[10 125]
[12 123]
[13 122]
[15 120]
[16 119]
[17 118]
[18 117]
[19 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
