%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[56.10229874 484.65582275]
[51.69908524 499.02487183]
[45.20336533 512.57708740]
[36.76025772 525.00976562]
[26.55838203 536.04516602]
[14.82565308 545.43670654]
[1.82418287 552.97454834]
[-12.15556908 558.49035645]
[-26.80129051 561.86090088]
[-41.78579330 563.01086426]
[-56.77431107 561.91455078]
[-71.43200684 558.59643555]
[-85.43140411 553.13067627]
[-98.45977020 545.63940430]
[-110.22603607 536.28991699]
[-120.46733856 525.29113770]
[-128.95489502 512.88873291]
[-135.49906921 499.35986328]
[-139.95367432 485.00665283]
[-142.21920776 470.14984131]
[-142.24502563 455.12130737]
[-140.03057861 440.25677490]
[-135.62532043 425.88836670]
[-129.12767029 412.33703613]
[-120.68278503 399.90557861]
[-110.47933960 388.87164307]
[-98.74526978 379.48181152]
[-85.74272919 371.94580078]
[-71.76219177 366.43197632]
[-57.11598969 363.06350708]
[-42.13132477 361.91571045]
[-27.14295959 363.01416016]
[-12.48574162 366.33432007]
[-15.06440353 351.66464233]
[-2.83796310 341.62350464]
[2.61739397 327.65069580]
[8.07275105 313.67788696]
[13.52810764 299.70510864]
[13.03253174 292.33108521]
[19.17010498 285.56585693]
[24.83289146 271.67584229]
[30.49567795 257.78582764]
[36.15846634 243.89579773]
[41.61382294 229.92298889]
[46.86053848 215.87052917]
[52.10725784 201.81805420]
[57.35397720 187.76557922]
[62.60069275 173.71310425]
[67.84741211 159.66062927]
[73.09413147 145.60816956]
[71.96179962 140.96846008]
[73.73208618 135.56817627]
[78.71192932 131.21929932]
[78.32620239 123.83871460]
[84.56381226 117.16564178]
[90.43277740 103.36146545]
[90.43778229 95.30091095]
[96.49324799 89.39648438]
[102.56708527 75.68122101]
[108.64091492 61.96595383]
[114.71475220 48.25068665]
[119.32875824 33.97795105]
[114.61476135 18.87534332]
[124.81836700 8.02473545]
[127.92247772 -6.65056753]
[123.20848083 -21.75317574]
[133.41207886 -32.60378647]
[136.51618958 -47.27908707]
[139.62030029 -61.95439148]
[142.72441101 -76.62969208]
[145.82852173 -91.30499268]
[133.83070374 -82.30208588]
[118.83471680 -81.95541382]
[106.43367767 -90.39427185]
[101.25288391 -104.47118378]
[105.22463989 -118.93579865]
[116.86756897 -128.39318848]
[131.83915710 -129.31596375]
[144.55537415 -121.35996246]
[150.27346802 -107.49140930]
[155.09947205 -121.69386292]
[159.92546082 -135.89631653]
[164.75146484 -150.09877014]
[169.57745361 -164.30122375]
[174.40345764 -178.50367737]
[179.22946167 -192.70614624]
[184.05545044 -206.90859985]
[183.03695679 -212.02813721]
[183.98889160 -216.57205200]
[186.36201477 -219.88616943]
[189.42706299 -221.62908936]
[194.88243103 -235.60189819]
[200.33778381 -249.57469177]
[205.79313660 -263.54748535]
[192.61369324 -270.75378418]
[180.46400452 -279.58627319]
[169.54356384 -289.89999390]
[160.03172302 -301.52554321]
[152.08467102 -314.27200317]
[145.83288574 -327.93008423]
[141.37902832 -342.27554321]
[138.79624939 -357.07275391]
[138.12696838 -372.07876587]
[139.38215637 -387.04714966]
[142.54119873 -401.73214722]
[147.55224609 -415.89257812]
[154.33299255 -429.29592896]
[162.77209473 -441.72210693]
[172.73097229 -452.96704102]
[184.04611206 -462.84613037]
[196.53167725 -471.19711304]
[209.98266602 -477.88284302]
[224.17819214 -482.79357910]
[238.88516235 -485.84866333]
[253.86206055 -486.99792480]
[268.86297607 -486.22247314]
[283.64154053 -483.53506470]
[297.95510864 -478.97985840]
[311.56863403 -472.63159180]
[324.25854492 -464.59454346]
[335.81649780 -455.00070190]
[346.05270386 -444.00756836]
[354.79901123 -431.79568481]
[361.91189575 -418.56558228]
[367.27447510 -404.53451538]
[370.79870605 -389.93286133]
[372.42675781 -375.00042725]
[372.13186646 -359.98239136]
[369.91888428 -345.12536621]
[365.82412720 -330.67333984]
[359.91485596 -316.86358643]
[352.28811646 -303.92294312]
[343.06912231 -292.06381226]
[332.40924072 -281.48101807]
[320.48358154 -272.34829712]
[307.48791504 -264.81561279]
[293.63568115 -259.00665283]
[279.15432739 -255.01686096]
[264.28164673 -252.91169739]
[249.26187134 -252.72573853]
[234.34162903 -254.46205139]
[219.76594543 -258.09213257]
[214.31057739 -244.11933899]
[208.85522461 -230.14653015]
[203.39987183 -216.17373657]
[198.25790405 -202.08259583]
[193.43191528 -187.88014221]
[188.60591125 -173.67768860]
[183.77992249 -159.47523499]
[178.95391846 -145.27278137]
[174.12791443 -131.07031250]
[169.30192566 -116.86786652]
[164.47592163 -102.66540527]
[160.50382996 -88.20088196]
[157.39971924 -73.52558136]
[154.29560852 -58.85028076]
[151.19149780 -44.17497635]
[148.08738708 -29.49967575]
[153.02340698 -15.44674206]
[142.59777832 -3.54645729]
[139.49366760 11.12884521]
[144.42968750 25.18177795]
[134.00405884 37.08206177]
[144.13229370 26.01775169]
[157.69099426 19.60202026]
[172.66880798 18.78660202]
[186.84388733 23.69245911]
[198.11341858 33.59183884]
[204.80563354 47.01622391]
[205.92779541 61.97418976]
[201.31344604 76.24681091]
[191.64706421 87.71682739]
[178.36264038 94.68273163]
[163.43080139 96.11116791]
[149.06661987 91.79024506]
[137.40093994 82.36093903]
[130.16427612 69.22203827]
[128.43002319 54.32452011]
[122.35618591 68.03978729]
[116.28234863 81.75505066]
[110.20851898 95.47032166]
[104.23695374 109.23042297]
[98.36799622 123.03459930]
[92.60195923 136.88208008]
[87.14659882 150.85488892]
[81.89988708 164.90734863]
[76.65316772 178.95982361]
[71.40644836 193.01229858]
[66.15972900 207.06477356]
[60.91300964 221.11723328]
[55.66629410 235.16970825]
[56.38209915 241.74232483]
[54.02499771 246.91349792]
[50.04849243 249.55857849]
[44.38570404 263.44860840]
[38.72291946 277.33862305]
[33.06013107 291.22866821]
[27.50090599 305.16046143]
[22.04554939 319.13323975]
[16.59019279 333.10604858]
[11.13483524 347.07885742]
[13.32329273 362.74795532]
[1.48705614 371.78970337]
[14.51648712 379.27911377]
[26.28408432 388.62692261]
[36.52695465 399.62423706]
[45.01627350 412.02542114]
[51.56237793 425.55340576]
[56.01903152 439.90594482]
[58.28667068 454.76245117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 203]
[35 201]
[36 200]
[37 199]
[38 198]
[40 197]
[41 196]
[42 195]
[43 194]
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[53 184]
[55 183]
[56 182]
[58 181]
[59 180]
[60 179]
[61 178]
[62 163]
[64 161]
[65 160]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[91 145]
[92 144]
[93 143]
[94 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
