%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[109.82690430 679.30987549]
[94.81038666 678.63867188]
[80.08376312 675.62652588]
[66.00969696 670.34759521]
[52.93477249 662.93188477]
[41.18097305 653.56195068]
[31.03775215 642.46868896]
[22.75488663 629.92510986]
[16.53635597 616.24023438]
[12.53529263 601.75097656]
[10.85022831 586.81420898]
[11.52266026 571.79772949]
[14.53602791 557.07135010]
[19.81612396 542.99774170]
[27.23292160 529.92346191]
[36.60377884 518.17041016]
[47.69792175 508.02810669]
[60.24215698 499.74627686]
[73.92756653 493.52886963]
[88.41712952 489.52899170]
[103.35404205 487.84518433]
[104.02382660 472.86013794]
[104.69361115 457.87509155]
[105.36339569 442.89004517]
[106.03318024 427.90502930]
[106.70296478 412.91998291]
[92.53694916 399.54693604]
[92.77685547 379.76193237]
[107.71694183 366.32791138]
[107.71694183 351.32791138]
[107.71694183 336.32791138]
[107.71694183 321.32791138]
[107.71694183 306.32791138]
[107.71694183 291.32791138]
[107.71694183 276.32791138]
[105.03326416 272.37734985]
[104.80280304 266.69897461]
[107.94692230 260.88296509]
[108.39353180 245.88961792]
[108.84013367 230.89627075]
[108.05881500 215.91662598]
[106.05480194 201.05110168]
[104.05078125 186.18556213]
[102.04676819 171.32003784]
[100.04275513 156.45451355]
[90.67444611 144.87504578]
[96.49866486 130.16488647]
[94.49465179 115.29935455]
[83.90264893 102.29221344]
[90.44290924 86.84548950]
[88.21778870 72.01145172]
[83.84999084 63.98897171]
[86.07168579 56.94014740]
[84.06766510 42.07461929]
[82.06365204 27.20909119]
[80.05963898 12.34356403]
[75.28760529 26.56423950]
[67.51000214 39.39034271]
[57.10632324 50.19605637]
[44.58418274 58.45414734]
[30.55457115 63.76168442]
[15.70201778 65.85970306]
[0.75121468 64.64583588]
[-13.56835651 60.17930603]
[-26.55801201 52.67804718]
[-37.58395767 42.50806808]
[-46.10821152 30.16557693]
[-51.71485901 16.25279427]
[-54.13034058 1.44855666]
[-53.23679352 -13.52480507]
[-49.07782364 -27.93670845]
[-41.85634995 -41.08396530]
[-31.92472458 -52.32508850]
[-19.76753807 -61.11159897]
[-5.97796392 -67.01478577]
[8.77117443 -69.74662018]
[23.76023293 -69.17381287]
[38.25786209 -65.32430267]
[51.55669403 -58.38592148]
[63.00784302 -48.69720840]
[72.05258942 -36.73089600]
[78.24961090 -23.07084846]
[81.29592896 -8.39015675]
[85.05222321 -22.91221619]
[88.80852509 -37.43427658]
[84.77359772 -52.73231125]
[95.45153046 -63.11648178]
[99.20783234 -77.63854218]
[102.96413422 -92.16059875]
[106.72043610 -106.68266296]
[105.32472992 -113.14513397]
[107.13105774 -118.53347015]
[110.81080627 -121.57789612]
[114.99781799 -135.98167419]
[119.18482971 -150.38545227]
[123.37184143 -164.78924561]
[127.55885315 -179.19302368]
[131.74586487 -193.59680176]
[135.93287659 -208.00057983]
[140.11988831 -222.40437317]
[126.80480957 -229.42530823]
[115.17581177 -238.98309326]
[105.70910645 -250.68635559]
[98.79233551 -264.05584717]
[94.70874786 -278.54409790]
[93.62554932 -293.55780029]
[95.58711243 -308.48217773]
[100.51310730 -322.70608521]
[108.20181274 -335.64706421]
[118.33837891 -346.77517700]
[130.50773621 -355.63473511]
[144.21153259 -361.86294556]
[158.88862610 -365.20477295]
[173.93798828 -365.52337646]
[188.74336243 -362.80572510]
[202.69848633 -357.16305542]
[215.23187256 -348.82644653]
[225.83033752 -338.13732910]
[234.05982971 -325.53335571]
[239.58340454 -311.53067017]
[242.17483521 -296.70266724]
[241.72802734 -281.65655518]
[238.26126099 -267.00848389]
[231.91651917 -253.35823059]
[222.95359802 -241.26481628]
[211.73953247 -231.22341919]
[198.73352051 -223.64524841]
[184.46815491 -218.84062195]
[169.52760315 -217.00628662]
[154.52366638 -218.21736145]
[150.33665466 -203.81358337]
[146.14964294 -189.40979004]
[141.96263123 -175.00601196]
[137.77561951 -160.60223389]
[133.58860779 -146.19844055]
[129.40159607 -131.79466248]
[125.21459198 -117.39088440]
[121.24249268 -102.92636108]
[117.48619080 -88.40429688]
[113.72988892 -73.88224030]
[109.97358704 -59.36018372]
[114.27719879 -45.10086060]
[103.33058929 -33.67797470]
[99.57428741 -19.15591431]
[95.81798553 -4.63385582]
[94.92517090 10.33955002]
[96.92918396 25.20507812]
[98.93319702 40.07060623]
[100.93721008 54.93613434]
[103.05183411 69.78633118]
[105.27695465 84.62037659]
[114.20864868 92.09473419]
[115.85051727 103.62493134]
[109.36018372 113.29534149]
[111.36419678 128.16087341]
[120.87584686 140.80361938]
[114.90828705 154.45050049]
[116.91230011 169.31602478]
[118.91631317 184.18154907]
[120.92032623 199.04708862]
[122.92433929 213.91261292]
[129.65138245 200.50563049]
[141.78436279 191.68574524]
[156.61276245 189.42330933]
[170.82386780 194.22377014]
[181.24288940 205.01469421]
[185.54217529 219.38536072]
[182.76127625 234.12532043]
[173.52143860 245.94163513]
[159.88687134 252.19451904]
[144.90356445 251.48704529]
[131.91882324 243.97726440]
[123.83348083 231.34286499]
[123.38687897 246.33621216]
[122.94026947 261.32955933]
[122.71694183 276.32791138]
[122.71694183 291.32791138]
[122.71694183 306.32791138]
[122.71694183 321.32791138]
[122.71694183 336.32791138]
[122.71694183 351.32791138]
[122.71694183 366.32791138]
[131.90376282 371.75250244]
[137.96386719 380.43478394]
[139.85874939 390.76980591]
[137.31240845 400.88064575]
[130.84930420 408.95925903]
[121.68800354 413.58975220]
[121.01821899 428.57479858]
[120.34843445 443.55984497]
[119.67864990 458.54489136]
[119.00886536 473.52990723]
[118.33908081 488.51495361]
[133.06619263 491.52468872]
[147.14112854 496.80130005]
[160.21728516 504.21484375]
[171.97262573 513.58282471]
[182.11767578 524.67443848]
[190.40261841 537.21661377]
[196.62339783 550.90051270]
[200.62686157 565.38903809]
[202.31439209 580.32556152]
[201.64442444 595.34216309]
[198.63349915 610.06903076]
[193.35571289 624.14349365]
[185.94108582 637.21905518]
[176.57215881 648.97363281]
[165.47969055 659.11773682]
[152.93682861 667.40167236]
[139.25244141 673.62133789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[29 182]
[30 181]
[31 180]
[32 179]
[33 178]
[34 177]
[35 176]
[38 175]
[39 174]
[40 173]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[47 155]
[48 154]
[50 151]
[51 150]
[53 149]
[54 148]
[55 147]
[56 146]
[83 145]
[84 144]
[85 143]
[87 141]
[88 140]
[89 139]
[90 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
