%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[136.51913452 477.22592163]
[149.29096985 468.86871338]
[147.28695679 454.00317383]
[145.28294373 439.13766479]
[143.27893066 424.27212524]
[141.27491760 409.40661621]
[139.27090454 394.54107666]
[129.84461975 386.96008301]
[128.05337524 374.59176636]
[135.39723206 363.98843384]
[126.20236206 352.27075195]
[132.24494934 337.64892578]
[130.46247864 322.75521851]
[128.68002319 307.86151123]
[125.79474640 293.14160156]
[121.82264709 278.67709351]
[117.85055542 264.21255493]
[113.87845612 249.74804688]
[108.00775909 263.55148315]
[95.66651154 272.07754517]
[80.67878723 272.68432617]
[67.68869781 265.18380737]
[60.72136307 251.90014648]
[61.93568420 236.94937134]
[70.95539093 224.96417236]
[84.98563385 219.65829468]
[99.67898560 222.67582703]
[110.48268127 233.08195496]
[108.47866058 218.21643066]
[106.47464752 203.35090637]
[104.47063446 188.48536682]
[95.10232544 176.90591431]
[100.92654419 162.19573975]
[98.92253113 147.33021545]
[89.55422211 135.75074768]
[95.37844086 121.04058075]
[93.37442780 106.17504883]
[90.66993713 103.42584991]
[89.19037628 99.49790192]
[89.43502808 94.96500397]
[91.62822723 90.60269928]
[90.28999329 75.66251373]
[88.95175934 60.72232819]
[87.61352539 45.78214264]
[86.27529144 30.84195900]
[80.66236115 44.75220490]
[71.40307617 56.55329514]
[59.22766876 65.31453705]
[45.09633636 70.34499359]
[30.12353897 71.24793243]
[15.49009037 67.95214844]
[2.35004807 60.71755600]
[-8.26031113 50.11471558]
[-15.50420856 36.97980118]
[-18.81036186 22.34869194]
[-17.91803169 7.37525702]
[-12.89759254 -6.75963593]
[-4.14497757 -18.94124985]
[7.64954662 -28.20889282]
[21.55581474 -33.83168030]
[36.47711945 -35.36617279]
[51.23670197 -32.69135666]
[64.67057037 -26.01817894]
[75.71926117 -15.87291336]
[83.51142883 -3.05565763]
[87.43299103 11.42620850]
[90.53710175 -3.24909401]
[93.64121246 -17.92439651]
[96.74532318 -32.59969711]
[99.84943390 -47.27500153]
[102.51522827 -62.03621674]
[104.74034882 -76.87026215]
[106.96546173 -91.70430756]
[104.90501404 -97.98651123]
[106.14096069 -103.53353119]
[109.48401642 -106.94425201]
[112.14981079 -121.70547485]
[114.81560516 -136.46669006]
[117.48139954 -151.22790527]
[120.03723145 -166.00856018]
[122.48296356 -180.80783081]
[124.92868805 -195.60710144]
[127.37442017 -210.40637207]
[129.82014465 -225.20564270]
[128.14753723 -229.21267700]
[127.86539459 -233.14776611]
[128.78036499 -236.58262634]
[130.57986450 -239.19573975]
[132.87722778 -240.80206299]
[136.19949341 -255.42953491]
[139.52174377 -270.05697632]
[142.84400940 -284.68444824]
[146.16625977 -299.31192017]
[149.48852539 -313.93936157]
[152.48330688 -328.63735962]
[155.14909363 -343.39859009]
[157.81489563 -358.15982056]
[143.87623596 -363.85260010]
[131.42599487 -372.31930542]
[121.00844574 -383.18981934]
[113.07897949 -395.98892212]
[107.98424530 -410.15710449]
[105.94696808 -425.07498169]
[107.05620575 -440.09042358]
[111.26346588 -454.54699707]
[118.38482666 -467.81274414]
[128.10897827 -479.30773926]
[140.01080322 -488.52944946]
[153.57003784 -495.07476807]
[168.19389343 -498.65753174]
[183.24310303 -499.12115479]
[198.05978394 -496.44534302]
[211.99618530 -490.74707031]
[224.44309998 -482.27545166]
[234.85638428 -471.40084839]
[242.78080750 -458.59863281]
[247.86996460 -444.42843628]
[249.90138245 -429.50976562]
[248.78622437 -414.49475098]
[244.57328796 -400.03982544]
[237.44670105 -386.77688599]
[227.71803284 -375.28573608]
[215.81257629 -366.06869507]
[202.25077820 -359.52871704]
[187.62550354 -355.95172119]
[172.57611084 -355.49401855]
[169.91030884 -340.73278809]
[167.24452209 -325.97158813]
[168.94377136 -322.88211060]
[169.23103333 -318.81607056]
[167.66362000 -314.44613647]
[164.11598206 -310.61709595]
[160.79373169 -295.98965454]
[157.47146606 -281.36218262]
[154.14920044 -266.73474121]
[150.82695007 -252.10726929]
[147.50468445 -237.47981262]
[144.61941528 -222.75991821]
[142.17369080 -207.96064758]
[139.72796631 -193.16137695]
[137.28222656 -178.36210632]
[134.83650208 -163.56283569]
[136.84733582 -156.45098877]
[132.24261475 -148.56211853]
[129.57682800 -133.80088806]
[126.91102600 -119.03968048]
[124.24523163 -104.27845764]
[121.79950714 -89.47918701]
[119.57438660 -74.64514160]
[117.34927368 -59.81110001]
[118.90510559 -57.47925186]
[119.63100433 -54.39061356]
[119.23410034 -50.85821152]
[117.54013062 -47.29521179]
[114.52473450 -44.17089081]
[111.42062378 -29.49558830]
[108.31651306 -14.82028580]
[105.21240234 -0.14498381]
[102.10829163 14.53031826]
[101.21547699 29.50372505]
[102.55371094 44.44390869]
[103.89194489 59.38409424]
[105.23017883 74.32427979]
[106.56841278 89.26446533]
[108.23995972 104.17103577]
[110.24397278 119.03656769]
[119.75562286 131.67930603]
[113.78806305 145.32620239]
[115.79207611 160.19172668]
[125.30372620 172.83447266]
[119.33616638 186.48135376]
[121.34017944 201.34689331]
[123.34419250 216.21241760]
[125.34820557 231.07794189]
[128.34298706 245.77593994]
[132.31507874 260.24047852]
[136.28717041 274.70498657]
[140.25926208 289.16952515]
[145.58551025 275.14700317]
[157.14669800 265.58987427]
[171.92079163 262.99633789]
[186.04585266 268.04437256]
[195.82963562 279.41439819]
[198.71469116 294.13430786]
[193.94685364 308.35641479]
[182.77244568 318.36303711]
[168.11241150 321.53848267]
[153.79885864 317.05270386]
[143.57373047 306.07904053]
[145.35620117 320.97274780]
[147.13867188 335.86648560]
[156.46102905 348.64944458]
[150.29095459 362.20596313]
[161.66691589 376.68591309]
[154.13642883 392.53704834]
[156.14044189 407.40258789]
[158.14447021 422.26812744]
[160.14848328 437.13363647]
[162.15249634 451.99917603]
[164.15650940 466.86471558]
[178.68544006 471.54150391]
[189.74046326 482.06527710]
[195.12657166 496.34646606]
[193.77435303 511.54956055]
[185.95228577 524.65600586]
[173.21347046 533.06341553]
[158.08717346 535.10260010]
[143.57676697 530.36859131]
[132.56327820 519.80139160]
[127.23345184 505.49908447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[10 193]
[12 191]
[13 190]
[14 189]
[15 178]
[16 177]
[17 176]
[18 175]
[28 174]
[29 173]
[30 172]
[31 171]
[33 169]
[34 168]
[36 166]
[37 165]
[41 164]
[42 163]
[43 162]
[44 161]
[45 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 150]
[72 149]
[73 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
