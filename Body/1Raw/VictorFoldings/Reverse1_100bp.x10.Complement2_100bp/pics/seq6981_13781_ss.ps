%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[66.70176697 670.29937744]
[52.61938477 675.51690674]
[38.01873779 679.03222656]
[23.10479927 680.79595947]
[8.08693600 680.78338623]
[-6.82402277 678.99462891]
[-21.41875267 675.45483398]
[-35.49236298 670.21362305]
[-48.84728622 663.34472656]
[-61.29603958 654.94439697]
[-72.66385651 645.13067627]
[-82.79116058 634.04132080]
[-91.53576660 621.83197021]
[-98.77493286 608.67407227]
[-104.40701294 594.75225830]
[-108.35295105 580.26208496]
[-110.55735779 565.40686035]
[-110.98927307 550.39520264]
[-109.64264679 535.43786621]
[-106.53636932 520.74475098]
[-101.71406555 506.52215576]
[-95.24341583 492.96978760]
[-87.21527100 480.27783203]
[-77.74232483 468.62451172]
[-66.95756531 458.17343140]
[-55.01240158 449.07125854]
[-42.07451248 441.44583130]
[-28.32553291 435.40414429]
[-13.95847607 431.03103638]
[0.82496756 428.38790894]
[15.81726170 427.51184082]
[30.80793762 428.41516113]
[33.47373199 413.65396118]
[36.13953018 398.89273071]
[29.32435608 382.72116089]
[41.33553314 368.76361084]
[43.78126144 353.96432495]
[46.22698593 339.16506958]
[48.67271423 324.36578369]
[46.92765045 321.30194092]
[46.57987976 317.24066162]
[48.08205795 312.84783936]
[51.57229614 308.96643066]
[54.67640305 294.29113770]
[57.78051376 279.61584473]
[60.88462448 264.94055176]
[55.94860077 250.88760376]
[66.37422943 238.98731995]
[69.47834015 224.31201172]
[72.58245087 209.63671875]
[75.68656158 194.96141052]
[78.79067230 180.28610229]
[81.56628418 165.54515076]
[84.01200867 150.74588013]
[86.45774078 135.94660950]
[88.90346527 121.14733124]
[91.34918976 106.34806061]
[91.46086121 91.34848022]
[89.23574066 76.51443481]
[87.01062775 61.68039322]
[84.78550720 46.84634781]
[82.56039429 32.01230240]
[80.33527374 17.17826080]
[75.96747589 9.15578175]
[78.18916321 2.10695958]
[76.18515015 -12.75856876]
[66.67350006 -25.40131569]
[72.64105988 -39.04819870]
[70.63704681 -53.91372681]
[68.52242279 -68.76392365]
[66.29730988 -83.59796906]
[64.07218933 -98.43201447]
[54.18267059 -106.71212006]
[52.63475418 -119.11324310]
[59.71704102 -128.91975403]
[57.71302795 -143.78527832]
[55.15719604 -158.56593323]
[52.05308533 -173.24124146]
[48.94897461 -187.91654968]
[45.84486389 -202.59184265]
[30.82399178 -201.94129944]
[15.90092468 -203.77212524]
[1.48277795 -208.03439331]
[-12.03711224 -214.61181641]
[-24.28991318 -223.32495117]
[-34.94135666 -233.93609619]
[-43.70087051 -246.15579224]
[-50.32948303 -259.65066528]
[-54.64635849 -274.05255127]
[-56.53373718 -288.96856689]
[-55.94012451 -303.99179077]
[-52.88171387 -318.71240234]
[-47.44194794 -332.72875977]
[-39.76921844 -345.65853882]
[-30.07284737 -357.14898682]
[-18.61736107 -366.88662720]
[-5.71527004 -374.60583496]
[8.28144646 -380.09597778]
[22.99094582 -383.20733643]
[38.01194382 -383.85498047]
[52.93465805 -382.02127075]
[67.35198212 -377.75622559]
[80.87060547 -371.17620850]
[93.12172699 -362.46069336]
[103.77113342 -351.84750366]
[112.52828979 -339.62612915]
[119.15429688 -326.12997437]
[123.46839905 -311.72726440]
[125.35290527 -296.81088257]
[124.75640106 -281.78775024]
[121.69515228 -267.06774902]
[116.25268555 -253.05242920]
[108.57746887 -240.12413025]
[98.87888336 -228.63555908]
[87.42151642 -218.90011597]
[74.51794434 -211.18341064]
[60.52016830 -205.69595337]
[63.62427902 -191.02064514]
[66.72838593 -176.34535217]
[69.83249664 -161.67004395]
[80.07767487 -172.62615967]
[95.04249573 -171.59951782]
[103.69546509 -159.34690857]
[99.65792084 -144.90051270]
[85.90619659 -138.90968323]
[72.57855988 -145.78929138]
[74.58257294 -130.92376709]
[86.04170227 -117.63259888]
[78.90623474 -100.65712738]
[81.13134766 -85.82308960]
[83.35646820 -70.98904419]
[87.45741272 -64.84054565]
[85.50257874 -55.91774368]
[87.50659180 -41.05221558]
[96.87490082 -29.47274971]
[91.05068207 -14.76258278]
[93.05469513 0.10294580]
[95.16931915 14.95314312]
[97.39443207 29.78718758]
[99.61955261 44.62123108]
[101.84467316 59.45527267]
[104.06978607 74.28932190]
[106.29490662 89.12335968]
[111.00334167 74.88150024]
[119.33369446 62.40731812]
[130.68458557 52.60133743]
[144.23658752 46.17145920]
[159.01136780 43.58185959]
[173.94230652 45.01948929]
[187.95155334 50.38056183]
[200.02775574 59.27805710]
[209.29911804 71.06965637]
[215.09634399 84.90411377]
[217.00091553 99.78270721]
[214.87533569 114.63134766]
[208.87307739 128.37808228]
[199.42741394 140.03053284]
[187.22027588 148.74749756]
[173.13287354 153.89968872]
[158.18218994 155.11517334]
[143.44755554 152.30619812]
[129.99264526 145.67553711]
[118.78880310 135.70188904]
[110.64483643 123.10522461]
[106.14846039 108.79379272]
[103.70273590 123.59306335]
[101.25701141 138.39233398]
[98.81127930 153.19160461]
[96.36555481 167.99087524]
[98.20514679 172.87585449]
[98.00683594 177.51416016]
[96.20582581 181.17086792]
[93.46597290 183.39021301]
[90.36186218 198.06552124]
[87.25775146 212.74082947]
[84.15364838 227.41612244]
[81.04953766 242.09143066]
[85.76353455 257.19403076]
[75.55992889 268.04464722]
[72.45581818 282.71994019]
[69.35170746 297.39526367]
[66.24759674 312.07055664]
[63.47198486 326.81152344]
[61.02626038 341.61077881]
[58.58053207 356.41006470]
[56.13480377 371.20932007]
[62.99786758 382.13000488]
[60.65614319 394.40600586]
[50.90074539 401.55853271]
[48.23495102 416.31976318]
[45.56915665 431.08096313]
[59.92885590 435.47817993]
[73.66767883 441.54290771]
[86.59275818 449.19003296]
[98.52263641 458.31222534]
[109.28984833 468.78140259]
[118.74323273 480.45059204]
[126.75007629 493.15597534]
[133.19798279 506.71920776]
[137.99641418 520.94982910]
[141.07803345 535.64813232]
[142.39958191 550.60772705]
[141.94247437 565.61865234]
[139.71315002 580.47015381]
[135.74290466 594.95367432]
[130.08747864 608.86602783]
[122.82625580 622.01177979]
[114.06118011 634.20642090]
[103.91529083 645.27880859]
[92.53102112 655.07342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 191]
[33 190]
[34 189]
[36 186]
[37 185]
[38 184]
[39 183]
[43 182]
[44 181]
[45 180]
[46 179]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[65 137]
[66 136]
[68 134]
[69 133]
[70 131]
[71 130]
[72 129]
[75 127]
[76 126]
[77 120]
[78 119]
[79 118]
[80 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
