%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[68.79356384 673.04412842]
[57.71471405 683.78015137]
[42.58576202 686.79980469]
[28.23429489 681.13952637]
[19.23981857 668.60546875]
[18.47243309 653.19720459]
[26.17701149 639.83142090]
[39.89505005 632.77319336]
[41.23328400 617.83300781]
[42.57151794 602.89282227]
[36.00054169 589.52600098]
[44.93817902 576.47119141]
[46.27641678 561.53100586]
[47.61465073 546.59082031]
[33.84231186 540.76983643]
[22.52816963 530.96368408]
[14.78849125 518.12322998]
[11.39202785 503.49945068]
[12.68366146 488.52163696]
[18.54943657 474.65774536]
[28.42648697 463.27038574]
[41.35703278 455.48297119]
[56.08123016 452.06900024]
[57.41946793 437.12881470]
[58.75770187 422.18862915]
[44.33051300 418.15173340]
[30.88722992 411.53070068]
[18.88633728 402.54974365]
[8.73742580 391.51348877]
[0.78721523 378.79687500]
[-4.69229221 364.83215332]
[-7.51311731 350.09445190]
[-7.57775116 335.08532715]
[-4.88252735 320.31600952]
[0.48220503 306.28973389]
[8.33510876 293.48471069]
[18.40998650 282.33779907]
[30.36480904 273.22964478]
[43.79331589 266.47155762]
[58.23883820 262.29507446]
[73.20980835 260.84378052]
[74.54804230 245.90359497]
[75.88627625 230.96340942]
[77.22451019 216.02322388]
[78.56274414 201.08303833]
[79.90097809 186.14285278]
[81.23921204 171.20266724]
[68.23040771 178.67066956]
[54.22540665 173.29852295]
[49.54817581 159.04638672]
[57.64659119 146.42039490]
[72.55081177 144.72796631]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[100.37439728 42.16499710]
[99.70461273 27.17995644]
[99.03482819 12.19491863]
[98.36504364 -2.79012036]
[97.47222900 -17.76352692]
[96.35657501 -32.72198105]
[95.24092865 -47.68043137]
[94.12528229 -62.63888550]
[93.00962830 -77.59734344]
[84.26734924 -90.78381348]
[91.03661346 -104.05130768]
[76.06881714 -111.07676697]
[66.73983002 -124.61432648]
[65.51789093 -140.91535950]
[72.64208221 -155.52363586]
[86.08283234 -164.49351501]
[84.74459839 -179.43370056]
[83.40635681 -194.37388611]
[82.06812286 -209.31407166]
[73.13048553 -222.36892700]
[79.70146179 -235.73573303]
[78.36322784 -250.67591858]
[77.02499390 -265.61608887]
[75.68675995 -280.55627441]
[74.34852600 -295.49645996]
[73.01029205 -310.43664551]
[58.03467178 -311.86682129]
[43.57689667 -316.02465820]
[30.12940025 -322.76849365]
[18.15019226 -331.86868286]
[8.04728508 -343.01522827]
[0.16477692 -355.82855225]
[-5.22885561 -369.87216187]
[-7.94990730 -384.66778564]
[-7.90570068 -399.71148682]
[-5.09774113 -414.49084473]
[0.37833363 -428.50253296]
[8.33600998 -441.26928711]
[18.50425339 -452.35629272]
[30.53673553 -461.38592529]
[44.02363586 -468.05059814]
[58.50559616 -472.12338257]
[73.48936462 -473.46551514]
[88.46459961 -472.03131104]
[102.92124939 -467.86959839]
[116.36692810 -461.12213135]
[128.34368896 -452.01870728]
[138.44358826 -440.86944580]
[146.32264709 -428.05401611]
[151.71249390 -414.00894165]
[154.42955017 -399.21258545]
[154.38128662 -384.16888428]
[151.56935120 -369.39025879]
[146.08949280 -355.38006592]
[138.12837219 -342.61544800]
[127.95714569 -331.53118896]
[115.92223358 -322.50482178]
[102.43353271 -315.84375000]
[87.95047760 -311.77490234]
[89.28871155 -296.83471680]
[90.62694550 -281.89453125]
[91.96517944 -266.95434570]
[93.30341339 -252.01416016]
[94.64164734 -237.07397461]
[103.48356628 -225.08773804]
[97.00830841 -210.65231323]
[98.34654236 -195.71212769]
[99.68477631 -180.77194214]
[101.02301025 -165.83175659]
[113.76432037 -160.91482544]
[123.18935394 -150.93997192]
[127.41735077 -137.81468201]
[125.56894684 -124.08291626]
[117.94836426 -112.43203735]
[105.99506378 -105.16695404]
[114.65754700 -93.05041504]
[107.96808624 -78.71298981]
[109.08373260 -63.75453568]
[110.19937897 -48.79608154]
[111.31503296 -33.83762741]
[112.43067932 -18.87917519]
[115.40075684 -15.13916492]
[116.05291748 -9.49366093]
[113.35008240 -3.45990562]
[114.01986694 11.52513313]
[114.68965149 26.51017189]
[115.35943604 41.49521255]
[122.39422607 28.24712753]
[133.91429138 18.64044762]
[148.21067810 14.10026360]
[163.16261292 15.30008602]
[176.55206299 22.06192780]
[186.39279175 33.38270950]
[191.22497559 47.58306122]
[190.33178711 62.55644608]
[183.84573364 76.08164978]
[172.72898865 86.15229034]
[158.63063049 91.27444458]
[143.64208984 90.68827820]
[129.98681641 84.48073578]
[119.69049835 73.57267761]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[96.17939758 172.54090881]
[94.84116364 187.48109436]
[93.50292969 202.42127991]
[92.16469574 217.36146545]
[90.82646179 232.30165100]
[89.48822784 247.24183655]
[88.14999390 262.18200684]
[102.62471771 266.27084351]
[116.09803772 272.94812012]
[128.11174011 281.98510742]
[138.25755310 293.07287598]
[146.19102478 305.83285522]
[151.64321899 319.82965088]
[154.42980957 334.58605957]
[154.45732117 349.59927368]
[151.72630310 364.35797119]
[146.33119202 378.35977173]
[138.45710754 391.12835693]
[128.37345886 402.22964478]
[116.42475891 411.28652954]
[103.01880646 417.99172974]
[88.61284637 422.11822510]
[73.69788361 423.52685547]
[72.35964966 438.46704102]
[71.02141571 453.40722656]
[84.90448761 459.38363647]
[96.24522400 469.34509277]
[103.94128418 482.30654907]
[107.24979401 496.99218750]
[105.85901642 511.96112061]
[99.91768646 525.74847412]
[90.01921082 537.00903320]
[77.14243317 544.64831543]
[62.55483246 547.92901611]
[61.21659851 562.86920166]
[59.87836456 577.80938721]
[66.35362244 592.24481201]
[57.51170349 604.23107910]
[56.17346954 619.17126465]
[54.83523560 634.11145020]
[67.08050537 643.49530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 209]
[9 208]
[10 207]
[12 205]
[13 204]
[14 203]
[23 194]
[24 193]
[25 192]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 171]
[47 170]
[53 169]
[54 168]
[55 167]
[56 166]
[58 164]
[59 163]
[60 162]
[61 147]
[62 146]
[63 145]
[64 144]
[65 141]
[66 140]
[67 139]
[68 138]
[69 137]
[71 135]
[76 129]
[77 128]
[78 127]
[79 126]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
