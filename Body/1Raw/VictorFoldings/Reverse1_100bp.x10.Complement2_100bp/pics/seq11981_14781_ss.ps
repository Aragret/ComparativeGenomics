%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[117.20977783 875.82049561]
[102.66275787 872.14288330]
[88.36699677 867.58520508]
[74.37568665 862.16448975]
[60.74086380 855.90093994]
[47.51325607 848.81774902]
[34.74207687 840.94134521]
[22.47482681 832.30102539]
[10.75714588 822.92889404]
[-0.36737451 812.85980225]
[-10.85735130 802.13128662]
[-20.67376137 790.78320312]
[-29.78008652 778.85778809]
[-38.14244843 766.39941406]
[-45.72974396 753.45434570]
[-52.51374054 740.07086182]
[-58.46920395 726.29864502]
[-63.57398224 712.18902588]
[-67.80908203 697.79443359]
[-71.15874481 683.16839600]
[-73.61051941 668.36535645]
[-75.15527344 653.44036865]
[-75.78727722 638.44903564]
[-75.50415802 623.44696045]
[-74.30698395 608.49011230]
[-72.20020294 593.63409424]
[-69.19165802 578.93408203]
[-65.29253387 564.44488525]
[-60.51733398 550.22027588]
[-54.88383484 536.31329346]
[-48.41298294 522.77563477]
[-41.12885284 509.65759277]
[-33.05854416 497.00805664]
[-24.23207664 484.87405396]
[-14.68228722 473.30068970]
[-4.44470167 462.33105469]
[6.44259548 452.00598145]
[17.93910217 442.36380005]
[30.00205231 433.44046021]
[42.58656693 425.26913452]
[55.64583588 417.88018799]
[69.13127136 411.30114746]
[82.99271393 405.55645752]
[97.17858887 400.66751099]
[111.63612366 396.65249634]
[126.31154633 393.52633667]
[124.08643341 378.69229126]
[121.86131287 363.85824585]
[119.63619232 349.02420044]
[117.41107941 334.19015503]
[115.18595886 319.35610962]
[111.94593811 315.84738159]
[110.87569427 310.26599121]
[113.12227631 304.04794312]
[111.33980560 289.15420532]
[109.55734253 274.26049805]
[107.77487946 259.36679077]
[98.58000183 247.64912415]
[104.62258911 233.02729797]
[102.84012604 218.13357544]
[101.05766296 203.23986816]
[99.27519226 188.34614563]
[97.49272919 173.45242310]
[95.71026611 158.55871582]
[84.52848816 168.55709839]
[69.71492767 166.19944763]
[62.18959427 153.22373962]
[67.49987793 139.19515991]
[81.73123932 134.45507812]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[82.94699097 59.71760559]
[90.10826874 46.65753937]
[89.43848419 31.67250252]
[76.31476593 20.10585022]
[75.63033295 2.96390009]
[87.32069397 -9.12635612]
[86.42787933 -24.09976196]
[77.31650543 -33.22915268]
[76.88114166 -45.71891785]
[84.81008148 -54.85447693]
[84.14029694 -69.83951569]
[83.47050476 -84.82455444]
[82.80072021 -99.80959320]
[82.13093567 -114.79463196]
[73.78514862 -128.23554993]
[80.94642639 -141.29562378]
[80.27664185 -156.28065491]
[79.60685730 -171.26570129]
[64.90012360 -174.67372131]
[51.65878296 -181.92419434]
[40.86543274 -192.47911072]
[33.32100677 -205.55520630]
[29.58535576 -220.18214417]
[29.93568611 -235.27452087]
[34.34600449 -249.71238708]
[42.48903275 -262.42434692]
[53.76050568 -272.46707153]
[67.32400513 -279.09533691]
[82.17302704 -281.81729126]
[97.20568085 -280.43096924]
[111.30643463 -275.03918457]
[123.42893219 -266.04208374]
[132.67359924 -254.10733032]
[138.35440063 -240.12051392]
[140.04981995 -225.11956787]
[137.63400269 -210.21768188]
[131.28625488 -196.52064514]
[121.47761536 -185.04489136]
[108.93592834 -176.64198303]
[94.59189606 -171.93548584]
[95.26168060 -156.95043945]
[95.93146515 -141.96540833]
[104.22934723 -129.59631348]
[97.11597443 -115.46441650]
[97.78575897 -100.47937775]
[98.45555115 -85.49433899]
[99.12533569 -70.50930023]
[99.79512024 -55.52426147]
[110.02277374 -41.26375961]
[101.40128326 -24.99257851]
[102.29409790 -10.01917171]
[113.03334808 -2.89891744]
[117.78160858 9.28862286]
[114.59657288 22.17528534]
[104.42352295 31.00271606]
[105.09330750 45.98775482]
[113.39118958 58.35684586]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[110.60398102 156.77624512]
[112.38644409 171.66996765]
[114.16891479 186.56367493]
[115.95137787 201.45739746]
[117.73384094 216.35112000]
[119.51631165 231.24482727]
[128.83866882 244.02778625]
[122.66859436 257.58432007]
[124.45105743 272.47802734]
[126.23352814 287.37176514]
[128.01599121 302.26547241]
[130.02000427 317.13098145]
[132.24511719 331.96502686]
[134.47024536 346.79907227]
[136.69535828 361.63311768]
[138.92047119 376.46716309]
[141.14558411 391.30120850]
[156.09236145 389.98403931]
[171.09162903 389.58050537]
[186.08760071 390.09216309]
[201.02447510 391.51705933]
[215.84671021 393.84994507]
[230.49914551 397.08209229]
[244.92729187 401.20153809]
[259.07745361 406.19290161]
[272.89700317 412.03762817]
[286.33453369 418.71395874]
[299.34005737 426.19711304]
[311.86517334 434.45919800]
[323.86331177 443.46951294]
[335.28979492 453.19451904]
[346.10217285 463.59805298]
[356.26019287 474.64138794]
[365.72607422 486.28347778]
[374.46459961 498.48098755]
[382.44326782 511.18853760]
[389.63238525 524.35882568]
[396.00521851 537.94293213]
[401.53802490 551.89031982]
[406.21029663 566.14904785]
[410.00457764 580.66607666]
[412.90676880 595.38739014]
[414.90612793 610.25830078]
[415.99514771 625.22344971]
[416.16979980 640.22711182]
[415.42947388 655.21350098]
[413.77685547 670.12695312]
[411.21813965 684.91186523]
[407.76284790 699.51330566]
[403.42379761 713.87689209]
[398.21716309 727.94927979]
[392.16229248 741.67803955]
[385.28173828 755.01220703]
[377.60107422 767.90203857]
[369.14886475 780.29968262]
[359.95657349 792.15893555]
[350.05841064 803.43579102]
[339.49114990 814.08819580]
[328.29412842 824.07653809]
[316.50900269 833.36376953]
[304.17962646 841.91516113]
[291.35183716 849.69909668]
[278.07336426 856.68646240]
[264.39364624 862.85131836]
[250.36349487 868.17071533]
[236.03517151 872.62493896]
[221.46194458 876.19732666]
[206.69804382 878.87463379]
[191.79838562 880.64685059]
[176.81838989 881.50744629]
[161.81378174 881.45324707]
[146.84040833 880.48437500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 155]
[47 154]
[48 153]
[49 152]
[50 151]
[51 150]
[54 149]
[55 148]
[56 147]
[57 146]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[70 138]
[71 137]
[72 136]
[74 134]
[75 133]
[77 131]
[78 130]
[81 126]
[82 125]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[91 117]
[92 116]
[93 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
