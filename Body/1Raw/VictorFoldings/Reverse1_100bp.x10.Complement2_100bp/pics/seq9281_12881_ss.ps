%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[12.41295910 503.48257446]
[20.25438690 516.30670166]
[25.99302292 530.19964600]
[29.48754692 544.81933594]
[30.65190125 559.80572510]
[29.45741653 574.78967285]
[25.93350601 589.40228271]
[20.16695023 603.28369141]
[12.29975414 616.09204102]
[2.52565527 627.51190186]
[-8.91464996 637.26208496]
[-21.73943520 645.10247803]
[-35.63287735 650.83996582]
[-50.25283432 654.33325195]
[-65.23928070 655.49639893]
[-80.22316742 654.30065918]
[-94.83549500 650.77557373]
[-108.71641541 645.00787354]
[-121.52411652 637.13958740]
[-132.94317627 627.36456299]
[-142.69241333 615.92346191]
[-150.53172302 603.09802246]
[-156.26806641 589.20410156]
[-159.76017761 574.58386230]
[-160.92205811 559.59729004]
[-159.72509766 544.61352539]
[-156.19877625 530.00146484]
[-150.42993164 516.12103271]
[-142.56062317 503.31399536]
[-132.78463745 491.89572144]
[-121.34272766 482.14743042]
[-108.51664734 474.30917358]
[-94.62226105 468.57400513]
[-80.00172424 465.08309937]
[-65.01508331 463.92245483]
[-50.03139877 465.12063599]
[-35.41965485 468.64816284]
[-21.53968048 474.41815186]
[-13.68792534 461.63729858]
[-5.83616972 448.85647583]
[2.01558590 436.07562256]
[9.86734104 423.29479980]
[17.71909714 410.51394653]
[25.57085228 397.73309326]
[33.42260742 384.95227051]
[40.69583893 371.83355713]
[47.37603378 358.40319824]
[54.05622482 344.97280884]
[60.73641968 331.54244995]
[67.41661835 318.11206055]
[73.28557587 304.30789185]
[78.32249451 290.17886353]
[83.35940552 276.04983521]
[88.39632416 261.92080688]
[93.43324280 247.79176331]
[98.47016144 233.66273499]
[103.40174866 219.49659729]
[104.96227264 204.57798767]
[103.17980957 189.68428040]
[101.39733887 174.79055786]
[99.61487579 159.89685059]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[75.69039154 60.74825287]
[73.98686218 43.67743301]
[84.93687439 30.91279030]
[83.15440369 16.01907349]
[81.37194061 1.12535667]
[79.58946991 -13.76836109]
[77.80700684 -28.66207886]
[76.02454376 -43.55579376]
[74.24207306 -58.44951248]
[71.11203766 -62.62682724]
[70.00775909 -67.13613892]
[70.71646881 -71.15020752]
[72.72792053 -74.04613495]
[71.61227417 -89.00459290]
[70.49662018 -103.96304321]
[69.38097382 -118.92150116]
[68.15399933 -133.87123108]
[66.81576538 -148.81141663]
[65.47753143 -163.75160217]
[61.99280930 -169.37016296]
[61.88487625 -175.05218506]
[64.32865906 -179.15547180]
[63.43584442 -194.12887573]
[62.54302979 -209.10227966]
[61.65021515 -224.07568359]
[46.92588043 -227.44773865]
[33.74867630 -234.83271790]
[23.18682098 -245.63197327]
[16.09651184 -258.97006226]
[13.05253029 -273.76568604]
[14.30163956 -288.81945801]
[19.74257851 -302.91107178]
[28.93427658 -314.89810181]
[41.13159943 -323.80889893]
[55.34577179 -328.92102051]
[70.42450714 -329.82012939]
[85.14544678 -326.43328857]
[98.31522369 -319.03506470]
[108.86622620 -308.22521973]
[115.94313049 -294.88003540]
[118.97225189 -280.08132935]
[117.70801544 -265.02880859]
[112.25292206 -250.94270325]
[103.04918671 -238.96488953]
[90.84291840 -230.06637573]
[76.62361908 -224.96850586]
[77.51643372 -209.99510193]
[78.40924835 -195.02169800]
[79.30207062 -180.04829407]
[80.41771698 -165.08984375]
[81.75595093 -150.14965820]
[83.09418488 -135.20947266]
[86.82189178 -128.82777405]
[84.33942413 -120.03714752]
[85.45507812 -105.07869720]
[86.57072449 -90.12023926]
[87.68637085 -75.16178894]
[89.13579559 -60.23197937]
[90.91825867 -45.33826065]
[92.70072174 -30.44454384]
[94.48319244 -15.55082703]
[96.26565552 -0.65710926]
[98.04811859 14.23660755]
[99.83058929 29.13032532]
[110.97460175 35.59874344]
[116.43985748 47.48205566]
[114.02750397 60.53544617]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.50859070 158.11437988]
[116.29106140 173.00808716]
[118.07352448 187.90180969]
[119.85599518 202.79553223]
[124.87257385 188.65927124]
[132.51588440 175.75268555]
[142.50016785 164.55830383]
[154.45214844 155.49464417]
[167.92500305 148.90054321]
[182.41503906 145.02252197]
[197.38052368 144.00558472]
[212.26197815 145.88772583]
[226.50302124 150.59860229]
[239.57127380 157.96208191]
[250.97816467 167.70288086]
[260.29721069 179.45681763]
[267.18005371 192.78448486]
[271.36932373 207.18760681]
[272.70843506 222.12771606]
[271.14733887 237.04624939]
[266.74435425 251.38549805]
[259.66412354 264.60934448]
[250.17134094 276.22344971]
[238.62088013 285.79354858]
[225.44459534 292.96191406]
[211.13507080 297.46051025]
[196.22727966 299.12118530]
[181.27856445 297.88183594]
[166.84779358 293.78881836]
[153.47448730 286.99511719]
[141.65858459 277.75473022]
[131.84184265 266.41314697]
[124.39128876 253.39434814]
[119.58544922 239.18505859]
[117.60420990 224.32260132]
[117.80622864 233.45478821]
[112.59918976 238.69964600]
[107.56227112 252.82867432]
[102.52535248 266.95770264]
[97.48844147 281.08673096]
[92.45152283 295.21575928]
[87.41460419 309.34478760]
[100.50765991 302.02551270]
[115.41553497 303.68542480]
[126.57795715 313.70541382]
[129.83161926 328.34829712]
[123.96298981 342.15261841]
[111.16091919 349.96969604]
[96.20025635 348.88400269]
[84.66097260 339.30041504]
[80.84699249 324.79226685]
[74.16679382 338.22262573]
[67.48660278 351.65301514]
[60.80640793 365.08337402]
[54.12621307 378.51376343]
[68.65406799 374.77993774]
[81.63664246 382.29342651]
[85.63693237 396.75018311]
[78.36339569 409.86871338]
[63.98262787 414.13409424]
[50.73260117 407.10296631]
[46.20344925 392.80401611]
[38.35169601 405.58486938]
[30.49993896 418.36569214]
[22.64818382 431.14654541]
[14.79642868 443.92736816]
[6.94467306 456.70822144]
[-0.90708244 469.48907471]
[-8.75883770 482.26989746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 210]
[39 209]
[40 208]
[41 207]
[42 206]
[43 205]
[44 204]
[45 203]
[46 196]
[47 195]
[48 194]
[49 193]
[50 192]
[51 183]
[52 182]
[53 181]
[54 180]
[55 179]
[56 178]
[57 176]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 139]
[67 137]
[68 136]
[71 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[77 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 120]
[86 119]
[87 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
