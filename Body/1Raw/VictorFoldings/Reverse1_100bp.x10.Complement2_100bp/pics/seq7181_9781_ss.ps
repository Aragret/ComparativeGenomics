%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[209.10900879 393.74975586]
[221.11531067 384.69674683]
[214.23590088 371.36734009]
[207.35649109 358.03790283]
[200.18112183 344.86541748]
[192.71337891 331.85647583]
[185.24565125 318.84750366]
[177.77790833 305.83856201]
[170.31016541 292.82962036]
[162.84242249 279.82064819]
[149.79588318 272.63476562]
[149.63574219 256.81436157]
[142.16801453 243.80541992]
[134.70027161 230.79646301]
[128.64399719 226.56050110]
[127.21983337 217.53776550]
[119.94660187 204.41908264]
[112.67337799 191.30038452]
[105.40014648 178.18168640]
[106.12682343 193.16407776]
[103.54656219 207.94049072]
[97.78526306 221.78994751]
[89.12403107 234.03669739]
[77.98547363 244.08322144]
[64.91305542 251.43928528]
[50.54460907 255.74601746]
[35.58121109 256.79324341]
[20.75295258 254.52989197]
[6.78334045 249.06637573]
[-5.64601851 240.66929626]
[-15.92866898 229.74835205]
[-23.56289673 216.83639526]
[-28.17621040 202.56343079]
[-29.54351616 187.62588501]
[-27.59810257 172.75257874]
[-22.43488693 158.66920471]
[-14.30579662 146.06294250]
[-3.60746765 135.54887390]
[9.13810539 127.63999176]
[23.30903816 122.72219849]
[38.21389771 121.03543854]
[53.12544632 122.66202545]
[67.31610870 127.52257538]
[80.09350586 135.37994385]
[90.83418274 145.85075378]
[99.01111603 158.41819763]
[97.22864532 143.52447510]
[87.91627502 135.80397034]
[86.30937958 123.41035461]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[85.02901459 28.96856308]
[83.46849060 14.04995918]
[74.33747864 1.12962008]
[80.70871735 -12.33353806]
[71.57769775 -25.25387764]
[77.94893646 -38.71703720]
[76.38841248 -53.63563919]
[74.49511719 -68.51567841]
[72.27000427 -83.34971619]
[70.04488373 -98.18376160]
[64.81447601 -84.12521362]
[55.14398956 -72.65866852]
[42.16950226 -65.13120270]
[27.41524887 -62.42713928]
[12.61453915 -64.86415100]
[-0.49385133 -72.15592957]
[-10.36996269 -83.44585419]
[-15.85355949 -97.40759277]
[-16.30043411 -112.40093994]
[-11.65808773 -126.66448212]
[-2.47189951 -138.52255249]
[10.17894745 -146.58209229]
[24.80824280 -149.89625549]
[39.69735336 -148.07569885]
[53.09712219 -141.33432007]
[63.43335342 -130.46408081]
[69.49214172 -116.74046326]
[70.83037567 -131.68064880]
[72.16860962 -146.62083435]
[59.71691895 -155.50355530]
[53.42475510 -169.33488464]
[54.89080429 -184.35876465]
[63.62166977 -196.55006409]
[77.19113922 -202.69294739]
[78.52937317 -217.63313293]
[79.86761475 -232.57331848]
[71.73439026 -249.09397888]
[82.38210297 -263.04364014]
[83.49775696 -278.00210571]
[84.61340332 -292.96054077]
[85.72904968 -307.91900635]
[86.84470367 -322.87747192]
[72.64715576 -328.00894165]
[60.36121750 -336.78155518]
[50.89859390 -348.54425049]
[44.96147156 -362.42419434]
[42.99042511 -377.39141846]
[45.13171387 -392.33523560]
[51.22644806 -406.14669800]
[60.82235336 -417.80093384]
[73.20735168 -426.43310547]
[87.46238708 -431.40267944]
[102.52965546 -432.34082031]
[117.29105377 -429.17794800]
[130.65118408 -422.14877319]
[141.61865234 -411.77490234]
[149.37959290 -398.82614136]
[153.35807800 -384.26336670]
[153.25889587 -369.16726685]
[149.08940125 -354.65802002]
[141.15899658 -341.81234741]
[130.05618286 -331.58346558]
[116.60483551 -324.73043823]
[101.80315399 -321.76181030]
[100.68750763 -306.80334473]
[99.57185364 -291.84490967]
[98.45620728 -276.88644409]
[97.34056091 -261.92800903]
[104.99398804 -252.56040955]
[104.18694305 -240.08914185]
[94.80779266 -231.23509216]
[93.46955872 -216.29490662]
[92.13132477 -201.35472107]
[104.39308167 -192.89805603]
[110.81832886 -179.34918213]
[109.59099579 -164.30390930]
[100.94089508 -151.81100464]
[87.10879517 -145.28259277]
[85.77055359 -130.34240723]
[84.43231964 -115.40222931]
[84.87892914 -100.40888214]
[87.10404968 -85.57483673]
[89.32916260 -70.74079132]
[91.93206024 -68.36228943]
[93.51222229 -64.60488129]
[93.43410492 -59.96298218]
[91.30701447 -55.19616318]
[92.86753845 -40.27755737]
[101.88693237 -28.42429733]
[95.62731934 -13.89406109]
[104.64671326 -2.04080105]
[98.38710022 12.48943615]
[99.94762421 27.40804100]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[119.88800812 126.00473785]
[112.12236786 141.74200439]
[113.90483093 156.63572693]
[118.51883698 170.90846252]
[125.79206848 184.02716064]
[133.06529236 197.14584351]
[140.33853149 210.26454163]
[147.70921326 223.32873535]
[155.17695618 236.33767700]
[162.64469910 249.34663391]
[176.22538757 257.46301270]
[175.85137939 272.35290527]
[183.31910706 285.36187744]
[190.78684998 298.37081909]
[198.25459290 311.37976074]
[205.72233582 324.38873291]
[213.19007874 337.39767456]
[217.70501709 340.01730347]
[220.48559570 343.73504639]
[221.40394592 347.70642090]
[220.68592834 351.15847778]
[227.56533813 364.48791504]
[234.44474792 377.81735229]
[248.77934265 373.27560425]
[263.67532349 371.22192383]
[278.70413208 371.71536255]
[293.43328857 374.74179077]
[307.43908691 380.21405029]
[320.31851196 387.97476196]
[331.70101929 397.80056763]
[341.25906372 409.40884399]
[348.71768188 422.46551514]
[353.86227417 436.59497070]
[356.54483032 451.39062500]
[356.68811035 466.42684937]
[354.28805542 481.27096558]
[349.41369629 495.49588013]
[342.20526123 508.69235229]
[332.87017822 520.48065186]
[321.67703247 530.52160645]
[308.94784546 538.52636719]
[295.04888916 544.26458740]
[280.38006592 547.57116699]
[265.36340332 548.35095215]
[250.43098450 546.58154297]
[236.01243591 542.31384277]
[222.52259827 535.67059326]
[210.34962463 526.84301758]
[199.84373474 516.08502197]
[191.30720520 503.70617676]
[184.98565674 490.06265259]
[181.06097412 475.54696655]
[179.64608765 460.57678223]
[180.78167725 445.58285522]
[184.43508911 430.99652100]
[190.50120544 417.23751831]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[5 171]
[6 170]
[7 169]
[8 168]
[9 167]
[10 166]
[12 164]
[13 163]
[14 162]
[16 161]
[17 160]
[18 159]
[19 158]
[46 157]
[47 156]
[50 154]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 147]
[59 145]
[61 143]
[62 142]
[63 138]
[64 137]
[65 136]
[82 135]
[83 134]
[84 133]
[89 128]
[90 127]
[91 126]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
