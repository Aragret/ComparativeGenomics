%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[168.07017517 477.75729370]
[177.95455933 466.26492310]
[191.17498779 458.84899902]
[188.72926331 444.04971313]
[186.28353882 429.25045776]
[183.83779907 414.45117188]
[181.39207458 399.65191650]
[178.94635010 384.85263062]
[169.29852295 377.55563354]
[167.13983154 365.24615479]
[174.16473389 354.42886353]
[171.93960571 339.59481812]
[168.07530212 325.10113525]
[162.61994934 311.12832642]
[157.16459656 297.15551758]
[148.84289551 309.63549805]
[133.91093445 311.06256104]
[123.37599182 300.38479614]
[125.00404358 285.47338867]
[137.59494019 277.32052612]
[151.86595154 281.93502808]
[147.46495056 267.59518433]
[143.06394958 253.25534058]
[138.66294861 238.91549683]
[125.19006348 227.67057800]
[129.46221924 209.75885010]
[124.84821320 195.48611450]
[120.23419952 181.21337891]
[115.62019348 166.94064331]
[110.79419708 152.73818970]
[105.75727844 138.60916138]
[100.72035980 124.48013306]
[95.68344879 110.35110474]
[89.33376312 123.94086456]
[75.78784180 130.38352966]
[61.23868179 126.73358917]
[52.33797073 114.65975952]
[53.15499496 99.68202972]
[63.31621933 88.64801025]
[78.17607117 86.60231018]
[90.94197845 94.48165131]
[87.40230560 79.90527344]
[83.64600372 65.38321686]
[79.67390442 50.91868973]
[75.70181274 36.45416641]
[71.72971344 21.98964119]
[67.75762177 7.52511787]
[63.78552246 -6.93940592]
[59.81342697 -21.40393066]
[55.73375702 -35.83848190]
[51.54674911 -50.24226379]
[47.35973740 -64.64604950]
[43.17272568 -79.04982758]
[26.18593597 -81.56750488]
[12.05413246 -91.22585297]
[3.59316111 -106.04177094]
[2.46324396 -123.01047516]
[8.84342098 -138.71482849]
[21.40523911 -150.01353455]
[16.79122925 -164.28627014]
[12.17721939 -178.55900574]
[7.56321049 -192.83174133]
[1.64003313 -179.05073547]
[-11.19285297 -171.28433228]
[-26.14909744 -172.42919922]
[-37.65039444 -182.05833435]
[-41.40703964 -196.58030701]
[-36.01790237 -210.57878113]
[-23.49299240 -218.83265686]
[-8.50379562 -218.26347351]
[3.35975170 -209.08253479]
[0.47447920 -223.80242920]
[-9.77490330 -231.63269043]
[-11.87501431 -243.95231628]
[-5.23767376 -254.06529236]
[-7.90346909 -268.82650757]
[-10.56926441 -283.58773804]
[-13.23506069 -298.34893799]
[-15.90085602 -313.11016846]
[-25.96755028 -325.31558228]
[-20.61530495 -339.21533203]
[-23.28110123 -353.97653198]
[-25.94689560 -368.73776245]
[-28.61269188 -383.49896240]
[-43.65987778 -383.76046753]
[-58.36685562 -386.95281982]
[-72.16832733 -392.95327759]
[-84.53380585 -401.53125000]
[-94.98798370 -412.35696411]
[-103.12903595 -425.01434326]
[-108.64405060 -439.01687622]
[-111.32102966 -453.82632446]
[-111.05709076 -468.87347412]
[-107.86236572 -483.57995605]
[-101.85966492 -497.38043213]
[-93.27971649 -509.74453735]
[-82.45229340 -520.19696045]
[-69.79358673 -528.33593750]
[-55.79016495 -533.84869385]
[-40.98027420 -536.52331543]
[-25.93317413 -536.25689697]
[-11.22723007 -533.05981445]
[2.57229829 -527.05487061]
[14.93499470 -518.47290039]
[25.38566971 -507.64382935]
[33.52262497 -494.98379517]
[39.03310394 -480.97946167]
[41.70529175 -466.16915894]
[41.43647766 -451.12210083]
[38.23699951 -436.41665649]
[32.22983170 -422.61810303]
[23.64587402 -410.25680542]
[12.81507301 -399.80789185]
[0.15373373 -391.67297363]
[-13.85147476 -386.16476440]
[-11.18567848 -371.40353394]
[-8.51988316 -356.64233398]
[-5.85408783 -341.88110352]
[4.02193022 -330.73150635]
[-1.13963842 -315.77597046]
[1.52615702 -301.01473999]
[4.19195271 -286.25350952]
[6.85774803 -271.49230957]
[9.52354336 -256.73107910]
[21.56472969 -243.96485901]
[15.19437027 -226.68769836]
[18.07964325 -211.96780396]
[21.83594322 -197.44575500]
[26.44995308 -183.17301941]
[31.06396294 -168.90028381]
[35.67797089 -154.62754822]
[48.64886475 -153.92063904]
[60.63699341 -148.83543396]
[70.20698547 -139.95722961]
[76.20500183 -128.32684326]
[77.89784241 -115.31864929]
[75.06248474 -102.47814941]
[68.01522064 -91.33837128]
[57.57650757 -83.23683929]
[61.76351929 -68.83306122]
[65.95053101 -54.42927551]
[70.13754272 -40.02549362]
[75.02317047 -34.48000717]
[74.27794647 -25.37602615]
[78.25004578 -10.91150188]
[82.22214508 3.55302167]
[86.19423676 18.01754570]
[90.16633606 32.48207092]
[94.13842773 46.94659424]
[98.11052704 61.41111755]
[101.74453735 64.50998688]
[103.47044373 69.92462158]
[101.97867584 76.36560059]
[105.51834869 90.94197845]
[109.81247711 105.31418610]
[114.84938812 119.44321442]
[119.88630676 133.57225037]
[124.92322540 147.70127869]
[129.70391846 152.26817322]
[131.23129272 157.74212646]
[129.89292908 162.32664490]
[134.50692749 176.59938049]
[139.12094116 190.87210083]
[143.73495483 205.14483643]
[154.84219360 211.70167542]
[158.39137268 223.68444824]
[153.00280762 234.51449585]
[157.40379333 248.85433960]
[161.80479431 263.19418335]
[166.20579529 277.53402710]
[171.13739014 291.70016479]
[176.59274292 305.67297363]
[182.04809570 319.64578247]
[184.22219849 304.80416870]
[191.54737854 291.71441650]
[203.05989075 282.09869385]
[217.24507141 277.22210693]
[232.23658752 277.72628784]
[246.06207275 283.54486084]
[256.90255737 293.91232300]
[263.33175659 307.46463013]
[264.50381470 322.41876221]
[260.26452637 336.80725098]
[251.17164612 348.73703003]
[238.42150879 356.63854980]
[223.69158936 359.47219849]
[208.91987610 356.86517334]
[196.04985046 349.16049194]
[186.77365112 337.36968994]
[188.99876404 352.20373535]
[200.80081177 366.33856201]
[193.74562073 382.40689087]
[196.19134521 397.20617676]
[198.63706970 412.00546265]
[201.08280945 426.80471802]
[203.52853394 441.60400391]
[205.97425842 456.40325928]
[220.87771606 459.17144775]
[233.93403625 466.87265015]
[243.56658936 478.57687378]
[248.61222839 492.87084961]
[248.46163940 508.02847290]
[243.13302612 522.21936035]
[233.26983643 533.72991943]
[220.06309509 541.17022705]
[205.10758972 543.64178467]
[190.20925903 540.84613037]
[177.16716003 533.12091064]
[167.55618286 521.39892578]
[162.53689575 507.09567261]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[11 190]
[12 189]
[13 173]
[14 172]
[15 171]
[21 170]
[22 169]
[23 168]
[24 167]
[26 164]
[27 163]
[28 162]
[29 161]
[30 158]
[31 157]
[32 156]
[33 155]
[41 154]
[42 153]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 142]
[51 141]
[52 140]
[53 139]
[59 131]
[60 130]
[61 129]
[62 128]
[71 127]
[72 126]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
[81 118]
[82 117]
[83 116]
[84 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
