%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[-7.78576040 501.56259155]
[-8.45180321 516.56268311]
[-10.73576832 531.40289307]
[-14.61087608 545.90911865]
[-20.03169441 559.91131592]
[-26.93466377 573.24536133]
[-35.23885345 585.75488281]
[-44.84690094 597.29315186]
[-55.64615631 607.72503662]
[-67.51000214 616.92810059]
[-80.29934692 624.79443359]
[-93.86423492 631.23193359]
[-108.04562378 636.16503906]
[-122.67725372 639.53588867]
[-137.58757019 641.30499268]
[-152.60174561 641.45166016]
[-167.54377747 639.97406006]
[-182.23844910 636.88958740]
[-196.51347351 632.23443604]
[-210.20150757 626.06311035]
[-223.14204407 618.44805908]
[-235.18336487 609.47845459]
[-246.18431091 599.25952148]
[-256.01586914 587.91107178]
[-264.56280518 575.56610107]
[-271.72488403 562.36944580]
[-277.41815186 548.47576904]
[-281.57583618 534.04797363]
[-284.14920044 519.25524902]
[-285.10809326 504.27102661]
[-284.44122314 489.27093506]
[-282.15646362 474.43087769]
[-278.28057861 459.92486572]
[-272.85900879 445.92294312]
[-265.95532227 432.58929443]
[-257.65045166 420.08023071]
[-248.04179382 408.54241943]
[-237.24197388 398.11117554]
[-225.37762451 388.90875244]
[-212.58786011 381.04306030]
[-199.02262878 374.60629272]
[-184.84097290 369.67398071]
[-170.20916748 366.30389404]
[-155.29875183 364.53558350]
[-140.28456116 364.38973999]
[-125.34262085 365.86813354]
[-110.64811707 368.95336914]
[-96.37332916 373.60931396]
[-82.68563843 379.78137207]
[-69.74550629 387.39715576]
[-60.78480911 375.36779785]
[-51.82411575 363.33840942]
[-42.86341858 351.30902100]
[-33.90272141 339.27966309]
[-24.94202614 327.25027466]
[-15.98133087 315.22088623]
[-7.02063465 303.19152832]
[1.94006157 291.16213989]
[9.60065937 278.26580811]
[15.87801933 264.64248657]
[5.68105698 253.73602295]
[0.42235559 239.71847534]
[0.93241590 224.71499634]
[7.16463518 211.01290894]
[18.19766617 200.71310425]
[32.37150192 195.40788269]
[47.53718567 195.93482971]
[53.81454849 182.31150818]
[60.09190750 168.68818665]
[58.39097595 153.89102173]
[71.19339752 144.59541321]
[77.47075653 130.97209167]
[83.74811554 117.34877014]
[90.02548218 103.72545624]
[95.16744232 89.63431549]
[91.36072540 74.27790070]
[102.19207764 64.05386353]
[106.16416931 49.58933640]
[110.13626862 35.12481308]
[114.10836792 20.66028786]
[118.08045959 6.19576454]
[122.05255890 -8.26875973]
[126.02465057 -22.73328400]
[122.21793365 -38.08969879]
[133.04928589 -48.31373978]
[137.02139282 -62.77826309]
[140.66947937 -77.32788086]
[143.99172974 -91.95534515]
[147.31399536 -106.58280182]
[133.21138000 -111.75430298]
[119.88587952 -118.68679810]
[107.55632019 -127.26644897]
[96.42517090 -137.35237122]
[86.67520142 -148.77893066]
[78.46652985 -161.35852051]
[71.93393707 -174.88455200]
[67.18470001 -189.13493347]
[64.29680634 -203.87564087]
[63.31768036 -218.86462402]
[64.26338959 -233.85574341]
[67.11841583 -248.60285950]
[71.83587646 -262.86376953]
[78.33829498 -276.40432739]
[86.51890564 -289.00219727]
[96.24337769 -300.45046997]
[107.35201263 -310.56118774]
[119.66241455 -319.16830444]
[132.97242737 -326.13046265]
[147.06347656 -331.33340454]
[161.70419312 -334.69161987]
[176.65415955 -336.15002441]
[191.66787720 -335.68463135]
[206.49880981 -333.30310059]
[220.90342712 -329.04449463]
[234.64518738 -322.97882080]
[247.49842834 -315.20562744]
[259.25210571 -305.85256958]
[269.71319580 -295.07324219]
[278.70993042 -283.04464722]
[286.09454346 -269.96429443]
[291.74584961 -256.04699707]
[295.57095337 -241.52128601]
[297.50711060 -226.62565613]
[297.52252197 -211.60473633]
[295.61691284 -196.70516968]
[291.82156372 -182.17163086]
[286.19882202 -168.24276733]
[278.84103394 -155.14730835]
[269.86898804 -143.10029602]
[259.43002319 -132.29954529]
[247.69554138 -122.92240906]
[234.85826111 -115.12287903]
[221.12898254 -109.02902985]
[206.73312378 -104.74092865]
[191.90710449 -102.32898712]
[176.89437866 -101.83280945]
[161.94145203 -103.26054382]
[158.61920166 -88.63308716]
[155.29693604 -74.00562286]
[156.85655212 -70.84335327]
[156.96195984 -66.76856232]
[155.20098877 -62.47295380]
[151.48591614 -58.80616760]
[147.51380920 -44.34164429]
[151.60464478 -30.01982880]
[140.48918152 -18.76118660]
[136.51707458 -4.29666328]
[132.54498291 10.16786098]
[128.57289124 24.63238525]
[124.60079193 39.09690857]
[120.62870026 53.56143188]
[116.65660095 68.02595520]
[120.74742889 82.34777069]
[109.63196564 93.60641479]
[121.06837463 83.90030670]
[135.68501282 80.53074646]
[150.21647644 84.25049591]
[161.41641235 94.22855377]
[166.78269958 108.23580170]
[165.11651611 123.14297485]
[156.79010010 135.61978149]
[143.66357422 142.87886047]
[128.66944885 143.29853821]
[115.15744019 136.78501892]
[106.14617920 124.79347992]
[103.64879608 110.00281525]
[97.37143707 123.62613678]
[91.09407806 137.24945068]
[84.81671143 150.87277222]
[86.06864929 166.64436340]
[73.71522522 174.96554565]
[67.43786621 188.58886719]
[61.16050339 202.21218872]
[71.41468048 213.39822388]
[76.59101868 227.61962891]
[75.92998505 242.69865417]
[69.56341553 256.33883667]
[58.48970413 266.47479248]
[44.41733170 271.58496094]
[29.50133514 270.91986084]
[23.22397423 284.54318237]
[35.55122757 275.99688721]
[50.19416809 272.74353027]
[64.98059845 275.26571655]
[77.71704865 283.18930054]
[86.51413727 295.33883667]
[90.06686401 309.91201782]
[87.84820557 324.74703979]
[80.18729401 337.64318848]
[68.22057343 346.68737793]
[53.72323227 350.53799438]
[38.84587479 348.62377930]
[25.79545975 341.22872925]
[16.50794220 329.44985962]
[12.36106968 315.03448486]
[13.96943951 300.12283325]
[5.00874329 312.15222168]
[-3.95195270 324.18157959]
[-12.91264915 336.21096802]
[-21.87334442 348.24035645]
[-30.83404160 360.26971436]
[-39.79473495 372.29910278]
[-48.75543213 384.32849121]
[-57.71612930 396.35784912]
[-46.71464157 406.57620239]
[-36.88246155 417.92413330]
[-28.33487129 430.26858521]
[-21.17208290 443.46487427]
[-15.47807789 457.35824585]
[-11.31961346 471.78579712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 204]
[51 203]
[52 202]
[53 201]
[54 200]
[55 199]
[56 198]
[57 197]
[58 196]
[59 181]
[60 180]
[67 173]
[68 172]
[69 171]
[71 169]
[72 168]
[73 167]
[74 166]
[75 154]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[85 144]
[86 143]
[87 139]
[88 138]
[89 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
