%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[172.05194092 625.41265869]
[164.65936279 612.34875488]
[158.48539734 598.66674805]
[153.58119202 584.47998047]
[149.98739624 569.90606689]
[147.73377991 555.06567383]
[146.83901978 540.08190918]
[147.31053162 525.07879639]
[149.14440918 510.18072510]
[152.32543945 495.51116943]
[156.82730103 481.19165039]
[162.61265564 467.34085083]
[169.63357544 454.07351685]
[177.83189392 441.49960327]
[187.13964844 429.72332764]
[197.47972107 418.84225464]
[208.76643372 408.94653320]
[220.90626526 400.11816406]
[233.79861450 392.43032837]
[227.31912231 378.90200806]
[220.83961487 365.37365723]
[214.36012268 351.84530640]
[201.88418579 343.70895386]
[202.90115356 327.92047119]
[196.42166138 314.39212036]
[189.94216919 300.86376953]
[183.46267700 287.33544922]
[176.98318481 273.80709839]
[170.20318604 260.42681885]
[163.12608337 247.20129395]
[156.04898071 233.97576904]
[148.97186279 220.75024414]
[141.89476013 207.52470398]
[129.06796265 199.95356750]
[129.37893677 184.13540649]
[122.30182648 170.90988159]
[115.22471619 157.68435669]
[108.14761353 144.45883179]
[106.92793274 159.40916443]
[99.41713715 172.39331055]
[87.06544495 180.90422058]
[72.25778198 183.29859924]
[57.85326385 179.11410522]
[46.63319016 169.15872192]
[40.76396942 155.35464478]
[41.37886429 140.36724854]
[48.35914230 127.09037018]
[60.35702896 118.08754730]
[75.05591583 115.09709930]
[89.61767578 118.69642639]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[68.27470398 51.39863968]
[71.72195435 36.90844345]
[67.84685516 33.41120148]
[65.89582062 29.19850922]
[65.81919098 25.12307358]
[67.23603821 21.89431572]
[63.26394272 7.42979240]
[59.29184723 -7.03473139]
[55.31974792 -21.49925613]
[51.34765244 -35.96377945]
[46.47210693 -21.77825737]
[35.62623596 -11.41644764]
[21.23303604 -7.19320774]
[6.50798178 -10.05201912]
[-5.25930929 -19.35421562]
[-11.43999481 -33.02166367]
[-10.65329456 -48.00101852]
[-3.07495856 -60.94585800]
[9.60199356 -68.96426392]
[24.54549789 -70.26491547]
[38.41713715 -64.55723572]
[48.11796188 -53.11631393]
[46.55743790 -68.03491974]
[44.99691391 -82.95352173]
[43.43639374 -97.87213135]
[41.87586975 -112.79073334]
[40.31534576 -127.70933533]
[38.75482559 -142.62794495]
[37.19430161 -157.54655457]
[35.63377762 -172.46514893]
[34.07325363 -187.38375854]
[32.51273346 -202.30236816]
[30.95220947 -217.22096252]
[29.39168549 -232.13957214]
[19.12935448 -221.19952393]
[4.14204979 -220.58250427]
[-6.98481846 -230.64196777]
[-7.87727547 -245.61540222]
[1.97591865 -256.92532349]
[16.93040657 -258.09292603]
[28.41913795 -248.45018005]
[28.19581032 -263.44851685]
[14.17628765 -269.39602661]
[3.79263711 -280.53604126]
[-1.15611279 -294.93844604]
[0.18743917 -310.10797119]
[7.59051466 -323.41641235]
[19.77048492 -332.55798340]
[34.61709976 -335.94885254]
[49.55809021 -333.00152588]
[62.00483704 -324.22665405]
[69.80087280 -311.14453125]
[71.59548187 -296.02172852]
[67.07774353 -281.47836304]
[57.03037262 -270.03411865]
[43.19414520 -263.67184448]
[43.41747284 -248.67350769]
[44.31029129 -233.70008850]
[45.87081528 -218.78149414]
[47.43133545 -203.86288452]
[48.99185944 -188.94427490]
[50.55238342 -174.02568054]
[52.11290359 -159.10707092]
[53.67342758 -144.18846130]
[55.23395157 -129.26986694]
[56.79447556 -114.35125732]
[58.35499573 -99.43265533]
[59.91551971 -84.51404572]
[61.47604370 -69.59544373]
[63.03656769 -54.67683792]
[65.81217957 -39.93587494]
[69.78427124 -25.47135162]
[73.75637054 -11.00682735]
[77.72846985 3.45769644]
[81.70056152 17.92222023]
[85.99468231 32.29443359]
[97.27176666 42.02463150]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[121.37313843 137.38172913]
[128.45024109 150.60725403]
[135.52735901 163.83277893]
[142.60446167 177.05830383]
[155.93746948 185.57543945]
[155.12028503 200.44760132]
[162.19740295 213.67312622]
[169.27450562 226.89866638]
[176.35160828 240.12419128]
[183.42871094 253.34971619]
[187.86364746 256.10260010]
[190.53230286 259.90148926]
[191.33200073 263.89843750]
[190.51152039 267.32760620]
[196.99101257 280.85595703]
[203.47052002 294.38427734]
[209.95001221 307.91262817]
[216.42950439 321.44097900]
[229.36891174 330.54495239]
[227.88847351 345.36581421]
[234.36796570 358.89416504]
[240.84745789 372.42248535]
[247.32696533 385.95083618]
[261.39816284 380.72430420]
[275.88632202 376.79898071]
[290.67141724 374.20742798]
[305.63092041 372.97109985]
[320.64086914 373.10025024]
[335.57687378 374.59381104]
[350.31518555 377.43939209]
[364.73367310 381.61343384]
[378.71286011 387.08132935]
[392.13687134 393.79779053]
[404.89453125 401.70712280]
[416.88006592 410.74383545]
[427.99420166 420.83300781]
[438.14480591 431.89105225]
[447.24777222 443.82632446]
[455.22769165 456.53994751]
[462.01843262 469.92657471]
[467.56372070 483.87521362]
[471.81759644 498.27035522]
[474.74478149 512.99267578]
[476.32110596 527.92016602]
[476.53341675 542.92919922]
[475.38000488 557.89532471]
[472.87042236 572.69451904]
[469.02545166 587.20422363]
[463.87695312 601.30419922]
[457.46759033 614.87750244]
[449.85049438 627.81176758]
[441.08877563 639.99975586]
[431.25503540 651.34051514]
[420.43075562 661.74005127]
[408.70562744 671.11218262]
[396.17681885 679.37921143]
[382.94815063 686.47271729]
[369.12924194 692.33386230]
[354.83459473 696.91406250]
[340.18267822 700.17541504]
[325.29489136 702.09088135]
[310.29458618 702.64459229]
[295.30609131 701.83190918]
[280.45361328 699.65960693]
[265.86019897 696.14569092]
[251.64678955 691.31927490]
[237.93118286 685.22033691]
[224.82699585 677.89941406]
[212.44284058 669.41723633]
[200.88133240 659.84399414]
[190.23826599 649.25909424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 162]
[20 161]
[21 160]
[22 159]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[35 143]
[36 142]
[37 141]
[38 140]
[51 139]
[52 138]
[54 136]
[55 135]
[56 134]
[58 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
