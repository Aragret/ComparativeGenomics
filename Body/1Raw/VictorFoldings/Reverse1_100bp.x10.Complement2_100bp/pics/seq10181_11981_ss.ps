%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[82.11605835 501.32131958]
[71.14193726 490.99343872]
[62.84590149 478.41281128]
[57.67535400 464.25787354]
[55.90913010 449.29199219]
[57.64247894 434.32229614]
[62.78192902 420.15603638]
[71.05030823 407.55718994]
[82.00172424 397.20523071]
[95.04557037 389.65838623]
[109.47840881 385.32366943]
[108.58559418 370.35025024]
[107.69277954 355.37686157]
[106.79996490 340.40344238]
[105.90715027 325.43005371]
[105.01433563 310.45663452]
[93.73827362 300.79299927]
[92.61952972 285.62054443]
[102.83211517 273.85870361]
[101.93930054 258.88528442]
[101.04648590 243.91189575]
[100.15367126 228.93849182]
[99.26084900 213.96508789]
[85.12442017 209.15982056]
[73.87423706 199.28161621]
[67.24520874 185.81236267]
[66.27542877 170.79081726]
[71.14375305 156.50399780]
[81.13780975 145.13905334]
[94.75803375 138.44837952]
[93.86521912 123.47497559]
[92.97240448 108.50157166]
[81.21533203 117.81668091]
[66.56837463 114.58149719]
[59.82870865 101.18086243]
[65.96457672 87.49323273]
[80.45283508 83.60861969]
[92.61249542 92.38916779]
[92.83582306 77.39083099]
[93.05915070 62.39249039]
[93.28247833 47.39415359]
[93.50580597 32.39581680]
[93.72913361 17.39748001]
[86.62220001 30.60700417]
[75.97966003 41.17754364]
[62.72219849 48.19464493]
[47.99671936 51.05125809]
[33.07712173 49.50025558]
[19.25410271 43.67581558]
[7.72348833 34.08181000]
[-0.51720548 21.54821587]
[-4.75507641 7.15931511]
[-4.62350702 -7.84010792]
[-0.13387845 -22.15245438]
[8.32541084 -34.53956223]
[20.02254868 -43.92982101]
[33.94561386 -49.51088333]
[48.89012146 -50.79992676]
[63.56322479 -47.68544388]
[76.69555664 -40.43685913]
[87.15103149 -29.68125343]
[94.02514648 -16.34909248]
[96.72311401 -1.59725821]
[101.12410736 -15.93710518]
[105.52510834 -30.27695274]
[109.92610168 -44.61679840]
[114.32710266 -58.95664597]
[118.72810364 -73.29649353]
[105.81344604 -81.06163025]
[95.13909149 -91.68568420]
[87.32244873 -104.54800415]
[82.81418610 -118.89867401]
[81.87221527 -133.90220642]
[84.54695892 -148.68620300]
[90.67865753 -162.39205933]
[99.90693665 -174.22485352]
[111.69194031 -183.49942017]
[125.34593201 -189.68005371]
[140.07344055 -192.41146851]
[155.01757812 -191.53912354]
[159.41857910 -205.87896729]
[163.81958008 -220.21881104]
[168.22058105 -234.55867004]
[172.62156677 -248.89851379]
[177.02256775 -263.23834229]
[181.42356873 -277.57821655]
[167.60922241 -283.45883179]
[154.48526001 -290.75122070]
[142.19546509 -299.37554932]
[130.87451172 -309.23727417]
[120.64640808 -320.22833252]
[111.62323761 -332.22833252]
[103.90386200 -345.10580444]
[97.57286072 -358.71963501]
[92.69959259 -372.92065430]
[89.33745575 -387.55325317]
[87.52328491 -402.45718384]
[87.27696228 -417.46908569]
[88.60118103 -432.42446899]
[91.48143768 -447.15954590]
[95.88616943 -461.51278687]
[101.76712036 -475.32699585]
[109.05985260 -488.45077515]
[117.68445587 -500.74035645]
[127.54645538 -512.06109619]
[138.53778076 -522.28894043]
[150.53799438 -531.31176758]
[163.41564941 -539.03088379]
[177.02961731 -545.36151123]
[191.23075867 -550.23443604]
[205.86346436 -553.59625244]
[220.76742554 -555.41003418]
[235.77932739 -555.65600586]
[250.73469543 -554.33142090]
[265.46966553 -551.45080566]
[279.82284546 -547.04571533]
[293.63690186 -541.16442871]
[306.76049805 -533.87139893]
[319.04986572 -525.24645996]
[330.37036133 -515.38421631]
[340.59793091 -504.39263916]
[349.62051392 -492.39218140]
[357.33926392 -479.51437378]
[363.66958618 -465.90023804]
[368.54217529 -451.69897461]
[371.90359497 -437.06619263]
[373.71704102 -422.16220093]
[373.96264648 -407.15026855]
[372.63769531 -392.19494629]
[369.75671387 -377.46002197]
[365.35128784 -363.10699463]
[359.46966553 -349.29306030]
[352.17630005 -336.16964722]
[343.55108643 -323.88046265]
[333.68856812 -312.56021118]
[322.69674683 -302.33291626]
[310.69607544 -293.31063843]
[297.81805420 -285.59219360]
[284.20376587 -279.26217651]
[270.00238037 -274.38995361]
[255.36952209 -271.02886963]
[240.46548462 -269.21578979]
[225.45356750 -268.97058105]
[210.49826050 -270.29586792]
[195.76341248 -273.17721558]
[191.36241150 -258.83737183]
[186.96142578 -244.49751282]
[182.56042480 -230.15766907]
[178.15942383 -215.81781006]
[173.75842285 -201.47796631]
[169.35742188 -187.13812256]
[182.21804810 -179.47698975]
[192.87771606 -168.95408630]
[200.71376038 -156.17800903]
[205.26696777 -141.88912964]
[206.26855469 -126.91672516]
[203.65594482 -112.13083649]
[197.57673645 -98.39169312]
[188.38034058 -86.49969482]
[176.59788513 -77.14875793]
[162.91157532 -70.88584137]
[148.11517334 -68.07894135]
[133.06794739 -68.89549255]
[128.66694641 -54.55564880]
[124.26595306 -40.21580124]
[119.86495209 -25.87595367]
[115.46395874 -11.53610706]
[111.06295776 2.80373979]
[108.72747040 17.62080765]
[108.50414276 32.61914444]
[108.28081512 47.61748123]
[108.05748749 62.61582184]
[107.83415985 77.61415863]
[107.61083221 92.61249542]
[107.94580841 107.60875702]
[108.83862305 122.58216095]
[109.73143768 137.55557251]
[124.05022430 142.58032227]
[135.32397461 152.67713928]
[141.85551453 166.28421021]
[142.67764282 181.31457520]
[137.69613647 195.47612000]
[127.69950867 206.62120056]
[114.23426056 213.07226562]
[115.12707520 228.04566956]
[116.01988983 243.01907349]
[116.91270447 257.99249268]
[117.80551910 272.96588135]
[129.34341431 283.43081665]
[130.03555298 298.62869263]
[119.98773956 309.56381226]
[120.88055420 324.53723145]
[121.77336884 339.51065063]
[122.66618347 354.48403931]
[123.55899811 369.45745850]
[124.45182037 384.43084717]
[139.29750061 387.01977539]
[153.14572144 392.96313477]
[165.24966431 401.94039917]
[174.95660400 413.46740723]
[181.74302673 426.92257690]
[185.24295044 441.58023071]
[185.26765442 456.64993286]
[181.81579590 471.31900024]
[175.07351685 484.79632568]
[165.40441895 496.35510254]
[153.32995605 505.37200928]
[139.50129700 511.36071777]
[124.66418457 513.99829102]
[109.61877441 513.14251709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[19 188]
[20 187]
[21 186]
[22 185]
[23 184]
[30 177]
[31 176]
[32 175]
[38 174]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[63 168]
[64 167]
[65 166]
[66 165]
[67 164]
[68 163]
[80 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
