%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[123.08354950 639.73760986]
[124.02624512 624.70678711]
[128.17851257 610.23016357]
[135.34616089 596.98486328]
[145.19392395 585.59027100]
[157.26121521 576.57946777]
[170.98361206 570.37390137]
[167.87950134 555.69854736]
[164.77539062 541.02325439]
[161.67127991 526.34796143]
[158.56718445 511.67266846]
[155.35389709 497.02087402]
[152.03164673 482.39343262]
[141.96659851 475.68362427]
[139.07905579 463.52441406]
[145.44764709 452.30819702]
[142.34353638 437.63290405]
[139.23942566 422.95758057]
[136.13531494 408.28228760]
[125.93170929 397.43167114]
[130.64570618 382.32907104]
[127.54159546 367.65377808]
[124.09847260 364.34408569]
[122.69791412 358.83633423]
[124.57041168 352.49557495]
[121.90460968 337.73434448]
[119.23881531 322.97311401]
[109.36280060 311.82351685]
[114.52436829 296.86798096]
[111.85857391 282.10675049]
[109.19277954 267.34552002]
[106.52697754 252.58432007]
[91.52199554 245.92639160]
[83.36042786 231.49203491]
[85.43120575 214.87237549]
[97.11479950 202.64169312]
[94.22953033 187.92179871]
[88.98217010 201.97402954]
[78.53120422 212.73402405]
[64.63779449 218.38850403]
[49.64323425 217.98461914]
[36.07436371 211.59042358]
[26.21777916 200.28344727]
[21.73448563 185.96911621]
[23.37999916 171.05964661]
[30.87701988 158.06755066]
[42.96216965 149.18222046]
[57.59888840 145.90098572]
[72.32062531 148.77679443]
[84.64652252 157.32502747]
[92.50000000 170.10671997]
[92.50000000 155.10671997]
[92.50000000 140.10671997]
[92.50000000 125.10671997]
[92.50000000 110.10671997]
[92.16502380 95.11045837]
[83.81922913 81.66954041]
[90.98051453 68.60947418]
[90.31072998 53.62443542]
[89.64093781 38.63939667]
[79.37345886 23.35344505]
[88.06203461 8.10629272]
[87.16921234 -6.86711264]
[86.27639771 -21.84051895]
[85.27214050 -36.80686188]
[84.15649414 -51.76531601]
[83.04084015 -66.72377014]
[81.92519379 -81.68222046]
[73.50901031 -69.26578522]
[59.75822449 -63.27280045]
[44.93366623 -65.56025696]
[33.62888336 -75.41935730]
[29.34679031 -89.79515839]
[33.41423798 -104.23316193]
[44.57088089 -114.25959015]
[59.35971832 -116.76764679]
[73.19826508 -110.98018646]
[81.79857635 -98.69026947]
[82.69139099 -113.66368103]
[83.47270966 -128.64331055]
[84.14249420 -143.62835693]
[84.81227875 -158.61338806]
[82.06918335 -167.32621765]
[85.60523987 -173.81605530]
[86.49805450 -188.78945923]
[87.39086914 -203.76287842]
[88.28368378 -218.73628235]
[81.38150024 -232.97251892]
[89.86262512 -245.21669006]
[75.99064636 -251.28247070]
[65.05149078 -261.70870972]
[58.35212708 -275.22311401]
[56.68383026 -290.18597412]
[60.22876740 -304.78921509]
[68.54033661 -317.27490234]
[80.59931946 -326.14675903]
[94.93882751 -330.34960938]
[95.83164215 -345.32299805]
[96.72445679 -360.29641724]
[97.61727142 -375.26980591]
[83.92932892 -381.88104248]
[73.81705475 -393.23052979]
[68.82251740 -407.58749390]
[69.70732880 -422.76266479]
[76.33657074 -436.44189453]
[87.69933319 -446.53924561]
[102.06287384 -451.51489258]
[117.23686218 -450.61010742]
[130.90736389 -443.96289062]
[140.98974609 -432.58685303]
[145.94650269 -418.21676636]
[145.02175903 -403.04400635]
[138.35655212 -389.38223267]
[126.96726227 -379.31484985]
[112.59068298 -374.37698364]
[111.69786072 -359.40359497]
[110.80504608 -344.43017578]
[109.91223145 -329.45678711]
[123.65071106 -323.57974243]
[134.56999207 -313.33776855]
[141.33898926 -299.95288086]
[143.12348938 -285.03182983]
[139.68896484 -270.37326050]
[131.43113708 -257.75073242]
[119.33052063 -248.69824219]
[104.83602905 -244.32386780]
[111.80207062 -231.15863037]
[103.25708771 -217.84346008]
[102.36427307 -202.87005615]
[101.47145844 -187.89665222]
[100.57864380 -172.92324829]
[99.79731750 -157.94360352]
[99.12753296 -142.95857239]
[98.45774841 -127.97353363]
[101.29944611 -121.15102386]
[97.66479492 -112.77085876]
[96.77198029 -97.79745483]
[96.88364410 -82.79787445]
[97.99929810 -67.83941650]
[99.11494446 -52.88096619]
[100.23059082 -37.92251205]
[103.86287689 -31.48602867]
[101.24980164 -22.73333359]
[102.14262390 -7.75992870]
[103.03543854 7.21347713]
[111.87177277 15.47457790]
[112.73813629 27.94186211]
[104.62597656 37.96961212]
[105.29576874 52.95465088]
[105.96555328 67.93968964]
[114.26343536 80.30877686]
[107.15006256 94.44067383]
[109.59850311 97.42019653]
[110.72171783 101.46447754]
[110.07363892 105.95747375]
[107.50000000 110.10671997]
[107.50000000 125.10671997]
[107.50000000 140.10671997]
[107.50000000 155.10671997]
[107.50000000 170.10671997]
[108.94941711 185.03652954]
[111.83469391 199.75642395]
[124.73343658 204.61575317]
[133.47737122 215.13059998]
[135.86482239 228.48611450]
[131.37744141 241.17500305]
[121.28820038 249.91851807]
[123.95399475 264.67974854]
[126.61978912 279.44094849]
[129.28558350 294.20217896]
[139.35227966 306.40759277]
[134.00003052 320.30734253]
[136.66583252 335.06854248]
[139.33161926 349.82977295]
[142.21690369 364.54965210]
[145.32101440 379.22494507]
[155.74664307 391.12524414]
[150.81060791 405.17819214]
[153.91471863 419.85348511]
[157.01882935 434.52877808]
[160.12294006 449.20407104]
[172.74537659 462.61138916]
[166.65910339 479.07116699]
[169.98136902 493.69860840]
[174.93374634 501.37402344]
[173.24247742 508.56854248]
[176.34658813 523.24383545]
[179.45069885 537.91918945]
[182.55480957 552.59448242]
[185.65892029 567.26977539]
[200.71881104 567.38739014]
[215.40122986 570.74011230]
[229.01943970 577.17114258]
[240.93650818 586.37969971]
[250.59506226 597.93505859]
[257.54333496 611.29675293]
[261.45632935 625.83990479]
[262.15106201 640.88421631]
[259.59503174 655.72607422]
[253.90776062 669.67126465]
[245.35527039 682.06762695]
[234.33760071 692.33526611]
[221.37002563 699.99401855]
[207.05909729 704.68560791]
[192.07412720 706.19067383]
[177.11602783 704.43878174]
[162.88439941 699.51184082]
[150.04487610 691.64031982]
[139.19799805 681.19238281]
[130.85107422 668.65667725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 184]
[13 183]
[16 181]
[17 180]
[18 179]
[19 178]
[21 176]
[22 175]
[25 174]
[26 173]
[27 172]
[29 170]
[30 169]
[31 168]
[32 167]
[36 162]
[37 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 152]
[58 150]
[59 149]
[60 148]
[62 145]
[63 144]
[64 143]
[65 141]
[66 140]
[67 139]
[68 138]
[78 137]
[79 136]
[80 134]
[81 133]
[82 132]
[84 131]
[85 130]
[86 129]
[87 128]
[89 126]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
