%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[80.77186584 471.22186279]
[92.69889832 461.29583740]
[91.58324432 446.33740234]
[90.46759796 431.37893677]
[89.35195160 416.42050171]
[88.23629761 401.46203613]
[86.20263672 399.53268433]
[84.81068420 396.68154907]
[84.41535950 393.14895630]
[85.27811432 389.29925537]
[87.52663422 385.58468628]
[87.30330658 370.58633423]
[87.07997894 355.58801270]
[86.85665131 340.58966064]
[86.63332367 325.59133911]
[78.69069672 319.16265869]
[75.53137970 309.21444702]
[78.42865753 298.95840454]
[86.65830231 291.84634399]
[86.88162994 276.84799194]
[87.10495758 261.84967041]
[87.32828522 246.85133362]
[87.55161285 231.85299683]
[76.07122040 226.57864380]
[67.40644836 217.31999207]
[62.87031937 205.42834473]
[63.16972351 192.65768433]
[68.29550934 180.90603638]
[77.51858521 171.93330383]
[89.49344635 167.09777832]
[90.16323090 152.11274719]
[90.83301544 137.12770081]
[91.50279999 122.14266968]
[92.17258453 107.15763092]
[92.17258453 92.15763092]
[91.50279999 77.17259216]
[90.83301544 62.18754959]
[90.16323090 47.20251083]
[83.93477631 60.84825516]
[74.15778351 72.22412109]
[61.60330582 80.43296814]
[47.26144791 84.82740784]
[32.26326370 85.06087494]
[17.79157448 81.11495972]
[4.98767948 73.30084991]
[-5.13865423 62.23480606]
[-11.78882217 48.78953934]
[-14.43836403 34.02539444]
[-12.87832546 19.10673904]
[-7.23173809 5.21011925]
[2.05608487 -6.56852055]
[14.25266647 -15.30026627]
[28.39613533 -20.29649734]
[43.37107468 -21.16318893]
[57.99650192 -17.83199120]
[71.11899567 -10.56561470]
[81.70365906 0.06288163]
[88.91573334 13.21529198]
[92.18673706 27.85782051]
[95.94303894 13.33576107]
[91.90810394 -1.96227551]
[102.58603668 -12.34644699]
[106.34233856 -26.86850548]
[110.09864044 -41.39056396]
[106.06371307 -56.68860245]
[116.74164581 -67.07277679]
[120.49794769 -81.59483337]
[124.25424957 -96.11688995]
[128.01054382 -110.63895416]
[131.76684570 -125.16101074]
[135.52314758 -139.68307495]
[139.27944946 -154.20512390]
[143.03575134 -168.72718811]
[131.74511719 -158.85188293]
[117.18026733 -155.26507568]
[102.59503174 -158.76806641]
[91.24778748 -168.57826233]
[85.67353821 -182.50405884]
[87.11758423 -197.43438721]
[95.25732422 -210.03378296]
[108.27431488 -217.48750305]
[123.26053619 -218.13035583]
[136.86801147 -211.81875610]
[146.05682373 -199.96269226]
[148.77413940 -185.21086121]
[154.84797668 -198.92611694]
[160.92179871 -212.64138794]
[166.99563599 -226.35665894]
[173.06947327 -240.07192993]
[179.14331055 -253.78718567]
[185.21713257 -267.50247192]
[191.29096985 -281.21771240]
[197.36480713 -294.93298340]
[184.43209839 -302.56591797]
[172.47299194 -311.64865112]
[161.64920044 -322.05838013]
[152.10713196 -333.65429688]
[143.97581482 -346.27960205]
[137.36523438 -359.76354980]
[132.36476135 -373.92376709]
[129.04203796 -388.56875610]
[127.44200134 -403.50048828]
[127.58628845 -418.51699829]
[129.47294617 -433.41522217]
[133.07646179 -447.99368286]
[138.34811401 -462.05520630]
[145.21658325 -475.40960693]
[153.58898926 -487.87634277]
[163.35212708 -499.28677368]
[174.37393188 -509.48657227]
[186.50535583 -518.33782959]
[199.58235168 -525.72082520]
[213.42805481 -531.53576660]
[227.85520935 -535.70391846]
[242.66871643 -538.16900635]
[257.66824341 -538.89758301]
[272.65093994 -537.87988281]
[287.41415405 -535.12963867]
[301.75823975 -530.68408203]
[315.48925781 -524.60327148]
[328.42144775 -516.96948242]
[340.37994385 -507.88595581]
[351.20303345 -497.47552490]
[360.74435425 -485.87896729]
[368.87481689 -473.25311279]
[375.48449707 -459.76873779]
[380.48403931 -445.60818481]
[383.80578613 -430.96295166]
[385.40481567 -416.03112793]
[385.25952148 -401.01461792]
[383.37185669 -386.11651611]
[379.76736450 -371.53829956]
[374.49481201 -357.47714233]
[367.62542725 -344.12316895]
[359.25219727 -331.65701294]
[349.48831177 -320.24725342]
[338.46582031 -310.04815674]
[326.33380127 -301.19769287]
[313.25631714 -293.81558228]
[299.41021729 -288.00158691]
[284.98278809 -283.83438110]
[270.16909790 -281.37030029]
[255.16954041 -280.64270020]
[240.18692017 -281.66140747]
[225.42388916 -284.41262817]
[211.08007812 -288.85916138]
[205.00624084 -275.14389038]
[198.93240356 -261.42861938]
[192.85856628 -247.71336365]
[186.78474426 -233.99809265]
[180.71090698 -220.28282166]
[174.63706970 -206.56755066]
[168.56323242 -192.85229492]
[162.48939514 -179.13702393]
[157.55781555 -164.97088623]
[153.80151367 -150.44882202]
[150.04521179 -135.92677307]
[146.28890991 -121.40470886]
[142.53260803 -106.88265228]
[138.77630615 -92.36058807]
[135.02000427 -77.83853149]
[131.26370239 -63.31647110]
[135.56730652 -49.05715179]
[124.62069702 -37.63426590]
[120.86440277 -23.11220551]
[117.10810089 -8.59014606]
[121.41170502 5.66917562]
[110.46509552 17.09206200]
[106.70879364 31.61412048]
[105.14826965 46.53272629]
[105.81805420 61.51776505]
[106.48783875 76.50279999]
[107.15762329 91.48783875]
[118.05292511 81.17801666]
[133.05038452 81.45415497]
[143.55877686 92.15806580]
[143.55841064 107.15806580]
[133.04951477 117.86147308]
[118.05204010 118.13689423]
[107.15762329 107.82741547]
[106.48783875 122.81245422]
[105.81805420 137.79748535]
[105.14826965 152.78253174]
[104.47848511 167.76756287]
[119.50769806 176.87557983]
[127.81146240 192.26252747]
[127.18156433 209.64663696]
[117.88169098 224.24203491]
[102.54994965 232.07632446]
[102.32662201 247.07466125]
[102.10329437 262.07299805]
[101.87996674 277.07131958]
[101.65663910 292.06967163]
[112.25943756 309.21444702]
[101.63166046 325.36801147]
[101.85498810 340.36633301]
[102.07831573 355.36468506]
[102.30164337 370.36300659]
[102.52497101 385.36135864]
[103.19475555 400.34637451]
[104.31040192 415.30484009]
[105.42604828 430.26330566]
[106.54170227 445.22174072]
[107.65734863 460.18020630]
[120.92485809 468.22711182]
[126.89758301 482.54864502]
[123.27888489 497.63787842]
[111.46023560 507.69268799]
[95.98613739 508.84677124]
[82.80670166 500.65640259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[11 199]
[12 198]
[13 197]
[14 196]
[15 195]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 173]
[36 172]
[37 171]
[38 170]
[59 169]
[60 168]
[62 166]
[63 165]
[64 164]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[73 155]
[85 154]
[86 153]
[87 152]
[88 151]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
