%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[88.35476685 681.42272949]
[74.33535767 686.79144287]
[59.85722351 690.76013184]
[45.05980301 693.29058838]
[30.08560944 694.35845947]
[15.07885361 693.95343018]
[0.18406224 692.07940674]
[-14.45531559 688.75439453]
[-28.69829178 684.01055908]
[-42.40769577 677.89343262]
[-55.45149231 670.46197510]
[-67.70406342 661.78778076]
[-79.04740143 651.95440674]
[-89.37226105 641.05651855]
[-98.57921600 629.19909668]
[-106.57958221 616.49633789]
[-113.29632568 603.07049561]
[-118.66474152 589.05096436]
[-122.63314056 574.57275391]
[-125.16329956 559.77532959]
[-126.23085022 544.80108643]
[-125.82550812 529.79437256]
[-123.95117950 514.89959717]
[-120.62592316 500.26028442]
[-115.88175201 486.01739502]
[-109.76436615 472.30810547]
[-102.33267212 459.26446533]
[-93.65825653 447.01208496]
[-83.82464600 435.66891479]
[-72.92654419 425.34426880]
[-61.06892395 416.13757324]
[-48.36597443 408.13745117]
[-34.94003677 401.42098999]
[-20.92041206 396.05285645]
[-6.44212151 392.08474731]
[8.35539818 389.55487061]
[23.32963562 388.48760986]
[38.33637619 388.89324951]
[53.23109055 390.76788330]
[56.55335236 376.14044189]
[59.87561035 361.51296997]
[63.19787216 346.88549805]
[66.52012634 332.25805664]
[58.38972855 319.83096313]
[61.55059814 304.94931030]
[74.64038086 296.50567627]
[77.96264648 281.87820435]
[81.28490448 267.25073242]
[83.39952850 252.40054321]
[84.29234314 237.42713928]
[77.32630157 224.26190186]
[85.87128448 210.94673157]
[86.76409912 195.97332764]
[87.65691376 180.99992371]
[88.54972839 166.02651978]
[89.44255066 151.05311584]
[74.20485687 145.30441284]
[61.48448181 135.13452148]
[52.52279282 121.53588867]
[48.19434738 105.83559418]
[48.92155838 89.56580353]
[54.63345337 74.31428528]
[64.77261353 61.56940079]
[78.34957886 52.57491302]
[94.03938293 48.20858383]
[94.48598480 33.21523285]
[94.93259430 18.22188568]
[95.37919617 3.22853470]
[88.05621338 -10.79588795]
[96.16902161 -23.28714943]
[96.61562347 -38.28049850]
[97.06223297 -53.27384949]
[97.50883484 -68.26719666]
[97.95544434 -83.26055145]
[98.40204620 -98.25389862]
[84.58865356 -104.53607941]
[74.26065826 -115.59842682]
[68.96911621 -129.73396301]
[69.49121857 -144.77772522]
[75.71627808 -158.43838501]
[86.66735840 -168.64715576]
[100.65445709 -173.87118530]
[101.10105896 -188.86453247]
[101.54766846 -203.85787964]
[85.38266754 -211.68453979]
[74.30391693 -225.75309753]
[70.50817871 -243.19902039]
[74.71526337 -260.49581909]
[86.03207397 -274.16781616]
[102.14170837 -281.48870850]
[101.91838074 -296.48706055]
[101.69505310 -311.48538208]
[101.47172546 -326.48373413]
[101.24839783 -341.48205566]
[101.02507019 -356.48040771]
[86.51153564 -360.70516968]
[73.88898468 -369.02157593]
[64.27980042 -380.69012451]
[58.53843689 -394.67327881]
[57.17540741 -409.72763062]
[60.31190491 -424.51455688]
[67.66904449 -437.71926880]
[78.59262848 -448.16754150]
[92.11133575 -454.93038940]
[107.02310181 -457.40640259]
[122.00197601 -455.37545776]
[135.71604919 -449.01812744]
[146.94587708 -438.89971924]
[154.69290161 -425.91992188]
[158.26826477 -411.23291016]
[157.35406494 -396.14465332]
[152.03157043 -381.99676514]
[142.77407837 -370.04730225]
[130.40472412 -361.35876465]
[116.02340698 -356.70373535]
[116.24674225 -341.70538330]
[116.47006989 -326.70706177]
[116.69339752 -311.70870972]
[116.91672516 -296.71038818]
[117.14005280 -281.71203613]
[128.72763062 -277.78952026]
[138.57270813 -270.48666382]
[145.71687317 -260.49581909]
[149.45893860 -248.77171326]
[149.42373657 -236.44050598]
[145.59963989 -224.69149780]
[138.34123230 -214.66239929]
[128.33634949 -207.32922363]
[116.54101562 -203.41128540]
[116.09441376 -188.41792297]
[115.64780426 -173.42457581]
[129.29916382 -167.37728882]
[139.62319946 -156.53479004]
[145.02412415 -142.52783203]
[144.64987183 -127.47966003]
[138.52635193 -113.68414307]
[127.55822754 -103.25614929]
[113.39540100 -97.80728912]
[112.94879150 -82.81394196]
[112.50218964 -67.82059479]
[112.05558014 -52.82724380]
[111.60897827 -37.83389282]
[111.16236877 -22.84054375]
[118.51730347 -9.88854504]
[110.37255096 3.67514086]
[109.92594147 18.66849136]
[109.47933960 33.66184235]
[109.03273010 48.65518951]
[122.02621460 52.74827576]
[133.51568604 60.06782913]
[142.71662903 70.11405182]
[149.00076294 82.20097351]
[151.93899536 95.50325012]
[151.33070374 109.11258698]
[147.21740723 122.09968567]
[139.87998962 133.57775879]
[129.81945801 142.76306152]
[117.72278595 149.02838135]
[104.41595459 151.94592285]
[103.52313995 166.91932678]
[102.63031769 181.89273071]
[101.73750305 196.86613464]
[100.84468842 211.83955383]
[107.74687195 226.07579041]
[99.26574707 238.31996155]
[98.37293243 253.29336548]
[107.55319977 241.43070984]
[121.15613556 235.10931396]
[136.14282227 235.74137878]
[149.16516113 243.18572998]
[157.31396484 255.77926636]
[158.76876831 270.70855713]
[153.20452881 284.63836670]
[141.86434937 294.45672607]
[127.28163910 297.97018433]
[112.71421051 294.39385986]
[101.41647339 284.52670288]
[95.91236115 270.57299805]
[92.59010315 285.20046997]
[89.26784515 299.82794189]
[97.42601013 313.09750366]
[93.84839630 327.88452148]
[81.14759064 335.58029175]
[77.82533264 350.20776367]
[74.50307465 364.83523560]
[71.18080902 379.46267700]
[67.85855103 394.09014893]
[82.10171509 398.83346558]
[95.81136322 404.95001221]
[108.85546112 412.38092041]
[121.10837555 421.05462646]
[132.45210266 430.88754272]
[142.77740479 441.78503418]
[151.98483276 453.64208984]
[159.98571777 466.34457397]
[166.70298767 479.77011108]
[172.07196045 493.78939819]
[176.04093933 508.26745605]
[178.57168579 523.06481934]
[179.63984680 538.03900146]
[179.23510742 553.04577637]
[177.36137390 567.94061279]
[174.03669739 582.58001709]
[169.29310608 596.82312012]
[163.17625427 610.53265381]
[155.74508667 623.57659912]
[147.07115173 635.82934570]
[137.23800659 647.17285156]
[126.34031677 657.49792480]
[114.48306274 666.70513916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 187]
[40 186]
[41 185]
[42 184]
[43 183]
[46 180]
[47 179]
[48 178]
[49 166]
[50 165]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[65 148]
[66 147]
[67 146]
[68 145]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 138]
[82 131]
[83 130]
[84 129]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
