%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[45.04973984 640.58703613]
[30.23996162 638.01470947]
[16.01496124 633.15716553]
[2.72504139 626.13397217]
[-9.30252075 617.11822510]
[-19.77153778 606.33184814]
[-28.42419815 594.04046631]
[-35.04742432 580.54675293]
[-39.47811127 566.18310547]
[-41.60715103 551.30310059]
[-41.38211441 536.27325439]
[-38.80854034 521.46374512]
[-33.94981003 507.23910522]
[-26.92556953 493.94976807]
[-17.90880013 481.92297363]
[-7.12154770 471.45483398]
[5.17054367 462.80319214]
[18.66477013 456.18109131]
[33.02882004 451.75158691]
[47.90897369 449.62374878]
[48.13230133 434.62542725]
[48.35562897 419.62707520]
[48.57895660 404.62875366]
[48.80228424 389.63040161]
[46.94886017 387.52734375]
[45.81682205 384.56335449]
[45.73823929 381.00961304]
[46.94100571 377.25222778]
[49.51195145 373.75305176]
[50.62760162 358.79458618]
[51.74325180 343.83615112]
[52.85889816 328.87768555]
[45.20547104 319.51010132]
[46.01251602 307.03884888]
[55.39166260 298.18478394]
[56.72989655 283.24459839]
[58.06813049 268.30441284]
[47.74009323 279.18243408]
[33.19617081 282.85317993]
[18.94296074 278.17922974]
[9.39697075 266.60882568]
[7.51613235 251.72720337]
[13.88324261 238.14561462]
[26.52538490 230.07243347]
[41.52524948 230.00923157]
[54.23497009 237.97560120]
[60.71634293 251.50331116]
[64.03860474 236.87585449]
[67.36086273 222.24839783]
[70.35563660 207.55039978]
[73.02143097 192.78916931]
[75.68722534 178.02795410]
[78.35301971 163.26673889]
[76.65376282 160.17726135]
[76.36650085 156.11123657]
[77.93391418 151.74128723]
[81.48155212 147.91227722]
[84.80381012 133.28480530]
[88.12607574 118.65734863]
[91.44833374 104.02989197]
[89.73028564 99.07386017]
[90.91131592 93.50802612]
[95.09340668 89.01947784]
[98.84970856 74.49741364]
[102.60601044 59.97535706]
[90.64253235 69.02384949]
[75.69472504 70.27410889]
[62.39433289 63.33872223]
[54.86262512 50.36670303]
[55.43338013 35.37756348]
[63.92974472 23.01585960]
[77.71903229 17.11199379]
[92.52847290 19.49534798]
[103.76921082 29.42741013]
[107.95817566 43.83088303]
[113.62096405 29.94085503]
[119.28374481 16.05082893]
[124.94653320 2.16080141]
[125.28842926 -6.96722794]
[130.79841614 -11.89285851]
[136.66737366 -25.69703484]
[142.53634644 -39.50121307]
[148.40530396 -53.30538940]
[148.88305664 -62.42731476]
[154.46577454 -67.27036285]
[160.53961182 -80.98563385]
[166.61343384 -94.70089722]
[172.68727112 -108.41616821]
[173.30079651 -117.52996826]
[178.95498657 -122.28936005]
[185.23236084 -135.91267395]
[191.40812683 -149.58235168]
[197.37968445 -163.34245300]
[203.24864197 -177.14662170]
[209.11761475 -190.95080566]
[214.98657227 -204.75498962]
[202.06748962 -212.42185974]
[190.28562927 -221.74232483]
[179.85122681 -232.55003357]
[170.95050049 -244.65213013]
[163.74230957 -257.83261108]
[158.35528564 -271.85629272]
[154.88554382 -286.47286987]
[153.39503479 -301.42150879]
[153.91035461 -316.43542480]
[156.42230225 -331.24670410]
[160.88603210 -345.59097290]
[167.22190857 -359.21231079]
[175.31684875 -371.86755371]
[185.02639771 -383.33090210]
[196.17726135 -393.39773560]
[208.57044983 -401.88845825]
[221.98478699 -408.65151978]
[236.18089294 -413.56619263]
[250.90541077 -416.54483032]
[265.89556885 -417.53421021]
[280.88381958 -416.51672363]
[295.60272217 -413.51049805]
[309.78958130 -408.56921387]
[323.19122314 -401.78100586]
[335.56848145 -393.26708984]
[346.70043945 -383.17932129]
[356.38848877 -371.69781494]
[364.45968628 -359.02740479]
[370.77001953 -345.39422607]
[375.20684814 -331.04159546]
[377.69100952 -316.22564697]
[378.17819214 -301.21078491]
[376.65963745 -286.26498413]
[373.16253662 -271.65493774]
[367.74920654 -257.64138794]
[360.51632690 -244.47442627]
[351.59292603 -232.38903809]
[341.13827515 -221.60090637]
[329.33895874 -212.30255127]
[316.40551758 -204.65991211]
[302.56881714 -198.80937195]
[288.07574463 -194.85536194]
[273.18496704 -192.86842346]
[258.16220093 -192.88403320]
[243.27557373 -194.90190125]
[228.79074097 -198.88601685]
[222.92178345 -185.08184814]
[217.05282593 -171.27766418]
[211.18386841 -157.47349548]
[211.45967102 -150.08798218]
[205.12338257 -143.50851440]
[205.28919983 -136.11972046]
[198.85566711 -129.63531494]
[192.57830811 -116.01200104]
[186.40254211 -102.34233093]
[180.32870483 -88.62706757]
[174.25486755 -74.91179657]
[168.18104553 -61.19653320]
[162.20947266 -47.43642807]
[156.34051514 -33.63225174]
[150.47155762 -19.82807541]
[144.60260010 -6.02389765]
[138.83656311 7.82358789]
[133.17376709 21.71361542]
[127.51098633 35.60364151]
[121.84819794 49.49366760]
[117.12806702 63.73165894]
[113.37176514 78.25371552]
[109.61546326 92.77577972]
[106.07579041 107.35214996]
[102.75353241 121.97961426]
[99.43127441 136.60707092]
[96.10901642 151.23452759]
[93.11424255 165.93254089]
[90.44844818 180.69375610]
[87.78264618 195.45497131]
[85.11685181 210.21618652]
[86.88351440 215.12800598]
[86.61616516 219.76286316]
[84.76091003 223.39233398]
[81.98831940 225.57066345]
[78.66606140 240.19812012]
[75.34380341 254.82557678]
[73.00831604 269.64263916]
[71.67008209 284.58282471]
[70.33184814 299.52301025]
[78.46506500 316.04367065]
[67.81735229 329.99334717]
[66.70170593 344.95178223]
[65.58605194 359.91024780]
[64.47040558 374.86871338]
[63.80062103 389.85372925]
[63.57729340 404.85208130]
[63.35396576 419.85040283]
[63.13063812 434.84875488]
[62.90731049 449.84707642]
[77.71751404 452.41699219]
[91.94331360 457.27221680]
[105.23439026 464.29315186]
[117.26344299 473.30694580]
[127.73423767 484.09161377]
[136.38893127 496.38156128]
[143.01437378 509.87414551]
[147.44743347 524.23712158]
[149.57893372 539.11669922]
[149.35636902 554.14660645]
[146.78524780 568.95660400]
[141.92886353 583.18200684]
[134.90681458 596.47247314]
[125.89202881 608.50079346]
[115.10650635 618.97070312]
[102.81584167 627.62438965]
[89.32270813 634.24871826]
[74.95938873 638.68060303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[29 187]
[30 186]
[31 185]
[32 184]
[35 182]
[36 181]
[37 180]
[47 179]
[48 178]
[49 177]
[50 173]
[51 172]
[52 171]
[53 170]
[57 169]
[58 168]
[59 167]
[60 166]
[63 165]
[64 164]
[65 163]
[75 162]
[76 161]
[77 160]
[78 159]
[80 158]
[81 157]
[82 156]
[83 155]
[85 154]
[86 153]
[87 152]
[88 151]
[90 150]
[91 149]
[92 147]
[93 145]
[94 144]
[95 143]
[96 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
