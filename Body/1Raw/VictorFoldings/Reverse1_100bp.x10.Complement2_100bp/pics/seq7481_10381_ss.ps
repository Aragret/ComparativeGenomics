%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[144.93395996 592.36376953]
[133.89703369 582.17724609]
[124.19561768 570.71154785]
[115.97676086 558.14056396]
[109.36507416 544.65478516]
[104.46077728 530.45874023]
[101.33823395 515.76763916]
[100.04476929 500.80410767]
[100.59999084 485.79507446]
[102.99549103 470.96804810]
[107.19494629 456.54776001]
[113.13469696 442.75286865]
[120.72470093 429.79248047]
[129.84988403 417.86309814]
[140.37193298 407.14553833]
[152.13131714 397.80227661]
[164.94976807 389.97494507]
[178.63296509 383.78225708]
[192.97348022 379.31802368]
[190.30769348 364.55682373]
[187.64189148 349.79559326]
[184.97610474 335.03436279]
[182.31030273 320.27316284]
[179.64450073 305.51193237]
[176.97871399 290.75073242]
[174.31291199 275.98950195]
[171.64712524 261.22830200]
[167.13949585 246.92160034]
[160.86213684 233.29829407]
[154.58477783 219.67497253]
[148.30740356 206.05165100]
[142.03004456 192.42834473]
[135.25006104 179.04806519]
[127.97682953 165.92936707]
[113.65991211 170.30499268]
[98.74614716 171.60874939]
[83.88716888 169.78367615]
[69.73221588 164.90951538]
[56.89976120 157.19924927]
[45.95050430 146.98974609]
[37.36285019 134.72711182]
[31.51202393 120.94712830]
[28.65367126 106.25189209]
[28.91267776 91.28349304]
[32.27772903 76.69594574]
[38.60179520 63.12662888]
[47.60855865 51.16843414]
[58.90447617 41.34385681]
[51.63124847 28.22516441]
[44.35802078 15.10647011]
[37.08478928 1.98777592]
[20.18319702 -2.52392650]
[11.93627834 -17.56730461]
[17.01898766 -33.59867477]
[9.55124664 -46.60762787]
[2.08350515 -59.61658096]
[-5.38423586 -72.62553406]
[-12.85197735 -85.63448334]
[-20.31971741 -98.64344025]
[-27.30610657 -104.52800751]
[-27.80014992 -111.90213013]
[-35.07337952 -125.02082825]
[-42.34660721 -138.13952637]
[-49.61983871 -151.25820923]
[-56.89306641 -164.37690735]
[-64.16629791 -177.49560547]
[-78.17478180 -172.06640625]
[-92.79207611 -168.59533691]
[-107.74588013 -167.14704895]
[-122.75760651 -167.74853516]
[-137.54760742 -170.38859558]
[-151.84033203 -175.01802063]
[-165.36953735 -181.55058289]
[-177.88316345 -189.86459351]
[-189.14810181 -199.80516052]
[-198.95449829 -211.18710327]
[-207.11965942 -223.79835510]
[-213.49147034 -237.40402222]
[-217.95121765 -251.75059509]
[-220.41584778 -266.57083130]
[-220.83941650 -281.58862305]
[-219.21405029 -296.52423096]
[-215.57003784 -311.09936523]
[-209.97523499 -325.04254150]
[-202.53388977 -338.09399414]
[-193.38462830 -350.01055908]
[-182.69789124 -360.57028198]
[-170.67277527 -369.57638550]
[-157.53329468 -376.86114502]
[-143.52421570 -382.28881836]
[-128.90655518 -385.75833130]
[-113.95259094 -387.20498657]
[-98.94092560 -386.60186768]
[-84.15121460 -383.96020508]
[-69.85899353 -379.32925415]
[-56.33049393 -372.79519653]
[-43.81776428 -364.47982788]
[-32.55389786 -354.53805542]
[-22.74873543 -343.15505981]
[-14.58494473 -330.54290771]
[-8.21460915 -316.93658447]
[-3.75640464 -302.58950806]
[-1.29338551 -287.76901245]
[-0.87143582 -272.75115967]
[-2.49841619 -257.81573486]
[-6.14401722 -243.24099731]
[-11.74032402 -229.29843140]
[-19.18307877 -216.24778748]
[-28.33362961 -204.33219910]
[-39.02150726 -193.77365112]
[-51.04760361 -184.76882935]
[-43.77437210 -171.65014648]
[-36.50114441 -158.53144836]
[-29.22791481 -145.41275024]
[-21.95468521 -132.29405212]
[-14.68145561 -119.17536163]
[-7.31076574 -106.11117554]
[0.15697522 -93.10222626]
[7.62471628 -80.09326935]
[15.09245777 -67.08432007]
[22.56019783 -54.07536697]
[30.02794075 -41.06641769]
[42.81439590 -39.47392273]
[52.49346542 -30.67632294]
[55.38074875 -17.71970177]
[50.20348358 -5.28545332]
[57.47671127 7.83324051]
[64.74993896 20.95193481]
[72.02317047 34.07062912]
[86.34008789 29.69500923]
[101.25385284 28.39125252]
[116.11283112 30.21632195]
[130.26779175 35.09047699]
[143.10023499 42.80074692]
[154.04949951 53.01024628]
[162.63714600 65.27288818]
[168.48797607 79.05287170]
[171.34632874 93.74810791]
[171.08732605 108.71650696]
[167.72227478 123.30405426]
[161.39820862 136.87336731]
[152.39144897 148.83155823]
[141.09552002 158.65614319]
[148.36875916 171.77484131]
[154.94851685 158.29496765]
[169.55595398 154.88575745]
[181.42300415 164.06034851]
[181.80172729 179.05555725]
[170.41293335 188.81750488]
[155.65336609 186.15098572]
[161.93072510 199.77429199]
[168.20808411 213.39761353]
[174.48544312 227.02091980]
[180.76280212 240.64424133]
[181.70401001 225.67379761]
[187.39421082 211.79498291]
[197.23294067 200.47245789]
[210.18186951 192.90112305]
[224.87448120 189.88000488]
[239.76022339 191.72790527]
[253.26817322 198.24983215]
[263.97277832 208.75749207]
[270.74441528 222.14201355]
[272.86837769 236.99087524]
[270.12057495 251.73704529]
[262.79098511 264.82434082]
[251.65310669 274.87158203]
[237.88233948 280.81851196]
[222.93194580 282.03753662]
[208.37969971 278.39996338]
[195.76130676 270.28970337]
[186.40834045 258.56250000]
[189.07412720 273.32369995]
[191.73992920 288.08493042]
[194.40573120 302.84616089]
[197.07151794 317.60736084]
[199.73731995 332.36859131]
[202.40310669 347.12979126]
[205.06890869 361.89102173]
[207.73469543 376.65222168]
[222.73085022 375.81842041]
[237.71578979 376.83380127]
[252.46237183 379.68301392]
[266.74703979 384.32287598]
[280.35321045 390.68301392]
[293.07464600 398.66702271]
[304.71850586 408.15386963]
[315.10824585 418.99975586]
[324.08636475 431.04022217]
[331.51675415 444.09277344]
[337.28680420 457.95950317]
[341.30899048 472.43020630]
[343.52236938 487.28552246]
[343.89337158 502.30026245]
[342.41641235 517.24676514]
[339.11383057 531.89849854]
[334.03570557 546.03326416]
[327.25903320 559.43688965]
[318.88653564 571.90606689]
[309.04516602 583.25183105]
[297.88406372 593.30218506]
[285.57247925 601.90478516]
[272.29702759 608.92919922]
[258.25897217 614.26885986]
[243.67111206 617.84295654]
[228.75460815 619.59722900]
[213.73558044 619.50506592]
[198.84172058 617.56787109]
[184.29881287 613.81506348]
[170.32733154 608.30352783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[27 172]
[28 154]
[29 153]
[30 152]
[31 151]
[32 150]
[33 144]
[34 143]
[48 129]
[49 128]
[50 127]
[51 126]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[61 116]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
