%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[32.99656296 541.96173096]
[29.28622055 556.51477051]
[23.84871674 570.51446533]
[16.76334763 583.75665283]
[8.13343525 596.04815674]
[-1.91516876 607.20983887]
[-13.23592663 617.07885742]
[-25.66374779 625.51135254]
[-39.01739883 632.38427734]
[-53.10214233 637.59747314]
[-67.71258545 641.07489014]
[-82.63565826 642.76580811]
[-97.65373993 642.64556885]
[-112.54783630 640.71594238]
[-127.10072327 637.00506592]
[-141.10020447 631.56701660]
[-154.34210205 624.48114014]
[-166.63331604 615.85076904]
[-177.79461670 605.80175781]
[-187.66322327 594.48065186]
[-196.09523010 582.05249023]
[-202.96768188 568.69860840]
[-208.18034363 554.61364746]
[-211.65719604 540.00311279]
[-213.34756470 525.07995605]
[-213.22676086 510.06188965]
[-211.29658508 495.16784668]
[-207.58514404 480.61511230]
[-202.14660645 466.61584473]
[-195.06024170 453.37420654]
[-186.42941284 441.08331299]
[-176.37997437 429.92239380]
[-165.05847168 420.05419922]
[-152.63002014 411.62265015]
[-139.27586365 404.75070190]
[-125.19072723 399.53857422]
[-110.58002472 396.06225586]
[-95.65682220 394.37246704]
[-80.63874817 394.49380493]
[-65.74479675 396.42456055]
[-51.19218445 400.13653564]
[-37.19311905 405.57559204]
[-30.11601448 392.35006714]
[-23.03890800 379.12454224]
[-15.96180248 365.89901733]
[-8.88469696 352.67349243]
[-2.20450258 339.24310303]
[4.07285786 325.61981201]
[10.35021877 311.99649048]
[16.62757874 298.37316895]
[22.90493965 284.74984741]
[29.08070946 271.08016968]
[35.15454102 257.36489868]
[41.22837830 243.64964294]
[47.30221176 229.93438721]
[52.86143494 216.00257874]
[57.89835358 201.87355042]
[54.88406372 187.28713989]
[66.80612183 176.88641357]
[71.84303284 162.75738525]
[76.87995148 148.62835693]
[81.60009003 134.39036560]
[86.00108337 120.05052185]
[90.40208435 105.71067047]
[94.69620514 91.33846283]
[98.88321686 76.93467712]
[101.32894897 62.13540649]
[101.99873352 47.15036774]
[102.66851807 32.16532898]
[103.33830261 17.18029213]
[104.00808716 2.19525242]
[103.78475952 -12.80308533]
[102.66911316 -27.76153755]
[94.74507904 -15.02537823]
[81.56144714 -7.87053013]
[66.56438446 -8.16725349]
[53.67408371 -15.83798599]
[46.26004028 -28.87761497]
[46.26026535 -43.87761688]
[53.67470551 -56.91702271]
[66.56523895 -64.58736420]
[81.56230927 -64.88363647]
[94.74572754 -57.72838593]
[102.66911316 -44.99283600]
[103.78475952 -59.95129013]
[104.90040588 -74.90974426]
[106.01605225 -89.86819458]
[107.02031708 -104.83454132]
[107.91313171 -119.80794525]
[97.87263489 -128.78585815]
[94.87982178 -141.71852112]
[99.80900574 -153.83401489]
[110.65307617 -160.79357910]
[111.76872253 -175.75204468]
[105.07926178 -190.08946228]
[113.74174500 -202.20600891]
[114.85739136 -217.16445923]
[115.97303772 -232.12290955]
[117.08869171 -247.08135986]
[118.20433807 -262.03982544]
[104.48591614 -268.53359985]
[94.04253387 -279.54724121]
[88.28657532 -293.59121704]
[87.99648285 -308.76620483]
[93.21148682 -323.01992798]
[103.22631073 -334.42465210]
[116.68652344 -341.43798828]
[131.77174377 -343.11148071]
[146.44181824 -339.21875000]
[158.71275330 -330.28628540]
[166.92498779 -317.52212524]
[169.96788025 -302.65252686]
[167.42993164 -287.68847656]
[159.65434265 -274.65371704]
[147.69273376 -265.31109619]
[133.16279602 -260.92416382]
[132.04714966 -245.96571350]
[130.93148804 -231.00726318]
[129.81584167 -216.04881287]
[128.70019531 -201.09036255]
[135.46945190 -187.82286072]
[126.72717285 -174.63638306]
[125.61152649 -159.67793274]
[137.12059021 -147.41496277]
[136.18099976 -130.28511047]
[122.88653564 -118.91513062]
[121.99372101 -103.94172668]
[124.73352051 -97.07766724]
[120.97451019 -88.75254822]
[119.85886383 -73.79409027]
[118.74320984 -58.83563995]
[117.62756348 -43.87718582]
[117.62756348 -28.87718773]
[118.74320984 -13.91873360]
[127.75112152 -25.91279602]
[142.05429077 -30.43158340]
[156.31797791 -25.78969955]
[165.22219849 -13.71845531]
[165.44587708 1.27987719]
[156.90560913 13.61128902]
[142.78668213 18.67646790]
[128.35511780 14.58622932]
[118.99312592 2.86503768]
[118.32334137 17.85007668]
[117.65355682 32.83511353]
[116.98377228 47.82015228]
[116.31398773 62.80519104]
[124.15090179 50.01524734]
[135.84642029 40.62295914]
[150.02653503 35.73172379]
[165.02540588 35.91616058]
[179.08096313 41.15459824]
[190.54197693 50.83163452]
[198.06202698 63.81041718]
[200.75765991 78.56621552]
[198.31221008 93.36553192]
[191.01293945 106.46974945]
[179.71737671 116.33941650]
[165.75250244 121.81503296]
[150.75891113 122.25334167]
[136.49801636 117.60285187]
[124.64519501 108.40988922]
[116.59288788 95.75444031]
[113.28700256 81.12168884]
[109.09999084 95.52547455]
[110.05286407 103.52951050]
[104.74192810 110.11167145]
[100.34093475 124.45151520]
[95.93993378 138.79136658]
[97.11039734 143.87832642]
[96.29418182 148.44856262]
[94.02078247 151.83186340]
[91.00897980 153.66526794]
[85.97206879 167.79429626]
[80.93515015 181.92332458]
[83.58916473 197.52033997]
[72.02738190 206.91046143]
[66.99046326 221.03950500]
[81.45491028 217.06712341]
[93.66838074 225.77522278]
[94.62756348 240.74452209]
[83.62538147 250.94020081]
[68.77223969 248.84638977]
[61.01747894 236.00820923]
[54.94364166 249.72348022]
[48.86980820 263.43875122]
[42.79597473 277.15402222]
[42.18245316 286.26782227]
[36.52825546 291.02722168]
[30.25089645 304.65051270]
[23.97353554 318.27383423]
[17.69617462 331.89715576]
[11.41881371 345.52047729]
[11.97062874 349.82739258]
[11.20065975 353.69671631]
[9.40877628 356.76666260]
[6.98154402 358.80996704]
[4.34083033 359.75061035]
[-2.73627520 372.97613525]
[-9.81338024 386.20166016]
[-16.89048576 399.42718506]
[-23.96759224 412.65270996]
[-11.67572784 421.28216553]
[-0.51367992 431.33035278]
[9.35577679 442.65072632]
[17.78871536 455.07824707]
[24.66216087 468.43164062]
[29.87587547 482.51617432]
[33.35382843 497.12649536]
[35.04530716 512.04949951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 202]
[43 201]
[44 200]
[45 199]
[46 198]
[47 193]
[48 192]
[49 191]
[50 190]
[51 189]
[52 187]
[53 186]
[54 185]
[55 184]
[56 178]
[57 177]
[59 175]
[60 174]
[61 173]
[62 169]
[63 168]
[64 167]
[65 165]
[66 164]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 134]
[73 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 127]
[89 126]
[93 123]
[94 122]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
