%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[101.86446381 391.80334473]
[87.34528351 385.99581909]
[80.00153351 372.18991089]
[83.30072784 356.90432739]
[95.68507385 347.35644531]
[96.13168335 332.36309814]
[96.57829285 317.36975098]
[83.83493042 309.65789795]
[76.61463165 296.51547241]
[76.94427490 281.42382812]
[84.83544922 268.43823242]
[98.25444794 261.09808350]
[98.70105743 246.10473633]
[99.14765930 231.11138916]
[99.59426880 216.11804199]
[100.04087067 201.12469482]
[100.48748016 186.13133240]
[100.48748016 171.13133240]
[100.04087067 156.13798523]
[99.59426880 141.14463806]
[99.14765930 126.15129089]
[96.26239014 111.43139648]
[90.80702972 97.45860291]
[85.14424133 83.56857300]
[79.48146057 69.67854309]
[73.81867218 55.78851700]
[68.15588379 41.89849091]
[62.49309921 28.00846481]
[47.35431290 25.82570839]
[35.41949081 16.42055893]
[29.83189583 2.39753699]
[31.99912453 -12.44022179]
[41.24005508 -24.12229538]
[35.57726669 -38.01232147]
[23.20268440 -47.87032700]
[25.56265068 -62.57678223]
[19.89986229 -76.46681213]
[14.23707676 -90.35683441]
[8.57429028 -104.24686432]
[1.59583759 -117.52471161]
[-6.63297033 -130.06611633]
[-14.86177826 -142.60751343]
[-18.80696106 -144.42120361]
[-21.68076134 -147.12413025]
[-23.33518791 -150.27027893]
[-23.78230476 -153.41140747]
[-23.18108559 -156.14941406]
[-30.64882660 -169.15837097]
[-38.11656952 -182.16732788]
[-45.58430862 -195.17626953]
[-53.05205154 -208.18522644]
[-60.51979065 -221.19418335]
[-67.98753357 -234.20314026]
[-75.45527649 -247.21208191]
[-82.92301178 -260.22103882]
[-96.58403015 -253.99920654]
[-110.76763916 -249.08396912]
[-125.34920502 -245.51850891]
[-140.20057678 -243.33418274]
[-155.19123840 -242.55017090]
[-170.18943787 -243.17337036]
[-185.06338501 -245.19828796]
[-199.68234253 -248.60716248]
[-213.91786194 -253.36999512]
[-227.64480591 -259.44494629]
[-240.74256897 -266.77865601]
[-253.09603882 -275.30664062]
[-264.59664917 -284.95394897]
[-275.14331055 -295.63580322]
[-284.64334106 -307.25836182]
[-293.01330566 -319.71945190]
[-300.17956543 -332.90954590]
[-306.07919312 -346.71276855]
[-310.66033936 -361.00778198]
[-313.88272095 -375.66897583]
[-315.71801758 -390.56750488]
[-316.15014648 -405.57244873]
[-315.17526245 -420.55187988]
[-312.80194092 -435.37423706]
[-309.05105591 -449.90921021]
[-303.95553589 -464.02905273]
[-297.56021118 -477.60971069]
[-289.92126465 -490.53182983]
[-281.10583496 -502.68182373]
[-271.19137573 -513.95294189]
[-260.26501465 -524.24609375]
[-248.42279053 -533.47088623]
[-235.76876831 -541.54614258]
[-222.41416931 -548.40100098]
[-208.47634888 -553.97521973]
[-194.07777405 -558.21972656]
[-179.34501648 -561.09722900]
[-164.40753174 -562.58251953]
[-149.39660645 -562.66247559]
[-134.44413757 -561.33648682]
[-119.68155670 -558.61608887]
[-105.23858643 -554.52520752]
[-91.24215698 -549.09985352]
[-77.81526947 -542.38769531]
[-65.07593536 -534.44769287]
[-53.13609314 -525.34960938]
[-42.10068512 -515.17346191]
[-32.06668472 -504.00863647]
[-23.12228203 -491.95324707]
[-15.34607697 -479.11328125]
[-8.80640888 -465.60153198]
[-3.56075120 -451.53677368]
[0.34479669 -437.04260254]
[2.87591195 -422.24639893]
[4.01035023 -407.27816772]
[3.73814225 -392.26950073]
[2.06168008 -377.35226440]
[-1.00430346 -362.65756226]
[-5.43286324 -348.31454468]
[-11.18508053 -334.44921875]
[-18.21040344 -321.18350220]
[-26.44709206 -308.63394165]
[-35.82276154 -296.91085815]
[-46.25501251 -286.11721802]
[-57.65216446 -276.34790039]
[-69.91406250 -267.68878174]
[-62.44631958 -254.67982483]
[-54.97858047 -241.67086792]
[-47.51083755 -228.66192627]
[-40.04309845 -215.65296936]
[-32.57535553 -202.64401245]
[-25.10761642 -189.63507080]
[-17.63987350 -176.62611389]
[-10.17213345 -163.61715698]
[-2.32037783 -150.83631897]
[5.90843010 -138.29492188]
[14.13723755 -125.75351715]
[13.69131470 -140.74688721]
[19.30682945 -154.65609741]
[30.03746986 -165.13719177]
[44.07493591 -170.42391968]
[59.05366516 -169.62539673]
[72.44947815 -162.87615967]
[82.00495148 -151.31359863]
[86.10980988 -136.88618469]
[84.07232666 -122.02520752]
[76.23583984 -109.23500061]
[63.92094040 -100.67092896]
[49.20290375 -97.77619934]
[34.56198120 -101.03862000]
[22.46431732 -109.90965271]
[28.12710381 -96.01962280]
[33.78989029 -82.12959290]
[39.45267487 -68.23957062]
[51.42221832 -59.37507248]
[49.46729279 -43.67510986]
[55.13008118 -29.78508186]
[69.90467834 -27.89383125]
[81.82822418 -18.80070305]
[87.63775635 -4.86816120]
[85.68061829 10.20056248]
[76.38312531 22.34567833]
[82.04591370 36.23570633]
[87.70870209 50.12573242]
[93.37148285 64.01576233]
[99.03427124 77.90578461]
[104.69705963 91.79581451]
[108.94579315 94.87188721]
[111.16860962 100.10948181]
[110.31485748 106.18467712]
[111.91936493 91.27074432]
[117.27960968 77.26117706]
[126.04006195 65.08519745]
[137.61967468 55.55038834]
[151.25041199 49.28915787]
[166.02819824 46.71678925]
[180.97286987 48.00390625]
[195.09320068 53.06512833]
[207.45266724 61.56477356]
[217.23146057 72.93907928]
[223.78103638 86.43363953]
[226.66696167 101.15340424]
[225.69781494 116.12206268]
[220.93789673 130.34680176]
[212.70291138 142.88414001]
[201.53903198 152.90252686]
[188.18675232 159.73747253]
[173.53166199 162.93565369]
[158.54577637 162.28492737]
[144.22308350 157.82846069]
[131.51351929 149.86183167]
[121.26007843 138.91345215]
[114.14101410 125.70468140]
[114.58761597 140.69802856]
[115.03422546 155.69137573]
[115.48082733 170.68473816]
[117.89296722 174.29521179]
[118.92675781 178.10253906]
[118.68956757 181.64926147]
[117.42630768 184.55972290]
[115.48082733 186.57794189]
[115.03422546 201.57128906]
[114.58761597 216.56465149]
[114.14101410 231.55799866]
[113.69440460 246.55134583]
[113.24780273 261.54470825]
[126.20611572 269.67053223]
[133.31037903 283.10281372]
[132.74116516 298.18731689]
[124.75142670 310.87667847]
[111.57164001 317.81634521]
[111.12503052 332.80969238]
[110.67842865 347.80303955]
[122.47251892 358.07110596]
[124.85604858 373.52597046]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 191]
[19 190]
[20 189]
[21 188]
[22 165]
[23 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[33 152]
[34 151]
[36 149]
[37 148]
[38 147]
[39 146]
[40 132]
[41 131]
[42 130]
[47 129]
[48 128]
[49 127]
[50 126]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
