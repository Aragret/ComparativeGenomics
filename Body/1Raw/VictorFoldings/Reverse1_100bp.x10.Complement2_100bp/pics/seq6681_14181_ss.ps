%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[82.03133392 550.53338623]
[67.23684692 546.92187500]
[55.19433212 537.59997559]
[47.99021912 524.18280029]
[46.87266922 508.99496460]
[52.03530121 494.66781616]
[62.58365631 483.68362427]
[76.69017792 477.94552612]
[77.13677979 462.95214844]
[77.58338928 447.95880127]
[74.64043427 441.17938232]
[78.14990997 432.74603271]
[78.81969452 417.76098633]
[69.90507507 402.64489746]
[79.94384003 387.20776367]
[80.39044189 372.21441650]
[80.83705139 357.22106934]
[71.69836426 342.23934937]
[81.50617218 326.65447998]
[73.95922089 313.81341553]
[81.90113068 300.12997437]
[82.12445831 285.13162231]
[82.34778595 270.13330078]
[80.49436188 268.03021240]
[79.36231995 265.06625366]
[79.28373718 261.51248169]
[80.48650360 257.75509644]
[83.05744934 254.25593567]
[84.17310333 239.29748535]
[85.28874969 224.33903503]
[86.40439606 209.38058472]
[87.29721832 194.40718079]
[87.96700287 179.42213440]
[80.03805542 170.28657532]
[80.47342682 157.79681396]
[89.58480072 148.66741943]
[90.47761536 133.69401550]
[83.51157379 120.52877808]
[92.05655670 107.21360016]
[90.60713959 92.28379059]
[86.85083771 77.76173401]
[83.09453583 63.23967361]
[79.33823395 48.71761703]
[75.58193207 34.19555664]
[71.82563019 19.67349815]
[68.67373657 16.68693733]
[66.82235718 13.20313072]
[66.26811981 9.69197369]
[66.85538483 6.57400417]
[68.30554199 4.17500925]
[65.42027283 -10.54488277]
[62.53499603 -25.26477432]
[59.64972305 -39.98466492]
[55.59938431 -45.21020508]
[54.90090942 -50.85016632]
[56.90454865 -55.18542862]
[54.45882034 -69.98469543]
[40.17947006 -75.46623993]
[30.62414932 -87.28117371]
[28.28120232 -102.19348907]
[33.68093109 -116.18273163]
[45.27974319 -125.52794647]
[42.83401871 -140.32722473]
[40.38829041 -155.12649536]
[34.72487259 -141.23672485]
[23.95817184 -130.79266357]
[9.90256977 -125.55434418]
[-5.07331944 -126.40449524]
[-18.44579506 -133.19985962]
[-27.96135902 -144.79528809]
[-32.01647568 -159.23675537]
[-29.92778015 -174.09062195]
[-22.04726028 -186.85374451]
[-9.70291805 -195.37532043]
[5.02500486 -198.21931458]
[19.65459633 -194.90644836]
[31.72051430 -185.99501038]
[39.18994904 -172.98516846]
[39.63655472 -187.97851562]
[40.08316040 -202.97186279]
[40.52976990 -217.96520996]
[40.97637558 -232.95857239]
[41.08803940 -247.95814514]
[33.14613342 -261.64160156]
[40.69308853 -274.48266602]
[40.46976089 -289.48098755]
[32.52785110 -303.16442871]
[40.07480621 -316.00549316]
[39.85147858 -331.00384521]
[39.62815094 -346.00216675]
[29.82033920 -361.58703613]
[38.95902252 -376.56875610]
[38.51241684 -391.56210327]
[38.06581116 -406.55545044]
[29.92105865 -420.11914062]
[37.27598953 -433.07113647]
[36.82938385 -448.06448364]
[36.38277817 -463.05783081]
[22.41922569 -469.22079468]
[12.51903629 -480.83752441]
[8.64789963 -495.60159302]
[11.57443333 -510.58151245]
[20.71757126 -522.80303955]
[34.26194000 -529.83959961]
[49.51828766 -530.29400635]
[63.45746613 -524.07611084]
[73.31182861 -512.42047119]
[77.12479401 -497.64129639]
[74.13929749 -482.67300415]
[64.94809723 -470.48757935]
[51.37612915 -463.50442505]
[51.82273483 -448.51107788]
[52.26934052 -433.51773071]
[60.38214874 -421.02648926]
[53.05916214 -407.00204468]
[53.50576782 -392.00869751]
[53.95237350 -377.01535034]
[62.53882599 -368.49481201]
[63.03360748 -356.00726318]
[54.62648773 -346.22549438]
[54.84981537 -331.22717285]
[55.07314301 -316.22882080]
[62.99907684 -303.61816406]
[55.46809769 -289.70431519]
[55.69142532 -274.70599365]
[63.61735535 -262.09530640]
[56.08638000 -248.18147278]
[58.34816742 -245.47654724]
[59.41217422 -241.54171753]
[58.71459579 -236.95185852]
[55.96972275 -232.51196289]
[55.52311707 -217.51861572]
[55.07651138 -202.52526855]
[54.62990570 -187.53190613]
[54.18330002 -172.53855896]
[55.18756104 -157.57221985]
[57.63328934 -142.77294922]
[60.07901382 -127.97367859]
[74.06778717 -122.85706329]
[83.68122101 -111.34889221]
[86.26063538 -96.47566223]
[81.01462555 -82.21466064]
[69.25809479 -72.43042755]
[71.70381927 -57.63115311]
[74.36961365 -42.86993790]
[77.25489044 -28.15004539]
[80.14015961 -13.43015480]
[83.02543640 1.28973639]
[86.34769440 15.91719627]
[90.10399628 30.43925667]
[93.86029053 44.96131516]
[97.61659241 59.48337555]
[101.37289429 74.00543213]
[105.12919617 88.52749634]
[108.33043671 73.87306976]
[115.31783295 60.59992981]
[125.58696747 49.66627121]
[138.39649963 41.86140442]
[152.82168579 37.74876785]
[167.82118225 37.62525558]
[182.31214905 41.49978638]
[195.24845886 49.09265518]
[205.69625854 59.85572433]
[212.90129089 73.01200104]
[216.34341431 87.61171722]
[215.77415466 102.60090637]
[211.23460388 116.89749908]
[203.05245972 129.46939087]
[191.81842041 139.40902710]
[178.34347534 145.99884033]
[163.60037231 148.76312256]
[148.65345764 147.50230408]
[134.58174133 142.30740356]
[122.40109253 133.55346680]
[112.99082184 121.87241364]
[107.02996063 108.10641479]
[113.93214417 122.34265900]
[105.45101929 134.58683777]
[104.55820465 149.56024170]
[113.17969513 165.83142090]
[102.95204163 180.09191895]
[102.28225708 195.07696533]
[104.98509216 201.11071777]
[104.33293152 206.75622559]
[101.36285400 210.49623108]
[100.24720001 225.45468140]
[99.13155365 240.41313171]
[98.01590729 255.37158203]
[97.34612274 270.35662842]
[97.12279510 285.35494995]
[96.89946747 300.35330200]
[104.43044281 314.26715088]
[96.50450897 326.87780762]
[104.91162872 336.65957642]
[104.41684723 349.14712524]
[95.83039856 357.66766357]
[95.38378906 372.66101074]
[94.93718719 387.65435791]
[103.19773865 397.56021118]
[102.51708984 410.03903198]
[93.80473328 418.43075562]
[93.13494873 433.41580200]
[92.57673645 448.40542603]
[92.13012695 463.39877319]
[91.68352509 478.39212036]
[105.42349243 484.95971680]
[115.29936218 496.55224609]
[119.60007477 511.16128540]
[117.58050537 526.25567627]
[109.59056091 539.22027588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[12 202]
[13 201]
[15 198]
[16 197]
[17 196]
[19 193]
[21 191]
[22 190]
[23 189]
[28 188]
[29 187]
[30 186]
[31 185]
[32 182]
[33 181]
[36 179]
[37 178]
[39 176]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[45 149]
[50 148]
[51 147]
[52 146]
[53 145]
[56 144]
[57 143]
[62 138]
[63 137]
[64 136]
[78 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 127]
[85 125]
[86 124]
[88 122]
[89 121]
[90 120]
[92 117]
[93 116]
[94 115]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
