%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[180.47142029 393.03134155]
[187.68960571 379.83779907]
[197.08929443 368.09826660]
[208.38487244 358.16946411]
[221.23306274 350.35311890]
[215.77769470 336.38034058]
[210.32234192 322.40753174]
[204.76312256 308.47573853]
[199.10032654 294.58569336]
[193.43754578 280.69567871]
[187.26177979 267.02600098]
[180.58157349 253.59562683]
[173.90138245 240.16525269]
[167.02197266 226.83583069]
[159.94487000 213.61029053]
[152.86776733 200.38476562]
[145.79066467 187.15924072]
[138.71354675 173.93371582]
[131.05294800 161.03738403]
[122.82415009 148.49598694]
[114.59533691 135.95458984]
[106.36653137 123.41318512]
[98.13772583 110.87178802]
[92.57877350 124.80369568]
[78.26535797 129.28991699]
[65.74879456 121.02337646]
[64.25582886 106.09785461]
[74.88702393 95.51589966]
[89.80403900 97.07727051]
[82.53080750 83.95857239]
[75.25757599 70.83988190]
[67.98435211 57.72118378]
[60.71112061 44.60248947]
[52.57590485 32.00017929]
[39.94968414 29.36553764]
[32.73394775 19.16176605]
[34.35163116 7.17387056]
[25.57102776 -4.98758507]
[16.79042435 -17.14904022]
[8.00982189 -29.31049728]
[-0.77078134 -41.47195435]
[-14.22635841 -42.07365417]
[-24.72535324 -50.19655609]
[-28.57195854 -62.69798660]
[-24.57597733 -74.94795227]
[-33.17454147 -87.23879242]
[-41.77310562 -99.52962494]
[-50.37166977 -111.82046509]
[-58.97023392 -124.11130524]
[-67.56879425 -136.40214539]
[-76.25862122 -148.62863159]
[-85.03922272 -160.79008484]
[-93.81982422 -172.95153809]
[-110.79007721 -180.09941101]
[-111.89001465 -197.61389160]
[-120.85070801 -209.64328003]
[-133.80572510 -202.05178833]
[-147.51725769 -195.93154907]
[-161.81884766 -191.35687256]
[-176.53689575 -188.38328552]
[-191.49273682 -187.04689026]
[-206.50482178 -187.36389160]
[-221.39091492 -189.33045959]
[-235.97032166 -192.92269897]
[-250.06604004 -198.09703064]
[-263.50698853 -204.79061890]
[-276.13000488 -212.92222595]
[-287.78182983 -222.39314270]
[-298.32101440 -233.08839417]
[-307.61965942 -244.87814331]
[-315.56488037 -257.61929321]
[-322.06024170 -271.15713501]
[-327.02685547 -285.32739258]
[-330.40444946 -299.95800781]
[-332.15203857 -314.87139893]
[-332.24838257 -329.88653564]
[-330.69232178 -344.82110596]
[-327.50274658 -359.49386597]
[-322.71838379 -373.72668457]
[-316.39730835 -387.34680176]
[-308.61624146 -400.18884277]
[-299.46966553 -412.09695435]
[-289.06857300 -422.92657471]
[-277.53924561 -432.54623413]
[-265.02163696 -440.83914185]
[-251.66769409 -447.70468140]
[-237.63954163 -453.05947876]
[-223.10743713 -456.83853149]
[-208.24780273 -458.99594116]
[-193.24101257 -459.50558472]
[-178.26925659 -458.36120605]
[-163.51426697 -455.57675171]
[-149.15513611 -451.18597412]
[-135.36621094 -445.24221802]
[-122.31483459 -437.81759644]
[-110.15946198 -429.00225830]
[-99.04764557 -418.90319824]
[-89.11426544 -407.64303589]
[-80.47991943 -395.35845947]
[-73.24940491 -382.19854736]
[-67.51049805 -368.32312012]
[-63.33286285 -353.90054321]
[-60.76721573 -339.10592651]
[-59.84469986 -324.11886597]
[-60.57651520 -309.12127686]
[-62.95377350 -294.29522705]
[-66.94762421 -279.82067871]
[-72.50957489 -265.87335205]
[-79.57212067 -252.62255859]
[-88.04952240 -240.22912598]
[-97.83886719 -228.84353638]
[-108.82133484 -218.60397339]
[-99.86063385 -206.57458496]
[-87.94070435 -204.51504517]
[-80.37695312 -194.56649780]
[-81.65837097 -181.73214722]
[-72.87776947 -169.57067871]
[-64.09716797 -157.40922546]
[-57.63307571 -153.82630920]
[-55.27795792 -145.00070190]
[-46.67939377 -132.70986938]
[-38.08082962 -120.41902924]
[-29.48226738 -108.12818909]
[-20.88370323 -95.83735657]
[-12.28513908 -83.54651642]
[4.38591480 -81.32958984]
[14.49446011 -67.46841431]
[11.39067459 -50.25255585]
[20.17127800 -38.09109879]
[28.95188141 -25.92964363]
[37.73248291 -13.76818848]
[46.51308823 -1.60673273]
[62.88749313 4.70561504]
[64.60528564 23.03948402]
[65.05377960 8.04619026]
[73.44904327 -4.38439608]
[87.18972015 -10.40052223]
[102.01811218 -8.13802528]
[113.33946991 1.70203376]
[117.64575958 16.07060623]
[113.60262299 30.51543427]
[102.46287537 40.56063080]
[87.67828369 43.09358215]
[73.82981110 37.32926178]
[81.10304260 50.44795609]
[88.37627411 63.56665039]
[95.64950562 76.68534088]
[102.92272949 89.80403900]
[110.67912292 102.64297485]
[118.90792847 115.18437958]
[127.13674164 127.72577667]
[135.36553955 140.26718140]
[143.59436035 152.80857849]
[147.69635010 138.38035583]
[160.73152161 130.95846558]
[175.23271179 134.79450989]
[182.89300537 147.69100952]
[179.32421875 162.26028442]
[166.57072449 170.15638733]
[151.93908691 166.85661316]
[159.01618958 180.08213806]
[166.09329224 193.30766296]
[173.17039490 206.53318787]
[180.24749756 219.75871277]
[185.65275574 223.56591797]
[187.97525024 228.75273132]
[187.33175659 233.48506165]
[194.01196289 246.91543579]
[200.69215393 260.34582520]
[207.86726379 247.17318726]
[222.61235046 244.41963196]
[234.05790710 254.11495972]
[233.76667786 269.11212158]
[221.95335388 278.35580444]
[207.32757568 275.03289795]
[212.99035645 288.92291260]
[218.65313721 302.81295776]
[224.79071045 309.57815552]
[224.29513550 316.95217896]
[229.75050354 330.92495728]
[235.20585632 344.89776611]
[249.95127869 341.94082642]
[264.98617554 341.58950806]
[279.85360718 343.85449219]
[294.10180664 348.66696167]
[307.29779053 355.88064575]
[319.04052734 365.27636719]
[328.97317505 376.56854248]
[336.79388428 389.41409302]
[342.26501465 403.42257690]
[345.22027588 418.16833496]
[345.56988525 433.20324707]
[343.30322266 448.07043457]
[338.48913574 462.31811523]
[331.27395630 475.51327515]
[321.87692261 487.25494385]
[310.58358765 497.18630981]
[297.73718262 505.00555420]
[283.72805786 510.47509766]
[268.98196411 513.42871094]
[253.94700623 513.77661133]
[239.08007812 511.50823975]
[224.83296204 506.69253540]
[211.63862610 499.47586060]
[199.89802551 490.07748413]
[189.96794128 478.78305054]
[182.15013123 465.93572998]
[176.68218994 451.92599487]
[173.73025513 437.17956543]
[173.38406372 422.14456177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 181]
[6 180]
[7 179]
[8 177]
[9 176]
[10 175]
[11 169]
[12 168]
[13 167]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[29 148]
[30 147]
[31 146]
[32 145]
[33 144]
[34 134]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[45 125]
[46 124]
[47 123]
[48 122]
[49 121]
[50 120]
[51 118]
[52 117]
[53 116]
[55 113]
[56 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
