%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[59.11009598 719.13024902]
[44.21469498 720.93646240]
[29.23793221 721.84869385]
[14.23342323 721.86358643]
[-0.74512094 720.98114014]
[-15.64408016 719.20446777]
[-30.41012001 716.53997803]
[-44.99038315 712.99713135]
[-59.33267212 708.58874512]
[-73.38565063 703.33044434]
[-87.09900665 697.24114990]
[-100.42364502 690.34265137]
[-113.31188202 682.65966797]
[-125.71756744 674.21960449]
[-137.59629822 665.05273438]
[-148.90554810 655.19189453]
[-159.60484314 644.67236328]
[-169.65586853 633.53179932]
[-179.02264404 621.81005859]
[-187.67164612 609.54913330]
[-195.57191467 596.79290771]
[-202.69515991 583.58703613]
[-209.01589966 569.97882080]
[-214.51148987 556.01690674]
[-219.16226196 541.75140381]
[-222.95155334 527.23321533]
[-225.86582947 512.51446533]
[-227.89463806 497.64773560]
[-229.03073120 482.68627930]
[-229.27001953 467.68365479]
[-228.61166382 452.69360352]
[-227.05801392 437.76974487]
[-224.61463928 422.96551514]
[-221.29026794 408.33389282]
[-217.09683228 393.92727661]
[-212.04930115 379.79724121]
[-206.16578674 365.99435425]
[-199.46731567 352.56802368]
[-191.97789001 339.56634521]
[-183.72431946 327.03579712]
[-174.73612976 315.02133179]
[-165.04551697 303.56585693]
[-154.68714905 292.71044922]
[-143.69813538 282.49395752]
[-132.11779785 272.95291138]
[-119.98759460 264.12152100]
[-107.35093689 256.03137207]
[-94.25308228 248.71141052]
[-80.74089813 242.18788147]
[-66.86277008 236.48411560]
[-52.66836929 231.62051392]
[-38.20851135 227.61451721]
[-23.53495789 224.48045349]
[-8.70023918 222.22953796]
[6.24254227 220.86984253]
[21.23989487 220.40620422]
[36.23812866 220.84031677]
[51.18355942 222.17060852]
[66.02268219 224.39231873]
[69.12679291 209.71701050]
[72.23090363 195.04170227]
[75.33501434 180.36640930]
[78.43911743 165.69110107]
[81.54322815 151.01580811]
[76.60720825 136.96287537]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[94.98499298 54.07852173]
[82.50792694 62.40456009]
[68.14828491 66.74053192]
[53.14831161 66.71133423]
[38.80566025 62.31948471]
[26.36111069 53.94493103]
[16.89123917 42.31215286]
[11.21528816 28.42749977]
[9.82428074 13.49213696]
[12.83855534 -1.20188093]
[19.99734688 -14.38337231]
[30.68134689 -24.91200638]
[43.96628189 -31.87695122]
[58.70287704 -34.67567062]
[73.61626434 -33.06604767]
[87.41628265 -27.18732643]
[98.90910339 -17.54807854]
[107.10047913 -4.98219633]
[111.28176880 9.42324734]
[111.09181213 24.41856575]
[118.16892242 11.19303799]
[125.24602509 -2.03248978]
[132.32313538 -15.25801754]
[139.40023804 -28.48354530]
[146.47734070 -41.70907211]
[134.20532227 -50.36799622]
[123.09041595 -60.46941376]
[113.30113983 -71.86019135]
[104.98590088 -84.36764526]
[98.27074432 -97.80216217]
[93.25747681 -111.96008301]
[90.02208710 -126.62677765]
[88.61363983 -141.57989502]
[89.05347443 -156.59277344]
[91.33493042 -171.43778992]
[95.42341614 -185.88990784]
[101.25695801 -199.73004150]
[108.74710846 -212.74839783]
[117.78032684 -224.74757385]
[128.21968079 -235.54571533]
[139.90689087 -244.97909546]
[152.66479492 -252.90470886]
[166.30000305 -259.20242310]
[180.60577393 -263.77673340]
[195.36524963 -266.55831909]
[210.35469055 -267.50500488]
[225.34686279 -266.60244751]
[240.11447144 -263.86431885]
[254.43365479 -259.33215332]
[268.08734131 -253.07463074]
[280.86853027 -245.18659973]
[292.58346558 -235.78767395]
[303.05456543 -225.02032471]
[312.12307739 -213.04779053]
[319.65151978 -200.05155945]
[325.52578735 -186.22865295]
[329.65679932 -171.78863525]
[331.98196411 -156.95039368]
[332.46597290 -141.93888855]
[331.10156250 -126.98168182]
[327.90939331 -112.30552673]
[322.93783569 -98.13290405]
[316.26223755 -84.67867279]
[307.98385620 -72.14678955]
[298.22817993 -60.72724533]
[287.14306641 -50.59314346]
[274.89657593 -41.89812469]
[261.67437744 -34.77399826]
[247.67692566 -29.32876587]
[233.11639404 -25.64497566]
[218.21350098 -23.77847290]
[203.19421387 -23.75755310]
[188.28619385 -25.58253479]
[173.71545410 -29.22574806]
[159.70286560 -34.63196564]
[152.62576294 -21.40643883]
[145.54866028 -8.18091202]
[138.47155762 5.04461575]
[131.39443970 18.27014351]
[124.31734467 31.49567032]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[106.42214203 143.26930237]
[96.21853638 154.11991882]
[93.11442566 168.79521179]
[90.01031494 183.47052002]
[86.90620422 198.14581299]
[83.80209351 212.82112122]
[80.69798279 227.49642944]
[95.16577148 231.47369385]
[109.36980438 236.30908203]
[123.25923920 241.98527527]
[136.78434753 248.48194885]
[149.89672852 255.77586365]
[162.54942322 263.84091187]
[174.69714355 272.64819336]
[186.29641724 282.16619873]
[197.30570984 292.36083984]
[207.68560791 303.19567871]
[217.39895630 314.63183594]
[226.41099548 326.62844849]
[234.68943787 339.14257812]
[242.20468140 352.12936401]
[248.92980957 365.54232788]
[254.84072876 379.33352661]
[259.91632080 393.45349121]
[264.13836670 407.85174561]
[267.49179077 422.47674561]
[269.96456909 437.27609253]
[271.54785156 452.19683838]
[272.23599243 467.18557739]
[272.02648926 482.18862915]
[270.92013550 497.15228271]
[268.92086792 512.02301025]
[266.03582764 526.74755859]
[262.27536011 541.27319336]
[257.65295410 555.54797363]
[252.18510437 569.52075195]
[245.89141846 583.14147949]
[238.79441833 596.36145020]
[230.91950989 609.13336182]
[222.29487610 621.41143799]
[212.95140076 633.15179443]
[202.92251587 644.31225586]
[192.24415588 654.85302734]
[180.95451355 664.73632812]
[169.09400940 673.92675781]
[156.70510864 682.39147949]
[143.83216858 690.10009766]
[130.52125549 697.02502441]
[116.82001495 703.14154053]
[102.77751160 708.42773438]
[88.44400787 712.86462402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[66 159]
[67 158]
[69 156]
[70 155]
[71 154]
[72 153]
[92 152]
[93 151]
[94 150]
[95 149]
[96 148]
[97 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
