%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[249.73045349 534.46606445]
[260.63360596 524.08264160]
[273.45751953 516.19335938]
[268.42059326 502.06436157]
[263.38369751 487.93533325]
[258.34677124 473.80630493]
[253.30986023 459.67727661]
[247.33830261 445.91717529]
[240.45887756 432.58773804]
[233.57946777 419.25830078]
[227.71839905 414.75613403]
[226.69853210 405.67880249]
[220.01834106 392.24844360]
[213.33815002 378.81805420]
[210.72660828 377.79922485]
[208.36128235 375.68453979]
[206.66160583 372.56262207]
[206.00717163 368.67208862]
[206.68698120 364.38351440]
[200.81802368 350.57934570]
[194.94906616 336.77514648]
[189.08009338 322.97097778]
[183.00627136 309.25570679]
[176.72891235 295.63238525]
[170.45153809 282.00909424]
[164.17417908 268.38577271]
[157.89682007 254.76245117]
[151.61946106 241.13912964]
[145.34210205 227.51582336]
[142.17874146 225.95840454]
[139.61256409 222.79142761]
[138.39186096 218.31222534]
[139.10382080 213.14114380]
[133.44104004 199.25111389]
[127.77825165 185.36108398]
[122.11547089 171.47105408]
[116.34943390 157.62356567]
[110.48047638 143.81939697]
[104.61151123 130.01521301]
[98.74255371 116.21104431]
[88.22370911 111.21151733]
[83.74676514 100.45985413]
[87.60864258 89.47225952]
[81.94585419 75.58223724]
[80.46700287 90.50915527]
[74.50548553 104.27362061]
[64.62952423 115.56367493]
[51.78042984 123.30323029]
[37.18289566 126.75460815]
[22.22826576 125.58883667]
[8.34191990 119.91703033]
[-3.15258431 110.27979279]
[-11.15966320 97.59568024]
[-14.91613388 83.07366180]
[-14.06395245 68.09789276]
[-8.68434429 54.09575272]
[0.70994169 42.40184784]
[13.22350121 34.13076401]
[27.66362190 30.07084846]
[42.65396118 30.60906410]
[56.76573944 35.69411469]
[68.65390778 44.84132004]
[77.18585968 57.17985535]
[75.40339661 42.28614044]
[73.62093353 27.39242172]
[71.83846283 12.49870396]
[60.46250534 -1.98125005]
[67.99298096 -17.83239746]
[65.98896790 -32.69792557]
[63.98495102 -47.56345367]
[61.98093796 -62.42898178]
[59.97692490 -77.29450989]
[57.97291183 -92.16004181]
[55.96889877 -107.02556610]
[44.37861252 -121.33454132]
[51.67225266 -137.29605103]
[49.44713593 -152.13009644]
[39.74830627 -164.62982178]
[45.51202393 -178.36404419]
[33.70998764 -192.49887085]
[40.76517487 -208.56721497]
[38.31944656 -223.36648560]
[28.30774498 -231.49842834]
[26.57536697 -243.87512207]
[33.51086426 -253.78599548]
[23.81203651 -266.28573608]
[29.57575417 -280.01995850]
[27.35063744 -294.85400391]
[25.12552071 -309.68804932]
[10.13190937 -311.37744141]
[-3.91320539 -316.89080811]
[-16.05220413 -325.85220337]
[-25.45742989 -337.65069580]
[-31.48761940 -351.48178101]
[-33.73162460 -366.40246582]
[-32.03644562 -381.39544678]
[-26.51765823 -395.43841553]
[-17.55154991 -407.57394409]
[-5.74943829 -416.97463989]
[8.08398533 -422.99948120]
[23.00553703 -425.23773193]
[37.99783707 -423.53674316]
[52.03869247 -418.01254272]
[64.17076874 -409.04174805]
[73.56687927 -397.23602295]
[79.58638763 -383.40026855]
[81.81887054 -368.47784424]
[80.11210632 -353.48620605]
[74.58248138 -339.44747925]
[65.60700226 -327.31887817]
[53.79763794 -317.92730713]
[39.95956421 -311.91314697]
[42.18468094 -297.07910156]
[44.40979767 -282.24505615]
[53.94947433 -270.80636597]
[48.34490967 -256.01110840]
[60.00065994 -242.89202881]
[53.11871719 -225.81221008]
[55.56444550 -211.01293945]
[65.21227264 -203.71594238]
[67.37096405 -191.40644836]
[60.34606934 -180.58917236]
[69.88574219 -169.15046692]
[64.28118134 -154.35520935]
[66.50629425 -139.52116394]
[76.04441071 -132.08134460]
[78.01959991 -119.74107361]
[70.83442688 -109.02957916]
[72.83843994 -94.16405487]
[74.84245300 -79.29852295]
[76.84646606 -64.43299866]
[78.85047913 -49.56746674]
[80.85449219 -34.70193863]
[82.85850525 -19.83641052]
[92.28479767 -12.25540829]
[94.07603455 0.11290783]
[86.73218536 10.71623802]
[88.51464844 25.60995483]
[90.29711151 40.50367355]
[92.07958221 55.39738846]
[95.83587646 69.91944885]
[101.49866486 83.80947876]
[115.01042938 93.74971771]
[112.54673004 110.34207916]
[118.41568756 124.14625549]
[124.28465271 137.95043945]
[130.15361023 151.75460815]
[136.39123535 158.42768860]
[136.00549316 165.80827332]
[141.66828918 179.69830322]
[147.33106995 193.58833313]
[152.99385071 207.47834778]
[158.96542358 221.23844910]
[165.24278259 234.86177063]
[171.52014160 248.48509216]
[177.79750061 262.10839844]
[184.07485962 275.73171997]
[190.35221863 289.35504150]
[196.62957764 302.97836304]
[201.79864502 307.10052490]
[203.80830383 312.41638184]
[202.88427734 317.10202026]
[208.75323486 330.90618896]
[214.62219238 344.71035767]
[220.49116516 358.51455688]
[226.76852417 372.13787842]
[233.44871521 385.56823730]
[240.12890625 398.99862671]
[246.90890503 412.37890625]
[253.78831482 425.70831299]
[260.66772461 439.03775024]
[263.55484009 424.31820679]
[273.86456299 413.42282104]
[288.40228271 409.72760010]
[302.66333008 414.37756348]
[312.22879028 425.93188477]
[314.13467407 440.81030273]
[307.79043579 454.40258789]
[295.16192627 462.49703979]
[280.16217041 462.58551025]
[267.43890381 454.64035034]
[272.47579956 468.76937866]
[277.51272583 482.89840698]
[282.54965210 497.02743530]
[287.58654785 511.15646362]
[302.50918579 509.15426636]
[317.52197266 510.29879761]
[331.96862793 514.54003906]
[345.21759033 521.69250488]
[356.68966675 531.44366455]
[365.88339233 543.36712646]
[372.39682007 556.94171143]
[375.94522095 571.57397461]
[376.37344360 586.62420654]
[373.66284180 601.43457031]
[367.93182373 615.35754395]
[359.43099976 627.78448486]
[348.53192139 638.17218018]
[335.71112061 646.06652832]
[321.52899170 651.12237549]
[306.60559082 653.11871338]
[291.59326172 651.96826172]
[277.14828491 647.72137451]
[263.90213013 640.56359863]
[252.43385315 630.80798340]
[243.24484253 618.88085938]
[236.73675537 605.30371094]
[233.19410706 590.67010498]
[232.77178955 575.61968994]
[235.48825073 560.81042480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 171]
[9 170]
[10 169]
[12 168]
[13 167]
[14 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 159]
[24 158]
[25 157]
[26 156]
[27 155]
[28 154]
[29 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 147]
[38 146]
[39 145]
[40 144]
[43 142]
[44 141]
[63 140]
[64 139]
[65 138]
[66 137]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[73 129]
[74 128]
[76 125]
[77 124]
[79 122]
[81 119]
[82 118]
[85 116]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
