%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[87.44290161 639.84313965]
[72.96971130 643.82452393]
[58.19089890 646.45343018]
[43.23256302 647.70758057]
[28.22232056 647.57611084]
[13.28823757 646.06024170]
[-1.44226933 643.17291260]
[-15.84352303 638.93872070]
[-29.79265404 633.39373779]
[-43.17065048 626.58538818]
[-55.86337662 618.57171631]
[-67.76253510 609.42102051]
[-78.76660919 599.21148682]
[-88.78171539 588.03015137]
[-97.72239685 575.97241211]
[-105.51238251 563.14117432]
[-112.08520508 549.64587402]
[-117.38478851 535.60168457]
[-121.36592102 521.12841797]
[-123.99462891 506.34957886]
[-125.24848938 491.39123535]
[-125.11679840 476.38098145]
[-123.60068512 461.44692993]
[-120.71308899 446.71646118]
[-116.47863770 432.31527710]
[-110.93346405 418.36624146]
[-104.12487793 404.98837280]
[-96.11096954 392.29577637]
[-86.96010590 380.39675903]
[-76.75036621 369.39285278]
[-65.56886292 359.37792969]
[-53.51098251 350.43746948]
[-40.67961121 342.64767456]
[-27.18421936 336.07507324]
[-13.13994884 330.77572632]
[1.33337784 326.79486084]
[16.11227608 324.16638184]
[31.07065582 322.91278076]
[46.08089447 323.04470825]
[61.01492310 324.56106567]
[63.90019608 309.84118652]
[66.78546906 295.12130737]
[69.67074585 280.40139771]
[72.55601501 265.68151855]
[74.22755432 250.77493286]
[74.67416382 235.78158569]
[75.12076569 220.78823853]
[75.56737518 205.79489136]
[76.01397705 190.80152893]
[67.19097900 202.93226624]
[53.78227997 209.65586853]
[38.78342819 209.47029114]
[25.54520226 202.41696167]
[17.02505684 190.07164001]
[15.12641048 175.19227600]
[20.27342987 161.10298157]
[31.31625557 150.95133972]
[45.78789139 147.00523376]
[60.45534134 150.14625549]
[72.04185486 159.67266846]
[77.95897675 173.45629883]
[80.84425354 158.73640442]
[83.72952271 144.01651001]
[78.58481598 130.03862000]
[88.83211517 117.98443604]
[80.55987549 108.38112640]
[79.25638580 95.77340698]
[85.38890839 84.68080902]
[96.75910187 79.07971954]
[99.86321259 64.40441132]
[102.96732330 49.72911072]
[106.07143402 35.05381012]
[97.71660614 21.90715218]
[101.07366943 7.06852770]
[113.65848541 -0.81550509]
[116.76259613 -15.49080753]
[119.86670685 -30.16610909]
[118.18383789 -36.55981445]
[119.74775696 -42.02343750]
[123.28789520 -45.22913361]
[126.82756805 -59.80550766]
[117.14624023 -69.61686707]
[113.60517883 -82.82592773]
[117.02600861 -95.95481110]
[126.41171265 -105.60118866]
[139.23406982 -109.31999207]
[142.99037170 -123.84204865]
[146.74667358 -138.36410522]
[150.50296021 -152.88616943]
[136.53421021 -158.40461731]
[123.34949493 -165.59788513]
[111.14871216 -174.35690308]
[100.11682129 -184.54891968]
[90.42105865 -196.01939392]
[82.20841217 -208.59445190]
[75.60337830 -222.08345032]
[70.70610046 -236.28190613]
[67.59080505 -250.97457886]
[66.30472565 -265.93872070]
[66.86736298 -280.94747925]
[69.27017975 -295.77334595]
[73.47675323 -310.19155884]
[79.42331696 -323.98348999]
[87.01971436 -336.94012451]
[96.15079498 -348.86502075]
[106.67812347 -359.57739258]
[118.44212341 -368.91485596]
[131.26443481 -376.73583984]
[144.95069885 -382.92178345]
[159.29341125 -387.37890625]
[174.07514954 -390.03967285]
[189.07183838 -390.86370850]
[204.05612183 -389.83856201]
[218.80084229 -386.97970581]
[233.08245850 -382.33053589]
[246.68449402 -375.96151733]
[259.40072632 -367.96920776]
[271.03839111 -358.47476196]
[281.42105103 -347.62213135]
[290.39132690 -335.57580566]
[297.81320190 -322.51843262]
[303.57418823 -308.64791870]
[307.58694458 -294.17459106]
[309.79061890 -279.31784058]
[310.15185547 -264.30285645]
[308.66513062 -249.35731506]
[305.35299683 -234.70776367]
[300.26565552 -220.57629395]
[293.48022461 -207.17712402]
[285.09960938 -194.71337891]
[275.25082397 -183.37402344]
[264.08319092 -173.33094788]
[251.76599121 -164.73638916]
[238.48596191 -157.72067261]
[224.44441223 -152.39012146]
[209.85423279 -148.82557678]
[194.93658447 -147.08103943]
[179.91761780 -147.18299866]
[165.02502441 -149.12986755]
[161.26872253 -134.60780334]
[157.51242065 -120.08574677]
[153.75611877 -105.56369019]
[164.59768677 -93.23737335]
[165.96955872 -76.71224976]
[157.13365173 -62.48452377]
[141.40394592 -56.26583481]
[137.86427307 -41.68946075]
[134.54200745 -27.06200027]
[131.43789673 -12.38669777]
[128.33378601 2.28860497]
[136.64831543 14.59325218]
[133.70935059 29.52031517]
[120.74673462 38.15792084]
[117.64262390 52.83322144]
[114.53851318 67.50852203]
[111.43440247 82.18383026]
[120.75035858 95.80663300]
[117.45539093 111.97793579]
[103.55200958 120.86971283]
[108.49034119 135.90046692]
[98.44941711 146.90177917]
[95.56414032 161.62167358]
[92.67887115 176.34156799]
[91.00733185 191.24813843]
[90.56072235 206.24148560]
[90.11412048 221.23484802]
[89.66751099 236.22819519]
[89.22090912 251.22154236]
[98.04390717 239.09080505]
[111.45260620 232.36720276]
[126.45145416 232.55279541]
[139.68968201 239.60610962]
[148.20982361 251.95144653]
[150.10847473 266.83081055]
[144.96145630 280.92010498]
[133.91862488 291.07174683]
[119.44699097 295.01785278]
[104.77954865 291.87683105]
[93.19303131 282.35040283]
[87.27590942 268.56677246]
[84.39063263 283.28668213]
[81.50536346 298.00656128]
[78.62008667 312.72647095]
[75.73481750 327.44635010]
[90.13620758 331.68008423]
[104.08552551 337.22454834]
[117.46375275 344.03247070]
[130.15673828 352.04574585]
[142.05621338 361.19601440]
[153.06062317 371.40521240]
[163.07609558 382.58621216]
[172.01718140 394.64364624]
[179.80760193 407.47463989]
[186.38087463 420.96969604]
[191.68092346 435.01370239]
[195.66253662 449.48681641]
[198.29173279 464.26559448]
[199.54609680 479.22390747]
[199.41490173 494.23416138]
[197.89929199 509.16824341]
[195.01217651 523.89880371]
[190.77821350 538.30010986]
[185.23350525 552.24932861]
[178.42535400 565.62744141]
[170.41186523 578.32031250]
[161.26141357 590.21966553]
[151.05203247 601.22387695]
[139.87086487 611.23919678]
[127.81328583 620.18005371]
[114.98217010 627.97027588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[61 163]
[62 162]
[63 161]
[65 159]
[69 156]
[70 155]
[71 154]
[72 153]
[75 150]
[76 149]
[77 148]
[80 147]
[81 146]
[86 142]
[87 141]
[88 140]
[89 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
