%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[32.47449875 535.50012207]
[30.99603653 550.44897461]
[27.57894325 565.07702637]
[22.28169250 579.13378906]
[15.19492340 592.37890625]
[6.43990135 604.58563232]
[-3.83356309 615.54516602]
[-15.44967842 625.06994629]
[-28.20967674 632.99694824]
[-41.89521790 639.19055176]
[-56.27212524 643.54479980]
[-71.09439087 645.98516846]
[-86.10838318 646.46997070]
[-101.05719757 644.99078369]
[-115.68504333 641.57299805]
[-129.74160767 636.27508545]
[-142.98637390 629.18768311]
[-155.19270325 620.43206787]
[-166.15171814 610.15808105]
[-175.67591858 598.54150391]
[-183.60232544 585.78112793]
[-189.79528809 572.09527588]
[-194.14886475 557.71820068]
[-196.58854675 542.89581299]
[-197.07258606 527.88177490]
[-195.59269714 512.93304443]
[-192.17420959 498.30535889]
[-186.87562561 484.24905396]
[-179.78759766 471.00460815]
[-171.03140259 458.79870605]
[-160.75689697 447.84017944]
[-149.13987732 438.31652832]
[-136.37911987 430.39074707]
[-122.69299316 424.19842529]
[-108.31567383 419.84552002]
[-93.49317932 417.40655518]
[-78.47913361 416.92321777]
[-63.53046036 418.40383911]
[-48.90294647 421.82299805]
[-34.84688568 427.12228394]
[-27.76977921 413.89672852]
[-20.69267273 400.67120361]
[-21.50984955 385.79904175]
[-8.17683887 377.28192139]
[-1.09973347 364.05639648]
[5.97737169 350.83087158]
[12.85678482 337.50143433]
[19.53697968 324.07104492]
[26.21717453 310.64068604]
[32.89736938 297.21029663]
[39.57756424 283.77993774]
[45.95616913 270.20373535]
[52.03000259 256.48846436]
[58.10383606 242.77319336]
[52.51562881 229.01428223]
[58.47998047 215.01852417]
[72.94947815 209.25039673]
[79.02330780 195.53512573]
[85.09714508 181.81985474]
[91.17097473 168.10458374]
[94.05625153 153.38470459]
[93.60964203 138.39134216]
[93.16304016 123.39799500]
[92.71643066 108.40464783]
[81.66884613 118.55110931]
[66.67716217 118.05171967]
[56.32929611 107.19253540]
[56.55298615 92.19420624]
[67.22008514 81.64844513]
[82.21999359 81.59635162]
[92.95970154 92.06688690]
[93.85252380 77.09348297]
[94.74533844 62.12007904]
[95.63815308 47.14667130]
[96.53096771 32.17326736]
[97.42378235 17.19985962]
[98.31659698 2.22645426]
[95.70389557 -3.84687376]
[96.44003296 -9.48204231]
[99.46546936 -13.17741776]
[100.80370331 -28.11760330]
[102.14193726 -43.05778885]
[99.79062653 -51.88440323]
[103.61293793 -58.20988464]
[105.17346191 -73.12848663]
[106.73398590 -88.04709625]
[108.29450989 -102.96569824]
[109.63274384 -117.90588379]
[110.63700104 -132.87222290]
[111.52981567 -147.84562683]
[112.42263031 -162.81904602]
[109.80956268 -171.57173157]
[113.44184113 -178.00822449]
[114.55749512 -192.96667480]
[115.67314148 -207.92512512]
[116.78878784 -222.88357544]
[102.49752045 -227.70129395]
[89.85379791 -235.92243958]
[79.65242767 -247.03021240]
[72.53467560 -260.32638550]
[68.94795990 -274.97515869]
[69.11775208 -290.05566406]
[73.03337097 -304.61996460]
[80.44869232 -317.75253296]
[90.89756775 -328.62780762]
[103.72318268 -336.56219482]
[118.11930847 -341.05691528]
[133.18098450 -341.82943726]
[147.96141052 -338.83120728]
[161.53150940 -332.25067139]
[173.03822327 -322.50149536]
[181.75825500 -310.19653320]
[187.14343262 -296.10928345]
[188.85525513 -281.12527466]
[186.78610229 -266.18643188]
[181.06605530 -252.23178101]
[172.05467224 -240.13856506]
[160.31843567 -230.66696167]
[146.59506226 -224.41235352]
[131.74723816 -221.76792908]
[130.63159180 -206.80947876]
[129.51594543 -191.85102844]
[128.40029907 -176.89256287]
[127.39603424 -161.92622375]
[126.50321960 -146.95281982]
[125.61040497 -131.97941589]
[128.35020447 -125.11535645]
[124.59119415 -116.79023743]
[126.97361755 -112.65101624]
[126.78109741 -106.97123718]
[123.21311188 -101.40517426]
[121.65258789 -86.48657227]
[120.09206390 -71.56797028]
[118.53153992 -56.64936066]
[117.08212280 -41.71955490]
[115.74388885 -26.77936745]
[114.40565491 -11.83918285]
[113.29000854 3.11927009]
[112.39719391 18.09267616]
[111.50437164 33.06608200]
[110.61155701 48.03948593]
[109.71874237 63.01289368]
[108.82592773 77.98629761]
[107.93311310 92.95970154]
[107.70978546 107.95803833]
[108.15638733 122.95139313]
[108.60299683 137.94474792]
[109.04959869 152.93809509]
[115.30735779 139.30575562]
[124.07165527 127.13254547]
[135.01483154 116.87355804]
[147.72778320 108.91233826]
[161.73519897 103.54652405]
[176.51342773 100.97670746]
[191.50997925 101.29897308]
[206.16415405 104.50127411]
[219.92814636 110.46389008]
[232.28735352 118.96389771]
[242.77970886 129.68351746]
[251.01296997 142.22200012]
[256.67932129 156.11058044]
[259.56689453 170.83001709]
[259.56777954 185.83001709]
[256.68194580 200.54978943]
[251.01724243 214.43904114]
[242.78547668 226.97848511]
[232.29437256 237.69935608]
[219.93618774 246.20082092]
[206.17289734 252.16506958]
[191.51908875 255.36911011]
[176.52259827 255.69314575]
[161.74406433 253.12509155]
[147.73600769 247.76092529]
[135.02210999 239.80120850]
[124.07772064 229.54351807]
[115.31198120 217.37133789]
[109.05261230 203.73974609]
[105.53362274 189.15837097]
[104.88624573 174.17842102]
[98.81240845 187.89369202]
[92.73857880 201.60896301]
[86.66474152 215.32421875]
[92.11814117 229.91525269]
[85.76303101 243.73796082]
[71.81909943 248.84701538]
[65.74526978 262.56228638]
[59.67143631 276.27755737]
[60.22911835 281.46755981]
[58.87559509 285.90841675]
[56.21626282 288.99758911]
[53.00793839 290.46011353]
[46.32774353 303.89050293]
[39.64754868 317.32086182]
[32.96735382 330.75125122]
[26.28716087 344.18164062]
[26.31529999 350.79302979]
[23.43300819 355.69094849]
[19.20289993 357.90795898]
[12.12579441 371.13348389]
[5.04868841 384.35900879]
[5.35966206 400.17718506]
[-7.46714592 407.74832153]
[-14.54425144 420.97384644]
[-21.62135696 434.19937134]
[-9.41419601 442.95382690]
[1.54580700 453.22674561]
[11.07111073 464.84240723]
[18.99872589 477.60205078]
[25.19300079 491.28729248]
[29.54794121 505.66400146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 204]
[41 203]
[42 202]
[44 200]
[45 199]
[46 198]
[47 195]
[48 194]
[49 193]
[50 192]
[51 191]
[52 187]
[53 186]
[54 185]
[57 182]
[58 181]
[59 180]
[60 179]
[61 148]
[62 147]
[63 146]
[64 145]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[80 137]
[81 136]
[82 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 128]
[89 126]
[90 125]
[91 124]
[93 123]
[94 122]
[95 121]
[96 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
