%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[196.60232544 436.84347534]
[195.30484009 421.88943481]
[195.35305786 406.87933350]
[196.74659729 391.93392944]
[199.47422791 377.17364502]
[203.51399231 362.71728516]
[208.83335876 348.68124390]
[215.38951111 335.17852783]
[223.12965393 322.31787109]
[231.99147034 310.20281982]
[241.90359497 298.93090820]
[252.78623962 288.59292603]
[243.47135925 276.83566284]
[234.15647888 265.07843018]
[224.84159851 253.32116699]
[215.52671814 241.56391907]
[206.21183777 229.80665588]
[196.89694214 218.04940796]
[187.58206177 206.29216003]
[178.26718140 194.53491211]
[168.43659973 183.20530701]
[158.10993958 172.32597351]
[147.78326416 161.44664001]
[137.45660400 150.56730652]
[123.08279419 146.66307068]
[119.19392395 131.32725525]
[108.86725616 120.44791412]
[101.98242950 117.76071930]
[98.46932220 109.32888031]
[93.41301727 107.93325043]
[89.49859619 103.80400848]
[88.17343140 97.81394196]
[78.34284973 86.48435211]
[68.51226807 75.15475464]
[58.68169022 63.82516479]
[43.79341125 58.47261810]
[41.29634094 43.78881836]
[31.46576118 32.45922852]
[21.63518143 21.12963295]
[23.36564636 36.02948380]
[18.05981827 50.05974197]
[6.90303659 60.08601761]
[-7.61224794 63.86841583]
[-22.24328232 60.56193161]
[-33.72145844 50.90525055]
[-39.48251724 37.05569839]
[-38.23942947 22.10729408]
[-30.26990128 9.39955616]
[-17.35434532 1.77142286]
[-2.37813067 0.92703927]
[11.31303596 7.05505657]
[3.46128082 -5.72578621]
[-12.93033123 -14.11605263]
[-12.72455406 -31.66383171]
[-20.76572609 -44.32635880]
[-28.80690002 -56.98888397]
[-36.84807205 -69.65140533]
[-50.29391098 -62.97105408]
[-64.36438751 -57.73279572]
[-78.90534210 -53.99401855]
[-93.75744629 -51.79569244]
[-108.75798035 -51.16190338]
[-123.74259186 -52.09959030]
[-138.54708862 -54.59848022]
[-153.00927734 -58.63119888]
[-166.97070312 -64.15355682]
[-180.27838135 -71.10505676]
[-192.78651428 -79.40952301]
[-204.35807800 -88.97596741]
[-214.86624146 -99.69958496]
[-224.19592285 -111.46287537]
[-232.24485779 -124.13695526]
[-238.92488098 -137.58294678]
[-244.16279602 -151.65356445]
[-247.90122986 -166.19459534]
[-250.09919739 -181.04676819]
[-250.73262024 -196.04731750]
[-249.79457092 -211.03189087]
[-247.29531860 -225.83633423]
[-243.26225281 -240.29843140]
[-237.73954773 -254.25970459]
[-230.78773499 -267.56723022]
[-222.48295593 -280.07516479]
[-212.91622925 -291.64648438]
[-202.19235229 -302.15438843]
[-190.42884827 -311.48379517]
[-177.75456238 -319.53240967]
[-164.30841064 -326.21212769]
[-150.23767090 -331.44967651]
[-135.69653320 -335.18774414]
[-120.84432220 -337.38537598]
[-105.84375763 -338.01843262]
[-90.85919952 -337.08001709]
[-76.05481720 -334.58041382]
[-61.59282684 -330.54696655]
[-47.63167572 -325.02395630]
[-34.32432938 -318.07180786]
[-21.81659317 -309.76672363]
[-10.24550819 -300.19970703]
[0.26214707 -289.47558594]
[9.59124470 -277.71185303]
[17.63957024 -265.03738403]
[24.31894302 -251.59104919]
[29.55617714 -237.52018738]
[33.29389191 -222.97897339]
[35.49113846 -208.12669373]
[36.12383652 -193.12611389]
[35.18505859 -178.14158630]
[32.68508530 -163.33726501]
[28.65131378 -148.87536621]
[23.12793732 -134.91435242]
[16.17547226 -121.60717773]
[7.87009478 -109.09963989]
[-1.69719696 -97.52878571]
[-12.42157841 -87.02139282]
[-24.18554688 -77.69258118]
[-16.14437485 -65.03005219]
[-8.10320187 -52.36753082]
[-0.06202890 -39.70500565]
[11.67170620 -36.76459122]
[18.47457123 -26.28104401]
[16.24212265 -13.57754135]
[24.09387970 -0.79669905]
[32.96477509 11.29905319]
[42.79535675 22.62864685]
[52.62593460 33.95824051]
[66.81106567 38.50041580]
[70.01128387 53.99458313]
[79.84186554 65.32417297]
[89.67243958 76.65377045]
[99.50302124 87.98336029]
[109.50119781 99.16533661]
[119.74658966 110.12124634]
[130.07325745 121.00057983]
[145.18568420 125.68299103]
[148.33593750 140.24064636]
[158.66259766 151.11997986]
[168.98927307 161.99931335]
[179.31593323 172.87864685]
[180.78845215 157.95109558]
[192.29710388 148.33074951]
[207.24919128 149.52857971]
[217.07951355 160.85839844]
[216.15678406 175.83000183]
[205.00959778 185.86694336]
[190.02442932 185.22003174]
[199.33932495 196.97727966]
[208.65420532 208.73452759]
[217.96908569 220.49177551]
[227.28396606 232.24902344]
[236.59884644 244.00628662]
[245.91372681 255.76353455]
[255.22860718 267.52078247]
[264.54348755 279.27804565]
[277.09667969 271.04858398]
[290.33703613 263.97756958]
[304.15792847 258.12185669]
[318.44805908 253.52862549]
[333.09243774 250.23486328]
[347.97308350 248.26708984]
[362.97024536 247.64112854]
[377.96313477 248.36204529]
[392.83102417 250.42402649]
[407.45425415 253.81047058]
[421.71502686 258.49411011]
[435.49853516 264.43722534]
[448.69384766 271.59194946]
[461.19467163 279.90072632]
[472.90036011 289.29663086]
[483.71667480 299.70401001]
[493.55654907 311.03906250]
[502.34069824 323.21054077]
[509.99844360 336.12042236]
[516.46813965 349.66476440]
[521.69763184 363.73452759]
[525.64489746 378.21643066]
[528.27807617 392.99386597]
[529.57604980 407.94784546]
[529.52825928 422.95797729]
[528.13519287 437.90341187]
[525.40802002 452.66378784]
[521.36871338 467.12026978]
[516.04974365 481.15646362]
[509.49401855 494.65939331]
[501.75427246 507.52026367]
[492.89282227 519.63562012]
[482.98104858 530.90777588]
[472.09869385 541.24615479]
[460.33346558 550.56738281]
[447.77999878 558.79638672]
[434.53945923 565.86706543]
[420.71838379 571.72235107]
[406.42810059 576.31512451]
[391.78363037 579.60845947]
[376.90289307 581.57574463]
[361.90573120 582.20123291]
[346.91287231 581.47985840]
[332.04504395 579.41741943]
[317.42193604 576.03057861]
[303.16128540 571.34649658]
[289.37796021 565.40295410]
[276.18289185 558.24780273]
[263.68231201 549.93865967]
[251.97689819 540.54241943]
[241.16090393 530.13470459]
[231.32138062 518.79931641]
[222.53758240 506.62759399]
[214.88023376 493.71749878]
[208.41096497 480.17294312]
[203.18186951 466.10299683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 154]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 139]
[22 138]
[23 137]
[24 136]
[26 134]
[27 133]
[29 132]
[32 131]
[33 130]
[34 129]
[35 128]
[37 126]
[38 125]
[39 124]
[51 123]
[52 122]
[54 119]
[55 118]
[56 117]
[57 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
