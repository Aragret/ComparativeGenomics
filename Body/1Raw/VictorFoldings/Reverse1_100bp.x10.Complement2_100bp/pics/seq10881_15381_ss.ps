%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[161.80157471 558.21429443]
[167.69927979 544.34655762]
[176.63661194 532.21313477]
[188.13159180 522.46826172]
[201.56431580 515.63757324]
[198.02464294 501.06115723]
[194.48497009 486.48480225]
[190.94529724 471.90841675]
[187.40562439 457.33203125]
[172.68247986 449.20382690]
[168.30734253 432.61547852]
[177.45982361 417.70739746]
[173.70352173 403.18533325]
[169.94721985 388.66326904]
[159.26928711 378.27911377]
[163.30421448 362.98107910]
[159.54791260 348.45901489]
[144.70539856 340.55090332]
[140.08377075 324.02954102]
[149.01327515 308.98681641]
[145.04118347 294.52230835]
[141.06907654 280.05776978]
[137.09698486 265.59326172]
[122.65181732 261.95971680]
[111.89329529 251.51412964]
[107.78054810 236.98995972]
[111.51445007 222.26057434]
[122.18928528 211.30635071]
[118.21718597 196.84182739]
[114.24509430 182.37728882]
[110.27299500 167.91276550]
[106.30090332 153.44824219]
[95.94628143 147.19456482]
[92.51868439 135.17643738]
[98.38008881 123.68701935]
[94.62378693 109.16496277]
[89.90365601 94.92697144]
[84.24086761 81.03694916]
[78.57807922 67.14691925]
[72.70912170 53.34274292]
[66.63528442 39.62747574]
[54.90618134 34.26176453]
[50.12962723 22.71324348]
[54.36226273 11.38136959]
[48.49330139 -2.42280674]
[42.62434006 -16.22698402]
[36.75537872 -30.03116035]
[24.23539734 -39.70383453]
[26.37614441 -54.44379425]
[19.77526665 -40.97425842]
[5.62859011 -35.98712158]
[-7.96002769 -42.33924484]
[-13.20640945 -56.39184189]
[-7.10518837 -70.09494781]
[6.84857798 -75.59880066]
[20.66086960 -69.75122070]
[16.04685974 -84.02394867]
[11.43285084 -98.29668427]
[6.81884193 -112.56941986]
[2.20483279 -126.84215546]
[-3.76673007 -140.60224915]
[-11.03995991 -153.72094727]
[-18.31318855 -166.83964539]
[-25.58641815 -179.95834351]
[-39.53145218 -174.37808228]
[-54.06592941 -170.58964539]
[-68.96061707 -168.65278625]
[-83.98061371 -168.59805298]
[-98.88902283 -170.42630005]
[-113.45072937 -174.10870361]
[-127.43605804 -179.58718872]
[-140.62445068 -186.77534485]
[-152.80790710 -195.55979919]
[-163.79426575 -205.80201721]
[-173.41027832 -217.34045410]
[-181.50427246 -229.99314880]
[-187.94857788 -243.56053162]
[-192.64158630 -257.82864380]
[-195.50927734 -272.57244873]
[-196.50640869 -287.55938721]
[-195.61726379 -302.55316162]
[-192.85586548 -317.31723022]
[-188.26577759 -331.61877441]
[-181.91935730 -345.23223877]
[-173.91673279 -357.94290161]
[-164.38409424 -369.55032349]
[-153.47180176 -379.87142944]
[-141.35194397 -388.74340820]
[-128.21566772 -396.02639771]
[-114.27017212 -401.60546875]
[-99.73537445 -405.39266968]
[-84.84052277 -407.32827759]
[-69.82052612 -407.38174438]
[-54.91226578 -405.55224609]
[-40.35087585 -401.86862183]
[-26.36600304 -396.38897705]
[-13.17821503 -389.19970703]
[-0.99549979 -380.41421509]
[9.99000454 -370.17108154]
[19.60503960 -358.63183594]
[27.69796371 -345.97845459]
[34.14113617 -332.41052246]
[38.83294678 -318.14202881]
[41.69939041 -303.39797974]
[42.69526291 -288.41094971]
[41.80485535 -273.41726685]
[39.04221725 -258.65341187]
[34.45091248 -244.35226440]
[28.10335541 -230.73933411]
[20.09965706 -218.02932739]
[10.56604385 -206.42271423]
[-0.34712139 -196.10253906]
[-12.46772480 -187.23156738]
[-5.19449520 -174.11286926]
[2.07873440 -160.99418640]
[9.35196400 -147.87548828]
[10.02243137 -162.86048889]
[16.65691185 -176.31350708]
[28.13737869 -185.96746826]
[42.52917099 -190.19549561]
[57.40702438 -188.28511047]
[70.26374817 -180.55824280]
[78.93276978 -168.31700134]
[81.95320129 -153.62423706]
[78.81604767 -138.95596313]
[70.04997253 -126.78403473]
[57.13221741 -119.15962982]
[42.23965073 -117.36759186]
[27.88192749 -121.70992279]
[16.47756577 -131.45616150]
[21.09157562 -117.18342590]
[25.70558548 -102.91069794]
[30.31959343 -88.63796234]
[34.93360138 -74.36522675]
[40.18032074 -60.31275558]
[52.28051758 -51.62744904]
[50.55955505 -35.90011978]
[56.42851639 -22.09594536]
[62.29747772 -8.29176807]
[68.16644287 5.51240921]
[82.73608398 15.29465199]
[80.35055542 33.55364227]
[86.42438507 47.26890945]
[90.47788239 49.79442215]
[92.98790741 54.89312744]
[92.46810913 61.48413467]
[98.13089752 75.37416077]
[103.79368591 89.26419067]
[107.98250580 74.86093140]
[119.22314453 64.92876434]
[134.03256226 62.54526901]
[147.82191467 68.44900513]
[156.31838989 80.81062317]
[156.88929749 95.79975891]
[149.35771179 108.77185059]
[136.05738831 115.70736694]
[121.10956573 114.45725250]
[109.14585114 105.40866089]
[112.90215302 119.93072510]
[126.11066437 132.76103210]
[120.76542664 149.47615051]
[124.73751831 163.94067383]
[128.70960999 178.40519714]
[132.68171692 192.86972046]
[136.65380859 207.33424377]
[151.42594910 211.30049133]
[162.15858459 222.05723572]
[166.04022217 236.64486694]
[162.12515259 251.11996460]
[151.56150818 261.62115479]
[155.53359985 276.08569336]
[159.50570679 290.55020142]
[163.47779846 305.01473999]
[175.87294006 310.28494263]
[182.86749268 321.56707764]
[182.09834290 334.62426758]
[174.06997681 344.70269775]
[177.82627869 359.22476196]
[188.77288818 370.64764404]
[184.46928406 384.90698242]
[188.22558594 399.42904663]
[191.98188782 413.95108032]
[204.29719543 419.40524292]
[211.12298584 430.79028320]
[210.15953064 443.83459473]
[201.98199463 453.79235840]
[205.52166748 468.36874390]
[209.06134033 482.94512939]
[212.60101318 497.52148438]
[216.14068604 512.09790039]
[231.21014404 512.00720215]
[245.89416504 515.39483643]
[259.40087891 522.07812500]
[271.00186157 531.69653320]
[280.07150269 543.73138428]
[286.12066650 557.53369141]
[288.82315063 572.35913086]
[288.03323364 587.40814209]
[283.79345703 601.86920166]
[276.33251953 614.96234131]
[266.05273438 625.98156738]
[253.50852966 634.33258057]
[239.37635803 639.56500244]
[224.41836548 641.39672852]
[209.44120789 639.72888184]
[195.25260925 634.65148926]
[182.61770630 626.43829346]
[172.21791077 615.53228760]
[164.61405945 602.52160645]
[160.21621704 588.10791016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[12 182]
[13 181]
[14 180]
[16 178]
[17 177]
[20 173]
[21 172]
[22 171]
[23 170]
[28 165]
[29 164]
[30 163]
[31 162]
[32 161]
[35 159]
[36 158]
[37 148]
[38 147]
[39 146]
[40 143]
[41 142]
[44 140]
[45 139]
[46 138]
[47 137]
[49 135]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[61 116]
[62 115]
[63 114]
[64 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
