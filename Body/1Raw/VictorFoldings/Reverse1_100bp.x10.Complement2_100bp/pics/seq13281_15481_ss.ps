%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[45.91668701 719.65710449]
[31.03118706 721.60656738]
[16.02554893 722.06420898]
[1.04891109 721.02551270]
[-13.74987698 718.50073242]
[-28.22373581 714.51501465]
[-42.22881317 709.10791016]
[-55.62591553 702.33325195]
[-68.28189850 694.25830078]
[-80.07096863 684.96331787]
[-90.87596130 674.54077148]
[-100.58949280 663.09405518]
[-109.11502075 650.73712158]
[-116.36780548 637.59271240]
[-122.27577972 623.79150391]
[-126.78021240 609.47058105]
[-129.83633423 594.77227783]
[-131.41377258 579.84277344]
[-131.49687195 564.83038330]
[-130.08477783 549.88433838]
[-127.19152832 535.15319824]
[-122.84588623 520.78326416]
[-117.09104156 506.91748047]
[-109.98419189 493.69357300]
[-101.59596252 481.24304199]
[-92.00973511 469.68954468]
[-81.32076263 459.14797974]
[-69.63529968 449.72311401]
[-57.06947708 441.50854492]
[-43.74818420 434.58599854]
[-29.80381584 429.02423096]
[-15.37496090 424.87854004]
[-0.60502595 422.19012451]
[14.35919666 420.98568726]
[29.36898041 421.27722168]
[31.15144730 406.38351440]
[32.93391418 391.48977661]
[34.71637726 376.59606934]
[36.49884415 361.70236206]
[34.17245483 354.68737793]
[38.42032623 346.60076904]
[40.42433929 331.73522949]
[27.87022209 339.94464111]
[13.16058064 337.00753784]
[4.72176695 324.60647583]
[7.38791609 309.84533691]
[19.63173676 301.17996216]
[34.43941116 303.57424927]
[43.32820129 315.65576172]
[46.65046310 301.02832031]
[49.97272110 286.40084839]
[53.29498291 271.77340698]
[56.61724091 257.14593506]
[59.93949890 242.51847839]
[55.21324921 228.39361572]
[65.81490326 216.64987183]
[61.08865356 202.52499390]
[71.69030762 190.78126526]
[75.01256561 176.15379333]
[78.33482361 161.52633667]
[81.65708923 146.89888000]
[84.97934723 132.27142334]
[88.30160522 117.64395905]
[79.18950653 103.88395691]
[82.72487640 87.76351166]
[96.75910187 79.07971954]
[99.86321259 64.40441132]
[102.96732330 49.72911072]
[106.07143402 35.05381012]
[95.13918304 19.58124542]
[98.92317963 1.34407794]
[114.56301880 -8.16965866]
[117.22881317 -22.93087578]
[119.89460754 -37.69209290]
[122.56040192 -52.45331192]
[125.22620392 -67.21453094]
[127.89199829 -81.97574615]
[126.33753204 -90.97693634]
[130.70893860 -96.93618774]
[133.59420776 -111.65607452]
[134.26399231 -126.64111328]
[132.70346069 -141.55972290]
[123.19353485 -150.27316284]
[122.20090485 -162.73103333]
[129.71401978 -172.21151733]
[128.37577820 -187.15170288]
[127.03754425 -202.09188843]
[125.58812714 -217.02169800]
[124.02760315 -231.94030762]
[122.46707916 -246.85890198]
[120.90655518 -261.77752686]
[119.34603119 -276.69610596]
[104.51345825 -279.60919189]
[91.19928741 -286.76632690]
[80.58740997 -297.53103638]
[73.62142181 -310.94619751]
[70.92073822 -325.81893921]
[72.72550964 -340.82672119]
[78.87524414 -354.63513184]
[88.82311249 -366.01632690]
[101.68456268 -373.95825195]
[116.31596375 -377.75476074]
[131.41630554 -377.06826782]
[145.64286804 -371.95980835]
[157.73062134 -362.88360596]
[166.60476685 -350.64672852]
[171.47618103 -336.33728027]
[171.91172791 -321.22763062]
[167.87268066 -306.66131592]
[159.71817017 -293.93356323]
[148.17330933 -284.17614746]
[134.26463318 -278.25665283]
[135.82516479 -263.33804321]
[137.38568115 -248.41943359]
[138.94621277 -233.50082397]
[140.50672913 -218.58222961]
[144.32904053 -212.25674438]
[141.97772217 -203.43013000]
[143.31596375 -188.48994446]
[144.65419006 -173.54975891]
[155.50842285 -159.76016235]
[147.62207031 -143.12023926]
[149.18260193 -128.20164490]
[154.58779907 -142.19390869]
[163.67036438 -154.13154602]
[175.71397400 -163.07308960]
[189.76884460 -168.31338501]
[204.72654724 -169.43914795]
[219.40744019 -166.36160278]
[232.65373230 -159.32344055]
[243.42077637 -148.87974548]
[250.85943604 -135.85414124]
[254.38305664 -121.27388000]
[253.71376038 -106.28881836]
[248.90432739 -92.08074951]
[240.33404541 -79.77017212]
[228.67880249 -70.32794952]
[214.85778809 -64.49874878]
[199.96099854 -62.74226761]
[185.16322327 -65.19703674]
[171.63148499 -71.66946411]
[160.43296814 -81.64910889]
[152.45083618 -94.34893036]
[148.31410217 -108.77080536]
[145.42881775 -94.05091095]
[142.65321350 -79.30995178]
[139.98741150 -64.54872894]
[137.32162476 -49.78751373]
[134.65582275 -35.02629852]
[131.99003601 -20.26507950]
[129.32423401 -5.50386286]
[137.70631409 2.23609209]
[141.34893799 13.17442036]
[139.23739624 24.63021851]
[131.78250122 33.73656082]
[120.74673462 38.15792084]
[117.64262390 52.83322144]
[114.53851318 67.50852203]
[111.43440247 82.18383026]
[119.56275177 91.90924072]
[120.67839050 104.53496552]
[114.38139343 115.53502655]
[102.92906189 120.96621704]
[99.60680389 135.59367371]
[96.28454590 150.22113037]
[92.96228790 164.84860229]
[89.64002991 179.47605896]
[86.31776428 194.10351562]
[90.80638885 209.27464294]
[80.44236755 219.97212219]
[84.93098450 235.14324951]
[74.56696320 245.84072876]
[71.24469757 260.46820068]
[67.92243958 275.09564209]
[64.60018158 289.72311401]
[61.27792358 304.35058594]
[57.95566177 318.97802734]
[55.28986740 333.73925781]
[53.28585434 348.60476685]
[51.39256287 363.48480225]
[49.61009598 378.37854004]
[47.82762909 393.27224731]
[46.04516220 408.16595459]
[44.26269913 423.05969238]
[58.91737366 426.31835938]
[73.17476654 431.02001953]
[86.89316559 437.11788940]
[99.93622589 444.55142212]
[112.17433167 453.24667358]
[123.48583984 463.11724854]
[133.75833130 474.06506348]
[142.88970947 485.98129272]
[150.78921509 498.74749756]
[157.37835693 512.23681641]
[162.59162903 526.31518555]
[166.37722778 540.84271240]
[168.69750977 555.67492676]
[169.52944946 570.66442871]
[168.86474609 585.66235352]
[166.71000671 600.51953125]
[163.08666992 615.08831787]
[158.03074646 629.22393799]
[151.59245300 642.78594971]
[143.83581543 655.63946533]
[134.83790588 667.65679932]
[124.68814850 678.71850586]
[113.48742676 688.71459961]
[101.34706116 697.54583740]
[88.38771057 705.12432861]
[74.73817444 711.37481689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[41 179]
[42 178]
[49 177]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[56 170]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[63 163]
[66 159]
[67 158]
[68 157]
[69 156]
[72 151]
[73 150]
[74 149]
[75 148]
[76 147]
[77 146]
[79 145]
[80 144]
[81 123]
[82 122]
[85 120]
[86 119]
[87 118]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
