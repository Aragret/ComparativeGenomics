%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[172.18162537 513.86236572]
[185.17474365 506.13772583]
[181.63507080 491.56134033]
[178.09539795 476.98498535]
[171.81632996 490.60751343]
[159.22669983 498.76232910]
[144.22755432 498.92260742]
[131.46655273 491.03866577]
[124.89780426 477.55343628]
[126.55672455 462.64544678]
[135.92927551 450.93411255]
[150.11126709 446.04833984]
[164.70826721 449.50198364]
[175.19734192 460.22515869]
[173.63682556 445.30657959]
[172.07629395 430.38796997]
[170.51577759 415.46936035]
[168.95524597 400.55075073]
[167.39472961 385.63214111]
[164.94900513 370.83288574]
[161.62673950 356.20541382]
[158.30447388 341.57794189]
[154.98222351 326.95050049]
[151.65995789 312.32302856]
[137.05946350 303.97653198]
[132.93179321 287.32489014]
[142.30522156 272.55468750]
[138.76554871 257.97833252]
[135.22587585 243.40194702]
[131.68620300 228.82557678]
[128.14653015 214.24919128]
[124.28222656 199.75550842]
[120.09521484 185.35171509]
[115.90820312 170.94793701]
[111.72119141 156.54415894]
[107.10718536 142.27142334]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[75.35801697 60.07204056]
[73.20320892 56.76729584]
[72.33792877 53.31958771]
[72.64467621 50.16165924]
[73.87502289 47.64285278]
[69.68801117 33.23907089]
[65.50099945 18.83528900]
[61.31399155 4.43150759]
[58.07457352 1.54011643]
[56.12028885 -1.88702452]
[55.46175385 -5.38012314]
[55.95592117 -8.51419544]
[57.33401108 -10.95530319]
[54.01175308 -25.58276367]
[50.68949127 -40.21022415]
[45.73711014 -47.88562012]
[47.42837524 -55.08016205]
[44.32426453 -69.75546265]
[41.22015762 -84.43076324]
[38.11604691 -99.10606384]
[35.01193619 -113.78137207]
[29.66758537 -99.76573944]
[18.83101273 -89.39420319]
[4.59458876 -84.66935730]
[-10.29285526 -86.50347900]
[-22.95678711 -94.54243469]
[-30.95200157 -107.23402405]
[-32.73474503 -122.12770844]
[-27.96080017 -136.34774780]
[-17.55193901 -147.14846802]
[-3.51795220 -152.44442749]
[11.43142033 -151.21305847]
[24.40968704 -143.69210815]
[32.91142273 -131.33259583]
[32.46481705 -146.32594299]
[32.01821136 -161.31929016]
[31.57160568 -176.31263733]
[31.12499809 -191.30598450]
[30.67839241 -206.29934692]
[30.23178673 -221.29269409]
[29.78518105 -236.28604126]
[29.33857536 -251.27938843]
[18.11737633 -262.08322144]
[17.87804222 -277.29495239]
[28.24698257 -287.92608643]
[27.80037689 -302.91943359]
[12.93643188 -305.23843384]
[-1.24823105 -310.24942017]
[-14.27048683 -317.78170776]
[-25.68680382 -327.57876587]
[-35.10834503 -339.30691528]
[-42.21421432 -352.56668091]
[-46.76239395 -366.90643311]
[-48.59796906 -381.83779907]
[-47.65842438 -396.85217285]
[-43.97576141 -411.43820190]
[-37.67540359 -425.09912109]
[-28.97194481 -437.36959839]
[-18.16182137 -447.83169556]
[-5.61321878 -456.12911987]
[8.24645996 -461.97924805]
[22.94515991 -465.18283081]
[37.98224640 -465.63073730]
[52.84556580 -463.30770874]
[67.02887726 -458.29290771]
[80.04910278 -450.75711060]
[91.46277618 -440.95697021]
[100.88115692 -429.22628784]
[107.98345184 -415.96463013]
[112.52777100 -401.62362671]
[114.35932159 -386.69177246]
[113.41572571 -371.67764282]
[109.72913361 -357.09259033]
[103.42509460 -343.43341064]
[94.71832275 -331.16528320]
[83.90538025 -320.70608521]
[71.35454559 -312.41201782]
[57.49328995 -306.56564331]
[42.79372787 -303.36602783]
[43.24033356 -288.37268066]
[54.22366714 -278.37759399]
[54.89017487 -263.17855835]
[44.33192444 -251.72599792]
[44.77853012 -236.73265076]
[45.22513580 -221.73930359]
[45.67174149 -206.74594116]
[46.11834717 -191.75259399]
[46.56495285 -176.75924683]
[47.01156235 -161.76589966]
[47.45816803 -146.77255249]
[47.90477371 -131.77919006]
[49.68723679 -116.88548279]
[52.79134750 -102.21017456]
[55.89545822 -87.53487396]
[58.99956894 -72.85957336]
[62.10367966 -58.18426895]
[65.31695557 -43.53248215]
[68.63921356 -28.90502357]
[71.96147156 -14.27756310]
[75.71777344 0.24449651]
[79.90478516 14.64827824]
[84.09179688 29.05206108]
[88.27880859 43.45584106]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[121.23621368 137.23451233]
[124.64198303 139.92796326]
[126.79679108 143.23269653]
[127.66207123 146.68040466]
[127.35532379 149.83833313]
[126.12497711 152.35714722]
[130.31198120 166.76092529]
[134.49899292 181.16470337]
[138.68600464 195.56849670]
[142.45526123 199.17956543]
[144.27999878 203.44847107]
[144.23526001 207.52438354]
[142.72291565 210.70951843]
[146.26257324 225.28590393]
[149.80224609 239.86227417]
[153.34191895 254.43864441]
[156.88159180 269.01501465]
[169.11433411 274.65194702]
[175.76986694 286.13732910]
[174.61230469 299.16583252]
[166.28742981 309.00076294]
[169.60968018 323.62823486]
[172.93194580 338.25570679]
[176.25419617 352.88314819]
[179.57646179 367.51062012]
[186.70550537 354.31301880]
[200.18009949 347.72247314]
[214.97456360 350.19711304]
[225.57092285 360.81393433]
[228.01699829 375.61315918]
[221.40046692 389.07501221]
[208.18913269 396.17855835]
[193.31048584 394.27435303]
[182.31333923 384.07162476]
[183.87385559 398.99023438]
[185.43437195 413.90884399]
[186.99490356 428.82745361]
[188.55541992 443.74603271]
[190.11595154 458.66464233]
[192.67178345 473.44531250]
[196.21145630 488.02166748]
[199.75112915 502.59805298]
[214.83992004 503.50338745]
[228.99093628 508.81753540]
[240.94586182 518.06799316]
[249.64166260 530.43225098]
[254.30514526 544.81079102]
[254.52162170 559.92523193]
[250.27183533 574.43145752]
[241.93367004 587.03961182]
[230.24856567 596.62866211]
[216.25555420 602.34594727]
[201.19886780 603.68298340]
[186.41735840 600.52099609]
[173.22537231 593.14111328]
[162.79592896 582.19952393]
[156.05642700 568.66918945]
[153.60610962 553.75317383]
[155.66288757 538.77783203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 186]
[19 185]
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 160]
[33 159]
[34 158]
[35 157]
[36 152]
[37 151]
[38 150]
[40 148]
[41 147]
[42 146]
[47 145]
[48 144]
[49 143]
[50 142]
[55 141]
[56 140]
[57 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[76 133]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[84 125]
[87 122]
[88 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
