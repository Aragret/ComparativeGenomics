%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[183.60035706 409.86541748]
[186.65373230 395.16314697]
[191.33406067 380.89520264]
[197.58250427 367.24099731]
[205.32048035 354.37228394]
[214.45065308 342.45089722]
[224.85821533 331.62670898]
[236.41227722 322.03591919]
[228.18347168 309.49450684]
[219.95466614 296.95312500]
[208.17845154 294.18771362]
[201.22026062 283.80661011]
[203.26332092 271.07128906]
[195.22215271 258.40875244]
[187.18096924 245.74623108]
[173.82658386 239.15007019]
[172.96018982 223.35261536]
[164.91902161 210.69007874]
[156.78379822 198.08776855]
[148.55499268 185.54637146]
[131.95733643 182.83407593]
[122.26596832 168.67807007]
[125.88095856 151.56225586]
[117.46633911 139.14476013]
[109.05172729 126.72726440]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[70.11616516 69.26985931]
[61.70154190 56.85236359]
[53.19471741 44.49785233]
[43.61959839 32.95155334]
[33.13209534 22.22717285]
[22.64459419 11.50279236]
[12.15709400 0.77841300]
[1.66959250 -9.94596672]
[-8.89745522 -20.59197617]
[-19.54346466 -31.15902328]
[-30.18947220 -41.72607040]
[-27.35560226 -26.99619675]
[-31.60320854 -12.61016846]
[-41.98336792 -1.78185987]
[-56.17712784 3.06965685]
[-71.01356506 0.86054021]
[-83.17817688 -7.91568756]
[-89.95336151 -21.29839516]
[-89.82553101 -36.29784775]
[-82.82323456 -49.56313705]
[-70.51080322 -58.13075638]
[-55.63887405 -60.08668137]
[-41.52984619 -54.99393845]
[-50.31045151 -67.15539551]
[-59.09105301 -79.31684875]
[-67.87165833 -91.47830963]
[-76.65225983 -103.63976288]
[-85.43286133 -115.80121613]
[-94.21346283 -127.96267700]
[-107.32661438 -120.64407349]
[-121.20074463 -114.89733887]
[-135.64822388 -110.80017853]
[-150.47367859 -108.40801239]
[-165.47660828 -107.75318909]
[-180.45410156 -108.84456635]
[-195.20361328 -111.66738129]
[-209.52568054 -116.18345642]
[-223.22660828 -122.33171844]
[-236.12110901 -130.02902222]
[-248.03479004 -139.17126465]
[-258.80654907 -149.63482666]
[-268.29067993 -161.27816772]
[-276.35894775 -173.94384766]
[-282.90225220 -187.46057129]
[-287.83206177 -201.64555359]
[-291.08172607 -216.30693054]
[-292.60729980 -231.24644470]
[-292.38815308 -246.26205444]
[-290.42724609 -261.15069580]
[-286.75109863 -275.71099854]
[-281.40942383 -289.74606323]
[-274.47448730 -303.06607056]
[-266.04000854 -315.49090576]
[-256.22012329 -326.85250854]
[-245.14759827 -336.99725342]
[-232.97219849 -345.78793335]
[-219.85855103 -353.10565186]
[-205.98403931 -358.85147095]
[-191.53628540 -362.94766235]
[-176.71067810 -365.33883667]
[-161.70770264 -365.99267578]
[-146.73028564 -364.90029907]
[-131.98095703 -362.07647705]
[-117.65918732 -357.55944824]
[-103.95867157 -351.41027832]
[-91.06468964 -343.71212769]
[-79.15161896 -334.56906128]
[-68.38056183 -324.10479736]
[-58.89719772 -312.46081543]
[-50.82976913 -299.79461670]
[-44.28738022 -286.27743530]
[-39.35851288 -272.09213257]
[-36.10982132 -257.43054199]
[-34.58523941 -242.49092102]
[-34.80538940 -227.47532654]
[-36.76728821 -212.58682251]
[-40.44441223 -198.02676392]
[-45.78702164 -183.99206543]
[-52.72287369 -170.67250061]
[-61.15816116 -158.24824524]
[-70.97881317 -146.88728333]
[-82.05200958 -136.74327087]
[-73.27140808 -124.58181763]
[-64.49080658 -112.42036438]
[-55.71020126 -100.25891113]
[-46.92959595 -88.09745026]
[-38.14899445 -75.93599701]
[-29.36839104 -63.77454376]
[-19.62242508 -52.37207794]
[-8.97641659 -41.80503082]
[1.66959250 -31.23798370]
[8.63136959 -28.75696754]
[12.39397240 -20.43346786]
[22.88147354 -9.70908833]
[33.36897278 1.01529169]
[43.85647583 11.73967171]
[54.34397507 22.46405029]
[51.72972488 7.69361830]
[56.19104767 -6.62757587]
[66.73127747 -17.30013847]
[80.99569702 -21.93979454]
[95.79759216 -19.51002884]
[107.83019257 -10.55366135]
[114.40538025 2.92843413]
[114.05424500 17.92432404]
[106.85522461 31.08388710]
[94.41659546 39.46724319]
[79.51719666 41.20153046]
[65.48555756 35.89928818]
[71.89558411 39.57805634]
[74.11904144 48.43774414]
[82.53366089 60.85523987]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[121.46921539 118.31264496]
[129.88383484 130.73014832]
[138.29846191 143.14764404]
[151.73014832 144.14968872]
[161.98265076 152.58158875]
[165.45532227 165.19200134]
[161.09638977 177.31756592]
[169.32519531 189.85896301]
[176.64945984 195.31726074]
[177.58154297 202.64891052]
[185.62271118 215.31143188]
[199.55227661 222.81330872]
[199.84350586 237.70506287]
[207.88467407 250.36758423]
[215.92584229 263.03012085]
[232.44055176 271.17541504]
[232.49606323 288.72430420]
[240.72486877 301.26571655]
[248.95367432 313.80709839]
[262.35144043 307.02624512]
[276.42416382 301.78811646]
[290.99493408 298.15859985]
[305.88043213 296.18331909]
[320.89349365 295.88717651]
[335.84533691 297.27383423]
[350.54788208 300.32589722]
[364.81625366 305.00497437]
[378.47100830 311.25216675]
[391.34042358 318.98898315]
[403.26263428 328.11810303]
[414.08773804 338.52468872]
[423.67959595 350.07788086]
[431.91754150 362.63241577]
[438.69799805 376.03036499]
[443.93572998 390.10327148]
[447.56478882 404.67413330]
[449.53961182 419.55969238]
[449.83532715 434.57278442]
[448.44821167 449.52456665]
[445.39569092 464.22702026]
[440.71621704 478.49523926]
[434.46859741 492.14981079]
[426.73138428 505.01898193]
[417.60192871 516.94091797]
[407.19500732 527.76574707]
[395.64154053 537.35723877]
[383.08676147 545.59478760]
[369.68859863 552.37487793]
[355.61553955 557.61218262]
[341.04458618 561.24084473]
[326.15896606 563.21520996]
[311.14587402 563.51043701]
[296.19412231 562.12286377]
[281.49176025 559.06994629]
[267.22366333 554.39001465]
[253.56927490 548.14196777]
[240.70033264 540.40441895]
[228.77865601 531.27459717]
[217.95417786 520.86737061]
[208.36302185 509.31356812]
[200.12580872 496.75857544]
[193.34614563 483.36019897]
[188.10928345 469.28698730]
[184.48107910 454.71591187]
[182.50715637 439.83023071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 164]
[9 163]
[10 162]
[13 160]
[14 159]
[15 158]
[17 156]
[18 155]
[19 153]
[20 152]
[23 148]
[24 147]
[25 146]
[26 145]
[28 143]
[29 142]
[30 141]
[31 140]
[32 138]
[33 126]
[34 125]
[35 124]
[36 123]
[37 122]
[38 120]
[39 119]
[40 118]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
