%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[67.86779022 547.07385254]
[63.15412140 561.36950684]
[55.65893936 574.42352295]
[45.68917465 585.70129395]
[33.65307999 594.74108887]
[20.04352379 601.17260742]
[5.41781330 604.73260498]
[-9.62514019 605.27526855]
[-24.46933556 602.77832031]
[-38.50691605 597.34405518]
[-51.16304779 589.19494629]
[-61.91946793 578.66479492]
[-70.33571625 566.18475342]
[-76.06714630 552.26586914]
[-78.87905884 537.47808838]
[-78.65631104 522.42700195]
[-75.40802765 507.72894287]
[-69.26721191 493.98574829]
[-60.48533630 481.76019287]
[-49.42201233 471.55297852]
[-36.53027344 463.78201294]
[-22.33803177 458.76550293]
[-7.42644548 456.70895386]
[7.59386206 457.69650269]
[11.56595802 443.23196411]
[15.53805447 428.76745605]
[19.51015091 414.30291748]
[10.24119663 404.69415283]
[6.90376329 391.65551758]
[10.47320652 378.56625366]
[20.12036324 368.87344360]
[33.40120316 365.18423462]
[37.58821487 350.78045654]
[41.77522659 336.37667847]
[30.60826111 326.48910522]
[24.81786728 312.67675781]
[25.60193253 297.65856934]
[32.85843277 284.41607666]
[45.19505310 275.60162354]
[60.19604111 273.00704956]
[64.38304901 258.60327148]
[68.57006073 244.19947815]
[71.89231873 229.57202148]
[74.33805084 214.77275085]
[76.78377533 199.97348022]
[79.22950745 185.17420959]
[81.56498718 170.35713196]
[83.79010773 155.52310181]
[86.01522827 140.68905640]
[88.24034119 125.85501099]
[86.12384796 118.77388763]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[96.54364777 27.46207619]
[106.25257111 16.16667557]
[108.69829559 1.36740458]
[111.14402008 -13.43186665]
[102.29489136 -19.28452873]
[95.92001343 -27.71732330]
[92.72536469 -37.75418854]
[93.05067444 -48.24393463]
[96.83345795 -57.99228287]
[103.61904907 -65.89781952]
[112.61507416 -71.07645416]
[122.78395081 -72.96023560]
[126.10621643 -87.58769226]
[129.42846680 -102.21515656]
[132.75073242 -116.84261322]
[136.07299805 -131.47007751]
[139.39524841 -146.09753418]
[142.71751404 -160.72499084]
[146.03976440 -175.35246277]
[141.55114746 -190.52357483]
[151.91517639 -201.22106934]
[155.23742676 -215.84852600]
[158.55969238 -230.47598267]
[161.88195801 -245.10343933]
[165.20420837 -259.73089600]
[159.00332642 -271.04071045]
[162.07157898 -283.15557861]
[172.23541260 -289.71478271]
[175.77508545 -304.29113770]
[179.31475830 -318.86752319]
[173.72221375 -336.41189575]
[186.32142639 -348.62771606]
[180.46830750 -366.08688354]
[192.88424683 -378.48895264]
[195.98835754 -393.16424561]
[199.09246826 -407.83956909]
[202.19657898 -422.51486206]
[188.19880676 -428.00231934]
[175.29522705 -435.71902466]
[163.83786011 -445.45446777]
[154.13928223 -456.94302368]
[146.46406555 -469.87133789]
[141.02159119 -483.88665771]
[137.96034241 -498.60665894]
[137.36384583 -513.62976074]
[139.24833679 -528.54614258]
[143.56245422 -542.94891357]
[150.18846130 -556.44500732]
[158.94561768 -568.66638184]
[169.59501648 -579.27960205]
[181.84614563 -587.99511719]
[195.36476135 -594.57513428]
[209.78208923 -598.84014893]
[224.70480347 -600.67388916]
[239.72579956 -600.02624512]
[254.43530273 -596.91485596]
[268.43200684 -591.42474365]
[281.33410645 -583.70556641]
[292.78958130 -573.96789551]
[302.48596191 -562.47747803]
[310.15869141 -549.54766846]
[315.59844971 -535.53131104]
[318.65686035 -520.81072998]
[319.25048828 -505.78747559]
[317.36309814 -490.87145996]
[313.04623413 -476.46957397]
[306.41760254 -462.97470093]
[297.65811157 -450.75500488]
[287.00665283 -440.14385986]
[274.75384521 -431.43072510]
[261.23397827 -424.85330200]
[246.81582642 -420.59103394]
[231.89276123 -418.76019287]
[216.87188721 -419.41073608]
[213.76777649 -404.73544312]
[210.66366577 -390.06015015]
[207.55955505 -375.38485718]
[213.89285278 -365.07873535]
[211.42686462 -352.82708740]
[200.94889832 -345.30548096]
[207.12803650 -334.90621948]
[204.47991943 -322.69262695]
[193.89112854 -315.32785034]
[190.35145569 -300.75146484]
[186.81178284 -286.17510986]
[192.65232849 -269.62652588]
[179.83168030 -256.40866089]
[176.50941467 -241.78118896]
[173.18714905 -227.15373230]
[169.86489868 -212.52626038]
[166.54263306 -197.89880371]
[171.26889038 -183.77394104]
[160.66723633 -172.03019714]
[157.34497070 -157.40274048]
[154.02270508 -142.77526855]
[150.70045471 -128.14781189]
[147.37818909 -113.52035522]
[144.05593872 -98.89289856]
[140.73367310 -84.26543427]
[137.41140747 -69.63797760]
[151.25755310 -55.82135773]
[153.96684265 -36.30364227]
[144.26649475 -18.98620987]
[125.94329834 -10.98613834]
[123.49756622 3.81313205]
[121.05184174 18.61240196]
[126.61043549 32.43091583]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[103.07438660 128.08012390]
[100.84926605 142.91416931]
[98.62415314 157.74821472]
[96.39903259 172.58226013]
[98.22080994 181.53317261]
[94.02877808 187.61993408]
[91.58304596 202.41920471]
[89.13732147 217.21847534]
[86.69158936 232.01774597]
[98.27544403 222.48808289]
[113.24099731 221.47215271]
[126.00647736 229.34886169]
[131.81066895 243.18038940]
[128.48876953 257.80792236]
[117.27973175 267.77575684]
[102.36428070 269.36614990]
[89.30550385 261.98587036]
[82.97384644 248.38648987]
[78.78683472 262.79028320]
[74.59982300 277.19406128]
[85.87229156 287.42599487]
[91.56123352 301.48028564]
[90.58793640 316.54922485]
[83.19889069 329.64743042]
[70.90632629 338.20327759]
[56.17900848 340.56369019]
[51.99199677 354.96746826]
[47.80498505 369.37124634]
[58.35082245 382.59552002]
[58.93060684 399.33367920]
[49.51381302 412.98233032]
[33.97467422 418.27502441]
[30.00257874 432.73953247]
[26.03048134 447.20407104]
[22.05838585 461.66857910]
[35.47652054 468.49050903]
[47.24652481 477.87408447]
[56.88642883 489.43511963]
[64.00148010 502.70013428]
[68.30033112 517.12597656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 205]
[25 204]
[26 203]
[27 202]
[32 198]
[33 197]
[34 196]
[40 190]
[41 189]
[42 188]
[43 179]
[44 178]
[45 177]
[46 176]
[47 174]
[48 173]
[49 172]
[50 171]
[52 170]
[54 168]
[55 167]
[56 166]
[57 165]
[59 163]
[60 162]
[61 161]
[69 157]
[70 156]
[71 155]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[85 142]
[86 141]
[87 140]
[89 137]
[91 134]
[92 133]
[93 132]
[94 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
