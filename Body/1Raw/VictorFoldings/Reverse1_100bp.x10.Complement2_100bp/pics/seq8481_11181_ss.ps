%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[108.54026794 502.58227539]
[94.58658600 496.55206299]
[84.00630188 485.63760376]
[78.41283417 471.50317383]
[78.65914917 456.30422974]
[84.70767975 442.35848999]
[95.63607788 431.79257202]
[109.77783203 426.21771240]
[110.00115967 411.21939087]
[110.22448730 396.22103882]
[110.44781494 381.22268677]
[110.67114258 366.22436523]
[110.89447021 351.22601318]
[111.11779785 336.22769165]
[111.34112549 321.22933960]
[111.34112549 306.22933960]
[111.11779785 291.23101807]
[110.89447021 276.23266602]
[110.67114258 261.23434448]
[110.44781494 246.23600769]
[101.98917389 237.58857727]
[101.68036652 225.09504700]
[110.23219299 215.43951416]
[109.00521851 200.48979187]
[106.55948639 185.69052124]
[104.11376190 170.89125061]
[101.66802979 156.09197998]
[99.22230530 141.29270935]
[96.77658081 126.49343109]
[94.33084869 111.69416046]
[91.44557953 96.97427368]
[80.84392548 85.23052979]
[85.57017517 71.10565948]
[82.24791718 56.47820282]
[78.92565918 41.85074234]
[75.60339355 27.22328186]
[65.00173950 15.47953796]
[69.72798920 1.35467231]
[66.40573120 -13.27278805]
[63.08347321 -27.90024757]
[59.76121521 -42.52770996]
[56.12507629 -27.97509575]
[48.74558258 -14.91588211]
[38.15546799 -4.29282045]
[25.11923790 3.12720037]
[10.57799053 6.80852222]
[-4.41852808 6.48538828]
[-18.78770828 2.18112469]
[-31.49222374 -5.79353905]
[-41.61492538 -16.86290550]
[-48.42504883 -30.22786903]
[-51.43096542 -44.92359924]
[-50.41567230 -59.88919830]
[-45.45246506 -74.04428864]
[-36.89964676 -86.36700439]
[-25.37464523 -95.96775055]
[-11.70946407 -102.15344238]
[3.10939479 -104.47753906]
[18.01214600 -102.77225494]
[31.92294693 -97.16069794]
[43.83756638 -88.04796600]
[52.89587402 -76.09191895]
[58.44422913 -62.15454483]
[59.78246307 -77.09473419]
[60.89811325 -92.05318451]
[61.79092789 -107.02658844]
[62.68374252 -122.00000000]
[63.57656097 -136.97340393]
[64.46937561 -151.94680786]
[65.36219025 -166.92021179]
[50.50504684 -169.04734802]
[35.87430191 -172.39413452]
[21.56991005 -176.93768311]
[7.68958187 -182.64697266]
[-5.67186451 -189.48300171]
[-18.42315483 -197.39907837]
[-30.47718430 -206.34111023]
[-41.75160980 -216.24801636]
[-52.16941452 -227.05212402]
[-61.65943146 -238.67964172]
[-70.15683746 -251.05113220]
[-77.60358429 -264.08206177]
[-83.94879913 -277.68347168]
[-89.14913940 -291.76239014]
[-93.16907501 -306.22265625]
[-95.98116302 -320.96551514]
[-97.56616974 -335.89022827]
[-97.91329193 -350.89486694]
[-97.02013397 -365.87692261]
[-94.89281464 -380.73403931]
[-91.54586792 -395.36474609]
[-87.00213623 -409.66906738]
[-81.29267883 -423.54934692]
[-74.45649719 -436.91070557]
[-66.54027557 -449.66189575]
[-57.59810257 -461.71582031]
[-47.69105530 -472.99014282]
[-36.88681793 -483.40780640]
[-25.25919151 -492.89767456]
[-12.88760471 -501.39495850]
[0.14342907 -508.84152222]
[13.74489403 -515.18658447]
[27.82387543 -520.38677979]
[42.28420258 -524.40655518]
[57.02708817 -527.21844482]
[71.95182800 -528.80328369]
[86.95646667 -529.15020752]
[101.93850708 -528.25689697]
[116.79560089 -526.12939453]
[131.42626953 -522.78222656]
[145.73054504 -518.23834229]
[159.61073303 -512.52874756]
[172.97201538 -505.69238281]
[185.72312927 -497.77603149]
[197.77694702 -488.83370972]
[209.05113220 -478.92651367]
[219.46867371 -468.12216187]
[228.95841980 -456.49441528]
[237.45553589 -444.12274170]
[244.90196228 -431.09161377]
[251.24685669 -417.49008179]
[256.44686890 -403.41101074]
[260.46646118 -388.95065308]
[263.27819824 -374.20773315]
[264.86285400 -359.28295898]
[265.20959473 -344.27832031]
[264.31610107 -329.29629517]
[262.18841553 -314.43923950]
[258.84112549 -299.80859375]
[254.29704285 -285.50436401]
[248.58726501 -271.62426758]
[241.75076294 -258.26306152]
[233.83422852 -245.51203918]
[224.89176941 -233.45832825]
[214.98445129 -222.18426514]
[204.17997742 -211.76684570]
[192.55212402 -202.27723694]
[180.18032837 -193.78027344]
[167.14912415 -186.33399963]
[153.54750061 -179.98927307]
[139.46839905 -174.78942871]
[125.00797272 -170.77000427]
[110.26502228 -167.95845032]
[95.34024048 -166.37397766]
[80.33559418 -166.02740479]
[79.44277954 -151.05398560]
[78.54996490 -136.08058167]
[77.65715027 -121.10717773]
[76.76433563 -106.13377380]
[75.87152100 -91.16036987]
[78.31529999 -87.05708313]
[78.20736694 -81.37506104]
[74.72264862 -75.75650024]
[73.38441467 -60.81631088]
[74.38867188 -45.84996796]
[77.71093750 -31.22250748]
[81.03319550 -16.59504700]
[84.35545349 -1.96758723]
[94.71947479 8.72990227]
[90.23085785 23.90102196]
[93.55311584 38.52848053]
[96.87537384 53.15594101]
[100.19763184 67.78340149]
[110.56166077 78.48088837]
[106.07303619 93.65200806]
[108.50506592 95.48905945]
[110.32241821 98.25162506]
[111.18100739 101.71374512]
[110.82505798 105.52551270]
[109.13011932 109.24843597]
[111.57585144 124.04770660]
[114.02157593 138.84696960]
[116.46730804 153.64624023]
[118.91303253 168.44551086]
[121.35875702 183.24478149]
[123.80448914 198.04406738]
[130.12936401 184.44273376]
[141.99436951 175.26550293]
[156.74884033 172.56257629]
[171.09657288 176.93778992]
[181.83226013 187.41372681]
[186.55751038 201.65000916]
[184.21670532 216.46624756]
[175.33277893 228.55242920]
[161.89042664 235.20848083]
[146.89268494 234.94741821]
[133.69012451 227.82757568]
[125.23219299 215.43951416]
[134.80688477 231.16870117]
[125.44615173 246.01268005]
[125.66947937 261.01101685]
[125.89280701 276.00933838]
[126.11613464 291.00769043]
[126.33946228 306.00601196]
[129.39663696 311.86819458]
[129.08166504 317.54251099]
[126.33946228 321.45266724]
[126.11613464 336.45101929]
[125.89280701 351.44934082]
[125.66947937 366.44769287]
[125.44615173 381.44601440]
[125.22282410 396.44436646]
[124.99949646 411.44271851]
[124.77616882 426.44104004]
[138.74566650 432.43447876]
[149.35462952 443.32110596]
[154.98527527 457.44073486]
[154.77894592 472.64028931]
[148.76712036 486.60189819]
[137.86656189 497.19653320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[23 188]
[24 176]
[25 175]
[26 174]
[27 173]
[28 172]
[29 171]
[30 170]
[31 165]
[33 163]
[34 162]
[35 161]
[36 160]
[38 158]
[39 157]
[40 156]
[41 155]
[63 154]
[64 153]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
