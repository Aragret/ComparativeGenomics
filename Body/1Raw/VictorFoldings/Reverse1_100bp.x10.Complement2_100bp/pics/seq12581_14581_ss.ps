%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[99.06408691 512.46166992]
[102.78350067 497.86779785]
[109.55359650 484.41494751]
[119.05773926 472.73223877]
[130.85139465 463.36614990]
[144.38294983 456.75469971]
[140.84327698 442.17834473]
[137.30360413 427.60195923]
[133.76393127 413.02557373]
[130.22425842 398.44921875]
[117.41028595 390.94335938]
[113.61290741 376.21127319]
[121.57260132 362.82168579]
[118.03292847 348.24530029]
[113.39979553 342.48721313]
[114.55078888 333.42556763]
[111.22852325 318.79812622]
[107.90626526 304.17065430]
[104.58400726 289.54318237]
[101.26174927 274.91574097]
[96.12666321 289.00936890]
[85.44570923 299.54110718]
[71.28120422 304.47738647]
[56.36810684 302.86511230]
[43.58588791 295.01559448]
[35.40260315 282.44445801]
[33.39831161 267.57897949]
[37.96001053 253.28942871]
[48.20691299 242.33493042]
[62.16049576 236.83061218]
[77.12654114 237.83927917]
[90.21534729 245.16615295]
[98.90015411 257.39773560]
[98.23036957 242.41268921]
[97.56058502 227.42765808]
[96.89080048 212.44261169]
[96.22101593 197.45758057]
[87.50865936 189.06582642]
[86.82801056 176.58703613]
[95.08856201 166.68116760]
[94.64195251 151.68782043]
[84.62774658 137.27662659]
[93.49053955 121.13560486]
[92.82075500 106.15056610]
[89.85165405 101.82640076]
[89.51665497 96.14651489]
[92.36084747 90.71076202]
[92.13751984 75.71242523]
[91.91419220 60.71408463]
[91.69086456 45.71574783]
[91.46753693 30.71741104]
[78.94754791 21.74211502]
[74.16901398 7.28462410]
[78.76548767 -7.04494047]
[90.77465820 -15.81521893]
[90.55133057 -30.81355667]
[90.32800293 -45.81189346]
[90.10467529 -60.81023026]
[89.88134766 -75.80857086]
[81.93944550 -89.49201202]
[89.48639679 -102.33306885]
[75.20169067 -107.35029602]
[63.51736450 -116.93405914]
[55.83139801 -129.91273499]
[53.05483627 -144.71006775]
[55.50381851 -159.53652954]
[62.86372375 -172.60581970]
[74.22943878 -182.35002136]
[88.21664429 -187.60772705]
[87.99331665 -202.60606384]
[87.76998901 -217.60440063]
[72.56427002 -220.79841614]
[58.45329666 -227.28527832]
[46.13990402 -236.73846436]
[36.23665237 -248.68383789]
[29.23532867 -262.52334595]
[25.48254395 -277.56497192]
[25.16255760 -293.05743408]
[28.28824806 -308.22753906]
[34.70061111 -322.31896973]
[44.07685852 -334.62979126]
[55.94664764 -344.54763794]
[69.71569824 -351.57992554]
[84.69551849 -355.37850952]
[84.24891663 -370.37188721]
[83.80230713 -385.36523438]
[83.35570526 -400.35858154]
[82.90909576 -415.35192871]
[82.46249390 -430.34527588]
[82.01588440 -445.33862305]
[81.56927490 -460.33197021]
[81.12267303 -475.32531738]
[69.90147400 -486.12915039]
[69.66213989 -501.34088135]
[80.03108215 -511.97201538]
[79.58447266 -526.96533203]
[79.13787079 -541.95867920]
[78.69126129 -556.95208740]
[64.72770691 -563.11499023]
[54.82751846 -574.73175049]
[50.95638275 -589.49578857]
[53.88291550 -604.47570801]
[63.02605438 -616.69726562]
[76.57041931 -623.73382568]
[91.82677460 -624.18823242]
[105.76594543 -617.97033691]
[115.62031555 -606.31469727]
[119.43328094 -591.53552246]
[116.44777679 -576.56726074]
[107.25658417 -564.38183594]
[93.68461609 -557.39868164]
[94.13121796 -542.40533447]
[94.57782745 -527.41198730]
[95.02442932 -512.41864014]
[106.00776672 -502.42352295]
[106.67427063 -487.22448730]
[96.11602020 -475.77194214]
[96.56262970 -460.77856445]
[97.00923157 -445.78521729]
[97.45584106 -430.79187012]
[97.90244293 -415.79852295]
[98.34905243 -400.80517578]
[98.79566193 -385.81182861]
[99.24226379 -370.81848145]
[99.68887329 -355.82513428]
[113.95003510 -353.20236206]
[127.35683441 -347.66217041]
[139.31929016 -339.44561768]
[149.31040955 -328.91159058]
[156.88945007 -316.52114868]
[161.72125244 -302.81735229]
[163.59115601 -288.40133667]
[162.41452026 -273.90618896]
[158.24049377 -259.96890259]
[151.25003052 -247.20252991]
[141.74804688 -236.16911316]
[130.15005493 -227.35507202]
[116.96408081 -221.14964294]
[102.76832581 -217.82772827]
[102.99165344 -202.82939148]
[103.21498108 -187.83105469]
[117.35252380 -182.99212646]
[129.00332642 -173.59063721]
[136.74908447 -160.74627686]
[139.63842773 -145.99931335]
[137.30366516 -131.12586975]
[130.00752258 -117.92411041]
[118.61372375 -107.99670410]
[104.48473358 -102.55639648]
[112.41066742 -89.94573212]
[104.87968445 -76.03189850]
[105.10301208 -61.03355789]
[105.32633972 -46.03522110]
[105.54966736 -31.03688431]
[105.77299500 -16.03854561]
[118.03797150 -7.62971449]
[123.05905151 6.55664349]
[118.71308899 21.14999962]
[106.46587372 30.49408340]
[106.68920135 45.49242020]
[106.91252899 60.49075699]
[107.13585663 75.48909760]
[107.35918427 90.48743439]
[107.80579376 105.48078156]
[108.47557831 120.46582031]
[117.45001221 129.72985840]
[117.69937897 142.22471619]
[109.63530731 151.24121094]
[110.08190918 166.23455811]
[120.12066650 181.67169189]
[111.20605469 196.78779602]
[111.87583923 211.77282715]
[112.54562378 226.75787354]
[113.21540833 241.74290466]
[113.88519287 256.72793579]
[115.88920593 271.59347534]
[119.21147156 286.22094727]
[122.53372955 300.84838867]
[125.85598755 315.47586060]
[129.17825317 330.10330200]
[132.60931396 344.70562744]
[136.14898682 359.28201294]
[149.36302185 367.52984619]
[152.74511719 382.36279297]
[144.80062866 394.90954590]
[148.34030151 409.48590088]
[151.87997437 424.06228638]
[155.41964722 438.63867188]
[158.95932007 453.21502686]
[174.01603699 452.88418579]
[188.79176331 455.79827881]
[202.59541321 461.82101440]
[214.78138733 470.67065430]
[224.77969360 481.93334961]
[232.12271118 495.08227539]
[236.46697998 509.50244141]
[237.60932922 524.51940918]
[235.49632263 539.43078613]
[230.22677612 553.53912354]
[222.04718018 566.18463135]
[211.34008789 576.77575684]
[198.60629272 584.81719971]
[184.44139099 589.93280029]
[169.50788879 591.88336182]
[154.50425720 590.57757568]
[140.13223267 586.07653809]
[127.06404114 578.59082031]
[115.91089630 568.47045898]
[107.19444275 556.18884277]
[101.32237244 542.32043457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[13 182]
[14 181]
[16 180]
[17 179]
[18 178]
[19 177]
[20 176]
[33 175]
[34 174]
[35 173]
[36 172]
[37 171]
[40 169]
[41 168]
[43 165]
[44 164]
[47 163]
[48 162]
[49 161]
[50 160]
[51 159]
[55 155]
[56 154]
[57 153]
[58 152]
[59 151]
[61 149]
[69 141]
[70 140]
[71 139]
[84 125]
[85 124]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
