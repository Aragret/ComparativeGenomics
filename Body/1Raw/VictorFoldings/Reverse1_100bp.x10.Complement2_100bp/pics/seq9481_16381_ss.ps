%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[97.59439850 534.07733154]
[84.35759735 523.48376465]
[90.87284851 507.83166504]
[91.31945038 492.83831787]
[91.76605988 477.84497070]
[92.21266937 462.85162354]
[92.65927124 447.85827637]
[78.79877472 443.95809937]
[66.26927948 436.84411621]
[55.80380249 426.92724609]
[48.01586533 414.78268433]
[43.36351776 401.11624146]
[42.12239838 386.72357178]
[44.36941528 372.44375610]
[49.97799301 359.11035156]
[58.62519073 347.50277710]
[69.81030273 338.30075073]
[82.88383484 332.04452515]
[97.08522797 329.10302734]
[97.75501251 314.11798096]
[98.42480469 299.13293457]
[99.09458923 284.14791870]
[88.88507843 273.36358643]
[89.35086823 258.15707397]
[100.73167419 247.52153015]
[101.40145874 232.53649902]
[102.07124329 217.55145264]
[102.74102783 202.56642151]
[103.41081238 187.58137512]
[102.74102783 172.59634399]
[100.73701477 157.73080444]
[98.73300171 142.86528015]
[96.61837769 128.01509094]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[86.32246399 59.37598801]
[71.61249542 55.64872360]
[59.48290634 46.59796906]
[51.76343918 33.62786865]
[49.60365677 18.73079109]
[53.30185699 4.18128395]
[62.26430893 -7.81120729]
[75.10033417 -15.43785477]
[72.87521362 -30.27189827]
[70.65010071 -45.10594177]
[55.15398026 -46.23982239]
[40.30285263 -50.78328705]
[26.83689308 -58.50666046]
[15.42650700 -69.02186584]
[6.63898039 -81.80191040]
[0.91026187 -96.20732117]
[-1.47665930 -111.51812744]
[-0.40573165 -126.96984100]
[4.06651974 -141.79164124]
[11.71396828 -155.24479675]
[22.15231705 -166.65953064]
[34.85840988 -175.46833801]
[49.19644547 -181.23419189]
[46.75071716 -196.03346252]
[36.73901749 -204.16542053]
[35.00663757 -216.54211426]
[41.94213486 -226.45298767]
[39.71701813 -241.28703308]
[37.49190140 -256.12106323]
[35.04617310 -270.92034912]
[32.38037872 -285.68154907]
[29.71458435 -300.44277954]
[27.04878807 -315.20401001]
[24.38299179 -329.96520996]
[14.25132751 -337.94720459]
[12.33487034 -350.29672241]
[19.12204170 -360.30978394]
[16.67631531 -375.10903931]
[14.23058701 -389.90832520]
[11.78485966 -404.70758057]
[-3.23105788 -404.25408936]
[-18.17343521 -405.80612183]
[-32.77560425 -409.33599854]
[-46.77697754 -414.78073120]
[-59.92768478 -422.04312134]
[-71.99302673 -430.99359131]
[-82.75769806 -441.47238159]
[-92.02957916 -453.29254150]
[-99.64320374 -466.24307251]
[-105.46269989 -480.09286499]
[-109.38420868 -494.59475708]
[-111.33775330 -509.48995972]
[-111.28845978 -524.51263428]
[-109.23722076 -539.39471436]
[-105.22063446 -553.87054443]
[-99.31037903 -567.68188477]
[-91.61194611 -580.58215332]
[-82.26270294 -592.34118652]
[-71.42950439 -602.74914551]
[-59.30568695 -611.62023926]
[-46.10761261 -618.79620361]
[-32.07081223 -624.14892578]
[-17.44579124 -627.58294678]
[-2.49355268 -629.03686523]
[12.51906586 -628.48486328]
[27.32414627 -625.93670654]
[41.65747452 -621.43792725]
[55.26325226 -615.06872559]
[67.89867401 -606.94287109]
[79.33824158 -597.20538330]
[89.37780762 -586.02990723]
[97.83819580 -573.61596680]
[104.56842804 -560.18518066]
[109.44838715 -545.97705078]
[112.39099884 -531.24530029]
[113.34373474 -516.25280762]
[112.28959656 -501.26705933]
[109.24739838 -486.55557251]
[104.27143860 -472.38082886]
[97.45050049 -458.99581909]
[88.90632629 -446.63943481]
[78.79139709 -435.53213501]
[67.28621674 -425.87222290]
[54.59611893 -417.83203125]
[40.94756317 -411.55505371]
[26.58413124 -407.15332031]
[29.02985764 -392.35403442]
[31.47558594 -377.55477905]
[33.92131424 -362.75549316]
[45.77109528 -349.81140137]
[39.14421082 -332.63101196]
[41.81000519 -317.86978149]
[44.47579956 -303.10858154]
[47.14159775 -288.34735107]
[49.80739212 -273.58615112]
[53.15044403 -270.17541504]
[54.38639450 -264.62838745]
[52.32594681 -258.34619141]
[54.55106354 -243.51214600]
[56.77618027 -228.67810059]
[68.43193054 -215.55902100]
[61.54998779 -198.47918701]
[63.99571609 -183.67991638]
[78.47943878 -182.98596191]
[92.50621796 -179.28660583]
[105.45917511 -172.74189758]
[116.76808929 -163.63714600]
[125.93454742 -152.37034607]
[132.55387878 -139.43492126]
[136.33300781 -125.39798737]
[137.10348511 -110.87557983]
[134.82891846 -96.50558472]
[129.60673523 -82.91971588]
[121.66399384 -70.71574402]
[111.34754181 -60.43121719]
[99.10882568 -52.51975632]
[85.48413849 -47.33105850]
[87.70925903 -32.49701691]
[89.93437958 -17.66297150]
[104.44314575 -14.13806248]
[116.52975464 -5.30294561]
[124.33401489 7.52118444]
[126.64008331 22.39632034]
[123.06578064 37.06049347]
[114.12551117 49.27174377]
[101.15650940 57.15087128]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.45242310 125.78997040]
[115.82021332 133.81245422]
[113.59852600 140.86126709]
[115.60253906 155.72679138]
[117.60655212 170.59233093]
[123.97853851 157.01301575]
[135.55648804 147.47619629]
[150.10490417 143.82328796]
[164.81469727 146.75959778]
[176.84564209 155.71818542]
[183.87475586 168.96928406]
[184.54481506 183.95431519]
[178.72645569 197.77989197]
[167.54310608 207.77653503]
[153.15409851 212.01402283]
[138.33772278 209.67417908]
[125.95478058 201.20878601]
[118.39585114 188.25115967]
[117.72606659 203.23620605]
[117.05628204 218.22123718]
[116.38649750 233.20628357]
[115.71671295 248.19131470]
[126.10327911 259.79980469]
[125.21055603 274.98721313]
[114.07962799 284.81768799]
[113.40984344 299.80273438]
[112.74005127 314.78778076]
[112.07026672 329.77279663]
[127.00836182 334.44692993]
[140.22164917 342.81680298]
[150.81550598 354.30886841]
[158.07438660 368.13848877]
[161.51022339 383.36334229]
[160.89521790 398.94781494]
[156.27688599 413.83331299]
[147.97450256 427.01019287]
[136.55699158 437.58627319]
[122.80401611 444.84722900]
[107.65261841 448.30487061]
[107.20601654 463.29824829]
[106.75940704 478.29159546]
[106.31280518 493.28494263]
[105.86619568 508.27828979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 210]
[4 209]
[5 208]
[6 207]
[7 206]
[19 195]
[20 194]
[21 193]
[22 192]
[25 189]
[26 188]
[27 187]
[28 186]
[29 185]
[30 172]
[31 171]
[32 170]
[33 168]
[34 167]
[36 165]
[37 164]
[38 163]
[45 156]
[46 155]
[47 154]
[60 140]
[61 139]
[64 137]
[65 136]
[66 135]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[74 126]
[75 125]
[76 124]
[77 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
