%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCUCAUCCCGACUCUGACCCCACCCCGGAAGAUACCGACUCCCCUCAGUCCCCACCUCUGGAUUAACCCGACUAAACGGACGACGACGAUCCUCCUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[220.55879211 427.09646606]
[232.99618530 418.62313843]
[227.12722778 404.81893921]
[215.02703857 396.13363647]
[216.74800110 380.40631104]
[210.87902832 366.60214233]
[205.01007080 352.79797363]
[199.14111328 338.99377441]
[184.57145691 329.21154785]
[186.95700073 310.95254517]
[180.88316345 297.23727417]
[174.80932617 283.52200317]
[168.73548889 269.80676270]
[162.66166687 256.09149170]
[150.43350220 247.58729553]
[151.92010498 231.83609009]
[145.84626770 218.12081909]
[129.91296387 212.73858643]
[122.65940094 197.19186401]
[129.01672363 180.89450073]
[122.73936462 167.27119446]
[116.46200562 153.64787292]
[110.18463898 140.02455139]
[103.90727997 126.40124512]
[97.62992096 112.77792358]
[90.94972229 99.34754944]
[83.87261963 86.12202454]
[76.79551697 72.89649200]
[69.71840668 59.67096710]
[62.64130402 46.44543839]
[55.27061462 33.38125610]
[47.61001587 20.48492813]
[39.94942093 7.58860111]
[32.28882217 -5.30772591]
[24.62822533 -18.20405197]
[16.96762657 -31.10037994]
[4.68401432 -35.03429413]
[-1.43101752 -45.93338013]
[1.42504728 -57.68793106]
[-6.04269409 -70.69688416]
[-14.73251820 -82.92337036]
[-24.56309891 -94.25296021]
[-32.55093002 -98.68380737]
[-34.45417023 -105.82519531]
[-44.11498260 -117.29989624]
[-53.77579117 -128.77459717]
[-63.43660355 -140.24929810]
[-75.72810364 -131.63438416]
[-88.73289490 -124.13951874]
[-102.34919739 -117.82335663]
[-116.47044373 -112.73533630]
[-130.98611450 -108.91526794]
[-145.78260803 -106.39306641]
[-160.74411011 -105.18846130]
[-175.75352478 -105.31087494]
[-190.69338989 -106.75936127]
[-205.44677734 -109.52257538]
[-219.89820862 -113.57889557]
[-233.93458557 -118.89656830]
[-247.44606018 -125.43398285]
[-260.32687378 -133.13996887]
[-272.47619629 -141.95422363]
[-283.79901123 -151.80775452]
[-294.20660400 -162.62344360]
[-303.61761475 -174.31665039]
[-311.95831299 -186.79583740]
[-319.16345215 -199.96336365]
[-325.17663574 -213.71614075]
[-329.95080566 -227.94656372]
[-333.44860840 -242.54324341]
[-335.64263916 -257.39193726]
[-336.51577759 -272.37643433]
[-336.06112671 -287.37948608]
[-334.28225708 -302.28359985]
[-331.19314575 -316.97219849]
[-326.81790161 -331.33029175]
[-321.19079590 -345.24554443]
[-314.35589600 -358.60897827]
[-306.36663818 -371.31604004]
[-297.28561401 -383.26727295]
[-287.18383789 -394.36917114]
[-276.14041138 -404.53482056]
[-264.24172974 -413.68466187]
[-251.58096313 -421.74707031]
[-238.25717163 -428.65893555]
[-224.37464905 -434.36621094]
[-210.04202271 -438.82421875]
[-195.37149048 -441.99801636]
[-180.47785950 -443.86282349]
[-165.47770691 -444.40399170]
[-150.48841858 -443.61734009]
[-135.62730408 -441.50900269]
[-121.01069641 -438.09545898]
[-106.75296783 -433.40344238]
[-92.96572876 -427.46969604]
[-79.75686646 -420.34063721]
[-67.22976685 -412.07205200]
[-55.48247147 -402.72866821]
[-44.60692596 -392.38360596]
[-34.68824387 -381.11785889]
[-25.80405426 -369.01956177]
[-18.02389145 -356.18341064]
[-11.40864277 -342.70986938]
[-6.01008558 -328.70440674]
[-1.87047040 -314.27661133]
[0.97780365 -299.53942871]
[2.51244450 -284.60815430]
[2.72144151 -269.59970093]
[1.60315895 -254.63150024]
[-0.83365113 -239.82069397]
[-4.56991673 -225.28323364]
[-9.57639694 -211.13287354]
[-15.81390667 -197.48036194]
[-23.23362923 -184.43255615]
[-31.77749443 -172.09155273]
[-41.37863541 -160.55398560]
[-51.96190262 -149.91011047]
[-42.30109406 -138.43540955]
[-32.64028168 -126.96070862]
[-22.97947121 -115.48600769]
[-13.23350620 -104.08354187]
[-3.40292525 -92.75395203]
[-5.84797907 -107.55332947]
[-2.14108849 -122.08808136]
[7.09307051 -133.90884399]
[20.29837990 -141.02360535]
[35.24951172 -142.23339844]
[49.42694092 -137.33436584]
[60.44152069 -127.15207672]
[66.43709564 -113.40242004]
[66.40331268 -98.40245819]
[60.34586334 -84.67994690]
[49.28553391 -74.54737091]
[35.08618164 -69.71224976]
[20.14064789 -70.98937988]
[6.96625853 -78.16462708]
[14.43400002 -65.15567017]
[30.06284904 -57.17406845]
[29.86395454 -38.76097870]
[37.52455139 -25.86465073]
[45.18515015 -12.96832371]
[52.84574509 -0.07199639]
[60.50634384 12.82433033]
[68.16693878 25.72065735]
[71.47515869 26.94051361]
[74.35688782 29.82334137]
[76.03695679 34.15123367]
[75.86682892 39.36833572]
[82.94393921 52.59386063]
[90.02104187 65.81938934]
[97.09814453 79.04491425]
[104.17525482 92.27044678]
[107.00691986 93.39789581]
[109.49094391 95.58059692]
[111.23567200 98.69176483]
[111.90180969 102.46171570]
[111.25323486 106.50056458]
[117.53059387 120.12387848]
[123.80796051 133.74719238]
[130.08531189 147.37051392]
[136.36268616 160.99383545]
[142.64004517 174.61714172]
[155.72860718 177.79580688]
[164.46910095 187.78652954]
[165.83920288 200.79440308]
[159.56153870 212.04698181]
[165.63537598 225.76225281]
[178.29797363 235.24745178]
[176.37692261 250.01765442]
[182.45075989 263.73291016]
[188.52459717 277.44818115]
[194.59843445 291.16345215]
[200.67225647 304.87872314]
[212.40136719 310.24441528]
[217.17791748 321.79293823]
[212.94528198 333.12481689]
[218.81425476 346.92898560]
[224.68321228 360.73318481]
[230.55216980 374.53735352]
[243.07215881 384.21002197]
[240.93141174 398.94998169]
[246.80036926 412.75415039]
[261.53176880 409.67645264]
[276.58053589 409.53216553]
[291.36822510 412.32678223]
[305.32647705 417.95294189]
[317.91873169 426.19436646]
[328.66101074 436.73428345]
[337.14038086 449.16757202]
[343.03094482 463.01632690]
[346.10626221 477.74819946]
[346.24813843 492.79699707]
[343.45111084 507.58425903]
[337.82269287 521.54156494]
[329.57922363 534.13250732]
[319.03756714 544.87310791]
[306.60290527 553.35046387]
[292.75323486 559.23876953]
[278.02084351 562.31170654]
[262.97201538 562.45111084]
[248.18522644 559.65167236]
[234.22879028 554.02099609]
[221.63920593 545.77551270]
[210.90034485 535.23211670]
[202.42498779 522.79608154]
[196.53892517 508.94546509]
[193.46836853 494.21258545]
[193.33137512 479.16372681]
[196.13319397 464.37738037]
[201.76612854 450.42187500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[5 179]
[6 178]
[7 177]
[8 176]
[10 173]
[11 172]
[12 171]
[13 170]
[14 169]
[16 167]
[17 166]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 152]
[27 151]
[28 150]
[29 149]
[30 148]
[31 144]
[32 143]
[33 142]
[34 141]
[35 140]
[36 139]
[39 137]
[40 136]
[41 122]
[42 121]
[44 120]
[45 119]
[46 118]
[47 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
