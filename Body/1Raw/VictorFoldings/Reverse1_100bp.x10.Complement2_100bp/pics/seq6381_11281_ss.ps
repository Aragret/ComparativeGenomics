%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[78.34346008 737.46862793]
[63.33607101 737.50134277]
[48.37021255 736.38513184]
[33.53371811 734.12658691]
[18.91364479 730.73889160]
[4.59579563 726.24200439]
[-9.33580685 720.66229248]
[-22.79940414 714.03253174]
[-35.71598816 706.39154053]
[-48.00975418 697.78417969]
[-59.60856247 688.26104736]
[-70.44434357 677.87792969]
[-80.45349884 666.69586182]
[-89.57730865 654.78033447]
[-97.76221466 642.20141602]
[-104.96018219 629.03283691]
[-111.12899017 615.35186768]
[-116.23241425 601.23883057]
[-120.24051666 586.77655029]
[-123.12977600 572.04986572]
[-124.88323212 557.14520264]
[-125.49060059 542.15008545]
[-124.94831848 527.15246582]
[-123.25955200 512.24035645]
[-120.43423462 497.50128174]
[-116.48892975 483.02172852]
[-111.44680023 468.88668823]
[-105.33742523 455.17907715]
[-98.19667053 441.97937012]
[-90.06642914 429.36502075]
[-80.99442291 417.41003418]
[-71.03388214 406.18460083]
[-60.24326324 395.75457764]
[-48.68589401 386.18118286]
[-36.42959595 377.52059937]
[-23.54629326 369.82363892]
[-10.11159420 363.13546753]
[3.79566169 357.49533081]
[18.09386063 352.93637085]
[32.69909286 349.48529053]
[47.52565002 347.16235352]
[62.48652267 345.98123169]
[77.49391174 345.94882202]
[78.60955811 330.99035645]
[79.72520447 316.03189087]
[80.84085846 301.07345581]
[70.95696259 289.98992920]
[71.87529755 274.80404663]
[83.56771851 264.51205444]
[84.68336487 249.55360413]
[85.79901886 234.59515381]
[77.33841705 219.22032166]
[87.83234406 204.08894348]
[88.72515869 189.11552429]
[89.61797333 174.14212036]
[90.51079559 159.16871643]
[91.18058014 144.18368530]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[84.61260986 105.25426483]
[85.04602814 93.61582184]
[93.15166473 85.25281525]
[93.82144928 70.26777649]
[94.49123383 55.28274155]
[95.16101837 40.29770279]
[88.04764557 26.16580582]
[96.34553528 13.79671574]
[97.01531982 -1.18832254]
[97.68510437 -16.17336082]
[97.90843201 -31.17169952]
[97.68510437 -46.17003632]
[97.46177673 -61.16837311]
[97.23844910 -76.16670990]
[83.93021393 -83.70582581]
[76.23325348 -96.80748749]
[76.12834167 -111.90236664]
[83.54351044 -124.93582916]
[96.40027618 -132.45707703]
[96.17694855 -147.45541382]
[83.40343475 -159.40768433]
[83.22968292 -176.56240845]
[95.27483368 -188.29924011]
[94.82822418 -203.29258728]
[94.38162231 -218.28593445]
[93.93501282 -233.27929688]
[79.02483368 -235.18531799]
[64.59642029 -239.40048218]
[51.00510025 -245.82093811]
[38.58555984 -254.28862000]
[27.64364815 -264.59497070]
[18.44881630 -276.48620605]
[11.22749710 -289.66949463]
[6.15752077 -303.82019043]
[3.36374140 -318.58978271]
[2.91495728 -333.61462402]
[4.82222080 -348.52462769]
[9.03856277 -362.95269775]
[15.46015358 -376.54348755]
[23.92885399 -388.96234131]
[34.23611832 -399.90338135]
[46.12811279 -409.09722900]
[59.31199646 -416.31747437]
[73.46309662 -421.38629150]
[88.23293304 -424.17883301]
[103.25778961 -424.62640381]
[118.16765594 -422.71789551]
[132.59536743 -418.50036621]
[146.18563843 -412.07763672]
[158.60377502 -403.60791016]
[169.54399109 -393.29977417]
[178.73684692 -381.40701294]
[185.95599365 -368.22253418]
[191.02363586 -354.07101440]
[193.81498718 -339.30093384]
[194.26129150 -324.27606201]
[192.35156250 -309.36633301]
[188.13284302 -294.93896484]
[181.70899963 -281.34924316]
[173.23825073 -268.93179321]
[162.92918396 -257.99243164]
[151.03567505 -248.80055237]
[137.85060120 -241.58248901]
[123.69866180 -236.51602173]
[108.92835999 -233.72589111]
[109.37496948 -218.73254395]
[109.82157135 -203.73919678]
[110.26818085 -188.74584961]
[120.79067230 -181.30900574]
[125.17395782 -168.98548889]
[121.60665131 -156.19937134]
[111.17528534 -147.67874146]
[111.39861298 -132.68040466]
[124.47361755 -125.54528809]
[132.27354431 -112.73838043]
[132.61811829 -97.64706421]
[125.31465149 -84.32204437]
[112.23678589 -76.39003754]
[112.46011353 -61.39170074]
[112.68344116 -46.39336395]
[112.90676880 -31.39502716]
[114.82199097 -29.34805870]
[116.04177094 -26.41911125]
[116.22612762 -22.86926270]
[115.13576508 -19.07774162]
[112.67014313 -15.50357628]
[112.00035858 -0.51853746]
[111.33057404 14.46650124]
[118.49185181 27.52656746]
[110.14605713 40.96748734]
[109.47627258 55.95252609]
[108.80648804 70.93756104]
[108.13670349 85.92259979]
[116.24847412 100.60508728]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[106.17392731 144.63027954]
[108.96630096 150.62313843]
[108.39826202 156.27772522]
[105.48419952 160.06153870]
[104.59138489 175.03494263]
[103.69856262 190.00834656]
[102.80574799 204.98175049]
[110.76770782 215.12916565]
[109.71582031 227.58216858]
[100.75746918 235.71080017]
[99.64182281 250.66925049]
[98.52617645 265.62771606]
[108.56250763 277.54028320]
[107.21799469 292.69439697]
[95.79930878 302.18908691]
[94.68366241 317.14755249]
[93.56800842 332.10601807]
[92.45236206 347.06445312]
[107.28890228 349.32272339]
[121.90904236 352.71011353]
[136.22697449 357.20672607]
[150.15867615 362.78616333]
[163.62240601 369.41571045]
[176.53913879 377.05645752]
[188.83306885 385.66354370]
[200.43205261 395.18649292]
[211.26802063 405.56936646]
[221.27740479 416.75128174]
[230.40142822 428.66659546]
[238.58657837 441.24539185]
[245.78480530 454.41387939]
[251.95385742 468.09469604]
[257.05755615 482.20764160]
[261.06591797 496.66986084]
[263.95547485 511.39648438]
[265.70919800 526.30108643]
[266.31686401 541.29620361]
[265.77487183 556.29382324]
[264.08639526 571.20599365]
[261.26135254 585.94506836]
[257.31631470 600.42474365]
[252.27444458 614.55987549]
[246.16532898 628.26757812]
[239.02482605 641.46740723]
[230.89482117 654.08190918]
[221.82304382 666.03710938]
[211.86271667 677.26269531]
[201.07229614 687.69293213]
[189.51510620 697.26654053]
[177.25897217 705.92736816]
[164.37582397 713.62457275]
[150.94125366 720.31298828]
[137.03410339 725.95336914]
[122.73598480 730.51263428]
[108.13082123 733.96398926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 173]
[44 172]
[45 171]
[46 170]
[49 167]
[50 166]
[51 165]
[53 162]
[54 161]
[55 160]
[56 159]
[57 156]
[58 155]
[59 154]
[62 152]
[63 151]
[64 150]
[65 149]
[67 147]
[68 146]
[69 145]
[70 140]
[71 139]
[72 138]
[73 137]
[78 132]
[79 131]
[82 127]
[83 126]
[84 125]
[85 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
