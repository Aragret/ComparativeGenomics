%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[33.41970444 876.73541260]
[18.43021774 877.42895508]
[3.42766738 877.13031006]
[-11.52234364 875.84075928]
[-26.35444260 873.56597900]
[-41.00376892 870.31591797]
[-55.40626907 866.10479736]
[-69.49896240 860.95098877]
[-83.22022247 854.87707520]
[-96.51005554 847.90954590]
[-109.31034088 840.07891846]
[-121.56510925 831.41949463]
[-133.22076416 821.96899414]
[-144.22634888 811.76885986]
[-154.53375244 800.86370850]
[-164.09786987 789.30108643]
[-172.87689209 777.13171387]
[-180.83244324 764.40869141]
[-187.92973328 751.18768311]
[-194.13771057 737.52655029]
[-199.42922974 723.48498535]
[-203.78117371 709.12445068]
[-207.17449951 694.50762939]
[-209.59436035 679.69848633]
[-211.03019714 664.76184082]
[-211.47570801 649.76293945]
[-210.92895508 634.76733398]
[-209.39231873 619.84069824]
[-206.87254333 605.04827881]
[-203.38063049 590.45471191]
[-198.93185425 576.12384033]
[-193.54565430 562.11834717]
[-187.24559021 548.49938965]
[-180.05923462 535.32659912]
[-172.01797485 522.65759277]
[-163.15699768 510.54776001]
[-153.51504517 499.04998779]
[-143.13426208 488.21463013]
[-132.06007385 478.08901978]
[-120.34088135 468.71743774]
[-108.02793884 460.14089966]
[-95.17508698 452.39688110]
[-81.83852386 445.51925659]
[-68.07657623 439.53808594]
[-53.94941330 434.47952271]
[-39.51881409 430.36569214]
[-24.84787941 427.21459961]
[-10.00076389 425.04000854]
[4.95761156 423.85144043]
[19.96183586 423.65408325]
[34.94630051 424.44876099]
[36.72876358 409.55505371]
[38.51123047 394.66134644]
[40.29369736 379.76760864]
[42.07616425 364.87390137]
[43.85862732 349.98019409]
[36.56334686 345.39929199]
[31.12341881 338.66406250]
[28.15024757 330.48663330]
[27.99251175 321.74346924]
[30.69549942 313.38143921]
[35.99315262 306.31533813]
[43.33398819 301.32775879]
[51.93842316 298.98245239]
[54.82369614 284.26257324]
[57.70896912 269.54266357]
[60.59424210 254.82278442]
[63.47951508 240.10289001]
[58.33480835 226.12501526]
[68.58210754 214.07081604]
[71.46738434 199.35092163]
[74.35265350 184.63104248]
[77.23792267 169.91114807]
[70.75188446 159.70046997]
[73.03518677 147.41346741]
[83.40001678 139.73667908]
[81.70874786 132.54214478]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[94.23815918 77.37683105]
[98.87129211 71.61872101]
[102.41096497 57.04234695]
[98.14871979 41.80607986]
[108.67086792 31.26408005]
[112.21054077 16.68770599]
[107.94828796 1.45143831]
[118.47043610 -9.09056091]
[122.01010895 -23.66693687]
[125.54978180 -38.24331284]
[129.08944702 -52.81968689]
[132.52050781 -67.42201233]
[135.84277344 -82.04946899]
[139.16503906 -96.67693329]
[141.61076355 -111.47620392]
[143.17127991 -126.39480591]
[144.73181152 -141.31341553]
[146.29232788 -156.23200989]
[132.38366699 -162.15150452]
[120.83879089 -171.90893555]
[112.68428802 -184.63667297]
[108.64523315 -199.20298767]
[109.08078003 -214.31265259]
[113.95220947 -228.62210083]
[122.82633972 -240.85897827]
[134.91410828 -249.93518066]
[149.14067078 -255.04364014]
[164.24099731 -255.73014832]
[178.87240601 -251.93363953]
[191.73385620 -243.99169922]
[201.68173218 -232.61051941]
[207.83146667 -218.80210876]
[209.63623047 -203.79429626]
[206.93554688 -188.92158508]
[199.96955872 -175.50642395]
[189.35768127 -164.74168396]
[176.04351807 -157.58457947]
[161.21093750 -154.67149353]
[159.65040588 -139.75288391]
[158.08988953 -124.83428192]
[156.52935791 -109.91567993]
[167.52546692 -120.11792755]
[182.40402222 -122.02281952]
[195.61569214 -114.91989136]
[202.23286438 -101.45835876]
[199.78749084 -86.65902710]
[189.19163513 -76.04169464]
[174.39727783 -73.56635284]
[160.92237854 -80.15625763]
[153.79249573 -93.35466766]
[150.47023010 -78.72721100]
[147.14797974 -64.09974670]
[148.73193359 -56.88082504]
[143.66583252 -49.28001404]
[140.12615967 -34.70363998]
[136.58648682 -20.12726402]
[133.04681396 -5.55088806]
[137.56224060 8.64277840]
[126.78691101 20.22737694]
[123.24723816 34.80375290]
[127.76266479 48.99742126]
[116.98734283 60.58201981]
[113.44766998 75.15839386]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[98.07531738 142.84078979]
[104.18773651 160.21087646]
[91.95781708 172.79641724]
[89.07254791 187.51631165]
[86.18727112 202.23620605]
[83.30200195 216.95610046]
[88.24033356 231.98684692]
[78.19940186 242.98815918]
[75.31413269 257.70806885]
[72.42886353 272.42794800]
[69.54358673 287.14782715]
[66.65831757 301.86773682]
[80.14739227 319.00912476]
[76.60135651 340.24307251]
[58.75234604 351.76266479]
[56.96987915 366.65637207]
[55.18741608 381.55007935]
[53.40494919 396.44381714]
[51.62248230 411.33752441]
[49.84001541 426.23123169]
[64.58882904 428.99499512]
[79.12273407 432.72744751]
[93.37818146 437.41232300]
[107.29283142 443.02908325]
[120.80584717 449.55319214]
[133.85812378 456.95614624]
[146.39260864 465.20553589]
[158.35447693 474.26531982]
[169.69142151 484.09585571]
[180.35386658 494.65417480]
[190.29519653 505.89407349]
[199.47193909 517.76647949]
[207.84394836 530.21936035]
[215.37463379 543.19836426]
[222.03106689 556.64666748]
[227.78413391 570.50555420]
[232.60868835 584.71435547]
[236.48361206 599.21087646]
[239.39196777 613.93188477]
[241.32106018 628.81286621]
[242.26242065 643.78887939]
[242.21195984 658.79431152]
[241.16989136 673.76361084]
[239.14074707 688.63128662]
[236.13343811 703.33233643]
[232.16110229 717.80255127]
[227.24108887 731.97857666]
[221.39492798 745.79840088]
[214.64819336 759.20166016]
[207.03038025 772.12969971]
[198.57478333 784.52600098]
[189.31840515 796.33642578]
[179.30169678 807.50921631]
[168.56848145 817.99554443]
[157.16566467 827.74963379]
[145.14314270 836.72869873]
[132.55345154 844.89361572]
[119.45167542 852.20861816]
[105.89508820 858.64172363]
[91.94297028 864.16473389]
[77.65633392 868.75360107]
[63.09764862 872.38824463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 168]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[70 154]
[71 153]
[72 152]
[73 151]
[76 149]
[78 148]
[79 147]
[81 145]
[83 144]
[84 143]
[86 141]
[87 140]
[89 138]
[90 137]
[91 136]
[92 135]
[93 133]
[94 132]
[95 131]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
