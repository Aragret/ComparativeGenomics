%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[71.68354797 956.30883789]
[56.69493866 955.63891602]
[41.76322937 954.17218018]
[26.93074799 951.91284180]
[12.23953342 948.86724854]
[-2.26876664 945.04412842]
[-16.55302811 940.45422363]
[-30.57275772 935.11059570]
[-44.28821945 929.02838135]
[-57.66053391 922.22485352]
[-70.65179443 914.71923828]
[-83.22517395 906.53277588]
[-95.34503174 897.68878174]
[-106.97701263 888.21228027]
[-118.08815002 878.13012695]
[-128.64694214 867.47094727]
[-138.62347412 856.26483154]
[-147.98944092 844.54370117]
[-156.71830750 832.34063721]
[-164.78532410 819.69030762]
[-172.16763306 806.62860107]
[-178.84429932 793.19250488]
[-184.79641724 779.42004395]
[-190.00708008 765.35040283]
[-194.46154785 751.02331543]
[-198.14718628 736.47949219]
[-201.05354309 721.76007080]
[-203.17236328 706.90686035]
[-204.49768066 691.96197510]
[-205.02571106 676.96765137]
[-204.75495911 661.96655273]
[-203.68620300 647.00109863]
[-201.82246399 632.11370850]
[-199.16902161 617.34661865]
[-195.73339844 602.74169922]
[-191.52534485 588.34033203]
[-186.55679321 574.18334961]
[-180.84179688 560.31085205]
[-174.39657593 546.76220703]
[-167.23941040 533.57574463]
[-159.39056396 520.78894043]
[-150.87231445 508.43795776]
[-141.70877075 496.55786133]
[-131.92594910 485.18228149]
[-121.55154419 474.34350586]
[-110.61498260 464.07226562]
[-99.14726257 454.39761353]
[-87.18089294 445.34704590]
[-74.74978638 436.94613647]
[-61.88918686 429.21878052]
[-48.63554382 422.18685913]
[-35.02643204 415.87026978]
[-21.10042381 410.28692627]
[-6.89699650 405.45269775]
[7.54358959 401.38125610]
[22.18040085 398.08413696]
[36.97194672 395.57070923]
[51.87629700 393.84805298]
[66.85121155 392.92111206]
[81.85423279 392.79248047]
[82.52401733 377.80743408]
[83.19380188 362.82238770]
[83.86358643 347.83737183]
[84.53337097 332.85232544]
[85.20315552 317.86727905]
[85.87294006 302.88223267]
[71.41615295 296.39169312]
[60.53055191 284.82220459]
[54.90453339 269.92514038]
[55.42725372 253.97113037]
[62.04822922 239.40409851]
[73.78055573 228.46685791]
[88.84789276 222.85581970]
[89.29449463 207.86247253]
[89.74110413 192.86912537]
[90.18770599 177.87577820]
[77.44434357 170.16394043]
[70.22404480 157.02153015]
[70.55369568 141.92988586]
[78.44486237 128.94425964]
[91.86386871 121.60412598]
[92.31047058 106.61077881]
[89.38359070 99.10038757]
[92.87699890 91.39798737]
[93.54678345 76.41294861]
[94.21656799 61.42790985]
[94.88635254 46.44287109]
[95.44456482 31.45326233]
[95.89116669 16.45991135]
[96.33777618 1.46656203]
[96.22610474 -13.53302193]
[95.55632019 -28.51806068]
[94.88653564 -43.50310135]
[94.21675110 -58.48814011]
[93.54696655 -73.47317505]
[79.01422882 -77.72502136]
[66.65092468 -86.46730042]
[57.79813385 -98.75171661]
[53.41614151 -113.24574280]
[53.98027802 -128.37718201]
[59.42934418 -142.50468445]
[69.17226410 -154.09580994]
[82.15220642 -161.89323425]
[96.96119690 -165.05116272]
[111.99287415 -163.22702026]
[125.61670685 -156.61871338]
[136.35488892 -145.94302368]
[143.04261780 -132.35800171]
[144.95446777 -117.33722687]
[141.88304138 -102.51005554]
[134.16151428 -89.48481750]
[122.62746429 -79.67440033]
[108.53200531 -74.14295959]
[109.20178986 -59.15792465]
[109.87157440 -44.17288589]
[110.54135895 -29.18784714]
[111.21114349 -14.20280743]
[123.10559845 -23.34184456]
[137.70277405 -19.88894272]
[144.24217224 -6.38945198]
[137.90319824 7.20530415]
[123.35870361 10.87377834]
[111.33112335 1.91316795]
[110.88452148 16.90651703]
[110.43791199 31.89986801]
[113.38086700 38.67930603]
[109.87139130 47.11265564]
[109.20160675 62.09769440]
[108.53182220 77.08273315]
[107.86203766 92.06777191]
[107.30382538 107.05738068]
[106.85721588 122.05073547]
[119.81553650 130.17657471]
[126.91979980 143.60885620]
[126.35058594 158.69335938]
[118.36083984 171.38272095]
[105.18106079 178.32238770]
[104.73445129 193.31573486]
[104.28784180 208.30908203]
[103.84123993 223.30242920]
[116.99671173 228.75996399]
[127.47715759 238.36004639]
[134.03742981 250.93446350]
[135.90757751 264.96334839]
[132.88317871 278.75881958]
[125.34743500 290.66815186]
[114.22277832 299.27166748]
[100.85797882 303.55203247]
[100.18819427 318.53707886]
[99.51840973 333.52209473]
[98.84862518 348.50714111]
[98.17884064 363.49218750]
[97.50905609 378.47723389]
[96.83927155 393.46224976]
[111.77098846 394.92889404]
[126.60348511 397.18814087]
[141.29472351 400.23361206]
[155.80303955 404.05667114]
[170.08732605 408.64645386]
[184.10710144 413.98999023]
[197.82260132 420.07211304]
[211.19494629 426.87561035]
[224.18626404 434.38113403]
[236.75968933 442.56747437]
[248.87960815 451.41137695]
[260.51165771 460.88781738]
[271.62286377 470.96990967]
[282.18170166 481.62905884]
[292.15829468 492.83508301]
[301.52435303 504.55618286]
[310.25329590 516.75915527]
[318.32040405 529.40942383]
[325.70278931 542.47113037]
[332.37954712 555.90716553]
[338.33172607 569.67956543]
[343.54251099 583.74920654]
[347.99707031 598.07629395]
[351.68276978 612.62005615]
[354.58923340 627.33947754]
[356.70816040 642.19262695]
[358.03356934 657.13757324]
[358.56167603 672.13183594]
[358.29104614 687.13293457]
[357.22235107 702.09844971]
[355.35873413 716.98577881]
[352.70538330 731.75286865]
[349.26983643 746.35784912]
[345.06188965 760.75921631]
[340.09341431 774.91625977]
[334.37850952 788.78881836]
[327.93338013 802.33752441]
[320.77630615 815.52398682]
[312.92755127 828.31085205]
[304.40936279 840.66186523]
[295.24591064 852.54205322]
[285.46313477 863.91766357]
[275.08880615 874.75653076]
[264.15231323 885.02783203]
[252.68464661 894.70257568]
[240.71833801 903.75323486]
[228.28729248 912.15417480]
[215.42672729 919.88165283]
[202.17314148 926.91363525]
[188.56405640 933.23034668]
[174.63809204 938.81372070]
[160.43469238 943.64807129]
[145.99414062 947.71960449]
[131.35734558 951.01678467]
[116.56581116 953.53033447]
[101.66147614 955.25305176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[73 140]
[74 139]
[75 138]
[76 137]
[81 132]
[82 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 125]
[89 124]
[90 123]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
