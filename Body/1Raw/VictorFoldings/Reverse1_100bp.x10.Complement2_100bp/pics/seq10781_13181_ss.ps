%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[78.82990265 513.74218750]
[68.11649323 524.25836182]
[56.42390060 533.67376709]
[43.86472702 541.89776611]
[30.55992699 548.85107422]
[16.63764000 554.46685791]
[2.23194671 558.69091797]
[-12.51841450 561.48260498]
[-27.47138596 562.81512451]
[-42.48295593 562.67547607]
[-57.40855789 561.06512451]
[-72.10443878 557.99951172]
[-86.42906952 553.50823975]
[-100.24449921 547.63446045]
[-113.41765594 540.43487549]
[-125.82169342 531.97869873]
[-137.33712769 522.34741211]
[-147.85308838 511.63381958]
[-157.26826477 499.94104004]
[-165.49200439 487.38168335]
[-172.44508362 474.07675171]
[-178.06056213 460.15435791]
[-182.28434753 445.74856567]
[-185.07575989 430.99816895]
[-186.40792847 416.04516602]
[-186.26800537 401.03359985]
[-184.65734863 386.10803223]
[-181.59146118 371.41220093]
[-177.09988403 357.08767700]
[-171.22586060 343.27236938]
[-164.02598572 330.09933472]
[-155.56956482 317.69546509]
[-145.93806458 306.18023682]
[-135.22424316 295.66448975]
[-123.53126526 286.24954224]
[-110.97176361 278.02606201]
[-97.66668701 271.07324219]
[-83.74417114 265.45803833]
[-69.33831024 261.23452759]
[-54.58784103 258.44342041]
[-39.63481522 257.11154175]
[-24.62324905 257.25177002]
[-9.69771385 258.86273193]
[4.99804592 261.92892456]
[19.32249832 266.42077637]
[25.19145966 252.61659241]
[31.06041908 238.81242371]
[36.92938232 225.00823975]
[42.79833984 211.20407104]
[48.56437302 197.35658264]
[54.22716141 183.46655273]
[51.86719513 168.76010132]
[64.24177551 158.90209961]
[69.90456390 145.01206970]
[55.27717209 148.33460999]
[43.46471786 139.08982849]
[43.17490768 124.09263611]
[54.62137604 114.39839172]
[69.36621094 117.15334320]
[76.53998566 130.32499695]
[83.22017670 116.89461517]
[89.90037537 103.46424103]
[95.14709473 89.41176605]
[98.90338898 74.88970947]
[102.65969086 60.36764908]
[106.41599274 45.84558868]
[110.17229462 31.32352829]
[113.92859650 16.80146980]
[117.68489838 2.27941060]
[109.77296448 -6.59402990]
[107.15364075 -18.06747818]
[110.36484528 -29.26489067]
[118.49764252 -37.43638611]
[129.44956970 -40.63349152]
[133.63658142 -55.03727341]
[137.82359314 -69.44105530]
[142.01060486 -83.84484100]
[145.87490845 -98.33853149]
[149.41458130 -112.91490936]
[152.95425415 -127.49127960]
[153.95851135 -142.45762634]
[152.39799500 -157.37623596]
[150.83747864 -172.29483032]
[141.32754517 -181.00827026]
[140.33491516 -193.46614075]
[147.84802246 -202.94664001]
[146.50978088 -217.88682556]
[145.17155457 -232.82701111]
[143.83331299 -247.76719666]
[142.49508667 -262.70736694]
[141.15684509 -277.64755249]
[139.81861877 -292.58773804]
[138.48037720 -307.52792358]
[137.14215088 -322.46810913]
[122.48585510 -326.33709717]
[110.03849030 -334.98803711]
[101.30313110 -347.37631226]
[97.33460999 -362.00598145]
[98.61214447 -377.11038208]
[104.98146820 -390.86566162]
[115.67346191 -401.61074829]
[129.39700317 -408.04815674]
[144.49491882 -409.40054321]
[159.14404297 -405.50454712]
[171.57545471 -396.83065796]
[180.28796387 -384.42633057]
[184.22952271 -369.78939819]
[182.92414856 -354.68734741]
[176.52947998 -340.94381714]
[165.81771851 -330.21844482]
[152.08232117 -323.80633545]
[153.42056274 -308.86618042]
[154.75880432 -293.92599487]
[156.09703064 -278.98580933]
[157.43527222 -264.04562378]
[158.77349854 -249.10542297]
[160.11174011 -234.16523743]
[161.44996643 -219.22505188]
[162.78820801 -204.28486633]
[173.64242554 -190.49528503]
[165.75607300 -173.85536194]
[167.31660461 -158.93675232]
[168.87712097 -144.01814270]
[174.12623596 -158.06973267]
[182.66294861 -170.40361023]
[193.96524048 -180.26556396]
[207.34197998 -187.05253601]
[221.97515869 -190.34948730]
[236.96997070 -189.95483398]
[251.40945435 -185.89268494]
[264.41064453 -178.41145325]
[275.17852783 -167.96861267]
[283.05462646 -155.20274353]
[287.55731201 -140.89450073]
[288.41122437 -125.91883087]
[285.56420898 -111.19149780]
[279.19030762 -97.61308289]
[269.67929077 -86.01391602]
[257.61276245 -77.10328674]
[243.72863770 -71.42608643]
[228.87588501 -69.32947540]
[213.96276855 -70.94166565]
[199.90124512 -76.16407013]
[187.55117798 -84.67733765]
[177.66777039 -95.96086884]
[170.85539246 -109.32468414]
[167.53063965 -123.95160675]
[163.99096680 -109.37523651]
[160.45129395 -94.79885864]
[161.96363831 -91.61371613]
[162.00837708 -87.53780365]
[160.18363953 -83.26889038]
[156.41438293 -79.65782928]
[152.22737122 -65.25404358]
[148.04035950 -50.85026169]
[143.85336304 -36.44647980]
[153.61970520 -20.96313286]
[148.88587952 -2.94914246]
[132.20695496 6.03571129]
[128.45065308 20.55776978]
[124.69435120 35.07983017]
[120.93804932 49.60189056]
[117.18175507 64.12394714]
[113.42545319 78.64601135]
[109.66915131 93.16806793]
[120.28132629 82.56703949]
[134.11297607 76.76313782]
[149.11227417 76.61732483]
[163.05413818 82.15123749]
[173.87040710 92.54395294]
[179.95652771 106.25377655]
[180.40965271 121.24693298]
[175.16259766 135.29927063]
[164.99369812 146.32621765]
[151.41146851 152.69200134]
[136.43075562 153.45227051]
[122.27384186 148.49426270]
[111.04083252 138.55346680]
[104.39807129 125.10453033]
[103.33074951 110.14443207]
[96.65055847 123.57480621]
[89.97035980 137.00518799]
[83.79459381 150.67485046]
[78.13180542 164.56488037]
[80.08673096 180.26484680]
[68.11718750 189.12934875]
[62.45440292 203.01936340]
[62.11250687 212.14739990]
[56.60251999 217.07302856]
[50.73355865 230.87721252]
[44.86459732 244.68138123]
[38.99563599 258.48556519]
[33.12667465 272.28973389]
[46.30012512 279.48883057]
[58.70449829 287.94451904]
[70.22032166 297.57531738]
[80.73670197 308.28851318]
[90.15235138 319.98092651]
[98.37658691 332.53991699]
[105.33020782 345.84457397]
[110.94624329 359.76675415]
[115.17060089 374.17236328]
[117.96260834 388.92266846]
[119.29537201 403.87561035]
[119.15604401 418.88720703]
[117.54598999 433.81283569]
[114.48069000 448.50875854]
[109.98968506 462.83349609]
[104.11621857 476.64901733]
[96.91686249 489.82232666]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[50 187]
[51 186]
[53 184]
[54 183]
[60 182]
[61 181]
[62 180]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[74 156]
[75 155]
[76 154]
[77 153]
[78 149]
[79 148]
[80 147]
[81 123]
[82 122]
[83 121]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
