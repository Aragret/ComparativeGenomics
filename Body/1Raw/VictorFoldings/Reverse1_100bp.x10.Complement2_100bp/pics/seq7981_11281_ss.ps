%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[248.88725281 451.75930786]
[254.16508484 437.70257568]
[260.93179321 424.29888916]
[269.10806274 411.70538330]
[278.59799194 400.06973267]
[289.29037476 389.52838135]
[279.97549438 377.77111816]
[270.66061401 366.01388550]
[261.34573364 354.25662231]
[252.03083801 342.49938965]
[238.06268311 337.32833862]
[235.55751038 321.70672607]
[226.24263000 309.94946289]
[216.92773438 298.19223022]
[207.61285400 286.43496704]
[193.61651611 291.69458008]
[178.65951538 292.37145996]
[164.20606995 288.38674927]
[151.67498779 280.11856079]
[142.30041504 268.36611938]
[137.01026917 254.27250671]
[136.33441162 239.21357727]
[140.35159302 224.66349792]
[148.68055725 212.05056763]
[139.36567688 200.29331970]
[130.05078125 188.53607178]
[120.73590088 176.77880859]
[123.86682892 191.44842529]
[123.44535065 206.44250488]
[119.49530792 220.91305542]
[112.24009705 234.04173279]
[102.09002686 245.08601379]
[89.61914825 253.42129517]
[75.53273010 258.57620239]
[60.62744141 260.25915527]
[45.74624634 258.37500000]
[31.73074532 253.03031921]
[19.37358475 244.52734375]
[9.37362289 233.34696960]
[2.29640508 220.12150574]
[-1.45781767 205.59890747]
[-1.67672586 190.60049438]
[1.65206087 175.97453308]
[8.34028339 162.54814148]
[18.00969124 151.08068848]
[30.11343002 142.22070312]
[43.96697617 136.46923828]
[58.78684616 134.15159607]
[73.73490143 135.39883423]
[87.96575928 140.14042664]
[100.67459869 148.10821533]
[111.14331818 158.85241699]
[106.52930450 144.57968140]
[101.91529846 130.30694580]
[97.30129242 116.03421021]
[84.56626892 105.11654663]
[88.25723267 88.75337982]
[76.49134827 78.17630768]
[79.72247314 63.63639069]
[70.85181427 75.73231506]
[55.87102509 76.49122620]
[45.82338333 65.35368347]
[48.11563873 50.52986908]
[61.05802155 42.94734192]
[75.10874176 48.19448090]
[71.35244751 33.67242050]
[67.59614563 19.15036201]
[63.83984375 4.62830353]
[60.73323441 19.30307770]
[54.12059402 32.76684189]
[44.40627670 44.19628143]
[32.18432617 52.89248276]
[18.20211601 58.32366943]
[3.31466365 60.15772247]
[-11.56765747 58.28248596]
[-25.53478813 52.81263733]
[-37.73263168 44.08265305]
[-47.41528702 32.62638092]
[-53.99065399 19.14437294]
[-57.05664825 4.46106005]
[-56.42578506 -10.52566719]
[-52.13663483 -24.89936638]
[-44.45148849 -37.78107834]
[-33.84029007 -48.38307953]
[-20.95191956 -56.05706024]
[-6.57450914 -60.33374786]
[8.41275978 -60.95162201]
[23.09340858 -57.87290192]
[36.56971359 -51.28585052]
[48.01758957 -41.59326553]
[56.73699188 -29.38785934]
[62.19474030 -15.41596508]
[63.53297424 -30.35614967]
[64.87120819 -45.29633331]
[66.20944214 -60.23651886]
[59.73418808 -74.67195129]
[68.57610321 -86.65818024]
[69.91433716 -101.59836578]
[71.25257111 -116.53855133]
[72.59080505 -131.47874451]
[58.85542679 -137.89083862]
[48.14365387 -148.61621094]
[41.74898529 -162.35972595]
[40.44361496 -177.46177673]
[44.38516998 -192.09870911]
[53.09768677 -204.50306702]
[65.52909088 -213.17692566]
[80.17822266 -217.07292175]
[95.27613068 -215.72055054]
[108.99967957 -209.28315735]
[119.69166565 -198.53805542]
[126.06099701 -184.78277588]
[127.33853149 -169.67835999]
[123.37001038 -155.04870605]
[114.63464355 -142.66043091]
[102.18727875 -134.00949097]
[87.53099060 -130.14050293]
[86.19275665 -115.20031738]
[84.85452271 -100.26013184]
[83.51628876 -85.31994629]
[90.08726501 -71.95314026]
[81.14962769 -58.89828491]
[79.81139374 -43.95809937]
[78.47315979 -29.01791573]
[77.13492584 -14.07773113]
[78.36190033 0.87200278]
[82.11820221 15.39406204]
[85.87450409 29.91612053]
[89.63080597 44.43817902]
[93.92492676 58.81039429]
[105.34562683 68.37161255]
[102.45968628 83.92738342]
[112.57754517 89.69541931]
[116.24241638 100.75027466]
[111.57402039 111.42020416]
[116.18803406 125.69293976]
[120.80204010 139.96566772]
[125.41604614 154.23840332]
[132.49314880 167.46392822]
[141.80804443 179.22117615]
[151.12292480 190.97843933]
[160.43780518 202.73568726]
[174.62149048 197.51260376]
[189.70469666 196.93005371]
[204.20979309 201.03253174]
[216.71968079 209.40615845]
[226.01623535 221.22042847]
[231.19889832 235.31053162]
[231.77191162 250.29223633]
[227.69175720 264.69787598]
[219.37011719 277.12008667]
[228.68499756 288.87731934]
[237.99987793 300.63458252]
[247.31475830 312.39184570]
[261.94918823 318.40383911]
[263.78808594 333.18447876]
[273.10296631 344.94174194]
[282.41784668 356.69900513]
[291.73275757 368.45623779]
[301.04763794 380.21350098]
[313.75527954 372.21578979]
[327.25314331 365.63894653]
[341.38296509 360.56005859]
[355.97909546 357.03866577]
[370.87039185 355.11608887]
[385.88226318 354.81481934]
[400.83871460 356.13839722]
[415.56439209 359.07135010]
[429.88659668 363.57925415]
[443.63748169 369.60925293]
[456.65576172 377.09066772]
[468.78881836 385.93576050]
[479.89443970 396.04083252]
[489.84237671 407.28744507]
[498.51599121 419.54367065]
[505.81359863 432.66589355]
[511.64965820 446.50018311]
[515.95574951 460.88436890]
[518.68133545 475.64981079]
[519.79449463 490.62338257]
[519.28216553 505.62954712]
[517.15039062 520.49237061]
[513.42407227 535.03753662]
[508.14703369 549.09454346]
[501.38104248 562.49859619]
[493.20547485 575.09252930]
[483.71612549 586.72869873]
[473.02432251 597.27062988]
[461.25540161 606.59472656]
[448.54733276 614.59173584]
[435.04910278 621.16790771]
[420.91900635 626.24603271]
[406.32269287 629.76660156]
[391.43127441 631.68841553]
[376.41940308 631.98889160]
[361.46301270 630.66448975]
[346.73751831 627.73071289]
[332.41552734 623.22204590]
[318.66497803 617.19134521]
[305.64709473 609.70922852]
[293.51449585 600.86346436]
[282.40945435 590.75775146]
[272.46212769 579.51062012]
[263.78915405 567.25396729]
[256.49224854 554.13134766]
[250.65693665 540.29675293]
[246.35163879 525.91229248]
[243.62683105 511.14672852]
[242.51448059 496.17309570]
[243.02760315 481.16696167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[12 154]
[13 153]
[14 152]
[15 151]
[24 142]
[25 141]
[26 140]
[27 139]
[52 138]
[53 137]
[54 136]
[55 135]
[57 132]
[59 130]
[65 129]
[66 128]
[67 127]
[68 126]
[92 125]
[93 124]
[94 123]
[95 122]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
