%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[-63.67023849 416.89038086]
[-59.33197021 431.32794189]
[-58.57559967 446.38421631]
[-61.44509506 461.18383789]
[-67.77363586 474.86642456]
[-77.19328308 486.63644409]
[-89.15639496 495.80963135]
[-102.96745300 501.85266113]
[-117.82349396 504.41421509]
[-132.86080933 503.34533691]
[-147.20515442 498.70816040]
[-160.02256775 490.77233887]
[-170.56785583 479.99920654]
[-178.22792053 467.01510620]
[-182.55743408 452.57492065]
[-183.30468750 437.51818848]
[-180.42620850 422.72030640]
[-174.08938599 409.04156494]
[-164.66259766 397.27722168]
[-152.69392395 388.11129761]
[-138.87921143 382.07666016]
[-124.02161407 379.52410889]
[-108.98494720 380.60211182]
[-104.37094116 366.32937622]
[-99.75692749 352.05664062]
[-95.14292145 337.78393555]
[-90.63529205 323.47723389]
[-86.23429108 309.13739014]
[-81.83329773 294.79754639]
[-92.14430237 305.69171143]
[-104.35913086 314.39791870]
[-118.02112579 320.59066772]
[-132.61952209 324.03839111]
[-147.60853577 324.61227417]
[-162.42781067 322.29080200]
[-176.52330017 317.16079712]
[-189.36804199 309.41400146]
[-200.48182678 299.34008789]
[-209.44915771 287.31567383]
[-215.93479919 273.79025269]
[-219.69624329 259.26953125]
[-220.59289551 244.29635620]
[-218.59123230 229.43051147]
[-213.76606750 215.22778320]
[-206.29782104 202.21911621]
[-196.46568298 190.89088440]
[-184.63722229 181.66658020]
[-171.25468445 174.89106750]
[-156.81835938 170.81765747]
[-141.86798096 169.59863281]
[-126.96246338 171.27957153]
[-112.65906525 175.79763794]
[-99.49253082 182.98390198]
[-87.95510101 192.56970215]
[-78.47811127 204.19668579]
[-71.41587067 217.43014526]
[-67.03239441 231.77536011]
[-65.49156189 246.69601440]
[-66.85099792 261.63427734]
[-71.05758667 276.02603149]
[-60.89403915 264.99417114]
[-57.96088791 250.39122009]
[-42.91984558 245.48432922]
[-32.75629807 234.45245361]
[-22.59275055 223.42057800]
[-12.42920303 212.38870239]
[-2.26565671 201.35681152]
[7.89789009 190.32493591]
[10.83104229 175.72200012]
[25.87208557 170.81510925]
[36.03563309 159.78323364]
[46.19918060 148.75135803]
[56.28031921 137.64411926]
[66.27848816 126.46214294]
[76.27666473 115.28016663]
[86.27483368 104.09819794]
[89.32199860 90.45244598]
[102.54319000 85.90363312]
[112.54136658 74.72165680]
[114.26496887 68.33881378]
[118.34136963 64.37901306]
[123.00755310 63.36128616]
[133.33421326 52.48194885]
[143.66088867 41.60261536]
[153.49147034 30.27302170]
[162.80635071 18.51577187]
[169.58634949 5.13549757]
[173.55844116 -9.32902622]
[177.31474304 -23.85108566]
[180.85441589 -38.42745972]
[184.39408875 -53.00383759]
[187.93376160 -67.58020782]
[183.67150879 -82.81647491]
[194.19364929 -93.35847473]
[197.73332214 -107.93485260]
[201.27299500 -122.51123047]
[203.27700806 -137.37675476]
[203.72361755 -152.37010193]
[204.17022705 -167.36344910]
[204.61683655 -182.35681152]
[191.04486084 -189.33995056]
[181.85366821 -201.52537537]
[178.86816406 -216.49366760]
[182.68112183 -231.27284241]
[192.53549194 -242.92849731]
[206.47467041 -249.14637756]
[221.73101807 -248.69194031]
[235.27539062 -241.65541077]
[244.41853333 -229.43386841]
[247.34506226 -214.45394897]
[243.47392273 -199.68991089]
[233.57373047 -188.07315063]
[219.61018372 -181.91020203]
[219.16357422 -166.91685486]
[218.71696472 -151.92350769]
[218.27037048 -136.93014526]
[226.27101135 -149.61831665]
[238.47367859 -158.34156799]
[253.06814575 -161.80586243]
[267.88943481 -159.49728394]
[280.73889160 -151.75831604]
[289.71035767 -139.73696899]
[293.47299194 -125.21654510]
[291.46859741 -110.35105896]
[283.99456787 -97.34573364]
[272.15957642 -88.12981415]
[257.71929932 -84.07042694]
[242.81587219 -85.76977539]
[229.66011047 -92.97575378]
[220.20361328 -104.61940002]
[215.84938049 -118.97155762]
[212.30970764 -104.39517975]
[208.77003479 -89.81880188]
[213.28546143 -75.62513733]
[202.51013184 -64.04054260]
[198.97045898 -49.46416473]
[195.43078613 -34.88778687]
[191.89111328 -20.31141281]
[193.56675720 -15.83913708]
[192.45074463 -10.26674747]
[188.02296448 -5.35692978]
[184.05087280 9.10759354]
[194.00512695 -2.11349010]
[206.11267090 -10.96827984]
[219.82269287 -17.05394173]
[234.51147461 -20.09361839]
[249.51078796 -19.94902420]
[264.13824463 -16.62673759]
[277.72839355 -10.27790260]
[289.66299438 -1.19134581]
[299.39907837 10.21955395]
[306.49371338 23.43567657]
[310.62417603 37.85577774]
[311.60253906 52.82383728]
[309.38430786 67.65890503]
[304.07034302 81.68609619]
[295.90246582 94.26725769]
[285.25222778 104.83003235]
[272.60412598 112.89388275]
[258.53356934 118.09195709]
[243.68072510 120.18778992]
[228.72123718 119.08601379]
[214.33569336 114.83676910]
[201.17852783 107.63336182]
[189.84831238 97.80349731]
[180.86048889 85.79437256]
[174.62394714 72.15232086]
[171.42240906 57.49796677]
[171.40153503 42.49798203]
[174.56359863 27.83065414]
[165.24871826 39.58790588]
[180.23477173 38.94130707]
[191.38148499 48.97879028]
[192.30348206 63.95042801]
[182.47264099 75.27978516]
[167.52047729 76.47689056]
[156.01229858 66.85599518]
[154.54022217 51.92928314]
[144.21354675 62.80861664]
[133.88688660 73.68795013]
[123.72333527 84.71983337]
[113.72516632 95.90180206]
[110.67800140 109.54755402]
[97.45681000 114.09636688]
[87.45863342 125.27834320]
[77.46046448 136.46031189]
[67.46229553 147.64228821]
[64.07510376 156.12550354]
[57.23105621 158.91490173]
[47.06750870 169.94677734]
[36.90396118 180.97865295]
[33.24384689 196.37066650]
[18.92976761 200.48849487]
[8.76622105 211.52037048]
[-1.39732623 222.55224609]
[-11.56087303 233.58412170]
[-21.72442055 244.61599731]
[-31.88796616 255.64787292]
[-35.54808426 271.03988647]
[-49.86215973 275.15771484]
[-60.02570724 286.18957520]
[-67.49344635 299.19854736]
[-71.89444733 313.53839111]
[-76.29544830 327.87823486]
[-75.82161713 337.00036621]
[-80.87018585 342.39791870]
[-85.48419952 356.67065430]
[-90.09820557 370.94338989]
[-94.71221924 385.21612549]
[-81.88999939 393.14419556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 209]
[24 208]
[25 207]
[26 206]
[27 204]
[28 203]
[29 202]
[60 201]
[61 200]
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 193]
[70 191]
[71 190]
[72 189]
[73 187]
[74 186]
[75 185]
[76 184]
[78 182]
[79 181]
[82 180]
[83 179]
[84 178]
[85 171]
[86 170]
[87 142]
[88 141]
[89 138]
[90 137]
[91 136]
[92 135]
[94 133]
[95 132]
[96 131]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
