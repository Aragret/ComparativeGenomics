%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[-18.19051552 447.50689697]
[-10.56777477 460.45584106]
[-4.86552525 474.35781860]
[-1.19985688 488.92984009]
[0.35460228 503.87521362]
[-0.23379469 518.88970947]
[-2.95306873 533.66760254]
[-7.74785900 547.90802002]
[-14.52054977 561.32116699]
[-23.13325691 573.63385010]
[-33.41064072 584.59539795]
[-45.14345932 593.98272705]
[-58.09285355 601.60467529]
[-71.99518585 607.30603027]
[-86.56742859 610.97082520]
[-101.51290894 612.52435303]
[-116.52735138 611.93505859]
[-131.30508423 609.21484375]
[-145.54524231 604.41918945]
[-158.95793152 597.64562988]
[-171.27008057 589.03216553]
[-182.23101807 578.75408936]
[-191.61761475 567.02069092]
[-199.23873901 554.07086182]
[-204.93927002 540.16815186]
[-208.60313416 525.59570312]
[-210.15574646 510.65011597]
[-209.56549072 495.63571167]
[-206.84439087 480.85815430]
[-202.04783630 466.61828613]
[-195.27348328 453.20602417]
[-186.65925598 440.89440918]
[-176.38052368 429.93411255]
[-164.64653015 420.54824829]
[-151.69619751 412.92788696]
[-137.79315186 407.22824097]
[-123.22045898 403.56527710]
[-108.27478790 402.01358032]
[-93.26042175 402.60476685]
[-78.48302460 405.32678223]
[-64.24345398 410.12423706]
[-50.83160782 416.89941406]
[-42.23304367 404.60855103]
[-33.63447952 392.31771851]
[-25.03591728 380.02688599]
[-16.43735313 367.73605347]
[-7.83878851 355.44522095]
[0.75977534 343.15438843]
[9.08171940 330.67459106]
[17.12289238 318.01205444]
[25.16406441 305.34951782]
[33.20523834 292.68701172]
[39.48259735 279.06369019]
[43.88359833 264.72384644]
[48.17771912 250.35162354]
[52.36473083 235.94784546]
[48.48758698 221.56671143]
[59.76944351 210.47480774]
[63.95645523 196.07102966]
[68.14347076 181.66725159]
[72.33048248 167.26347351]
[76.51748657 152.85968018]
[80.70449829 138.45590210]
[84.89151001 124.05212402]
[83.74003601 116.75171661]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[109.61357880 43.11353683]
[114.01457214 28.77369118]
[109.47621155 10.92755032]
[122.78018951 -0.51670760]
[126.96720123 -14.92048931]
[113.86402130 -7.61934090]
[99.11011505 -10.32529259]
[89.45075989 -21.80121994]
[89.30209351 -36.80048370]
[98.73207092 -48.46562195]
[113.42944336 -51.46348953]
[126.67476654 -44.42350388]
[132.41255188 -30.56240082]
[138.07533264 -44.45242691]
[143.73812866 -58.34245300]
[149.40090942 -72.23248291]
[155.06369019 -86.12250519]
[160.72648621 -100.01253510]
[166.38926697 -113.90256500]
[172.05204773 -127.79258728]
[177.71484375 -141.68261719]
[183.17019653 -155.65541077]
[188.10179138 -169.82154846]
[192.71580505 -184.09428406]
[197.32980347 -198.36701965]
[201.94381714 -212.63975525]
[206.45144653 -226.94644165]
[210.85244751 -241.28628540]
[215.25344849 -255.62612915]
[201.92590332 -262.60406494]
[190.10763550 -271.91229248]
[180.20115662 -283.23379517]
[172.54388428 -296.18295288]
[167.39662170 -310.31872559]
[164.93466187 -325.15966797]
[165.24189758 -340.20028687]
[168.30783081 -354.92831421]
[174.02804565 -368.84210205]
[182.20771790 -381.46777344]
[192.56825256 -392.37530518]
[204.75675964 -401.19317627]
[218.35812378 -407.62103271]
[232.90908813 -411.44000244]
[247.91401672 -412.51995850]
[262.86190796 -410.82412720]
[277.24356079 -406.41027832]
[290.56921387 -399.42877197]
[302.38497925 -390.11734009]
[312.28842163 -378.79318237]
[319.94219971 -365.84194946]
[325.08566284 -351.70480347]
[327.54360962 -336.86318970]
[327.23233032 -321.82266235]
[324.16241455 -307.09545898]
[318.43844604 -293.18319702]
[310.25537109 -280.55972290]
[299.89190674 -269.65499878]
[287.70101929 -260.84042358]
[274.09793091 -254.41622925]
[259.54592896 -250.60119629]
[244.54071045 -249.52528381]
[229.59329224 -251.22512817]
[225.19229126 -236.88528442]
[220.79129028 -222.54544067]
[221.83395386 -215.22869873]
[216.21655273 -208.02574158]
[211.60253906 -193.75300598]
[206.98854065 -179.48027039]
[202.37452698 -165.20753479]
[203.64579773 -161.91873169]
[203.38725281 -157.85078430]
[201.25006104 -153.72941589]
[197.22267151 -150.40869141]
[198.35499573 -145.76898193]
[196.58471680 -140.36869812]
[191.60487366 -136.01983643]
[185.94207764 -122.12979889]
[180.27929688 -108.23977661]
[174.61651611 -94.34974670]
[168.95372009 -80.45972443]
[163.29093933 -66.56969452]
[157.62814331 -52.67966843]
[151.96536255 -38.78964233]
[146.30258179 -24.89961433]
[141.37098694 -10.73347855]
[137.18397522 3.67030358]
[142.73320007 14.41891766]
[139.36280823 26.45321274]
[128.35441589 33.17469025]
[123.95342255 47.51453781]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.29529572 128.23913574]
[95.10828400 142.64291382]
[90.92127228 157.04669189]
[86.73426056 171.45048523]
[82.54724884 185.85426331]
[78.36023712 200.25804138]
[74.17322540 214.66181946]
[77.75088501 230.07321167]
[66.76851654 240.13485718]
[62.58150101 254.53863525]
[63.19109344 263.65270996]
[58.22344208 269.12484741]
[53.82244492 283.46469116]
[64.41046143 272.83953857]
[77.73486328 265.95037842]
[92.52565765 263.45388794]
[107.37306976 265.58798218]
[120.86194611 272.14923096]
[131.70660400 282.51229858]
[138.87341309 295.68945312]
[141.67927551 310.42468262]
[139.85675049 325.31353760]
[133.57955933 338.93692017]
[123.44597626 349.99633789]
[110.42189789 357.43768311]
[95.74868774 360.55166626]
[80.82490540 359.04150391]
[67.07298279 353.05111694]
[55.80367279 343.15148926]
[48.09109116 330.28619385]
[44.67035294 315.68142700]
[45.86776352 300.72817993]
[37.82659149 313.39071655]
[29.78541756 326.05322266]
[21.74424362 338.71575928]
[21.52586746 343.93106079]
[19.52855682 348.12200928]
[16.44039536 350.78250122]
[13.05061340 351.75292969]
[4.45204926 364.04379272]
[-4.14651442 376.33462524]
[-12.74507904 388.62545776]
[-21.34364319 400.91629028]
[-29.94220734 413.20712280]
[-38.54077148 425.49795532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 210]
[43 209]
[44 208]
[45 207]
[46 206]
[47 205]
[48 204]
[49 200]
[50 199]
[51 198]
[52 197]
[53 178]
[54 177]
[55 175]
[56 174]
[58 172]
[59 171]
[60 170]
[61 169]
[62 168]
[63 167]
[64 166]
[66 165]
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[74 156]
[75 155]
[83 154]
[84 153]
[85 152]
[86 151]
[87 150]
[88 149]
[89 148]
[90 147]
[91 146]
[92 143]
[93 139]
[94 138]
[95 137]
[96 136]
[97 134]
[98 133]
[99 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
