%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[318.39343262 458.00524902]
[310.92568970 444.99630737]
[303.45794678 431.98733521]
[295.99020386 418.97839355]
[288.52246094 405.96945190]
[281.05471802 392.96047974]
[273.29833984 380.12155151]
[265.25717163 367.45901489]
[257.21600342 354.79650879]
[249.17481995 342.13397217]
[241.13365173 329.47143555]
[226.95397949 334.26995850]
[212.02893066 335.53598022]
[197.22569275 333.19165039]
[183.40544128 327.36892700]
[171.37319946 318.40225220]
[161.83097839 306.80938721]
[155.33682251 293.26144409]
[152.27214050 278.54406738]
[152.81932068 263.51187134]
[156.95089722 249.03881836]
[164.43087769 235.96739197]
[174.82823181 225.05958557]
[166.78706360 212.39704895]
[158.74589539 199.73452759]
[150.70471191 187.07200623]
[142.38278198 174.59220886]
[133.78421021 162.30137634]
[125.18564606 150.01052856]
[116.58708191 137.71969604]
[107.98851776 125.42885590]
[99.38995361 113.13802338]
[101.67137909 127.96350861]
[100.64237976 142.92817688]
[96.35317230 157.30184937]
[89.01303101 170.38322449]
[78.98009491 181.53402710]
[66.74390411 190.21017456]
[52.90147781 195.98834229]
[38.12822342 198.58660889]
[23.14496231 197.87818909]
[8.68275833 193.89764404]
[-4.55274439 186.83921814]
[-15.91575623 177.04728699]
[-24.85185051 164.99961853]
[-30.92501640 151.28405762]
[-33.83893204 136.56980896]
[-33.45141602 121.57481384]
[-29.78137970 107.03071594]
[-23.00789070 93.64714813]
[-13.46144485 82.07713318]
[-1.60783327 72.88518524]
[11.97458076 66.51980591]
[26.62308121 63.29158020]
[41.62293243 63.35801315]
[56.24226379 66.71586609]
[69.76776123 73.20130920]
[81.53948975 82.49789429]
[90.97949982 94.14644623]
[87.65724182 79.51898956]
[84.33498383 64.89152527]
[80.68688965 50.34190750]
[76.71479797 35.87738419]
[65.91141510 28.83112717]
[62.90082932 16.70181847]
[68.76761627 6.12319040]
[65.01131439 -8.39886856]
[61.25501633 -22.92092896]
[57.49871445 -37.44298553]
[53.74241257 -51.96504593]
[48.20799255 -38.02337646]
[36.50578690 -28.63943291]
[21.69472504 -26.26615906]
[7.64638186 -31.52392197]
[-1.96703827 -43.03835297]
[-4.63261080 -57.79961014]
[0.34643900 -71.94913483]
[11.66859913 -81.78827667]
[26.37428284 -84.74510956]
[40.61946106 -80.04671478]
[50.68007278 -68.92204285]
[49.11954880 -83.84064484]
[47.55902863 -98.75925446]
[45.99850464 -113.67785645]
[44.43798065 -128.59646606]
[42.43396759 -143.46199036]
[39.98823929 -158.26126099]
[37.54251099 -173.06053162]
[22.51797485 -174.36975098]
[8.29132462 -179.37507629]
[-4.24313688 -187.76185608]
[-14.29748440 -199.00289917]
[-21.23969269 -212.39157104]
[-24.63336945 -227.08625793]
[-24.26518440 -242.16323853]
[-20.15828133 -256.67474365]
[-12.57082462 -269.70861816]
[-1.97976911 -280.44546509]
[10.94912434 -288.21041870]
[25.40313339 -292.51535034]
[40.47366714 -293.08966064]
[55.21337891 -289.89721680]
[68.69572449 -283.13870239]
[80.07318115 -273.23901367]
[88.63055420 -260.82037354]
[93.82992554 -246.66349792]
[95.34445953 -231.65826416]
[93.07894897 -216.74792480]
[87.17579651 -202.86975098]
[78.00609589 -190.89614868]
[66.14624786 -181.57977295]
[52.34178162 -175.50625610]
[54.78750992 -160.70698547]
[57.23323822 -145.90771484]
[59.43091583 -144.16749573]
[61.07168961 -141.45190430]
[61.78059769 -137.96867371]
[61.26473618 -134.05735779]
[59.35658646 -130.15698242]
[60.91710663 -115.23838043]
[62.47763062 -100.31977081]
[64.03815460 -85.40116882]
[65.59867859 -70.48256683]
[68.26447296 -55.72134781]
[72.02077484 -41.19928741]
[75.77707672 -26.67722893]
[79.53337860 -12.15516949]
[83.28967285 2.36688972]
[96.24701691 14.20218277]
[91.17932129 31.90528870]
[95.15141296 46.36981201]
[98.01850891 48.42215729]
[100.03397369 51.96517181]
[100.50801086 56.58346176]
[98.96244049 61.56927109]
[102.28469849 76.19673157]
[105.60695648 90.82418823]
[111.68079376 104.53945923]
[120.27935791 116.83029175]
[128.87791443 129.12113953]
[137.47648621 141.41197205]
[146.07504272 153.70280457]
[154.67361450 165.99365234]
[159.40426636 168.20001221]
[162.50543213 171.65487671]
[163.77442932 175.52847290]
[163.36724854 179.03083801]
[171.40841675 191.69335938]
[179.44958496 204.35588074]
[187.49076843 217.01840210]
[201.78459167 212.24639893]
[216.79608154 211.03491211]
[231.65226746 213.45002747]
[245.49029541 219.34709167]
[257.50747681 228.37930298]
[267.00787354 240.01815796]
[273.44262695 253.58438110]
[276.44158936 268.28750610]
[275.83468628 283.27203369]
[271.66156006 297.66705322]
[264.16897583 310.63705444]
[253.79617310 321.43026733]
[261.83734131 334.09280396]
[269.87850952 346.75531006]
[277.91967773 359.41784668]
[285.96087646 372.08038330]
[290.58825684 374.49578857]
[293.53207397 378.08566284]
[294.62683105 382.01205444]
[294.06369019 385.49273682]
[301.53143311 398.50170898]
[308.99917603 411.51065063]
[316.46691895 424.51959229]
[323.93463135 437.52856445]
[331.40237427 450.53750610]
[345.49487305 445.29806519]
[360.25756836 442.44979858]
[375.28775024 442.07037354]
[390.17535400 444.17016602]
[404.51422119 448.69186401]
[417.91323853 455.51217651]
[430.00683594 464.44494629]
[440.46508789 475.24655151]
[449.00271606 487.62231445]
[455.38674927 501.23458862]
[459.44308472 515.71203613]
[461.06100464 530.65966797]
[460.19644165 545.66973877]
[456.87292480 560.33276367]
[451.18115234 574.24871826]
[443.27636719 587.03790283]
[433.37426758 598.35156250]
[421.74493408 607.88092041]
[408.70568848 615.36608887]
[394.61218262 620.60278320]
[379.84893799 623.44824219]
[364.81869507 623.82476807]
[349.93148804 621.72210693]
[335.59347534 617.19763184]
[322.19577026 610.37475586]
[310.10391235 601.43963623]
[299.64773560 590.63598633]
[291.11251831 578.25860596]
[284.73107910 564.64508057]
[280.67755127 550.16687012]
[279.06250000 535.21893311]
[279.92996216 520.20904541]
[283.25628662 505.54663086]
[288.95074463 491.63180542]
[296.85800171 478.84408569]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[5 171]
[6 170]
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[23 150]
[24 149]
[25 148]
[26 147]
[27 143]
[28 142]
[29 141]
[30 140]
[31 139]
[32 138]
[59 137]
[60 136]
[61 135]
[62 131]
[63 130]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
