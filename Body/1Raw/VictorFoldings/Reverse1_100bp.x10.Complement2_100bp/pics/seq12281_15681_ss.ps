%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[164.08570862 578.10327148]
[162.53244019 563.14245605]
[163.67572021 548.14465332]
[167.47877502 533.59216309]
[173.81936646 519.95263672]
[182.49366760 507.66455078]
[193.22282410 497.12298584]
[205.66195679 488.66674805]
[219.41119385 482.56771851]
[215.87152100 467.99133301]
[212.33184814 453.41497803]
[208.79217529 438.83859253]
[205.25250244 424.26220703]
[200.61936951 418.50408936]
[201.77035522 409.44247437]
[198.44810486 394.81503296]
[195.12583923 380.18756104]
[191.80357361 365.56008911]
[187.93927002 351.06640625]
[183.53828430 336.72656250]
[172.40731812 326.82952881]
[175.75512695 311.36657715]
[171.35412598 297.02673340]
[166.95312500 282.68688965]
[162.44551086 268.38021851]
[157.83149719 254.10748291]
[152.79457092 239.97845459]
[147.33921814 226.00564575]
[141.88386536 212.03285217]
[130.04762268 202.99113464]
[132.23608398 187.32200623]
[126.78073120 173.34921265]
[121.32537079 159.37641907]
[115.14960480 145.70674133]
[108.27018738 132.37731934]
[101.39077759 119.04788971]
[87.61955261 114.54238129]
[80.97425842 101.66657257]
[85.27979279 87.83152771]
[78.40038300 74.50209808]
[71.52096558 61.17266846]
[65.94019318 75.09584808]
[52.20362473 81.12135315]
[38.18019485 75.79750061]
[31.90316010 62.17403030]
[36.96829224 48.05509186]
[50.47405243 41.52864838]
[64.68300629 46.33272552]
[59.02022171 32.44269943]
[53.35743713 18.55267143]
[48.47564697 32.73604584]
[36.25594711 41.43540573]
[21.25597382 41.40610504]
[9.07035255 32.65906906]
[4.24401760 18.45672607]
[8.57707119 4.09620285]
[20.45339203 -5.06638336]
[35.44340897 -5.61361456]
[47.95694351 2.65952516]
[43.98484421 -11.80499840]
[40.01274872 -26.26952171]
[34.72257996 -33.71612930]
[36.09090805 -40.97901154]
[25.14430046 -52.40189743]
[29.44790459 -66.66121674]
[25.69160461 -81.18328094]
[14.74499512 -92.60616302]
[19.04860115 -106.86548615]
[15.29229927 -121.38754272]
[11.53599930 -135.90960693]
[7.67169333 -150.40330505]
[3.69959712 -164.86782837]
[-0.27249908 -179.33235168]
[-4.67349720 -193.67219543]
[-9.49949455 -207.87464905]
[-14.32549286 -222.07710266]
[-19.15148926 -236.27955627]
[-34.01424408 -233.98397827]
[-49.04981613 -234.30436707]
[-63.80129623 -237.23095703]
[-77.82040405 -242.67483521]
[-90.68110657 -250.47056580]
[-101.99259186 -260.38125610]
[-111.41110992 -272.10568237]
[-118.65044403 -285.28762817]
[-123.49060059 -299.52642822]
[-125.78448486 -314.38943481]
[-125.46240234 -329.42498779]
[-122.53413391 -344.17614746]
[-117.08866119 -358.19461060]
[-109.29147339 -371.05444336]
[-99.37951660 -382.36480713]
[-87.65400696 -391.78198242]
[-74.47126007 -399.01983643]
[-60.23188782 -403.85836792]
[-45.36861420 -406.15057373]
[-30.33311462 -405.82678223]
[-15.58229828 -402.89685059]
[-1.56442916 -397.44979858]
[11.29450703 -389.65112305]
[22.60374260 -379.73788452]
[32.01959991 -368.01132202]
[39.25594330 -354.82775879]
[44.09286880 -340.58782959]
[46.38338852 -325.72430420]
[46.05789566 -310.68884277]
[43.12627792 -295.93835449]
[37.67763138 -281.92111206]
[29.87752724 -269.06304932]
[19.96300316 -257.75494385]
[8.23535347 -248.34040833]
[-4.94903421 -241.10556030]
[-0.12303679 -226.90310669]
[4.70296097 -212.70065308]
[9.52895832 -198.49818420]
[11.98096752 -197.13958740]
[14.04255772 -194.72785950]
[15.30991268 -191.40682983]
[15.43869019 -187.46374512]
[14.19202518 -183.30444336]
[18.16412163 -168.83992004]
[22.13621712 -154.37539673]
[26.93873978 -148.75778198]
[26.05805779 -139.66590881]
[29.81435966 -125.14384460]
[33.57065964 -110.62178802]
[44.24859238 -100.23761749]
[40.21366501 -84.93958282]
[43.96996307 -70.41751862]
[54.64789581 -60.03334808]
[50.61296844 -44.73531342]
[54.47727203 -30.24161911]
[58.44937134 -15.77709484]
[62.42146683 -1.31257105]
[67.24746704 12.88988495]
[72.91024780 26.77991104]
[78.57303619 40.66993713]
[84.85039520 54.29325485]
[91.72981262 67.62268066]
[98.60922241 80.95211029]
[112.38044739 85.45761871]
[119.02574158 98.33342743]
[114.72020721 112.16847229]
[121.59961700 125.49790192]
[128.47903442 138.82733154]
[132.95619202 124.51107788]
[145.51992798 116.31642914]
[160.42628479 117.98986053]
[170.86027527 128.76631165]
[172.05162048 143.71893311]
[163.45564270 156.01158142]
[149.00231934 160.02421570]
[135.29817200 153.92105103]
[140.75352478 167.89385986]
[146.20887756 181.86665344]
[158.43531799 191.90780640]
[155.85665894 206.57749939]
[161.31201172 220.55029297]
[166.76737976 234.52308655]
[170.25183105 237.11395264]
[172.50407410 240.35307312]
[173.47163391 243.77348328]
[173.25903320 246.93914795]
[172.10423279 249.49346924]
[176.71823120 263.76620483]
[182.33563232 270.96914673]
[181.29298401 278.28588867]
[185.69398499 292.62573242]
[190.09497070 306.96560669]
[201.54072571 317.88830566]
[197.87812805 332.32556152]
[202.27912903 346.66540527]
[211.50598145 334.83895874]
[226.50273132 334.52642822]
[236.21430969 345.95819092]
[233.48171997 360.70718384]
[220.31930542 367.90100098]
[206.43104553 362.23785400]
[209.75329590 376.86529541]
[213.07556152 391.49276733]
[216.39781189 406.12020874]
[219.82888794 420.72253418]
[223.36854553 435.29891968]
[226.90821838 449.87530518]
[230.44789124 464.45166016]
[233.98756409 479.02804565]
[249.00271606 478.14205933]
[263.93475342 479.95156860]
[278.30364990 484.39840698]
[291.64752197 491.33966064]
[303.53741455 500.55215454]
[313.59112549 511.73977661]
[321.48544312 524.54290771]
[326.96661377 538.54992676]
[329.85845947 553.31054688]
[330.06799316 568.35034180]
[327.58850098 583.18585205]
[322.49966431 597.34014893]
[314.96508789 610.35821533]
[305.22695923 621.82159424]
[293.59835815 631.36175537]
[280.45303345 638.67205811]
[266.21359253 643.51745605]
[251.33778381 645.74224854]
[236.30377197 645.27496338]
[221.59486389 642.13049316]
[207.68386841 636.40997314]
[195.01799011 628.29730225]
[184.00436401 618.05328369]
[174.99703979 606.00720215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 186]
[10 185]
[11 184]
[12 183]
[13 182]
[15 181]
[16 180]
[17 179]
[18 178]
[19 172]
[20 171]
[22 169]
[23 168]
[24 167]
[25 165]
[26 164]
[27 159]
[28 158]
[29 157]
[31 155]
[32 154]
[33 153]
[34 145]
[35 144]
[36 143]
[39 140]
[40 139]
[41 138]
[48 137]
[49 136]
[50 135]
[59 134]
[60 133]
[61 132]
[63 131]
[65 129]
[66 128]
[68 126]
[69 125]
[70 124]
[71 122]
[72 121]
[73 120]
[74 115]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
