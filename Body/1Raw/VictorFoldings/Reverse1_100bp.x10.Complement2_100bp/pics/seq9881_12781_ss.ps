%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-28.35525894 463.59857178]
[-20.45007133 476.40109253]
[-15.11088467 490.46841431]
[-12.53070736 505.29202271]
[-12.80281162 520.33605957]
[-15.91736031 535.05664062]
[-21.76176453 548.92169189]
[-30.12475395 561.42999268]
[-40.70401001 572.12927246]
[-53.11710358 580.63293457]
[-66.91529846 586.63342285]
[-81.59981537 589.91394043]
[-96.63980103 590.35583496]
[-111.49157715 587.94311523]
[-125.61826324 582.76300049]
[-138.50918579 575.00280762]
[-149.69834900 564.94305420]
[-158.78126526 552.94732666]
[-165.42959595 539.44934082]
[-169.40301514 524.93695068]
[-170.55787659 509.93487549]
[-168.85244751 494.98538208]
[-164.34834290 480.62884521]
[-157.20841980 467.38430786]
[-147.69078064 455.73049927]
[-136.13945007 446.08874512]
[-122.97203827 438.80758667]
[-108.66451263 434.15017700]
[-93.73410034 432.28494263]
[-78.72051239 433.27926636]
[-64.16648865 437.09722900]
[-57.68698883 423.56887817]
[-51.20749283 410.04052734]
[-44.72799683 396.51217651]
[-38.24850082 382.98382568]
[-31.76900482 369.45550537]
[-34.05854797 352.05648804]
[-18.78010178 341.77786255]
[-12.50274086 328.15454102]
[-6.22538042 314.53121948]
[-19.91921997 320.65319824]
[-34.61955643 317.66989136]
[-44.84352493 306.69400024]
[-46.77783966 291.81924438]
[-39.70104980 278.59353638]
[-26.25262070 271.94976807]
[-11.44848633 274.36587524]
[-0.81022072 284.94070435]
[1.69419885 299.73129272]
[9.54595470 286.95046997]
[17.39770889 274.16961670]
[25.24946594 261.38876343]
[32.32657242 248.16323853]
[38.60393143 234.53993225]
[44.88129044 220.91661072]
[51.15865326 207.29328918]
[51.10286331 199.90284729]
[57.63222885 193.51495361]
[64.11172485 179.98660278]
[70.59121704 166.45826721]
[76.04657745 152.48545837]
[80.44757843 138.14561462]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[105.21257782 57.45338440]
[108.09784698 42.73349380]
[109.43608093 27.79331017]
[110.77431488 12.85312462]
[103.11801910 2.47314858]
[104.54021454 -9.94301605]
[113.73661041 -17.80131340]
[115.29713440 -32.71991730]
[116.07845306 -47.69955444]
[116.07845306 -62.69955444]
[116.07845306 -77.69955444]
[107.52662659 -87.35507965]
[107.83543396 -99.84860992]
[116.29407501 -108.49604034]
[116.51740265 -123.49437714]
[116.74073029 -138.49270630]
[116.96405792 -153.49104309]
[117.18738556 -168.48937988]
[99.86492157 -179.87596130]
[92.99649811 -199.28695679]
[99.21771240 -218.76872253]
[115.83689880 -230.44619751]
[114.94408417 -245.41960144]
[114.05126953 -260.39300537]
[113.15845490 -275.36639404]
[104.61347198 -288.68157959]
[111.57951355 -301.84683228]
[110.68669891 -316.82022095]
[109.79388428 -331.79364014]
[95.41729736 -336.73147583]
[84.02800751 -346.79888916]
[77.36280060 -360.46063232]
[76.43806458 -375.63342285]
[81.39482117 -390.00347900]
[91.47719574 -401.37951660]
[105.14769745 -408.02676392]
[120.32168579 -408.93151855]
[134.68522644 -403.95587158]
[146.04798889 -393.85855103]
[152.67723083 -380.17932129]
[153.56204224 -365.00415039]
[148.56750488 -350.64715576]
[138.45523071 -339.29769897]
[124.76728821 -332.68646240]
[125.66010284 -317.71304321]
[126.55291748 -302.73962402]
[135.03404236 -290.49545288]
[128.13186646 -276.25921631]
[129.02467346 -261.28582764]
[129.91749573 -246.31240845]
[130.81030273 -231.33900452]
[139.97369385 -228.28601074]
[147.82086182 -222.60432434]
[153.61671448 -214.80429077]
[156.81178284 -205.59570312]
[157.09425354 -195.82313538]
[154.42031860 -186.38856506]
[149.01985168 -178.16813660]
[141.37678528 -171.93070984]
[132.18572998 -168.26605225]
[131.96240234 -153.26771545]
[131.73907471 -138.26937866]
[131.51574707 -123.27104950]
[131.29241943 -108.27271271]
[140.65313721 -93.42872620]
[131.07846069 -77.69955444]
[131.07846069 -62.69955444]
[131.07846069 -47.69955444]
[141.62280273 -58.36804199]
[156.54560852 -59.88796616]
[169.02433777 -51.56443787]
[173.35391235 -37.20286179]
[167.55488586 -23.36915779]
[154.27850342 -16.38791084]
[139.59455872 -19.45084953]
[130.21574402 -31.15939522]
[128.65521240 -16.24079132]
[136.65429688 -0.62088096]
[125.71450043 14.19135857]
[124.37626648 29.13154411]
[123.03803253 44.07172775]
[131.77972412 31.88226700]
[144.47996521 23.90079689]
[159.25476074 21.31132698]
[173.91235352 24.49798584]
[186.27839661 32.98805237]
[194.51843262 45.52207565]
[197.41011047 60.24070740]
[194.52447510 74.96052551]
[186.28959656 87.49794006]
[173.92704773 95.99308777]
[159.27076721 99.18577576]
[144.49490356 96.60237885]
[131.79138184 88.62612915]
[123.04468536 76.44026184]
[119.55242157 61.85438538]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[94.78742218 142.54661560]
[90.38642120 156.88645935]
[102.39983368 147.90437317]
[117.28279877 146.03424072]
[131.14494324 151.76493835]
[140.36274719 163.59846497]
[142.52668762 178.44155884]
[137.07112122 192.41426086]
[125.42211151 201.86416626]
[110.62469482 204.32109070]
[96.54687500 199.14277649]
[86.86855316 187.68283081]
[84.11956787 172.93775940]
[77.64006805 186.46611023]
[71.16057587 199.99444580]
[64.78196716 213.57064819]
[58.50460815 227.19396973]
[52.22724915 240.81729126]
[45.94988632 254.44059753]
[59.64372635 248.31861877]
[74.34406281 251.30192566]
[84.56803131 262.27783203]
[86.50234985 277.15258789]
[79.42556000 290.37829590]
[65.97712708 297.02206421]
[51.17299271 294.60595703]
[40.53472900 284.03109741]
[38.03030777 269.24053955]
[30.17855263 282.02136230]
[22.32679749 294.80221558]
[14.47504139 307.58306885]
[7.39793587 320.80859375]
[1.12057519 334.43188477]
[-5.15678549 348.05520630]
[-1.43058503 360.40341187]
[-6.93947697 371.62109375]
[-18.24065971 375.93499756]
[-24.72015572 389.46334839]
[-31.19965172 402.99166870]
[-37.67914963 416.52001953]
[-44.15864182 430.04837036]
[-50.63813782 443.57672119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 210]
[32 209]
[33 208]
[34 207]
[35 206]
[36 205]
[38 202]
[39 201]
[40 200]
[49 199]
[50 198]
[51 197]
[52 196]
[53 187]
[54 186]
[55 185]
[56 184]
[58 183]
[59 182]
[60 181]
[61 170]
[62 169]
[63 168]
[64 167]
[66 165]
[67 164]
[68 163]
[69 148]
[70 147]
[71 146]
[74 144]
[75 143]
[76 135]
[77 134]
[78 133]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[89 118]
[90 117]
[91 116]
[92 115]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
