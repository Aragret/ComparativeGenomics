%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[85.46282196 745.16857910]
[71.93383789 738.60992432]
[59.66897964 729.91375732]
[49.00285339 719.31738281]
[40.22642899 707.10980225]
[33.57913589 693.62414551]
[29.24231911 679.22821045]
[27.33428764 664.31481934]
[27.90709686 649.29083252]
[30.94511795 634.56597900]
[36.36547470 620.54211426]
[44.02029037 607.60168457]
[53.70073700 596.09783936]
[65.14273071 586.34436035]
[78.03411865 578.60729980]
[92.02321625 573.09777832]
[106.72840118 569.96606445]
[106.05860901 554.98101807]
[105.38882446 539.99597168]
[94.25789642 530.16552734]
[93.36517334 514.97808838]
[103.75173950 503.36959839]
[103.08195496 488.38458252]
[102.41217041 473.39953613]
[101.74238586 458.41448975]
[101.07260132 443.42944336]
[100.06834412 428.46310425]
[98.73011017 413.52291870]
[97.28068542 398.59310913]
[95.72016144 383.67449951]
[86.70076752 371.82125854]
[92.96038818 357.29101562]
[91.39986420 342.37240601]
[78.43360138 335.09133911]
[72.16690063 321.40951538]
[75.19357300 306.48663330]
[86.55831146 296.08715820]
[84.99778748 281.16854858]
[83.43726349 266.24993896]
[81.87673950 251.33134460]
[75.39662933 264.85937500]
[64.02737427 274.64407349]
[49.68490601 279.03649902]
[34.78617096 277.29647827]
[21.84186935 269.71722412]
[13.03334808 257.57598877]
[9.84499454 242.91874695]
[12.81410313 228.21554565]
[21.44032669 215.94410706]
[34.26999664 208.17237854]
[49.14108276 206.21005249]
[63.54755402 210.38781738]
[75.06166077 220.00161743]
[81.74349213 233.43299866]
[83.08172607 218.49281311]
[84.41996002 203.55262756]
[85.75819397 188.61244202]
[86.98516846 173.66270447]
[88.10082245 158.70425415]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[95.71582794 40.21606827]
[88.18485260 26.30223083]
[96.11078644 13.69156551]
[96.33411407 -1.30677152]
[96.55744171 -16.30510902]
[96.78076935 -31.30344582]
[84.36344147 -22.88858223]
[69.99766541 -27.20420265]
[64.27336121 -41.06898880]
[71.41027069 -54.26234055]
[86.14733124 -57.05860901]
[97.62023926 -47.39799118]
[98.95848083 -62.33817673]
[92.48322296 -76.77360535]
[101.32514191 -88.75983429]
[93.19191742 -105.28050232]
[103.83963776 -119.23016357]
[104.95528412 -134.18861389]
[97.14529419 -144.45344543]
[98.38246918 -156.88941956]
[107.46084595 -164.88375854]
[108.79907990 -179.82394409]
[110.13731384 -194.76412964]
[111.47554779 -209.70431519]
[98.46674347 -202.23631287]
[84.46173859 -207.60845947]
[79.78450775 -221.86059570]
[87.88292694 -234.48658752]
[102.78714752 -236.17901611]
[113.50975800 -225.69184875]
[115.95548248 -240.49111938]
[118.40120697 -255.29039001]
[120.84693909 -270.08966064]
[123.29266357 -284.88891602]
[109.60954285 -291.26660156]
[98.15525055 -301.10031128]
[89.77977753 -313.66033936]
[85.10463715 -328.01461792]
[84.47676086 -343.09799194]
[87.94273376 -357.79116821]
[95.24536133 -371.00384521]
[105.84274292 -381.75549316]
[118.94847870 -389.24829102]
[133.59002686 -392.92626953]
[148.68090820 -392.51644897]
[163.10127258 -388.04922485]
[175.78102112 -379.85617065]
[185.77923584 -368.54519653]
[192.35398865 -354.95565796]
[195.01739502 -340.09600830]
[193.57180786 -325.06893921]
[188.12448120 -310.98956299]
[179.07966614 -298.90261841]
[167.10853577 -289.70507812]
[153.09944153 -284.07946777]
[138.09193420 -282.44320679]
[135.64620972 -267.64392090]
[133.20048523 -252.84466553]
[130.75476074 -238.04539490]
[128.30902100 -223.24612427]
[126.41573334 -208.36608887]
[125.07749939 -193.42590332]
[123.73926544 -178.48571777]
[122.40103149 -163.54553223]
[130.63179016 -148.04644775]
[119.91373444 -133.07296753]
[118.79808807 -118.11451721]
[126.45151520 -108.74693298]
[125.64447021 -96.27566528]
[116.26532745 -87.42160034]
[122.83629608 -74.05479431]
[113.89865875 -60.99994278]
[112.56042480 -46.05975723]
[111.77910614 -31.08011818]
[111.55577850 -16.08178139]
[111.33245087 -1.08344376]
[111.10912323 13.91489315]
[118.65607452 26.75595093]
[110.71416473 40.43939590]
[112.89441681 43.21046829]
[113.84079742 47.17524338]
[113.00687408 51.74228287]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[103.05927277 159.81990051]
[101.94362640 174.77835083]
[104.42609406 183.56898499]
[100.69837952 189.95068359]
[99.36014557 204.89086914]
[98.02191162 219.83105469]
[96.68367767 234.77122498]
[96.79534912 249.77081299]
[98.35586548 264.68942261]
[99.91638947 279.60803223]
[101.47691345 294.52664185]
[114.74771881 302.34915161]
[120.79702759 316.32266235]
[117.49730682 331.00518799]
[106.31846619 340.81188965]
[107.87899017 355.73049927]
[117.01000214 368.65081787]
[110.63877106 382.11398315]
[112.19929504 397.03259277]
[116.20451355 405.24209595]
[113.67028809 412.18469238]
[115.00852203 427.12487793]
[118.01280212 431.39352417]
[118.98233032 435.93371582]
[118.15441895 439.92492676]
[116.05764008 442.75967407]
[116.72742462 457.74472046]
[117.39720917 472.72973633]
[118.06699371 487.71478271]
[118.73677826 502.69982910]
[130.11758423 513.33538818]
[130.58337402 528.54187012]
[120.37386322 539.32617188]
[121.04364777 554.31121826]
[121.71343994 569.29626465]
[136.63937378 571.10357666]
[151.06422424 575.34307861]
[164.59446716 581.89916992]
[176.86100769 590.59295654]
[187.52917480 601.18731689]
[196.30795288 613.39312744]
[202.95783997 626.87756348]
[207.29742432 641.27258301]
[209.20832825 656.18560791]
[208.63841248 671.20977783]
[205.60324097 685.93518066]
[200.18557739 699.96014404]
[192.53326416 712.90197754]
[182.85502625 724.40771484]
[171.41491699 734.16339111]
[158.52500916 741.90295410]
[144.53697205 747.41516113]
[129.83239746 750.54974365]
[114.81244659 751.22106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 191]
[18 190]
[19 189]
[22 186]
[23 185]
[24 184]
[25 183]
[26 182]
[27 178]
[28 177]
[29 175]
[30 174]
[32 172]
[33 171]
[37 167]
[38 166]
[39 165]
[40 164]
[54 163]
[55 162]
[56 161]
[57 160]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[64 151]
[65 150]
[66 149]
[67 145]
[69 143]
[70 142]
[71 141]
[72 140]
[78 139]
[79 138]
[81 136]
[83 133]
[84 132]
[87 130]
[88 129]
[89 128]
[90 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
