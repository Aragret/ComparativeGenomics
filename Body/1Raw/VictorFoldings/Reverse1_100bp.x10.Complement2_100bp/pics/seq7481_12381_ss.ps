%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[127.34413910 655.55084229]
[112.36694336 656.60711670]
[97.36231995 656.06542969]
[82.50028229 653.93188477]
[67.94923401 650.23065186]
[53.87404251 645.00372314]
[40.43419647 638.31024170]
[27.78197289 630.22607422]
[16.06073570 620.84289551]
[5.40329361 610.26690674]
[-4.06959534 598.61804199]
[-12.25059605 586.02819824]
[-19.04701233 572.64013672]
[-24.38183403 558.60546875]
[-28.19461632 544.08325195]
[-30.44215393 529.23803711]
[-31.09898186 514.23803711]
[-30.15765953 499.25314331]
[-27.62885094 484.45324707]
[-23.54120827 470.00598145]
[-17.94105148 456.07507324]
[-10.89183140 442.81835938]
[-2.47342277 430.38604736]
[7.21878815 418.91900635]
[18.07498169 408.54714966]
[29.97214699 399.38803101]
[42.77548218 391.54541016]
[56.33991241 385.10815430]
[70.51174927 380.14920044]
[85.13040924 376.72473145]
[100.03025055 374.87356567]
[115.04244995 374.61666870]
[116.38068390 359.67648315]
[117.71891785 344.73629761]
[119.05715179 329.79611206]
[120.39538574 314.85592651]
[119.83717346 299.86633301]
[117.39144135 285.06704712]
[107.68252563 273.77163696]
[113.06618500 258.89459229]
[110.62046051 244.09532166]
[108.17472839 229.29605103]
[105.72900391 214.49678040]
[103.28327179 199.69750977]
[101.08559418 197.95729065]
[99.44482422 195.24169922]
[98.73591614 191.75846863]
[99.25177765 187.84715271]
[101.15992737 183.94677734]
[99.59940338 169.02816772]
[98.03887939 154.10957336]
[96.47835541 139.19096375]
[94.91783905 124.27235413]
[93.35731506 109.35375214]
[85.81600189 122.32019806]
[72.85124207 129.86439514]
[57.85198975 130.01432800]
[44.73901367 122.73078156]
[36.94002151 109.91767883]
[36.49364090 94.92432404]
[43.51655960 81.66994476]
[56.17300415 73.61920166]
[71.15460968 72.87654114]
[84.54521942 79.63610077]
[92.84426880 92.13009644]
[93.51406097 77.14505768]
[94.18384552 62.16001892]
[94.85363007 47.17498016]
[80.40592194 42.89134598]
[67.41120911 35.27888107]
[56.62264252 24.78383255]
[48.66432953 12.01937294]
[43.99518204 -2.27022099]
[42.88249207 -17.25296783]
[45.38660431 -32.05762100]
[51.35767365 -45.82432938]
[60.44463348 -57.75458527]
[72.11581421 -67.15753174]
[85.69006348 -73.48996735]
[100.37650299 -76.38773346]
[101.04628754 -91.37277222]
[101.71607208 -106.35781097]
[102.38585663 -121.34284973]
[95.27248383 -135.47474670]
[103.57036591 -147.84382629]
[103.45870209 -162.84341431]
[102.56588745 -177.81681824]
[101.67307281 -192.79022217]
[100.78025055 -207.76364136]
[99.88743591 -222.73704529]
[98.99462128 -237.71044922]
[95.67873383 -243.43026733]
[95.74002075 -249.11299133]
[98.30489349 -253.14169312]
[97.85828400 -268.13504028]
[83.33282471 -272.36187744]
[70.82559204 -280.87213135]
[61.56192780 -292.83206177]
[56.44938278 -307.06991577]
[55.98883438 -322.19088745]
[60.22540283 -336.71350098]
[68.74403381 -349.21502686]
[80.71015930 -358.47067261]
[94.95145416 -363.57366943]
[110.07270813 -364.02410889]
[124.59249115 -359.77780151]
[137.08830261 -351.25079346]
[146.33593750 -339.27847290]
[151.42939758 -325.03375244]
[151.86967468 -309.91220093]
[147.61364746 -295.39526367]
[139.07827759 -282.90518188]
[127.09976196 -273.66555786]
[112.85163879 -268.58166504]
[113.29824066 -253.58830261]
[113.96802521 -238.60325623]
[114.86084747 -223.62985229]
[115.75366211 -208.65644836]
[116.64647675 -193.68304443]
[117.53929138 -178.70964050]
[118.43210602 -163.73623657]
[128.32276917 -175.01341248]
[143.12863159 -177.41886902]
[156.08067322 -169.85284424]
[161.25738525 -155.77442932]
[156.29203796 -141.62008667]
[143.45472717 -133.86099243]
[128.61450195 -136.04449463]
[118.55540466 -147.17404175]
[125.71669006 -134.11398315]
[117.37089539 -120.67306519]
[116.70111084 -105.68802643]
[116.03132629 -90.70298767]
[115.36154175 -75.71794891]
[129.73088074 -71.52147675]
[142.68605042 -64.00325775]
[153.47180176 -53.59655762]
[161.45816040 -40.90317535]
[166.17721558 -26.65864944]
[167.35054016 -11.68962860]
[164.90559387 3.13410211]
[158.98020935 16.95015335]
[149.91484070 28.95370674]
[138.23297119 38.44439697]
[124.61092377 44.86717224]
[109.83866882 47.84476471]
[109.16888428 62.82980347]
[108.49909973 77.81484222]
[107.82930756 92.79988098]
[108.27591705 107.79322815]
[109.83644104 122.71183777]
[111.39696503 137.63043213]
[112.95748901 152.54904175]
[114.51801300 167.46765137]
[116.07852936 182.38626099]
[118.08254242 197.25178528]
[120.52827454 212.05105591]
[122.97399902 226.85032654]
[125.41973114 241.64959717]
[127.86545563 256.44885254]
[137.74931335 268.80279541]
[132.19071960 282.62130737]
[134.63644409 297.42059326]
[139.50831604 283.23379517]
[148.67059326 271.35723877]
[161.15637207 263.04428101]
[175.64797974 259.17218018]
[190.61610413 260.14959717]
[204.48110962 265.87338257]
[215.77978516 275.73947144]
[223.31977844 288.70669556]
[226.30534363 303.40655518]
[224.42143250 318.28778076]
[217.86685181 331.77990723]
[207.33331299 342.45907593]
[193.93244934 349.19827271]
[179.07849121 351.28634644]
[164.33900452 348.50286865]
[151.26950073 341.14163208]
[141.24920654 329.97946167]
[135.33557129 316.19415283]
[133.99732971 331.13433838]
[132.65910339 346.07452393]
[131.32086182 361.01470947]
[129.98263550 375.95489502]
[144.71018982 378.87567139]
[159.04386902 383.34536743]
[172.82121277 389.31332397]
[185.88613892 396.71197510]
[198.09062195 405.45742798]
[209.29635620 415.45059204]
[219.37637329 426.57827759]
[228.21646118 438.71438599]
[235.71646118 451.72137451]
[241.79139709 465.45190430]
[246.37242126 479.75036621]
[249.40763855 494.45477295]
[250.86264038 509.39849854]
[250.72096252 524.41223145]
[248.98419189 539.32586670]
[245.67202759 553.97033691]
[240.82197571 568.17980957]
[234.48899841 581.79327393]
[226.74487305 594.65643311]
[217.67732239 606.62353516]
[207.38908386 617.55895996]
[195.99676514 627.33892822]
[183.62942505 635.85247803]
[170.42718506 643.00323486]
[156.53965759 648.71014404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 185]
[33 184]
[34 183]
[35 182]
[36 181]
[37 163]
[38 162]
[40 160]
[41 159]
[42 158]
[43 157]
[44 156]
[49 155]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[65 149]
[66 148]
[67 147]
[68 146]
[80 134]
[81 133]
[82 132]
[83 131]
[85 129]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
