%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[82.22476196 199.87765503]
[85.44756317 214.53910828]
[87.26210022 229.44053650]
[87.65193176 244.44696045]
[86.61352539 259.42248535]
[84.15629578 274.23150635]
[80.30249023 288.73986816]
[75.08701324 302.81622314]
[68.55709076 316.33303833]
[60.77186584 329.16796875]
[51.80184555 341.20471191]
[41.72826385 352.33432007]
[30.64234924 362.45593262]
[18.64450073 371.47793579]
[5.84337568 379.31857300]
[-7.64509392 385.90689087]
[-21.69875145 391.18322754]
[-36.19032288 395.09973145]
[-50.98856735 397.62100220]
[-65.95946503 398.72415161]
[-80.96743774 398.39923096]
[-95.87656403 396.64913940]
[-110.55181885 393.48977661]
[-124.86030579 388.94973755]
[-138.67243958 383.07012939]
[-151.86311340 375.90420532]
[-164.31289673 367.51684570]
[-175.90904236 357.98403931]
[-186.54649353 347.39208984]
[-196.12895203 335.83694458]
[-204.56961060 323.42324829]
[-211.79203796 310.26342773]
[-217.73083496 296.47662354]
[-222.33219910 282.18774414]
[-225.55445862 267.52618408]
[-227.36845398 252.62469482]
[-227.75773621 237.61825562]
[-226.71879578 222.64276123]
[-224.26101685 207.83384705]
[-220.40669250 193.32560730]
[-215.19068909 179.24945068]
[-208.66027832 165.73284912]
[-200.87458801 152.89822388]
[-191.90412903 140.86178589]
[-181.83013916 129.73257446]
[-170.74385071 119.61135101]
[-158.74568176 110.58979797]
[-145.94427490 102.74960327]
[-132.45556641 96.16177368]
[-118.40171051 90.88597870]
[-103.90999603 86.96998596]
[-89.11165619 84.44927216]
[-74.14072418 83.34665680]
[-59.13276291 83.67213440]
[-44.22370148 85.42274475]
[-29.54855919 88.58264923]
[-15.24024010 93.12321472]
[-1.42832494 99.00332642]
[11.76210022 106.16973877]
[24.21157837 114.55754089]
[35.80736160 124.09077454]
[46.44443893 134.68310547]
[57.99073792 125.10798645]
[62.84856033 111.02782440]
[78.41033173 108.17442322]
[89.95663452 98.59929657]
[93.65787506 91.43875885]
[101.74686432 88.96912384]
[113.43444824 79.56697083]
[125.12202454 70.16481781]
[131.37625122 52.84528732]
[148.80966187 50.83454895]
[160.35595703 41.25942612]
[171.90226746 31.68430710]
[183.44856262 22.10918808]
[194.99487305 12.53406811]
[206.54116821 2.95894861]
[197.59738159 -9.08752823]
[189.31309509 -21.59671211]
[181.71220398 -34.53253555]
[174.81661987 -47.85770416]
[168.64624023 -61.53379059]
[163.21884155 -75.52136993]
[158.55006409 -89.78010559]
[154.65339661 -104.26889801]
[151.54003906 -118.94595337]
[149.21899414 -133.76896667]
[147.69696045 -148.69520569]
[146.97828674 -163.68162537]
[147.06509399 -178.68499756]
[147.95709229 -193.66209412]
[149.65173340 -208.56971741]
[152.14413452 -223.36488342]
[155.42707825 -238.00494385]
[159.49113464 -252.44767761]
[164.32456970 -266.65145874]
[169.91343689 -280.57528687]
[176.24163818 -294.17907715]
[183.29093933 -307.42355347]
[191.04098511 -320.27056885]
[199.46943665 -332.68307495]
[208.55201721 -344.62527466]
[218.26251221 -356.06271362]
[228.57293701 -366.96246338]
[239.45355225 -377.29306030]
[250.87300110 -387.02471924]
[262.79833984 -396.12939453]
[275.19522095 -404.58081055]
[288.02786255 -412.35464478]
[301.25927734 -419.42846680]
[314.85131836 -425.78186035]
[328.76477051 -431.39651489]
[342.95956421 -436.25622559]
[357.39474487 -440.34701538]
[372.02868652 -443.65710449]
[386.81921387 -446.17687988]
[401.72369385 -447.89913940]
[416.69909668 -448.81887817]
[431.70230103 -448.93347168]
[446.69003296 -448.24255371]
[461.61904907 -446.74816895]
[476.44631958 -444.45455933]
[491.12915039 -441.36840820]
[505.62512207 -437.49856567]
[519.89245605 -432.85623169]
[533.89007568 -427.45474243]
[547.57757568 -421.30969238]
[560.91546631 -414.43881226]
[573.86535645 -406.86187744]
[586.38989258 -398.60079956]
[598.45288086 -389.67932129]
[610.01965332 -380.12319946]
[621.05682373 -369.96002197]
[631.53247070 -359.21902466]
[641.41656494 -347.93124390]
[650.68048096 -336.12915039]
[659.29754639 -323.84683228]
[667.24291992 -311.11968994]
[674.49365234 -297.98443604]
[681.02893066 -284.47888184]
[686.82983398 -270.64202881]
[691.87963867 -256.51373291]
[696.16381836 -242.13476562]
[699.66998291 -227.54656982]
[702.38806152 -212.79118347]
[704.31018066 -197.91119385]
[705.43084717 -182.94946289]
[705.74682617 -167.94915771]
[705.25714111 -152.95352173]
[703.96325684 -138.00578308]
[701.86889648 -123.14904022]
[698.98004150 -108.42613983]
[695.30517578 -93.87952423]
[690.85473633 -79.55113983]
[685.64160156 -65.48229218]
[679.68078613 -51.71355438]
[672.98956299 -38.28461838]
[665.58715820 -25.23420906]
[657.49487305 -12.59995079]
[648.73614502 -0.41827178]
[639.33612061 11.27570438]
[629.32202148 22.44825935]
[618.72259521 33.06718445]
[607.56848145 43.10185623]
[595.89178467 52.52334595]
[583.72625732 61.30448532]
[571.10687256 69.41996002]
[558.07012939 76.84637451]
[544.65350342 83.56230164]
[530.89575195 89.54839325]
[516.83654785 94.78738403]
[502.51635742 99.26416779]
[487.97650146 102.96583557]
[473.25894165 105.88171387]
[458.40609741 108.00340271]
[443.46075439 109.32477570]
[428.46603394 109.84203339]
[413.46517944 109.55367279]
[398.50140381 108.46052551]
[383.61791992 106.56575775]
[368.85754395 103.87481689]
[354.26293945 100.39546967]
[339.87609863 96.13774872]
[325.73855591 91.11392975]
[311.89105225 85.33848572]
[298.37350464 78.82808685]
[285.22491455 71.60149384]
[272.48318481 63.67955017]
[260.18505859 55.08508682]
[248.36595154 45.84289169]
[237.05999756 35.97961044]
[226.29977417 25.52367973]
[216.11628723 14.50524998]
[204.56999207 24.08036995]
[193.02368164 33.65549088]
[181.47738647 43.23060989]
[169.93107605 52.80572891]
[158.38478088 62.38084793]
[156.94891357 74.39187622]
[147.40786743 82.46356201]
[134.52418518 81.85240173]
[122.83659363 91.25455475]
[111.14901733 100.65670013]
[99.53175354 110.14559937]
[87.98545074 119.72071838]
[82.30175781 134.48574829]
[67.56585693 136.65428162]
[56.01955795 146.22940063]
[64.46067047 158.64279175]
[71.68358612 171.80236816]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 208]
[63 207]
[65 205]
[66 204]
[68 203]
[69 202]
[70 201]
[72 198]
[73 197]
[74 196]
[75 195]
[76 194]
[77 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
