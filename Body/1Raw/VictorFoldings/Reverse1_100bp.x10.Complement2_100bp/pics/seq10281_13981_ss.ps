%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[61.49741745 527.71453857]
[54.38814163 540.96966553]
[45.02616119 552.74218750]
[33.71241760 562.65374756]
[20.81060600 570.38574219]
[6.73546267 575.68951416]
[-8.06055164 578.39465332]
[-23.10180855 578.41412354]
[-37.90479279 575.74743652]
[-51.99364853 570.48016357]
[-64.91548157 562.78173828]
[-76.25490570 552.89953613]
[-85.64739990 541.15130615]
[-92.79104614 527.91473389]
[-97.45619202 513.61517334]
[-99.49288940 498.71246338]
[-98.83564758 483.68554688]
[-95.50560760 469.01754761]
[-89.60981750 455.17993164]
[-81.33779144 442.61755371]
[-70.95545197 431.73422241]
[-58.79653549 422.87982178]
[-45.25191498 416.33892822]
[-30.75698662 412.32186890]
[-15.77770329 410.95773315]
[-0.79558742 412.29040527]
[3.17650890 397.82586670]
[7.14860487 383.36135864]
[11.12070084 368.89682007]
[15.09279728 354.43231201]
[18.95710373 339.93859863]
[22.71340370 325.41656494]
[26.46970367 310.89450073]
[25.10137749 303.63162231]
[30.39154434 296.18499756]
[34.36363983 281.72048950]
[38.33573914 267.25595093]
[42.30783463 252.79142761]
[46.27993011 238.32690430]
[50.25202560 223.86238098]
[54.22412109 209.39785767]
[40.09519196 214.43505859]
[27.26786995 206.65946960]
[25.19797897 191.80296326]
[35.41136932 180.81721497]
[50.37910461 181.80050659]
[59.06724548 194.02635193]
[64.10416412 179.89732361]
[69.14107513 165.76829529]
[74.17799377 151.63926697]
[79.21491241 137.51023865]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[108.48104858 42.76191711]
[107.58823395 27.78851128]
[106.69541931 12.81510639]
[105.80260468 -2.15829945]
[104.90979004 -17.13170433]
[104.01697540 -32.10511017]
[95.47199249 -45.42028427]
[102.43803406 -58.58552170]
[101.54521179 -73.55892944]
[100.42956543 -88.51737976]
[99.09133148 -103.45756531]
[97.75309753 -118.39775085]
[94.26837921 -124.01631165]
[94.16044617 -129.69833374]
[96.60422516 -133.80162048]
[95.71141052 -148.77502441]
[94.81859589 -163.74842834]
[93.92578125 -178.72184753]
[93.03296661 -193.69525146]
[92.14015198 -208.66865540]
[91.24732971 -223.64205933]
[90.35451508 -238.61546326]
[72.40158081 -244.12814331]
[57.95583725 -256.07745361]
[49.20576477 -272.62051392]
[47.46445084 -291.22094727]
[52.97259140 -309.03793335]
[64.86558533 -323.35986328]
[81.30913544 -332.01718140]
[79.30512238 -346.88272095]
[77.30110931 -361.74822998]
[75.29709625 -376.61376953]
[73.29308319 -391.47930908]
[71.28907013 -406.34481812]
[56.37633514 -408.81500244]
[42.85497284 -415.57254028]
[31.92729187 -426.01654053]
[24.56497574 -439.21835327]
[21.42267609 -454.00405884]
[22.77980232 -469.05892944]
[28.51568222 -483.04434204]
[38.12028503 -494.71664429]
[50.73957443 -503.03799438]
[65.25144958 -507.26846313]
[80.36553192 -507.03186035]
[94.73788452 -502.34924316]
[107.09052277 -493.63696289]
[116.32505798 -481.66973877]
[121.62036896 -467.51165771]
[122.50559998 -452.42166138]
[118.90203094 -437.74154663]
[111.13008881 -424.77667236]
[99.88085175 -414.67980957]
[86.15459442 -408.34884644]
[88.15860748 -393.48330688]
[90.16262054 -378.61779785]
[92.16664124 -363.75225830]
[94.17065430 -348.88671875]
[96.17466736 -334.02120972]
[107.52913666 -332.40841675]
[118.17823792 -328.11975098]
[127.50047302 -321.39935303]
[134.95031738 -312.63351440]
[140.09013367 -302.32849121]
[142.61592102 -291.08105469]
[142.37522888 -279.54421997]
[139.37641907 -268.38909912]
[133.78843689 -258.26599121]
[125.93135834 -249.76644897]
[116.25801086 -243.38864136]
[105.32792664 -239.50828552]
[106.22074127 -224.53488159]
[107.11355591 -209.56146240]
[108.00637054 -194.58805847]
[108.89918518 -179.61465454]
[109.79199982 -164.64125061]
[110.68482208 -149.66784668]
[111.57763672 -134.69444275]
[112.69328308 -119.73598480]
[114.03151703 -104.79579926]
[115.36975098 -89.85561371]
[118.39518738 -86.16024017]
[119.13132477 -80.52507019]
[116.51862335 -74.45174408]
[117.41143799 -59.47834015]
[125.89256287 -47.23416519]
[118.99037933 -32.99792862]
[119.88319397 -18.02452087]
[120.77600861 -3.05111527]
[121.66882324 11.92229080]
[122.56163788 26.89569664]
[123.45446014 41.86910248]
[129.27096558 28.04274178]
[137.98098755 15.83063507]
[149.15954590 5.82864046]
[162.26119995 -1.47522378]
[176.64671326 -5.72458601]
[191.61416626 -6.71211100]
[206.43328857 -4.38961411]
[220.38098145 1.12958443]
[232.77674866 9.57619095]
[243.01574707 20.53807640]
[250.59838867 33.48038483]
[255.15472412 47.77163696]
[256.46243286 62.71452332]
[254.45768738 77.57995605]
[249.23832703 91.64260864]
[241.05900574 104.21633911]
[230.31881714 114.68765259]
[217.54179382 122.54561615]
[203.35134888 127.40682983]
[188.43988037 129.03410339]
[173.53494263 127.34804535]
[159.36378479 122.43091583]
[146.61784363 114.52263641]
[135.91902161 104.00905609]
[127.78934479 91.40317535]
[122.62547302 77.32004547]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[98.55097961 137.30229187]
[93.34394073 142.54714966]
[88.30702209 156.67617798]
[83.27011108 170.80520630]
[78.23319244 184.93423462]
[73.19627380 199.06326294]
[68.68864441 213.36994934]
[64.71655273 227.83448792]
[60.74445343 242.29901123]
[56.77235794 256.76351929]
[52.80026245 271.22805786]
[48.82816696 285.69256592]
[44.85606766 300.15710449]
[40.99176407 314.65078735]
[37.23546219 329.17285156]
[33.47916412 343.69491577]
[34.35984421 352.78677368]
[29.55732155 358.40438843]
[25.58522606 372.86892700]
[21.61312866 387.33343506]
[17.64103317 401.79797363]
[13.66893673 416.26248169]
[27.23048401 422.76818848]
[39.41233063 431.59103394]
[49.82287598 442.44738770]
[58.12746811 454.98825073]
[64.05915070 468.81051636]
[67.42723846 483.46984863]
[68.12346649 498.49499512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 203]
[27 202]
[28 201]
[29 200]
[30 199]
[31 197]
[32 196]
[33 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[40 189]
[41 188]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[52 181]
[53 180]
[55 178]
[56 177]
[57 176]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[65 142]
[66 141]
[67 138]
[68 137]
[69 136]
[72 135]
[73 134]
[74 133]
[75 132]
[76 131]
[77 130]
[78 129]
[79 128]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
