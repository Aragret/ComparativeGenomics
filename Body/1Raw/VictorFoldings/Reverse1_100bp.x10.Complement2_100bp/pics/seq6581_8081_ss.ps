%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[-20.92613411 329.64620972]
[-16.84536934 344.09649658]
[-14.37905025 358.90798950]
[-13.55711651 373.90090942]
[-14.38954639 388.89324951]
[-16.86623383 403.70303345]
[-20.95711327 418.15045166]
[-26.61252785 432.06011963]
[-33.76382446 445.26324463]
[-42.32419205 457.59948730]
[-52.18971634 468.91915894]
[-63.24063873 479.08480835]
[-75.34281158 487.97302246]
[-88.34932709 495.47595215]
[-102.10229492 501.50247192]
[-116.43476868 505.97946167]
[-131.17276001 508.85253906]
[-146.13737488 510.08688354]
[-161.14694214 509.66744995]
[-176.01928711 507.59936523]
[-190.57383728 503.90771484]
[-204.63392639 498.63732910]
[-218.02888489 491.85217285]
[-230.59609985 483.63464355]
[-242.18302917 474.08444214]
[-252.64901733 463.31753540]
[-261.86700439 451.46459961]
[-269.72509766 438.66955566]
[-276.12792969 425.08767700]
[-280.99774170 410.88388062]
[-284.27542114 396.23052979]
[-285.92120361 381.30557251]
[-285.91510010 366.29016113]
[-284.25717163 351.36651611]
[-280.96755981 336.71588135]
[-276.08621216 322.51602173]
[-269.67233276 308.93936157]
[-261.80383301 296.15072632]
[-252.57620239 284.30529785]
[-242.10147095 273.54690552]
[-230.50677490 264.00613403]
[-217.93287659 255.79881287]
[-204.53239441 249.02455139]
[-190.46801758 243.76560974]
[-175.91047668 240.08581543]
[-161.03646851 238.02981567]
[-146.02655029 237.62260437]
[-131.06295776 238.86909485]
[-116.32729340 241.75418091]
[-101.99846649 246.24282837]
[-88.25041199 252.28053284]
[-75.25000000 259.79403687]
[-63.15506363 268.69210815]
[-52.99151611 257.66021729]
[-42.82796860 246.62834167]
[-32.66442108 235.59646606]
[-22.50087547 224.56459045]
[-19.56772423 209.96165466]
[-4.52668142 205.05476379]
[5.38796997 193.79866028]
[15.04878044 182.32395935]
[24.70959091 170.84925842]
[34.37039948 159.37455750]
[44.03121185 147.89985657]
[53.69202042 136.42517090]
[38.69335556 136.62528992]
[27.85045052 126.26037598]
[27.37461281 111.26792145]
[37.53842163 100.23628998]
[52.51959229 99.48489380]
[63.73622513 109.44416809]
[64.76322174 124.40808868]
[75.40923309 113.84104156]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[114.02371979 75.51294708]
[124.66973114 64.94589996]
[133.98461914 53.18865204]
[141.83636475 40.40781021]
[149.68812561 27.62696648]
[157.53988647 14.84612370]
[164.61698914 1.62059641]
[170.89434814 -12.00271988]
[177.17170715 -25.62603569]
[183.44906616 -39.24935150]
[189.72642517 -52.87266922]
[188.47448730 -68.64426422]
[200.82791138 -76.96545410]
[207.10528564 -90.58876801]
[213.38264465 -104.21208191]
[219.66000366 -117.83540344]
[210.32983398 -133.38229370]
[212.18360901 -151.26084900]
[224.29133606 -164.33197021]
[241.66651917 -167.49018860]
[247.53547668 -181.29437256]
[253.40443420 -195.09854126]
[240.57766724 -202.92744446]
[229.02752686 -212.54057312]
[219.00022888 -223.73303223]
[210.70950317 -236.26625061]
[204.33206177 -249.87309265]
[200.00384521 -264.26351929]
[197.81709290 -279.13079834]
[197.81845093 -294.15802002]
[200.00785828 -309.02493286]
[204.33866882 -323.41458130]
[210.71855164 -337.02026367]
[219.01153564 -349.55200195]
[229.04083252 -360.74264526]
[240.59269714 -370.35369873]
[253.42088318 -378.18029785]
[267.25195312 -384.05560303]
[281.79113770 -387.85437012]
[296.72845459 -389.49566650]
[311.74557495 -388.94445801]
[326.52239990 -386.21255493]
[340.74395752 -381.35812378]
[354.10711670 -374.48468018]
[366.32699585 -365.73870850]
[377.14318848 -355.30667114]
[386.32513428 -343.41085815]
[393.67709351 -330.30490112]
[399.04238892 -316.26809692]
[402.30664062 -301.59967041]
[403.40026855 -286.61230469]
[402.29995728 -271.62539673]
[399.02920532 -256.95843506]
[393.65765381 -242.92402649]
[386.29986572 -229.82131958]
[377.11264038 -217.92962646]
[366.29180908 -207.50238037]
[354.06799316 -198.76185608]
[340.70181274 -191.89436340]
[326.47808838 -187.04626465]
[311.70007324 -184.32092285]
[296.68267822 -183.77641296]
[281.74609375 -185.42434692]
[267.20861816 -189.22958374]
[261.33966064 -175.42541504]
[255.47070312 -161.62123108]
[263.19137573 -152.25286865]
[266.21414185 -140.42088318]
[263.90594482 -128.35551453]
[256.64450073 -118.35797119]
[245.75817871 -112.36157990]
[233.28330994 -111.55803680]
[227.00595093 -97.93472290]
[220.72859192 -84.31140900]
[214.45123291 -70.68809509]
[216.15216064 -55.89092636]
[203.34974670 -46.59530640]
[197.07238770 -32.97199249]
[190.79502869 -19.34867477]
[184.51766968 -5.72535896]
[178.24029541 7.89795685]
[191.93414307 1.77596951]
[206.63447571 4.75927734]
[216.85844421 15.73518085]
[218.79277039 30.60993767]
[211.71597290 43.83563614]
[198.26754761 50.47941208]
[183.46340942 48.06330109]
[172.82514954 37.48846054]
[170.32072449 22.69787979]
[162.46896362 35.47872162]
[154.61721802 48.25956345]
[146.76545715 61.04040527]
[159.82107544 53.65456390]
[174.60388184 51.11120224]
[189.37719727 53.70911026]
[202.40547180 61.14309311]
[212.15815735 72.53981018]
[217.48951721 86.56039429]
[217.77320862 101.55770874]
[212.97593689 115.76989746]
[203.66127014 127.52731323]
[190.92347717 135.44871521]
[176.25898743 138.60350037]
[161.39056396 136.62106323]
[148.06494141 129.73426819]
[137.84761047 118.75219727]
[131.93885803 104.96499634]
[131.03288269 89.99238586]
[135.23678589 75.59191132]
[124.59076691 86.15895844]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[85.97628021 124.48705292]
[75.33026886 135.05409241]
[65.16672516 146.08596802]
[55.50591278 157.56066895]
[45.84510040 169.03536987]
[36.18429184 180.51007080]
[26.52348137 191.98477173]
[16.86267090 203.45947266]
[15.94948196 208.59884644]
[13.41016102 212.48538208]
[9.99423790 214.70945740]
[6.50519609 215.21830750]
[2.84507942 230.61032104]
[-11.46899891 234.72813416]
[-21.63254547 245.76002502]
[-31.79609299 256.79190063]
[-41.95964050 267.82376099]
[-52.12318802 278.85565186]
[-42.26558685 290.18222046]
[-33.71385956 302.52444458]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 208]
[54 207]
[55 206]
[56 205]
[57 204]
[59 202]
[60 198]
[61 197]
[62 196]
[63 195]
[64 194]
[65 193]
[72 192]
[73 191]
[74 190]
[76 188]
[77 187]
[78 186]
[79 169]
[80 168]
[81 167]
[82 166]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[89 151]
[90 150]
[91 149]
[92 148]
[96 142]
[97 141]
[98 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
