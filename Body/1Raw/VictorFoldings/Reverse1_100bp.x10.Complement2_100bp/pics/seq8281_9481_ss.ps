%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[120.12406921 517.30371094]
[120.59278870 502.24618530]
[124.40086365 487.67065430]
[131.35728455 474.30816650]
[141.11312866 462.82901001]
[153.17904663 453.80895996]
[166.94979858 447.70043945]
[164.06452942 432.98052979]
[161.17926025 418.26065063]
[158.29399109 403.54077148]
[155.40870667 388.82086182]
[152.52343750 374.10098267]
[149.63816833 359.38107300]
[146.64338684 344.68307495]
[144.37020874 343.04272461]
[142.60980225 340.40310669]
[141.74607849 336.95501709]
[142.08677673 333.02456665]
[143.81886292 329.04287720]
[141.59373474 314.20883179]
[132.05406189 302.77014160]
[137.65863037 287.97488403]
[135.43351746 273.14083862]
[132.54823303 258.42092896]
[129.00856018 243.84455872]
[125.46889496 229.26818848]
[112.68919373 217.24128723]
[118.01990509 199.61560059]
[114.26360321 185.09353638]
[110.50730133 170.57148743]
[106.75100708 156.04942322]
[96.07307434 145.66525269]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[84.28909302 104.18884277]
[88.94746399 88.07437897]
[84.97536469 73.60985565]
[82.11127472 88.33388519]
[76.46710205 102.23148346]
[68.25387573 114.78308868]
[57.77863693 125.51945496]
[45.43302155 134.03918457]
[31.67857361 140.02375793]
[17.02951431 143.24945068]
[2.03350997 143.59565735]
[-12.74880314 141.04943848]
[-26.76477623 135.70597839]
[-39.49041367 127.76506805]
[-50.44995880 117.52355957]
[-59.23367691 105.36435699]
[-65.51318359 91.74203491]
[-69.05372620 77.16586304]
[-69.72291565 62.18080139]
[-67.49575806 47.34706497]
[-62.45550156 33.21922684]
[-54.79058456 20.32546425]
[-44.78756714 9.14782429]
[-32.82041550 0.10418967]
[-19.33653641 -6.46733761]
[-4.84003019 -10.32107544]
[10.12714005 -11.31295013]
[25.00541496 -9.40587807]
[39.23855972 -4.67115784]
[52.29446030 2.71420002]
[63.68500519 12.47408867]
[72.98435974 24.24362755]
[79.84485626 37.58280182]
[84.00888824 51.98692322]
[86.67468262 37.22570801]
[89.34047699 22.46448898]
[92.00627136 7.70327282]
[90.39350128 3.67177868]
[90.16998291 -0.26707426]
[91.13599396 -3.68792534]
[92.97420502 -6.27396727]
[95.29522705 -7.84590673]
[98.83489990 -22.42228127]
[102.37457275 -36.99865723]
[105.91424561 -51.57503128]
[104.42247772 -58.01601028]
[106.14838409 -63.43064499]
[109.78239441 -66.52951813]
[105.97567749 -81.88593292]
[116.80702972 -92.10997009]
[120.77912903 -106.57449341]
[124.75122070 -121.03901672]
[128.72332764 -135.50354004]
[132.69541931 -149.96806335]
[136.01766968 -164.59553528]
[138.68347168 -179.35675049]
[141.34927368 -194.11796570]
[144.01506042 -208.87918091]
[142.46060181 -217.88037109]
[146.83200073 -223.83961487]
[149.71726990 -238.55950928]
[152.60253906 -253.27940369]
[138.65003967 -258.91183472]
[126.01577759 -267.08325195]
[115.15646362 -277.49822998]
[106.46466064 -289.78027344]
[100.25457001 -303.48544312]
[96.75067902 -318.11825562]
[96.07965851 -333.14974976]
[98.26575470 -348.03659058]
[103.22995758 -362.24057007]
[110.79280090 -375.24826050]
[120.68090057 -386.58941650]
[132.53680420 -395.85409546]
[145.93191528 -402.70733643]
[160.38203430 -406.90145874]
[175.36479187 -408.28479004]
[190.33856201 -406.80737305]
[204.76205444 -402.52258301]
[218.11386108 -395.58532715]
[229.91134644 -386.24639893]
[239.72801208 -374.84332275]
[247.20901489 -361.78842163]
[252.08390808 -347.55352783]
[254.17646790 -332.65325928]
[253.41104126 -317.62628174]
[249.81532288 -303.01574707]
[243.51927185 -289.34988403]
[234.75048828 -277.12265015]
[223.82597351 -266.77606201]
[211.14064026 -258.68417358]
[197.15304565 -253.13949585]
[182.36882019 -250.34243774]
[167.32243347 -250.39413452]
[164.43716431 -235.67424011]
[161.55189514 -220.95434570]
[158.77627563 -206.21337891]
[156.11048889 -191.45216370]
[153.44468689 -176.69094849]
[150.77890015 -161.92973328]
[163.68705750 -169.57037354]
[178.25088501 -165.97938538]
[186.12753296 -153.21388245]
[182.80493164 -138.58650208]
[170.18638611 -130.47647095]
[155.50039673 -133.52960205]
[147.15994263 -145.99597168]
[143.18785095 -131.53144836]
[139.21574402 -117.06692505]
[135.24365234 -102.60240173]
[131.27156067 -88.13787842]
[135.36238098 -73.81606293]
[124.24691772 -62.55741882]
[120.49061584 -48.03536224]
[116.95094299 -33.45898438]
[113.41127014 -18.88261032]
[109.87159729 -4.30623436]
[106.76748657 10.36906815]
[104.10169220 25.13028526]
[101.43589783 39.89150238]
[98.77010345 54.65272141]
[99.43988800 69.63775635]
[103.41198730 84.10227966]
[113.16858673 90.46231842]
[116.16896057 101.71571350]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[125.57666779 138.03379822]
[121.27306366 152.29312134]
[125.02936554 166.81518555]
[128.78565979 181.33723450]
[132.54196167 195.85929871]
[143.23924255 203.06562805]
[146.06890869 215.23840332]
[140.04527283 225.72851562]
[143.58494568 240.30488586]
[147.12461853 254.88127136]
[155.83334351 242.66824341]
[170.60385132 240.05444336]
[182.97492981 248.53715515]
[185.85984802 263.25711060]
[177.60600281 275.78207397]
[162.94157410 278.93713379]
[150.26754761 270.91571045]
[152.49267578 285.74975586]
[162.19149780 298.24948120]
[156.42778015 311.98370361]
[158.65289307 326.81774902]
[161.31869507 341.57897949]
[166.15625000 349.32723999]
[164.35806274 356.49581909]
[167.24333191 371.21569824]
[170.12860107 385.93560791]
[173.01387024 400.65548706]
[175.89915466 415.37536621]
[178.78442383 430.09527588]
[181.66969299 444.81515503]
[196.72752380 445.27294922]
[211.30583191 449.07040405]
[224.67335510 456.01712036]
[236.15960693 465.76461792]
[245.18844604 477.82397461]
[251.30696106 491.59030151]
[254.20828247 506.37304688]
[253.74685669 521.43078613]
[249.94584656 536.00817871]
[242.99589539 549.37402344]
[233.24562073 560.85791016]
[221.18408203 569.88378906]
[207.41629028 575.99896240]
[192.63281250 578.89672852]
[177.57521057 578.43164062]
[162.99874878 574.62713623]
[149.63458252 567.67388916]
[138.15306091 557.92083740]
[129.13006592 545.85711670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[12 186]
[13 185]
[14 183]
[19 182]
[20 181]
[22 179]
[23 178]
[24 171]
[25 170]
[26 169]
[28 166]
[29 165]
[30 164]
[31 163]
[33 161]
[34 160]
[36 157]
[37 156]
[68 155]
[69 154]
[70 153]
[71 152]
[76 151]
[77 150]
[78 149]
[79 148]
[82 147]
[84 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 134]
[90 133]
[91 132]
[92 131]
[94 130]
[95 129]
[96 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
