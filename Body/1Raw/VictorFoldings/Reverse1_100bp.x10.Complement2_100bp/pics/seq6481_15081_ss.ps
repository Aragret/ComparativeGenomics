%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[211.94081116 412.27716064]
[224.37820435 403.80380249]
[218.50924683 389.99963379]
[212.64028931 376.19546509]
[206.77131653 362.39129639]
[195.67404175 357.57705688]
[190.67153931 346.12460327]
[194.94540405 333.95507812]
[182.97586060 325.09057617]
[184.93078613 309.39062500]
[179.26799011 295.50061035]
[167.29844666 286.63610840]
[169.25337219 270.93612671]
[163.59059143 257.04611206]
[145.94902039 258.26473999]
[128.92910767 253.37861633]
[114.58194733 242.95968628]
[104.64232635 228.24768066]
[100.31895447 211.00257874]
[102.14746094 193.29415894]
[109.92414856 177.25350952]
[122.72849274 164.81660461]
[116.24900055 151.28825378]
[109.76950073 137.75991821]
[103.29000854 124.23156738]
[96.81050873 110.70322418]
[90.23048401 97.22348785]
[87.12452698 111.89839935]
[76.65373993 122.63909912]
[62.06261444 126.11746979]
[47.87236404 121.25569153]
[38.47999954 109.56024170]
[36.79584122 94.65509033]
[43.34174347 81.15875244]
[56.08939362 73.25321960]
[71.08878326 73.38809967]
[83.69236755 81.52180481]
[78.86637115 67.31935120]
[74.04037476 53.11689377]
[69.21437836 38.91443634]
[64.38838196 24.71198273]
[61.06545258 39.33929062]
[52.14572144 51.39907455]
[39.13231277 58.85904694]
[24.21821213 60.46207047]
[9.91671467 55.93800735]
[-1.36213136 46.04924393]
[-7.71764040 32.46220779]
[-8.07879829 17.46655846]
[-2.38474274 3.58931947]
[8.40497684 -6.83094645]
[22.47210503 -12.03824329]
[37.44607925 -11.15504837]
[50.80352783 -4.33019686]
[60.29424667 7.28767586]
[58.29023361 -7.57785225]
[56.28621674 -22.44338036]
[54.28220367 -37.30891037]
[52.27819061 -52.17443848]
[50.27417755 -67.03996277]
[46.54204941 -72.49732208]
[46.18050766 -78.16886139]
[48.43863297 -82.37717438]
[46.87811279 -97.29577637]
[45.31758881 -112.21438599]
[36.18657303 -125.13471985]
[42.55780792 -138.59788513]
[40.99728775 -153.51647949]
[39.43676376 -168.43508911]
[37.87623978 -183.35369873]
[36.31571579 -198.27229309]
[26.80578804 -206.98573303]
[25.81315422 -219.44360352]
[33.32626343 -228.92410278]
[31.98802948 -243.86428833]
[30.64979362 -258.80447388]
[29.31155968 -273.74465942]
[14.30040741 -274.21652222]
[-0.54441255 -276.49438477]
[-15.00641918 -280.54504395]
[-28.87471390 -286.30938721]
[-41.94705582 -293.70339966]
[-54.03281403 -302.61920166]
[-64.95573425 -312.92681885]
[-74.55654144 -324.47595215]
[-82.69521332 -337.09811401]
[-89.25307465 -350.60928345]
[-94.13449097 -364.81243896]
[-97.26827240 -379.50039673]
[-98.60872650 -394.45904541]
[-98.13629150 -409.47015381]
[-95.85787201 -424.31491089]
[-91.80668640 -438.77676392]
[-86.04181671 -452.64483643]
[-78.64733124 -465.71691895]
[-69.73105621 -477.80233765]
[-59.42302704 -488.72485352]
[-47.87355804 -498.32522583]
[-35.25107956 -506.46343994]
[-21.73966026 -513.02081299]
[-7.53633833 -517.90167236]
[7.15175915 -521.03491211]
[22.11043739 -522.37481689]
[37.12155533 -521.90179443]
[51.96620560 -519.62286377]
[66.42790985 -515.57110596]
[80.29576874 -509.80572510]
[93.36756134 -502.41073608]
[105.45265198 -493.49401855]
[116.37480164 -483.18557739]
[125.97474670 -471.63574219]
[134.11247253 -459.01296997]
[140.66932678 -445.50131226]
[145.54968262 -431.29779053]
[148.68235779 -416.60958862]
[150.02169800 -401.65084839]
[149.54814148 -386.63977051]
[147.26861572 -371.79519653]
[143.21633911 -357.33364868]
[137.45043945 -343.46600342]
[130.05497742 -330.39447021]
[121.13779449 -318.30972290]
[110.82894897 -307.38796997]
[99.27876282 -297.78845215]
[86.65567017 -289.65118408]
[73.14376068 -283.09484863]
[58.94007874 -278.21502686]
[44.25174713 -275.08288574]
[45.58998108 -260.14270020]
[46.92821503 -245.20251465]
[48.26644897 -230.26232910]
[59.12067032 -216.47274780]
[51.23432159 -199.83282471]
[52.79484558 -184.91421509]
[54.35536957 -169.99560547]
[55.91588974 -155.07701111]
[57.47641373 -140.15840149]
[66.49581146 -128.30514526]
[60.23619461 -113.77490234]
[61.79671478 -98.85630035]
[63.35723877 -83.93769836]
[65.13970184 -69.04397583]
[67.14372253 -54.17845154]
[69.14773560 -39.31292343]
[71.15174866 -24.44739342]
[73.15576172 -9.58186626]
[75.15977478 5.28366232]
[78.59083557 19.88598442]
[83.41683197 34.08843994]
[88.24282837 48.29089737]
[93.06882477 62.49335098]
[97.89482880 76.69580841]
[103.66085815 90.54328918]
[109.78495026 95.78429413]
[110.33885956 104.22372437]
[116.81835175 117.75207520]
[123.29784393 131.28041077]
[129.77734375 144.80876160]
[136.25683594 158.33711243]
[148.50891113 156.16119385]
[160.91413879 156.98757935]
[172.74826050 160.76268005]
[183.32162476 167.26094055]
[192.01937866 176.09825134]
[198.33724976 186.75468445]
[201.91073608 198.60505676]
[202.53620911 210.95562744]
[200.18240356 223.08468628]
[194.99203491 234.28474426]
[187.27310181 243.90380859]
[177.48062134 251.38333130]
[183.14340210 265.27334595]
[195.51799011 275.13134766]
[193.15802002 289.83779907]
[198.82080078 303.72784424]
[211.19538879 313.58584595]
[208.83541870 328.29229736]
[223.63966370 339.24291992]
[220.57550049 356.52230835]
[226.44445801 370.32650757]
[232.31341553 384.13067627]
[238.18238831 397.93484497]
[252.91377258 394.85714722]
[267.96255493 394.71286011]
[282.75024414 397.50747681]
[296.70849609 403.13363647]
[309.30075073 411.37506104]
[320.04302979 421.91497803]
[328.52239990 434.34826660]
[334.41296387 448.19699097]
[337.48828125 462.92889404]
[337.63015747 477.97769165]
[334.83312988 492.76492310]
[329.20471191 506.72225952]
[320.96124268 519.31317139]
[310.41958618 530.05377197]
[297.98492432 538.53112793]
[284.13525391 544.41943359]
[269.40286255 547.49237061]
[254.35403442 547.63183594]
[239.56723022 544.83239746]
[225.61080933 539.20172119]
[213.02122498 530.95623779]
[202.28236389 520.41284180]
[193.80700684 507.97680664]
[187.92094421 494.12615967]
[184.85038757 479.39324951]
[184.71339417 464.34442139]
[187.51521301 449.55807495]
[193.14814758 435.60256958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 182]
[3 181]
[4 180]
[5 179]
[8 177]
[10 175]
[11 174]
[13 172]
[14 171]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[60 142]
[63 141]
[64 140]
[65 139]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[74 131]
[75 130]
[76 129]
[77 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
