%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[151.04312134 538.72723389]
[153.72575378 523.92462158]
[159.08291626 509.86700439]
[166.93212891 497.03329468]
[177.00607300 485.86053467]
[188.96162415 476.72930908]
[202.39157104 469.95056152]
[198.20455933 455.54678345]
[194.01754761 441.14300537]
[183.03517151 431.08135986]
[186.61282349 415.66998291]
[182.42581177 401.26620483]
[178.23880005 386.86239624]
[164.93482971 375.41815186]
[169.47319031 357.57202148]
[165.07218933 343.23217773]
[160.67118835 328.89230347]
[156.27020264 314.55245972]
[151.86920166 300.21261597]
[147.46820068 285.87277222]
[143.06719971 271.53292847]
[131.93624878 261.63589478]
[135.28405762 246.17295837]
[130.88305664 231.83311462]
[119.75209808 221.93609619]
[123.09990692 206.47314453]
[118.69890594 192.13330078]
[114.29791260 177.79345703]
[109.89691162 163.45361328]
[106.17224884 160.46430969]
[104.28589630 155.10345459]
[105.58522797 148.62092590]
[101.61312866 134.15640259]
[90.78177643 123.93235779]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[79.39775085 50.30027390]
[76.24585724 47.31371689]
[74.39447784 43.82990646]
[73.84023285 40.31875229]
[74.42749786 37.20078278]
[75.87765503 34.80178833]
[72.99238586 20.08189583]
[70.10710907 5.36200428]
[67.22183990 -9.35788727]
[64.33657074 -24.07777786]
[55.09117889 -12.26580048]
[40.21868896 -10.31414127]
[28.23872948 -19.34079933]
[26.01396751 -34.17489624]
[34.81884766 -46.31878662]
[49.60953522 -48.81589890]
[61.91273499 -40.23657227]
[60.35221481 -55.15517807]
[58.79169083 -70.07378387]
[57.23116684 -84.99238586]
[55.67064285 -99.91098785]
[54.11012268 -114.82959747]
[52.10610580 -129.69512939]
[49.66038132 -144.49440002]
[47.21465302 -159.29367065]
[37.20294952 -167.42561340]
[35.47057343 -179.80230713]
[42.40607071 -189.71318054]
[40.18095398 -204.54722595]
[37.95583725 -219.38127136]
[35.73072052 -234.21531677]
[33.39523315 -249.03237915]
[30.94950485 -263.83166504]
[15.29901981 -268.28094482]
[3.19892383 -279.07128906]
[-2.96209645 -294.00454712]
[-1.99750614 -310.07168579]
[5.84892225 -324.05908203]
[18.96205139 -333.19125366]
[16.29625511 -347.95248413]
[13.63046074 -362.71368408]
[10.96466446 -377.47491455]
[8.29886913 -392.23611450]
[5.63307381 -406.99734497]
[2.96727824 -421.75854492]
[-7.16438723 -429.74053955]
[-9.08084488 -442.09008789]
[-2.29367232 -452.10311890]
[-4.73939991 -466.90237427]
[-19.76393700 -468.21160889]
[-33.99058533 -473.21691895]
[-46.52504730 -481.60369873]
[-56.57939529 -492.84475708]
[-63.52160645 -506.23342896]
[-66.91528320 -520.92810059]
[-66.54709625 -536.00506592]
[-62.44019318 -550.51660156]
[-54.85273743 -563.55047607]
[-44.26168060 -574.28735352]
[-31.33278847 -582.05230713]
[-16.87877846 -586.35723877]
[-1.80824435 -586.93151855]
[12.93146801 -583.73907471]
[26.41380882 -576.98059082]
[37.79126740 -567.08087158]
[46.34864426 -554.66223145]
[51.54801559 -540.50537109]
[53.06254959 -525.50012207]
[50.79703522 -510.58978271]
[44.89388657 -496.71160889]
[35.72418213 -484.73800659]
[23.86433792 -475.42163086]
[10.05987072 -469.34811401]
[12.50559807 -454.54882812]
[24.35538101 -441.60473633]
[17.72849464 -424.42434692]
[20.39429092 -409.66314697]
[23.06008720 -394.90191650]
[25.72588158 -380.14068604]
[28.39167786 -365.37948608]
[31.05747223 -350.61825562]
[33.72326660 -335.85705566]
[47.25937653 -332.81698608]
[58.65035248 -324.82214355]
[66.15743256 -313.05255127]
[68.61936188 -299.26742554]
[65.63194275 -285.54223633]
[57.61394882 -273.95620728]
[45.74877548 -266.27737427]
[48.19450378 -251.47811890]
[52.38653946 -245.39135742]
[50.56476212 -236.44042969]
[52.78987885 -221.60638428]
[55.01499557 -206.77235413]
[57.24011612 -191.93830872]
[68.89586639 -178.81921387]
[62.01392365 -161.73939514]
[64.45964813 -146.94012451]
[66.90538025 -132.14085388]
[69.10305786 -130.40063477]
[70.74382782 -127.68503571]
[71.45273590 -124.20181274]
[70.93687439 -120.29049683]
[69.02872467 -116.39012146]
[70.58924866 -101.47151184]
[72.14977264 -86.55290985]
[73.71029663 -71.63430786]
[75.27082062 -56.71569824]
[76.83134460 -41.79709625]
[79.05645752 -26.96305084]
[81.94173431 -12.24316025]
[84.82700348 2.47673154]
[87.71227264 17.19662285]
[90.59754944 31.91651344]
[93.91980743 46.54397583]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[120.16847992 115.86248779]
[116.07765198 130.18429565]
[120.04975128 144.64881897]
[124.23676300 159.05261230]
[128.63775635 173.39245605]
[133.03875732 187.73229980]
[137.43975830 202.07214355]
[148.88549805 212.99485779]
[145.22290039 227.43211365]
[149.62390137 241.77195740]
[161.06965637 252.69467163]
[157.40704346 267.13192749]
[161.80804443 281.47177124]
[166.20904541 295.81161499]
[170.61004639 310.15145874]
[175.01104736 324.49133301]
[179.41203308 338.83117676]
[183.81303406 353.17102051]
[194.82142639 359.89248657]
[198.19181824 371.92678833]
[192.64259338 382.67538452]
[196.82960510 397.07919312]
[201.01661682 411.48297119]
[212.29846191 422.57485962]
[208.42132568 436.95599365]
[212.60833740 451.35977173]
[216.79534912 465.76354980]
[231.76641846 464.28643799]
[246.75396729 465.58563232]
[261.24752808 469.61691284]
[274.75347900 476.24291992]
[286.81176758 485.23803711]
[297.01174927 496.29586792]
[305.00598145 509.03976440]
[310.52218628 523.03570557]
[313.37246704 537.80694580]
[313.45977783 552.85046387]
[310.78112793 567.65380859]
[305.42776489 581.71282959]
[297.58200073 594.54870605]
[287.51107788 605.72412109]
[275.55798340 614.85864258]
[262.12988281 621.64099121]
[247.68406677 625.84020996]
[232.71261597 627.31329346]
[217.72540283 626.01000977]
[203.23292542 621.97485352]
[189.72877502 615.34521484]
[177.67288208 606.34686279]
[167.47590637 595.28625488]
[159.48510742 582.54022217]
[153.97268677 568.54278564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 185]
[8 184]
[9 183]
[11 181]
[12 180]
[13 179]
[15 176]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[23 168]
[24 167]
[26 165]
[27 164]
[28 163]
[29 162]
[32 161]
[33 160]
[35 158]
[37 157]
[38 156]
[39 155]
[40 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[56 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[62 138]
[63 137]
[64 136]
[67 134]
[68 133]
[69 132]
[70 131]
[71 129]
[72 128]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
