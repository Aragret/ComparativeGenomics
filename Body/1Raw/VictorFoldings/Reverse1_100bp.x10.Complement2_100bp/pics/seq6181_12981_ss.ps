%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[110.39711761 830.70782471]
[98.45141602 821.59985352]
[87.79678345 811.01055908]
[78.61553955 799.12103271]
[71.06477356 786.13488770]
[65.27370453 772.27416992]
[61.34141159 757.77618408]
[59.33519363 742.88891602]
[59.28937149 727.86718750]
[61.20473099 712.96795654]
[65.04850006 698.44628906]
[70.75490570 684.55053711]
[78.22630310 671.51849365]
[87.33485413 659.57324219]
[97.92468262 648.91912842]
[109.81459808 639.73840332]
[122.80114746 632.18829346]
[136.66209412 626.39788818]
[151.16029358 622.46624756]
[149.15628052 607.60070801]
[147.15226746 592.73522949]
[145.14825439 577.86968994]
[143.14424133 563.00415039]
[141.14022827 548.13861084]
[137.95280457 544.58203125]
[136.96577454 538.98535156]
[139.30468750 532.80139160]
[137.74415588 517.88281250]
[136.18363953 502.96420288]
[134.62310791 488.04559326]
[133.06259155 473.12698364]
[131.50205994 458.20840454]
[129.94154358 443.28979492]
[120.92214966 431.43652344]
[127.18176270 416.90628052]
[125.62123871 401.98767090]
[116.60184479 390.13442993]
[122.86146545 375.60418701]
[113.84206390 363.75091553]
[120.10168457 349.22070312]
[118.54116058 334.30209351]
[116.98063660 319.38348389]
[115.30909729 304.47689819]
[113.52663422 289.58319092]
[111.74416351 274.68948364]
[109.96170044 259.79574585]
[108.17922974 244.90203857]
[106.39676666 230.00831604]
[104.61430359 215.11460876]
[100.69823456 208.84672546]
[102.91786957 199.98608398]
[101.35735321 185.06748962]
[99.79682922 170.14888000]
[98.23630524 155.23027039]
[96.67578125 140.31166077]
[81.47750092 135.95828247]
[69.10885620 126.11164856]
[61.45936584 112.27601624]
[59.69762039 96.56500244]
[64.09275818 81.37875366]
[73.97334290 69.03720856]
[87.82995605 61.42577362]
[86.04748535 46.53205490]
[79.47403717 60.01499939]
[67.75537109 69.37837982]
[53.15418625 72.81427765]
[38.48974228 69.65927887]
[26.59350967 60.52256012]
[19.76246643 47.16827774]
[19.31558037 32.17493820]
[25.33913803 18.43751526]
[36.67008591 8.60849380]
[51.12059021 4.58570385]
[65.90048981 7.14588213]
[78.15602112 15.79469872]
[85.52119446 28.86342430]
[86.41400909 13.89001846]
[87.30682373 -1.08338726]
[80.40464020 -15.31962490]
[88.88576508 -27.56379890]
[89.77857971 -42.53720474]
[87.16551208 -51.28990173]
[90.79779053 -57.72638321]
[91.91344452 -72.68483734]
[93.02909088 -87.64328766]
[79.26906586 -96.81136322]
[72.05146790 -111.58301544]
[73.26115417 -127.88496399]
[82.47353363 -141.27481079]
[97.09618378 -148.15162659]
[97.98899841 -163.12503052]
[98.88181305 -178.09843445]
[99.21678925 -193.09469604]
[98.99346161 -208.09303284]
[98.65848541 -223.08929443]
[98.21188354 -238.08264160]
[97.76527405 -253.07598877]
[83.54208374 -258.43969727]
[72.45758820 -268.84173584]
[66.20209503 -282.69589233]
[65.72952271 -297.88946533]
[71.11193085 -312.10559082]
[81.52854156 -323.17639160]
[95.39089966 -329.41366577]
[110.58509064 -329.86624146]
[124.79412079 -324.46514893]
[135.85121155 -314.03396606]
[142.07023621 -300.16342163]
[142.50283813 -284.96865845]
[137.08305359 -270.76672363]
[126.63734436 -259.72338867]
[112.75862885 -253.52259827]
[113.20523071 -238.52925110]
[113.65184021 -223.53590393]
[116.99309540 -216.94364929]
[113.99179840 -208.31636047]
[114.21512604 -193.31802368]
[126.37641144 -202.09887695]
[140.86430359 -198.21289062]
[146.99888611 -184.52467346]
[140.25794983 -171.12467957]
[125.61067963 -167.89088440]
[113.85521698 -177.20562744]
[112.96240234 -162.23222351]
[112.06958771 -147.25881958]
[123.94054413 -140.50622559]
[131.78161621 -129.24362183]
[134.01582336 -115.63636017]
[130.15087891 -102.33070374]
[120.88630676 -91.93917847]
[107.98754120 -86.52764130]
[106.87189484 -71.56919098]
[105.75624847 -56.61073303]
[104.75198364 -41.64439011]
[103.85916901 -26.67098427]
[110.82521057 -13.50574398]
[102.28022766 -0.19057138]
[101.38741302 14.78283405]
[100.49459839 29.75624084]
[100.94120789 44.74959183]
[102.72367096 59.64330673]
[116.32038116 62.99018860]
[127.96121216 70.77241516]
[136.25109863 82.05735016]
[140.19656372 95.49257660]
[139.32478333 109.46798706]
[133.74020386 122.30873108]
[124.11212921 132.47593689]
[111.59438324 138.75114441]
[113.15490723 153.66975403]
[114.71543121 168.58834839]
[116.27595520 183.50695801]
[117.83647919 198.42556763]
[119.50801849 213.33213806]
[121.29048157 228.22586060]
[123.07295227 243.11956787]
[124.85541534 258.01327515]
[126.63787842 272.90701294]
[128.42034912 287.80072021]
[130.20281982 302.69442749]
[134.32981873 310.84341431]
[131.89924622 317.82296753]
[133.45976257 332.74157715]
[135.02029419 347.66015625]
[144.15130615 360.58050537]
[137.78005981 374.04367065]
[146.91108704 386.96398926]
[140.53984070 400.42715454]
[142.10037231 415.34576416]
[151.23138428 428.26611328]
[144.86015320 441.72927856]
[146.42066956 456.64785767]
[147.98120117 471.56646729]
[149.54171753 486.48507690]
[151.10223389 501.40368652]
[152.66276550 516.32226562]
[154.22328186 531.24090576]
[156.00575256 546.13458252]
[158.00976562 561.00012207]
[160.01377869 575.86566162]
[162.01779175 590.73120117]
[164.02180481 605.59674072]
[166.02581787 620.46228027]
[181.04756165 620.41430664]
[195.94703674 622.32751465]
[210.46931458 626.16918945]
[224.36589050 631.87365723]
[237.39895630 639.34320068]
[249.34552002 648.45001221]
[260.00115967 659.03833008]
[269.18353271 670.92694092]
[276.73553467 683.91241455]
[282.52792358 697.77252197]
[286.46160889 712.27014160]
[288.46923828 727.15722656]
[288.51651001 742.17895508]
[286.60253906 757.07836914]
[282.76016235 771.60040283]
[277.05508423 785.49670410]
[269.58493042 798.52941895]
[260.47750854 810.47558594]
[249.88870239 821.13073730]
[237.99966431 830.31256104]
[225.01383972 837.86389160]
[211.15342712 843.65563965]
[196.65560913 847.58862305]
[181.76846313 849.59558105]
[166.74671936 849.64208984]
[151.84741211 847.72741699]
[137.32550049 843.88433838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 172]
[33 171]
[35 169]
[36 168]
[38 166]
[40 164]
[41 163]
[42 162]
[43 160]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[62 141]
[63 140]
[76 139]
[77 138]
[78 137]
[80 135]
[81 134]
[83 133]
[84 132]
[85 131]
[90 125]
[91 124]
[92 123]
[93 117]
[94 116]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
