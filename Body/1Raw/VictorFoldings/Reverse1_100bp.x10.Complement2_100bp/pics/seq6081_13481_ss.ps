%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[58.95769882 510.92959595]
[51.98322296 497.59716797]
[47.65821457 483.18569946]
[46.13902664 468.21609497]
[47.48057175 453.22955322]
[51.63435745 438.76779175]
[58.45022202 425.35360718]
[67.68177795 413.47189331]
[78.99531555 403.55218506]
[91.98185730 395.95309448]
[106.17193604 390.94927979]
[103.94682312 376.11523438]
[101.72170258 361.28121948]
[99.49658203 346.44717407]
[94.78814697 360.68902588]
[86.45779419 373.16320801]
[75.10690308 382.96917725]
[61.55490494 389.39907837]
[46.78012848 391.98864746]
[31.84918022 390.55102539]
[17.83993721 385.18997192]
[5.76373672 376.29248047]
[-3.50762701 364.50085449]
[-9.30484772 350.66641235]
[-11.20941925 335.78781128]
[-9.08384800 320.93917847]
[-3.08158183 307.19244385]
[6.36407137 295.53997803]
[18.57122040 286.82302856]
[32.65862274 281.67083740]
[47.60929489 280.45535278]
[62.34393692 283.26431274]
[75.79883575 289.89498901]
[87.00268555 299.86865234]
[95.14665222 312.46530151]
[99.64302826 326.77673340]
[102.08875275 311.97744751]
[104.53447723 297.17819214]
[106.98020935 282.37890625]
[107.31518555 267.38265991]
[105.53271484 252.48893738]
[103.75025177 237.59523010]
[101.96778870 222.70150757]
[92.77291107 210.98384094]
[98.81549835 196.36203003]
[96.69772339 194.52542114]
[95.17984009 191.73925781]
[94.62717438 188.22785950]
[95.31716919 184.34347534]
[97.39758301 180.53219604]
[96.50476074 165.55877686]
[95.61194611 150.58537292]
[94.71913147 135.61196899]
[93.82631683 120.63856506]
[92.93350220 105.66516113]
[90.44097137 102.72242737]
[89.25765991 98.69531250]
[89.83877563 94.19316864]
[92.35035706 90.00606537]
[92.12702942 75.00772858]
[91.90370178 60.00938797]
[91.68037415 45.01105118]
[91.45704651 30.01271439]
[91.12207031 15.01645470]
[90.67546082 0.02310472]
[90.22885895 -14.97024536]
[87.81671906 -18.58072472]
[86.78292847 -22.38805962]
[87.02011871 -25.93476868]
[88.28337860 -28.84523010]
[90.22885895 -30.86345673]
[90.67546082 -45.85680771]
[83.35247803 -59.88122940]
[91.46528625 -72.37248993]
[91.91188812 -87.36583710]
[92.35849762 -102.35919189]
[92.80509949 -117.35253906]
[93.25170898 -132.34588623]
[85.92871857 -146.37031555]
[94.04152679 -158.86157227]
[94.48813629 -173.85491943]
[94.93473816 -188.84826660]
[80.09555054 -191.17243958]
[65.66468811 -195.33816528]
[51.86973190 -201.27975464]
[38.92826080 -208.90350342]
[27.04437828 -218.08917236]
[16.40550995 -228.69189453]
[7.17944431 -240.54444885]
[-0.48830909 -253.45989990]
[-6.47681856 -267.23455811]
[-10.69163704 -281.65115356]
[-13.06628990 -296.48233032]
[-13.56332684 -311.49420166]
[-12.17490768 -326.45001221]
[-8.92293072 -341.11383057]
[-3.85868382 -355.25442505]
[2.93796277 -368.64880371]
[11.35981560 -381.08566284]
[21.27404976 -392.36886597]
[32.52430725 -402.32052612]
[44.93314743 -410.78359985]
[58.30487061 -417.62466431]
[72.42858887 -422.73583984]
[87.08154297 -426.03646851]
[102.03263092 -427.47451782]
[117.04606628 -427.02731323]
[131.88505554 -424.70190430]
[146.31558228 -420.53497314]
[160.11003113 -414.59219360]
[173.05085754 -406.96737671]
[184.93397522 -397.78070068]
[195.57194519 -387.17709351]
[204.79701233 -375.32376099]
[212.46368408 -362.40765381]
[218.45103455 -348.63250732]
[222.66464233 -334.21554565]
[225.03804016 -319.38415527]
[225.53381348 -304.37225342]
[224.14413452 -289.41656494]
[220.89093018 -274.75302124]
[215.82548523 -260.61285400]
[209.02770996 -247.21905518]
[200.60481262 -234.78289795]
[190.68963623 -223.50050354]
[179.43853760 -213.54981995]
[167.02897644 -205.08778381]
[153.65667725 -198.24783325]
[139.53253174 -193.13786316]
[124.87931061 -189.83847046]
[109.92809296 -188.40167236]
[109.48148346 -173.40832520]
[109.03488159 -158.41496277]
[116.38980865 -145.46296692]
[108.24505615 -131.89929199]
[107.79845428 -116.90593719]
[107.35184479 -101.91258240]
[106.90524292 -86.91923523]
[106.45863342 -71.92588806]
[113.81356812 -58.97388840]
[105.66881561 -45.41020203]
[105.22220612 -30.41685104]
[105.22220612 -15.41685104]
[105.66881561 -0.42350122]
[106.11541748 14.56984901]
[109.45668030 21.16210175]
[106.45538330 29.78938675]
[106.67871094 44.78772354]
[106.90203857 59.78606033]
[107.12536621 74.78440094]
[107.34869385 89.78273773]
[107.90690613 104.77234650]
[108.79972076 119.74575043]
[109.69253540 134.71916199]
[110.58535004 149.69256592]
[111.47817230 164.66596985]
[112.37098694 179.63937378]
[113.70922089 194.57955933]
[123.03158569 207.36251831]
[116.86150360 220.91903687]
[118.64396667 235.81275940]
[120.42643738 250.70648193]
[122.20890045 265.60018921]
[127.48731995 251.55960083]
[136.62220764 239.66197205]
[148.82333374 230.93656921]
[163.03515625 226.13822937]
[178.02821350 225.68205261]
[192.50547791 229.60751343]
[205.21447754 237.57501221]
[215.05580139 248.89527893]
[221.17805481 262.58898926]
[223.05158997 277.47152710]
[220.51435852 292.25540161]
[213.78582764 305.66162109]
[203.44810486 316.53045654]
[190.39549255 323.92160034]
[175.75717163 327.19570923]
[160.79951477 326.06945801]
[146.81649780 320.64035034]
[135.01779175 311.37805176]
[126.42411804 299.08377075]
[121.77947998 284.82464600]
[119.33374786 299.62393188]
[116.88802338 314.42318726]
[114.44229889 329.22247314]
[114.33062744 344.22204590]
[116.55574799 359.05609131]
[118.78086090 373.89013672]
[121.00598145 388.72418213]
[136.03967285 389.34439087]
[150.68424988 392.79879761]
[164.41030884 398.96255493]
[176.72167969 407.61279297]
[187.17329407 418.43685913]
[195.38734436 431.04342651]
[201.06690979 444.97680664]
[204.00665283 459.73330688]
[204.10031128 474.77951050]
[201.34451294 489.57147217]
[195.83886719 503.57446289]
[187.78239441 516.28234863]
[177.46633911 527.23565674]
[165.26362610 536.03851318]
[151.61535645 542.37268066]
[137.01493835 546.00915527]
[121.99012756 546.81646729]
[107.08409119 544.76550293]
[92.83566284 539.93035889]
[79.75991058 532.48577881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[14 187]
[36 186]
[37 185]
[38 184]
[39 183]
[40 163]
[41 162]
[42 161]
[43 160]
[45 158]
[50 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[59 151]
[60 150]
[61 149]
[62 148]
[63 147]
[64 145]
[65 144]
[66 143]
[71 142]
[72 141]
[74 139]
[75 138]
[76 137]
[77 136]
[78 135]
[80 133]
[81 132]
[82 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
