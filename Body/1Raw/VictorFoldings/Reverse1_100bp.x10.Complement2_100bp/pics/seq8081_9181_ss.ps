%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[62.70358276 590.57238770]
[49.36688614 597.49700928]
[35.16404724 602.40588379]
[20.39780807 605.19445801]
[5.38290644 605.80316162]
[-9.56061268 604.21917725]
[-24.11422729 600.47619629]
[-37.96772766 594.65393066]
[-50.82582474 586.87658691]
[-62.41444397 577.30987549]
[-72.48657990 566.15777588]
[-80.82753754 553.65789795]
[-87.25953674 540.07678223]
[-91.64546967 525.70379639]
[-93.89185333 510.84542847]
[-93.95081329 495.81832886]
[-91.82108307 480.94277954]
[-87.54806519 466.53585815]
[-81.22283173 452.90466309]
[-72.98020935 440.33975220]
[-62.99589157 429.10894775]
[-51.48269272 419.45159912]
[-38.68601608 411.57357788]
[-24.87862968 405.64282227]
[-10.35483170 401.78573608]
[4.57579803 400.08453369]
[19.59501457 400.57543945]
[22.26080894 385.81423950]
[24.92660522 371.05300903]
[27.59240150 356.29180908]
[25.89314461 353.20233154]
[25.60588074 349.13629150]
[27.17329407 344.76632690]
[30.72093201 340.93731689]
[34.04319000 326.30987549]
[37.36545181 311.68240356]
[35.78148651 304.46347046]
[40.84759521 296.86267090]
[44.38726807 282.28628540]
[47.92694092 267.70993042]
[43.41151428 253.51625061]
[54.18684006 241.93165588]
[57.72651291 227.35528564]
[61.26618576 212.77890015]
[55.24254608 202.28880310]
[58.07221222 190.11601257]
[68.76948547 182.90968323]
[67.16061401 178.41296387]
[68.35947418 172.85780334]
[72.85986328 168.01445007]
[77.04687500 153.61067200]
[81.23388672 139.20689392]
[76.13809967 122.41403198]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[103.94349670 57.31705093]
[107.91558838 42.85252762]
[111.88768768 28.38800240]
[106.19799805 16.81258965]
[109.80414581 4.84682751]
[120.25071716 -1.25199485]
[124.43772888 -15.65577698]
[111.93778992 -23.00993156]
[101.57221222 -33.13972473]
[93.94240570 -45.45108795]
[89.48951721 -59.22358322]
[88.46894836 -73.65252686]
[90.93569946 -87.89604187]
[96.74142456 -101.12413788]
[105.54335022 -112.56712341]
[116.82452393 -121.56034088]
[129.92413330 -127.58282471]
[144.07624817 -130.28741455]
[158.45460510 -129.52084351]
[162.85560608 -143.86068726]
[167.25660706 -158.20053101]
[171.65759277 -172.54037476]
[168.30978394 -188.00332642]
[179.44075012 -197.90034485]
[183.84175110 -212.24018860]
[180.49392700 -227.70314026]
[191.62489319 -237.60015869]
[196.02589417 -251.94000244]
[191.48753357 -269.78616333]
[204.79150391 -281.23040771]
[208.97851562 -295.63418579]
[213.16552734 -310.03796387]
[217.35253906 -324.44174194]
[221.53955078 -338.84552002]
[225.72656250 -353.24932861]
[217.02200317 -368.42330933]
[221.88909912 -384.87402344]
[236.84771729 -392.56027222]
[240.81982422 -407.02481079]
[244.79191589 -421.48931885]
[248.76400757 -435.95385742]
[252.73609924 -450.41836548]
[239.27816772 -457.15411377]
[227.39308167 -466.38616943]
[217.53767395 -477.75970459]
[210.09075928 -490.83752441]
[205.33859253 -505.11700439]
[203.46383667 -520.04919434]
[204.53852844 -535.06024170]
[208.52136230 -549.57312012]
[215.25927734 -563.02996826]
[224.49325562 -574.91357422]
[235.86837769 -584.76715088]
[248.94741821 -592.21191406]
[263.22766113 -596.96179199]
[278.16018677 -598.83410645]
[293.17105103 -597.75701904]
[307.68325806 -593.77178955]
[321.13903809 -587.03173828]
[333.02114868 -577.79583740]
[342.87286377 -566.41912842]
[350.31552124 -553.33886719]
[355.06307983 -539.05786133]
[356.93301392 -524.12500000]
[355.85345459 -509.11431885]
[351.86590576 -494.60275269]
[345.12365723 -481.14807129]
[335.88583374 -469.26748657]
[324.50750732 -459.41760254]
[311.42605591 -451.97705078]
[297.14428711 -447.23181152]
[282.21115112 -445.36428833]
[267.20062256 -446.44628906]
[263.22854614 -431.98175049]
[259.25643921 -417.51724243]
[255.28434753 -403.05270386]
[251.31224060 -388.58819580]
[259.18966675 -378.39132690]
[259.76434326 -365.32412720]
[252.60258484 -354.14736938]
[240.13034058 -349.06231689]
[235.94332886 -334.65850830]
[231.75631714 -320.25473022]
[227.56930542 -305.85095215]
[223.38229370 -291.44717407]
[219.19528198 -277.04339600]
[224.74450684 -266.29476929]
[221.37413025 -254.26048279]
[210.36573792 -247.53901672]
[205.96473694 -233.19915771]
[209.62733459 -218.76190186]
[198.18159485 -207.83920288]
[193.78059387 -193.49934387]
[197.44319153 -179.06208801]
[185.99745178 -168.13938904]
[181.59645081 -153.79953003]
[177.19544983 -139.45968628]
[172.79444885 -125.11984253]
[186.02781677 -116.97133636]
[196.71345520 -105.67163086]
[204.12121582 -91.98448181]
[207.74272156 -76.83706665]
[207.32635498 -61.25716400]
[202.89462280 -46.30344009]
[194.74311829 -32.99350357]
[183.42074585 -22.23463631]
[169.69277954 -14.76198483]
[154.48918152 -11.08829784]
[138.84150696 -11.46876526]
[134.65449524 2.93501639]
[139.75028992 19.72787094]
[126.35221100 32.36009979]
[122.38011932 46.82462311]
[118.40802002 61.28914642]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[109.69039154 125.32931519]
[106.08424377 137.29507446]
[95.63766479 143.39390564]
[91.45065308 157.79768372]
[87.26364136 172.20146179]
[83.29154968 186.66598511]
[88.62226105 204.29168701]
[75.84255981 216.31857300]
[72.30288696 230.89495850]
[68.76321411 245.47132874]
[73.02545929 260.70758057]
[62.50331879 271.24960327]
[58.96364594 285.82595825]
[55.42397308 300.40234375]
[51.99291229 315.00466919]
[48.67065048 329.63214111]
[45.34839249 344.25958252]
[42.35361862 358.95758057]
[39.68782425 373.71881104]
[37.02202606 388.48001099]
[34.35623169 403.24124146]
[48.59841919 408.03475952]
[61.99085236 414.85098267]
[74.24806213 423.54458618]
[85.10878754 433.93026733]
[94.34153748 445.78665161]
[101.74951172 458.86105347]
[107.17480469 472.87475586]
[110.50177765 487.52908325]
[111.65952301 502.51165771]
[110.62335205 517.50311279]
[107.41535950 532.18395996]
[102.10392761 546.24121094]
[94.80225372 559.37524414]
[85.66599274 571.30615234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 196]
[28 195]
[29 194]
[30 193]
[34 192]
[35 191]
[36 190]
[38 189]
[39 188]
[40 187]
[42 185]
[43 184]
[44 183]
[47 181]
[50 180]
[51 179]
[52 178]
[54 175]
[56 173]
[57 172]
[58 171]
[59 170]
[60 169]
[63 167]
[64 166]
[76 155]
[77 154]
[78 153]
[79 152]
[81 150]
[82 149]
[84 147]
[85 146]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
