%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[278.77273560 546.10266113]
[284.55679321 532.23907471]
[292.10098267 519.24908447]
[301.27624512 507.35494995]
[311.92550659 496.76022339]
[323.86660767 487.64620972]
[316.39886475 474.63726807]
[308.93112183 461.62832642]
[301.46337891 448.61935425]
[293.99563599 435.61041260]
[286.52789307 422.60147095]
[279.06015015 409.59249878]
[271.59240723 396.58355713]
[255.96357727 388.60195923]
[256.16247559 370.18887329]
[248.50186157 357.29254150]
[240.84127808 344.39620972]
[233.18067932 331.49987793]
[220.02859497 324.50903320]
[219.63293457 308.69277954]
[211.97233582 295.79644775]
[198.82025146 288.80560303]
[198.42460632 272.98934937]
[190.76400757 260.09301758]
[183.10340881 247.19668579]
[175.44281006 234.30035400]
[162.29072571 227.30950928]
[161.89506531 211.49325562]
[154.23446655 198.59692383]
[146.57386780 185.70059204]
[138.91328430 172.80427551]
[131.15689087 159.96533203]
[123.30513000 147.18449402]
[115.45337677 134.40364075]
[107.03875732 121.98615265]
[98.07806396 109.95677185]
[91.12003326 105.88758087]
[89.07508850 97.68093109]
[74.72370911 91.02146149]
[73.54662323 76.17343903]
[65.98594666 71.04763031]
[64.72741699 63.76491547]
[56.12885284 51.47407532]
[50.98717117 65.56532288]
[36.81367493 70.47571564]
[24.05653572 62.58550262]
[22.11984634 47.71105576]
[32.43125916 36.81725693]
[47.38814926 37.93379974]
[39.72755051 25.03747177]
[32.06695175 12.14114475]
[24.40635490 -0.75518209]
[16.74575806 -13.65150928]
[9.08516121 -26.54783630]
[-3.19845152 -30.48174858]
[-9.31348324 -41.38083649]
[-6.45741892 -53.13538742]
[-13.92516041 -66.14434052]
[-21.39290047 -79.15328979]
[-21.84018898 -64.15996552]
[-28.27363968 -50.60966110]
[-39.60910034 -40.78584671]
[-53.93635178 -36.34400940]
[-68.84099579 -38.03267288]
[-81.81134033 -45.56727219]
[-90.66165161 -57.67809296]
[-93.90049744 -72.32424927]
[-90.98208618 -87.03760529]
[-82.39820099 -99.33869934]
[-69.59539795 -107.15458679]
[-54.73115921 -109.16815186]
[-40.31037521 -105.04007721]
[-28.76217270 -95.46470642]
[-40.52805710 -106.04178619]
[-37.29693222 -120.58169556]
[-42.12292862 -134.78414917]
[-46.94892883 -148.98660278]
[-51.77492523 -163.18905640]
[-66.66510010 -161.04492188]
[-81.69571686 -161.67359924]
[-96.35483551 -165.05368042]
[-110.14317322 -171.07002258]
[-122.59110260 -179.51771545]
[-133.27465820 -190.10905457]
[-141.82995605 -202.48327637]
[-147.96560669 -216.21894836]
[-151.47262573 -230.84820557]
[-152.23158264 -245.87281799]
[-150.21661377 -260.78100586]
[-145.49635315 -275.06506348]
[-138.23156738 -288.23843384]
[-128.66969299 -299.85241699]
[-117.13639832 -309.51150513]
[-104.02452087 -316.88668823]
[-89.78063965 -321.72677612]
[-74.88988495 -323.86688232]
[-59.85943604 -323.23416138]
[-45.20122910 -319.85015869]
[-31.41451454 -313.83007812]
[-18.96886063 -305.37902832]
[-8.28816319 -294.78482056]
[0.26379672 -282.40829468]
[6.39574337 -268.67095947]
[9.89882469 -254.04075623]
[10.65372658 -239.01594543]
[8.63473797 -224.10829163]
[3.91062522 -209.82553101]
[-3.35771132 -196.65411377]
[-12.92271423 -185.04267883]
[-24.45860291 -175.38670349]
[-37.57246780 -168.01506042]
[-32.74647141 -153.81260681]
[-27.92047310 -139.61015320]
[-23.09447670 -125.40769196]
[-11.67377949 -115.84647369]
[-14.55971718 -100.29070282]
[-8.38394928 -86.62103271]
[-0.91620761 -73.61208344]
[6.55153370 -60.60313034]
[22.18038177 -52.62152481]
[21.98148727 -34.20843506]
[29.64208603 -21.31210709]
[37.30268097 -8.41577911]
[44.96327972 4.48054743]
[52.62387848 17.37687492]
[60.28447342 30.27320099]
[68.41969299 42.87551117]
[77.01825714 55.16635132]
[85.70807648 67.39283752]
[99.43141174 73.18243408]
[101.23654175 88.90032959]
[110.10743713 100.99607849]
[119.06813812 113.02545929]
[122.30407715 98.37865448]
[134.87437439 90.19406128]
[149.57818604 93.16017151]
[157.99250793 105.57786560]
[155.29722595 120.33373260]
[143.03633118 128.97492981]
[128.23422241 126.55189514]
[136.08596802 139.33273315]
[143.93772888 152.11357117]
[151.09622192 157.78753662]
[151.80960083 165.14367676]
[159.47019958 178.04000854]
[167.13079834 190.93632507]
[174.79139709 203.83265686]
[188.49142456 211.74594116]
[188.33914185 226.63975525]
[195.99972534 239.53608704]
[203.66032410 252.43241882]
[211.32092285 265.32873535]
[225.02095032 273.24203491]
[224.86866760 288.13583374]
[232.52926636 301.03216553]
[246.22927856 308.94546509]
[246.07699585 323.83929443]
[253.73759460 336.73559570]
[261.39819336 349.63192749]
[269.05880737 362.52825928]
[281.34240723 366.46218872]
[287.45742798 377.36126709]
[284.60137939 389.11581421]
[292.06912231 402.12475586]
[299.53686523 415.13372803]
[307.00460815 428.14266968]
[314.47235107 441.15161133]
[321.94009399 454.16058350]
[329.40780640 467.16952515]
[336.87554932 480.17846680]
[350.76760864 474.46307373]
[365.28683472 470.60989380]
[380.18481445 468.68487549]
[395.20657349 468.72094727]
[410.09512329 470.71752930]
[424.59567261 474.64041138]
[438.46011353 480.42251587]
[451.45117188 487.96484375]
[463.34661865 497.13839722]
[473.94284058 507.78616333]
[483.05856323 519.72595215]
[490.53778076 532.75347900]
[496.25253296 546.64581299]
[500.10501099 561.16522217]
[502.02932739 576.06329346]
[501.99252319 591.08502197]
[499.99523926 605.97351074]
[496.07165527 620.47387695]
[490.28890991 634.33801270]
[482.74594116 647.32873535]
[473.57183838 659.22369385]
[462.92358398 669.81945801]
[450.98333740 678.93457031]
[437.95547485 686.41320801]
[424.06286621 692.12725830]
[409.54327393 695.97906494]
[394.64514160 697.90264893]
[379.62335205 697.86517334]
[364.73501587 695.86718750]
[350.23483276 691.94287109]
[336.37094116 686.15948486]
[323.38058472 678.61590576]
[311.48605347 669.44122314]
[300.89083862 658.79248047]
[291.77624512 646.85180664]
[284.29824829 633.82354736]
[278.58483887 619.93072510]
[274.73373413 605.41094971]
[272.81082153 590.51269531]
[272.84906006 575.49090576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 170]
[7 169]
[8 168]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[15 160]
[16 159]
[17 158]
[18 157]
[20 155]
[21 154]
[23 152]
[24 151]
[25 150]
[26 149]
[28 147]
[29 146]
[30 145]
[31 144]
[32 142]
[33 141]
[34 140]
[35 133]
[36 132]
[38 131]
[40 129]
[42 128]
[43 127]
[49 126]
[50 125]
[51 124]
[52 123]
[53 122]
[54 121]
[57 119]
[58 118]
[59 117]
[73 116]
[75 114]
[76 113]
[77 112]
[78 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
