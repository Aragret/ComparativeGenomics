%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[84.20269012 630.72265625]
[76.30599213 617.92102051]
[70.82221222 603.91503906]
[67.92762756 589.15490723]
[67.71530151 574.11511230]
[70.19204712 559.27917480]
[75.27825165 545.12396240]
[82.81041718 532.10449219]
[92.54641724 520.63934326]
[104.17327118 511.09698486]
[117.31723022 503.78424072]
[131.55577087 498.93618774]
[129.33064270 484.10214233]
[127.10552979 469.26809692]
[113.82707977 462.57324219]
[106.95570374 449.18487549]
[109.31301880 434.14172363]
[120.20206451 423.24517822]
[117.97694397 408.41113281]
[115.80541992 406.63839722]
[114.20526123 403.89868164]
[113.54828644 400.40527344]
[114.12232971 396.50207520]
[116.08833313 392.63052368]
[114.75009918 377.69033813]
[113.41186523 362.75015259]
[112.07363129 347.80996704]
[110.73539734 332.86981201]
[109.39716339 317.92962646]
[108.05892944 302.98944092]
[105.03350067 299.29403687]
[104.29735565 293.65887451]
[106.91006470 287.58554077]
[98.42893982 275.34136963]
[105.33112335 261.10513306]
[104.43830109 246.13174438]
[103.43404388 231.16539001]
[102.31839752 216.20693970]
[101.20274353 201.24848938]
[100.08709717 186.29003906]
[98.86012268 171.34030151]
[97.52188873 156.40011597]
[96.18365479 141.45993042]
[87.34173584 129.47369385]
[93.81699371 115.03826904]
[85.34600830 107.04553986]
[84.39334106 95.43805695]
[91.44776917 86.17110443]
[90.33211517 71.21265411]
[89.21646881 56.25419617]
[87.10184479 41.40399933]
[83.99773407 26.72869682]
[80.89362335 12.05339527]
[77.78951263 -2.62190723]
[74.68540192 -17.29720879]
[64.25977325 -29.19749451]
[69.19580078 -43.25042725]
[66.09169006 -57.92573166]
[62.98757553 -72.60102844]
[59.88346863 -87.27633667]
[49.45783615 -99.17662048]
[54.39385986 -113.22955322]
[51.28974915 -127.90485382]
[48.18563843 -142.58015442]
[42.84128952 -128.56452942]
[32.00471497 -118.19299316]
[17.76829147 -113.46813965]
[2.88084793 -115.30226135]
[-9.78308487 -123.34121704]
[-17.77829742 -136.03280640]
[-19.56104279 -150.92649841]
[-14.78709698 -165.14653015]
[-4.37823677 -175.94725037]
[9.65575123 -181.24320984]
[24.60512352 -180.01184082]
[37.58338928 -172.49090576]
[46.08512497 -160.13137817]
[45.63851929 -175.12472534]
[45.19191360 -190.11807251]
[44.74530792 -205.11143494]
[34.52326965 -194.13372803]
[19.65234375 -192.17016602]
[6.93131685 -200.11846924]
[2.17607141 -214.34477234]
[7.56064177 -228.34500122]
[20.62327385 -235.71844482]
[35.39191055 -233.09405518]
[45.11518097 -221.66993713]
[46.23083115 -236.62840271]
[47.34647751 -251.58685303]
[48.46212769 -266.54528809]
[49.57777405 -281.50375366]
[50.35909653 -296.48339844]
[50.80570221 -311.47674561]
[51.25230789 -326.47009277]
[51.69891357 -341.46343994]
[51.81058121 -356.46301270]
[51.58725357 -371.46136475]
[51.36392593 -386.45971680]
[37.67849731 -393.31298828]
[28.75495338 -405.74798584]
[26.64385986 -420.90719604]
[31.83033180 -435.30715942]
[43.12255478 -445.63888550]
[57.92565918 -449.52819824]
[72.83799744 -446.08135986]
[84.43283081 -436.09042358]
[90.04573822 -421.85125732]
[88.38693237 -406.63592529]
[79.83757782 -393.94073486]
[66.36226654 -386.68304443]
[66.58559418 -371.68469238]
[66.80892181 -356.68634033]
[69.07070923 -353.98141479]
[70.13471222 -350.04660034]
[69.43714142 -345.45675659]
[66.69226837 -341.01684570]
[66.24565887 -326.02349854]
[65.79905701 -311.03015137]
[65.35244751 -296.03677368]
[67.49120331 -293.23355103]
[68.37844086 -289.25512695]
[67.47661591 -284.70101929]
[64.53623199 -280.38809204]
[63.42058182 -265.42965698]
[62.30493164 -250.47120667]
[61.18928146 -235.51274109]
[60.07363510 -220.55429077]
[59.73865891 -205.55802917]
[60.18526459 -190.56468201]
[60.63187027 -175.57133484]
[61.07847595 -160.57798767]
[62.86094284 -145.68426514]
[65.96504974 -131.00897217]
[69.06916046 -116.33366394]
[79.27276611 -105.48305511]
[74.55876923 -90.38044739]
[77.66287994 -75.70513916]
[80.76699066 -61.02983856]
[83.87110138 -46.35453796]
[94.07470703 -35.50392914]
[89.36071014 -20.40131950]
[92.46481323 -5.72601748]
[95.56892395 8.94928455]
[98.67303467 23.62458801]
[101.77714539 38.29988861]
[108.45903015 24.87035561]
[121.28588104 17.09397697]
[136.28314209 17.38035011]
[148.80377197 25.64074135]
[154.96809387 39.31557465]
[152.86604309 54.16755676]
[143.14895630 65.59463501]
[128.82777405 70.05601501]
[114.34008026 66.16928101]
[104.17491913 55.13854980]
[105.29057312 70.09700012]
[106.40621948 85.05545807]
[116.20524597 98.66998291]
[108.75717926 113.70003510]
[117.69481659 126.75489044]
[111.12384033 140.12168884]
[112.46207428 155.06187439]
[113.80030823 170.00205994]
[117.68285370 178.27029419]
[115.04555511 185.17437744]
[116.16120148 200.13284302]
[117.27684784 215.09129333]
[118.39249420 230.04974365]
[122.15151215 238.37486267]
[119.41171265 245.23892212]
[120.30452728 260.21234131]
[128.84950256 273.52749634]
[121.88346863 286.69274902]
[122.99911499 301.65118408]
[124.33734894 316.59136963]
[125.67558289 331.53155518]
[127.01381683 346.47174072]
[128.35205078 361.41192627]
[129.69029236 376.35211182]
[131.02851868 391.29229736]
[132.81098938 406.18603516]
[135.03610229 421.02005005]
[148.64295959 428.24221802]
[155.31019592 441.93167114]
[152.66937256 456.74688721]
[141.93957520 467.04296875]
[144.16468811 481.87701416]
[146.38980103 496.71105957]
[161.42413330 497.16818237]
[176.13517761 500.30264282]
[190.05004883 506.01370239]
[202.72143555 514.11773682]
[213.74201965 524.35430908]
[222.75752258 536.39422607]
[229.47813416 549.85058594]
[233.68782043 564.29077148]
[235.25125122 579.25054932]
[234.11816406 594.24908447]
[230.32499695 608.80419922]
[223.99366760 622.44799805]
[215.32772827 634.74194336]
[204.60572815 645.29083252]
[192.17233276 653.75549316]
[178.42724609 659.86389160]
[163.81230164 663.41961670]
[148.79731750 664.30841064]
[133.86495972 662.50164795]
[119.49523163 658.05749512]
[106.15007019 651.11871338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 189]
[13 188]
[14 187]
[18 183]
[19 182]
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[33 174]
[35 172]
[36 171]
[37 169]
[38 168]
[39 167]
[40 166]
[41 164]
[42 163]
[43 162]
[45 160]
[48 158]
[49 157]
[50 156]
[51 146]
[52 145]
[53 144]
[54 143]
[55 142]
[57 140]
[58 139]
[59 138]
[60 137]
[62 135]
[63 134]
[64 133]
[77 132]
[78 131]
[79 130]
[80 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 120]
[94 119]
[95 118]
[96 117]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
