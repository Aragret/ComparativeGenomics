%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[78.85794830 778.45831299]
[63.84141922 777.78710938]
[49.11479950 774.77496338]
[35.04073334 769.49603271]
[21.96580887 762.08026123]
[10.21201229 752.71038818]
[0.06878904 741.61706543]
[-8.21407509 729.07354736]
[-14.43260765 715.38867188]
[-18.43367004 700.89941406]
[-20.11873436 685.96264648]
[-19.44630241 670.94616699]
[-16.43293571 656.21978760]
[-11.15283871 642.14617920]
[-3.73603988 629.07183838]
[5.63481522 617.31884766]
[16.72896194 607.17651367]
[29.27319527 598.89471436]
[42.95860291 592.67730713]
[57.44816971 588.67742920]
[72.38507843 586.99359131]
[73.05486298 572.00854492]
[73.72464752 557.02349854]
[74.39443207 542.03845215]
[75.06421661 527.05346680]
[75.73400116 512.06842041]
[62.57630539 502.25247192]
[57.81441498 486.36895752]
[63.51475143 470.62069702]
[77.61707306 461.28149414]
[78.06368256 446.28814697]
[78.51028442 431.29479980]
[78.95689392 416.30145264]
[79.40349579 401.30810547]
[69.03455353 390.67700195]
[69.27388763 375.46524048]
[80.49508667 364.66140747]
[80.94169617 349.66806030]
[81.38829803 334.67471313]
[81.61162567 319.67639160]
[81.61162567 304.67639160]
[79.39035797 301.93807983]
[78.38506317 297.98782349]
[79.15089417 293.40887451]
[81.96156311 289.01034546]
[82.63134766 274.02529907]
[83.30113983 259.04025269]
[83.97092438 244.05522156]
[84.64070892 229.07019043]
[76.71176910 219.93463135]
[77.14713287 207.44485474]
[86.25850677 198.31547546]
[87.15132141 183.34207153]
[88.04413605 168.36865234]
[88.93695068 153.39524841]
[89.82976532 138.42184448]
[82.03771973 129.16925049]
[82.65899658 116.68735504]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[94.24896240 62.76152802]
[94.24896240 47.76152802]
[94.24896240 32.76152802]
[94.24896240 17.76152802]
[94.24896240 2.76152802]
[84.67427826 -12.96764565]
[94.03500366 -27.81162453]
[93.81167603 -42.80996323]
[93.58834839 -57.80830002]
[91.23023224 -61.45429230]
[90.25323486 -65.27659607]
[90.54320526 -68.81938171]
[91.84965515 -71.71071625]
[93.82497406 -73.69975281]
[94.49475861 -88.68479156]
[95.16454315 -103.66983032]
[95.83432770 -118.65486908]
[85.44776154 -130.26335144]
[86.34048462 -145.45077515]
[97.47141266 -155.28123474]
[98.14119720 -170.26628113]
[98.81098175 -185.25131226]
[91.69760895 -199.38320923]
[99.99549866 -211.75230408]
[100.66528320 -226.73733521]
[101.33506775 -241.72238159]
[102.00485229 -256.70742798]
[102.33982849 -271.70367432]
[102.33982849 -286.70367432]
[102.33982849 -301.70367432]
[102.33982849 -316.70367432]
[99.21041870 -325.28530884]
[102.45315552 -331.92657471]
[102.67648315 -346.92492676]
[102.89981079 -361.92327881]
[103.12313843 -376.92160034]
[103.34646606 -391.91995239]
[89.26585388 -397.58569336]
[78.18544006 -407.95819092]
[71.60377502 -421.63467407]
[70.41096497 -436.76550293]
[74.76833344 -451.30432129]
[84.08657837 -463.28491211]
[97.10548401 -471.08700562]
[112.06435394 -473.65539551]
[126.94011688 -470.64276123]
[139.72096252 -462.45651245]
[148.67835999 -450.20379639]
[152.60092163 -435.54165649]
[150.95814514 -420.45306396]
[143.97219849 -406.97860718]
[132.58787537 -396.94061279]
[118.34480286 -391.69662476]
[118.12147522 -376.69827271]
[117.89814758 -361.69992065]
[117.67481995 -346.70159912]
[117.45149231 -331.70324707]
[117.33982849 -316.70367432]
[117.33982849 -301.70367432]
[117.33982849 -286.70367432]
[117.33982849 -271.70367432]
[119.56109619 -268.96536255]
[120.56639862 -265.01513672]
[119.80056000 -260.43618774]
[116.98989105 -256.03762817]
[116.32010651 -241.05259705]
[115.65032196 -226.06755066]
[114.98053741 -211.08251953]
[122.14181519 -198.02244568]
[113.79602051 -184.58152771]
[113.12623596 -169.59649658]
[112.45645142 -154.61145020]
[122.66596222 -143.82713318]
[122.20017242 -128.62063599]
[110.81936646 -117.98508453]
[110.14958191 -103.00004578]
[109.47979736 -88.01500702]
[108.81001282 -73.02996826]
[108.58668518 -58.03162766]
[108.81001282 -43.03329086]
[109.03334045 -28.03495216]
[117.49198151 -19.38752937]
[117.80078888 -6.89399433]
[109.24896240 2.76152802]
[109.24896240 17.76152802]
[109.24896240 32.76152802]
[109.24896240 47.76152802]
[109.24896240 62.76152802]
[111.13349152 64.83678436]
[112.30953217 67.78356934]
[112.44101715 71.33576965]
[111.29432678 75.11063385]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[115.24201965 125.20801544]
[104.80317688 139.31466675]
[103.91035461 154.28807068]
[103.01753998 169.26147461]
[102.12472534 184.23487854]
[101.23191071 199.20828247]
[109.85340118 215.47946167]
[99.62574768 229.73997498]
[98.95596313 244.72500610]
[98.28617859 259.71005249]
[97.61638641 274.69509888]
[96.94660187 289.68011475]
[96.61162567 304.67639160]
[96.61162567 319.67639160]
[99.58119202 325.58343506]
[99.18177032 331.25244141]
[96.38165283 335.12133789]
[95.93504333 350.11468506]
[95.48844147 365.10803223]
[106.04668427 376.56057739]
[105.38018036 391.75961304]
[94.39684296 401.75469971]
[93.95024109 416.74807739]
[93.50363159 431.74142456]
[93.05702972 446.73477173]
[92.61042023 461.72811890]
[104.11254883 469.32363892]
[110.31045532 481.51397705]
[109.68057251 495.06655884]
[102.49426270 506.44641113]
[90.71903992 512.73815918]
[90.04925537 527.72320557]
[89.37947083 542.70825195]
[88.70968628 557.69329834]
[88.03990173 572.67834473]
[87.37011719 587.66339111]
[102.09723663 590.67309570]
[116.17217255 595.94970703]
[129.24832153 603.36328125]
[141.00366211 612.73120117]
[151.14871216 623.82287598]
[159.43365479 636.36505127]
[165.65443420 650.04888916]
[169.65789795 664.53747559]
[171.34542847 679.47399902]
[170.67547607 694.49053955]
[167.66453552 709.21740723]
[162.38676453 723.29193115]
[154.97212219 736.36749268]
[145.60319519 748.12200928]
[134.51072693 758.26617432]
[121.96786499 766.55004883]
[108.28347778 772.76971436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[30 183]
[31 182]
[32 181]
[33 180]
[34 179]
[37 176]
[38 175]
[39 174]
[40 171]
[41 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[52 163]
[53 162]
[54 161]
[55 160]
[56 159]
[59 157]
[60 155]
[61 154]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[68 142]
[69 141]
[70 140]
[75 139]
[76 138]
[77 137]
[78 136]
[81 133]
[82 132]
[83 131]
[85 129]
[86 128]
[87 127]
[88 126]
[89 122]
[90 121]
[91 120]
[92 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
