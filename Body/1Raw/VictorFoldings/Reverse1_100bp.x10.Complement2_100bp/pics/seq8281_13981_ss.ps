%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[97.87751770 736.89434814]
[83.08303070 733.28277588]
[71.04051208 723.96087646]
[63.83640289 710.54370117]
[62.71885300 695.35583496]
[67.88148499 681.02874756]
[78.42984009 670.04455566]
[92.53636169 664.30639648]
[92.98296356 649.31304932]
[93.42957306 634.31970215]
[93.87617493 619.32635498]
[94.32278442 604.33300781]
[80.08708954 601.20404053]
[66.66824341 595.50311279]
[54.52668762 587.42419434]
[44.07932281 577.24291992]
[35.68521881 565.30700684]
[29.63326645 552.02465820]
[26.13223839 537.85034180]
[25.30357933 523.26953125]
[27.17720795 508.78164673]
[31.69042397 494.88345337]
[38.69001389 482.05166626]
[47.93745804 470.72668457]
[59.11703491 461.29760742]
[71.84663391 454.08868408]
[85.69078064 449.34826660]
[100.17556000 447.24023438]
[100.84534454 432.25521851]
[101.51513672 417.27017212]
[102.18492126 402.28512573]
[102.85470581 387.30007935]
[103.52449036 372.31506348]
[103.63615417 357.31546021]
[103.18955231 342.32211304]
[102.74294281 327.32876587]
[102.29634094 312.33541870]
[101.84973145 297.34207153]
[93.73692322 284.85079956]
[101.05991364 270.82638550]
[100.61330414 255.83303833]
[92.50049591 243.34176636]
[99.82348633 229.31735229]
[89.80927277 214.90615845]
[98.67206573 198.76513672]
[98.00228119 183.78009033]
[97.33249664 168.79505920]
[96.43968201 153.82165527]
[95.32403564 138.86320496]
[94.20838165 123.90474701]
[93.09273529 108.94628906]
[84.08482361 120.94035339]
[69.78165436 125.45914459]
[55.51796722 120.81726074]
[46.61375046 108.74601746]
[46.39006805 93.74768066]
[54.93033981 81.41626740]
[69.04926300 76.35108948]
[83.48081970 80.44132996]
[92.84282684 92.16252136]
[93.51261139 77.17748260]
[94.18239594 62.19244385]
[94.85218048 47.20740509]
[92.10908508 38.49458313]
[95.64513397 32.00473785]
[96.53794861 17.03133202]
[86.00837708 27.71440315]
[71.22972107 30.28176498]
[57.71405792 23.77585411]
[50.50239563 10.62321281]
[52.28450775 -4.27054644]
[62.39570618 -15.35042095]
[77.06476593 -18.48389244]
[90.82049561 -12.50225163]
[98.53260040 0.36463422]
[101.19840240 -14.39658260]
[103.86419678 -29.15780067]
[106.52999115 -43.91901779]
[109.19578552 -58.68023300]
[111.86157990 -73.44145203]
[114.52737427 -88.20266724]
[109.36580658 -103.15822601]
[119.24182892 -114.30783081]
[121.79766083 -129.08848572]
[124.24338531 -143.88775635]
[126.68910980 -158.68702698]
[119.80717468 -175.76684570]
[131.46292114 -188.88594055]
[133.68803406 -203.71997070]
[135.91316223 -218.55401611]
[137.69561768 -233.44773865]
[139.03385925 -248.38792419]
[140.37208557 -263.32809448]
[141.71032715 -278.26828003]
[143.04855347 -293.20846558]
[143.60676575 -308.19808960]
[143.38343811 -323.19641113]
[143.16011047 -338.19476318]
[142.93678284 -353.19311523]
[129.25135803 -360.04638672]
[120.32781219 -372.48138428]
[118.21672058 -387.64059448]
[123.40319061 -402.04055786]
[134.69541931 -412.37228394]
[149.49851990 -416.26159668]
[164.41085815 -412.81475830]
[176.00569153 -402.82382202]
[181.61860657 -388.58465576]
[179.95979309 -373.36932373]
[171.41044617 -360.67413330]
[157.93511963 -353.41644287]
[158.15844727 -338.41809082]
[158.38177490 -323.41973877]
[158.60510254 -308.42141724]
[168.98945618 -319.24569702]
[183.88796997 -320.98764038]
[196.48924255 -312.85083008]
[201.03215027 -298.55529785]
[195.43974304 -284.63677979]
[182.26876831 -277.45864868]
[167.54084778 -280.30264282]
[157.98873901 -291.87023926]
[156.65051270 -276.93005371]
[155.31227112 -261.98986816]
[153.97404480 -247.04968262]
[152.63580322 -232.10949707]
[154.32768250 -229.87438965]
[155.23612976 -226.83444214]
[155.05018616 -223.28466797]
[153.57128906 -219.62716675]
[150.74720764 -216.32890320]
[148.52207947 -201.49485779]
[146.29696655 -186.66081238]
[153.23246765 -176.74993896]
[151.50009155 -164.37324524]
[141.48838806 -156.24130249]
[139.04266357 -141.44201660]
[136.59692383 -126.64275360]
[138.60775757 -119.53090668]
[134.00303650 -111.64202881]
[139.35528564 -97.74229431]
[129.28858948 -85.53687286]
[126.62279510 -70.77565765]
[123.95700073 -56.01443863]
[121.29120636 -41.25322342]
[118.62541199 -26.49200439]
[115.95961761 -11.73078728]
[113.29382324 3.03042960]
[111.51135254 17.92414665]
[110.61853790 32.89755249]
[109.83721924 47.87718964]
[109.16743469 62.86222839]
[108.49765015 77.84726715]
[107.82786560 92.83230591]
[108.05119324 107.83064270]
[109.16683960 122.78910065]
[110.28248596 137.74754333]
[111.39813232 152.70600891]
[114.79882050 158.37582397]
[114.82214355 164.05882263]
[112.31753540 168.12527466]
[112.98731995 183.11030579]
[113.65710449 198.09535217]
[122.63154602 207.35939026]
[122.88091278 219.85424805]
[114.81683350 228.87074280]
[122.96158600 242.43443298]
[115.60665131 255.38642883]
[116.05326080 270.37979126]
[124.19801331 283.94345093]
[116.84307861 296.89544678]
[117.28968811 311.88882446]
[117.73629761 326.88217163]
[118.18289948 341.87551880]
[118.62950897 356.86886597]
[130.65870667 347.90792847]
[145.20285034 351.57778931]
[151.54054260 365.17312622]
[144.99986267 378.67199707]
[130.40235901 382.12353516]
[118.50952911 372.98483276]
[117.83974457 387.96987915]
[117.16996002 402.95492554]
[116.50017548 417.93994141]
[115.83038330 432.92498779]
[115.16059875 447.91003418]
[130.17488098 451.56924438]
[144.18646240 458.07699585]
[156.66088867 467.18304443]
[167.12272644 478.53814697]
[175.17369080 491.70730591]
[180.50779724 506.18655396]
[182.92297363 521.42218018]
[182.32878113 536.83197021]
[178.74971008 551.82739258]
[172.32421875 565.83599854]
[163.29939270 578.32348633]
[152.02142334 588.81396484]
[138.92234802 596.90802002]
[124.50344086 602.29797363]
[109.31613159 604.77960205]
[108.86952972 619.77294922]
[108.42292023 634.76635742]
[107.97631073 649.75970459]
[107.52970886 664.75305176]
[121.26967621 671.32061768]
[131.14553833 682.91314697]
[135.44625854 697.52221680]
[133.42668152 712.61657715]
[125.43674469 725.58117676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[40 169]
[41 168]
[43 166]
[45 163]
[46 162]
[47 161]
[48 158]
[49 157]
[50 156]
[51 155]
[60 154]
[61 153]
[62 152]
[63 151]
[65 150]
[66 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 143]
[81 142]
[83 140]
[84 138]
[85 137]
[86 136]
[88 133]
[89 132]
[90 131]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
