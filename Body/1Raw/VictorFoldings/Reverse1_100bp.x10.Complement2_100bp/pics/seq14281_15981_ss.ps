%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[43.30457687 567.31378174]
[43.91734695 582.44335938]
[39.58197403 596.95135498]
[30.76871872 609.26416016]
[18.43358231 618.04614258]
[3.91458488 622.34472656]
[-11.21335983 621.69354248]
[-25.30928421 616.16326904]
[-36.84416962 606.35382080]
[-44.56679916 593.32928467]
[-47.63947678 578.50231934]
[-45.72890472 563.48138428]
[-39.04232407 549.89581299]
[-28.30504799 539.21923828]
[-14.68177319 532.60974121]
[0.34974784 530.78436279]
[3.45385790 516.10906982]
[6.55796814 501.43374634]
[9.66207790 486.75845337]
[12.76618862 472.08312988]
[15.76096249 457.38513184]
[18.64623451 442.66525269]
[21.53150749 427.94534302]
[24.41678047 413.22546387]
[27.30205345 398.50558472]
[30.18732643 383.78567505]
[33.07259750 369.06579590]
[20.42195892 363.33355713]
[9.36530685 354.91540527]
[0.46359721 344.23397827]
[-5.83056116 331.82690430]
[-9.19591999 318.31973267]
[-9.45898247 304.39422607]
[-6.60294819 290.75421143]
[-0.76873809 278.08978271]
[7.75195646 267.04251099]
[18.53125381 258.17288208]
[31.02656746 251.93190002]
[44.60792160 248.63812256]
[58.58969879 248.46147156]
[61.91196060 233.83399963]
[65.23422241 219.20654297]
[68.55648041 204.57908630]
[71.87873840 189.95162964]
[75.20099640 175.32415771]
[78.52325439 160.69670105]
[65.53124237 154.38055420]
[54.27446747 145.32676697]
[45.31962204 133.99113464]
[39.11751556 120.94429016]
[35.98036957 106.84307098]
[36.06612396 92.39735413]
[39.37046051 78.33437347]
[45.72702408 65.36209106]
[54.81581879 54.13356018]
[66.17929077 45.21405411]
[79.24536896 39.05259705]
[93.35629272 35.95937347]
[107.80167389 36.09010696]
[111.34134674 21.51373100]
[114.88101959 6.93735600]
[100.90037537 0.26182404]
[88.61218262 -9.16400433]
[78.54909515 -20.92858505]
[71.14672852 -34.51906204]
[66.72474670 -49.34361649]
[65.47311401 -64.75724792]
[67.44388580 -80.08982086]
[72.54909515 -94.67523193]
[80.56462097 -107.88030243]
[91.14008331 -119.13231659]
[103.81412506 -127.94380951]
[118.03453827 -133.93373108]
[133.18234253 -136.84388733]
[148.59872437 -136.55009460]
[151.92097473 -151.17755127]
[145.72009277 -162.48736572]
[148.78834534 -174.60220337]
[158.95217896 -181.16140747]
[162.49185181 -195.73779297]
[166.03152466 -210.31416321]
[169.57119751 -224.89053345]
[173.11087036 -239.46691895]
[176.65052795 -254.04328918]
[180.19020081 -268.61965942]
[183.72987366 -283.19604492]
[187.26954651 -297.77243042]
[190.80921936 -312.34878540]
[176.74803162 -317.62515259]
[163.42536926 -324.55798340]
[151.03552246 -333.04617310]
[139.75918579 -342.96591187]
[129.76078796 -354.17257690]
[121.18614197 -366.50274658]
[114.16029358 -379.77658081]
[108.78569031 -393.80053711]
[105.14071655 -408.37005615]
[103.27852631 -423.27273560]
[103.22627258 -438.29122925]
[104.98472595 -453.20648193]
[108.52823639 -467.80102539]
[113.80512238 -481.86203003]
[120.73844910 -495.18444824]
[129.22709656 -507.57397461]
[139.14726257 -518.84991455]
[150.35430908 -528.84790039]
[162.68478394 -537.42211914]
[175.95889282 -544.44744873]
[189.98303223 -549.82153320]
[204.55271912 -553.46594238]
[219.45545959 -555.32757568]
[234.47393799 -555.37927246]
[249.38912964 -553.62023926]
[263.98355103 -550.07623291]
[278.04434204 -544.79876709]
[291.36648560 -537.86499023]
[303.75570679 -529.37585449]
[315.03131104 -519.45526123]
[325.02886963 -508.24786377]
[333.60256958 -495.91705322]
[340.62744141 -482.64270020]
[346.00100708 -468.61834717]
[349.64486694 -454.04852295]
[351.50595093 -439.14572144]
[351.55706787 -424.12722778]
[349.79751587 -409.21209717]
[346.25292969 -394.61782837]
[340.97497559 -380.55722046]
[334.04064941 -367.23532104]
[325.55108643 -354.84643555]
[315.63006592 -343.57119751]
[304.42227173 -333.57406616]
[292.09115601 -325.00082397]
[278.81652832 -317.97644043]
[264.79199219 -312.60342407]
[250.22203064 -308.96008301]
[235.31915283 -307.09954834]
[220.30067444 -307.04898071]
[205.38560486 -308.80911255]
[201.84593201 -294.23275757]
[198.30625916 -279.65637207]
[194.76658630 -265.07998657]
[191.22691345 -250.50361633]
[187.68724060 -235.92724609]
[184.14756775 -221.35086060]
[180.60789490 -206.77449036]
[177.06822205 -192.19812012]
[173.52854919 -177.62173462]
[179.36909485 -161.07318115]
[166.54843140 -147.85528564]
[163.22618103 -133.22782898]
[176.49310303 -127.27667999]
[188.34332275 -118.84197998]
[198.31768799 -108.24816895]
[206.02922058 -95.90338898]
[211.17822266 -82.28376770]
[213.56384277 -67.91505432]
[213.09194946 -53.35232162]
[209.77882385 -39.15851974]
[203.75065613 -25.88271332]
[195.23867798 -14.03885651]
[184.57031250 -4.08588076]
[172.15658569 3.59008241]
[158.47630310 8.69068241]
[144.05757141 11.01694298]
[129.45739746 10.47702885]
[125.91771698 25.05340385]
[122.37804413 39.62977982]
[136.14543152 46.71915436]
[147.82186890 56.89072037]
[156.73190308 69.55607605]
[162.36009216 83.98255157]
[164.38088989 99.33560944]
[162.67736816 114.72710419]
[157.34808350 129.26666260]
[148.70132446 142.11318970]
[137.23728943 152.52355957]
[123.61914825 159.89553833]
[108.63468170 163.80268860]
[93.15071869 164.01896667]
[89.82846069 178.64642334]
[86.50619507 193.27388000]
[83.18393707 207.90135193]
[79.86167908 222.52880859]
[76.53942108 237.15626526]
[73.21716309 251.78372192]
[87.58721924 259.21255493]
[99.54740143 270.08883667]
[108.29228973 283.67260742]
[113.23491669 299.04196167]
[114.04616547 315.15533447]
[110.67667389 330.92239380]
[103.35981750 345.27758789]
[92.59553528 357.25222778]
[79.11617279 366.03991699]
[63.83668518 371.05078125]
[47.79248810 371.95104980]
[44.90721893 386.67095947]
[42.02194595 401.39083862]
[39.13667297 416.11074829]
[36.25139999 430.83062744]
[33.36612701 445.55050659]
[30.48085403 460.27041626]
[31.90113258 469.29376221]
[27.44149017 475.18725586]
[24.33738136 489.86254883]
[21.23327065 504.53784180]
[18.12915993 519.21313477]
[15.02505016 533.88848877]
[28.02999115 541.64410400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[40 186]
[41 185]
[42 184]
[43 183]
[44 182]
[45 181]
[46 180]
[59 168]
[60 167]
[61 166]
[75 151]
[76 150]
[79 148]
[80 147]
[81 146]
[82 145]
[83 144]
[84 143]
[85 142]
[86 141]
[87 140]
[88 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
