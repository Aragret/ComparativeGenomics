%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[80.31432343 550.77459717]
[65.34224701 549.87121582]
[50.40847015 548.47070312]
[35.52949524 546.57458496]
[20.72176933 544.18493652]
[6.00165081 541.30444336]
[-8.61459160 537.93627930]
[-23.11080551 534.08410645]
[-37.47097015 529.75225830]
[-51.67921829 524.94555664]
[-65.71984863 519.66918945]
[-79.57734680 513.92907715]
[-93.23639679 507.73150635]
[-106.68190002 501.08337402]
[-119.89900208 493.99203491]
[-132.87309265 486.46527100]
[-145.58984375 478.51144409]
[-158.03520203 470.13931274]
[-170.19540405 461.35818481]
[-182.05702209 452.17770386]
[-193.60693359 442.60803223]
[-204.83239746 432.65972900]
[-215.72097778 422.34384155]
[-226.26066589 411.67172241]
[-236.43981934 400.65518188]
[-246.24716187 389.30639648]
[-255.67189026 377.63787842]
[-264.70355225 365.66256714]
[-273.33218384 353.39367676]
[-281.54827881 340.84475708]
[-289.34271240 328.02969360]
[-296.70687866 314.96264648]
[-303.63265991 301.65802002]
[-310.11239624 288.13055420]
[-316.13891602 274.39520264]
[-321.70556641 260.46713257]
[-326.80621338 246.36170959]
[-331.43518066 232.09455872]
[-335.58737183 217.68141174]
[-339.25823975 203.13824463]
[-342.44366455 188.48107910]
[-345.14013672 173.72615051]
[-347.34469604 158.88973999]
[-349.05493164 143.98825073]
[-350.26889038 129.03814697]
[-350.98526001 114.05596161]
[-351.20327759 99.05824280]
[-350.92266846 84.06156158]
[-350.14373779 69.08249664]
[-348.86737061 54.13759232]
[-347.09497070 39.24337387]
[-344.82849121 24.41629601]
[-342.07043457 9.67274570]
[-338.82385254 -4.97098589]
[-335.09234619 -19.49871635]
[-330.88000488 -33.89439011]
[-326.19152832 -48.14209747]
[-321.03204346 -62.22609711]
[-315.40728760 -76.13082123]
[-309.32348633 -89.84090424]
[-302.78735352 -103.34120178]
[-295.80609131 -116.61679077]
[-288.38742065 -129.65299988]
[-280.53955078 -142.43540955]
[-272.27117920 -154.94992065]
[-263.59140015 -167.18269348]
[-254.50981140 -179.12019348]
[-245.03646851 -190.74925232]
[-235.18182373 -202.05700684]
[-224.95678711 -213.03096008]
[-214.37263489 -223.65898132]
[-203.44107056 -233.92933655]
[-192.17419434 -243.83067322]
[-180.58442688 -253.35205078]
[-168.68458557 -262.48294067]
[-156.48783875 -271.21325684]
[-144.00764465 -279.53335571]
[-131.25779724 -287.43402100]
[-118.25239563 -294.90655518]
[-105.00580597 -301.94265747]
[-91.53266907 -308.53460693]
[-77.84786987 -314.67507935]
[-63.96653366 -320.35729980]
[-49.90399933 -325.57501221]
[-35.67580795 -330.32238770]
[-21.29768562 -334.59423828]
[-6.78551817 -338.38583374]
[7.84465694 -341.69296265]
[22.57667160 -344.51199341]
[37.39424515 -346.83981323]
[52.28100586 -348.67379761]
[50.94277191 -363.61398315]
[49.60453796 -378.55416870]
[48.26630402 -393.49435425]
[33.61001205 -397.36334229]
[21.16264915 -406.01428223]
[12.42728615 -418.40255737]
[8.45876503 -433.03222656]
[9.73630238 -448.13662720]
[16.10562897 -461.89190674]
[26.79761887 -472.63702393]
[40.52116013 -479.07440186]
[55.61907196 -480.42678833]
[70.26820374 -476.53079224]
[82.69960785 -467.85693359]
[91.41212463 -455.45257568]
[95.35367584 -440.81564331]
[94.04830933 -425.71359253]
[87.65364075 -411.97006226]
[76.94187164 -401.24468994]
[63.20648575 -394.83261108]
[64.54472351 -379.89242554]
[65.88295746 -364.95223999]
[67.22119141 -350.01205444]
[82.19690704 -350.85290527]
[97.19229889 -351.19552612]
[112.19079590 -351.03955078]
[127.17581940 -350.38513184]
[142.13081360 -349.23300171]
[157.03924561 -347.58441162]
[171.88464355 -345.44122314]
[186.65060425 -342.80578613]
[201.32080078 -339.68099976]
[215.87904358 -336.07034302]
[230.30921936 -331.97778320]
[244.59539795 -327.40783691]
[258.72180176 -322.36557007]
[272.67276001 -316.85656738]
[286.43295288 -310.88690186]
[299.98709106 -304.46316528]
[313.32022095 -297.59246826]
[326.41763306 -290.28237915]
[339.26483154 -282.54101562]
[351.84759521 -274.37692261]
[364.15206909 -265.79907227]
[376.16464233 -256.81701660]
[387.87200928 -247.44062805]
[399.26126099 -237.68029785]
[410.31979370 -227.54679871]
[421.03543091 -217.05133057]
[431.39627075 -206.20549011]
[441.39086914 -195.02128601]
[451.00823975 -183.51103210]
[460.23770142 -171.68748474]
[469.06906128 -159.56370544]
[477.49258423 -147.15307617]
[485.49893188 -134.46932983]
[493.07925415 -121.52647400]
[500.22521973 -108.33880615]
[506.92889404 -94.92091370]
[513.18286133 -81.28761292]
[518.98022461 -67.45397186]
[524.31463623 -53.43528366]
[529.18011475 -39.24703598]
[533.57128906 -24.90490723]
[537.48333740 -10.42474747]
[540.91192627 4.17744112]
[543.85327148 18.88552094]
[546.30413818 33.68323898]
[548.26177979 48.55424500]
[549.72406006 63.48210144]
[550.68933105 78.45030975]
[551.15661621 93.44233704]
[551.12530518 108.44161224]
[550.59545898 123.43155670]
[549.56762695 138.39559937]
[548.04302979 153.31723022]
[546.02331543 168.17993164]
[543.51068115 182.96728516]
[540.50793457 197.66294861]
[537.01837158 212.25068665]
[533.04589844 226.71438599]
[528.59484863 241.03805542]
[523.67016602 255.20587158]
[518.27734375 269.20214844]
[512.42224121 283.01147461]
[506.11135864 296.61853027]
[499.35171509 310.00830078]
[492.15075684 323.16601562]
[484.51641846 336.07711792]
[476.45718384 348.72732544]
[467.98190308 361.10266113]
[459.10000610 373.18945312]
[449.82125854 384.97436523]
[440.15591431 396.44433594]
[430.11468506 407.58673096]
[419.70861816 418.38919067]
[408.94927979 428.83981323]
[397.84851074 438.92706299]
[386.41860962 448.63973999]
[374.67218018 457.96716309]
[362.62222290 466.89898682]
[350.28204346 475.42535400]
[337.66525269 483.53683472]
[324.78585815 491.22448730]
[311.65805054 498.47982788]
[298.29632568 505.29476929]
[284.71548462 511.66186523]
[270.93048096 517.57403564]
[256.95663452 523.02471924]
[242.80931091 528.00793457]
[228.50416565 532.51818848]
[214.05702209 536.55041504]
[199.48384094 540.10028076]
[184.80070496 543.16375732]
[170.02386475 545.73754883]
[155.16964722 547.81872559]
[140.25447083 549.40502930]
[125.29479218 550.49468994]
[110.30716705 551.08654785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
