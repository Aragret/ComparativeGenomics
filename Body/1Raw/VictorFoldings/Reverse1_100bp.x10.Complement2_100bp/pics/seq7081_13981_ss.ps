%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[112.50358582 619.32458496]
[109.96437073 604.51464844]
[109.55874634 589.49414062]
[111.29498291 574.56878662]
[115.13772583 560.04248047]
[121.00874329 546.21093750]
[128.78851318 533.35571289]
[138.31864929 521.73858643]
[149.40512085 511.59606934]
[161.82223511 503.13464355]
[175.31718445 496.52651978]
[170.70317078 482.25378418]
[166.08915710 467.98104858]
[161.47515869 453.70831299]
[156.86114502 439.43557739]
[152.24713135 425.16284180]
[147.63311768 410.89010620]
[133.99430847 399.84704590]
[137.99931335 381.87368774]
[133.17330933 367.67123413]
[128.34732056 353.46878052]
[125.02439117 368.09609985]
[116.10466003 380.15588379]
[103.09124756 387.61584473]
[88.17714691 389.21887207]
[73.87564850 384.69479370]
[62.59680557 374.80603027]
[56.24129486 361.21899414]
[55.88013840 346.22335815]
[61.57419205 332.34613037]
[72.36391449 321.92584229]
[86.43103790 316.71856689]
[101.40501404 317.60174561]
[114.76246643 324.42660522]
[124.25318146 336.04446411]
[122.24916840 321.17895508]
[120.24515533 306.31341553]
[118.24114227 291.44787598]
[116.23712921 276.58236694]
[114.23311615 261.71682739]
[112.22910309 246.85130310]
[102.86078644 235.27183533]
[108.68500519 220.56167603]
[99.31669617 208.98220825]
[105.14091492 194.27204895]
[103.13690186 179.40650940]
[101.13288879 164.54098511]
[91.76457977 152.96151733]
[97.58879852 138.25135803]
[95.58478546 123.38582611]
[93.58077240 108.52030182]
[90.14971161 93.91797638]
[85.32371521 79.71552277]
[80.39212036 65.54938507]
[75.35520172 51.42035675]
[70.31829071 37.29132462]
[65.28137207 23.16229630]
[60.24445724 9.03326702]
[48.32239914 -1.36746025]
[51.33668900 -15.95386887]
[46.29977036 -30.08289909]
[41.26285553 -44.21192932]
[36.22594070 -58.34095764]
[31.18902397 -72.46998596]
[26.15210724 -86.59901428]
[21.11519051 -100.72804260]
[16.07827377 -114.85707855]
[4.78073883 -121.08029938]
[0.87635487 -132.95208740]
[5.94009113 -143.93777466]
[-5.82579327 -154.51484680]
[-2.59466767 -169.05476379]
[-7.42066526 -183.25721741]
[-13.13800716 -169.38955688]
[-25.85384178 -161.43295288]
[-40.82547379 -162.35501099]
[-52.46885681 -171.81184387]
[-56.44129944 -186.27627563]
[-51.26117325 -200.35342407]
[-38.86054230 -208.79287720]
[-23.86453056 -208.44691467]
[-11.86560822 -199.44363403]
[-14.96971893 -214.11892700]
[-18.07382774 -228.79423523]
[-21.17793846 -243.46954346]
[-24.28204918 -258.14483643]
[-39.34926987 -258.63702393]
[-53.86068726 -262.72140503]
[-66.97262573 -270.16052246]
[-77.92277527 -280.52188110]
[-86.07450867 -293.20309448]
[-90.95388794 -307.46685791]
[-92.27724457 -322.48391724]
[-89.96762848 -337.38119507]
[-84.15932465 -351.29260254]
[-75.19001770 -363.40933228]
[-63.58117294 -373.02691650]
[-50.00771332 -379.58624268]
[-35.25878143 -382.70590210]
[-20.19186020 -382.20458984]
[-5.68292046 -378.11141968]
[7.42450523 -370.66433716]
[18.36837006 -360.29635620]
[26.51241112 -347.61022949]
[31.38314438 -333.34350586]
[32.69739151 -318.32562256]
[30.37874794 -303.42974854]
[24.56201172 -289.52188110]
[15.58536053 -277.41058350]
[3.97068763 -267.80004883]
[-9.60674667 -261.24896240]
[-6.50263643 -246.57365417]
[-3.39852619 -231.89834595]
[-0.29441610 -217.22303772]
[2.80969405 -202.54774475]
[6.78179026 -188.08322144]
[11.60778809 -173.88076782]
[23.02848434 -164.31953430]
[20.14254761 -148.76377869]
[33.94427109 -137.92498779]
[30.20730400 -119.89398956]
[35.24422073 -105.76496124]
[40.28113556 -91.63593292]
[45.31805420 -77.50690460]
[50.35496902 -63.37787247]
[55.39188385 -49.24884415]
[60.42880249 -35.11981583]
[65.46572113 -20.99078560]
[77.02750397 -11.60066128]
[74.37348175 3.99635077]
[79.41040039 18.12537956]
[84.44731903 32.25440979]
[89.48423004 46.38343811]
[94.52114868 60.51247025]
[99.72818756 65.75732422]
[99.52616882 74.88952637]
[104.35216522 89.09197998]
[107.67509460 74.46466827]
[116.59482574 62.40488815]
[129.60823059 54.94491577]
[144.52233887 53.34189224]
[158.82383728 57.86595535]
[170.10267639 67.75471497]
[176.45819092 81.34175110]
[176.81935120 96.33740234]
[171.12528992 110.21463776]
[160.33557129 120.63491058]
[146.26844788 125.84220123]
[131.29446411 124.95900726]
[117.93701935 118.13415527]
[108.44630432 106.51628113]
[110.45031738 121.38181305]
[112.45433044 136.24734497]
[121.96598053 148.89009094]
[115.99842072 162.53697205]
[118.00243378 177.40249634]
[120.00644684 192.26803589]
[129.51809692 204.91078186]
[123.55053711 218.55766296]
[133.06219482 231.20040894]
[127.09462738 244.84729004]
[129.09864807 259.71282959]
[131.10266113 274.57833862]
[133.10667419 289.44387817]
[135.11068726 304.30941772]
[137.11470032 319.17492676]
[139.11871338 334.04046631]
[142.54977417 348.64279175]
[147.37576294 362.84524536]
[152.20176697 377.04769897]
[163.40539551 383.43844604]
[167.13259888 395.36703491]
[161.90585327 406.27612305]
[166.51986694 420.54885864]
[171.13388062 434.82156372]
[175.74787903 449.09429932]
[180.36189270 463.36703491]
[184.97590637 477.63977051]
[189.58992004 491.91250610]
[204.39933777 489.37054443]
[219.41978455 488.96212769]
[234.34547424 490.69558716]
[248.87251282 494.53564453]
[262.70513916 500.40408325]
[275.56179810 508.18148804]
[287.18066406 517.70947266]
[297.32525635 528.79406738]
[305.78900146 541.20959473]
[312.39962769 554.70330811]
[317.02252197 569.00048828]
[319.56356812 583.81005859]
[319.97103882 598.83056641]
[318.23666382 613.75610352]
[314.39572144 628.28289795]
[308.52639771 642.11523438]
[300.74822998 654.97137451]
[291.21954346 666.58966064]
[280.13430786 676.73358154]
[267.71826172 685.19653320]
[254.22412109 691.80633545]
[239.92665100 696.42834473]
[225.11691284 698.96844482]
[210.09640503 699.37500000]
[195.17094421 697.63970947]
[180.64437866 693.79785156]
[166.81246948 687.92767334]
[153.95678711 680.14874268]
[142.33909607 670.61932373]
[132.19587708 659.53344727]
[123.73365784 647.11688232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 179]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[19 170]
[20 169]
[21 168]
[35 167]
[36 166]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[43 159]
[45 157]
[46 156]
[47 155]
[49 153]
[50 152]
[51 151]
[52 137]
[53 136]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[66 122]
[67 121]
[70 119]
[72 117]
[73 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
