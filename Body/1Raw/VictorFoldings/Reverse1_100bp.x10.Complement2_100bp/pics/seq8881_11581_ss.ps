%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[156.88214111 491.55920410]
[154.43641663 476.75994873]
[151.99069214 461.96066284]
[149.54496765 447.16140747]
[147.09924316 432.36212158]
[144.65350342 417.56286621]
[142.20777893 402.76358032]
[139.76205444 387.96432495]
[125.68424225 378.76354980]
[122.55500793 361.89575195]
[132.79095459 347.70968628]
[130.12515259 332.94845581]
[127.45936584 318.18725586]
[124.79356384 303.42602539]
[122.12776947 288.66479492]
[108.31092834 286.20834351]
[96.13655853 279.16824341]
[87.07727814 268.37246704]
[82.23690033 255.10470581]
[82.21601868 240.95175171]
[87.03752136 227.61360168]
[96.14143372 216.69938660]
[108.44983673 209.53318787]
[106.00411224 194.73391724]
[103.55838013 179.93464661]
[93.84945679 168.63925171]
[99.23312378 153.76219177]
[96.59510040 151.42271423]
[94.95917511 147.68923950]
[94.96817017 143.04670715]
[97.02405548 138.24873352]
[95.24158478 123.35501862]
[93.45912170 108.46130371]
[89.91944885 93.88492584]
[84.67272949 79.83245850]
[79.42601013 65.77998352]
[74.17929077 51.72751617]
[68.93257141 37.67504501]
[63.68585587 23.62257385]
[48.79439545 25.81874847]
[33.77758789 24.87098122]
[19.29167557 20.82312202]
[5.96919298 13.85445118]
[-5.60865211 4.27172804]
[-14.93733501 -7.50430727]
[-21.61099815 -20.95740509]
[-25.34011269 -35.49843979]
[-25.96402931 -50.49121475]
[-23.45790672 -65.28027344]
[-17.93368912 -79.21958923]
[-9.63510227 -91.70076752]
[1.07309091 -102.17958069]
[13.72112656 -110.19973755]
[8.47440815 -124.25220490]
[3.22768998 -138.30467224]
[-2.01902819 -152.35714722]
[-7.26574612 -166.40962219]
[-12.72110367 -180.38241577]
[-18.38389015 -194.27244568]
[-22.50836945 -197.47178650]
[-24.76732063 -201.52769470]
[-25.14686012 -205.58615112]
[-23.97407913 -208.91133118]
[-29.01099396 -223.04037476]
[-34.04791260 -237.16940308]
[-39.08482742 -251.29843140]
[-51.00688553 -261.69915771]
[-47.99259567 -276.28555298]
[-53.02951050 -290.41458130]
[-58.06642532 -304.54360962]
[-61.17120361 -289.86846924]
[-69.91040039 -277.67721558]
[-82.81129456 -270.02432251]
[-97.69987488 -268.19943237]
[-112.06714630 -272.51007080]
[-123.49196625 -282.22979736]
[-130.04907227 -295.72070312]
[-130.63343811 -310.70932007]
[-125.14662933 -324.66979980]
[-114.51325226 -335.24954224]
[-100.52521515 -340.66571045]
[-85.53974915 -340.00555420]
[-72.08216858 -333.38031006]
[-62.41952896 -321.90502930]
[-64.64464569 -336.73907471]
[-66.86976624 -351.57312012]
[-69.09487915 -366.40716553]
[-84.11724854 -367.53686523]
[-98.51144409 -371.98150635]
[-111.55545807 -379.51818848]
[-122.59500885 -389.76882935]
[-131.07635498 -402.21932983]
[-136.57408142 -416.24511719]
[-138.81240845 -431.14266968]
[-137.67909241 -446.16476440]
[-133.23095703 -460.55789185]
[-125.69111633 -473.60006714]
[-115.43778229 -484.63714600]
[-102.98524475 -493.11547852]
[-88.95812225 -498.60980225]
[-74.06001282 -500.84454346]
[-59.03819275 -499.70758057]
[-44.64615631 -495.25595093]
[-31.60579491 -487.71295166]
[-20.57121468 -477.45693970]
[-12.09590149 -465.00234985]
[-6.60497522 -450.97390747]
[-4.37385750 -436.07525635]
[-5.51446104 -421.05371094]
[-9.96957302 -406.66275024]
[-17.51572800 -393.62420654]
[-27.77441216 -382.59210205]
[-40.23105621 -374.11981201]
[-54.26083755 -368.63229370]
[-52.03572083 -353.79824829]
[-49.81060410 -338.96420288]
[-47.58548355 -324.13015747]
[-43.93739700 -309.58053589]
[-38.90048218 -295.45150757]
[-33.86356354 -281.32247925]
[-22.30178261 -271.93234253]
[-24.95579720 -256.33535767]
[-19.91888046 -242.20631409]
[-14.88196468 -228.07728577]
[-9.84504890 -213.94825745]
[-4.49386311 -199.93522644]
[1.16892350 -186.04521179]
[5.14542913 -183.40013123]
[7.50252962 -178.22894287]
[6.78672504 -171.65634155]
[12.03344345 -157.60386658]
[17.28016090 -143.55139160]
[22.52688026 -129.49893188]
[27.77359772 -115.44645691]
[42.58292389 -117.67794800]
[57.53841019 -116.78108215]
[71.98619843 -112.79264069]
[85.29411316 -105.88460541]
[96.87934113 -96.35678101]
[106.23393250 -84.62374878]
[112.94709778 -71.19685364]
[116.72322845 -56.66191483]
[117.39489746 -41.65364456]
[114.93032837 -26.82795715]
[109.43484497 -12.83329296]
[101.14640045 -0.28225869]
[90.42525482 10.27519321]
[77.73832703 18.37585449]
[82.98504639 32.42832565]
[88.23176575 46.48079681]
[93.47848511 60.53326797]
[98.72520447 74.58573914]
[103.97191620 88.63821411]
[106.17982483 73.80159760]
[113.26808167 60.58204269]
[124.40397644 50.53257370]
[138.27926636 44.83378601]
[153.26391602 44.15517426]
[167.59751892 48.57645798]
[179.59619141 57.57822418]
[187.85034180 70.10296631]
[191.39027405 84.67927551]
[189.80012512 99.59474945]
[183.26670837 113.09713745]
[172.55755615 123.60018158]
[158.93075562 129.87001038]
[143.98719788 131.17002869]
[129.48243713 127.34752655]
[117.12044525 118.85157013]
[108.35283661 106.67884064]
[110.13530731 121.57255554]
[111.91777039 136.46627808]
[114.03239441 151.31646729]
[123.91625214 163.67041016]
[118.35765076 177.48892212]
[120.80338287 192.28819275]
[123.24910736 207.08746338]
[138.93099976 210.63519287]
[152.01937866 219.90692139]
[160.52717590 233.45880127]
[163.17666626 249.19995117]
[159.59135437 264.71511841]
[150.34902954 277.63519287]
[136.88899231 285.99902344]
[139.55477905 300.76022339]
[142.22058105 315.52145386]
[144.88636780 330.28265381]
[147.55216980 345.04388428]
[159.42770386 351.39889526]
[165.38781738 363.26007080]
[163.45683289 376.19659424]
[154.56132507 385.51858521]
[157.00704956 400.31784058]
[159.45277405 415.11712646]
[161.89851379 429.91641235]
[164.34423828 444.71566772]
[166.78996277 459.51495361]
[169.23568726 474.31420898]
[171.68141174 489.11349487]
[186.34317017 493.35565186]
[197.70660400 503.54556274]
[203.51553345 517.66009521]
[202.61656189 532.89672852]
[195.18820190 546.23022461]
[182.70535278 555.01318359]
[167.64648438 557.50183105]
[153.00155640 553.20196533]
[141.67831421 542.96734619]
[135.92501831 528.83007812]
[136.88398743 513.59710693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[23 177]
[24 176]
[25 175]
[27 173]
[31 172]
[32 171]
[33 170]
[34 153]
[35 152]
[36 151]
[37 150]
[38 149]
[39 148]
[53 134]
[54 133]
[55 132]
[56 131]
[57 130]
[58 127]
[59 126]
[63 125]
[64 124]
[65 123]
[66 122]
[68 120]
[69 119]
[70 118]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
