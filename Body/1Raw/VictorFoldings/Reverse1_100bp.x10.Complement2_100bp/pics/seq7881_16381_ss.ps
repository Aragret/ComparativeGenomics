%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[115.04650116 491.05560303]
[123.83842468 478.82791138]
[135.05369568 468.77645874]
[148.16773987 461.37130737]
[143.76673889 447.03146362]
[139.36573792 432.69161987]
[128.23478699 422.79461670]
[131.58259583 407.33166504]
[127.18159485 392.99182129]
[113.94358063 386.26199341]
[109.27606964 371.78204346]
[116.42469025 357.94241333]
[105.29373169 348.04541016]
[108.64154053 332.58245850]
[104.24054718 318.24261475]
[99.83954620 303.90277100]
[95.43854523 289.56289673]
[92.82571411 304.33358765]
[86.20898438 317.79534912]
[76.11019135 328.88653564]
[63.32575607 336.73245239]
[48.86392212 340.71432495]
[33.86520386 340.51812744]
[19.51246834 336.15936279]
[6.93762636 327.98175049]
[-2.86761379 316.63021851]
[-9.12997150 303.00000000]
[-11.35557079 288.16601562]
[-9.36889076 273.29815674]
[-3.32661057 259.56896973]
[6.29475117 248.06117249]
[18.73641396 239.68232727]
[33.01717377 235.09321594]
[48.01079559 234.65577698]
[62.53481293 238.40449524]
[75.44380951 246.04373169]
[85.71971893 256.97100830]
[92.55327606 270.32788086]
[92.55327606 255.32786560]
[92.55327606 240.32786560]
[92.55327606 225.32786560]
[78.18741608 221.15663147]
[65.56626129 213.09822083]
[55.71727371 201.79852295]
[49.44508362 188.16766357]
[47.26576233 173.30676270]
[49.36439133 158.41891479]
[55.57935333 144.71189880]
[65.41475677 133.30006409]
[78.07999420 125.11384583]
[92.55327606 120.82386017]
[92.55327606 105.82386017]
[89.78022003 101.37143707]
[89.69917297 95.68225861]
[92.78325653 90.37892151]
[93.22985840 75.38556671]
[85.90687561 61.36114883]
[94.01968384 48.86988449]
[79.40106201 45.28173828]
[65.85327148 38.73497009]
[53.96743774 29.51793861]
[44.26160049 18.03544426]
[37.15815735 4.79096746]
[32.96545792 -9.63541794]
[31.86443520 -24.61244774]
[33.90078735 -39.48528290]
[38.98309708 -53.60415649]
[46.88692474 -66.35274506]
[57.26472092 -77.17507935]
[69.66110992 -85.59979248]
[83.53286743 -91.26065063]
[98.27272797 -93.91245270]
[98.71933746 -108.90579987]
[91.39634705 -122.93022156]
[99.50915527 -135.42149353]
[99.95576477 -150.41484070]
[100.40236664 -165.40818787]
[97.92662811 -170.00360107]
[97.50348663 -174.62683105]
[98.79980469 -178.49136353]
[101.21858978 -181.05686951]
[89.90995789 -171.20217896]
[74.91544342 -170.79637146]
[63.09034729 -180.02497864]
[59.84093857 -194.66879272]
[66.65280151 -208.03286743]
[80.41164398 -214.00732422]
[94.82711792 -209.86073303]
[103.30912018 -197.48704529]
[105.97491455 -212.24826050]
[108.64070892 -227.00947571]
[111.30650330 -241.77070618]
[113.97229767 -256.53192139]
[116.63809204 -271.29312134]
[119.30388641 -286.05435181]
[121.96968842 -300.81558228]
[124.63548279 -315.57678223]
[127.30127716 -330.33801270]
[113.44110107 -336.24081421]
[101.24222565 -345.08023071]
[91.31655884 -356.41287231]
[84.16195679 -369.67031860]
[80.13729095 -384.18753052]
[79.44444275 -399.23638916]
[82.11815643 -414.06198120]
[88.02433014 -427.92074585]
[96.86670685 -440.11746216]
[108.20175171 -450.04040527]
[121.46091461 -457.19177246]
[135.97911072 -461.21292114]
[151.02812195 -461.90213013]
[165.85310364 -459.22482300]
[179.71041870 -453.31530762]
[191.90499878 -444.46997070]
[201.82518005 -433.13250732]
[208.97335815 -419.87161255]
[212.99098206 -405.35244751]
[213.67654419 -390.30328369]
[210.99563599 -375.47894287]
[205.08274841 -361.62307739]
[196.23446655 -349.43063354]
[184.89460754 -339.51318359]
[171.63198853 -332.36822510]
[157.11183167 -328.35412598]
[142.06250000 -327.67221069]
[139.39669800 -312.91098022]
[136.73089600 -298.14978027]
[134.06510925 -283.38854980]
[131.39930725 -268.62734985]
[128.73352051 -253.86611938]
[126.06771851 -239.10490417]
[123.40192413 -224.34368896]
[120.73612976 -209.58247375]
[118.07033539 -194.82125854]
[116.17704010 -179.94122314]
[115.39572144 -164.96157837]
[114.94911194 -149.96823120]
[114.50251007 -134.97488403]
[121.85743713 -122.02288055]
[113.71268463 -108.45919800]
[113.26608276 -93.46584320]
[127.82197571 -89.94141388]
[141.33219910 -83.46493530]
[153.20515442 -74.31730652]
[162.92039490 -62.89646530]
[170.05140686 -49.70003510]
[174.28433228 -35.30368805]
[175.43182373 -20.33601379]
[173.44131470 -5.45107317]
[168.39736938 8.70018196]
[160.51818848 21.49837303]
[150.14611816 32.38280487]
[137.73274231 40.87604141]
[123.81930542 46.60482025]
[109.01303101 49.31649017]
[116.36796570 62.26848984]
[108.22321320 75.83217621]
[107.77660370 90.82552338]
[107.55327606 105.82386017]
[107.55327606 120.82386017]
[122.02656555 125.11384583]
[134.69180298 133.30006409]
[144.52720642 144.71189880]
[150.74217224 158.41891479]
[152.84078979 173.30676270]
[150.66146851 188.16766357]
[144.38928223 201.79852295]
[134.54029846 213.09822083]
[121.91914368 221.15663147]
[107.55327606 225.32786560]
[107.55327606 240.32786560]
[107.55327606 255.32786560]
[107.55327606 270.32788086]
[109.77839661 285.16192627]
[114.17938995 299.50177002]
[118.58039093 313.84161377]
[122.98139191 328.18145752]
[134.42713928 339.10415649]
[130.76454163 353.54141235]
[144.44607544 360.98812866]
[148.70503235 375.59344482]
[141.52143860 388.59082031]
[145.92243958 402.93066406]
[157.36819458 413.85336304]
[153.70558167 428.29061890]
[158.10658264 442.63046265]
[162.50758362 456.97033691]
[177.51791382 455.74389648]
[192.44088745 457.77334595]
[206.57855225 462.96377563]
[219.26965332 471.07241821]
[229.92059326 481.72000122]
[238.03323364 494.40856934]
[243.22810364 508.54458618]
[245.26225281 523.46691895]
[244.04052734 538.47766113]
[239.62008667 552.87463379]
[232.20765686 565.98455811]
[222.14993286 577.19421387]
[209.91735840 585.97930908]
[196.08206177 591.92901611]
[181.29112244 594.76489258]
[166.23637390 594.35449219]
[151.62193298 590.71685791]
[138.13134766 584.02221680]
[126.39559937 574.58367920]
[116.96359253 562.84265137]
[110.27646637 549.34838867]
[106.64701080 534.73187256]
[106.24496460 519.67694092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[8 183]
[9 182]
[12 179]
[14 177]
[15 176]
[16 175]
[17 174]
[38 173]
[39 172]
[40 171]
[41 170]
[51 160]
[52 159]
[55 158]
[56 157]
[58 155]
[72 141]
[73 140]
[75 138]
[76 137]
[77 136]
[81 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
