%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[45.19776917 765.51885986]
[36.28188705 753.41711426]
[29.36902046 740.06945801]
[24.62940788 725.80474854]
[22.17976570 710.97418213]
[22.08041763 695.94299316]
[24.33381271 681.08135986]
[28.88445663 666.75518799]
[35.62028503 653.31738281]
[44.37542725 641.09881592]
[54.93427277 630.40032959]
[67.03680420 621.48541260]
[80.38498688 614.57366943]
[94.65011597 609.83520508]
[92.20438385 595.03594971]
[89.75865936 580.23669434]
[87.31292725 565.43743896]
[84.02102661 561.97729492]
[82.86780548 556.41247559]
[85.02155304 550.16168213]
[83.01753998 535.29614258]
[81.01352692 520.43060303]
[79.00951385 505.56509399]
[71.85760498 518.75030518]
[59.12321091 526.67718506]
[44.13507462 527.27362061]
[30.81105614 520.38372803]
[22.63402367 507.80850220]
[21.74143600 492.83508301]
[28.36660957 479.37747192]
[40.77774048 470.95349121]
[55.73059082 469.76510620]
[69.31652069 476.12295532]
[77.98388672 488.36431885]
[78.20721436 473.36599731]
[78.43054199 458.36764526]
[78.65386963 443.36932373]
[78.87719727 428.37097168]
[79.10052490 413.37265015]
[66.88197327 401.81643677]
[66.80029297 384.66104126]
[79.39443970 372.51992798]
[79.39443970 357.51992798]
[79.39443970 342.51992798]
[79.39443970 327.51992798]
[77.50991058 325.44467163]
[76.33386993 322.49786377]
[76.20238495 318.94567871]
[77.34907532 315.17080688]
[79.86764526 311.63375854]
[80.76045990 296.66033936]
[81.65327454 281.68695068]
[82.54608917 266.71353149]
[83.43890381 251.74012756]
[84.33171844 236.76672363]
[77.36567688 223.60148621]
[85.91065979 210.28631592]
[78.94461823 197.12106323]
[87.48960114 183.80589294]
[88.38242340 168.83248901]
[89.27523804 153.85908508]
[90.16805267 138.88568115]
[91.06086731 123.91227722]
[91.95368195 108.93886566]
[92.62346649 93.95382690]
[93.07007599 78.96047974]
[93.51667786 63.96712875]
[93.96328735 48.97378159]
[94.40988922 33.98043060]
[94.85649872 18.98707962]
[94.85649872 3.98707986]
[94.40988922 -11.00627041]
[86.26513672 -24.56995583]
[93.62007141 -37.52195358]
[93.17346191 -52.51530457]
[85.51103210 -58.01023102]
[81.29850006 -66.29191589]
[81.36791992 -75.44557953]
[85.57725525 -83.41905212]
[92.87045288 -88.48286438]
[93.09378052 -103.48120117]
[93.31710815 -118.47953796]
[85.78613281 -132.39338684]
[93.71206665 -145.00404358]
[93.93539429 -160.00238037]
[94.15872192 -175.00071716]
[82.66908264 -165.35768127]
[67.71465302 -166.52598572]
[57.86199951 -177.83639526]
[58.75517654 -192.80976868]
[69.88252258 -202.86869812]
[84.86979675 -202.25096130]
[95.13127136 -191.31132507]
[96.69178772 -206.22991943]
[98.25231171 -221.14852905]
[99.81283569 -236.06713867]
[93.55322266 -250.59736633]
[102.57261658 -262.45062256]
[104.13314056 -277.36923218]
[105.69366455 -292.28784180]
[91.95243073 -298.64843750]
[81.02275085 -309.12799072]
[74.09019470 -322.58972168]
[71.90674591 -337.57342529]
[74.70925140 -352.45376587]
[82.19371796 -365.61666870]
[93.54829407 -375.63424683]
[107.54130554 -381.41995239]
[122.65490723 -382.34616089]
[137.24967957 -378.31237793]
[149.74249268 -369.75619507]
[158.77822876 -357.60571289]
[163.37675476 -343.17892456]
[163.03924561 -328.04074097]
[157.80232239 -313.83322144]
[148.23405457 -302.09753418]
[135.37231445 -294.10662842]
[120.61226654 -290.72732544]
[119.05174255 -275.80871582]
[117.49121857 -260.89010620]
[123.86245728 -247.42695618]
[114.73144531 -234.50660706]
[113.17092133 -219.58801270]
[111.61039734 -204.66940308]
[110.04987335 -189.75079346]
[109.15705872 -174.77738953]
[108.93373108 -159.77905273]
[108.71040344 -144.78071594]
[116.25735474 -131.93965149]
[108.31544495 -118.25621033]
[108.09211731 -103.25787354]
[107.86878967 -88.25953674]
[119.45301056 -71.17823792]
[108.16681671 -52.96191025]
[108.61341858 -37.96855927]
[116.72622681 -25.47729874]
[109.40324402 -11.45287609]
[109.84984589 3.54047394]
[111.79533386 5.55870056]
[113.05858612 8.46916294]
[113.29577637 12.01587200]
[112.26198578 15.82320690]
[109.84984589 19.43368530]
[109.40324402 34.42703629]
[108.95663452 49.42038727]
[108.51003265 64.41373444]
[108.06342316 79.40708923]
[107.61682129 94.40043640]
[110.25608063 98.93345642]
[110.16770172 104.62252045]
[106.92708588 109.83168793]
[106.03427124 124.80509186]
[105.14145660 139.77850342]
[104.24864197 154.75190735]
[103.35582733 169.72531128]
[102.46301270 184.69871521]
[109.36518860 198.93495178]
[100.88407135 211.17912292]
[107.78624725 225.41535950]
[99.30513000 237.65953064]
[98.41230774 252.63294983]
[97.51949310 267.60635376]
[96.62667847 282.57974243]
[95.73386383 297.55316162]
[94.84104919 312.52658081]
[94.39443970 327.51992798]
[94.39443970 342.51992798]
[94.39443970 357.51992798]
[94.39443970 372.51992798]
[104.95151520 380.88430786]
[108.70878601 393.61587524]
[104.50946808 406.00329590]
[94.09886932 413.59597778]
[93.87554169 428.59429932]
[93.65221405 443.59265137]
[93.42888641 458.59097290]
[93.20555115 473.58932495]
[92.98222351 488.58764648]
[93.87504578 503.56106567]
[95.87905884 518.42657471]
[97.88307190 533.29211426]
[99.88708496 548.15765381]
[102.11219788 562.99169922]
[104.55792999 577.79095459]
[107.00365448 592.59020996]
[109.44938660 607.38952637]
[124.48054504 607.28643799]
[139.34275818 609.53613281]
[153.67001343 614.08325195]
[167.10951233 620.81573486]
[179.33026123 629.56787109]
[190.03134155 640.12408447]
[198.94923401 652.22442627]
[205.86430359 665.57086182]
[210.60626221 679.83483887]
[213.05834961 694.66497803]
[213.16018677 709.69616699]
[210.90924072 724.55816650]
[206.36096191 738.88507080]
[199.62734985 752.32397461]
[190.87422180 764.54400635]
[180.31713867 775.24426270]
[168.21607971 784.16113281]
[154.86903381 791.07507324]
[140.60469055 795.81585693]
[125.77433014 798.26672363]
[110.74314880 798.36730957]
[95.88131714 796.11517334]
[81.55480194 791.56573486]
[68.11642456 784.83099365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 186]
[15 185]
[16 184]
[17 183]
[20 182]
[21 181]
[22 180]
[23 179]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[42 169]
[43 168]
[44 167]
[45 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 160]
[57 158]
[59 156]
[60 155]
[61 154]
[62 153]
[63 152]
[64 151]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 138]
[72 137]
[74 135]
[75 134]
[80 132]
[81 131]
[82 130]
[84 128]
[85 127]
[86 126]
[93 125]
[94 124]
[95 123]
[96 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
