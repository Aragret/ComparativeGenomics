%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[116.78591919 553.33117676]
[105.02270508 562.72906494]
[91.56243134 569.47552490]
[76.99353027 573.27563477]
[61.95288849 573.96325684]
[47.09802246 571.50830078]
[33.07831955 566.01818848]
[20.50666237 557.73284912]
[9.93262768 547.01446533]
[1.81846976 534.33166504]
[-3.48109674 520.23876953]
[-5.73439741 505.35202026]
[-4.84292746 490.32208252]
[-0.84565824 475.80603027]
[6.08266687 462.43844604]
[15.63917160 450.80374146]
[27.40608597 441.41046143]
[40.86901093 434.66928101]
[55.43940735 430.87490845]
[70.48031616 430.19320679]
[72.92604065 415.39395142]
[75.37177277 400.59466553]
[69.81317139 386.77615356]
[79.69702911 374.42221069]
[74.13843536 360.60369873]
[84.02229309 348.24975586]
[86.46801758 333.45050049]
[88.91374207 318.65121460]
[91.35947418 303.85195923]
[92.80889130 288.92214966]
[93.25549316 273.92880249]
[93.70210266 258.93542480]
[84.56341553 243.95373535]
[94.37123108 228.36886597]
[94.59455872 213.37052917]
[94.48288727 198.37094116]
[94.03628540 183.37759399]
[83.51379395 175.94075012]
[79.13050842 163.61723328]
[82.69780731 150.83111572]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[84.37723541 74.22607422]
[91.92418671 61.38501358]
[83.98227692 47.70156860]
[91.52922821 34.86050797]
[91.30590057 19.86217117]
[91.08257294 4.86383438]
[90.85924530 -10.13450336]
[90.63591766 -25.13284111]
[90.41259003 -40.13117599]
[90.18926239 -55.12951660]
[89.96593475 -70.12785339]
[87.63044739 -84.94492340]
[76.18470001 -95.86762238]
[79.84729767 -110.30488586]
[75.44630432 -124.64473724]
[70.83229065 -138.91746521]
[66.00629425 -153.11991882]
[52.10910797 -160.15596008]
[47.41717911 -174.62802124]
[54.21061325 -187.83351135]
[49.38461304 -202.03596497]
[44.55861664 -216.23841858]
[39.73262024 -230.44087219]
[34.90662003 -244.64332581]
[30.08062363 -258.84579468]
[25.25462532 -273.04824829]
[20.42862892 -287.25070190]
[18.06393242 -272.43826294]
[11.29371262 -259.05303955]
[0.76326495 -248.37083435]
[-12.52371597 -241.40979004]
[-27.30079842 -238.83338928]
[-42.15952682 -240.88720703]
[-55.68366241 -247.37548828]
[-66.58416748 -257.67980957]
[-73.82208252 -270.81802368]
[-76.70752716 -285.53787231]
[-74.96547699 -300.43637085]
[-68.76198578 -314.09347534]
[-58.68832397 -325.20748901]
[-45.70464706 -332.71911621]
[-31.04847717 -335.91232300]
[-16.11674881 -334.48281860]
[-2.33265805 -328.56683350]
[8.98998356 -318.72827148]
[16.77240562 -305.90377808]
[15.87959003 -320.87716675]
[14.98677444 -335.85058594]
[14.09395790 -350.82397461]
[-0.55091244 -354.61648560]
[-13.30597973 -362.75057983]
[-22.92163086 -374.42938232]
[-28.45582581 -388.50869751]
[-29.36637497 -403.60925293]
[-25.56407738 -418.25155640]
[-17.42144012 -431.00119019]
[-5.73619795 -440.60900879]
[8.34684944 -446.13375854]
[23.44798851 -447.03421021]
[38.08776474 -443.22207642]
[50.83192062 -435.07092285]
[60.43191147 -423.37924194]
[65.94722748 -409.29248047]
[66.83754730 -394.19073486]
[63.01562881 -379.55352783]
[54.85591125 -366.81484985]
[43.15780258 -357.22268677]
[29.06736374 -351.71679688]
[29.96018028 -336.74340820]
[30.85299492 -321.76998901]
[31.74581146 -306.79660034]
[34.63108444 -292.07669067]
[39.45708084 -277.87423706]
[44.28308105 -263.67178345]
[49.10907745 -249.46932983]
[53.93507385 -235.26687622]
[58.76107407 -221.06442261]
[63.58707047 -206.86195374]
[68.41307068 -192.65950012]
[81.84558105 -186.32679749]
[86.94214630 -171.99223328]
[80.20875549 -157.94592285]
[85.03475189 -143.74346924]
[88.84676361 -140.86639404]
[90.89189148 -135.56408691]
[89.78614807 -129.04573059]
[94.18714905 -114.70588684]
[105.31810760 -104.80886841]
[101.97029877 -89.34591675]
[104.66939545 -104.10108185]
[111.54443359 -117.43276978]
[122.00064850 -128.18765259]
[135.13348389 -135.43533325]
[149.80679321 -138.54879761]
[164.75122070 -137.25872803]
[178.67390442 -131.67671204]
[190.37039185 -122.28563690]
[198.82882690 -109.89794922]
[203.31745911 -95.58529663]
[203.44799805 -80.58586121]
[199.20913696 -66.19725037]
[190.96757507 -53.66423035]
[179.43629456 -44.07101822]
[165.61288452 -38.24753189]
[150.69317627 -36.69755554]
[135.96789551 -39.55518341]
[122.71091461 -46.57320023]
[112.06909943 -57.14447403]
[104.96427155 -70.35118103]
[105.18759918 -55.35284424]
[105.41092682 -40.35450363]
[105.63425446 -25.35616875]
[105.85758209 -10.35783100]
[106.08090973 4.64050674]
[106.30423737 19.63884354]
[106.52756500 34.63718033]
[114.45349884 47.24784470]
[106.92252350 61.16168594]
[114.84845734 73.77234650]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[120.90103149 154.03942871]
[121.07478333 171.19415283]
[109.02963257 182.93098450]
[109.47624207 197.92433167]
[112.22111511 202.36424255]
[112.91868591 206.95408630]
[111.85468292 210.88891602]
[109.59289551 213.59385681]
[109.36956787 228.59219360]
[117.77668762 238.37396240]
[117.28190613 250.86151123]
[108.69544983 259.38204956]
[108.24884796 274.37539673]
[107.80223846 289.36874390]
[117.46449280 277.89526367]
[131.76414490 273.36535645]
[146.27027893 277.18267822]
[156.48803711 288.16436768]
[159.25131226 302.90765381]
[153.70387268 316.84414673]
[141.56466675 325.65548706]
[126.59516144 326.61138916]
[113.43380737 319.41564941]
[106.15874481 306.29766846]
[103.71301270 321.09695435]
[101.26728821 335.89620972]
[98.82156372 350.69549561]
[104.20522308 365.57254028]
[94.49629974 376.86795044]
[99.87996674 391.74499512]
[90.17104340 403.04040527]
[87.72531128 417.83966064]
[85.27958679 432.63894653]
[99.30144501 438.12356567]
[111.87636566 446.40396118]
[122.45461273 457.11819458]
[130.57376099 469.79782104]
[135.87887573 483.88858032]
[138.13803101 498.77447510]
[137.25247192 513.80474854]
[133.26091003 528.32238770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 202]
[21 201]
[22 200]
[24 198]
[26 196]
[27 195]
[28 194]
[29 193]
[30 183]
[31 182]
[32 181]
[34 178]
[35 177]
[36 173]
[37 172]
[41 169]
[42 168]
[43 167]
[45 165]
[47 163]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 134]
[59 132]
[60 131]
[61 128]
[62 127]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
