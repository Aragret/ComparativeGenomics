%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[63.49883652 672.17443848]
[48.49255753 672.68310547]
[33.51924515 671.56634521]
[18.75445366 668.83721924]
[4.37129498 664.52770996]
[-9.46159744 658.68835449]
[-22.58204079 651.38757324]
[-34.83620071 642.71099854]
[-46.08041000 632.76037598]
[-56.18282700 621.65234375]
[-65.02501678 609.51715088]
[-72.50330353 596.49707031]
[-78.53000641 582.74475098]
[-83.03446198 568.42144775]
[-85.96386719 553.69506836]
[-87.28387451 538.73834229]
[-86.97900391 523.72650146]
[-85.05283356 508.83566284]
[-81.52794647 494.24038696]
[-76.44566345 480.11178589]
[-69.86557770 466.61547852]
[-61.86483383 453.90975952]
[-52.53723907 442.14358521]
[-41.99215698 431.45486450]
[-30.35321808 421.96896362]
[-17.75688553 413.79708862]
[-4.35084629 407.03503418]
[9.70772266 401.76208496]
[24.25399208 398.04010010]
[39.11741257 395.91265869]
[54.12372208 395.40475464]
[55.23936844 380.44631958]
[56.35501862 365.48785400]
[57.47066498 350.52938843]
[58.58631516 335.57095337]
[59.70196533 320.61248779]
[60.81761169 305.65405273]
[61.93326187 290.69558716]
[63.04891205 275.73712158]
[63.94172668 260.76373291]
[64.61151123 245.77868652]
[65.28129578 230.79365540]
[56.86611176 243.21075439]
[44.17117691 251.20066833]
[29.33580589 253.41693115]
[14.86002350 249.48605347]
[3.18325162 240.07048035]
[-3.72676802 226.75689697]
[-4.70557594 211.78886414]
[0.41177401 197.68876648]
[10.76291847 186.83271790]
[24.60350800 181.05015564]
[39.60116196 181.31553650]
[53.22850800 187.58413696]
[63.18910217 198.79960632]
[67.80458069 213.07356262]
[71.34425354 198.49719238]
[74.88392639 183.92080688]
[78.42359924 169.34443665]
[81.63687134 154.69265747]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[100.75795746 57.14196777]
[99.06462860 52.20438766]
[99.40095520 47.57403183]
[101.31003571 43.97257996]
[104.11475372 41.83578110]
[107.65442657 27.25940704]
[111.19409943 12.68303108]
[114.73376465 -1.89334464]
[118.27343750 -16.46972084]
[116.80226898 -21.47798729]
[117.34501648 -26.08870506]
[119.41300964 -29.60132027]
[122.31034088 -31.61075211]
[126.49735260 -46.01453400]
[130.68435669 -60.41831589]
[134.87136841 -74.82209778]
[139.05838013 -89.22588348]
[143.24539185 -103.62966156]
[147.43240356 -118.03344727]
[133.79939270 -111.77716827]
[119.68818665 -116.86380768]
[113.18232727 -130.37948608]
[118.00866699 -144.58183289]
[131.40245056 -151.33508301]
[145.69113159 -146.77067566]
[152.68939209 -133.50424194]
[158.14474487 -147.47705078]
[163.60009766 -161.44984436]
[169.05546570 -175.42263794]
[174.51081848 -189.39543152]
[179.96617126 -203.36824036]
[166.91198730 -210.81175232]
[155.08074951 -220.07673645]
[144.72465515 -230.96568298]
[136.06443787 -243.24650574]
[129.28469849 -256.65744019]
[124.52994537 -270.91259766]
[121.90151978 -285.70819092]
[121.45545197 -300.72879028]
[123.20125580 -315.65429688]
[127.10169983 -330.16650391]
[133.07366943 -343.95611572]
[140.98985291 -356.72921753]
[150.68153381 -368.21350098]
[161.94210815 -378.16424561]
[174.53158569 -386.36929321]
[188.18161011 -392.65380859]
[202.60121155 -396.88378906]
[217.48306274 -398.96908569]
[232.50993347 -398.86523438]
[247.36155701 -396.57449341]
[261.72131348 -392.14566040]
[275.28320312 -385.67312622]
[287.75808716 -377.29489136]
[298.88009644 -367.18948364]
[308.41213989 -355.57235718]
[316.15106201 -342.69107056]
[321.93188477 -328.82025146]
[325.63140869 -314.25552368]
[327.17080688 -299.30734253]
[326.51721191 -284.29434204]
[323.68457031 -269.53646851]
[318.73327637 -255.34837341]
[311.76885986 -242.03240967]
[302.93975830 -229.87243652]
[292.43417358 -219.12763977]
[280.47604370 -210.02705383]
[267.32022095 -202.76463318]
[253.24717712 -197.49519348]
[238.55683899 -194.33106995]
[223.56233215 -193.33967590]
[208.58329773 -194.54216003]
[193.93896484 -197.91287231]
[188.48361206 -183.94007874]
[183.02825928 -169.96728516]
[177.57290649 -155.99449158]
[172.11753845 -142.02168274]
[166.66218567 -128.04888916]
[161.83618164 -113.84643555]
[157.64918518 -99.44264984]
[153.46217346 -85.03887177]
[149.27516174 -70.63508606]
[145.08815002 -56.23130417]
[140.90113831 -41.82752228]
[136.71412659 -27.42374039]
[132.84982300 -12.93004799]
[129.31015015 1.64632785]
[125.77046967 16.22270393]
[122.23079681 30.79907799]
[118.69112396 45.37545395]
[115.47785187 60.02724075]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[96.35676575 157.57792664]
[98.05010223 162.51550293]
[97.71377563 167.14585876]
[95.80469513 170.74731445]
[92.99997711 172.88410950]
[89.46030426 187.46047974]
[85.92063141 202.03686523]
[82.38095856 216.61323547]
[80.26633453 231.46343994]
[79.59654999 246.44847107]
[78.92676544 261.43350220]
[81.62960052 267.46725464]
[80.97743988 273.11276245]
[78.00736237 276.85278320]
[76.89171600 291.81124878]
[75.77606964 306.76968384]
[74.66041565 321.72814941]
[73.54476929 336.68658447]
[72.42912292 351.64505005]
[71.31346893 366.60351562]
[70.19782257 381.56195068]
[69.08217621 396.52041626]
[83.84711456 399.24874878]
[98.23049927 403.55749512]
[112.06371307 409.39611816]
[125.18454742 416.69619751]
[137.43917847 425.37210083]
[148.68391418 435.32211304]
[158.78692627 446.42959595]
[167.62977600 458.56433105]
[175.10876465 471.58401489]
[181.13619995 485.33599854]
[185.64143372 499.65905762]
[188.57162476 514.38525391]
[189.89244080 529.34197998]
[189.58837891 544.35375977]
[187.66300964 559.24475098]
[184.13890076 573.84020996]
[179.05738831 587.96905518]
[172.47802734 601.46569824]
[164.47796631 614.17187500]
[155.15100098 625.93859863]
[144.60649109 636.62786865]
[132.96806335 646.11437988]
[120.37217712 654.28692627]
[106.96649933 661.04968262]
[92.90821075 666.32342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 185]
[32 184]
[33 183]
[34 182]
[35 181]
[36 180]
[37 179]
[38 178]
[39 177]
[40 174]
[41 173]
[42 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 164]
[61 163]
[62 162]
[63 161]
[65 159]
[66 158]
[67 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[79 151]
[80 150]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
