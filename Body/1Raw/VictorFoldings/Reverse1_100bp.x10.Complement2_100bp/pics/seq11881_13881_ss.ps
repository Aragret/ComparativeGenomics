%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[32.77856445 612.00891113]
[22.04719734 622.51580811]
[10.12757969 631.65252686]
[-2.80646563 639.28588867]
[-16.56632233 645.30450439]
[-30.95132828 649.62060547]
[-45.75171280 652.17132568]
[-60.75163651 652.91937256]
[-75.73236084 651.85388184]
[-90.47542572 648.99041748]
[-104.76582336 644.37066650]
[-118.39516449 638.06207275]
[-131.16470337 630.15661621]
[-142.88819885 620.76959229]
[-153.39469910 610.03778076]
[-162.53100586 598.11785889]
[-170.16384888 585.18353271]
[-176.18196106 571.42346191]
[-180.49754333 557.03826904]
[-183.04768372 542.23779297]
[-183.79518127 527.23785400]
[-182.72914124 512.25714111]
[-179.86511230 497.51419067]
[-175.24485779 483.22396851]
[-168.93576050 469.59484863]
[-161.02980042 456.82562256]
[-151.64230347 445.10247803]
[-140.91015625 434.59637451]
[-128.98985291 425.46051025]
[-116.05523682 417.82815552]
[-102.29492950 411.81057739]
[-87.90959930 407.49551392]
[-73.10903168 404.94592285]
[-58.10904694 404.19900513]
[-43.12840271 405.26559448]
[-28.38555527 408.13015747]
[-23.77154541 393.85745239]
[-19.15753555 379.58471680]
[-14.54352665 365.31198120]
[-9.92951775 351.03924561]
[-13.37676239 336.54904175]
[-1.76965952 325.79797363]
[2.84434986 311.52523804]
[7.45835924 297.25250244]
[11.75248241 282.88027954]
[15.72457886 268.41577148]
[19.69667435 253.95123291]
[8.51957893 263.95486450]
[-5.86678028 268.20135498]
[-20.68462181 265.87075806]
[-33.07285309 257.41311646]
[-40.63949585 244.46145630]
[-41.92355728 229.51651001]
[-36.67710495 215.46394348]
[-25.91313934 205.01707458]
[-11.71001911 200.19303894]
[3.18985653 201.92326355]
[15.90955544 209.87368774]
[23.99310303 222.50920105]
[25.87957191 237.39135742]
[32.35906601 223.86302185]
[38.83856201 210.33467102]
[45.31805801 196.80632019]
[51.79755402 183.27798462]
[58.27705002 169.74963379]
[64.75654602 156.22128296]
[63.27610779 141.40043640]
[76.21550751 132.29646301]
[82.69500732 118.76811218]
[89.17449951 105.23976898]
[95.45186615 91.61645508]
[101.52569580 77.90118408]
[107.59953308 64.18592072]
[113.05488586 50.21312332]
[117.88088989 36.01066589]
[122.70688629 21.80821037]
[127.53288269 7.60575581]
[132.35887146 -6.59670019]
[137.18487549 -20.79915619]
[134.29893494 -36.35492325]
[145.71963501 -45.91614532]
[150.54563904 -60.11860275]
[155.37162781 -74.32106018]
[160.19763184 -88.52351379]
[165.02362061 -102.72596741]
[164.82160950 -111.85816193]
[170.02864075 -117.10301971]
[169.09478760 -121.34352875]
[169.51647949 -125.26611328]
[171.02732849 -128.48368835]
[173.26258850 -130.73539734]
[175.80885315 -131.90786743]
[181.67781067 -145.71203613]
[187.54678345 -159.51622009]
[185.82582092 -175.24354553]
[197.92601013 -183.92884827]
[203.79496765 -197.73303223]
[209.66394043 -211.53720093]
[215.53289795 -225.34138489]
[202.75975037 -233.26271057]
[191.34556580 -243.04109192]
[181.55790710 -254.44731140]
[173.62619019 -267.21401978]
[167.73635864 -281.04190063]
[164.02648926 -295.60681152]
[162.58352661 -310.56738281]
[163.44129944 -325.57287598]
[166.57972717 -340.27154541]
[171.92520142 -354.31881714]
[179.35244751 -367.38543701]
[188.68733215 -379.16510010]
[199.71105957 -389.38165283]
[212.16520691 -397.79559326]
[225.75782776 -404.20974731]
[240.17028809 -408.47369385]
[255.06474304 -410.48751831]
[270.09207153 -410.20397949]
[284.89996338 -407.62976074]
[299.14132690 -402.82519531]
[312.48233032 -395.90289307]
[324.61022949 -387.02514648]
[335.24072266 -376.40002441]
[344.12463379 -364.27664185]
[351.05368042 -350.93914795]
[355.86547852 -336.70022583]
[358.44723511 -321.89364624]
[358.73837280 -306.86648560]
[356.73211670 -291.97100830]
[352.47546387 -277.55636597]
[346.06823730 -263.96051025]
[337.66058350 -251.50209045]
[327.44964600 -240.47317505]
[315.67471313 -231.13230896]
[302.61187744 -223.69844055]
[288.56729126 -218.34584045]
[273.87020874 -215.19996643]
[258.86517334 -214.33456421]
[243.90388489 -215.76994324]
[229.33706665 -219.47242737]
[223.46810913 -205.66824341]
[217.59915161 -191.86407471]
[211.73019409 -178.05989075]
[213.87094116 -163.31993103]
[201.35095215 -153.64726257]
[195.48199463 -139.84307861]
[189.61303711 -126.03890228]
[184.15766907 -112.06610870]
[179.22608948 -97.89997101]
[174.40008545 -83.69751740]
[169.57408142 -69.49505615]
[164.74809265 -55.29260254]
[159.92208862 -41.09014893]
[163.15321350 -26.55023384]
[151.38732910 -15.97315788]
[146.56134033 -1.77070236]
[141.73533630 12.43175316]
[136.90933228 26.63420868]
[132.08334351 40.83666611]
[127.25734711 55.03911972]
[141.15611267 49.39783096]
[155.02612305 55.10949326]
[160.92198181 68.90219879]
[155.46629333 82.87486267]
[141.78431702 89.02331543]
[127.71369934 83.82543182]
[121.31479645 70.25975800]
[115.24096680 83.97502136]
[109.16712952 97.69028473]
[109.89978790 102.88423920]
[107.67021942 108.11896515]
[102.70285034 111.71926880]
[96.22335052 125.24761200]
[89.74385834 138.77595520]
[90.76083374 154.56443787]
[78.28488922 162.70079041]
[71.80539703 176.22912598]
[65.32589722 189.75747681]
[58.84640503 203.28582764]
[52.36690903 216.81416321]
[45.88741302 230.34251404]
[39.40791702 243.87086487]
[34.16119766 257.92333984]
[30.18910217 272.38784790]
[26.21700668 286.85238647]
[27.53841019 291.90222168]
[26.85862350 296.49475098]
[24.68696594 299.94421387]
[21.73109245 301.86651611]
[17.11708260 316.13925171]
[12.50307369 330.41195679]
[15.62029362 345.92303467]
[4.34321547 355.65325928]
[-0.27079365 369.92599487]
[-4.88480282 384.19869995]
[-9.49881172 398.47143555]
[-14.11282158 412.74417114]
[-0.48300642 419.05175781]
[12.28711510 426.95626831]
[24.01131630 436.34246826]
[34.51862717 447.07342529]
[43.65581512 458.99270630]
[51.28963470 471.92645264]
[57.30876541 485.68609619]
[61.62542725 500.07095337]
[64.17667389 514.87121582]
[64.92529297 529.87115479]
[63.86037827 544.85186768]
[60.99745178 559.59503174]
[56.37826538 573.88562012]
[50.07017899 587.51519775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[42 190]
[43 189]
[44 188]
[45 184]
[46 183]
[47 182]
[60 181]
[61 180]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[68 173]
[69 172]
[70 171]
[71 168]
[72 167]
[73 166]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[79 154]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[87 147]
[92 146]
[93 145]
[94 144]
[96 142]
[97 141]
[98 140]
[99 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
