%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[78.80459595 659.76678467]
[66.49879456 668.86767578]
[51.37139130 671.19580078]
[36.89856339 666.21630859]
[26.40605545 655.07330322]
[22.30496979 640.32745361]
[25.53770638 625.36724854]
[35.36140442 613.63043213]
[49.51865387 607.81396484]
[50.85688782 592.87377930]
[52.19512177 577.93359375]
[53.53335571 562.99340820]
[53.86833191 547.99719238]
[53.19854736 533.01214600]
[52.52876282 518.02709961]
[51.85897827 503.04205322]
[51.18919373 488.05700684]
[50.51940536 473.07199097]
[49.84962082 458.08694458]
[49.17983627 443.10189819]
[48.51005173 428.11685181]
[47.84026718 413.13183594]
[35.33036804 405.09188843]
[29.88913345 391.06130981]
[33.79866791 376.34503174]
[45.76224518 366.64044189]
[39.45415878 380.24957275]
[29.45965576 391.43481445]
[16.64336586 399.22857666]
[2.11402106 402.95660400]
[-12.87144184 402.29638672]
[-27.01663208 397.30502319]
[-39.09784698 388.41433716]
[-48.06994247 376.39346313]
[-53.15674210 362.28231812]
[-53.91819000 347.30166626]
[-50.28840637 332.74746704]
[-42.58140945 319.87881470]
[-31.46392822 309.80895996]
[-17.89773941 303.40908813]
[-3.05645037 301.23281860]
[11.77601624 303.46841431]
[25.31650543 309.92251587]
[36.39362717 320.03671265]
[44.04910278 332.93609619]
[47.62032700 347.50119019]
[51.15999985 332.92480469]
[46.64457321 318.73114014]
[57.41989899 307.14654541]
[60.95957184 292.57015991]
[64.49924469 277.99380493]
[68.03891754 263.41741943]
[71.57859039 248.84104919]
[74.35419464 234.10008240]
[76.35821533 219.23455811]
[78.36222839 204.36901855]
[72.39466095 190.72213745]
[81.90631866 178.07939148]
[83.91033173 163.21386719]
[85.91434479 148.34832764]
[87.91835785 133.48280334]
[89.92237091 118.61727905]
[79.61900330 105.72509003]
[81.70207977 89.35351562]
[94.90560913 79.45227814]
[96.68807983 64.55856323]
[98.24860382 49.63995743]
[99.58683777 34.69977188]
[100.92507172 19.75958633]
[102.26330566 4.81940126]
[103.60153961 -10.12078381]
[104.93977356 -25.06096840]
[106.27800751 -40.00115204]
[99.80274963 -54.43658447]
[108.64466858 -66.42281342]
[109.98290253 -81.36299896]
[107.63159180 -90.18961334]
[111.45390320 -96.51509857]
[113.01442719 -111.43370056]
[110.79478455 -120.29434967]
[114.71085358 -126.56221771]
[116.49331665 -141.45593262]
[110.45072937 -156.07775879]
[119.64559937 -167.79542542]
[121.42807007 -182.68913269]
[121.87467194 -197.68249512]
[120.98185730 -212.65589905]
[120.08904266 -227.62930298]
[119.19622803 -242.60270691]
[104.30785370 -244.84548950]
[90.21127319 -250.13510132]
[77.52272034 -258.24029541]
[66.79688263 -268.80676270]
[58.50265121 -281.37258911]
[53.00261688 -295.38839722]
[50.53721237 -310.24151611]
[51.21421814 -325.28265381]
[55.00403595 -339.85421753]
[61.74098969 -353.31927490]
[71.13057709 -365.08911133]
[82.76231384 -374.64926147]
[96.12772369 -381.58175659]
[110.64251709 -385.58355713]
[125.67217255 -386.47973633]
[140.55966187 -384.23110962]
[154.65415955 -378.93594360]
[167.33952332 -370.82574463]
[178.06120300 -360.25506592]
[186.35049438 -347.68600464]
[191.84500122 -333.66799927]
[194.30456543 -318.81390381]
[193.62164307 -303.77307129]
[189.82609558 -289.20297241]
[183.08384705 -275.74060059]
[173.68963623 -263.97442627]
[162.05412292 -254.41886902]
[148.68600464 -247.49162292]
[134.16963196 -243.49551392]
[135.06245422 -228.52210999]
[135.95526123 -213.54870605]
[136.84808350 -198.57530212]
[144.21240234 -211.64308167]
[156.46760559 -220.29235840]
[171.24740601 -222.85308838]
[185.69805908 -218.83084106]
[197.02937317 -209.00224304]
[203.05345154 -195.26504517]
[202.60711670 -180.27168274]
[195.77658081 -166.91714478]
[183.88069153 -157.77998352]
[169.21635437 -154.62443542]
[154.61505127 -158.05978394]
[142.89602661 -167.42272949]
[136.32179260 -180.90667725]
[134.53932190 -166.01295471]
[140.70939636 -152.45643616]
[131.38703918 -139.67347717]
[129.60456848 -124.77975464]
[127.93302917 -109.87317657]
[126.37250519 -94.95457458]
[124.92308807 -80.02476501]
[123.58485413 -65.08457947]
[130.15582275 -51.71777344]
[121.21819305 -38.66291809]
[119.87995911 -23.72273445]
[118.54172516 -8.78254986]
[117.20349121 6.15763569]
[115.86525726 21.09782028]
[114.52701569 36.03800583]
[113.18878174 50.97819138]
[115.50931549 55.15242004]
[115.23225403 60.82870865]
[111.58179474 66.34102631]
[109.79933167 81.23474121]
[118.76291656 90.19619751]
[121.00051880 102.67204285]
[115.71001434 114.19004059]
[104.78790283 120.62129211]
[102.78388214 135.48681641]
[100.77986908 150.35234070]
[98.77585602 165.21788025]
[96.77184296 180.08340454]
[102.59606934 194.79357910]
[93.22775269 206.37303162]
[91.22373962 221.23857117]
[89.21972656 236.10409546]
[101.09487152 226.93998718]
[116.08695221 227.42738342]
[127.34178925 237.34346008]
[129.71382141 252.15472412]
[122.11859131 265.08966064]
[108.02853394 270.23458862]
[93.88542938 265.23730469]
[86.15496063 252.38070679]
[82.61528778 266.95709229]
[79.07561493 281.53347778]
[75.53594208 296.10983276]
[71.99626923 310.68621826]
[76.25852203 325.92248535]
[65.73637390 336.46447754]
[62.19670105 351.04086304]
[60.74728394 365.97067261]
[73.52895355 374.56921387]
[78.73582458 388.87802124]
[74.56803131 403.33807373]
[62.82530594 412.46203613]
[63.49509048 427.44708252]
[64.16487885 442.43209839]
[64.83466339 457.41714478]
[65.50444794 472.40219116]
[66.17423248 487.38723755]
[66.84401703 502.37225342]
[67.51380157 517.35729980]
[68.18358612 532.34234619]
[68.85337067 547.32739258]
[77.63550568 535.16705322]
[91.55863190 529.58612061]
[106.30850983 532.31396484]
[117.31473541 542.50524902]
[121.16690826 557.00219727]
[116.67139435 571.31268311]
[105.22116852 581.00250244]
[90.36421967 583.06909180]
[76.70412445 576.87219238]
[68.47354126 564.33166504]
[67.13530731 579.27185059]
[65.79707336 594.21203613]
[64.45883942 609.15222168]
[77.35702515 617.39208984]
[84.93847656 630.68792725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 208]
[10 207]
[11 206]
[12 205]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[26 182]
[46 181]
[47 180]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 166]
[55 165]
[56 164]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[65 154]
[66 153]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[75 142]
[76 141]
[78 140]
[79 139]
[81 138]
[82 137]
[84 135]
[85 134]
[86 121]
[87 120]
[88 119]
[89 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
