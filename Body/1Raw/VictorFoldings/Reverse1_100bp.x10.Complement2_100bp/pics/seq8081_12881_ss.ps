%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[37.11026001 359.68408203]
[42.74319458 373.63961792]
[45.54500961 388.42596436]
[45.40800858 403.47479248]
[42.33746338 418.20767212]
[36.45139313 432.05831909]
[27.97604179 444.49435425]
[17.23718262 455.03775024]
[4.64758635 463.28323364]
[-9.30883598 468.91390991]
[-24.09563637 471.71334839]
[-39.14445114 471.57391357]
[-53.87683868 468.50097656]
[-67.72653198 462.61267090]
[-80.16118622 454.13528442]
[-90.70283508 443.39471436]
[-98.94630432 430.80380249]
[-104.57472229 416.84646606]
[-107.37174988 402.05920410]
[-107.22988129 387.01040649]
[-104.15456390 372.27853394]
[-98.26400757 358.42977905]
[-89.78462982 345.99652100]
[-79.04235840 335.45660400]
[-66.45009613 327.21517944]
[-52.49185181 321.58901978]
[-37.70414734 318.79437256]
[-22.65537834 318.93869019]
[-7.92398310 322.01638794]
[-2.05502224 308.21221924]
[-5.11918545 290.93280029]
[9.68505478 279.98217773]
[15.34784126 266.09216309]
[12.98787594 251.38569641]
[25.36245918 241.52769470]
[31.02524567 227.63766479]
[30.00210953 224.26342773]
[30.56249046 220.22596741]
[33.00029755 216.27496338]
[37.26351929 213.26298523]
[35.56258392 198.46582031]
[48.36500931 189.17021179]
[54.64236832 175.54689026]
[60.91973114 161.92356873]
[67.19709015 148.30026245]
[73.47444916 134.67694092]
[72.63135529 132.00349426]
[72.79645538 128.83500671]
[74.16359711 125.55379486]
[76.78479004 122.60525513]
[80.55243683 120.44682312]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[120.37625122 46.02501678]
[120.06527710 30.20686722]
[132.89208984 22.63572121]
[139.96919250 9.41019344]
[147.04629517 -3.81533456]
[154.12339783 -17.04086113]
[155.41307068 -26.08378983]
[161.40559387 -30.40946198]
[168.67883301 -43.52815628]
[175.95205688 -56.64685059]
[169.21444702 -68.67163086]
[169.29763794 -82.34685516]
[176.07296753 -94.10119629]
[187.67803955 -100.91782379]
[201.02742004 -101.10842133]
[208.49516296 -114.11737823]
[215.96290588 -127.12632751]
[212.05706787 -142.20552063]
[219.81573486 -155.29206848]
[234.21553040 -158.92276001]
[241.68325806 -171.93171692]
[249.05395508 -184.99589539]
[256.32717896 -198.11459351]
[263.60040283 -211.23327637]
[270.87365723 -224.35197449]
[278.14688110 -237.47067261]
[285.42010498 -250.58937073]
[272.19802856 -243.50581360]
[257.21588135 -242.77410889]
[243.36648560 -248.53555298]
[233.32394409 -259.67770386]
[229.02729797 -274.04916382]
[231.30618286 -288.87503052]
[239.72056580 -301.29269409]
[252.64578247 -308.90444946]
[267.58615112 -310.24063110]
[281.65692139 -305.04321289]
[292.14126587 -294.31576538]
[297.01483154 -280.12954712]
[295.33615112 -265.22253418]
[304.82504272 -276.83978271]
[314.31393433 -288.45706177]
[323.80285645 -300.07431030]
[333.29174805 -311.69158936]
[322.75750732 -322.39096069]
[313.44183350 -334.16662598]
[305.45397949 -346.88043213]
[298.88757324 -360.38339233]
[293.81964111 -374.51715088]
[290.30953979 -389.11599731]
[288.39846802 -404.00878906]
[288.10882568 -419.02090454]
[289.44396973 -433.97631836]
[292.38830566 -448.69970703]
[296.90728760 -463.01843262]
[302.94793701 -476.76461792]
[310.43942261 -489.77713013]
[319.29391479 -501.90335083]
[329.40759277 -513.00109863]
[340.66186523 -522.94036865]
[352.92483521 -531.60449219]
[366.05267334 -538.89196777]
[379.89147949 -544.71728516]
[394.27899170 -549.01220703]
[409.04653931 -551.72637939]
[424.02096558 -552.82800293]
[439.02673340 -552.30401611]
[453.88787842 -550.16076660]
[468.43017578 -546.42321777]
[482.48309326 -541.13525391]
[495.88189697 -534.35888672]
[508.46951294 -526.17358398]
[520.09832764 -516.67529297]
[530.63195801 -505.97531128]
[539.94702148 -494.19915771]
[547.93420410 -481.48489380]
[554.49987793 -467.98159790]
[559.56701660 -453.84756470]
[563.07635498 -439.24853516]
[564.98663330 -424.35565186]
[565.27545166 -409.34353638]
[563.93951416 -394.38818359]
[560.99438477 -379.66494751]
[556.47460938 -365.34646606]
[550.43322754 -351.60058594]
[542.94104004 -338.58850098]
[534.08593750 -326.46276855]
[523.97161865 -315.36550903]
[512.71679688 -305.42691040]
[500.45339966 -296.76342773]
[487.32516479 -289.47665405]
[473.48605347 -283.65206909]
[459.09829712 -279.35791016]
[444.33059692 -276.64453125]
[429.35610962 -275.54376221]
[414.35037231 -276.06848145]
[399.48934937 -278.21258545]
[384.94726562 -281.95089722]
[370.89462280 -287.23959351]
[357.49615479 -294.01669312]
[344.90899658 -302.20269775]
[335.42010498 -290.58541870]
[325.93121338 -278.96817017]
[316.44232178 -267.35089111]
[306.95339966 -255.73362732]
[298.53878784 -243.31613159]
[291.26556396 -230.19744873]
[283.99234009 -217.07875061]
[276.71911621 -203.96005249]
[269.44589233 -190.84135437]
[262.17263794 -177.72267151]
[261.67861938 -170.34854126]
[254.69221497 -164.46397400]
[247.22447205 -151.45501709]
[251.35095215 -137.18940735]
[243.96292114 -123.89009094]
[228.97184753 -119.65858459]
[221.50410461 -106.64963531]
[214.03637695 -93.64068604]
[221.22682190 -78.88348389]
[218.17375183 -62.58499908]
[205.88569641 -51.20498276]
[189.07075500 -49.37361908]
[181.79753113 -36.25492477]
[174.52429199 -23.13623238]
[167.34892273 -9.96375656]
[160.27182007 3.26177096]
[153.19471741 16.48729897]
[146.11761475 29.71282578]
[146.93478394 44.58499908]
[133.60177612 53.10212326]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[93.77796173 127.52392578]
[87.09777069 140.95429993]
[80.82040405 154.57762146]
[74.54304504 168.20094299]
[68.26568604 181.82424927]
[61.98832321 195.44757080]
[63.24026108 211.21916199]
[50.88683701 219.54035950]
[44.91527176 233.30046082]
[39.25248718 247.19047546]
[41.20741272 262.89044189]
[29.23786926 271.75494385]
[23.57508278 285.64495850]
[27.84894180 297.81448364]
[22.84643936 309.26693726]
[11.74915504 314.08117676]
[5.88019371 327.88534546]
[18.31758881 336.35867310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 209]
[30 208]
[32 205]
[33 204]
[35 202]
[36 201]
[40 200]
[42 198]
[43 197]
[44 196]
[45 195]
[46 194]
[51 193]
[52 192]
[54 190]
[55 189]
[56 188]
[57 187]
[59 185]
[60 184]
[61 183]
[62 182]
[64 181]
[65 180]
[66 179]
[71 175]
[72 174]
[73 173]
[76 170]
[77 169]
[78 167]
[79 166]
[80 165]
[81 164]
[82 163]
[83 162]
[96 161]
[97 160]
[98 159]
[99 158]
[100 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
