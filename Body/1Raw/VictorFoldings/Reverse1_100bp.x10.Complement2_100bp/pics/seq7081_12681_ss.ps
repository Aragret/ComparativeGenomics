%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[8.65606976 717.50085449]
[-6.28202820 715.78002930]
[-20.71438599 711.55920410]
[-34.22575760 704.95989990]
[-46.42739105 696.17193604]
[-56.96821976 685.44818115]
[-65.54496765 673.09716797]
[-71.91086578 659.47430420]
[-75.88275146 644.97143555]
[-77.34634399 630.00598145]
[-76.25952911 615.00842285]
[-72.65358734 600.41027832]
[-66.63226318 586.63159180]
[-58.36880493 574.06884766]
[-48.10096359 563.08343506]
[-36.12417221 553.99145508]
[-22.78301811 547.05444336]
[-8.46135902 542.47210693]
[6.42874384 540.37615967]
[6.87534952 525.38281250]
[7.32195568 510.38946533]
[7.76856136 495.39611816]
[8.21516800 480.40277100]
[8.66177368 465.40942383]
[9.10837936 450.41607666]
[9.55498505 435.42272949]
[10.00159168 420.42938232]
[0.86290759 405.44766235]
[10.67071724 389.86279297]
[3.35513186 402.95791626]
[-7.77199316 413.01708984]
[-21.53638649 418.97875977]
[-36.48545837 420.21377563]
[-51.04159927 416.59176636]
[-63.66866302 408.49502563]
[-73.03408813 396.77801514]
[-78.14951324 382.67721558]
[-78.47509766 367.68072510]
[-73.97648621 353.37121582]
[-65.12842560 341.25875854]
[-52.86466980 332.62161255]
[-38.47944641 328.37127686]
[-23.49085999 328.95629883]
[-9.48069191 334.31494141]
[2.07253122 343.88171387]
[9.94957066 356.64700317]
[13.31915474 371.26382446]
[17.29125023 356.79928589]
[21.26334763 342.33477783]
[25.23544312 327.87023926]
[17.66804886 315.09252930]
[21.49026680 300.36685181]
[34.94402313 292.51611328]
[38.91612244 278.05160522]
[42.88821793 263.58706665]
[46.86031342 249.12254333]
[50.83240891 234.65802002]
[54.80450439 220.19349670]
[53.26275635 215.67332458]
[54.54419327 210.13662720]
[59.11619186 205.36082458]
[63.51719284 191.02096558]
[62.47453308 183.70423889]
[68.09193420 176.50126648]
[72.70594025 162.22854614]
[77.31995392 147.95581055]
[81.82758331 133.64912415]
[86.22857666 119.30927277]
[90.62957764 104.96942139]
[94.38587952 90.44736481]
[97.27114868 75.72747803]
[99.93694305 60.96625519]
[102.60274506 46.20503998]
[105.26853943 31.44382286]
[100.10697174 16.48826218]
[109.98298645 5.33866453]
[112.64878082 -9.42255211]
[115.31457520 -24.18376923]
[110.15300751 -39.13932800]
[120.02902985 -50.28892899]
[122.69482422 -65.05014801]
[125.36061859 -79.81136322]
[116.45811462 -89.91878510]
[115.02330780 -103.11544800]
[121.35726929 -114.55935669]
[132.95150757 -120.18100739]
[135.83679199 -134.90089417]
[138.72206116 -149.62078857]
[141.60733032 -164.34068298]
[144.38293457 -179.08164978]
[147.04873657 -193.84286499]
[141.88716125 -208.79841614]
[151.76318359 -219.94801331]
[154.42898560 -234.70922852]
[157.09477234 -249.47045898]
[143.03248596 -254.81521606]
[130.19184875 -262.65310669]
[119.01021576 -272.71719360]
[109.86843109 -284.66467285]
[103.07785797 -298.08865356]
[98.86978912 -312.53186035]
[97.38754272 -327.50244141]
[98.68160248 -342.49041748]
[102.70790100 -356.98538208]
[109.32929230 -370.49359131]
[118.32026672 -382.55499268]
[129.37458801 -392.75872803]
[142.11573792 -400.75732422]
[156.10978699 -406.27832031]
[170.88008118 -409.13369751]
[185.92355347 -409.22616577]
[200.72782898 -406.55258179]
[214.78868103 -401.20404053]
[227.62721252 -393.36267090]
[238.80613708 -383.29556274]
[247.94468689 -371.34561157]
[254.73164368 -357.91983032]
[258.93582153 -343.47546387]
[260.41403198 -328.50451660]
[259.11593628 -313.51687622]
[255.08572388 -299.02301025]
[248.46069336 -285.51657104]
[239.46647644 -273.45761108]
[228.40940857 -263.25683594]
[215.66609192 -255.26167297]
[201.67056274 -249.74444580]
[186.89949036 -246.89306641]
[171.85598755 -246.80465698]
[169.19020081 -232.04344177]
[166.52439880 -217.28222656]
[171.87664795 -203.38247681]
[161.80995178 -191.17706299]
[159.14416504 -176.41584778]
[161.04888916 -169.27485657]
[156.32722473 -161.45541382]
[153.44195557 -146.73551941]
[150.55667114 -132.01562500]
[147.67140198 -117.29573059]
[157.64169312 -103.75202179]
[154.67321777 -86.85518646]
[140.12184143 -77.14556885]
[137.45603943 -62.38434982]
[134.79023743 -47.62313080]
[140.14248657 -33.72339249]
[130.07579041 -21.51797485]
[127.40999603 -6.75675678]
[124.74420166 8.00446033]
[130.09645081 21.90419960]
[120.02975464 34.10961914]
[117.36396027 48.87083435]
[114.69816589 63.63205338]
[112.03237152 78.39327240]
[113.97123718 82.75788116]
[113.18887329 88.38681793]
[109.06118011 93.55147552]
[122.19111633 86.29855347]
[136.64155579 90.32155609]
[144.13465881 103.31592560]
[140.37800598 117.83789062]
[127.52359772 125.56861877]
[112.93501282 122.07959747]
[104.96942139 109.37042236]
[100.56842804 123.71027374]
[96.16742706 138.05010986]
[96.64125824 147.17225647]
[91.59268951 152.56980896]
[86.97867584 166.84254456]
[82.36466980 181.11528015]
[77.85704041 195.42196655]
[73.45603943 209.76181030]
[69.26902771 224.16560364]
[65.29693604 238.63012695]
[61.32483673 253.09465027]
[57.35274124 267.55917358]
[53.38064575 282.02368164]
[49.40855026 296.48822021]
[56.96606064 310.10885620]
[52.73173904 324.72134399]
[39.69996643 331.84234619]
[35.72787094 346.30688477]
[31.75577545 360.77139282]
[27.78367805 375.23593140]
[25.66905403 390.08612061]
[34.07617569 399.86788940]
[33.58139420 412.35543823]
[24.99494171 420.87597656]
[24.54833603 435.86932373]
[24.10172844 450.86267090]
[23.65512276 465.85601807]
[23.20851707 480.84936523]
[22.76191139 495.84271240]
[22.31530571 510.83605957]
[21.86870003 525.82940674]
[21.42209435 540.82275391]
[36.16104507 543.80126953]
[50.18456650 549.22790527]
[63.08916855 556.94671631]
[74.50356293 566.73541260]
[84.09933472 578.31256104]
[91.60039520 591.34490967]
[96.79092407 605.45751953]
[99.52157593 620.24438477]
[99.71379089 635.28002930]
[97.36203003 650.13189697]
[92.53396606 664.37261963]
[85.36850739 677.59246826]
[76.07181549 689.41107178]
[64.91138458 699.48840332]
[52.20831680 707.53448486]
[38.32810593 713.31793213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[29 183]
[47 182]
[48 181]
[49 180]
[50 179]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[58 171]
[61 170]
[62 169]
[64 168]
[65 167]
[66 166]
[67 164]
[68 163]
[69 162]
[70 155]
[71 152]
[72 151]
[73 150]
[74 149]
[76 147]
[77 146]
[78 145]
[80 143]
[81 142]
[82 141]
[86 138]
[87 137]
[88 136]
[89 135]
[90 133]
[91 132]
[93 130]
[94 129]
[95 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
