%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[40.37303543 579.26348877]
[32.18716049 591.85345459]
[22.59499550 603.40795898]
[11.72626781 613.77075195]
[-0.27203694 622.80169678]
[-13.23765659 630.37854004]
[-26.99524498 636.39898682]
[-41.35874557 640.78149414]
[-56.13391113 643.46679688]
[-71.12092590 644.41864014]
[-86.11709595 643.62414551]
[-100.91963196 641.09399414]
[-115.32833862 636.86248779]
[-129.14834595 630.98681641]
[-142.19276428 623.54638672]
[-154.28518677 614.64190674]
[-165.26206970 604.39373779]
[-174.97496033 592.94055176]
[-183.29251099 580.43713379]
[-190.10223389 567.05267334]
[-195.31204224 552.96813965]
[-198.85145569 538.37396240]
[-200.67263794 523.46759033]
[-200.75093079 508.45059204]
[-199.08529663 493.52606201]
[-195.69825745 478.89578247]
[-190.63562012 464.75769043]
[-183.96583557 451.30291748]
[-175.77911377 438.71347046]
[-166.18618774 427.15960693]
[-155.31675720 416.79754639]
[-143.31785583 407.76742554]
[-130.35173035 400.19140625]
[-116.59374237 394.17193604]
[-102.22994995 389.79037476]
[-87.45460510 387.10601807]
[-72.46752930 386.15518188]
[-57.47140503 386.95068359]
[-42.66904068 389.48181152]
[-28.26062012 393.71429443]
[-22.39166069 379.91012573]
[-16.52269936 366.10595703]
[-10.65373802 352.30175781]
[-21.41856194 340.49206543]
[-25.97213173 325.11419678]
[-23.35415077 309.23245239]
[-14.03866863 296.03463745]
[0.15079586 288.19226074]
[16.39803314 287.31982422]
[22.06081963 273.42977905]
[27.72360611 259.53976440]
[21.72822189 245.95333862]
[27.27322388 231.78620911]
[41.56456757 225.58981323]
[47.22735214 211.69978333]
[52.89014053 197.80975342]
[49.56904984 180.57789612]
[64.20861053 169.40808105]
[69.66397095 155.43527222]
[75.11932373 141.46247864]
[74.62374878 134.08845520]
[80.76132202 127.32324982]
[86.42411041 113.43321991]
[80.90144348 100.03746033]
[86.37151337 86.62014008]
[99.68585968 80.90399170]
[105.34864807 67.01396179]
[111.01143646 53.12393570]
[103.07768250 43.46353531]
[100.02177429 31.41654778]
[102.36415863 19.28424454]
[109.60005951 9.35737419]
[120.30670166 3.48364544]
[132.42272949 2.72394013]
[138.49656677 -10.99132633]
[144.57040405 -24.70659256]
[150.64422607 -38.42185974]
[156.71806335 -52.13712692]
[162.79190063 -65.85239410]
[163.40542603 -74.96619415]
[169.05961609 -79.72559357]
[175.33697510 -93.34890747]
[181.61433411 -106.97222137]
[187.89169312 -120.59553528]
[194.16906738 -134.21885681]
[198.67669678 -148.52554321]
[201.34248352 -163.28675842]
[204.00828552 -178.04797363]
[206.67407227 -192.80918884]
[208.56736755 -207.68922424]
[209.68301392 -222.64767456]
[210.79866028 -237.60614014]
[211.91432190 -252.56459045]
[209.43185425 -261.35522461]
[213.15956116 -267.73690796]
[214.49778748 -282.67709351]
[215.83602905 -297.61727905]
[217.17425537 -312.55746460]
[218.51249695 -327.49765015]
[204.59223938 -333.42062378]
[193.18490601 -343.35681152]
[185.40808105 -356.33279419]
[182.02366638 -371.07733154]
[183.36322021 -386.14584351]
[189.29551697 -400.06213379]
[199.23934937 -411.46279907]
[212.22055054 -419.23092651]
[226.96733093 -422.60546875]
[242.03497314 -421.25582886]
[255.94728088 -415.31420898]
[267.34127808 -405.36273193]
[275.10070801 -392.37634277]
[278.46536255 -377.62728882]
[277.10562134 -362.56057739]
[271.15469360 -348.65222168]
[261.19555664 -337.26489258]
[248.20397949 -329.51419067]
[233.45268250 -326.15942383]
[232.11444092 -311.21923828]
[230.77621460 -296.27905273]
[229.43797302 -281.33886719]
[228.09974670 -266.39868164]
[226.87277222 -251.44894409]
[225.75712585 -236.49049377]
[224.64146423 -221.53202820]
[223.52581787 -206.57357788]
[234.83445740 -216.42826843]
[249.82896423 -216.83407593]
[261.65405273 -207.60546875]
[264.90347290 -192.96165466]
[258.09161377 -179.59757996]
[244.33276367 -173.62312317]
[229.91729736 -177.76971436]
[221.43528748 -190.14340210]
[218.76950073 -175.38218689]
[216.10369873 -160.62095642]
[213.43791199 -145.85974121]
[222.79074097 -157.58683777]
[235.40908813 -165.69714355]
[249.96133423 -169.33476257]
[264.91171265 -168.11582947]
[278.68252563 -162.16894531]
[289.82043457 -152.12173462]
[297.15008545 -139.03446960]
[299.89794922 -124.28831482]
[297.77401733 -109.43944550]
[291.00247192 -96.05490112]
[280.29788208 -85.54718781]
[266.78997803 -79.02520752]
[251.90425110 -77.17723846]
[237.21162415 -80.19831085]
[224.26266479 -87.76959229]
[214.42388916 -99.09207153]
[208.73361206 -112.97086334]
[207.79237366 -127.94149780]
[201.51501465 -114.31817627]
[195.23765564 -100.69486237]
[188.96029663 -87.07154846]
[182.68293762 -73.44822693]
[176.50717163 -59.77856064]
[170.43333435 -46.06329346]
[164.35949707 -32.34802628]
[158.28565979 -18.63275909]
[152.21183777 -4.91749287]
[146.13800049 8.79777431]
[155.69895935 23.64566040]
[154.42178345 41.41697693]
[142.62956238 54.98249435]
[124.90146637 58.78672409]
[119.23867798 72.67675018]
[113.57588959 86.56678009]
[119.09855652 99.96253967]
[113.62848663 113.37985992]
[100.31414032 119.09600830]
[94.65135193 132.98603821]
[89.09212494 146.91783142]
[83.63676453 160.89064026]
[78.18141174 174.86343384]
[82.63598633 186.96795654]
[77.80454254 198.49362183]
[66.78016663 203.47254944]
[61.11737823 217.36256409]
[55.45459366 231.25259399]
[61.34000015 245.67478943]
[55.39926147 259.68057251]
[41.61363220 265.20254517]
[35.95084763 279.09255981]
[30.28806114 292.98260498]
[40.15781021 303.09866333]
[45.41055298 316.17279053]
[45.28386688 330.21878052]
[39.82989883 343.11624146]
[29.90249062 352.93081665]
[17.02368927 358.20419312]
[3.15043855 358.17071533]
[-2.71852207 371.97491455]
[-8.58748341 385.77908325]
[-14.45644379 399.58325195]
[-1.41152537 407.02279663]
[10.68148899 415.92648315]
[21.65905571 426.17388916]
[31.37271500 437.62646484]
[39.69110107 450.12930298]
[46.50171661 463.51330566]
[51.71245575 477.59750366]
[55.25284958 492.19143677]
[57.07501984 507.09765625]
[57.15432358 522.11468506]
[55.48968506 537.03930664]
[52.10361862 551.66979980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 198]
[41 197]
[42 196]
[43 195]
[49 188]
[50 187]
[51 186]
[54 183]
[55 182]
[56 181]
[58 178]
[59 177]
[60 176]
[62 175]
[63 174]
[66 171]
[67 170]
[68 169]
[74 165]
[75 164]
[76 163]
[77 162]
[78 161]
[79 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 137]
[87 136]
[88 135]
[89 134]
[90 126]
[91 125]
[92 124]
[93 123]
[95 122]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
