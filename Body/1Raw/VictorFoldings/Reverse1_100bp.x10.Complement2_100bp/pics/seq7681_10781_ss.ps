%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[47.20108032 696.45141602]
[35.54247284 686.98388672]
[25.11008453 676.18005371]
[16.05605316 664.19744873]
[8.51241112 651.21093750]
[2.58916831 637.40972900]
[-1.62729776 622.99517822]
[-4.07549858 608.17749023]
[-4.71973181 593.17279053]
[-3.55060291 578.19976807]
[-0.58516115 563.47686768]
[4.13334846 549.21881104]
[10.53611660 535.63342285]
[18.52977180 522.91894531]
[27.99774170 511.26068115]
[38.80195999 500.82870483]
[50.78486252 491.77511597]
[63.77170944 484.23196411]
[77.57310486 478.30923462]
[91.98780060 474.09329224]
[89.54206848 459.29403687]
[87.09634399 444.49475098]
[77.38742065 433.19937134]
[82.77108765 418.32229614]
[73.06216431 407.02691650]
[78.44582367 392.14984131]
[76.00009918 377.35058594]
[71.43730927 391.63977051]
[63.08139801 404.09683228]
[51.59134293 413.73937988]
[37.87329865 419.80694580]
[23.00912857 421.82101440]
[8.17108250 419.62274170]
[-5.47064924 413.38549805]
[-16.84022331 403.60119629]
[-25.04098701 391.04144287]
[-29.42619324 376.69674683]
[-29.65000916 361.69842529]
[-25.69478035 347.22927856]
[-17.87243462 334.43041992]
[-6.79987431 324.31118774]
[6.64967251 317.66967773]
[21.41551781 315.02963257]
[36.33316803 316.59927368]
[50.22615051 322.25482178]
[61.99880981 331.55020142]
[70.72270203 343.75241089]
[75.71051025 357.90249634]
[77.71452332 343.03695679]
[79.71853638 328.17144775]
[81.72255707 313.30590820]
[75.75498962 299.65902710]
[85.26664734 287.01629639]
[87.27066040 272.15075684]
[89.27467346 257.28521729]
[91.27868652 242.41969299]
[93.28269958 227.55416870]
[94.17551422 212.58076477]
[93.95218658 197.58242798]
[86.02625275 184.97175598]
[93.55723572 171.05792236]
[93.33390808 156.05958557]
[85.40797424 143.44891357]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[90.28736877 25.82962036]
[87.54248810 21.38971519]
[86.84491730 16.79986954]
[87.90892029 12.86503220]
[90.17070770 10.16010189]
[90.28237915 -4.83948231]
[90.28237915 -19.83948135]
[90.28237915 -34.83948135]
[80.70769501 -50.56865692]
[90.06842041 -65.41263580]
[89.84509277 -80.41097260]
[89.62176514 -95.40930939]
[86.94329834 -99.88958740]
[86.31413269 -104.48931122]
[87.43660736 -108.40787506]
[89.73841858 -111.07882690]
[86.86590576 -119.74983978]
[90.30493927 -126.29161835]
[90.97472382 -141.27665710]
[83.86135101 -155.40855408]
[92.15923309 -167.77764893]
[92.82901764 -182.76268005]
[93.49880981 -197.74772644]
[94.16859436 -212.73275757]
[85.30580139 -228.87377930]
[95.32000732 -243.28497314]
[95.76661682 -258.27832031]
[96.21321869 -273.27166748]
[96.65982819 -288.26501465]
[82.78110504 -294.46578979]
[72.33540344 -305.50915527]
[66.91561127 -319.71105957]
[67.34821320 -334.90585327]
[73.56723785 -348.77639771]
[84.62432861 -359.20755005]
[98.83335876 -364.60867310]
[114.02754974 -364.15606689]
[127.88990784 -357.91882324]
[138.30651855 -346.84802246]
[143.68893433 -332.63189697]
[143.21635437 -317.43829346]
[136.96086121 -303.58416748]
[125.87636566 -293.18212891]
[111.65317535 -287.81842041]
[111.20656586 -272.82507324]
[110.75996399 -257.83172607]
[110.31335449 -242.83836365]
[118.37743378 -233.82186890]
[118.12806702 -221.32701111]
[109.15363312 -212.06297302]
[108.48384857 -197.07792664]
[107.81405640 -182.09289551]
[107.14427185 -167.10784912]
[114.30555725 -154.04779053]
[105.95976257 -140.60687256]
[105.28997803 -125.62183380]
[104.73176575 -110.63222504]
[104.62010193 -95.63263702]
[104.84342957 -80.63430023]
[105.06675720 -65.63596344]
[113.52539825 -56.98854065]
[113.83420563 -44.49500275]
[105.28237915 -34.83948135]
[105.28237915 -19.83948135]
[105.28237915 -4.83948231]
[108.42588043 1.84932923]
[105.16904449 10.38342953]
[105.28071594 25.38301468]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[115.87919617 142.99519348]
[108.33224487 155.83625793]
[108.55557251 170.83459473]
[116.49747467 184.51803589]
[108.95052338 197.35910034]
[109.17385101 212.35743713]
[117.84190369 200.11550903]
[131.42802429 193.75804138]
[146.38084412 194.94688416]
[158.79171753 203.37126160]
[165.41648865 216.82905579]
[164.52343750 231.80245972]
[156.34602356 244.37742615]
[143.02180481 251.26690674]
[128.03367615 250.67001343]
[115.29953003 242.74276733]
[108.14822388 229.55818176]
[106.14421082 244.42370605]
[104.14019775 259.28924561]
[102.13618469 274.15475464]
[100.13217163 289.02029419]
[105.95639038 303.73046875]
[96.58808136 315.30993652]
[94.58406830 330.17544556]
[92.58005524 345.04098511]
[90.57604218 359.90652466]
[90.79936981 374.90484619]
[93.24509430 389.70413208]
[103.12895203 402.05807495]
[97.57035828 415.87658691]
[107.45421600 428.23052979]
[101.89561462 442.04904175]
[104.34134674 456.84829712]
[106.78707123 471.64758301]
[121.79174042 471.00164795]
[136.76486206 472.16909790]
[151.48808289 475.13290405]
[165.74670410 479.84979248]
[179.33277893 486.25103760]
[192.04818726 494.24328613]
[203.70750427 503.70993042]
[214.14070129 514.51300049]
[223.19563293 526.49487305]
[230.74023438 539.48089600]
[236.66452026 553.28161621]
[240.88206482 567.69580078]
[243.33137512 582.51330566]
[243.97673035 597.51800537]
[242.80871582 612.49108887]
[239.84437561 627.21423340]
[235.12692261 641.47265625]
[228.72517395 655.05847168]
[220.73246765 667.77362061]
[211.26538086 679.43255615]
[200.46194458 689.86535645]
[188.47970581 698.91986084]
[175.49342346 706.46398926]
[161.69247437 712.38769531]
[147.27809143 716.60473633]
[132.46051025 719.05346680]
[117.45578766 719.69830322]
[102.48274994 718.52972412]
[87.75975037 715.56481934]
[73.50148773 710.84686279]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 180]
[21 179]
[22 178]
[24 176]
[26 174]
[27 173]
[48 172]
[49 171]
[50 170]
[51 169]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 152]
[59 151]
[61 149]
[62 148]
[64 146]
[65 145]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[75 137]
[76 135]
[77 134]
[78 133]
[80 130]
[81 129]
[82 128]
[86 127]
[88 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 120]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
