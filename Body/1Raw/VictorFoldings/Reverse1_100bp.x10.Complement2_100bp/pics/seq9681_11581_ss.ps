%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[95.41561890 543.14648438]
[87.09674072 530.52551270]
[82.86912537 516.01281738]
[83.10868835 500.89880371]
[87.79413605 486.52737427]
[96.50883484 474.17645264]
[108.47787476 464.94424438]
[122.63699341 459.65170288]
[121.74417877 444.67831421]
[120.85135651 429.70489502]
[119.95854187 414.73150635]
[118.62030792 399.79132080]
[116.83784485 384.89758301]
[115.05537415 370.00387573]
[113.27291107 355.11016846]
[111.49044800 340.21643066]
[109.59715271 325.33639526]
[107.59313965 310.47088623]
[99.38315582 307.86282349]
[92.42992401 302.70446777]
[87.50369263 295.53213501]
[85.16151428 287.10705566]
[85.68436432 278.33459473]
[89.04372406 270.16699219]
[94.90167236 263.50003052]
[102.64463806 259.07473755]
[101.75182343 244.10133362]
[100.85900879 229.12792969]
[99.85474396 214.16157532]
[98.73909760 199.20312500]
[97.62345123 184.24467468]
[93.99116516 177.80819702]
[96.60423279 169.05549622]
[88.12311554 156.81132507]
[95.02529144 142.57508850]
[94.13247681 127.60167694]
[93.23966217 112.62827301]
[85.70145416 100.85257721]
[91.78693390 88.26454163]
[90.89411926 73.29113770]
[82.34913635 59.97596741]
[89.31517792 46.81072617]
[88.42235565 31.83732033]
[87.52954102 16.86391449]
[86.63672638 1.89050937]
[85.40975189 -13.05922413]
[83.84922791 -27.97782898]
[79.87712860 -42.44235229]
[73.59976959 -56.06567001]
[67.32241058 -69.68898773]
[61.04505157 -83.31230164]
[45.96308136 -86.44924927]
[35.73966599 -97.73353577]
[34.14009857 -112.69700623]
[41.56941986 -125.57890320]
[35.29205704 -139.20220947]
[34.67602158 -124.21487427]
[29.91711617 -109.98979187]
[21.39064598 -97.64883423]
[9.76904297 -88.16525269]
[-4.03116274 -82.28695679]
[-18.92163086 -80.47754669]
[-33.72803497 -82.87970734]
[-47.28268051 -89.30400085]
[-58.51659393 -99.24378204]
[-66.54382324 -111.91514587]
[-70.73130035 -126.31879425]
[-70.74878693 -141.31878662]
[-66.59490967 -155.73216248]
[-58.59725571 -168.42221069]
[-47.38655090 -178.38815308]
[-33.84692383 -184.84403992]
[-19.04615974 -187.28073120]
[-4.15151310 -185.50604248]
[9.66236305 -179.65994263]
[21.30604935 -170.20349121]
[29.86283493 -157.87934875]
[27.85881996 -172.74487305]
[25.85480690 -187.61039734]
[23.85079384 -202.47593689]
[11.56651211 -212.05372620]
[9.74592209 -227.15803528]
[18.95259094 -238.81019592]
[16.94857788 -253.67572021]
[14.94456387 -268.54125977]
[12.94054985 -283.40676880]
[10.93653679 -298.27230835]
[8.93252277 -313.13784790]
[6.92850924 -328.00335693]
[-8.05038738 -329.75933838]
[-22.12170219 -335.18603516]
[-34.40090179 -343.94229126]
[-44.11610413 -355.47769165]
[-50.65660477 -369.06713867]
[-53.61125946 -383.85635376]
[-52.79433823 -398.91567993]
[-48.25719452 -413.29849243]
[-40.28503799 -426.10064697]
[-29.37899971 -436.51742554]
[-16.22464752 -443.89401245]
[-1.64887202 -447.76666260]
[13.43207932 -447.89199829]
[28.07020760 -444.26211548]
[41.34534454 -437.10519409]
[52.42300415 -426.87112427]
[60.60684204 -414.20321655]
[65.38240814 -399.89782715]
[66.44950104 -384.85415649]
[63.74105835 -370.01785278]
[57.42732239 -356.32159424]
[47.90518570 -344.62631226]
[35.77321625 -335.66717529]
[21.79403687 -330.00738525]
[23.79805183 -315.14184570]
[25.80206490 -300.27633667]
[27.80607796 -285.41079712]
[29.81009293 -270.54525757]
[31.81410599 -255.67973328]
[33.81811905 -240.81420898]
[45.78169250 -232.01599121]
[48.02581024 -216.96878052]
[38.71632004 -204.47994995]
[40.72033691 -189.61441040]
[42.72434998 -174.74888611]
[44.72836304 -159.88336182]
[48.91537476 -145.47958374]
[55.19273376 -131.85626221]
[69.81214905 -129.13400269]
[80.14755249 -118.19583130]
[82.08299255 -103.09260559]
[74.66836548 -89.58966064]
[80.94572449 -75.96634674]
[87.22309113 -62.34302902]
[93.50045013 -48.71971512]
[93.99126434 -63.71168137]
[98.29467773 -78.08111572]
[106.12525177 -90.87494659]
[116.96362305 -101.24459839]
[130.09091187 -108.50229645]
[144.63644409 -112.16665649]
[159.63546753 -111.99464417]
[174.09312439 -107.99765778]
[187.05052185 -100.44081116]
[197.64822388 -89.82531738]
[205.18333435 -76.85527039]
[209.15606689 -62.39092255]
[209.30293274 -47.39163971]
[205.61418152 -32.85227585]
[198.33448792 -19.73717117]
[187.94667053 -8.91620445]
[175.13972473 -1.10709095]
[160.76309204 3.17221808]
[145.77032471 3.63789177]
[131.15583801 0.25904381]
[117.88894653 -6.74021912]
[106.84960938 -16.89566040]
[98.76782990 -29.53835106]
[100.32835388 -14.61974716]
[102.82244873 -12.12739086]
[104.23326111 -8.30317020]
[103.94795227 -3.66939211]
[101.61013031 0.99769348]
[102.50294495 15.97109890]
[103.39576721 30.94450569]
[104.28858185 45.91791153]
[112.76970673 58.16208649]
[105.86752319 72.39832306]
[106.76033783 87.37172699]
[114.29854584 99.14742279]
[108.21306610 111.73545837]
[109.10588074 126.70886230]
[109.99870300 141.68226624]
[118.54368591 154.99743652]
[111.57764435 168.16267395]
[112.58190155 183.12902832]
[113.69754791 198.08747864]
[114.81320190 213.04592896]
[118.57221222 221.37104797]
[115.83241272 228.23510742]
[116.72522736 243.20851135]
[117.61804199 258.18191528]
[134.96986389 271.39920044]
[136.85421753 292.84457397]
[122.45867157 308.46685791]
[124.46268463 323.33239746]
[128.71055603 331.41900635]
[126.38416290 338.43399048]
[128.16662598 353.32769775]
[129.94909668 368.22140503]
[131.73156738 383.11514282]
[133.51402283 398.00885010]
[136.23866272 401.38973999]
[137.60800171 405.08966064]
[137.68817139 408.64337158]
[136.68962097 411.65493774]
[134.93194580 413.83868408]
[135.82476807 428.81207275]
[136.71757507 443.78549194]
[137.61039734 458.75891113]
[152.29811096 462.33139038]
[165.27941895 470.07586670]
[175.40003967 481.30371094]
[181.76005554 495.01654053]
[183.79394531 509.99502563]
[181.32084656 524.90728760]
[174.56066895 538.42730713]
[164.11451721 549.35290527]
[150.91127014 556.71264648]
[136.12493896 559.85205078]
[121.07031250 558.49200439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 199]
[9 198]
[10 197]
[11 196]
[12 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 185]
[18 184]
[26 181]
[27 180]
[28 179]
[29 177]
[30 176]
[31 175]
[33 174]
[35 172]
[36 171]
[37 170]
[39 168]
[40 167]
[42 165]
[43 164]
[44 163]
[45 162]
[46 158]
[47 157]
[48 134]
[49 133]
[50 132]
[51 131]
[55 127]
[56 126]
[77 125]
[78 124]
[79 123]
[80 122]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
