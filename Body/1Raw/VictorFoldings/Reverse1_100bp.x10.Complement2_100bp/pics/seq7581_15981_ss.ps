%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[20.45705032 322.07272339]
[22.19706535 336.98876953]
[22.19363022 352.00598145]
[20.44679070 366.92123413]
[16.98016930 381.53283691]
[11.84064865 395.64318848]
[5.09773588 409.06146240]
[-3.15737939 421.60614014]
[-12.81305599 433.10766602]
[-23.73871231 443.41040039]
[-35.78659058 452.37506104]
[-48.79375839 459.88040161]
[-62.58430862 465.82492065]
[-76.97174072 470.12820435]
[-91.76147461 472.73211670]
[-106.75350189 473.60137939]
[-121.74507141 472.72424316]
[-136.53344727 470.11260986]
[-150.91860962 465.80175781]
[-164.70603943 459.85000610]
[-177.70927429 452.33786011]
[-189.75245667 443.36688232]
[-200.67269897 433.05841064]
[-210.32235718 421.55184937]
[-218.57089233 409.00280762]
[-225.30676270 395.58102417]
[-230.43888855 381.46798706]
[-233.89784241 366.85458374]
[-235.63687134 351.93838501]
[-235.63243103 336.92117310]
[-233.88459778 322.00604248]
[-230.41699219 307.39465332]
[-225.27653503 293.28466797]
[-218.53273010 279.86685181]
[-210.27677917 267.32269287]
[-200.62033081 255.82185364]
[-189.69398499 245.51983643]
[-177.64550781 236.55596924]
[-164.63784790 229.05149841]
[-150.84689331 223.10791016]
[-136.45918274 218.80557251]
[-121.66927338 216.20266724]
[-106.67718506 215.33441162]
[-91.68566895 216.21252441]
[-76.89747620 218.82514954]
[-62.51259232 223.13696289]
[-48.72555923 229.08963013]
[-35.72283173 236.60264587]
[-26.76213455 224.57327271]
[-17.80143929 212.54389954]
[-8.84074306 200.51451111]
[-7.36593962 193.27250671]
[0.34400171 188.37406921]
[9.48280430 176.47944641]
[18.62160683 164.58480835]
[4.49503565 169.62861633]
[-10.42988968 168.12974548]
[-23.27140045 160.37760925]
[-31.55000114 147.86901855]
[-33.66722488 133.01919556]
[-29.21426773 118.69539642]
[-19.05092621 107.66333008]
[-5.13958406 102.05311584]
[9.83369827 102.94799042]
[22.97781563 110.17517853]
[31.75484085 122.33921051]
[34.47007370 137.09141541]
[30.59864807 151.58450317]
[41.70587921 141.50335693]
[44.54615784 134.68026733]
[53.05434418 131.35632324]
[64.31044006 121.44167328]
[68.74688721 107.22312164]
[84.21680450 103.90765381]
[89.16215515 87.87893677]
[105.64212799 84.75055695]
[116.74936676 74.66941833]
[127.85659790 64.58827972]
[138.96383667 54.50714493]
[150.07106018 44.42600632]
[161.17829895 34.34486389]
[166.19702148 19.34076881]
[180.82139587 16.51640892]
[190.98493958 5.48453188]
[200.12374878 -6.41010094]
[209.26255798 -18.30473328]
[218.40135193 -30.19936752]
[212.39280701 -42.83108139]
[212.41281128 -56.75285339]
[218.40045166 -69.24790955]
[229.13581848 -77.90245056]
[242.48809814 -81.07189941]
[255.83837891 -78.19319153]
[265.15325928 -89.95044708]
[274.46813965 -101.70769501]
[283.78302002 -113.46495056]
[286.28820801 -129.08656311]
[300.25637817 -134.25759888]
[309.57125854 -146.01484680]
[298.85992432 -156.53623962]
[289.32766724 -168.13659668]
[281.08245850 -180.68444824]
[274.21774292 -194.03764343]
[268.81130981 -208.04487610]
[264.92440796 -222.54742432]
[262.60107422 -237.38098145]
[261.86764526 -252.37745667]
[262.73239136 -267.36691284]
[265.18557739 -282.17956543]
[269.19937134 -296.64749146]
[274.72830200 -310.60684204]
[281.70971680 -323.89938354]
[290.06451416 -336.37454224]
[299.69802856 -347.89096069]
[310.50112915 -358.31811523]
[322.35134888 -367.53787231]
[335.11444092 -375.44580078]
[348.64581299 -381.95223999]
[362.79214478 -386.98352051]
[377.39312744 -390.48260498]
[392.28332520 -392.40985107]
[407.29400635 -392.74343872]
[422.25512695 -391.47955322]
[436.99710083 -388.63253784]
[451.35296631 -384.23464966]
[465.16003418 -378.33572388]
[478.26181030 -371.00256348]
[490.50991821 -362.31832886]
[501.76553345 -352.38134766]
[511.90112305 -341.30426025]
[520.80187988 -329.21258545]
[528.36688232 -316.24328613]
[534.51043701 -302.54333496]
[539.16302490 -288.26797485]
[542.27178955 -273.57894897]
[543.80157471 -258.64266968]
[543.73504639 -243.62843323]
[542.07293701 -228.70631409]
[538.83410645 -214.04541016]
[534.05523682 -199.81184387]
[527.79052734 -186.16688538]
[520.11083984 -173.26513672]
[511.10333252 -161.25279236]
[500.86996460 -150.26596069]
[489.52673340 -140.42912292]
[477.20214844 -131.85375977]
[464.03588867 -124.63701630]
[450.17709351 -118.86067200]
[435.78283691 -114.59017181]
[421.01617432 -111.87390900]
[406.04446411 -110.74266052]
[391.03732300 -111.20924377]
[376.16479492 -113.26837158]
[361.59539795 -116.89670563]
[347.49420166 -122.05314636]
[334.02102661 -128.67926025]
[321.32849121 -136.69996643]
[312.01361084 -124.94271851]
[310.17471313 -110.16207123]
[295.54028320 -104.15006256]
[286.22540283 -92.39281464]
[276.91052246 -80.63555908]
[267.59564209 -68.87831116]
[273.91259766 -54.00523376]
[271.85516357 -37.88311005]
[261.89096069 -24.92426300]
[246.66453552 -18.72336578]
[230.29598999 -21.06056404]
[221.15718079 -9.16593170]
[212.01838684 2.72870159]
[202.87957764 14.62333488]
[217.00614929 9.57952690]
[231.93107605 11.07839489]
[244.77258301 18.83053207]
[253.05119324 31.33911896]
[255.16841125 46.18894577]
[250.71545410 60.51274490]
[240.55210876 71.54480743]
[226.64077759 77.15502930]
[211.66748047 76.26014709]
[198.52337646 69.03296661]
[189.74633789 56.86892700]
[187.03111267 42.11672592]
[190.90254211 27.62364388]
[186.67826843 41.90666962]
[171.25942993 45.45209885]
[160.15220642 55.53323746]
[149.04496765 65.61437988]
[137.93772888 75.69551849]
[126.83050537 85.77665710]
[115.72326660 95.85779572]
[114.45998383 107.43559265]
[105.77791595 115.19850922]
[94.13145447 115.16374969]
[88.88989258 130.09146118]
[74.22509003 132.69776917]
[62.96899414 142.61242676]
[51.78702164 152.61059570]
[40.67978668 162.69172668]
[30.51623917 173.72361755]
[21.37743759 185.61824036]
[12.23863506 197.51287842]
[3.18863463 209.47521973]
[-5.77206135 221.50459290]
[-14.73275757 233.53396606]
[-23.69345284 245.56333923]
[-12.77251148 255.87109375]
[-3.12209797 267.37701416]
[5.12727690 279.92547607]
[11.86404991 293.34683228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 206]
[49 205]
[50 204]
[51 203]
[53 202]
[54 201]
[55 200]
[68 199]
[69 198]
[71 197]
[72 196]
[74 194]
[76 191]
[77 190]
[78 189]
[79 188]
[80 187]
[81 186]
[83 184]
[84 171]
[85 170]
[86 169]
[87 168]
[93 163]
[94 162]
[95 161]
[96 160]
[98 158]
[99 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
