%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[133.36849976 701.80474854]
[120.12992859 694.73809814]
[107.43578339 686.73455811]
[95.35224915 677.83593750]
[83.94232178 668.08856201]
[73.26548767 657.54327393]
[63.37741852 646.25506592]
[54.32965851 634.28277588]
[46.16938400 621.68878174]
[38.93913651 608.53881836]
[32.67661667 594.90142822]
[27.41446686 580.84771729]
[23.18012619 566.45092773]
[19.99567032 551.78607178]
[17.87770271 536.92968750]
[16.83726311 521.95922852]
[16.87977791 506.95269775]
[18.00502586 491.98834229]
[20.20713806 477.14419556]
[23.47463608 462.49765015]
[27.79048157 448.12509155]
[33.13217545 434.10137939]
[39.47187042 420.49969482]
[46.77651215 407.39093018]
[55.00801468 394.84341431]
[64.12346649 382.92257690]
[74.07534027 371.69055176]
[84.81174469 361.20593262]
[96.27671814 351.52337646]
[108.41048431 342.69332886]
[121.14977264 334.76187134]
[134.42817688 327.77032471]
[148.17646790 321.75512695]
[162.32295227 316.74768066]
[158.35086060 302.28317261]
[154.37876892 287.81863403]
[150.40666199 273.35412598]
[146.43457031 258.88958740]
[142.46247864 244.42506409]
[138.49037170 229.96054077]
[133.68785095 224.34292603]
[134.56854248 215.25105286]
[130.81224060 200.72898865]
[127.05593872 186.20693970]
[123.29963684 171.68487549]
[118.26271820 157.55584717]
[111.98535919 143.93252563]
[105.70800018 130.30921936]
[89.68724823 129.06675720]
[76.46585846 119.93424225]
[69.63273621 105.39063263]
[71.04270172 89.38375854]
[80.31302643 76.25862885]
[73.83353424 62.73028183]
[67.35403442 49.20193481]
[60.47462463 35.87250519]
[53.20139694 22.75381088]
[39.74305725 14.43614006]
[40.33871841 -0.44655019]
[33.06548691 -13.56524467]
[25.79225731 -26.68393898]
[20.33091736 -30.41023636]
[17.93145180 -35.56189346]
[18.50441742 -40.30328369]
[11.62500477 -53.63271332]
[4.74559212 -66.96214294]
[-2.13382030 -80.29157257]
[-9.01323318 -93.62100220]
[-23.21001816 -88.69839478]
[-37.96287537 -85.84638214]
[-52.97145844 -85.12304688]
[-67.93020630 -86.54309082]
[-82.53458405 -90.07762146]
[-96.48726654 -95.65467072]
[-109.50418854 -103.16070557]
[-121.32034302 -112.44290161]
[-131.69517517 -123.31229401]
[-140.41746521 -135.54759216]
[-147.30963135 -148.89970398]
[-152.23135376 -163.09678650]
[-155.08244324 -177.84982300]
[-155.80485535 -192.85844421]
[-154.38388062 -207.81710815]
[-150.84844971 -222.42127991]
[-145.27053833 -236.37361145]
[-137.76370239 -249.39006042]
[-128.48077393 -261.20565796]
[-117.61074066 -271.57980347]
[-105.37490082 -280.30133057]
[-92.02236176 -287.19265747]
[-77.82497406 -292.11352539]
[-63.07176208 -294.96371460]
[-48.06308746 -295.68518066]
[-33.10451508 -294.26327515]
[-18.50057411 -290.72695923]
[-4.54858398 -285.14816284]
[8.46740913 -277.64053345]
[20.28241730 -268.35687256]
[30.65590096 -257.48620605]
[39.37667084 -245.24981689]
[46.26718140 -231.89685059]
[51.18715286 -217.69915771]
[54.03642273 -202.94577026]
[54.75697708 -187.93705750]
[53.33415222 -172.97856140]
[49.79691315 -158.37484741]
[44.21726990 -144.42320251]
[36.70882416 -131.40766907]
[27.42443085 -119.59323883]
[16.55311394 -109.22042847]
[4.31619644 -100.50041199]
[11.19560909 -87.17098236]
[18.07502174 -73.84155273]
[24.95443344 -60.51212311]
[31.83384705 -47.18269348]
[38.91095352 -33.95716858]
[46.18418121 -20.83847427]
[53.45741272 -7.71977949]
[66.39552307 -0.34044459]
[66.32009125 15.48058224]
[73.59332275 28.59927559]
[76.24774170 29.50047874]
[78.70513153 31.50743294]
[80.54251862 34.55035782]
[81.37001038 38.40779114]
[80.88238525 42.72243881]
[87.36187744 56.25078583]
[93.84137726 69.77912903]
[107.42605591 70.06535339]
[119.56940460 76.16162872]
[127.91450500 86.88473511]
[130.84162903 100.15339661]
[127.78266144 113.39228821]
[119.33131409 124.03185272]
[125.60867310 137.65516663]
[131.88603210 151.27848816]
[133.99340820 136.42726135]
[142.26371765 123.91318512]
[155.10009766 116.15254211]
[170.02401733 114.64377594]
[184.15393066 119.67822266]
[194.76156616 130.28379822]
[199.79873657 144.41273499]
[198.29287720 159.33694458]
[190.53471375 172.17481995]
[178.02224731 180.44755554]
[163.17143250 182.55781555]
[148.84971619 178.09814453]
[137.82170105 167.92857361]
[141.57800293 182.45063782]
[145.33428955 196.97268677]
[149.09059143 211.49475098]
[152.95489502 225.98844910]
[156.92700195 240.45297241]
[160.89909363 254.91749573]
[164.87118530 269.38201904]
[168.84329224 283.84652710]
[172.81538391 298.31106567]
[176.78747559 312.77557373]
[191.50733948 309.85607910]
[206.39949036 308.00631714]
[221.38629150 307.23596191]
[236.38961792 307.54904175]
[251.33123779 308.94390869]
[266.13327026 311.41333008]
[280.71850586 314.94436646]
[295.01092529 319.51867676]
[308.93603516 325.11233521]
[322.42120361 331.69625854]
[335.39614868 339.23605347]
[347.79321289 347.69247437]
[359.54776001 357.02136230]
[370.59851074 367.17413330]
[380.88781738 378.09783936]
[390.36209106 389.73553467]
[398.97192383 402.02655029]
[406.67242432 414.90676880]
[413.42340088 428.30908203]
[419.18972778 442.16357422]
[423.94128418 456.39807129]
[427.65335083 470.93829346]
[430.30651855 485.70849609]
[431.88699341 500.63162231]
[432.38650513 515.62988281]
[431.80249023 530.62512207]
[430.13796997 545.53912354]
[427.40161133 560.29412842]
[423.60769653 574.81317139]
[418.77600098 589.02069092]
[412.93170166 602.84246826]
[406.10531616 616.20654297]
[398.33236694 629.04315186]
[389.65344238 641.28546143]
[380.11373901 652.86956787]
[369.76303101 663.73516846]
[358.65524292 673.82550049]
[346.84832764 683.08801270]
[334.40380859 691.47442627]
[321.38659668 698.94104004]
[307.86453247 705.44885254]
[293.90814209 710.96398926]
[279.59017944 715.45764160]
[264.98526001 718.90649414]
[250.16955566 721.29241943]
[235.22030640 722.60308838]
[220.21546936 722.83166504]
[205.23323059 721.97686768]
[190.35174561 720.04321289]
[175.64857483 717.04083252]
[161.20037842 712.98529053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[40 153]
[42 152]
[43 151]
[44 150]
[45 149]
[46 136]
[47 135]
[48 134]
[53 128]
[54 127]
[55 126]
[56 121]
[57 120]
[59 118]
[60 117]
[61 116]
[64 115]
[65 114]
[66 113]
[67 112]
[68 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
