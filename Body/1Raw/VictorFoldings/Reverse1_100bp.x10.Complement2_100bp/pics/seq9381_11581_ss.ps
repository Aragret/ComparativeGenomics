%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[-16.25336838 379.18688965]
[-12.17260361 393.63717651]
[-9.70628548 408.44866943]
[-8.88435173 423.44158936]
[-9.71678162 438.43392944]
[-12.19346809 453.24368286]
[-16.28434944 467.69110107]
[-21.93976212 481.60079956]
[-29.09105873 494.80392456]
[-37.65142441 507.14016724]
[-47.51694870 518.45983887]
[-58.56787491 528.62548828]
[-70.67004395 537.51373291]
[-83.67655945 545.01660156]
[-97.42952728 551.04315186]
[-111.76200104 555.52014160]
[-126.50000000 558.39324951]
[-141.46461487 559.62756348]
[-156.47418213 559.20812988]
[-171.34651184 557.14001465]
[-185.90106201 553.44836426]
[-199.96116638 548.17797852]
[-213.35612488 541.39288330]
[-225.92333984 533.17529297]
[-237.51026917 523.62512207]
[-247.97625732 512.85821533]
[-257.19424438 501.00527954]
[-265.05233765 488.21020508]
[-271.45516968 474.62835693]
[-276.32498169 460.42453003]
[-279.60266113 445.77120972]
[-281.24844360 430.84625244]
[-281.24234009 415.83081055]
[-279.58441162 400.90719604]
[-276.29479980 386.25656128]
[-271.41345215 372.05670166]
[-264.99957275 358.48004150]
[-257.13107300 345.69140625]
[-247.90344238 333.84597778]
[-237.42871094 323.08758545]
[-225.83401489 313.54681396]
[-213.26010132 305.33947754]
[-199.85963440 298.56524658]
[-185.79525757 293.30627441]
[-171.23770142 289.62649536]
[-156.36369324 287.57049561]
[-141.35379028 287.16326904]
[-126.39019012 288.40979004]
[-111.65453339 291.29486084]
[-97.32570648 295.78350830]
[-83.57764435 301.82122803]
[-70.57723999 309.33471680]
[-58.48229980 318.23278809]
[-48.31875229 307.20089722]
[-38.15520477 296.16903687]
[-27.99165726 285.13714600]
[-25.05850601 270.53421021]
[-10.01746368 265.62731934]
[0.14608355 254.59542847]
[10.30963039 243.56355286]
[13.24278259 228.96061707]
[28.28382492 224.05372620]
[38.44737244 213.02185059]
[48.44554520 201.83987427]
[58.27612305 190.51028442]
[65.74386597 177.50132751]
[70.56986237 163.29887390]
[75.39585876 149.09642029]
[80.22186279 134.89396667]
[85.04785919 120.69150543]
[89.87385559 106.48905182]
[94.48786163 92.21631622]
[98.88886261 77.87646484]
[103.28985596 63.53662109]
[107.26195526 49.07209778]
[110.80162811 34.49572372]
[114.34130096 19.91934586]
[117.88097382 5.34297132]
[121.42064667 -9.23340416]
[122.87006378 -24.16321373]
[122.20027924 -39.14825058]
[118.69080353 -47.58160019]
[121.63375854 -54.36104202]
[121.18714905 -69.35439301]
[120.74054718 -84.34774017]
[112.59579468 -97.91142273]
[119.95072174 -110.86342621]
[119.50411987 -125.85677338]
[119.05751038 -140.85012817]
[118.61090851 -155.84347534]
[107.80947876 -163.88981628]
[103.67480469 -176.50389099]
[107.50344086 -189.01083374]
[117.68336487 -196.91012573]
[117.46003723 -211.90846252]
[117.23670959 -226.90679932]
[102.83700562 -231.58944702]
[90.73947144 -240.69595337]
[82.25636292 -253.23851013]
[78.30785370 -267.85656738]
[79.32225800 -282.96450806]
[85.18953705 -296.92352295]
[95.27325439 -308.21942139]
[108.47959900 -315.62692261]
[123.37604523 -318.34252930]
[138.34674072 -316.07165527]
[151.76779175 -309.06063843]
[162.18334961 -298.06997681]
[168.46363831 -284.29183960]
[169.92741394 -269.22079468]
[166.41589355 -254.49165344]
[158.30998230 -241.70208740]
[146.48895264 -232.23944092]
[132.23504639 -227.13012695]
[132.45837402 -212.13179016]
[132.68170166 -197.13345337]
[145.23890686 -185.94616699]
[145.83132935 -168.80079651]
[133.60426331 -156.29008484]
[134.05085754 -141.29673767]
[134.49746704 -126.30338287]
[134.94407654 -111.31002808]
[143.05688477 -98.81877136]
[135.73390198 -84.79434967]
[136.18049622 -69.80099487]
[136.62710571 -54.80764771]
[137.18531799 -39.81803513]
[137.85510254 -24.83299828]
[144.16319275 -38.44211578]
[154.15768433 -49.62736893]
[166.97398376 -57.42112732]
[181.50332642 -61.14915085]
[196.48878479 -60.48892975]
[210.63398743 -55.49757385]
[222.71519470 -46.60689163]
[231.68728638 -34.58601761]
[236.77409363 -20.47486877]
[237.53553772 -5.49420786]
[233.90576172 9.05998993]
[226.19876099 21.92864037]
[215.08128357 31.99847984]
[201.51509094 38.39836121]
[186.67379761 40.57463455]
[171.84133911 38.33902740]
[158.30084229 31.88494682]
[147.22372437 21.77073097]
[139.56825256 8.87136269]
[135.99702454 -5.69373178]
[132.45735168 8.88264370]
[128.91767883 23.45901871]
[125.37800598 38.03539276]
[121.83833313 52.61177063]
[123.17992401 55.07312393]
[123.62737274 58.21420670]
[122.91690826 61.69711304]
[120.91181183 65.09477997]
[117.62970734 67.93762207]
[113.22870636 82.27746582]
[108.82771301 96.61731720]
[110.17238617 101.68740082]
[108.58065796 107.14997864]
[104.07630920 111.31504822]
[99.25031281 125.51750183]
[94.42431641 139.71995544]
[89.59832001 153.92240906]
[84.77231598 168.12486267]
[79.94631958 182.32733154]
[90.55213165 171.71992493]
[103.22792816 163.69970703]
[117.35523987 158.65795898]
[132.24475098 156.84068298]
[147.16996765 158.33657837]
[161.40267944 163.07263184]
[174.24841309 170.81776428]
[185.08041382 181.19407654]
[193.37014771 193.69528198]
[198.71315002 207.71142578]
[200.84873962 222.55862427]
[199.67268372 237.51245117]
[195.24240112 251.84327698]
[187.77401733 264.85186768]
[177.63195801 275.90350342]
[165.31108093 284.45895386]
[151.41252136 290.10076904]
[136.61444092 292.55368042]
[121.63886261 291.69802856]
[107.21649170 287.57553101]
[94.05101013 280.38732910]
[82.78479767 270.48416138]
[73.96755981 258.34924316]
[68.02951050 244.57464600]
[65.26037598 229.83247375]
[65.79527283 214.84201050]
[69.60572052 200.34086609]
[59.77513885 211.67045593]
[58.14675140 218.07824707]
[54.12976456 222.09831238]
[49.47924805 223.18539429]
[39.31570053 234.21726990]
[35.65558624 249.60928345]
[21.34150696 253.72711182]
[11.17796040 264.75897217]
[1.01441395 275.79086304]
[-2.64570284 291.18286133]
[-16.95978165 295.30068970]
[-27.12332726 306.33258057]
[-37.28687286 317.36444092]
[-47.45042038 328.39633179]
[-37.59282303 339.72290039]
[-29.04109383 352.06512451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 208]
[54 207]
[55 206]
[56 205]
[58 203]
[59 202]
[60 201]
[62 199]
[63 198]
[64 195]
[65 194]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[72 159]
[73 158]
[74 157]
[75 152]
[76 151]
[77 150]
[78 149]
[79 148]
[80 128]
[81 127]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[89 120]
[90 119]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
