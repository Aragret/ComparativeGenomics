%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[132.48709106 731.99005127]
[119.19361115 725.01812744]
[106.60013580 716.84936523]
[94.81410217 707.55346680]
[83.93608093 697.20965576]
[74.05886841 685.90637207]
[65.26674652 673.73986816]
[57.63472748 660.81402588]
[51.22792053 647.23913574]
[46.10099030 633.13104248]
[42.29767609 618.61004639]
[39.85043335 603.80004883]
[38.78013611 588.82745361]
[39.09591675 573.81994629]
[40.79508209 558.90557861]
[43.86313629 544.21166992]
[48.27390289 529.86352539]
[53.98974609 515.98352051]
[60.96190262 502.69015503]
[69.13088989 490.09680176]
[78.42700195 478.31094360]
[88.77094269 467.43307495]
[100.07444000 457.55606079]
[112.24106598 448.76416016]
[125.16701508 441.13235474]
[138.74200439 434.72576904]
[152.85021973 429.59906006]
[167.37127686 425.79598999]
[164.92555237 410.99673462]
[162.47982788 396.19744873]
[160.03410339 381.39819336]
[157.58837891 366.59890747]
[154.48426819 351.92361450]
[150.72796631 337.40155029]
[146.97166443 322.87948608]
[143.21536255 308.35742188]
[139.45906067 293.83538818]
[129.19869995 287.42822266]
[125.95041656 275.36041260]
[131.98223877 263.95953369]
[128.44256592 249.38314819]
[117.92041779 238.84114075]
[122.18266296 223.60487366]
[118.64299011 209.02850342]
[115.10331726 194.45213318]
[111.56364441 179.87574768]
[108.02397156 165.29937744]
[97.50182343 154.75738525]
[101.76407623 139.52111816]
[98.22440338 124.94473267]
[94.68473053 110.36836243]
[89.76004791 124.53690338]
[79.23707581 135.22648621]
[65.14763641 140.37310791]
[50.21218872 138.98304749]
[37.31451797 131.32472229]
[28.94497490 118.87679291]
[26.71957970 104.04279327]
[31.06802559 89.68692017]
[41.15069199 78.58107758]
[55.02077866 72.86962128]
[70.00018311 73.65534973]
[83.19662476 80.78654480]
[92.06258392 92.88745880]
[91.16976929 77.91405487]
[90.27694702 62.94065094]
[81.73196411 49.62547684]
[88.69800568 36.46023560]
[77.34982300 32.50209427]
[68.02783966 24.97094917]
[61.80928421 14.76708221]
[59.40262222 3.09783030]
[61.06689072 -8.66525650]
[66.58404541 -19.14761925]
[75.28720093 -27.13231087]
[86.14116669 -31.70126915]
[85.91783905 -46.69960785]
[85.69451141 -61.69794464]
[85.35953522 -76.69420624]
[84.91293335 -91.68755341]
[84.46632385 -106.68090057]
[84.01972198 -121.67425537]
[73.98095703 -137.11137390]
[82.89557648 -152.22747803]
[82.22579193 -167.21252441]
[81.55600739 -182.19755554]
[80.88622284 -197.18260193]
[80.21643829 -212.16763306]
[79.54665375 -227.15267944]
[64.68066406 -229.51640320]
[50.59491730 -234.82458496]
[37.86622238 -242.85983276]
[27.01580811 -253.29312134]
[18.48799133 -265.69720459]
[12.63198280 -279.56414795]
[9.68758011 -294.32611084]
[9.77535629 -309.37857056]
[12.89171600 -324.10519409]
[18.90904617 -337.90289307]
[27.58094215 -350.20666504]
[38.55229568 -360.51272583]
[51.37383270 -368.39895630]
[65.52052307 -373.54251099]
[80.41307068 -375.73272705]
[95.44162750 -374.87988281]
[109.99079132 -371.01898193]
[123.46477509 -364.30804443]
[135.31184387 -355.02191162]
[145.04684448 -343.54086304]
[152.27114868 -330.33502197]
[156.68891907 -315.94515991]
[158.11926270 -300.96054077]
[156.50360107 -285.99475098]
[151.90809631 -271.66067505]
[144.52091980 -258.54522705]
[134.64459229 -247.18553162]
[122.68351746 -238.04672241]
[109.12751770 -231.50305176]
[94.53169250 -227.82246399]
[95.20147705 -212.83741760]
[95.87126160 -197.85238647]
[96.54104614 -182.86734009]
[97.21083069 -167.88230896]
[97.88061523 -152.89726257]
[106.59297180 -144.50552368]
[107.27362061 -132.02671814]
[99.01306915 -122.12085724]
[99.45967102 -107.12751007]
[99.90628052 -92.13415527]
[100.35289001 -77.14080811]
[103.69414520 -70.54855347]
[100.69284821 -61.92127228]
[100.91617584 -46.92293549]
[101.13950348 -31.92459679]
[117.35475159 -23.83531952]
[127.26534271 -8.56302261]
[128.05502319 9.71117210]
[119.41882324 25.93175316]
[103.67141724 35.56742096]
[112.15253448 47.81159592]
[105.25035858 62.04783249]
[106.14317322 77.02124023]
[107.03598785 91.99464417]
[109.26110077 106.82868958]
[112.80077362 121.40506744]
[116.34044647 135.98144531]
[127.11577606 147.56604004]
[122.60034943 161.75970459]
[126.14002228 176.33607483]
[129.67968750 190.91246033]
[133.21936035 205.48883057]
[136.75903320 220.06520081]
[147.53436279 231.64981079]
[143.01893616 245.84347534]
[146.55860901 260.41986084]
[159.57463074 273.44537354]
[153.98112488 290.07907104]
[157.73742676 304.60113525]
[161.49372864 319.12319946]
[165.25003052 333.64526367]
[169.00631714 348.16729736]
[177.53225708 335.82598877]
[192.26222229 332.99255371]
[204.75820923 341.29016113]
[207.86196899 355.96551514]
[199.79551697 368.61196899]
[185.17968750 371.98501587]
[172.38764954 364.15319824]
[174.83337402 378.95245361]
[177.27909851 393.75173950]
[179.72482300 408.55099487]
[182.17054749 423.35028076]
[197.14311218 422.27923584]
[212.15061951 422.59426880]
[227.06504822 424.29266357]
[241.75914001 427.35998535]
[256.10751343 431.77005005]
[269.98779297 437.48519897]
[283.28149414 444.45669556]
[295.87524414 452.62503052]
[307.66159058 461.92056274]
[318.53994751 472.26397705]
[328.41754150 483.56695557]
[337.21008301 495.73315430]
[344.84252930 508.65872192]
[351.24978638 522.23339844]
[356.37719727 536.34136963]
[360.18096924 550.86224365]
[362.62872314 565.67211914]
[363.69952393 580.64471436]
[363.38424683 595.65222168]
[361.68557739 610.56658936]
[358.61801147 625.26062012]
[354.20770264 639.60894775]
[348.49234009 653.48913574]
[341.52062988 666.78271484]
[333.35205078 679.37634277]
[324.05633545 691.16253662]
[313.71276855 702.04071045]
[302.40957642 711.91809082]
[290.24325562 720.71044922]
[277.31756592 728.34265137]
[263.74276733 734.74969482]
[249.63473511 739.87689209]
[235.11380005 743.68041992]
[220.30384827 746.12792969]
[205.33125305 747.19848633]
[190.32376099 746.88293457]
[175.40939331 745.18402100]
[160.71540833 742.11621094]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 161]
[34 160]
[35 159]
[36 158]
[37 157]
[40 155]
[41 154]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[49 146]
[50 145]
[51 144]
[64 143]
[65 142]
[66 141]
[68 139]
[76 134]
[77 133]
[78 132]
[79 130]
[80 129]
[81 128]
[82 127]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
