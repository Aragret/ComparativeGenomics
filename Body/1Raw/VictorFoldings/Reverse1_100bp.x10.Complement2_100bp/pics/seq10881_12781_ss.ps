%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[78.10270691 606.72558594]
[64.39051819 612.84716797]
[50.06989670 617.36578369]
[35.32753372 620.22241211]
[20.35562897 621.37994385]
[5.34937096 620.82318115]
[-9.49560356 618.55944824]
[-23.98575974 614.61822510]
[-37.93218613 609.05090332]
[-51.15306854 601.93011475]
[-63.47603607 593.34863281]
[-74.74044037 583.41833496]
[-84.79943085 572.26867676]
[-93.52185822 560.04504395]
[-100.79401398 546.90679932]
[-106.52108765 533.02520752]
[-110.62841034 518.58123779]
[-113.06244659 503.76324463]
[-113.79145813 488.76437378]
[-112.80593872 473.78018188]
[-110.11873627 459.00598145]
[-105.76489258 444.63442993]
[-99.80115509 430.85284424]
[-92.30528259 417.84094238]
[-83.37500000 405.76834106]
[-73.12672424 394.79241943]
[-61.69406891 385.05630493]
[-49.22608185 376.68688965]
[-35.88530350 369.79330444]
[-21.84566689 364.46542358]
[-7.29020262 360.77270508]
[7.59132957 358.76327515]
[22.60491753 358.46334839]
[37.55482864 359.87683105]
[40.65893936 345.20153809]
[43.76304626 330.52624512]
[46.86715698 315.85092163]
[49.97126770 301.17562866]
[53.07537842 286.50033569]
[56.07015228 271.80233765]
[58.95542526 257.08242798]
[61.84069824 242.36254883]
[64.72596741 227.64265442]
[52.84988403 221.29016113]
[43.23162460 211.83830261]
[36.65648270 200.04550171]
[33.66504288 186.86187744]
[34.50870895 173.35264587]
[39.12863541 160.61203003]
[47.15970993 149.67472839]
[57.95938873 141.43179321]
[70.65911102 136.55805969]
[84.23413849 135.45692444]
[87.55639648 120.82946777]
[90.87865448 106.20201111]
[76.98873901 111.86506653]
[63.82701492 104.67000580]
[61.09580994 89.92075348]
[70.80847168 78.48990631]
[85.80519104 78.80386353]
[95.03057861 90.62957764]
[99.43157196 76.28972626]
[103.83257294 61.94988251]
[102.71029663 57.75530624]
[102.95642090 53.81780243]
[104.32209015 50.53598022]
[106.45457458 48.18669891]
[108.94594574 46.90170670]
[106.52443695 31.26691055]
[118.22474670 22.04996300]
[123.47146606 7.99749231]
[128.71818542 -6.05497885]
[133.96490479 -20.10745049]
[120.35498047 -13.80109310]
[105.84320068 -17.59689522]
[97.06414032 -29.75946617]
[98.03147888 -44.72824097]
[108.30294800 -55.65970230]
[123.18258667 -57.55612564]
[135.86761475 -49.55049896]
[140.55856323 -35.30102921]
[147.23875427 -48.73140717]
[153.91894531 -62.16178131]
[160.59913635 -75.59215546]
[167.27934265 -89.02253723]
[154.46472168 -96.83708954]
[142.36933899 -105.72432709]
[131.08271790 -115.61845398]
[120.68844604 -126.44621277]
[111.26345825 -138.12744141]
[102.87754059 -150.57563782]
[95.59278107 -163.69866943]
[89.46312714 -177.39935303]
[84.53394318 -191.57626343]
[80.84173584 -206.12442017]
[78.41383362 -220.93612671]
[77.26821899 -235.90171814]
[77.41336823 -250.91040039]
[78.84820557 -265.85104370]
[81.56211853 -280.61300659]
[85.53500366 -295.08706665]
[90.73744965 -309.16598511]
[97.13093567 -322.74554443]
[104.66813660 -335.72521973]
[113.29323578 -348.00891113]
[122.94237518 -359.50567627]
[133.54412842 -370.13037109]
[145.01998901 -379.80438232]
[157.28498840 -388.45602417]
[170.24833679 -396.02127075]
[183.81405640 -402.44412231]
[197.88168335 -407.67700195]
[212.34709167 -411.68118286]
[227.10317993 -414.42703247]
[242.04067993 -415.89416504]
[257.04901123 -416.07177734]
[272.01702881 -414.95852661]
[286.83395386 -412.56268311]
[301.39007568 -408.90194702]
[315.57760620 -404.00344849]
[329.29153442 -397.90344238]
[342.43026733 -390.64706421]
[354.89657593 -382.28811646]
[366.59817505 -372.88839722]
[377.44839478 -362.51757812]
[387.36691284 -351.25238037]
[396.28027344 -339.17623901]
[404.12252808 -326.37857056]
[410.83560181 -312.95410156]
[416.36978149 -299.00222778]
[420.68408203 -284.62628174]
[423.74655151 -269.93264771]
[425.53457642 -255.03016663]
[426.03488159 -240.02912903]
[425.24374390 -225.04060364]
[423.16705322 -210.17559814]
[419.82015991 -195.54412842]
[415.22784424 -181.25454712]
[409.42413330 -167.41262817]
[402.45199585 -154.12089539]
[394.36300659 -141.47770691]
[385.21710205 -129.57672119]
[375.08197021 -118.50600433]
[364.03265381 -108.34754944]
[352.15097046 -99.17655945]
[339.52490234 -91.06093597]
[326.24789429 -84.06076050]
[312.41824341 -78.22786713]
[298.13836670 -73.60543823]
[283.51400757 -70.22769165]
[268.65341187 -68.11965179]
[253.66659546 -67.29690552]
[238.66453552 -67.76555634]
[223.75828552 -69.52214050]
[209.05824280 -72.55363464]
[194.67321777 -76.83760834]
[180.70971680 -82.34233856]
[174.02952576 -68.91196442]
[167.34931946 -55.48158646]
[160.66912842 -42.05121231]
[153.98893738 -28.62083435]
[148.01737976 -14.86073208]
[142.77066040 -0.80826056]
[137.52394104 13.24421024]
[132.27722168 27.29668236]
[135.07400513 41.92635345]
[122.99841309 52.14842606]
[118.17241669 66.35088348]
[113.77142334 80.69072723]
[109.37042236 95.03057861]
[105.50611877 109.52426910]
[102.18386078 124.15172577]
[98.86159515 138.77919006]
[112.96182251 147.61244202]
[123.17001343 160.71900940]
[128.26626587 176.50396729]
[127.65134430 193.05410767]
[121.41715240 208.36981201]
[110.33345032 220.60658264]
[95.75286865 228.29728699]
[79.44586182 230.52792358]
[76.56059265 245.24781799]
[73.67531586 259.96771240]
[70.79004669 274.68759155]
[72.21031952 283.71093750]
[67.75067902 289.60443115]
[64.64656830 304.27975464]
[61.54246140 318.95504761]
[58.43835068 333.63034058]
[55.33423996 348.30566406]
[52.23012924 362.98095703]
[66.47194672 367.74209595]
[80.07819366 374.09564209]
[92.87148285 381.95883179]
[104.68502045 391.22909546]
[115.36479950 401.78561401]
[124.77159119 413.49075317]
[132.78274536 426.19189453]
[139.29383850 439.72348022]
[144.21995544 453.90905762]
[147.49691772 468.56375122]
[149.08195496 483.49642944]
[148.95443726 498.51248169]
[147.11602783 513.41607666]
[143.59066772 528.01300049]
[138.42434692 542.11291504]
[131.68438721 555.53192139]
[123.45868683 568.09521484]
[113.85447693 579.63891602]
[102.99695587 590.01251221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 184]
[41 183]
[42 182]
[43 181]
[53 173]
[54 172]
[55 171]
[61 170]
[62 169]
[63 168]
[68 167]
[70 165]
[71 164]
[72 163]
[73 162]
[81 161]
[82 160]
[83 159]
[84 158]
[85 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
