%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[36.00964737 616.46588135]
[26.04964638 627.72399902]
[14.45103645 637.28527832]
[1.49944293 644.91436768]
[-12.48618984 650.42333984]
[-27.16145325 653.67651367]
[-42.16495514 654.59375000]
[-57.12722397 653.15258789]
[-71.67979431 649.38836670]
[-85.46430206 643.39385986]
[-98.14128876 635.31671143]
[-109.39856720 625.35577393]
[-118.95892334 613.75640869]
[-126.58692932 600.80419922]
[-132.09472656 586.81805420]
[-135.34667969 572.14257812]
[-136.26272583 557.13897705]
[-134.82029724 542.17681885]
[-131.05490112 527.62457275]
[-125.05927277 513.84057617]
[-116.98106384 501.16424561]
[-107.01921082 489.90777588]
[-95.41902161 480.34838867]
[-82.46617126 472.72143555]
[-68.47962952 467.21478271]
[-53.80382538 463.96405029]
[-38.80017090 463.04925537]
[-23.83814240 464.49291992]
[-20.08184242 449.97085571]
[-16.32554245 435.44879150]
[-12.56924152 420.92672729]
[-9.24698162 406.29928589]
[-6.36170912 391.57937622]
[-3.47643661 376.85949707]
[-13.43881226 388.07336426]
[-26.90048981 394.69027710]
[-41.86450958 395.72857666]
[-56.11104584 391.03433228]
[-67.52671814 381.30383301]
[-74.41806793 367.98056030]
[-75.76280975 353.04095459]
[-71.36145782 338.70123291]
[-61.86692810 327.08856201]
[-48.68767929 319.92565918]
[-33.77877045 318.27505493]
[-19.35185432 322.38162231]
[-7.54707241 331.63619995]
[-0.11559767 344.66592407]
[1.84027600 359.53594971]
[7.70923662 345.73178101]
[13.57819748 331.92761230]
[19.44715881 318.12341309]
[25.31612015 304.31924438]
[31.18507957 290.51507568]
[37.05403900 276.71090698]
[36.13001633 272.02526855]
[38.13967133 266.70941162]
[43.30873489 262.58721924]
[49.58609772 248.96391296]
[55.86345673 235.34059143]
[60.90037155 221.21156311]
[56.59676743 206.95223999]
[67.54337311 195.52935791]
[71.29967499 181.00730896]
[75.05597687 166.48524475]
[78.81227875 151.96318054]
[82.56858063 137.44113159]
[86.32488251 122.91906738]
[90.08118439 108.39700317]
[93.40344238 93.76954651]
[96.28871155 79.04965210]
[99.17398834 64.32976532]
[101.83978271 49.56854630]
[104.28550720 34.76927567]
[98.90184784 19.89221954]
[108.61077118 8.59681892]
[111.05649567 -6.20245171]
[105.67283630 -21.07950592]
[115.38175201 -32.37490845]
[117.82748413 -47.17417908]
[112.44381714 -62.05123138]
[122.15274048 -73.34663391]
[124.59847260 -88.14590454]
[127.04419708 -102.94517517]
[125.37158203 -106.95220947]
[125.08944702 -110.88729858]
[126.00441742 -114.32215118]
[127.80391693 -116.93527985]
[130.10128784 -118.54159546]
[133.42353821 -133.16905212]
[136.74580383 -147.79652405]
[140.06805420 -162.42398071]
[126.05411530 -167.84867859]
[112.97940826 -175.25608826]
[101.12261200 -184.48832703]
[90.73645782 -195.34860229]
[82.04233551 -207.60543823]
[75.22555542 -220.99758911]
[70.43141937 -235.23956299]
[67.76210785 -250.02783203]
[67.27452850 -265.04714966]
[68.97906494 -279.97741699]
[72.83939362 -294.50033569]
[78.77322388 -308.30639648]
[86.65407562 -321.10131836]
[96.31397247 -332.61239624]
[107.54701233 -342.59420776]
[120.11375427 -350.83401489]
[133.74635315 -357.15621948]
[148.15422058 -361.42605591]
[163.03024292 -363.55245972]
[178.05735779 -363.49017334]
[192.91523743 -361.24047852]
[207.28720093 -356.85134888]
[220.86691284 -350.41632080]
[233.36489868 -342.07257080]
[244.51478577 -331.99795532]
[254.07890320 -320.40722656]
[261.85339355 -307.54739380]
[267.67254639 -293.69259644]
[271.41232300 -279.13815308]
[272.99301147 -264.19427490]
[272.38092041 -249.17950439]
[269.58908081 -234.41389465]
[264.67700195 -220.21214294]
[257.74942017 -206.87698364]
[248.95397949 -194.69265747]
[238.47813416 -183.91886902]
[226.54519653 -174.78526306]
[213.40951538 -167.48651123]
[199.35107422 -162.17820740]
[184.66954041 -158.97348022]
[169.67784119 -157.94064331]
[154.69552612 -159.10171509]
[151.37326050 -144.47425842]
[148.05099487 -129.84680176]
[144.72874451 -115.21933746]
[141.84347534 -100.49945068]
[139.39773560 -85.70018005]
[136.95201111 -70.90090942]
[142.51060486 -57.08239365]
[132.62675476 -44.72845078]
[130.18103027 -29.92918015]
[135.73962402 -16.11066818]
[125.85576630 -3.75672412]
[123.41004181 11.04254627]
[128.96864319 24.86105728]
[119.08477783 37.21500397]
[116.63905334 52.01427460]
[118.64269257 56.34953308]
[117.94421387 61.98949432]
[113.89387512 67.21503448]
[111.00860596 81.93492889]
[108.12332916 96.65481567]
[109.60319519 99.31930542]
[110.14627075 102.58114624]
[109.52943420 106.09440613]
[107.66049957 109.43556213]
[104.60324097 112.15330505]
[100.84693909 126.67536926]
[97.09063721 141.19741821]
[93.33433533 155.71948242]
[89.57804108 170.24154663]
[85.82173920 184.76359558]
[82.06543732 199.28565979]
[86.10036469 214.58369446]
[75.42243195 224.96786499]
[86.44934845 214.79895020]
[100.77088928 210.33872986]
[115.62178802 212.44844055]
[128.13456726 220.72070312]
[135.89320374 233.55828857]
[137.39962769 248.48245239]
[132.36297607 262.61157227]
[121.75574493 273.21752930]
[107.62602234 278.25250244]
[92.70204163 276.74432373]
[79.86537933 268.98413086]
[71.59460449 256.47036743]
[69.48677063 241.61796570]
[63.20941162 255.24127197]
[56.93205261 268.86459351]
[50.85821915 282.57986450]
[44.98925781 296.38403320]
[39.12029648 310.18820190]
[33.25133514 323.99240112]
[27.38237381 337.79656982]
[21.51341438 351.60073853]
[15.64445305 365.40490723]
[11.24345493 379.74478149]
[8.35818195 394.46466064]
[5.47290945 409.18453979]
[7.02547693 413.23959351]
[7.19032907 417.18136597]
[6.17349148 420.58743286]
[4.29698753 423.14584351]
[1.95281804 424.68304443]
[-1.80348265 439.20510864]
[-5.55978346 453.72714233]
[-9.31608391 468.24920654]
[4.46941137 474.24142456]
[17.14772987 482.31649780]
[28.40665436 492.27557373]
[37.96892548 503.87338257]
[45.59906387 516.82434082]
[51.10917282 530.80950928]
[54.36355591 545.48449707]
[55.28207016 560.48797607]
[53.84210205 575.45031738]
[50.07911301 590.00323486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 200]
[29 199]
[30 198]
[31 197]
[32 192]
[33 191]
[34 190]
[49 189]
[50 188]
[51 187]
[52 186]
[53 185]
[54 184]
[55 183]
[58 182]
[59 181]
[60 180]
[61 167]
[63 165]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 154]
[71 153]
[72 152]
[73 149]
[74 148]
[76 146]
[77 145]
[79 143]
[80 142]
[82 140]
[83 139]
[84 138]
[89 137]
[90 136]
[91 135]
[92 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
