%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[144.27392578 579.64819336]
[141.17956543 564.89959717]
[141.57046509 549.83496094]
[145.42556763 535.26666260]
[152.53697205 521.98040771]
[162.52114868 510.69268799]
[174.83969116 502.01220703]
[188.82824707 496.40716553]
[186.60313416 481.57312012]
[184.37802124 466.73907471]
[182.15289307 451.90502930]
[179.92778015 437.07098389]
[168.27203369 423.95190430]
[175.15397644 406.87207031]
[172.70825195 392.07278442]
[170.26251221 377.27352905]
[167.81678772 362.47424316]
[165.37106323 347.67498779]
[161.83139038 333.09860229]
[157.21737671 318.82586670]
[152.60337830 304.55313110]
[141.32629395 294.82293701]
[144.44351196 279.31185913]
[133.16644287 269.58166504]
[136.28366089 254.07058716]
[131.66964722 239.79785156]
[127.05564117 225.52511597]
[124.09976196 223.60284424]
[121.92810822 220.15335083]
[121.24832153 215.56083679]
[122.56972504 210.51100159]
[118.59762573 196.04646301]
[114.62553406 181.58193970]
[110.65343475 167.11741638]
[106.68133545 152.65289307]
[102.70924377 138.18836975]
[98.73714447 123.72385406]
[94.76505280 109.25933075]
[89.72813416 95.13029480]
[83.65429688 81.41503143]
[77.58046722 67.69976807]
[71.50662994 53.98449707]
[65.17035675 47.40502930]
[65.44615936 40.01951981]
[59.57719803 26.21534348]
[53.70823669 12.41116714]
[47.83927536 -1.39300931]
[41.97031403 -15.19718647]
[36.10135651 -29.00136375]
[29.86373901 -35.67443848]
[30.24947166 -43.05502319]
[24.58668518 -56.94504929]
[18.92389870 -70.83507538]
[13.26111126 -84.72510529]
[0.32753086 -88.48503876]
[-7.95812750 -98.85606384]
[-8.74603367 -111.91214752]
[-1.97218132 -122.87319183]
[-7.42753839 -136.84599304]
[-12.88289547 -150.81878662]
[-19.88188362 -137.55175781]
[-34.17077637 -132.98802185]
[-47.56424332 -139.74191284]
[-52.38990021 -153.94448853]
[-45.88339233 -167.45986938]
[-31.77194023 -172.54582214]
[-18.13987732 -166.28958130]
[-22.32688904 -180.69337463]
[-26.51389885 -195.09715271]
[-40.09856033 -207.52850342]
[-35.25336456 -224.39537048]
[-39.65436172 -238.73521423]
[-44.05536270 -253.07505798]
[-48.45635986 -267.41491699]
[-63.30199051 -265.09371948]
[-78.32685852 -264.90896606]
[-93.22507477 -266.86447144]
[-107.69332886 -270.92037964]
[-121.43706512 -276.99414062]
[-134.17648315 -284.96206665]
[-145.65222168 -294.66195679]
[-155.63064575 -305.89636230]
[-163.90861511 -318.43655396]
[-170.31759644 -332.02719116]
[-174.72711182 -346.39163208]
[-177.04739380 -361.23739624]
[-177.23120117 -376.26226807]
[-175.27478027 -391.16036987]
[-171.21797180 -405.62838745]
[-165.14337158 -419.37173462]
[-157.17465210 -432.11065674]
[-147.47402954 -443.58581543]
[-136.23901367 -453.56353760]
[-123.69833374 -461.84072876]
[-110.10728455 -468.24887085]
[-95.74258423 -472.65750122]
[-80.89665985 -474.97686768]
[-65.87177277 -475.15972900]
[-50.97380066 -473.20239258]
[-36.50604630 -469.14468384]
[-22.76306152 -463.06924438]
[-10.02463055 -455.09973145]
[1.44990647 -445.39840698]
[11.42694378 -434.16278076]
[19.70336151 -421.62158203]
[26.11066055 -408.03012085]
[30.51839828 -393.66516113]
[32.83684158 -378.81909180]
[33.01878357 -363.79418945]
[31.06052399 -348.89633179]
[27.00192833 -334.42883301]
[20.92562866 -320.68621826]
[12.95532703 -307.94827271]
[3.25328970 -296.47433472]
[-7.98296261 -286.49801636]
[-20.52467346 -278.22235107]
[-34.11651230 -271.81591797]
[-29.71551323 -257.47604370]
[-25.31451607 -243.13621521]
[-20.91351700 -228.79635620]
[-10.37729836 -222.85374451]
[-6.59339571 -210.94300842]
[-12.11011791 -199.28416443]
[-7.92310667 -184.88038635]
[-3.73609519 -170.47659302]
[1.08990240 -156.27413940]
[6.54525948 -142.30134583]
[12.00061607 -128.32855225]
[27.67770576 -122.24022675]
[34.22983551 -106.38512421]
[27.15113831 -90.38789368]
[32.81392670 -76.49786377]
[38.47671127 -62.60783768]
[44.13949966 -48.71780777]
[49.90553284 -34.87032318]
[55.77449417 -21.06614685]
[61.64345169 -7.26197004]
[67.51241302 6.54220676]
[73.38137817 20.34638405]
[79.25033569 34.15056229]
[85.22190094 47.91066360]
[91.29573059 61.62593079]
[97.36956787 75.34119415]
[103.44339752 89.05646515]
[106.63059235 74.39897919]
[116.64616394 63.23258591]
[130.87207031 58.47615051]
[145.58967590 61.37299347]
[156.95187378 71.16588593]
[161.98857117 85.29499054]
[159.38320923 100.06699371]
[149.81681824 111.62052917]
[135.79002380 116.93553162]
[120.96941376 114.62266541]
[109.22957611 105.28723145]
[113.20166779 119.75175476]
[117.17376709 134.21627808]
[121.14585876 148.68080139]
[125.11795807 163.14532471]
[129.09005737 177.60984802]
[133.06214905 192.07437134]
[137.03424072 206.53889465]
[141.32836914 220.91111755]
[145.94238281 235.18383789]
[150.55639648 249.45657349]
[162.16349792 260.20767212]
[158.71624756 274.69784546]
[170.32334900 285.44894409]
[166.87609863 299.93911743]
[171.49011230 314.21185303]
[176.10412598 328.48458862]
[180.79890442 314.23822021]
[191.92182922 304.17440796]
[206.56536865 300.92376709]
[220.90174866 305.33602905]
[231.18348694 316.25784302]
[234.72293091 330.83428955]
[230.59490967 345.25506592]
[219.87844849 355.75067139]
[205.37483215 359.57754517]
[190.87525940 355.73538208]
[180.17033386 345.22924805]
[182.61605835 360.02853394]
[185.06178284 374.82778931]
[187.50752258 389.62707520]
[189.95324707 404.42633057]
[199.96495056 412.55828857]
[201.69732666 424.93499756]
[194.76182556 434.84585571]
[196.98693848 449.67990112]
[199.21206665 464.51394653]
[201.43717957 479.34799194]
[203.66229248 494.18203735]
[218.67974854 495.43618774]
[233.00299072 500.12036133]
[245.85958862 507.98193359]
[256.55618286 518.59698486]
[264.51596069 531.39306641]
[269.30963135 545.67999268]
[270.67868042 560.68743896]
[268.54928589 575.60595703]
[263.03628540 589.63104248]
[254.43698120 602.00634766]
[243.21511841 612.06451416]
[229.97589111 619.26306152]
[215.43325806 623.21386719]
[200.37149048 623.70379639]
[185.60285950 620.70642090]
[171.92381287 614.38342285]
[160.07203674 605.07574463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 171]
[20 170]
[21 169]
[23 167]
[25 165]
[26 164]
[27 163]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 144]
[40 143]
[41 142]
[42 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[51 134]
[52 133]
[53 132]
[54 131]
[58 128]
[59 127]
[60 126]
[67 125]
[68 124]
[69 123]
[71 120]
[72 119]
[73 118]
[74 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
