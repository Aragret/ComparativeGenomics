%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[101.25527191 575.07812500]
[94.15207672 588.34948730]
[84.52251434 599.91912842]
[72.76090240 609.31323242]
[59.34887314 616.14715576]
[44.83563995 620.14105225]
[29.81551361 621.13128662]
[14.90355492 619.07745361]
[0.71040118 614.06353760]
[-12.18274689 606.29492188]
[-23.24792480 596.08966064]
[-32.03201675 583.86572266]
[-38.17532349 570.12365723]
[-41.42627716 555.42614746]
[-41.65175629 540.37512207]
[-38.84252548 525.58685303]
[-33.11362076 511.66690063]
[-24.69964027 499.18533325]
[-13.94512749 488.65322876]
[-1.29047465 480.50186157]
[12.74611759 475.06506348]
[27.58986092 472.56539917]
[42.63291168 473.10531616]
[46.17258453 458.52893066]
[49.71225739 443.95257568]
[53.25193024 429.37619019]
[56.79160309 414.79980469]
[52.27617264 400.60614014]
[63.05149841 389.02154541]
[66.59117126 374.44515991]
[70.13084412 359.86880493]
[73.67051697 345.29241943]
[69.15509033 331.09875488]
[79.93041229 319.51416016]
[82.15553284 304.68011475]
[83.04834747 289.70669556]
[83.94116211 274.73330688]
[84.83397675 259.75988770]
[85.72679138 244.78648376]
[74.03643799 232.69622803]
[74.72087097 215.55427551]
[87.84458160 203.98762512]
[88.51436615 189.00259399]
[89.18415833 174.01754761]
[89.85394287 159.03251648]
[90.52372742 144.04747009]
[91.19351196 129.06243896]
[91.86329651 114.07740021]
[84.53608704 105.02458954]
[85.14273071 93.39389038]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[87.19566345 45.05826187]
[88.24755096 32.60525894]
[97.20590210 24.47663307]
[98.32154846 9.51817989]
[99.43719482 -5.44027328]
[100.10697937 -20.42531204]
[100.33030701 -35.42364883]
[100.55363464 -50.42198563]
[100.77696228 -65.42032623]
[98.23308563 -69.97836304]
[97.74114990 -74.59477997]
[98.97978973 -78.47818756]
[101.36010742 -81.07942200]
[102.25292206 -96.05282593]
[103.14573669 -111.02623749]
[104.03855896 -125.99964142]
[104.93137360 -140.97305298]
[102.31829834 -149.72573853]
[105.95058441 -156.16221619]
[107.06623077 -171.12068176]
[104.54424286 -177.23222351]
[105.36419678 -182.85581970]
[108.44431305 -186.50573730]
[110.00483704 -201.42434692]
[111.56536102 -216.34294128]
[113.12588501 -231.26155090]
[98.43349457 -234.34985352]
[84.13652039 -238.93251038]
[70.38652802 -244.96092224]
[57.32927322 -252.37118530]
[45.10316467 -261.08474731]
[33.83781052 -271.00927734]
[23.65262794 -282.03948975]
[14.65558720 -294.05853271]
[6.94205904 -306.93896484]
[0.59381366 -320.54425049]
[-4.32185459 -334.73016357]
[-7.75283718 -349.34634399]
[-9.66276360 -364.23782349]
[-10.03138733 -379.24676514]
[-8.85480118 -394.21405029]
[-6.14547682 -408.98101807]
[-1.93213534 -423.39114380]
[3.74055958 -437.29168701]
[10.81247425 -450.53524780]
[19.20864296 -462.98144531]
[28.84006119 -474.49838257]
[39.60462952 -484.96395874]
[51.38823700 -494.26721191]
[64.06597900 -502.30953979]
[77.50344849 -509.00567627]
[91.55821228 -514.28466797]
[106.08128357 -518.09051514]
[120.91870117 -520.38287354]
[135.91319275 -521.13751221]
[150.90579224 -520.34637451]
[165.73757935 -518.01782227]
[180.25132751 -514.17657471]
[194.29318237 -508.86334229]
[207.71429443 -502.13446045]
[220.37239075 -494.06124878]
[232.13328552 -484.72927856]
[242.87229919 -474.23751831]
[252.47561646 -462.69714355]
[260.84143066 -450.23046875]
[267.88101196 -436.96972656]
[273.51980591 -423.05538940]
[277.69802856 -408.63504028]
[280.37133789 -393.86151123]
[281.51144409 -378.89138794]
[281.10623169 -363.88339233]
[279.16000366 -348.99661255]
[275.69338989 -334.38885498]
[270.74316406 -320.21496582]
[264.36175537 -306.62521362]
[256.61685181 -293.76361084]
[247.59054565 -281.76654053]
[237.37849426 -270.76116943]
[226.08898926 -260.86416626]
[213.84167480 -252.18041992]
[200.76638794 -244.80200195]
[187.00173950 -238.80712891]
[172.69364929 -234.25933838]
[157.99375916 -231.20686340]
[143.05793762 -229.68203735]
[128.04449463 -229.70101929]
[126.48396301 -214.78242493]
[124.92344666 -199.86381531]
[123.36292267 -184.94520569]
[122.02468872 -170.00502014]
[120.90903473 -155.04656982]
[119.90477753 -140.08023071]
[119.01196289 -125.10682678]
[118.11914825 -110.13341522]
[117.22633362 -95.16001129]
[116.33351135 -80.18660736]
[115.77530670 -65.19699860]
[115.55197906 -50.19865799]
[115.32865143 -35.20032120]
[115.10531616 -20.20198441]
[116.95874023 -18.09889984]
[118.09078217 -15.13493347]
[118.16936493 -11.58117104]
[116.96659851 -7.82379484]
[114.39565277 -4.32462454]
[113.27999878 10.63382816]
[112.16435242 25.59228134]
[120.62495422 40.96710587]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[116.23766327 100.84693909]
[106.84833527 114.74718475]
[106.17855072 129.73222351]
[105.50876617 144.71725464]
[104.83898163 159.70230103]
[104.16919708 174.68733215]
[103.49940491 189.67237854]
[102.82962036 204.65740967]
[113.00267792 213.48484802]
[116.18770599 226.37150574]
[111.43945312 238.55905151]
[100.70020294 245.67930603]
[99.80738831 260.65270996]
[98.91456604 275.62612915]
[98.02175140 290.59951782]
[97.12893677 305.57293701]
[105.99393463 293.47283936]
[119.19010162 286.34115601]
[134.16947937 285.55487061]
[148.03977966 291.26580811]
[158.12286377 302.37127686]
[162.47184753 316.72698975]
[160.24700928 331.56106567]
[151.87792969 344.00930786]
[138.98054504 351.66812134]
[124.04514313 353.05874634]
[109.95551300 347.91262817]
[99.43214417 337.22344971]
[94.50679016 323.05383301]
[98.76903534 338.29010010]
[88.24689484 348.83209229]
[84.70722198 363.40847778]
[81.16754913 377.98483276]
[77.62787628 392.56121826]
[81.89012146 407.79748535]
[71.36798096 418.33947754]
[67.82830811 432.91586304]
[64.28863525 447.49224854]
[60.74895859 462.06860352]
[57.20928574 476.64498901]
[70.82458496 483.06436157]
[82.86875916 492.09338379]
[92.84860229 503.36224365]
[100.35545349 516.40954590]
[105.08190155 530.70098877]
[106.83441162 545.65136719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 204]
[24 203]
[25 202]
[26 201]
[27 200]
[29 198]
[30 197]
[31 196]
[32 195]
[34 193]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[51 164]
[52 163]
[53 162]
[56 160]
[57 159]
[58 158]
[59 153]
[60 152]
[61 151]
[62 150]
[66 149]
[67 148]
[68 147]
[69 146]
[70 145]
[72 144]
[73 143]
[76 142]
[77 141]
[78 140]
[79 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
