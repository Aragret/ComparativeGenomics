%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[-10.72862720 516.13476562]
[-13.58686829 530.87414551]
[-17.97015572 545.23394775]
[-23.83046341 559.05694580]
[-31.10358238 572.19158936]
[-39.70982742 584.49401855]
[-49.55489731 595.82946777]
[-60.53092957 606.07373047]
[-72.51766205 615.11450195]
[-85.38376617 622.85278320]
[-98.98826599 629.20379639]
[-113.18211365 634.09796143]
[-127.80978394 637.48156738]
[-142.71101379 639.31762695]
[-157.72251892 639.58599854]
[-172.67985535 638.28381348]
[-187.41912842 635.42517090]
[-201.77885437 631.04156494]
[-215.60166931 625.18090820]
[-228.73616028 617.90747070]
[-241.03840637 609.30090332]
[-252.37361145 599.45556641]
[-262.61758423 588.47930908]
[-271.65808105 576.49237061]
[-279.39605713 563.62603760]
[-285.74673462 550.02142334]
[-290.64053345 535.82745361]
[-294.02380371 521.19970703]
[-295.85949707 506.29840088]
[-296.12753296 491.28689575]
[-294.82492065 476.32958984]
[-291.96597290 461.59039307]
[-287.58197021 447.23077393]
[-281.72100830 433.40808105]
[-274.44723511 420.27377319]
[-265.84039307 407.97174072]
[-255.99478149 396.63677979]
[-245.01824951 386.39306641]
[-233.03108215 377.35287476]
[-220.16459656 369.61520386]
[-206.55978394 363.26486206]
[-192.36570740 358.37139893]
[-177.73786926 354.98849487]
[-162.83656311 353.15313721]
[-147.82502747 352.88549805]
[-132.86775208 354.18844604]
[-118.12862396 357.04776001]
[-103.76911926 361.43209839]
[-89.94657135 367.29342651]
[-76.81243896 374.56750488]
[-68.21387482 362.27667236]
[-59.61531067 349.98580933]
[-58.35678101 342.70312500]
[-50.79610443 337.57730103]
[-42.01549911 325.41583252]
[-33.23489761 313.25439453]
[-24.63633347 300.96356201]
[-16.22171593 288.54605103]
[-19.27573776 274.01303101]
[-10.91900921 261.30004883]
[4.34526157 258.19525146]
[12.75988007 245.77777100]
[21.17449951 233.36027527]
[22.32445908 226.05963135]
[29.80798340 220.82182312]
[30.76387405 205.95791626]
[45.01451111 199.08551025]
[53.61307526 186.79467773]
[62.21163940 174.50384521]
[70.81020355 162.21299744]
[79.40876770 149.92216492]
[85.27772522 136.11798096]
[88.16300201 121.39809418]
[91.04827118 106.67819977]
[93.82388306 91.93724060]
[87.19699860 74.75684357]
[99.04678345 61.81275177]
[101.49250793 47.01348114]
[103.93824005 32.21421051]
[106.38396454 17.41493988]
[108.82968903 2.61566854]
[109.61101532 -12.36396885]
[108.60675049 -27.33031273]
[107.49110413 -42.28876495]
[106.37545776 -57.24721909]
[105.25980377 -72.20567322]
[101.85912323 -77.87549591]
[101.83580017 -83.55849457]
[104.34040833 -87.62493896]
[103.67062378 -102.60997772]
[102.88929749 -117.58962250]
[101.99648285 -132.56301880]
[101.10366821 -147.53643799]
[92.55868530 -160.85160828]
[99.52472687 -174.01684570]
[98.63191223 -188.99024963]
[84.25532532 -193.92810059]
[72.86604309 -203.99549866]
[66.20082855 -217.65724182]
[65.27609253 -232.83003235]
[70.23284912 -247.20010376]
[80.31522369 -258.57614136]
[93.98572540 -265.22335815]
[109.15971375 -266.12814331]
[123.52325439 -261.15249634]
[134.88601685 -251.05516052]
[141.51525879 -237.37591553]
[142.40007019 -222.20075989]
[137.40553284 -207.84378052]
[127.29326630 -196.49430847]
[113.60531616 -189.88307190]
[114.49813080 -174.90965271]
[122.97925568 -162.66548157]
[116.07707214 -148.42924500]
[116.96988678 -133.45584106]
[117.86270142 -118.48243713]
[121.39875793 -111.99258423]
[118.65566254 -103.27976990]
[119.32544708 -88.29473114]
[120.21826172 -73.32131958]
[121.33390808 -58.36286926]
[122.44956207 -43.40441513]
[123.56520844 -28.44596100]
[127.19749451 -22.00947952]
[124.58441925 -13.25678444]
[131.21839905 -26.71004868]
[142.21484375 -36.91192627]
[156.12696838 -42.52017975]
[171.12442017 -42.79695129]
[185.23400879 -37.70582199]
[196.59938049 -27.91662407]
[203.72521973 -14.71728992]
[205.67399597 0.15557905]
[202.18933105 14.74520206]
[193.72967529 27.13206291]
[181.40806580 35.68645859]
[166.84559631 39.28290558]
[151.95820618 37.44823837]
[138.70462036 30.42383003]
[128.82855225 19.13386917]
[123.62895966 5.06139565]
[121.18323517 19.86066628]
[118.73751068 34.65993881]
[116.29177856 49.45920944]
[113.84605408 64.25847626]
[120.63322449 74.27151489]
[118.71676636 86.62104797]
[108.58509827 94.60303497]
[110.36550140 102.46450806]
[105.76816559 109.56347656]
[102.88288879 124.28337097]
[99.99761963 139.00326538]
[109.09435272 127.07642365]
[120.44395447 117.26894379]
[133.56382751 109.99785614]
[147.89611816 105.57231140]
[162.83142090 104.18050385]
[177.73464966 105.88159943]
[191.97212219 110.60327148]
[204.93846130 118.14476013]
[216.08233643 128.18537903]
[224.92988586 140.29821777]
[231.10491943 153.96821594]
[234.34487915 168.61413574]
[234.51199341 183.61320496]
[231.59913635 198.32765198]
[225.73019409 212.13183594]
[217.15470886 224.43879700]
[206.23730469 234.72520447]
[193.44219971 242.55369568]
[179.31344604 247.59140015]
[164.45181274 249.62411499]
[149.48922729 248.56539917]
[135.06188965 244.46026611]
[121.78327179 237.48329163]
[110.21798706 227.93110657]
[100.85778809 216.20989990]
[94.10067749 202.81805420]
[90.23397827 188.32501221]
[89.42209625 173.34700012]
[91.69960785 158.52072144]
[83.10104370 170.81156921]
[74.50247955 183.10240173]
[65.90391541 195.39323425]
[57.30535126 207.68408203]
[55.73443222 223.42710876]
[42.09881973 229.42037964]
[33.59199524 241.77488708]
[25.17737579 254.19238281]
[16.76275635 266.60989380]
[19.53622818 281.93780518]
[10.82571602 294.41104126]
[-3.80421948 296.96066284]
[-12.21883774 309.37817383]
[-13.07424068 315.93408203]
[-16.58505821 320.40298462]
[-21.07344246 322.03500366]
[-29.85404587 334.19644165]
[-38.63464737 346.35791016]
[-47.32447433 358.58438110]
[-55.92303848 370.87521362]
[-64.52159882 383.16607666]
[-53.18591690 393.01086426]
[-42.94141388 403.98663330]
[-33.90032959 415.97314453]
[-26.16172791 428.83908081]
[-19.81039429 442.44342041]
[-14.91591740 456.63714600]
[-11.53192616 471.26473999]
[-9.69549656 486.16592407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 202]
[51 201]
[52 200]
[54 199]
[55 198]
[56 197]
[57 194]
[58 193]
[61 190]
[62 189]
[63 188]
[65 187]
[67 185]
[68 184]
[69 183]
[70 182]
[71 181]
[72 152]
[73 151]
[74 150]
[75 148]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 125]
[83 123]
[84 122]
[85 121]
[86 120]
[89 119]
[90 118]
[91 116]
[92 115]
[93 114]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
