%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[127.96505737 491.78042603]
[116.58583069 481.83032227]
[108.64640808 468.96731567]
[104.85276794 454.33517456]
[105.54222870 439.23495483]
[110.65348816 425.00939941]
[119.73205566 412.92343140]
[131.97067261 404.05169678]
[146.28108215 399.18307495]
[145.83448792 384.18972778]
[145.38787842 369.19638062]
[144.94126892 354.20303345]
[144.49465942 339.20968628]
[143.04524231 324.27987671]
[138.85321045 318.19311523]
[140.67498779 309.24218750]
[138.44987488 294.40814209]
[136.22474670 279.57409668]
[126.68507385 268.13540649]
[132.28964233 253.34014893]
[130.06451416 238.50610352]
[126.96041107 223.83079529]
[116.12905884 213.60676575]
[119.93577576 198.25035095]
[115.96367645 183.78582764]
[111.99158478 169.32130432]
[108.01948547 154.85676575]
[103.93981934 140.42222595]
[99.75280762 126.01844025]
[86.98476410 122.53050995]
[77.58460236 113.21249390]
[73.98473358 100.47556305]
[77.11668396 87.61557007]
[86.17001343 77.96022034]
[82.19792175 63.49569702]
[78.22582245 49.03117371]
[73.79804993 44.12135696]
[72.68202209 38.54896927]
[74.35767365 34.07669067]
[70.81800079 19.50031662]
[67.27832794 4.92394114]
[63.73865509 -9.65243435]
[60.19898224 -24.22880936]
[56.65930939 -38.80518341]
[53.11963654 -53.38156128]
[49.57996368 -67.95793915]
[46.04029465 -82.53430939]
[42.50062180 -97.11068726]
[38.96094894 -111.68706512]
[35.42127609 -126.26343536]
[24.64595032 -137.84803772]
[29.16137886 -152.04170227]
[18.57258034 -159.40649414]
[15.92446232 -171.62005615]
[22.10361481 -182.01931763]
[18.78135490 -196.64678955]
[8.17970181 -208.39053345]
[12.90595150 -222.51539612]
[9.58369255 -237.14285278]
[6.26143265 -251.77030945]
[2.93917322 -266.39776611]
[-7.66248035 -278.14151001]
[-2.93623042 -292.26638794]
[-6.25849009 -306.89382935]
[-9.58074951 -321.52130127]
[-21.42244530 -323.57617188]
[-31.84762573 -329.48660278]
[-39.64668655 -338.54000854]
[-43.92379761 -349.66067505]
[-44.19975281 -361.53771973]
[-40.46556091 -372.77935791]
[-33.18076324 -382.07623291]
[-23.21700478 -388.35379028]
[-25.88280106 -403.11499023]
[-28.54859543 -417.87622070]
[-31.21439171 -432.63745117]
[-33.88018799 -447.39865112]
[-36.54598236 -462.15988159]
[-39.54075623 -476.85787964]
[-42.86301804 -491.48532104]
[-46.18527603 -506.11279297]
[-61.21195602 -505.45043945]
[-76.11538696 -507.48208618]
[-90.41648865 -512.14239502]
[-103.65553284 -519.28149414]
[-115.40694427 -528.67004395]
[-125.29296875 -540.00610352]
[-132.99580383 -552.92529297]
[-138.26783752 -567.01239014]
[-140.93959045 -581.81445312]
[-140.92518616 -596.85571289]
[-138.22508240 -611.65264893]
[-132.92608643 -625.72961426]
[-125.19851685 -638.63403320]
[-115.29080200 -649.95111084]
[-103.52142334 -659.31713867]
[-90.26873016 -666.43090820]
[-75.95873260 -671.06378174]
[-61.05143356 -673.06689453]
[-46.02605057 -672.37573242]
[-31.36558533 -669.01263428]
[-17.54130745 -663.08563232]
[-4.99761343 -654.78533936]
[5.86227036 -644.37847900]
[14.68924332 -632.19964600]
[21.19955444 -618.64025879]
[25.18392372 -604.13635254]
[26.51427078 -589.15399170]
[25.14783096 -574.17492676]
[21.12853050 -559.68060303]
[14.58557034 -546.13702393]
[5.72928095 -533.97949219]
[-5.15564394 -523.59881592]
[-17.71929932 -515.32873535]
[-31.55781555 -509.43505859]
[-28.23555565 -494.80758667]
[-24.91329765 -480.18014526]
[-22.14070702 -478.00180054]
[-20.28545761 -474.37234497]
[-20.01810646 -469.73748779]
[-21.78476524 -464.82565308]
[-19.11897087 -450.06445312]
[-16.45317459 -435.30322266]
[-13.78737926 -420.54202271]
[-11.12158394 -405.78079224]
[-8.45578766 -391.01959229]
[8.86140823 -385.68243408]
[21.12950134 -372.23040771]
[24.88819504 -354.32952881]
[19.01231003 -336.91787720]
[5.04671049 -324.84356689]
[8.36896992 -310.21609497]
[11.69122982 -295.58865356]
[22.05525398 -284.89114380]
[17.56663322 -269.72003174]
[20.88889313 -255.09257507]
[24.21115303 -240.46511841]
[27.53341103 -225.83764648]
[37.89743423 -215.14016724]
[33.40881729 -199.96903992]
[36.73107529 -185.34158325]
[49.33029556 -173.12574768]
[43.73775482 -155.58137512]
[54.25989914 -145.03938293]
[49.99765015 -129.80311584]
[53.53732300 -115.22673798]
[57.07699585 -100.65036011]
[60.61666870 -86.07398224]
[64.15634155 -71.49761200]
[67.69601440 -56.92123413]
[71.23568726 -42.34485626]
[74.77536011 -27.76848221]
[78.31503296 -13.19210720]
[81.85470581 1.38426852]
[85.39437866 15.96064377]
[88.93405151 30.53701973]
[92.69034576 45.05907822]
[96.66244507 59.52360153]
[100.63454437 73.98812866]
[115.95037079 79.44261932]
[125.03876495 92.92324066]
[124.35137939 109.16681671]
[114.15658569 121.83142853]
[118.34359741 136.23521423]
[123.74404907 143.60221863]
[122.48400879 150.88467407]
[126.45610809 165.34919739]
[130.42820740 179.81372070]
[134.40029907 194.27824402]
[145.51576233 205.53689575]
[141.42494202 219.85870361]
[147.95756531 206.35592651]
[161.12443542 199.17028809]
[176.01463318 200.98185730]
[187.07449341 211.11494446]
[190.17895508 225.79017639]
[184.17013550 239.53404236]
[171.28915405 247.22042847]
[156.34033203 245.98249817]
[144.89855957 236.28099060]
[147.12368774 251.11503601]
[156.82250977 263.61474609]
[151.05879211 277.34896851]
[153.28390503 292.18301392]
[155.50903320 307.01705933]
[157.84451294 321.83413696]
[165.11940002 308.71636963]
[178.28068542 301.52047729]
[193.25019836 302.47622681]
[205.38949585 311.28747559]
[210.93705750 325.22390747]
[208.17391968 339.96722412]
[197.95628357 350.94900513]
[183.45018005 354.76644897]
[169.15048218 350.23669434]
[159.48800659 338.76306152]
[159.93461609 353.75640869]
[160.38122559 368.74975586]
[160.82783508 383.74310303]
[161.27442932 398.73648071]
[175.84925842 402.74468994]
[188.59423828 410.87222290]
[198.37608337 422.39642334]
[204.32499695 436.29254150]
[205.91201782 451.32492065]
[202.99601746 466.15692139]
[195.83630371 479.46969604]
[185.06948853 490.07946777]
[171.65295410 497.04281616]
[156.77970886 499.74057007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 200]
[10 199]
[11 198]
[12 197]
[13 196]
[14 186]
[16 185]
[17 184]
[18 183]
[20 181]
[21 180]
[22 171]
[24 169]
[25 168]
[26 167]
[27 166]
[28 164]
[29 163]
[34 159]
[35 158]
[36 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[52 143]
[55 141]
[56 140]
[58 138]
[59 137]
[60 136]
[61 135]
[63 133]
[64 132]
[65 131]
[73 126]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 117]
[80 116]
[81 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
