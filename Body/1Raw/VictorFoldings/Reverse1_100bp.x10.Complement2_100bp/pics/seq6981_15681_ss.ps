%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[160.99954224 437.20358276]
[168.52052307 424.10354614]
[179.42851257 413.65402222]
[192.83926392 406.70214844]
[189.95399475 391.98226929]
[187.06872559 377.26235962]
[184.18344116 362.54248047]
[181.29817200 347.82257080]
[171.25724792 336.82125854]
[176.19558716 321.79049683]
[172.00857544 307.38671875]
[166.55320740 293.41394043]
[161.09785461 279.44113159]
[155.73696899 274.35363770]
[155.66699219 265.21948242]
[150.42027283 251.16699219]
[134.42352295 248.88311768]
[121.68799591 238.78546143]
[115.74855804 223.55589294]
[118.31450653 207.31669617]
[128.77903748 194.51492310]
[123.32368469 180.54212952]
[117.86832428 166.56933594]
[112.41297150 152.59652710]
[106.95761108 138.62373352]
[101.50225830 124.65093994]
[96.04689789 110.67813873]
[91.64409637 125.01743317]
[80.25682068 134.78114319]
[65.41355896 136.94387817]
[51.71364212 130.83551025]
[43.40214539 118.34874725]
[43.05447769 103.35278320]
[50.77836227 90.49425507]
[64.18047333 83.75753784]
[79.10801697 85.23006439]
[90.93569183 94.45576477]
[87.39601898 79.87939453]
[83.85634613 65.30301666]
[80.31667328 50.72664261]
[76.23700714 36.29208755]
[71.62300110 22.01935577]
[60.01589584 11.26827526]
[63.46313858 -3.22192025]
[58.84912872 -17.49465370]
[54.23512268 -31.76738739]
[49.62111282 -46.04011917]
[44.68951797 -60.20625687]
[39.44279861 -74.25872803]
[33.88357544 -88.19052887]
[28.01461411 -101.99470520]
[22.14565277 -115.79888153]
[16.27669144 -129.60305786]
[10.40773106 -143.40722656]
[4.53877020 -157.21141052]
[-1.33019042 -171.01557922]
[-13.85017300 -180.68826294]
[-11.70942593 -195.42822266]
[-25.99996185 -190.83520508]
[-40.64895630 -187.56072998]
[-55.53502655 -185.63194275]
[-70.53481293 -185.06483459]
[-85.52402496 -185.86407471]
[-100.37844849 -188.02307129]
[-114.97499847 -191.52392578]
[-129.19271851 -196.33761597]
[-142.91380310 -202.42427063]
[-156.02453613 -209.73342896]
[-168.41627502 -218.20454407]
[-179.98635864 -227.76742554]
[-190.63890076 -238.34280396]
[-200.28561401 -249.84307861]
[-208.84657288 -262.17291260]
[-216.25083923 -275.23019409]
[-222.43705750 -288.90664673]
[-227.35395813 -303.08901978]
[-230.96081543 -317.65972900]
[-233.22772217 -332.49807739]
[-234.13589478 -347.48107910]
[-233.67782593 -362.48458862]
[-231.85728455 -377.38427734]
[-228.68937683 -392.05670166]
[-224.20034790 -406.38024902]
[-218.42739868 -420.23623657]
[-211.41835022 -433.50982666]
[-203.23130798 -446.09106445]
[-193.93409729 -457.87567139]
[-183.60377502 -468.76602173]
[-172.32592773 -478.67184448]
[-160.19400024 -487.51107788]
[-147.30854797 -495.21044922]
[-133.77633667 -501.70614624]
[-119.70949554 -506.94439697]
[-105.22459412 -510.88177490]
[-90.44165802 -513.48559570]
[-75.48318481 -514.73437500]
[-60.47313309 -514.61773682]
[-45.53588486 -513.13659668]
[-30.79520798 -510.30325317]
[-16.37325859 -506.14123535]
[-2.38954067 -500.68496704]
[11.04006863 -493.97967529]
[23.80428696 -486.08093262]
[35.79734039 -477.05419922]
[46.91985321 -466.97427368]
[57.07965469 -455.92468262]
[66.19255829 -443.99697876]
[74.18305206 -431.28997803]
[80.98491669 -417.90902710]
[86.54178619 -403.96499634]
[90.80763245 -389.57339478]
[93.74708557 -374.85351562]
[95.33580017 -359.92733765]
[95.56060028 -344.91851807]
[94.41963959 -329.95141602]
[91.92235565 -315.15011597]
[88.08945465 -300.63723755]
[82.95269012 -286.53302002]
[76.55463409 -272.95434570]
[68.94829559 -260.01376343]
[60.19671249 -247.81846619]
[50.37239838 -236.46954346]
[39.55677032 -226.06101990]
[27.83944130 -216.67915344]
[15.31751537 -208.40167236]
[2.09475112 -201.29718018]
[14.19494629 -192.61187744]
[12.47398663 -176.88455200]
[18.34294701 -163.08036804]
[24.21190834 -149.27619934]
[30.08086967 -135.47201538]
[35.94982910 -121.66783905]
[41.81879044 -107.86366272]
[47.68775177 -94.05948639]
[50.80333710 -92.40858459]
[53.27408218 -89.16660309]
[54.36088181 -84.65304565]
[53.49526978 -79.50544739]
[58.74198914 -65.45297241]
[61.78075027 -63.66460037]
[64.10427094 -60.31552505]
[64.98844147 -55.75794601]
[63.89384460 -50.65412903]
[68.50785828 -36.38139725]
[73.12186432 -22.10866356]
[77.73587036 -7.83592939]
[89.01295471 1.89426947]
[85.89572906 17.40534592]
[90.50974274 31.67807961]
[99.55950165 19.71556473]
[114.54993439 19.17977905]
[124.43064117 30.46568298]
[121.91793823 45.25373077]
[108.86408997 52.64271927]
[94.89305115 47.18696976]
[98.43272400 61.76334381]
[101.97239685 76.33972168]
[105.51206970 90.91609955]
[110.01969910 105.22278595]
[115.47505188 119.19557953]
[120.93041229 133.16838074]
[126.38576508 147.14117432]
[131.84112549 161.11396790]
[137.29647827 175.08677673]
[142.75183105 189.05957031]
[156.67066956 190.44844055]
[168.57638550 197.66441345]
[176.17509460 209.25051880]
[178.03160095 222.91442871]
[173.84005737 235.98193359]
[164.47274780 245.92027283]
[169.71946716 259.97274780]
[175.07064819 273.98577881]
[180.52601624 287.95855713]
[185.98136902 301.93136597]
[188.96896362 287.23190308]
[197.96946716 275.23226929]
[211.24499512 268.24942017]
[226.23226929 267.63162231]
[240.03747559 273.49816895]
[249.99504089 284.71630859]
[254.18232727 299.12002563]
[251.79081726 313.92816162]
[243.28228760 326.28149414]
[230.29960632 333.79479980]
[215.34950256 335.01739502]
[201.31863403 329.71316528]
[190.91546631 318.90524292]
[201.16276550 330.95941162]
[196.01806641 344.93731689]
[198.90333557 359.65719604]
[201.78860474 374.37710571]
[204.67388916 389.09698486]
[207.55915833 403.81686401]
[222.60198975 405.19149780]
[236.64770508 410.74981689]
[248.55767822 420.04116821]
[257.36639404 432.31240845]
[262.35980225 446.56872559]
[263.13308716 461.65441895]
[259.62356567 476.34658813]
[252.11575317 489.45422363]
[241.21826172 499.91467285]
[227.81451416 506.88000488]
[212.99107361 509.78558350]
[197.94961548 508.39584351]
[183.90950012 502.82345581]
[172.00888062 493.52011108]
[163.21247864 481.24005127]
[158.23339844 466.97872925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 194]
[5 193]
[6 192]
[7 191]
[8 190]
[10 188]
[11 175]
[12 174]
[13 173]
[15 172]
[16 171]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 149]
[42 148]
[44 146]
[45 145]
[46 144]
[47 143]
[48 139]
[49 138]
[50 134]
[51 133]
[52 132]
[53 131]
[54 130]
[55 129]
[56 128]
[58 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
