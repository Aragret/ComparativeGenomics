%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[33.84920502 620.52795410]
[45.77623749 610.60198975]
[44.66058731 595.64349365]
[43.54494095 580.68505859]
[42.42929077 565.72662354]
[41.31364441 550.76812744]
[40.19799423 535.80969238]
[39.08234406 520.85125732]
[30.66616249 533.26770020]
[16.91537666 539.26068115]
[2.09081841 536.97320557]
[-9.21396255 527.11407471]
[-13.49605656 512.73828125]
[-9.42860985 498.30029297]
[1.72803497 488.27386475]
[16.51687050 485.76580811]
[30.35541344 491.55328369]
[38.95572662 503.84320068]
[39.84854126 488.86978149]
[40.74135971 473.89639282]
[41.63417435 458.92297363]
[29.72541428 468.04336548]
[14.83806610 466.20846558]
[5.50027704 454.46939087]
[7.06115723 439.55084229]
[18.62656403 429.99880981]
[33.57130814 431.28512573]
[43.33406067 442.67205811]
[45.55917740 427.83801270]
[47.78429413 413.00396729]
[42.02057648 399.26974487]
[51.71940613 386.77001953]
[53.94452286 371.93597412]
[48.18080139 358.20175171]
[57.87963486 345.70202637]
[60.10475159 330.86798096]
[62.32986832 316.03393555]
[64.55498505 301.19989014]
[66.78010559 286.36584473]
[69.00521851 271.53182983]
[71.23033905 256.69778442]
[73.45545197 241.86372375]
[75.68057251 227.02967834]
[77.90568542 212.19563293]
[80.13080597 197.36160278]
[78.01431274 190.28047180]
[82.50106812 182.32391357]
[84.94679260 167.52464294]
[86.95080566 152.65911865]
[80.57957458 139.19595337]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[98.49185944 42.32664490]
[100.05237579 27.40804100]
[101.50180054 12.47823238]
[102.84003448 -2.46195316]
[88.37892914 -9.14897633]
[77.10085297 -20.36460876]
[70.35644531 -34.73977280]
[68.94451141 -50.52860641]
[73.01744843 -65.82049561]
[82.06507111 -78.77127838]
[94.97837830 -87.82564545]
[110.18550873 -91.90389252]
[111.30116272 -106.86235046]
[112.41680908 -121.82080078]
[113.53245544 -136.77925110]
[114.64810944 -151.73771667]
[115.76375580 -166.69616699]
[115.87541962 -181.69573975]
[114.98260498 -196.66915894]
[114.08979034 -211.64256287]
[113.19697571 -226.61596680]
[104.65199280 -239.93113708]
[111.61803436 -253.09637451]
[110.72521973 -268.06979370]
[109.83240509 -283.04318237]
[108.93958282 -298.01660156]
[108.04676819 -312.98999023]
[107.15395355 -327.96340942]
[97.26329803 -316.68621826]
[82.45742035 -314.28076172]
[69.50538635 -321.84680176]
[64.32868195 -335.92520142]
[69.29402161 -350.07955933]
[82.13133240 -357.83865356]
[96.97155762 -355.65515137]
[107.03065491 -344.52560425]
[107.70043945 -359.51062012]
[100.58706665 -373.64251709]
[108.88494873 -386.01162720]
[109.33155823 -401.00497437]
[109.55488586 -416.00329590]
[109.77821350 -431.00164795]
[95.69759369 -436.66738892]
[84.61718750 -447.03988647]
[78.03551483 -460.71636963]
[76.84271240 -475.84719849]
[81.20007324 -490.38601685]
[90.51832581 -502.36663818]
[103.53723145 -510.16870117]
[118.49610138 -512.73712158]
[133.37187195 -509.72445679]
[146.15270996 -501.53820801]
[155.11010742 -489.28549194]
[159.03266907 -474.62338257]
[157.38989258 -459.53475952]
[150.40394592 -446.06030273]
[139.01962280 -436.02230835]
[124.77655029 -430.77832031]
[124.55322266 -415.77996826]
[124.32989502 -400.78164673]
[126.95446014 -396.79156494]
[127.10035706 -391.11038208]
[123.86998749 -385.34182739]
[131.03126526 -372.28176880]
[122.68547821 -358.84085083]
[122.01569366 -343.85580444]
[122.12735748 -328.85623169]
[123.02017212 -313.88281250]
[123.91299438 -298.90942383]
[124.80580902 -283.93600464]
[125.69862366 -268.96258545]
[126.59143829 -253.98919678]
[135.07255554 -241.74501038]
[128.17037964 -227.50877380]
[129.06320190 -212.53536987]
[129.95600891 -197.56196594]
[130.84883118 -182.58856201]
[139.44894409 -194.87831116]
[153.28742981 -200.66590881]
[168.07629395 -198.15798950]
[179.23303223 -188.13166809]
[183.30061340 -173.69371033]
[179.01866150 -159.31787109]
[167.71397400 -149.45864868]
[152.88943481 -147.17106628]
[139.13859558 -153.16390991]
[130.72221375 -165.58052063]
[129.60656738 -150.62205505]
[128.49090576 -135.66360474]
[127.37525940 -120.70515442]
[126.25961304 -105.74670410]
[125.14396667 -90.78824615]
[138.22045898 -85.36434174]
[148.99891663 -76.15315247]
[156.41694641 -64.04518890]
[159.73797607 -50.21730423]
[158.62445068 -36.01835632]
[153.17199707 -22.83759117]
[143.90148926 -11.96875381]
[131.70919800 -4.48307610]
[117.78022003 -1.12371898]
[116.44198608 13.81646633]
[118.97620392 20.75905418]
[114.97098541 28.96856308]
[113.41046143 43.88716888]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[110.88880920 142.36637878]
[101.86940765 154.21963501]
[103.77756500 158.12001038]
[104.29341888 162.03134155]
[103.58451843 165.51455688]
[101.94374084 168.23016357]
[99.74606323 169.97036743]
[97.30033875 184.76965332]
[94.96485138 199.58671570]
[92.73973083 214.42076111]
[90.51461792 229.25480652]
[88.28949738 244.08885193]
[86.06437683 258.92288208]
[83.83926392 273.75692749]
[81.61414337 288.59097290]
[79.38903046 303.42501831]
[77.16390991 318.25906372]
[74.93879700 333.09310913]
[72.71367645 347.92715454]
[78.31823730 362.72241211]
[68.77856445 374.16110229]
[66.55345154 388.99514771]
[72.15801239 403.79040527]
[62.61833572 415.22909546]
[60.39321899 430.06314087]
[58.16810226 444.89718628]
[56.60757828 459.81579590]
[55.71476364 474.78918457]
[54.82194901 489.76260376]
[53.92913055 504.73599243]
[54.04079819 519.73559570]
[55.15644836 534.69403076]
[56.27209473 549.65252686]
[57.38774490 564.61096191]
[58.50339508 579.56939697]
[59.61904144 594.52783203]
[60.73469162 609.48632812]
[74.00219727 617.53320312]
[79.97492218 631.85473633]
[76.35623169 646.94396973]
[64.53757477 656.99877930]
[49.06348038 658.15289307]
[35.88404465 649.96252441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[7 199]
[8 198]
[18 197]
[19 196]
[20 195]
[21 194]
[28 193]
[29 192]
[30 191]
[32 189]
[33 188]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[47 175]
[48 174]
[49 169]
[51 167]
[52 166]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 158]
[60 157]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[73 143]
[74 133]
[75 132]
[76 131]
[77 130]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
[92 122]
[93 121]
[95 119]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
