%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[120.20836639 518.24908447]
[109.96715546 507.20077515]
[102.44165039 494.15029907]
[98.00932312 479.75231934]
[96.89249420 464.72897339]
[99.14718628 449.83386230]
[104.66030884 435.81414795]
[113.15532684 423.37298584]
[124.20612335 413.13442993]
[137.25840759 405.61209106]
[151.65747070 401.18325806]
[150.54182434 386.22479248]
[149.42617798 371.26635742]
[148.31053162 356.30789185]
[147.19488525 341.34942627]
[146.07922363 326.39099121]
[144.96357727 311.43252563]
[141.75030518 296.78073120]
[130.05000305 287.56381226]
[132.47151184 271.92901611]
[127.22478485 257.87652588]
[121.97806549 243.82406616]
[116.73135376 229.77159119]
[111.48463440 215.71911621]
[107.58864594 212.95681763]
[105.38655090 207.71774292]
[106.29772949 201.16937256]
[101.47173309 186.96690369]
[96.64573669 172.76445007]
[94.54331207 187.61637878]
[88.56247711 201.37246704]
[79.13499451 213.03961182]
[66.94144440 221.77560425]
[52.86208725 226.94973755]
[37.91332626 228.18852234]
[23.17432594 225.40251160]
[9.70910549 218.79283142]
[-1.51026833 208.83663940]
[-9.67385960 196.25270081]
[-14.19233227 181.94943237]
[-14.73949242 166.95941162]
[-11.27584171 152.36479187]
[-4.05142260 139.21914673]
[6.41222668 128.47149658]
[19.35972786 120.89771271]
[33.85638809 117.04454803]
[48.85567856 117.19017792]
[63.27479553 121.32407379]
[76.07279968 129.14782715]
[86.32580566 140.09661865]
[93.29402161 153.38113403]
[93.07069397 138.38279724]
[92.84736633 123.38446045]
[92.62403870 108.38612366]
[92.28906250 93.38986206]
[91.50774384 78.41022491]
[90.39208984 63.45177078]
[89.27644348 48.49331665]
[88.16079712 33.53486252]
[73.30643463 30.99841881]
[59.49919128 24.98406792]
[47.53993225 15.84539795]
[38.12119293 4.11707640]
[31.78708267 -9.51642895]
[28.90185928 -24.26079178]
[29.62897491 -39.25811005]
[33.92182541 -53.63682556]
[41.52671432 -66.56236267]
[51.99783707 -77.28558350]
[64.72341919 -85.18618774]
[78.96144867 -89.80863190]
[77.84580231 -104.76708221]
[76.73014832 -119.72554016]
[65.11307526 -110.23641205]
[50.41956711 -113.25316620]
[43.48113632 -126.55197144]
[49.41253281 -140.32943726]
[63.84135437 -144.42932129]
[76.13039398 -135.83079529]
[76.13039398 -150.83079529]
[76.13039398 -165.83079529]
[76.13039398 -180.83079529]
[76.13039398 -195.83079529]
[76.13039398 -210.83079529]
[76.13039398 -225.83079529]
[76.13039398 -240.83079529]
[76.13039398 -255.83079529]
[76.13039398 -270.83078003]
[68.39308929 -284.63098145]
[76.13039398 -297.35824585]
[76.13039398 -312.35824585]
[76.13039398 -327.35824585]
[76.13039398 -342.35824585]
[76.13039398 -357.35824585]
[76.13039398 -372.35824585]
[76.13039398 -387.35824585]
[61.73722076 -392.01568604]
[49.48891830 -400.89453125]
[40.58544540 -413.12496948]
[35.89908218 -427.50875854]
[35.88894653 -442.63671875]
[40.55603027 -457.02676392]
[49.44309998 -469.26910400]
[61.67949295 -478.16439819]
[76.06641388 -482.84112549]
[91.19437408 -482.84112549]
[105.58129120 -478.16439819]
[117.81768799 -469.26910400]
[126.70475769 -457.02676392]
[131.37184143 -442.63671875]
[131.36170959 -427.50875854]
[126.67533875 -413.12496948]
[117.77186584 -400.89453125]
[105.52356720 -392.01568604]
[91.13039398 -387.35824585]
[91.13039398 -372.35824585]
[91.13039398 -357.35824585]
[91.13039398 -342.35824585]
[91.13039398 -327.35824585]
[91.13039398 -312.35824585]
[91.13039398 -297.35824585]
[98.86769104 -284.63098145]
[91.13039398 -270.83078003]
[91.13039398 -255.83079529]
[91.13039398 -240.83079529]
[91.13039398 -225.83079529]
[91.13039398 -210.83079529]
[91.13039398 -195.83079529]
[91.13039398 -180.83079529]
[91.13039398 -165.83079529]
[91.13039398 -150.83079529]
[91.13039398 -135.83079529]
[91.68860626 -120.84118652]
[92.80425262 -105.88272858]
[93.91989899 -90.92427826]
[108.68610382 -88.46506500]
[122.44287872 -82.53959656]
[134.38883972 -73.48831177]
[143.82698059 -61.83390045]
[150.20529175 -48.25107574]
[153.14907837 -33.52754211]
[152.48297119 -18.51831055]
[148.24136353 -4.09603310]
[140.66661072 8.89971638]
[130.19531250 19.71132851]
[117.43300629 27.70731926]
[103.11924744 32.41921616]
[104.23489380 47.37766647]
[105.35054779 62.33612061]
[106.46619415 77.29457092]
[108.88497162 79.86008453]
[110.18129730 83.72461700]
[109.75815582 88.34784698]
[107.28240967 92.94325256]
[110.65113068 100.26611328]
[107.62237549 108.16278839]
[107.84570312 123.16113281]
[108.06903076 138.15946960]
[108.29235840 153.15780640]
[110.84819031 167.93846130]
[115.67418671 182.14091492]
[120.50019073 196.34336853]
[125.53710175 210.47239685]
[130.78382874 224.52487183]
[136.03053284 238.57734680]
[141.27725220 252.62980652]
[146.52397156 266.68228149]
[158.59956360 276.90435791]
[155.80278015 291.53402710]
[157.61885071 276.64437866]
[163.68818665 262.92712402]
[173.48571777 251.56892395]
[186.16386414 243.55241394]
[200.62585449 239.57109070]
[215.62057495 239.96937561]
[229.85081482 244.71281433]
[242.08552551 253.39103699]
[251.26629639 265.25332642]
[256.59887695 279.27343750]
[257.62197876 294.23849487]
[254.24705505 308.85388184]
[246.76608276 321.85525513]
[235.82624817 332.11779785]
[222.37394714 338.75375366]
[207.57295227 341.18899536]
[192.70368958 339.21292114]
[179.05250549 332.99639893]
[167.80033875 323.07730103]
[159.92202759 310.31689453]
[161.03768921 325.27532959]
[162.15333557 340.23379517]
[163.26898193 355.19223022]
[164.38462830 370.15069580]
[165.50027466 385.10916138]
[166.61592102 400.06759644]
[181.51266479 402.31146240]
[195.53640747 407.81439209]
[207.98374939 416.30038452]
[218.23030090 427.34371948]
[225.76214600 440.39053345]
[230.20144653 454.78637695]
[231.32554626 469.80917358]
[229.07807922 484.70535278]
[223.57174683 498.72778320]
[215.08276367 511.17303467]
[204.03692627 521.41693115]
[190.98829651 528.94561768]
[176.59136963 533.38140869]
[161.56831360 534.50189209]
[146.67266846 532.25079346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[16 190]
[17 189]
[18 169]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[27 162]
[28 161]
[29 160]
[51 159]
[52 158]
[53 157]
[54 156]
[55 154]
[56 150]
[57 149]
[58 148]
[59 147]
[71 135]
[72 134]
[73 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
