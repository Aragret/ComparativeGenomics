%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[40.84536743 549.14282227]
[38.66182327 564.03631592]
[33.52460480 578.18530273]
[25.64407921 591.01037598]
[15.34295177 601.98632812]
[3.04304552 610.66369629]
[-10.75196648 616.68719482]
[-25.47718620 619.81018066]
[-40.52962875 619.90466309]
[-55.29290009 616.96685791]
[-69.16245270 611.11706543]
[-81.57035065 602.59478760]
[-92.00848389 591.74902344]
[-100.04941559 579.02392578]
[-105.36389160 564.94055176]
[-107.73426819 550.07562256]
[-107.06349182 535.03784180]
[-103.37902832 520.44299316]
[-96.83175659 506.88873291]
[-87.68977356 494.93008423]
[-76.32744598 485.05679321]
[-63.21005249 477.67309570]
[-48.87474060 473.08139038]
[-33.90853500 471.46969604]
[-18.92428970 472.90402222]
[-14.52329159 458.56417847]
[-10.12229347 444.22433472]
[-5.72129536 429.88449097]
[-1.32029724 415.54461670]
[3.08070087 401.20477295]
[7.48169899 386.86492920]
[11.77582264 372.49273682]
[15.96283340 358.08892822]
[20.14984512 343.68515015]
[16.27270126 329.30401611]
[27.55455780 318.21212769]
[31.74156952 303.80834961]
[35.92858124 289.40457153]
[40.11559296 275.00079346]
[44.30260468 260.59698486]
[39.20682144 243.80413818]
[52.60489273 231.17192078]
[56.57698822 216.70739746]
[55.03524017 212.18721008]
[56.31667709 206.65051270]
[60.88867569 201.87471008]
[65.28967285 187.53486633]
[69.69067383 173.19500732]
[74.09167480 158.85516357]
[66.90807343 145.85780334]
[71.16703033 131.25245667]
[84.84857178 123.80577087]
[89.24957275 109.46591949]
[86.30645752 95.79735565]
[96.41058350 86.13307953]
[100.81157684 71.79323578]
[100.33775330 62.67110062]
[105.38632202 57.27353668]
[102.26910400 41.76245880]
[113.54618073 32.03225708]
[118.16018677 17.75952530]
[122.66781616 3.45283890]
[127.06881714 -10.88700867]
[131.14848328 -25.32156181]
[134.90478516 -39.84362030]
[138.66108704 -54.36568069]
[142.41738892 -68.88774109]
[146.17369080 -83.40979767]
[149.92999268 -97.93185425]
[145.89505005 -113.22989655]
[156.57298279 -123.61406708]
[160.32928467 -138.13612366]
[164.08558655 -152.65818787]
[167.84188843 -167.18023682]
[171.59819031 -181.70230103]
[175.35449219 -196.22436523]
[164.18511963 -203.70127869]
[155.87724304 -214.23818970]
[151.22833252 -226.80097961]
[150.67761230 -240.16224670]
[154.26464844 -253.02114868]
[161.62687683 -264.13006592]
[172.03611755 -272.41567993]
[184.47062683 -277.08267212]
[197.71542358 -277.69000244]
[201.90243530 -292.09378052]
[206.08944702 -306.49755859]
[210.27645874 -320.90136719]
[214.46347046 -335.30514526]
[200.63916016 -341.17239380]
[187.60583496 -348.63351440]
[175.54646301 -357.58383179]
[164.63034058 -367.89764404]
[155.01071167 -379.43017578]
[146.82263184 -392.01953125]
[140.18103027 -405.48895264]
[135.17916870 -419.64938354]
[131.88725281 -434.30200195]
[130.35148621 -449.24114990]
[130.59344482 -464.25704956]
[132.60972595 -479.13897705]
[136.37202454 -493.67791748]
[141.82751465 -507.66986084]
[148.89961243 -520.91833496]
[157.48905945 -533.23730469]
[167.47525024 -544.45391846]
[178.71798706 -554.41070557]
[191.05946350 -562.96783447]
[204.32641602 -570.00518799]
[218.33259583 -575.42395020]
[232.88136292 -579.14813232]
[247.76849365 -581.12542725]
[262.78500366 -581.32800293]
[277.72006226 -579.75311279]
[292.36401367 -576.42279053]
[306.51129150 -571.38385010]
[319.96325684 -564.70697021]
[332.53109741 -556.48590088]
[344.03839111 -546.83612061]
[354.32354736 -535.89300537]
[363.24221802 -523.81018066]
[370.66918945 -510.75735474]
[376.50018311 -496.91772461]
[380.65335083 -482.48553467]
[383.07037354 -467.66345215]
[383.71737671 -452.65954590]
[382.58520508 -437.68441772]
[379.68978882 -422.94830322]
[375.07177734 -408.65808105]
[368.79598999 -395.01437378]
[360.95053101 -382.20867920]
[351.64556885 -370.42083740]
[341.01165771 -359.81628418]
[329.19815063 -350.54388428]
[316.37084961 -342.73382568]
[302.70986938 -336.49575806]
[288.40695190 -331.91723633]
[273.66290283 -329.06253052]
[258.68469238 -327.97174072]
[243.68261719 -328.66015625]
[228.86726379 -331.11813354]
[224.68025208 -316.71435547]
[220.49324036 -302.31054688]
[216.30622864 -287.90676880]
[212.11921692 -273.50299072]
[225.35452271 -263.39941406]
[233.71237183 -248.95544434]
[235.88615417 -232.37277222]
[231.51437378 -216.19163513]
[221.24043274 -202.90171814]
[206.61810303 -194.55906677]
[189.87655640 -192.46806335]
[186.12025452 -177.94599915]
[182.36395264 -163.42393494]
[178.60765076 -148.90188599]
[174.85134888 -134.37982178]
[171.09504700 -119.85776520]
[175.39865112 -105.59844208]
[164.45204163 -94.17556000]
[160.69573975 -79.65349579]
[156.93943787 -65.13143921]
[153.18313599 -50.60937881]
[149.42684937 -36.08731842]
[145.67054749 -21.56525993]
[147.13529968 -18.35795593]
[147.11935425 -14.28183079]
[145.23126221 -10.04055691]
[141.40866089 -6.48601007]
[137.00765991 7.85383701]
[138.05032349 15.17057514]
[132.43292236 22.37353516]
[127.81891632 36.64626694]
[131.26615906 51.13646317]
[119.65905762 61.88754272]
[115.15142822 76.19422913]
[110.75042725 90.53408051]
[113.69354248 104.20264435]
[103.58941650 113.86692047]
[99.18842316 128.20677185]
[106.33704376 142.04638672]
[101.66953278 156.52633667]
[88.43151855 163.25616455]
[84.03051758 177.59600830]
[79.62952423 191.93585205]
[75.22852325 206.27571106]
[71.04151154 220.67948914]
[67.06941986 235.14401245]
[72.75910950 246.71942139]
[69.15296173 258.68518066]
[58.70638657 264.78399658]
[54.51937485 279.18780518]
[50.33236313 293.59158325]
[46.14535141 307.99536133]
[41.95833969 322.39913940]
[45.53600311 337.81051636]
[34.55362701 347.87216187]
[30.36661530 362.27593994]
[26.17960358 376.67974854]
[26.78919601 385.79379272]
[21.82154655 391.26593018]
[17.42054749 405.60577393]
[13.01955032 419.94561768]
[8.61855221 434.28549194]
[4.21755362 448.62533569]
[-0.18344429 462.96517944]
[-4.58444214 477.30502319]
[8.62462902 484.52340698]
[20.11003304 494.25329590]
[29.40144730 506.09619141]
[36.11839676 519.56719971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 200]
[32 198]
[33 197]
[34 196]
[36 194]
[37 193]
[38 192]
[39 191]
[40 190]
[42 187]
[43 186]
[46 185]
[47 184]
[48 183]
[49 182]
[52 179]
[53 178]
[55 176]
[56 175]
[58 174]
[60 172]
[61 171]
[62 169]
[63 168]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[71 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
