%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[124.68003082 785.34497070]
[122.27252960 770.49230957]
[122.71968079 755.45251465]
[126.00532532 740.76910400]
[132.01068115 726.97302246]
[140.51866150 714.56292725]
[151.22171021 703.98742676]
[163.73291016 695.62884521]
[177.60000610 689.78930664]
[174.49589539 675.11395264]
[171.39178467 660.43865967]
[168.28767395 645.76336670]
[165.18356323 631.08807373]
[162.07945251 616.41278076]
[158.97534180 601.73748779]
[155.87123108 587.06213379]
[152.76712036 572.38684082]
[149.66300964 557.71154785]
[146.55889893 543.03625488]
[139.23416138 556.12628174]
[125.66293335 562.51544189]
[110.90695190 559.82080078]
[100.46983337 549.04742432]
[98.24436188 534.21343994]
[105.06058502 520.85156250]
[118.37622070 513.94549561]
[133.22486877 516.07098389]
[144.06890869 526.43634033]
[142.73066711 511.49615479]
[141.39244080 496.55596924]
[140.05419922 481.61578369]
[138.27172852 466.72207642]
[136.04661560 451.88803101]
[133.82150269 437.05398560]
[124.28338623 429.61416626]
[122.30819702 417.27386475]
[129.49337769 406.56237793]
[127.48935699 391.69686890]
[125.48534393 376.83132935]
[123.48133087 361.96578979]
[121.47731781 347.10028076]
[119.47330475 332.23474121]
[108.23422241 325.93295288]
[102.59264374 314.13232422]
[104.81038666 301.04446411]
[114.29871368 291.48486328]
[112.51624298 276.59112549]
[110.73377991 261.69741821]
[98.90252686 252.72206116]
[96.88268280 237.64311218]
[106.37708282 225.29425049]
[104.59461975 210.40054321]
[102.81214905 195.50682068]
[101.02968597 180.61309814]
[99.24722290 165.71939087]
[97.46475220 150.82566833]
[95.68228912 135.93196106]
[93.15136719 133.47700500]
[91.68376923 129.67420959]
[91.90005493 125.03670502]
[94.16812897 120.33532715]
[93.05248260 105.37687683]
[90.91987610 103.19937897]
[89.53243256 100.19779205]
[89.19691467 96.64661407]
[90.11437225 92.92982483]
[92.34281158 89.49951172]
[92.11948395 74.50117493]
[91.89615631 59.50283813]
[91.67282867 44.50450134]
[91.44950104 29.50616455]
[83.50759888 15.82271957]
[91.05455017 2.98166132]
[88.69643402 -0.66433042]
[87.71944427 -4.48663521]
[88.00940704 -8.02941990]
[89.31585693 -10.92075157]
[91.29117584 -12.90978909]
[91.96096039 -27.89482689]
[83.09816742 -44.03584671]
[93.11237335 -58.44704056]
[93.55898285 -73.44039154]
[94.00559235 -88.43373871]
[84.90346527 -104.44101715]
[94.70200348 -118.99971008]
[94.92533112 -133.99804688]
[95.14865875 -148.99638367]
[92.26737213 -154.94699097]
[92.75115204 -160.60940552]
[95.60855865 -164.43618774]
[96.27834320 -179.42123413]
[89.16497040 -193.55313110]
[97.46286011 -205.92221069]
[98.13264465 -220.90725708]
[98.80242920 -235.89228821]
[84.37405396 -240.28236389]
[71.49116516 -248.12341309]
[60.96359634 -258.92254639]
[53.45311737 -272.00091553]
[49.43184280 -286.53637695]
[49.15255737 -301.61526489]
[52.63281250 -316.28970337]
[59.65383911 -329.63720703]
[69.77428436 -340.81875610]
[82.35797882 -349.13150024]
[96.61389160 -354.05285645]
[111.64588928 -355.27346802]
[126.50904083 -352.71664429]
[140.26904297 -346.54306030]
[152.06092834 -337.14080811]
[161.14344788 -325.10092163]
[166.94567871 -311.18026733]
[169.10285950 -296.25387573]
[167.47941589 -281.26000977]
[162.17739868 -267.14126587]
[153.53007507 -254.78511047]
[142.08102417 -244.96826172]
[128.54997253 -238.30784607]
[113.78746796 -235.22250366]
[113.11768341 -220.23747253]
[112.44789886 -205.25242615]
[119.60917664 -192.19236755]
[111.26338196 -178.75144958]
[110.59359741 -163.76640320]
[110.14699554 -148.77305603]
[109.92366791 -133.77471924]
[109.70034027 -118.77638245]
[117.89776611 -109.88094330]
[117.83444977 -97.38375854]
[108.99893951 -87.98713684]
[108.55233002 -72.99378204]
[108.10572815 -58.00043488]
[116.16980743 -48.98393631]
[115.92043304 -36.48907471]
[106.94599915 -27.22504234]
[106.27621460 -12.24000359]
[106.05288696 2.75833344]
[113.97882080 15.36899757]
[106.44783783 29.28283691]
[106.67116547 44.28117371]
[106.89449310 59.27951050]
[107.11782074 74.27784729]
[107.34114838 89.27618408]
[108.01094055 104.26122284]
[109.12658691 119.21968079]
[110.57600403 134.14949036]
[112.35846710 149.04319763]
[114.14093781 163.93692017]
[115.92340088 178.83064270]
[117.70587158 193.72434998]
[119.48833466 208.61807251]
[121.27079773 223.51179504]
[133.41111755 233.27142334]
[135.00662231 248.40115356]
[125.62749481 259.91494751]
[127.40996552 274.80868530]
[129.19242859 289.70239258]
[143.14007568 300.26089478]
[145.09757996 317.30447388]
[134.33883667 330.23074341]
[136.34284973 345.09625244]
[138.34686279 359.96179199]
[140.35087585 374.82730103]
[142.35488892 389.69284058]
[144.35890198 404.55838013]
[155.94918823 418.86734009]
[148.65554810 434.82885742]
[150.88066101 449.66290283]
[153.10577393 464.49694824]
[155.92985535 467.79519653]
[157.40875244 471.45272827]
[157.59471130 475.00247192]
[156.68624878 478.04244995]
[154.99438477 480.27755737]
[156.33262634 495.21774292]
[157.67085266 510.15792847]
[159.00909424 525.09808350]
[161.23420715 539.93212891]
[164.33831787 554.60742188]
[167.44242859 569.28277588]
[170.54653931 583.95806885]
[173.65065002 598.63336182]
[176.75476074 613.30865479]
[179.85887146 627.98394775]
[182.96298218 642.65924072]
[186.06709290 657.33453369]
[189.17118835 672.00988770]
[192.27529907 686.68518066]
[207.31925964 686.40948486]
[222.14347839 688.98608398]
[236.21208191 694.32189941]
[249.01647949 702.22406006]
[260.09384155 712.40679932]
[269.04367065 724.50213623]
[275.54251099 738.07275391]
[279.35534668 752.62811279]
[280.34442139 767.64202881]
[278.47393799 782.57183838]
[273.81152344 796.87768555]
[266.52572632 810.04254150]
[256.87991333 821.59051514]
[245.22279358 831.10406494]
[231.97573853 838.23931885]
[217.61764526 842.73840332]
[202.66752625 844.43859863]
[187.66584778 843.27850342]
[173.15487671 839.29998779]
[159.65921021 832.64691162]
[147.66668701 823.55975342]
[137.61082458 812.36706543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[28 177]
[29 176]
[30 175]
[31 174]
[32 169]
[33 168]
[34 167]
[37 165]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[46 157]
[47 156]
[48 155]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[61 145]
[62 144]
[67 143]
[68 142]
[69 141]
[70 140]
[71 139]
[73 137]
[78 136]
[79 135]
[81 132]
[82 131]
[83 130]
[85 127]
[86 126]
[87 125]
[90 124]
[91 123]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
