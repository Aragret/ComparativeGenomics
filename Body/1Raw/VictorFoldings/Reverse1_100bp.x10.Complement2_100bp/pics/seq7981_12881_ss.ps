%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[85.80496216 576.44665527]
[71.03523254 579.61395264]
[55.97155380 578.49041748]
[41.83507156 573.16723633]
[29.77176666 564.07586670]
[20.75955772 551.95324707]
[15.52902317 537.78222656]
[14.50418186 522.71154785]
[17.76811028 507.96282959]
[25.05621719 494.73181152]
[35.77768707 484.09100342]
[49.06338120 476.90304565]
[63.83628845 473.75057983]
[64.95193481 458.79211426]
[66.06758881 443.83367920]
[67.18323517 428.87521362]
[60.41397476 415.60772705]
[69.15625763 402.42126465]
[60.69565582 387.04641724]
[71.18958282 371.91503906]
[72.08239746 356.94161987]
[65.11635590 343.77639771]
[73.66133881 330.46121216]
[70.92153931 323.59716797]
[74.68054962 315.27203369]
[75.79620361 300.31359863]
[76.91184998 285.35513306]
[78.02749634 270.39666748]
[75.39019775 263.49258423]
[79.27274323 255.22436523]
[80.61097717 240.28417969]
[81.94921112 225.34399414]
[82.84202576 210.37059021]
[83.28863525 195.37724304]
[80.72376251 191.34852600]
[80.66246796 185.66581726]
[83.97836304 179.94598389]
[84.87117767 164.97257996]
[85.76399231 149.99917603]
[73.85523224 159.11956787]
[58.96788406 157.28466797]
[49.63009644 145.54560852]
[51.19097519 130.62702942]
[62.75638199 121.07499695]
[77.70112610 122.36133575]
[87.46387482 133.74827576]
[89.68899536 118.91423035]
[91.91411591 104.08018494]
[90.08451080 100.68534088]
[89.76019287 96.50052643]
[91.26040649 92.21609497]
[94.58409882 88.63937378]
[97.46936798 73.91948700]
[100.35464478 59.19959259]
[103.23991394 44.47970200]
[106.12519073 29.75980949]
[107.68570709 14.84120464]
[107.90903473 -0.15713255]
[105.02775574 -6.10773945]
[105.51153564 -11.77015781]
[108.36894226 -15.59694004]
[109.03872681 -30.58197784]
[98.65216064 -42.19046783]
[99.54488373 -57.37788391]
[110.67581177 -67.20835114]
[111.34559631 -82.19338989]
[112.01538086 -97.17842865]
[112.68517303 -112.16346741]
[100.02280426 -104.12204742]
[85.79189301 -108.86347198]
[80.48293304 -122.89254761]
[88.00949097 -135.86755371]
[102.82327271 -138.22380066]
[114.00346375 -128.22587585]
[107.96087646 -142.84770203]
[117.15575409 -154.56536865]
[118.93821716 -169.45907593]
[112.89562988 -184.08090210]
[122.09049988 -195.79856873]
[123.87297058 -210.69227600]
[125.65543365 -225.58599854]
[125.87876129 -240.58433533]
[124.54052734 -255.52452087]
[123.20229340 -270.46472168]
[114.26465607 -283.51956177]
[120.83563232 -296.88638306]
[116.95308685 -305.15460205]
[119.59038544 -312.05868530]
[118.47473907 -327.01715088]
[117.35909271 -341.97558594]
[116.24343872 -356.93405151]
[115.12779236 -371.89251709]
[114.01214600 -386.85095215]
[99.27287292 -390.20437622]
[86.17770386 -397.75473022]
[75.89102936 -408.83062744]
[69.32755280 -422.44726562]
[67.07088470 -437.39379883]
[69.32169342 -452.34121704]
[75.87982941 -465.96038818]
[86.16214752 -477.04034424]
[99.25436401 -484.59582520]
[113.99230957 -487.95501709]
[129.06552124 -486.81924438]
[143.13366699 -481.28945923]
[154.94584656 -471.85739136]
[163.45170593 -459.36172485]
[167.89492798 -444.91357422]
[167.88041687 -429.79763794]
[163.40945435 -415.35803223]
[154.87960815 -402.87872314]
[143.04934692 -393.46936035]
[128.97059631 -387.96661377]
[130.08624268 -373.00814819]
[131.20188904 -358.04968262]
[132.31753540 -343.09124756]
[133.43319702 -328.13278198]
[134.54884338 -313.17434692]
[135.77581787 -298.22460938]
[144.61773682 -286.23837280]
[138.14247131 -271.80294800]
[139.48071289 -256.86276245]
[140.81893921 -241.92257690]
[147.25515747 -255.47155762]
[158.33476257 -265.58306885]
[172.41416931 -270.75708008]
[187.40476990 -270.22610474]
[201.08279419 -264.06887817]
[211.41920471 -253.19879150]
[216.88064575 -239.22836304]
[216.65695190 -224.23004150]
[210.78131104 -210.42871094]
[200.12532043 -199.87171936]
[186.26974487 -194.12515259]
[171.26997375 -194.04145813]
[157.35115051 -199.63307190]
[146.57801819 -210.07049561]
[140.54914856 -223.80352783]
[138.76667786 -208.90982056]
[136.98422241 -194.01609802]
[143.15429688 -180.45957947]
[133.83193970 -167.67662048]
[132.04946899 -152.78289795]
[138.21954346 -139.22637939]
[128.89718628 -126.44341278]
[127.67021179 -111.49368286]
[127.00041962 -96.50864410]
[126.33063507 -81.52360535]
[125.66085052 -66.53856659]
[135.87036133 -55.75424957]
[135.40457153 -40.54774857]
[124.02376556 -29.91219330]
[123.35398102 -14.92715454]
[122.90737915 0.06619517]
[122.68405151 15.06453228]
[130.99990845 2.58068109]
[143.86447144 -5.13313675]
[158.79379272 -6.58750343]
[172.90527344 -1.50160325]
[183.47418213 9.14255524]
[188.45983887 23.28975296]
[186.89959717 38.20838547]
[179.09469604 51.01790237]
[166.55216980 59.24498367]
[151.69375610 61.30110931]
[137.38839722 56.78927612]
[126.39823151 46.58064270]
[120.84507751 32.64508057]
[117.95980835 47.36497498]
[115.07453156 62.08486557]
[112.18926239 76.80475616]
[109.30398560 91.52465057]
[106.74815369 106.30529785]
[104.52304077 121.13934326]
[102.29792023 135.97338867]
[100.73739624 150.89199829]
[99.84458160 165.86540222]
[98.95176697 180.83880615]
[98.28198242 195.82383728]
[97.83537292 210.81719971]
[100.02833557 214.56484985]
[100.83367920 218.42695618]
[100.38581085 221.95326233]
[98.95155334 224.78337097]
[96.88939667 226.68222046]
[95.55116272 241.62240601]
[94.21292877 256.56259155]
[92.98595428 271.51232910]
[91.87030029 286.47079468]
[90.75465393 301.42922974]
[89.63900757 316.38769531]
[88.63474274 331.35403442]
[95.53692627 345.59027100]
[87.05580139 357.83444214]
[86.16298676 372.80786133]
[94.12494659 382.95526123]
[93.07305908 395.40826416]
[84.11470795 403.53689575]
[90.80416870 417.87432861]
[82.14168549 429.99087524]
[81.02603912 444.94931030]
[79.91039276 459.90777588]
[78.79473877 474.86624146]
[92.93656158 480.17523193]
[105.00899506 489.25448608]
[114.03337860 501.36801147]
[119.27814484 515.53381348]
[120.31813049 530.60345459]
[117.06901550 545.35540771]
[109.79420471 558.59375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 203]
[14 202]
[15 201]
[16 200]
[18 198]
[20 195]
[21 194]
[23 192]
[25 191]
[26 190]
[27 189]
[28 188]
[30 187]
[31 186]
[32 185]
[33 180]
[34 179]
[37 178]
[38 177]
[39 176]
[46 175]
[47 174]
[48 173]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 155]
[58 154]
[61 153]
[62 152]
[65 149]
[66 148]
[67 147]
[68 146]
[74 145]
[76 143]
[77 142]
[79 140]
[80 139]
[81 138]
[82 123]
[83 122]
[84 121]
[86 119]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
