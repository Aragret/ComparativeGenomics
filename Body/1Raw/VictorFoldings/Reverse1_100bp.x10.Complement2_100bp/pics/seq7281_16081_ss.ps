%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[80.85008240 493.88858032]
[65.79291534 495.48870850]
[51.03257751 492.11065674]
[38.17016602 484.12084961]
[28.60089874 472.38595581]
[23.36277390 458.17889404]
[23.02398682 443.04071045]
[27.62128639 428.61352539]
[36.65599060 416.46228027]
[49.14808273 407.90505981]
[63.74251556 403.87005615]
[64.63533020 388.89663696]
[65.52815247 373.92324829]
[66.42096710 358.94982910]
[67.09075165 343.96478271]
[67.53735352 328.97143555]
[67.98396301 313.97808838]
[68.43056488 298.98474121]
[68.87717438 283.99139404]
[69.32377625 268.99804688]
[69.77038574 254.00468445]
[70.21699524 239.01133728]
[70.10532379 224.01176453]
[69.43553925 209.02671814]
[68.76575470 194.04168701]
[68.09597015 179.05664062]
[62.07425308 192.79487610]
[53.18337631 204.87594604]
[41.85714722 214.71040344]
[28.64819145 221.81838989]
[14.20100880 225.85310364]
[-0.77949280 226.61767578]
[-15.56238174 224.07479858]
[-29.42636681 218.34855652]
[-41.69499588 209.71832275]
[-51.76964951 198.60520935]
[-59.15877151 185.55143738]
[-63.50182343 171.19393921]
[-64.58690643 156.23324585]
[-62.36106491 141.39930725]
[-56.93290710 127.41591644]
[-48.56729126 114.96535492]
[-37.67238998 104.65511322]
[-24.77978706 96.98825073]
[-10.51854324 92.33884430]
[4.41550255 90.93376160]
[19.29368591 92.84154510]
[33.39006805 97.96911621]
[46.01685333 106.06629181]
[56.55795670 116.73799133]
[64.49905396 129.46351624]
[69.45267487 143.62196350]
[71.17709351 158.51589966]
[76.21401215 144.38687134]
[81.25093079 130.25784302]
[86.28784180 116.12880707]
[79.53169250 105.40463257]
[80.11286163 92.74304199]
[87.82302856 82.68286896]
[99.89830017 78.83041382]
[105.14501953 64.77794647]
[110.39173126 50.72547150]
[115.63845062 36.67300034]
[120.88516998 22.62053108]
[126.13188934 8.56805897]
[131.06347656 -5.59807587]
[135.67749023 -19.87080956]
[140.29150391 -34.14354324]
[144.90551758 -48.41627502]
[132.45355225 -56.95025635]
[122.92047119 -68.63539886]
[117.07221985 -82.51931000]
[115.37487793 -97.47348022]
[117.95750427 -112.28503418]
[124.60238647 -125.75505829]
[134.76333618 -136.79570007]
[147.61059570 -144.51799011]
[162.09858704 -148.30342102]
[177.05101013 -147.85346985]
[181.66502380 -162.12619019]
[186.27902222 -176.39892578]
[190.89303589 -190.67166138]
[195.50704956 -204.94439697]
[200.12104797 -219.21713257]
[204.30805969 -233.62091064]
[208.06436157 -248.14297485]
[204.02943420 -263.44100952]
[214.70736694 -273.82516479]
[218.46366882 -288.34722900]
[222.21997070 -302.86929321]
[225.97627258 -317.39135742]
[212.06282043 -323.05697632]
[199.02870178 -330.52658081]
[187.10650635 -339.66687012]
[176.50903320 -350.31472778]
[167.42536926 -362.28012085]
[160.01765442 -375.34951782]
[154.41807556 -389.28967285]
[150.72654724 -403.85183716]
[149.00898743 -418.77609253]
[149.29602051 -433.79611206]
[151.58251953 -448.64385986]
[155.82769775 -463.05432129]
[161.95578003 -476.77038574]
[169.85742188 -489.54721069]
[179.39158630 -501.15682983]
[190.38813782 -511.39202881]
[202.65083313 -520.07012939]
[215.96081543 -527.03631592]
[230.08056641 -532.16625977]
[244.75810242 -535.36834717]
[259.73147583 -536.58551025]
[274.73348999 -535.79595947]
[289.49636841 -533.01379395]
[303.75671387 -528.28875732]
[317.25997925 -521.70507812]
[329.76522827 -513.38024902]
[341.04925537 -503.46289062]
[350.91070557 -492.12994385]
[359.17358398 -479.58370972]
[365.69042969 -466.04803467]
[370.34490967 -451.76452637]
[373.05401611 -436.98803711]
[373.76934814 -421.98233032]
[372.47817993 -407.01513672]
[369.20355225 -392.35360718]
[364.00387573 -378.25939941]
[356.97198486 -364.98403931]
[348.23333740 -352.76440430]
[337.94387817 -341.81857300]
[326.28726196 -332.34194946]
[313.47149658 -324.50357056]
[299.72531128 -318.44338989]
[285.29403687 -314.26953125]
[270.43518066 -312.05645752]
[255.41390991 -311.84371948]
[240.49833679 -313.63507080]
[236.74203491 -299.11300659]
[232.98573303 -284.59094238]
[229.22943115 -270.06887817]
[233.53303528 -255.80955505]
[222.58642578 -244.38667297]
[218.83012390 -229.86460876]
[220.13491821 -227.38356018]
[220.53555298 -224.23616028]
[219.77331543 -220.76422119]
[217.71784973 -217.39677429]
[214.39378357 -214.60311890]
[209.77978516 -200.33038330]
[205.16577148 -186.05764771]
[200.55175781 -171.78492737]
[195.93774414 -157.51219177]
[191.32374573 -143.23945618]
[203.71000671 -134.85150146]
[213.24046326 -123.30153656]
[219.13612366 -109.52014160]
[220.91136169 -94.62083435]
[218.41378784 -79.81008911]
[211.83740234 -66.28961945]
[201.70748901 -55.15889740]
[188.83865356 -47.32573700]
[174.26940918 -43.43226242]
[159.17823792 -43.80226517]
[154.56423950 -29.52953339]
[149.95022583 -15.25679970]
[145.33621216 -0.98406667]
[146.60748291 2.30473590]
[146.34895325 6.37268496]
[144.21176147 10.49405766]
[140.18435669 13.81477737]
[134.93763733 27.86724854]
[129.69091797 41.91971970]
[124.44420624 55.97219086]
[119.19748688 70.02466583]
[113.95076752 84.07713318]
[121.14282990 98.93115997]
[115.48545074 114.43476868]
[100.41687012 121.16572571]
[95.37995911 135.29475403]
[90.34304047 149.42378235]
[85.30612183 163.55281067]
[83.08100891 178.38685608]
[83.75079346 193.37190247]
[84.42057800 208.35693359]
[85.09036255 223.34197998]
[96.98481750 214.20294189]
[111.58199310 217.65583801]
[118.12139130 231.15533447]
[111.78241730 244.75009155]
[97.23792267 248.41856384]
[85.21034241 239.45794678]
[84.76373291 254.45129395]
[84.31713104 269.44464111]
[83.87052155 284.43798828]
[83.42391968 299.43133545]
[82.97731018 314.42468262]
[82.53070831 329.41806030]
[82.08409882 344.41140747]
[84.87647247 350.40423584]
[84.30843353 356.05883789]
[81.39437103 359.84265137]
[80.50155640 374.81604004]
[79.60874176 389.78945923]
[78.71591949 404.76287842]
[92.72746277 410.50354004]
[104.11417389 420.48458862]
[111.64092255 433.62335205]
[114.49124908 448.49462891]
[112.35597992 463.48526001]
[105.46672821 476.96920776]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 204]
[12 203]
[13 202]
[14 201]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[22 191]
[23 185]
[24 184]
[25 183]
[26 182]
[53 181]
[54 180]
[55 179]
[56 178]
[60 175]
[61 174]
[62 173]
[63 172]
[64 171]
[65 170]
[66 166]
[67 165]
[68 164]
[69 163]
[79 153]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 143]
[86 142]
[88 140]
[89 139]
[90 138]
[91 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
