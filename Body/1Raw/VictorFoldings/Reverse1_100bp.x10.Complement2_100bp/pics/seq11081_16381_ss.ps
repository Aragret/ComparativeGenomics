%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[138.17564392 201.12106323]
[147.12409973 189.06114197]
[157.41215515 178.12165833]
[147.75134277 166.64695740]
[138.00537109 155.24449158]
[128.17478943 143.91490173]
[113.98966217 139.37271118]
[110.78944397 123.87855530]
[100.95886230 112.54895782]
[90.87772369 101.44172668]
[80.55105591 90.56239319]
[70.22438812 79.68305969]
[52.73150635 79.54760742]
[40.98019409 67.04874420]
[41.88637924 50.25536728]
[31.39887619 39.53098679]
[20.91137505 28.80660629]
[12.67397785 24.85906410]
[10.34904766 17.84361839]
[0.02237953 6.96428347]
[-10.30428886 -3.91505098]
[-25.87052727 -4.48948765]
[-36.18825912 -15.66978645]
[-35.54468918 -30.50627518]
[-45.87136078 -41.38560867]
[-56.19802856 -52.26494598]
[-66.52469635 -63.14427948]
[-76.85136414 -74.02361298]
[-87.17803192 -84.90294647]
[-97.50469971 -95.78227997]
[-107.83136749 -106.66161346]
[-118.15804291 -117.54095459]
[-128.48471069 -128.42028809]
[-138.81137085 -139.29962158]
[-149.13804626 -150.17895508]
[-159.46470642 -161.05828857]
[-169.79138184 -171.93762207]
[-181.39245605 -162.41854858]
[-193.65016174 -153.76138306]
[-206.50059509 -146.01129150]
[-219.87677002 -139.20866394]
[-233.70893860 -133.38896179]
[-247.92498779 -128.58255005]
[-262.45080566 -124.81445312]
[-277.21066284 -122.10434723]
[-292.12756348 -120.46633911]
[-307.12380981 -119.90898895]
[-322.12118530 -120.43518066]
[-337.04147339 -122.04219055]
[-351.80691528 -124.72162628]
[-366.34054565 -128.45953369]
[-380.56652832 -133.23640442]
[-394.41076660 -139.02734375]
[-407.80105591 -145.80216980]
[-420.66757202 -153.52554321]
[-432.94323730 -162.15721130]
[-444.56405640 -171.65217590]
[-455.46945190 -181.96090698]
[-465.60253906 -193.02969360]
[-474.91055298 -204.80081177]
[-483.34487915 -217.21289062]
[-490.86160278 -230.20121765]
[-497.42150879 -243.69807434]
[-502.99041748 -257.63308716]
[-507.53930664 -271.93365479]
[-511.04440308 -286.52514648]
[-513.48748779 -301.33154297]
[-514.85577393 -316.27560425]
[-515.14215088 -331.27947998]
[-514.34515381 -346.26489258]
[-512.46893311 -361.15371704]
[-509.52325439 -375.86834717]
[-505.52343750 -390.33209229]
[-500.49038696 -404.46948242]
[-494.45034790 -418.20687866]
[-487.43478394 -431.47259521]
[-479.48025513 -444.19750977]
[-470.62826538 -456.31527710]
[-460.92495728 -467.76269531]
[-450.42092896 -478.48010254]
[-439.17092896 -488.41165161]
[-427.23361206 -497.50549316]
[-414.67120361 -505.71426392]
[-401.54925537 -512.99517822]
[-387.93609619 -519.31024170]
[-373.90274048 -524.62652588]
[-359.52236938 -528.91638184]
[-344.86993408 -532.15734863]
[-330.02185059 -534.33258057]
[-315.05548096 -535.43072510]
[-300.04891968 -535.44610596]
[-285.08032227 -534.37854004]
[-270.22781372 -532.23370361]
[-255.56878662 -529.02270508]
[-241.17965698 -524.76232910]
[-227.13546753 -519.47473145]
[-213.50942993 -513.18756104]
[-200.37258911 -505.93350220]
[-187.79342651 -497.75045776]
[-175.83752441 -488.68103027]
[-164.56723022 -478.77255249]
[-154.04129028 -468.07662964]
[-144.31459045 -456.64907837]
[-135.43782043 -444.54946899]
[-127.45729065 -431.84085083]
[-120.41458893 -418.58950806]
[-114.34643555 -404.86453247]
[-109.28447723 -390.73742676]
[-105.25509644 -376.28192139]
[-102.27929688 -361.57333374]
[-100.37259674 -346.68838501]
[-99.54494476 -331.70462036]
[-99.80065155 -316.70022583]
[-101.13837433 -301.75335693]
[-103.55114746 -286.94201660]
[-107.02639771 -272.34338379]
[-111.54598999 -258.03353882]
[-117.08637238 -244.08715820]
[-123.61865997 -230.57690430]
[-131.10879517 -217.57322693]
[-139.51773071 -205.14392090]
[-148.80160522 -193.35377502]
[-158.91204834 -182.26429749]
[-148.58537292 -171.38496399]
[-138.25871277 -160.50561523]
[-127.93204498 -149.62628174]
[-117.60537720 -138.74694824]
[-107.27870178 -127.86762238]
[-96.95203400 -116.98828888]
[-86.62536621 -106.10894775]
[-76.29869843 -95.22961426]
[-65.97203064 -84.35028076]
[-55.64536285 -73.47094727]
[-45.31869507 -62.59161377]
[-34.99202347 -51.71228027]
[-24.66535568 -40.83294296]
[-9.81548595 -40.70283127]
[0.81220508 -29.81674767]
[0.57504535 -14.24171925]
[10.90171432 -3.36238527]
[21.22838211 7.51694918]
[31.63575554 18.31910515]
[42.12325668 29.04348564]
[52.61075974 39.76786423]
[65.38859558 38.10763550]
[76.96235657 44.20108414]
[83.00224304 56.02183914]
[81.10372162 69.35639191]
[91.43038940 80.23572540]
[101.75706482 91.11505890]
[105.55907440 91.76087189]
[109.05796051 94.07941437]
[111.51304626 97.89773560]
[112.28845978 102.71837616]
[122.11904144 114.04797363]
[137.00732422 119.40052032]
[139.50437927 134.08432007]
[149.33496094 145.41390991]
[157.32279968 149.84475708]
[159.22604370 156.98614502]
[168.88685608 168.46084595]
[181.41934204 160.18719482]
[194.82762146 153.42446899]
[208.93035889 148.26411438]
[223.53683472 144.77589417]
[238.44949341 143.00701904]
[253.46667480 142.98139954]
[268.38528442 144.69937134]
[283.00357056 148.13772583]
[297.12384033 153.24992371]
[310.55511475 159.96685791]
[323.11578369 168.19769287]
[334.63595581 177.83108521]
[344.95980835 188.73678589]
[353.94775391 200.76730347]
[361.47827148 213.75991821]
[367.44946289 227.53894043]
[371.78057861 241.91801453]
[374.41308594 256.70269775]
[375.31134033 271.69299316]
[374.46325684 286.68624878]
[371.88021851 301.47964478]
[367.59722900 315.87313843]
[361.67218018 329.67205811]
[354.18518066 342.68978882]
[345.23751831 354.75030518]
[334.95019531 365.69049072]
[323.46234131 375.36236572]
[310.92929077 383.63519287]
[297.52056885 390.39700317]
[283.41748047 395.55642700]
[268.81079102 399.04367065]
[253.89799500 400.81155396]
[238.88081360 400.83618164]
[223.96231079 399.11718750]
[209.34425354 395.67788696]
[195.22433472 390.56472778]
[181.79350281 383.84689331]
[169.23339844 375.61523438]
[157.71388245 365.98104858]
[147.39073181 355.07467651]
[138.40357971 343.04357910]
[130.87396240 330.05044556]
[124.90368652 316.27102661]
[120.57351685 301.89166260]
[117.94200134 287.10681152]
[117.04473114 272.11642456]
[117.89384460 257.12326050]
[120.47785187 242.33003235]
[124.76181030 227.93682861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 158]
[6 157]
[8 155]
[9 154]
[10 150]
[11 149]
[12 148]
[15 144]
[16 143]
[17 142]
[19 141]
[20 140]
[21 139]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[32 128]
[33 127]
[34 126]
[35 125]
[36 124]
[37 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
