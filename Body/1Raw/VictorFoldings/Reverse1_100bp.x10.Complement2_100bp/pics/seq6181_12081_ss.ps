%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[146.10075378 550.07611084]
[140.69577026 536.07391357]
[136.49774170 521.66387939]
[133.53689575 506.94967651]
[131.83457947 492.03741455]
[131.40306091 477.03448486]
[132.24543762 462.04901123]
[134.35565186 447.18896484]
[137.71849060 432.56143188]
[142.30972290 418.27175903]
[148.09628296 404.42294312]
[155.03645325 391.11477661]
[163.08026123 378.44308472]
[172.16972351 366.49923706]
[182.23934937 355.36926270]
[193.21659851 345.13336182]
[205.02238464 335.86529541]
[196.79357910 323.32388306]
[188.56475830 310.78247070]
[180.33595276 298.24108887]
[178.99583435 313.18109131]
[169.87557983 325.08993530]
[155.80117798 330.27755737]
[141.13374329 327.13647461]
[130.41813660 316.63998413]
[126.97472382 302.04058838]
[131.87046814 287.86199951]
[143.58836365 278.49768066]
[158.49751282 276.84921265]
[171.97831726 283.42758179]
[165.49882507 269.89923096]
[152.86622620 267.36013794]
[143.86830139 257.86700439]
[141.95268250 244.73153687]
[148.04043579 232.71679688]
[141.76307678 219.09347534]
[135.48570251 205.47015381]
[129.20834351 191.84684753]
[122.82974243 178.27064514]
[116.35025024 164.74229431]
[109.87075043 151.21394348]
[106.54665375 165.84098816]
[95.91711426 176.42460632]
[81.27581787 179.68534851]
[67.15952301 174.61283875]
[57.94232941 162.77885437]
[56.48027039 147.85026550]
[63.22639084 134.45289612]
[76.09032440 126.73802185]
[91.08605194 127.09621429]
[103.56713867 135.41665649]
[98.95312500 121.14392853]
[87.06192017 116.75612640]
[79.80866241 106.36171722]
[79.79343414 93.68680573]
[87.02171326 83.27500153]
[82.62071228 68.93515015]
[78.21971130 54.59530640]
[73.81871796 40.25545883]
[69.41771698 25.91561127]
[65.01671600 11.57576370]
[60.44472122 6.79995394]
[59.16328430 1.26326323]
[60.70503235 -3.25692010]
[56.73293686 -17.72144318]
[52.76083755 -32.18596649]
[48.78874207 -46.65049362]
[44.81664658 -61.11501694]
[40.84455109 -75.57953644]
[30.04116821 -82.62580109]
[27.03058243 -94.75510406]
[32.89736938 -105.33373260]
[29.14106941 -119.85578918]
[25.38476944 -134.37785339]
[21.62846947 -148.89991760]
[17.48752213 -134.48281860]
[8.20484829 -122.70011902]
[-4.84252453 -115.29971313]
[-19.71909714 -113.37940216]
[-34.21801758 -117.22404480]
[-46.18845367 -126.26332855]
[-53.85467148 -139.15631104]
[-56.07942200 -153.99041748]
[-52.53268433 -168.56507874]
[-43.74059677 -180.71823120]
[-31.00740623 -188.64703369]
[-16.22201157 -191.17529297]
[-1.57773566 -187.92794800]
[10.75302887 -179.38673401]
[18.94037247 -166.82046509]
[18.27058601 -181.80551147]
[14.76110840 -190.23886108]
[17.70406532 -197.01829529]
[17.25745964 -212.01164246]
[16.81085205 -227.00500488]
[16.36424637 -241.99835205]
[15.91764069 -256.99169922]
[1.69445050 -262.35540771]
[-9.39004421 -272.75744629]
[-15.64553738 -286.61157227]
[-16.11811256 -301.80517578]
[-10.73570633 -316.02130127]
[-0.31909463 -327.09210205]
[13.54326344 -333.32934570]
[28.73746109 -333.78195190]
[42.94649124 -328.38082886]
[54.00357819 -317.94967651]
[60.22260284 -304.07913208]
[60.65520096 -288.88433838]
[55.23541260 -274.68243408]
[44.78971100 -263.63906860]
[30.91099167 -257.43829346]
[31.35759735 -242.44496155]
[31.80420303 -227.45159912]
[32.25080872 -212.45825195]
[32.69741440 -197.46490479]
[33.25562668 -182.47529602]
[33.92541122 -167.49024963]
[36.15052795 -152.65621948]
[39.90682983 -138.13415527]
[43.66312790 -123.61209106]
[47.41942978 -109.09003448]
[60.37677383 -97.25473785]
[55.30907440 -79.55163574]
[59.28116989 -65.08711243]
[63.25326538 -50.62258911]
[67.22536469 -36.15806580]
[71.19745636 -21.69354057]
[75.16955566 -7.22901630]
[79.35656738 7.17476559]
[83.75756836 21.51461220]
[88.15856171 35.85446167]
[92.55956268 50.19430542]
[96.96055603 64.53415680]
[101.36155701 78.87400055]
[116.11454773 86.27109528]
[121.07401276 102.01184845]
[113.22586060 116.52992249]
[117.83987427 130.80265808]
[123.39909363 144.73445129]
[129.87858582 158.26280212]
[136.35809326 171.79113770]
[142.88745117 178.17904663]
[142.83166504 185.56948853]
[149.10902405 199.19279480]
[155.38638306 212.81611633]
[161.66374207 226.43943787]
[178.18296814 232.19572449]
[185.28816223 247.81080627]
[179.02717590 263.41973877]
[185.50666809 276.94808960]
[192.87736511 290.01226807]
[201.10617065 302.55368042]
[209.33497620 315.09506226]
[217.56378174 327.63647461]
[230.76570129 320.49621582]
[244.52560425 314.50131226]
[258.74432373 309.69491577]
[273.31945801 306.11169434]
[288.14596558 303.77743530]
[303.11700439 302.70895386]
[318.12472534 302.91400146]
[333.06100464 304.39105225]
[347.81820679 307.12945557]
[362.29000854 311.10952759]
[376.37213135 316.30255127]
[389.96310425 322.67114258]
[402.96505737 330.16937256]
[415.28424072 338.74325562]
[426.83190918 348.33099365]
[437.52490234 358.86352539]
[447.28613281 370.26492310]
[456.04528809 382.45309448]
[463.73925781 395.34014893]
[470.31259155 408.83331299]
[475.71792603 422.83532715]
[479.91635132 437.24530029]
[482.87756348 451.95938110]
[484.58026123 466.87161255]
[485.01217651 481.87454224]
[484.17016602 496.86001587]
[482.06036377 511.72012329]
[478.69790649 526.34777832]
[474.10702515 540.63751221]
[468.32083130 554.48651123]
[461.38098145 567.79486084]
[453.33752441 580.46673584]
[444.24838257 592.41082764]
[434.17901611 603.54107666]
[423.20202637 613.77722168]
[411.39648438 623.04565430]
[398.84747314 631.27941895]
[385.64535522 638.41937256]
[371.88531494 644.41394043]
[357.66644287 649.21997070]
[343.09121704 652.80279541]
[328.26467896 655.13665771]
[313.29360962 656.20477295]
[298.28588867 655.99932861]
[283.34963989 654.52191162]
[268.59252930 651.78308105]
[254.12081909 647.80267334]
[240.03883362 642.60925293]
[226.44799805 636.24035645]
[213.44627380 628.74176025]
[201.12730408 620.16754150]
[189.57986450 610.57952881]
[178.88714600 600.04675293]
[169.12620544 588.64508057]
[160.36737061 576.45666504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 155]
[18 154]
[19 153]
[20 152]
[30 151]
[31 150]
[35 147]
[36 146]
[37 145]
[38 144]
[39 142]
[40 141]
[41 140]
[51 139]
[52 138]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[72 122]
[73 121]
[74 120]
[75 119]
[90 118]
[91 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
