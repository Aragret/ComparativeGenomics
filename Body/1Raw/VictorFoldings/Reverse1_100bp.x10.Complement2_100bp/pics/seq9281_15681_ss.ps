%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[83.06331635 730.34460449]
[74.20143127 742.48803711]
[63.50625992 753.05255127]
[51.25484085 761.76458740]
[37.76450729 768.39837646]
[23.38469887 772.78210449]
[8.48788357 774.80224609]
[-6.54007578 774.40649414]
[-21.30991745 771.60510254]
[-35.43906784 766.47058105]
[-48.56154633 759.13592529]
[-60.33745193 749.79119873]
[-70.46175385 738.67840576]
[-78.67221832 726.08532715]
[-84.75617218 712.33831787]
[-88.55602264 697.79327393]
[-89.97334290 682.82708740]
[-88.97142029 667.82733154]
[-85.57621765 653.18255615]
[-79.87566376 639.27215576]
[-72.01742554 626.45635986]
[-62.20505524 615.06719971]
[-50.69270706 605.39959717]
[-37.77858353 597.70404053]
[-23.79718971 592.17987061]
[-9.11067772 588.97009277]
[5.90053606 588.15795898]
[20.84762573 589.76440430]
[24.81972122 575.29986572]
[28.79181862 560.83532715]
[32.76391602 546.37078857]
[36.73601151 531.90631104]
[35.47596741 524.62384033]
[40.87641907 517.25683594]
[45.06343079 502.85302734]
[48.16754150 488.17773438]
[50.17155457 473.31219482]
[52.17556763 458.44668579]
[45.09328079 448.64016724]
[46.64119720 436.23904419]
[56.53071594 427.95892334]
[58.75583267 413.12487793]
[60.98094940 398.29086304]
[55.21723175 384.55664062]
[64.91606140 372.05688477]
[67.14118195 357.22283936]
[69.36629486 342.38882446]
[71.59141541 327.55477905]
[73.81652832 312.72073364]
[76.04164886 297.88668823]
[78.26676178 283.05264282]
[79.93830872 268.14605713]
[81.05395508 253.18760681]
[82.16960144 238.22915649]
[69.78330231 229.95599365]
[63.15704727 216.50427246]
[64.16024017 201.44239807]
[72.62337494 188.82209778]
[86.35675049 182.08847046]
[87.47239685 167.13002014]
[88.58805084 152.17156982]
[89.70369720 137.21311951]
[90.81934357 122.25466156]
[77.45606232 108.44542694]
[78.45700836 89.25505066]
[93.18442535 76.91099548]
[93.63102722 61.91764069]
[94.07763672 46.92429352]
[94.52423859 31.93094254]
[94.97084808 16.93759155]
[95.41745758 1.94424236]
[92.62508392 -4.04860306]
[93.19311523 -9.70319080]
[96.10718536 -13.48700619]
[94.02677155 -17.29828835]
[93.33677673 -21.18267059]
[93.88944244 -24.69407654]
[95.40732574 -27.48023033]
[97.52510834 -29.31684113]
[99.30757141 -44.21055984]
[101.09003448 -59.10427475]
[102.87250519 -73.99799347]
[104.65496826 -88.89170837]
[95.16056824 -101.24056244]
[97.18041229 -116.31951904]
[109.01166534 -125.29487610]
[110.79412842 -140.18859863]
[104.75154114 -154.81040955]
[113.94641876 -166.52807617]
[115.72888184 -181.42179871]
[109.68629456 -196.04360962]
[118.88116455 -207.76127625]
[107.81900024 -221.31294250]
[109.93869019 -238.33709717]
[123.44390869 -248.35946655]
[125.00443268 -263.27807617]
[126.56495667 -278.19668579]
[128.12547302 -293.11529541]
[129.68600464 -308.03387451]
[115.77733612 -313.95336914]
[104.23246765 -323.71081543]
[96.07795715 -336.43853760]
[92.03890228 -351.00485229]
[92.47444916 -366.11453247]
[97.34587860 -380.42398071]
[106.22001648 -392.66085815]
[118.30777740 -401.73706055]
[132.53433228 -406.84552002]
[147.63467407 -407.53201294]
[162.26606750 -403.73550415]
[175.12751770 -395.79357910]
[185.07539368 -384.41238403]
[191.22512817 -370.60397339]
[193.02989197 -355.59616089]
[190.32922363 -340.72344971]
[183.36323547 -327.30828857]
[172.75135803 -316.54357910]
[159.43717957 -309.38644409]
[144.60459900 -306.47335815]
[143.04408264 -291.55474854]
[141.48356628 -276.63616943]
[139.92303467 -261.71755981]
[138.36251831 -246.79895020]
[147.79710388 -238.02294922]
[150.49465942 -225.22431946]
[145.25109863 -213.02941895]
[133.77488708 -205.97880554]
[139.94496155 -192.42228699]
[130.62260437 -179.63932800]
[128.84013367 -164.74560547]
[135.01020813 -151.18908691]
[125.68785095 -138.40612793]
[123.90538025 -123.51240540]
[133.28451538 -111.99861145]
[131.68901062 -96.86887360]
[119.54868317 -87.10924530]
[117.76622009 -72.21553040]
[115.98375702 -57.32181168]
[114.20128632 -42.42809296]
[112.41882324 -27.53437614]
[111.08058929 -12.59419060]
[110.41080475 2.39084840]
[109.96419525 17.38419914]
[109.51759338 32.37754822]
[109.07098389 47.37089920]
[108.62438202 62.36424637]
[108.17777252 77.35759735]
[116.79376984 82.75112915]
[122.41570282 91.21986389]
[124.04125214 101.25396729]
[121.38062286 111.06450653]
[114.90815735 118.90241241]
[105.77780151 123.37030792]
[104.66214752 138.32876587]
[103.54650116 153.28721619]
[102.43085480 168.24566650]
[101.31520844 183.20411682]
[113.89775848 191.90048218]
[120.39515686 205.63658142]
[119.15295410 220.68063354]
[110.60456848 233.00057983]
[97.12805939 239.34480286]
[96.01240540 254.30325317]
[94.89675903 269.26171875]
[107.79293060 261.60086060]
[121.87636566 266.76388550]
[126.76527405 280.94482422]
[118.85573578 293.68997192]
[103.97837067 295.60412598]
[93.10080719 285.27774048]
[90.87569427 300.11178589]
[88.65057373 314.94583130]
[86.42545319 329.77987671]
[84.20034027 344.61392212]
[81.97521973 359.44796753]
[79.75010681 374.28201294]
[85.35466766 389.07727051]
[75.81499481 400.51596069]
[73.58987427 415.35000610]
[71.36476135 430.18405151]
[78.50022888 447.15951538]
[67.04109955 460.45068359]
[65.03707886 475.31622314]
[63.03306961 490.18176270]
[73.42119598 479.36108398]
[87.80007935 475.08935547]
[102.41110992 478.48315430]
[113.43498993 488.65536499]
[117.99011993 502.94699097]
[114.88578796 517.62225342]
[104.93346405 528.84503174]
[90.73465729 533.68176270]
[76.00090790 530.86816406]
[64.58358002 521.13958740]
[59.46721268 507.04003906]
[55.28020096 521.44384766]
[51.20053482 535.87835693]
[47.22843933 550.34289551]
[43.25634003 564.80743408]
[39.28424454 579.27197266]
[35.31214905 593.73645020]
[48.98340988 599.98889160]
[61.47459793 608.35351562]
[72.46215820 618.61358643]
[81.66149139 630.50341797]
[88.83430481 643.71508789]
[93.79480743 657.90625000]
[96.41452026 672.70941162]
[96.62557220 687.74108887]
[94.42250824 702.61193848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 201]
[29 200]
[30 199]
[31 198]
[32 197]
[34 196]
[35 195]
[36 184]
[37 183]
[38 182]
[41 180]
[42 179]
[43 178]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 164]
[53 163]
[54 162]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[66 147]
[67 146]
[68 145]
[69 144]
[70 143]
[71 142]
[74 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[86 133]
[87 132]
[89 130]
[90 129]
[92 127]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
