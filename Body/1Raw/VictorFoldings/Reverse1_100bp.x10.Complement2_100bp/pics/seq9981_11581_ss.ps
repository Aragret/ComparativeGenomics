%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[45.57213974 562.93457031]
[34.52914429 573.09729004]
[22.73181534 582.37365723]
[10.25110912 590.70794678]
[-2.83791375 598.04998779]
[-16.45653343 604.35565186]
[-30.52284622 609.58703613]
[-44.95225525 613.71264648]
[-59.65797424 616.70764160]
[-74.55156708 618.55407715]
[-89.54345703 619.24078369]
[-104.54347992 618.76367188]
[-119.46141815 617.12554932]
[-134.20756531 614.33636475]
[-148.69322205 610.41284180]
[-162.83128357 605.37860107]
[-176.53669739 599.26391602]
[-189.72706604 592.10546875]
[-202.32302856 583.94647217]
[-214.24885559 574.83587646]
[-225.43281555 564.82849121]
[-235.80763245 553.98455811]
[-245.31092834 542.36920166]
[-253.88554382 530.05236816]
[-261.47991943 517.10809326]
[-268.04833984 503.61425781]
[-273.55136108 489.65197754]
[-277.95584106 475.30526733]
[-281.23532104 460.66033936]
[-283.37002563 445.80532837]
[-284.34719849 430.82958984]
[-284.16088867 415.82312012]
[-282.81225586 400.87622070]
[-280.30938721 386.07879639]
[-276.66735840 371.51980591]
[-271.90808105 357.28683472]
[-266.06015015 343.46548462]
[-259.15872192 330.13885498]
[-251.24536133 317.38711548]
[-242.36761475 305.28695679]
[-232.57888794 293.91116333]
[-221.93804932 283.32809448]
[-210.50910950 273.60147095]
[-198.36077881 264.78973389]
[-185.56613159 256.94592285]
[-172.20213318 250.11718750]
[-158.34913635 244.34460449]
[-144.09045410 239.66288757]
[-129.51185608 236.10018921]
[-114.70101166 233.67794800]
[-99.74700165 232.41072083]
[-84.73976135 232.30613708]
[-69.76953888 233.36482239]
[-54.92637634 235.58041382]
[-40.29954147 238.93957520]
[-25.97700119 243.42211914]
[-12.04489613 249.00108337]
[1.41298461 255.64289856]
[9.07358170 242.74656677]
[16.73417854 229.85023499]
[12.82055187 215.52476501]
[20.40577316 202.33692932]
[35.45817947 198.32908630]
[43.11877823 185.43276978]
[50.77937698 172.53643799]
[58.43997192 159.64010620]
[65.90771484 146.63116455]
[73.18094635 133.51246643]
[80.45417023 120.39376831]
[87.62953949 107.22129822]
[87.37055206 93.24185944]
[99.14493561 85.70159912]
[106.22203827 72.47607422]
[113.29914093 59.25054550]
[120.37625122 46.02501678]
[127.45335388 32.79948807]
[127.14237976 16.98133850]
[139.96919250 9.41019344]
[136.98457336 -3.13790941]
[143.15138245 -14.00778484]
[154.68930054 -17.64138794]
[161.96252441 -30.76008224]
[169.23576355 -43.87877655]
[176.50898743 -56.99747086]
[183.78221130 -70.11616516]
[190.76066589 -83.39401245]
[197.44087219 -96.82438660]
[204.12106323 -110.25476074]
[210.80125427 -123.68514252]
[217.48144531 -137.11550903]
[224.16165161 -150.54588318]
[230.84184265 -163.97627258]
[218.18507385 -172.05329895]
[206.45857239 -181.42991638]
[195.79518127 -191.99989319]
[186.31575012 -203.64346313]
[178.12768555 -216.22866821]
[171.32374573 -229.61293030]
[165.98103333 -243.64459229]
[162.16009521 -258.16467285]
[159.90422058 -273.00863647]
[159.23895264 -288.00827026]
[160.17185974 -302.99365234]
[162.69235229 -317.79498291]
[166.77188110 -332.24453735]
[172.36421204 -346.17858887]
[179.40597534 -359.43927002]
[187.81739807 -371.87631226]
[197.50315857 -383.34881592]
[208.35353088 -393.72674561]
[220.24554443 -402.89254761]
[233.04447937 -410.74237061]
[246.60528564 -417.18725586]
[260.77432251 -422.15417480]
[275.39105225 -425.58685303]
[290.28985596 -427.44638062]
[305.30191040 -427.71170044]
[320.25711060 -426.37982178]
[334.98602295 -423.46582031]
[349.32174683 -419.00271606]
[363.10183716 -413.04107666]
[376.17016602 -405.64846802]
[388.37866211 -396.90863037]
[399.58898926 -386.92059326]
[409.67413330 -375.79754639]
[418.51980591 -363.66552734]
[426.02575684 -350.66198730]
[432.10702515 -336.93423462]
[436.69461060 -322.63787842]
[439.73657227 -307.93487549]
[441.19845581 -292.99182129]
[441.06369019 -277.97802734]
[439.33377075 -263.06359863]
[436.02832031 -248.41758728]
[431.18481445 -234.20588684]
[424.85809326 -220.58953857]
[417.11987305 -207.72283936]
[408.05783081 -195.75155640]
[397.77462769 -184.81137085]
[386.38681030 -175.02619934]
[374.02337646 -166.50694275]
[360.82443237 -159.35012817]
[346.93951416 -153.63684082]
[332.52600098 -149.43182373]
[317.74716187 -146.78271484]
[302.77044678 -145.71954346]
[287.76556396 -146.25433350]
[272.90255737 -148.38105774]
[258.34979248 -152.07557678]
[244.27221680 -157.29606628]
[237.59202576 -143.86569214]
[230.91181946 -130.43531799]
[224.23162842 -117.00494385]
[217.55143738 -103.57456970]
[210.87124634 -90.14419556]
[204.19104004 -76.71381378]
[204.96038818 -73.27281952]
[204.10125732 -69.28823090]
[201.37634277 -65.52948761]
[196.90090942 -62.84293365]
[189.62768555 -49.72423935]
[182.35444641 -36.60554504]
[175.08122253 -23.48685265]
[167.80799866 -10.36815834]
[169.05787659 7.13626194]
[153.19471741 16.48729897]
[154.01188660 31.35947037]
[140.67887878 39.87659454]
[133.60177612 53.10212326]
[126.52467346 66.32765198]
[119.44756317 79.55317688]
[112.37046051 92.77870178]
[112.62944794 106.75814056]
[100.85506439 114.29840088]
[99.56539154 123.34133148]
[93.57286835 127.66699982]
[86.29963684 140.78569031]
[79.02640533 153.90438843]
[78.75930786 160.51046753]
[75.66118622 165.27478027]
[71.33630371 167.30070496]
[63.67570114 180.19703674]
[56.01510620 193.09336853]
[48.35450745 205.98968506]
[52.03539658 221.12536621]
[44.08274841 234.09495544]
[29.63050652 237.51083374]
[21.96990967 250.40716553]
[14.30931187 263.30349731]
[26.57960701 271.94458008]
[38.14338303 281.51052856]
[48.93109131 291.94381714]
[58.87785339 303.18170166]
[67.92385101 315.15661621]
[76.01467133 327.79650879]
[83.10166168 341.02536011]
[89.14219666 354.76364136]
[94.09994507 368.92871094]
[97.94509888 383.43536377]
[100.65452576 398.19638062]
[102.21193695 413.12295532]
[102.60794830 428.12533569]
[101.84020233 443.11328125]
[99.91329956 457.99667358]
[96.83883667 472.68600464]
[92.63529205 487.09289551]
[87.32796478 501.13070679]
[80.94876099 514.71502686]
[73.53605652 527.76422119]
[65.13442230 540.19964600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 189]
[59 188]
[60 187]
[63 184]
[64 183]
[65 182]
[66 181]
[67 178]
[68 177]
[69 176]
[70 174]
[72 172]
[73 171]
[74 170]
[75 169]
[76 168]
[78 166]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
