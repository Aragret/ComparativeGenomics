%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[82.14865112 775.89129639]
[67.44160461 779.09869385]
[52.38995361 779.27966309]
[37.61006165 776.42663574]
[23.70715141 770.65655518]
[11.25054073 762.20562744]
[0.75032061 751.41998291]
[-7.36353254 738.74127197]
[-12.75876141 724.68859863]
[-15.21443558 709.83752441]
[-14.62999535 694.79614258]
[-11.02937317 680.18041992]
[-4.56001329 666.58874512]
[4.51316833 654.57781982]
[15.81863117 644.63946533]
[28.89342308 637.18060303]
[43.20214081 632.50665283]
[58.15884781 630.80908203]
[59.49708176 615.86889648]
[60.83531570 600.92871094]
[62.17354965 585.98852539]
[63.51178360 571.04833984]
[64.85002136 556.10815430]
[66.18825531 541.16796875]
[67.52648926 526.22778320]
[68.86472321 511.28762817]
[70.09169769 496.33789062]
[71.20734406 481.37942505]
[72.21160126 466.41308594]
[73.10442352 451.43969727]
[70.36461639 444.57562256]
[74.12363434 436.25051880]
[75.23928070 421.29205322]
[76.35492706 406.33358765]
[64.84587097 394.07061768]
[65.78545380 376.94076538]
[79.07991791 365.57080078]
[79.97273254 350.59738159]
[66.89317322 343.42868042]
[58.18737793 331.24185181]
[55.62567902 316.42300415]
[59.76895905 301.90219116]
[69.84692383 290.57427979]
[83.90068817 284.72167969]
[84.79351044 269.74829102]
[85.57482910 254.76863098]
[86.24461365 239.78359985]
[86.91439819 224.79855347]
[87.58418274 209.81352234]
[80.42290497 196.75344849]
[88.76869965 183.31253052]
[89.43848419 168.32749939]
[90.10826874 153.34245300]
[82.94699097 140.28239441]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[85.93902588 73.34188080]
[94.23690796 60.97279358]
[94.90669250 45.98775482]
[84.52012634 34.37926865]
[85.41284943 19.19184875]
[96.54377747 9.36138439]
[97.21356201 -5.62365437]
[97.88334656 -20.60869408]
[98.55313110 -35.59373093]
[99.22292328 -50.57876968]
[99.78112793 -65.56838226]
[99.66946411 -80.56796265]
[98.99967957 -95.55300140]
[98.32989502 -110.53804016]
[97.66011047 -125.52307892]
[96.87878418 -140.50271606]
[95.98596954 -155.47612000]
[95.09315491 -170.44952393]
[94.20034027 -185.42294312]
[83.16412354 -193.14411926]
[78.65571594 -205.62950134]
[82.11028290 -218.24488831]
[92.05049896 -226.44375610]
[91.38071442 -241.42880249]
[90.71092987 -256.41384888]
[90.04114532 -271.39886475]
[89.37136078 -286.38391113]
[80.39692688 -295.64794922]
[80.14755249 -308.14282227]
[88.21163177 -317.15930176]
[87.76502991 -332.15264893]
[87.31842041 -347.14599609]
[76.51699066 -355.19235229]
[72.38231659 -367.80642700]
[76.21095276 -380.31338501]
[86.39087677 -388.21264648]
[86.16754913 -403.21099854]
[85.94422150 -418.20932007]
[71.54451752 -422.89199829]
[59.44698715 -431.99847412]
[50.96387482 -444.54104614]
[47.01536942 -459.15911865]
[48.02976990 -474.26705933]
[53.89704895 -488.22604370]
[63.98076630 -499.52194214]
[77.18711090 -506.92944336]
[92.08355713 -509.64505005]
[107.05426025 -507.37417603]
[120.47530365 -500.36315918]
[130.89086914 -489.37249756]
[137.17115784 -475.59436035]
[138.63493347 -460.52334595]
[135.12341309 -445.79418945]
[127.01749420 -433.00463867]
[115.19645691 -423.54196167]
[100.94255829 -418.43264771]
[101.16588593 -403.43432617]
[101.38921356 -388.43597412]
[113.94642639 -377.24868774]
[114.53884888 -360.10333252]
[102.31176758 -347.59262085]
[102.75837708 -332.59927368]
[103.20497894 -317.60592651]
[113.21919250 -303.19473267]
[104.35639954 -287.05371094]
[105.02618408 -272.06866455]
[105.69596863 -257.08361816]
[106.36575317 -242.09858704]
[107.03553772 -227.11354065]
[119.92027283 -216.30509949]
[121.02291107 -199.18496704]
[109.17374420 -186.31575012]
[110.06655884 -171.34234619]
[110.95937347 -156.36894226]
[111.85219574 -141.39553833]
[115.38824463 -134.90568542]
[112.64514923 -126.19286346]
[113.31493378 -111.20782471]
[113.98471832 -96.22278595]
[114.65450287 -81.23774719]
[126.54895782 -90.37678528]
[141.14613342 -86.92388153]
[147.68553162 -73.42439270]
[141.34655762 -59.82963943]
[126.80206299 -56.16116333]
[114.77448273 -65.12177277]
[117.71743774 -58.34233475]
[114.20796204 -49.90898514]
[113.53816986 -34.92394638]
[112.86838531 -19.93890762]
[112.19860077 -4.95386934]
[111.52881622 10.03116989]
[121.73832703 20.81548691]
[121.27253723 36.02198792]
[109.89173126 46.65753937]
[109.22194672 61.64257812]
[116.38322449 74.70264435]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[113.39118958 141.64315796]
[105.09330750 154.01223755]
[104.42352295 168.99728394]
[103.75373840 183.98231506]
[110.86711121 198.11421204]
[102.56922150 210.48330688]
[101.89943695 225.46835327]
[101.22965240 240.45338440]
[100.55986786 255.43843079]
[103.30296326 264.15124512]
[99.76691437 270.64108276]
[98.87409973 285.61450195]
[112.13281250 293.09567261]
[120.79326630 305.54089355]
[123.18167114 320.45114136]
[118.87718201 334.86059570]
[108.78489685 345.92654419]
[94.94614410 351.49020386]
[94.05332947 366.46362305]
[104.09382629 375.44152832]
[107.08663940 388.37417603]
[102.15745544 400.48968506]
[91.31338501 407.44924927]
[90.19773865 422.40771484]
[89.08208466 437.36614990]
[88.07782745 452.33248901]
[87.18501282 467.30590820]
[89.79808044 476.05859375]
[86.16579437 482.49508667]
[85.05014801 497.45352173]
[87.53261566 506.24417114]
[83.80490875 512.62585449]
[82.46667480 527.56604004]
[81.12844086 542.50622559]
[79.79020691 557.44641113]
[78.45196533 572.38659668]
[77.11373138 587.32678223]
[75.77549744 602.26696777]
[74.43726349 617.20715332]
[73.09902954 632.14733887]
[87.51595306 636.47601318]
[100.76624298 643.61846924]
[112.30731201 653.28222656]
[121.66655731 665.07159424]
[128.46072388 678.50378418]
[132.41160583 693.02880859]
[133.35740662 708.05181885]
[131.25938416 722.95758057]
[126.20347595 737.13586426]
[118.39670563 750.00592041]
[108.15875244 761.04083252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 189]
[28 188]
[29 186]
[30 185]
[32 184]
[33 183]
[34 182]
[37 178]
[38 177]
[44 171]
[45 170]
[46 168]
[47 167]
[48 166]
[49 165]
[51 163]
[52 162]
[53 161]
[55 159]
[56 158]
[58 156]
[60 154]
[61 153]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 144]
[70 138]
[71 137]
[72 136]
[73 135]
[74 133]
[75 132]
[76 131]
[77 130]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[88 121]
[89 120]
[90 119]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
