%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[102.36669159 719.18231201]
[96.06700134 705.46307373]
[93.70345306 690.55285645]
[95.45144653 675.55792236]
[101.18125916 661.59112549]
[110.46770477 649.68884277]
[122.62166595 640.73431396]
[136.74124146 635.39196777]
[135.40299988 620.45178223]
[134.06477356 605.51159668]
[132.72653198 590.57141113]
[123.88462067 578.58520508]
[130.35987854 564.14978027]
[129.02163696 549.20959473]
[127.68340302 534.26940918]
[116.41300201 530.85443115]
[106.92639160 523.81848145]
[100.34864044 513.96697998]
[97.46963501 502.44085693]
[98.64922333 490.58456421]
[103.77247620 479.78912354]
[112.26037598 471.32904053]
[123.13520050 466.21176147]
[122.46541595 451.22671509]
[121.79563141 436.24166870]
[121.12583923 421.25665283]
[120.45605469 406.27160645]
[111.74369812 397.87985229]
[111.06304932 385.40106201]
[119.32360077 375.49520874]
[118.87699890 360.50183105]
[118.43038940 345.50848389]
[117.98378754 330.51513672]
[116.03830719 328.49691772]
[114.77504730 325.58645630]
[114.53785706 322.03973389]
[115.57164764 318.23242188]
[117.98378754 314.62191772]
[118.43038940 299.62857056]
[118.87699890 284.63522339]
[119.32360077 269.64187622]
[118.31934357 254.67553711]
[115.87361908 239.87626648]
[113.42788696 225.07699585]
[110.98216248 210.27772522]
[108.53643036 195.47845459]
[106.09070587 180.67918396]
[94.24092865 167.73509216]
[100.86781311 150.55470276]
[96.58561707 144.53102112]
[98.27392578 135.55397034]
[95.82819366 120.75469971]
[84.71944427 114.65148926]
[79.08834839 103.29612732]
[80.95350647 90.75918579]
[89.64630127 81.53482819]
[87.42118835 66.70078278]
[85.19606781 51.86673737]
[82.97095490 37.03269577]
[80.74583435 22.19865227]
[78.52072144 7.36460781]
[68.82189178 -5.13512278]
[74.58560944 -18.86934280]
[68.05892944 -5.36369896]
[56.05859756 3.63586473]
[41.26552963 6.11882162]
[26.98452568 1.53047276]
[16.40600204 -9.10413265]
[11.89322662 -23.40919685]
[14.45436573 -38.18893051]
[23.51725388 -50.14150620]
[37.05722046 -56.59668732]
[52.04939651 -56.11236572]
[65.14450073 -48.79674530]
[73.41705322 -36.28413391]
[73.64038086 -51.28247070]
[73.86370850 -66.28080750]
[74.08703613 -81.27914429]
[71.08573914 -89.90643311]
[74.42700195 -96.49868011]
[74.87360382 -111.49203491]
[72.00109100 -120.16304779]
[75.44012451 -126.70481873]
[76.10991669 -141.68986511]
[76.77970123 -156.67489624]
[65.00804901 -147.37821960]
[50.09503174 -148.99125671]
[40.58349991 -160.58999634]
[41.92209244 -175.53015137]
[53.34400177 -185.25332642]
[68.30623627 -184.18963623]
[78.23744202 -172.94931030]
[80.24145508 -187.81483459]
[82.24546814 -202.68037415]
[84.24948120 -217.54589844]
[85.25374603 -232.51223755]
[77.51644135 -246.31240845]
[85.25374603 -259.03967285]
[85.25374603 -274.03967285]
[85.25374603 -289.03967285]
[71.91261292 -296.64953613]
[64.17765045 -309.91851807]
[64.12950134 -325.27734375]
[71.78113556 -338.59454346]
[85.07429504 -346.28787231]
[100.43318939 -346.28787231]
[113.72634888 -338.59454346]
[121.37798309 -325.27734375]
[121.32984161 -309.91851807]
[113.59487152 -296.64953613]
[100.25374603 -289.03967285]
[100.25374603 -274.03967285]
[100.25374603 -259.03967285]
[107.99104309 -246.31240845]
[100.25374603 -232.51223755]
[109.57010651 -244.26832581]
[123.72854614 -249.22196960]
[138.34190369 -245.83825684]
[148.88209534 -235.16564941]
[152.08309937 -220.51116943]
[146.95307922 -206.41567993]
[135.08160400 -197.24682617]
[120.14718628 -195.84565735]
[106.77742004 -202.64634705]
[99.11501312 -215.54188538]
[97.11100006 -200.67636108]
[95.10698700 -185.81082153]
[93.10297394 -170.94529724]
[91.76473999 -156.00511169]
[91.09495544 -141.02008057]
[90.42516327 -126.03503418]
[89.86695862 -111.04542542]
[89.42034912 -96.05207825]
[89.08537292 -81.05581665]
[88.86204529 -66.05747986]
[88.63871765 -51.05914307]
[88.41539001 -36.06080627]
[89.41964722 -21.09446144]
[98.95932770 -9.65575981]
[93.35475922 5.13949060]
[95.57987976 19.97353363]
[97.80500031 34.80757904]
[100.03011322 49.64162064]
[102.25523376 64.47566223]
[104.48034668 79.30970764]
[117.97282410 88.81343842]
[120.54241943 105.11573792]
[110.62746429 118.30897522]
[113.07319641 133.10824585]
[115.62902832 147.88890076]
[125.76068878 155.87089539]
[127.67714691 168.22042847]
[120.88997650 178.23345947]
[123.33570862 193.03273010]
[125.78143311 207.83200073]
[128.22715759 222.63127136]
[130.67288208 237.43054199]
[133.11862183 252.22981262]
[138.78202820 238.34004211]
[149.54873657 227.89599609]
[163.60433960 222.65766907]
[178.58023071 223.50781250]
[191.95269775 230.30317688]
[201.46826172 241.89860535]
[205.52337646 256.34008789]
[203.43467712 271.19393921]
[195.55416870 283.95706177]
[183.20982361 292.47863770]
[168.48190308 295.32263184]
[153.85231018 292.00976562]
[141.78639221 283.09832764]
[134.31695557 270.08850098]
[133.87034607 285.08184814]
[133.42373657 300.07519531]
[132.97714233 315.06854248]
[132.97714233 330.06854248]
[133.42373657 345.06188965]
[133.87034607 360.05523682]
[134.31695557 375.04858398]
[144.35571289 390.48571777]
[135.44110107 405.60180664]
[136.11088562 420.58685303]
[136.78067017 435.57189941]
[137.45045471 450.55694580]
[138.12023926 465.54196167]
[154.78463745 473.48706055]
[165.06147766 488.72116089]
[166.17724609 506.97836304]
[157.90927124 523.19885254]
[142.62359619 532.93115234]
[143.96182251 547.87133789]
[145.30006409 562.81152344]
[154.23770142 575.86639404]
[147.66671753 589.23321533]
[149.00495911 604.17340088]
[150.34318542 619.11358643]
[151.68142700 634.05377197]
[166.52566528 636.80169678]
[180.07754517 643.45367432]
[191.33143616 653.51611328]
[199.45220947 666.24230957]
[203.83726501 680.68786621]
[204.16119385 695.78082275]
[200.39996338 710.40118408]
[192.83267212 723.46405029]
[182.02087402 734.00006104]
[168.76687622 741.22741699]
[154.05419922 744.60968018]
[138.97463989 743.89593506]
[124.64718628 739.13922119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 197]
[9 196]
[10 195]
[11 194]
[13 192]
[14 191]
[15 190]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[30 179]
[31 178]
[32 177]
[33 176]
[38 175]
[39 174]
[40 173]
[41 172]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[49 150]
[51 149]
[52 148]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[63 138]
[75 137]
[76 136]
[77 135]
[78 134]
[80 133]
[81 132]
[83 131]
[84 130]
[85 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 115]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
