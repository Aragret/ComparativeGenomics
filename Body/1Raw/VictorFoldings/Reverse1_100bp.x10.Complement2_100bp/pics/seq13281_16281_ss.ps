%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[150.07868958 630.28198242]
[145.26478577 616.06463623]
[141.74468994 601.47302246]
[139.54676819 586.62463379]
[138.68870544 571.63897705]
[139.17741394 556.63671875]
[141.00895691 541.73864746]
[144.16859436 527.06481934]
[148.63087463 512.73321533]
[154.35987854 498.85931396]
[161.30947876 485.55484009]
[169.42372131 472.92687988]
[178.63726807 461.07711792]
[188.87593079 450.10095215]
[200.05728149 440.08679199]
[212.09129333 431.11523438]
[204.23954773 418.33441162]
[196.38778687 405.55355835]
[191.85803223 419.85324097]
[178.60766602 426.88375854]
[164.22711182 422.61764526]
[156.95419312 409.49877930]
[160.95516968 395.04223633]
[173.93811035 387.52935791]
[188.46502686 391.26330566]
[181.78483582 377.83291626]
[175.10462952 364.40255737]
[168.42443848 350.97216797]
[161.24932861 364.14477539]
[146.50424194 366.89834595]
[135.05868530 357.20303345]
[135.34991455 342.20584106]
[147.16323853 332.96218872]
[161.78901672 336.28509521]
[156.12623596 322.39508057]
[150.46343994 308.50503540]
[144.80065918 294.61502075]
[139.13787842 280.72497559]
[133.47508240 266.83496094]
[127.81230164 252.94493103]
[124.77724457 267.63467407]
[116.19951630 279.94006348]
[103.46704102 287.87002563]
[88.64001465 290.14141846]
[74.11753845 286.38674927]
[62.24942398 277.21353149]
[54.95600891 264.10604858]
[53.41741180 249.18516541]
[57.88258743 234.86517334]
[67.62903595 223.46311951]
[81.07973480 216.82394409]
[96.05828094 216.02188110]
[110.14104462 221.18673706]
[121.05085754 231.48490906]
[117.72859955 216.85743713]
[114.40634155 202.22998047]
[111.08408356 187.60252380]
[101.01903534 180.89271545]
[98.13149261 168.73353577]
[104.50007629 157.51730347]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[79.89176941 100.56883240]
[64.92694855 99.54218292]
[56.27398682 87.28958130]
[60.31152725 72.84318542]
[74.06324768 66.85234833]
[87.39089203 73.73197174]
[85.38687897 58.86643982]
[83.38286591 44.00091171]
[81.37885284 29.13538361]
[79.37483215 14.26985550]
[77.14971924 -0.56418788]
[74.70399475 -15.36345863]
[72.25826263 -30.16272926]
[69.81253815 -44.96200180]
[65.32578278 -52.91856003]
[67.44227600 -59.99967957]
[65.21715546 -74.83372498]
[62.99204254 -89.66776276]
[53.29321289 -102.16749573]
[59.05693054 -115.90171814]
[56.83181381 -130.73576355]
[54.60669708 -145.56980896]
[52.38158035 -160.40385437]
[37.37036514 -161.79197693]
[23.12778282 -166.73284912]
[10.48187542 -174.93922424]
[0.16786009 -185.93397522]
[-7.21461964 -199.07788086]
[-11.23635674 -213.60679626]
[-11.66353226 -228.67599487]
[-8.47131062 -243.40939331]
[-1.84528303 -256.95040894]
[7.82932091 -268.51181030]
[19.99003220 -277.42135620]
[33.92984390 -283.16116333]
[48.83831406 -285.39743042]
[63.84868622 -284.00021362]
[78.08827209 -279.05068970]
[90.72920227 -270.83666992]
[101.03654480 -259.83566284]
[108.41105652 -246.68727112]
[112.42398834 -232.15592957]
[112.84202576 -217.08647156]
[109.64086914 -202.35501099]
[103.00663757 -188.81800842]
[93.32502747 -177.26249695]
[81.15891266 -168.36029053]
[67.21562195 -162.62896729]
[69.44074249 -147.79492188]
[71.66585541 -132.96087646]
[73.89097595 -118.12683105]
[83.43064880 -106.68813324]
[77.82608795 -91.89288330]
[80.05120087 -77.05883789]
[82.27632141 -62.22479630]
[84.61180878 -47.40772629]
[87.05753326 -32.60845566]
[89.50326538 -17.80918694]
[91.94898987 -3.00991535]
[95.24089050 0.45020339]
[96.39411926 6.01501179]
[94.24036407 12.26584244]
[96.24437714 27.13137054]
[98.24839020 41.99689865]
[100.25240326 56.86242676]
[102.25641632 71.72795868]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.17538452 154.41319275]
[131.79782104 167.82049561]
[125.71154022 184.28025818]
[129.03379822 198.90773010]
[132.35606384 213.53518677]
[135.67831421 228.16264343]
[141.87159729 233.75581360]
[143.79757690 240.99006653]
[141.70233154 247.28215027]
[147.36511230 261.17218018]
[153.02790833 275.06219482]
[158.69068909 288.95223999]
[164.35346985 302.84225464]
[170.01626587 316.73226929]
[175.67904663 330.62231445]
[181.85481262 344.29199219]
[188.53500366 357.72235107]
[195.21520996 371.15274048]
[201.89540100 384.58309937]
[209.16862488 397.70181274]
[217.02038574 410.48263550]
[224.87214661 423.26348877]
[238.31430054 416.58407593]
[252.30108643 411.13650513]
[266.71987915 406.96463013]
[281.45458984 404.10205078]
[296.38659668 402.57183838]
[311.39566040 402.38629150]
[326.36093140 403.54690552]
[341.16192627 406.04434204]
[355.67944336 409.85845947]
[369.79663086 414.95861816]
[383.39981079 421.30368042]
[396.37942505 428.84259033]
[408.63104248 437.51464844]
[420.05593872 447.25003052]
[430.56216431 457.97036743]
[440.06512451 469.58932495]
[448.48831177 482.01333618]
[455.76388550 495.14239502]
[461.83328247 508.87078857]
[466.64764404 523.08795166]
[470.16818237 537.67944336]
[472.36654663 552.52783203]
[473.22506714 567.51342773]
[472.73681641 582.51568604]
[470.90573120 597.41381836]
[467.74655151 612.08776855]
[463.28469849 626.41949463]
[457.55612183 640.29357910]
[450.60693359 653.59826660]
[442.49307251 666.22650146]
[433.27987671 678.07653809]
[423.04156494 689.05297852]
[411.86050415 699.06750488]
[399.82675171 708.03942871]
[387.03723145 715.89648438]
[373.59487915 722.57550049]
[359.60791016 728.02264404]
[345.18899536 732.19409180]
[330.45419312 735.05621338]
[315.52212524 736.58599854]
[300.51306152 736.77105713]
[285.54782104 735.60998535]
[270.74691772 733.11212158]
[256.22952271 729.29754639]
[242.11248779 724.19696045]
[228.50950623 717.85150146]
[215.53010559 710.31219482]
[203.27877808 701.63970947]
[191.85417175 691.90399170]
[181.34826660 681.18334961]
[171.84565735 669.56408691]
[163.42285156 657.13983154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 158]
[17 157]
[18 156]
[25 155]
[26 154]
[27 153]
[28 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[54 142]
[55 141]
[56 140]
[57 139]
[60 137]
[61 136]
[62 135]
[63 134]
[65 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 124]
[77 123]
[78 122]
[79 121]
[81 120]
[82 119]
[83 118]
[85 116]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
