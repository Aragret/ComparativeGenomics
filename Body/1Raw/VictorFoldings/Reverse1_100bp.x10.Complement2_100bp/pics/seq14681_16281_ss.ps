%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[103.31076050 444.90182495]
[104.38190460 459.91012573]
[102.59307861 474.84988403]
[98.00896454 489.18106079]
[90.79525757 502.38555908]
[81.21273041 513.98608398]
[69.60779572 523.56323242]
[56.39995956 530.77081299]
[42.06667328 535.34832764]
[27.12608337 537.13024902]
[12.11827755 536.05212402]
[-2.41422033 532.15307617]
[-15.94606972 525.57385254]
[-27.98810196 516.55242920]
[-38.10500336 505.41491699]
[-45.93106079 492.56387329]
[-51.18336105 478.46386719]
[-53.67203903 463.62463379]
[-53.30712891 448.58258057]
[-50.10182190 433.88146973]
[-44.17199326 420.05276489]
[-35.73199463 407.59631348]
[-25.08693314 396.96246338]
[-12.62161636 388.53555298]
[1.21333909 382.62030029]
[15.91780949 379.43045044]
[30.96023750 379.08135986]
[45.79684830 381.58566284]
[51.04356766 367.53320312]
[56.29028702 353.48071289]
[61.53700256 339.42825317]
[66.78372192 325.37576294]
[72.03044128 311.32330322]
[77.27716064 297.27084351]
[82.52387238 283.21835327]
[87.45546722 269.05221558]
[92.06948090 254.77949524]
[96.68348694 240.50675964]
[98.68750000 225.64123535]
[98.01771545 210.65618896]
[97.34793091 195.67115784]
[89.05004883 183.30206299]
[96.16342163 169.17016602]
[95.49363708 154.18513489]
[94.71231079 139.20549011]
[93.81949615 124.23208618]
[92.92668152 109.25868225]
[85.56236267 122.32646179]
[73.30715942 130.97573853]
[58.52735138 133.53646851]
[44.07669449 129.51422119]
[32.74538040 119.68561554]
[26.72131157 105.94841766]
[27.16763687 90.95506287]
[33.99818039 77.60052490]
[45.89407349 68.46335602]
[60.55839920 65.30780792]
[75.15971375 68.74316406]
[86.87872314 78.10610962]
[93.45297241 91.59004974]
[95.23544312 76.69633484]
[97.01790619 61.80261230]
[98.35614014 46.86243057]
[99.24895477 31.88902283]
[100.14176941 16.91561699]
[101.03459167 1.94221151]
[101.81591034 -13.03742599]
[102.48569489 -28.02246475]
[103.15547943 -43.00750351]
[88.98492432 -46.56445694]
[75.78864288 -52.82301331]
[64.07587433 -61.53950882]
[54.29818726 -72.37545776]
[46.83207703 -84.91073608]
[41.96445084 -98.65980530]
[39.88162231 -113.09059143]
[40.66217041 -127.64502716]
[44.27398682 -141.76065063]
[50.57557678 -154.89231873]
[59.32161331 -166.53332520]
[70.17248535 -176.23487854]
[82.70748138 -183.62342834]
[96.44109344 -188.41506958]
[110.84185028 -190.42642212]
[111.73467255 -205.39982605]
[112.62748718 -220.37322998]
[113.07408905 -235.36657715]
[113.07408905 -250.36657715]
[113.07408905 -265.36657715]
[103.49940491 -281.09576416]
[112.86013031 -295.93972778]
[112.63680267 -310.93807983]
[112.41347504 -325.93640137]
[112.19014740 -340.93475342]
[97.59140778 -344.77914429]
[84.57180786 -352.42065430]
[74.09750366 -363.29223633]
[66.94574738 -376.58715820]
[63.64725113 -391.31884766]
[64.44678497 -406.39410400]
[69.28501129 -420.69424438]
[77.80290985 -433.15811157]
[89.36840057 -442.86080933]
[103.12322998 -449.08230591]
[118.04671478 -451.36093140]
[133.03143311 -449.52764893]
[146.96539307 -443.71841431]
[158.81463623 -434.36437988]
[167.69985962 -422.15966797]
[172.96171570 -408.00991821]
[174.20973206 -392.96514893]
[171.35131836 -378.14178467]
[164.59857178 -364.63980103]
[154.45260620 -353.46118164]
[141.66629028 -345.43542480]
[127.18848419 -341.15808105]
[127.41181183 -326.15972900]
[127.63513947 -311.16140747]
[127.85846710 -296.16305542]
[136.31710815 -287.51562500]
[136.62591553 -275.02209473]
[128.07409668 -265.36657715]
[128.07409668 -250.36657715]
[128.07409668 -235.36657715]
[129.95861816 -233.29132080]
[131.13465881 -230.34454346]
[131.26614380 -226.79234314]
[130.11946106 -223.01747131]
[127.60089111 -219.48042297]
[126.70807648 -204.50700378]
[125.81526184 -189.53359985]
[140.70086670 -185.51248169]
[154.43426514 -178.48973083]
[166.41744995 -168.76849365]
[176.12814331 -156.76948547]
[183.14244080 -143.01274109]
[187.15338135 -128.09513855]
[187.98437500 -112.66443634]
[185.59696960 -97.39118195]
[180.09262085 -82.93959045]
[171.70835876 -69.93859863]
[160.80665588 -58.95457077]
[147.85966492 -50.46655655]
[133.42883301 -44.84543991]
[118.14051819 -42.33771896]
[117.47073364 -27.35268021]
[116.80094910 -12.36764050]
[119.64263916 -5.54513597]
[116.00799561 2.83502746]
[115.11518097 17.80843353]
[114.22235870 32.78183746]
[113.32954407 47.75524521]
[115.08721161 49.93899155]
[116.08577728 52.95055008]
[116.00559998 56.50427628]
[114.63625336 60.20419693]
[111.91162109 63.58507919]
[110.12915802 78.47879791]
[108.34669495 93.37251282]
[107.90008545 108.36586761]
[108.79290009 123.33927155]
[109.68571472 138.31268311]
[113.32036591 146.69284058]
[110.47867584 153.51535034]
[111.14846039 168.50038147]
[119.49424744 181.94129944]
[112.33296967 195.00137329]
[113.00275421 209.98640442]
[113.67253876 224.97145081]
[119.72129822 211.24510193]
[128.84014893 199.33517456]
[140.51338196 189.91520691]
[154.08082581 183.51797485]
[168.77516174 180.50524902]
[183.76536560 181.04742432]
[198.20365906 185.11384583]
[211.27348328 192.47451782]
[222.23568726 202.71316528]
[230.47030640 215.25076294]
[235.51162720 229.37821960]
[237.07453918 244.29656982]
[235.07064819 259.16210938]
[229.61329651 273.13412476]
[221.01110840 285.42242432]
[209.75059509 295.33206177]
[196.46856689 302.30258179]
[181.91622925 305.93975830]
[166.91654968 306.03790283]
[152.31784058 302.59149170]
[138.94573975 295.79537964]
[127.55650330 286.03396606]
[118.79424286 273.85928345]
[113.15451050 259.95989990]
[110.95622253 245.12077332]
[106.34220886 259.39349365]
[101.72820282 273.66622925]
[102.82279968 278.77005005]
[101.93862915 283.32763672]
[99.61510468 286.67669678]
[96.57634735 288.46508789]
[91.32962799 302.51754761]
[86.08290863 316.57000732]
[80.83618927 330.62249756]
[75.58947754 344.67495728]
[70.34275818 358.72744751]
[65.09603882 372.77990723]
[59.84931946 386.83236694]
[72.69674683 394.66436768]
[83.82960510 404.78643799]
[92.84545898 416.83261108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 196]
[37 195]
[38 194]
[39 169]
[40 168]
[41 167]
[43 165]
[44 164]
[45 162]
[46 161]
[47 160]
[60 159]
[61 158]
[62 157]
[63 152]
[64 151]
[65 150]
[66 149]
[67 147]
[68 146]
[69 145]
[84 131]
[85 130]
[86 129]
[87 124]
[88 123]
[89 122]
[91 119]
[92 118]
[93 117]
[94 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
