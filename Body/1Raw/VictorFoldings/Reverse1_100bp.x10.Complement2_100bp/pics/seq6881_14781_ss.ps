%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[86.00834656 550.99658203]
[70.96701813 550.32427979]
[56.39424896 546.53900146]
[42.92711258 539.80627441]
[31.15432549 530.42034912]
[21.59054565 518.79162598]
[14.65386200 505.42837524]
[10.64751530 490.91482544]
[9.74664497 475.88543701]
[11.99063492 460.99725342]
[17.28138733 446.90109253]
[25.38761139 434.21319580]
[35.95494080 423.48822021]
[48.52141190 415.19500732]
[62.53767776 409.69610596]
[77.39100647 407.23190308]
[78.06079102 392.24685669]
[78.73057556 377.26181030]
[71.56929779 364.20175171]
[79.91509247 350.76083374]
[80.58487701 335.77578735]
[81.25466156 320.79074097]
[81.92444611 305.80572510]
[82.59423065 290.82067871]
[74.66529083 281.68511963]
[75.10066223 269.19534302]
[84.21202850 260.06594849]
[85.10484314 245.09255981]
[78.13880157 231.92730713]
[86.68378448 218.61213684]
[79.71774292 205.44689941]
[88.26272583 192.13172913]
[89.04405212 177.15208435]
[89.71383667 162.16705322]
[90.38362122 147.18200684]
[91.05340576 132.19697571]
[91.72319031 117.21193695]
[82.02297211 106.44847870]
[82.66996765 91.97340393]
[93.29177094 82.11827850]
[93.96155548 67.13323975]
[94.63134003 52.14820099]
[93.73852539 37.17479706]
[91.29279327 22.37552643]
[88.84706879 7.57625484]
[86.40134430 -7.22301579]
[83.95561218 -22.02228737]
[69.08469391 -24.86499023]
[56.10797119 -32.60945511]
[46.58176804 -44.30440140]
[41.64087296 -58.52613068]
[41.86338425 -73.55184174]
[47.20314789 -87.56830597]
[56.99765396 -98.89070892]
[70.05017090 -106.16513062]
[67.60443878 -120.96440125]
[65.15871429 -135.76367188]
[62.71298599 -150.56294250]
[50.14898300 -159.77073669]
[47.87948990 -174.81414795]
[56.73514938 -186.73526001]
[54.28942108 -201.53453064]
[51.84369659 -216.33380127]
[49.39796829 -231.13307190]
[34.39268112 -232.64192200]
[20.30024529 -237.97938538]
[8.07916164 -246.77604675]
[-1.44100511 -258.42736816]
[-7.61594963 -272.13528442]
[-10.03022289 -286.96298218]
[-8.52517986 -301.89868164]
[-3.20938945 -315.92489624]
[5.54917145 -328.08764648]
[17.14858818 -337.56130981]
[30.79436874 -343.70477295]
[28.34864044 -358.50405884]
[23.60044289 -344.27539062]
[14.73838234 -332.17315674]
[2.60713410 -323.35086060]
[-11.63702869 -318.64941406]
[-26.63644218 -318.51687622]
[-40.96146011 -322.96591187]
[-53.24671173 -331.57244873]
[-62.32124329 -343.51617432]
[-67.32012939 -357.65872192]
[-67.76691437 -372.65203857]
[-63.61900330 -387.06713867]
[-55.27175522 -399.53002930]
[-43.52077103 -408.85281372]
[-29.48608780 -414.14694214]
[-14.50539589 -414.90774536]
[-0.00656047 -411.06277466]
[12.62848091 -402.97848511]
[22.19543648 -391.42544556]
[27.78270149 -377.50363159]
[29.34322357 -392.42224121]
[30.90374756 -407.34085083]
[32.46427155 -422.25946045]
[18.42580032 -427.81140137]
[6.40650463 -436.94589233]
[-2.70170403 -448.98513794]
[-8.22293663 -463.03570557]
[-9.74748135 -478.05496216]
[-7.16220570 -492.92840576]
[-0.65895551 -506.55227661]
[9.27968502 -517.91564941]
[21.91620255 -526.17523193]
[36.31288528 -530.71813965]
[51.40140152 -531.20727539]
[66.06208801 -527.60632324]
[79.20701599 -520.18249512]
[89.86074829 -509.48666382]
[97.23271179 -496.31256104]
[100.77585602 -481.63781738]
[100.22724915 -466.55133057]
[95.62760925 -452.17266846]
[87.31825256 -439.56881714]
[75.91580200 -429.67504883]
[62.26638031 -423.22555542]
[47.38287354 -420.69894409]
[45.82235336 -405.78033447]
[44.26182938 -390.86172485]
[42.70130539 -375.94311523]
[43.14791107 -360.94976807]
[45.59363937 -346.15051270]
[60.49043655 -344.72396851]
[74.52111053 -339.48593140]
[86.72713470 -330.78781128]
[96.27298737 -319.21765137]
[102.50331879 -305.56027222]
[104.98796844 -290.74423218]
[103.55164337 -275.77844238]
[98.28627777 -261.68365479]
[89.54515839 -249.42280579]
[77.91925049 -239.83511353]
[64.19723511 -233.57879639]
[66.64296722 -218.77952576]
[69.08869171 -203.98025513]
[71.53442383 -189.18098450]
[83.75464630 -180.74287415]
[86.44577789 -165.76914978]
[77.51226044 -153.00866699]
[79.95798492 -138.20939636]
[82.40370941 -123.41012573]
[84.84944153 -108.61085510]
[99.54837799 -105.92264557]
[112.46490479 -98.35346985]
[122.03031921 -86.80022430]
[127.07527161 -72.64501953]
[126.97267914 -57.58980179]
[121.71563721 -43.45177841]
[111.92053223 -31.94404221]
[98.75488281 -24.46801376]
[101.20061493 -9.66874313]
[103.64633942 5.13052750]
[106.09206390 19.92979813]
[108.53779602 34.72906876]
[113.94845581 20.73890305]
[124.24531555 9.83135128]
[137.90089417 3.62448215]
[152.88946533 3.03904867]
[166.98756409 8.16189671]
[178.10382080 18.23308182]
[184.58921814 31.75860214]
[185.48165894 46.73202896]
[180.64877319 60.93214417]
[170.80749512 72.25244141]
[157.41770935 79.01362610]
[142.46571350 80.21271515]
[128.16955566 75.67182922]
[116.64996338 66.06459045]
[109.61637878 52.81798935]
[108.94659424 67.80302429]
[108.27680969 82.78806305]
[117.97702789 93.55152130]
[117.33003235 108.02659607]
[106.70822906 117.88172150]
[106.03844452 132.86676025]
[105.36865997 147.85179138]
[104.69887543 162.83683777]
[104.02909088 177.82186890]
[106.77218628 186.53469849]
[103.23613739 193.02453613]
[110.13831329 207.26078796]
[101.65719604 219.50495911]
[108.55937195 233.74119568]
[100.07825470 245.98536682]
[99.18543243 260.95877075]
[107.80693054 277.22994995]
[97.57926941 291.49044800]
[96.90948486 306.47549438]
[96.23970032 321.46054077]
[95.56991577 336.44558716]
[94.90013123 351.43060303]
[102.01350403 365.56250000]
[93.71561432 377.93161011]
[93.04582977 392.91662598]
[92.37604523 407.90167236]
[106.95030212 411.68121338]
[120.42008972 418.40866089]
[132.19656372 427.78991699]
[141.76492310 439.41491699]
[148.70686340 452.77542114]
[152.71891785 467.28738403]
[153.62570190 482.31640625]
[151.38755798 497.20547485]
[146.10235596 511.30371094]
[138.00112915 523.99481201]
[127.43801880 534.72393799]
[114.87480927 543.02209473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 198]
[17 197]
[18 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[27 188]
[28 187]
[30 185]
[32 183]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[40 174]
[41 173]
[42 172]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[55 145]
[56 144]
[57 143]
[58 142]
[61 139]
[62 138]
[63 137]
[64 136]
[75 125]
[76 124]
[95 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
