%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[42.61724472 748.90863037]
[27.52679062 748.23413086]
[13.23808384 743.33416748]
[0.90944302 734.60601807]
[-8.45970440 722.75714111]
[-14.10984325 708.74810791]
[-15.58294296 693.71459961]
[-12.75958443 678.87530518]
[-5.86864567 665.43310547]
[4.53125620 654.47784424]
[17.59704781 646.89746094]
[32.26954269 643.30657959]
[32.93932724 628.32153320]
[33.60911560 613.33648682]
[34.27890015 598.35144043]
[27.11761856 585.29138184]
[35.46341324 571.85046387]
[36.13319778 556.86541748]
[36.80298233 541.88037109]
[29.64170074 528.82031250]
[37.98749542 515.37939453]
[38.65727997 500.39434814]
[39.32706451 485.40933228]
[39.99684906 470.42428589]
[40.66663361 455.43923950]
[41.22484589 440.44964600]
[41.33651352 425.45004272]
[41.11318588 410.45172119]
[40.88985825 395.45336914]
[40.66653061 380.45504761]
[39.88520813 365.47540283]
[38.54697418 350.53521729]
[32.99919128 364.47158813]
[23.94113159 376.42779541]
[12.02670193 385.54080200]
[-1.88398266 391.15264893]
[-16.78669930 392.85824585]
[-31.60560608 390.53445435]
[-45.27091599 384.34902954]
[-56.79611588 374.74853516]
[-65.34919739 362.42599487]
[-70.31269836 348.27099609]
[-71.32830048 333.30541992]
[-68.32269287 318.60964966]
[-61.51284409 305.24453735]
[-51.39037323 294.17495728]
[-38.68602371 286.20001221]
[-24.31693268 281.89547729]
[-9.32042122 281.57202148]
[5.22090292 285.25302124]
[18.25728798 292.67279053]
[28.84762573 303.29562378]
[36.22739029 316.35467529]
[39.86395645 330.90838623]
[43.18621826 316.28091431]
[46.50847626 301.65344238]
[49.83073807 287.02600098]
[53.15299606 272.39852905]
[56.47525406 257.77108765]
[44.73957062 248.56568909]
[38.13731766 235.12248230]
[38.02609253 220.08424377]
[44.48152161 206.43331909]
[56.27162170 196.90020752]
[71.09158325 193.41735840]
[74.41384125 178.78990173]
[77.73609924 164.16244507]
[81.05836487 149.53498840]
[84.38062286 134.90751648]
[87.70288086 120.28005981]
[91.02513885 105.65260315]
[93.80075073 90.91163635]
[96.02587128 76.07759094]
[98.25098419 61.24354935]
[91.11551666 44.26808167]
[102.57464600 30.97691154]
[96.75042725 16.26674461]
[106.11873627 4.68728065]
[108.12274933 -10.17824745]
[110.12677002 -25.04377556]
[104.30254364 -39.75394440]
[113.67086029 -51.33340836]
[115.67487335 -66.19893646]
[117.67888641 -81.06446075]
[108.36939240 -93.55330658]
[110.61351776 -108.60051727]
[122.57708740 -117.39872742]
[124.58110046 -132.26425171]
[126.58511353 -147.12979126]
[128.58912659 -161.99531555]
[122.76490784 -176.70547485]
[132.13322449 -188.28494263]
[126.30899811 -202.99511719]
[135.67730713 -214.57456970]
[137.68132019 -229.44010925]
[138.68557739 -244.40644836]
[138.68557739 -259.40643311]
[138.68557739 -274.40643311]
[138.68557739 -289.40643311]
[124.91171265 -295.98242188]
[115.36178589 -307.88879395]
[111.93194580 -322.76153564]
[115.30319214 -337.64770508]
[124.80615997 -349.59158325]
[138.55403137 -356.22174072]
[153.81713867 -356.22174072]
[167.56500244 -349.59158325]
[177.06797791 -337.64770508]
[180.43922424 -322.76153564]
[177.00938416 -307.88879395]
[167.45945740 -295.98242188]
[153.68557739 -289.40643311]
[153.68557739 -274.40643311]
[153.68557739 -259.40643311]
[153.68557739 -244.40644836]
[163.00195312 -256.16253662]
[177.16038513 -261.11618042]
[191.77374268 -257.73245239]
[202.31393433 -247.05984497]
[205.51493835 -232.40538025]
[200.38491821 -218.30989075]
[188.51344299 -209.14102173]
[173.57902527 -207.73985291]
[160.20925903 -214.54055786]
[152.54684448 -227.43609619]
[150.54283142 -212.57055664]
[156.51040649 -198.92367554]
[146.99874878 -186.28092957]
[152.96630859 -172.63404846]
[143.45465088 -159.99130249]
[141.45063782 -145.12577820]
[139.44662476 -130.26023865]
[137.44261169 -115.39471436]
[146.64927673 -103.74255371]
[144.82868958 -88.63824463]
[132.54441833 -79.06044769]
[130.54040527 -64.19492340]
[128.53639221 -49.32939529]
[134.50395203 -35.68251038]
[124.99229431 -23.03976250]
[122.98828125 -8.17423439]
[120.98426819 6.69129419]
[126.95182800 20.33817863]
[117.44017792 32.98092651]
[124.52246857 42.78744125]
[122.97454834 55.18856049]
[113.08502960 63.46866608]
[110.85990906 78.30271149]
[108.63479614 93.13675690]
[122.06504059 86.45629883]
[135.72544861 92.65250397]
[139.54609680 107.15777588]
[130.71052551 119.27935028]
[115.73199463 120.08166504]
[105.65260315 108.97486115]
[102.33033752 123.60231781]
[99.00807953 138.22978210]
[95.68582153 152.85723877]
[92.36356354 167.48469543]
[89.04130554 182.11216736]
[85.71903992 196.73962402]
[97.58054352 206.28248596]
[104.09592438 219.97323608]
[104.02127075 235.07339478]
[97.42494202 248.58818054]
[85.66342926 257.86050415]
[71.10271454 261.09332275]
[67.78045654 275.72079468]
[64.45819855 290.34826660]
[61.13593674 304.97570801]
[57.81367874 319.60317993]
[54.49141693 334.23065186]
[53.48715973 349.19699097]
[54.82539368 364.13717651]
[66.29990387 354.47613525]
[81.03669739 357.27380371]
[88.17235565 370.46780396]
[82.44674683 384.33206177]
[68.08056641 388.64633179]
[55.66486740 380.23171997]
[55.88819504 395.23004150]
[56.11152267 410.22839355]
[56.33485031 425.22671509]
[59.01331711 429.70700073]
[59.64247894 434.30673218]
[58.52000809 438.22528076]
[56.21819687 440.89624023]
[59.09070969 449.56726074]
[55.65167236 456.10903931]
[54.98188782 471.09405518]
[54.31210327 486.07910156]
[53.64231873 501.06414795]
[52.97253418 516.04919434]
[60.08590698 530.18109131]
[51.78802109 542.55017090]
[51.11823654 557.53521729]
[50.44845200 572.52026367]
[57.56182480 586.65216064]
[49.26393890 599.02124023]
[48.59415436 614.00628662]
[47.92436600 628.99133301]
[47.25458145 643.97637939]
[61.54820633 648.86193848]
[73.88560486 657.57775879]
[83.26665497 669.41717529]
[88.93086243 683.42053223]
[90.41906738 698.45257568]
[87.61061859 713.29473877]
[80.73318481 726.74377441]
[70.34429169 737.70953369]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 202]
[13 201]
[14 200]
[15 199]
[17 197]
[18 196]
[19 195]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 187]
[27 183]
[28 182]
[29 181]
[30 180]
[31 174]
[32 173]
[54 172]
[55 171]
[56 170]
[57 169]
[58 168]
[59 167]
[65 161]
[66 160]
[67 159]
[68 158]
[69 157]
[70 156]
[71 155]
[72 149]
[73 148]
[74 147]
[76 144]
[78 142]
[79 141]
[80 140]
[82 138]
[83 137]
[84 136]
[87 133]
[88 132]
[89 131]
[90 130]
[92 128]
[94 126]
[95 125]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
