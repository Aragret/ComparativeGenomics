%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[145.49110413 501.10922241]
[145.03019714 486.09249878]
[146.61842346 471.15292358]
[150.22621155 456.56875610]
[155.78633118 442.61172485]
[163.19520569 429.54180908]
[172.31481934 417.60253906]
[182.97526550 407.01629639]
[194.97795105 397.98031616]
[208.09928894 390.66290283]
[202.64393616 376.69012451]
[197.18858337 362.71731567]
[191.73323059 348.74450684]
[179.89698792 339.70278931]
[182.08544922 324.03369141]
[176.63008118 310.06088257]
[161.28164673 312.18023682]
[145.86251831 310.57159424]
[131.26562500 305.32394409]
[118.33721161 296.73703003]
[107.82790375 285.30444336]
[100.34904480 271.68508911]
[96.33716583 256.66519165]
[96.02849579 241.11308289]
[99.44508362 225.92881775]
[106.39323425 211.99217224]
[116.47451782 200.11166382]
[129.10861206 190.97763062]
[123.44582367 177.08761597]
[117.78304291 163.19758606]
[112.12025452 149.30755615]
[106.45746613 135.41752625]
[100.79467773 121.52750397]
[95.13189697 107.63747406]
[91.82511902 105.65312958]
[89.40906525 102.22084808]
[88.51079559 97.77111816]
[89.54170227 92.99858093]
[84.50479126 78.86955261]
[78.94556427 64.93775177]
[72.87172699 51.22248840]
[66.79789734 37.50722122]
[60.72406006 23.79195404]
[46.03787994 27.06424713]
[31.00028801 27.40825844]
[16.18928528 24.81264114]
[2.17378569 19.37899590]
[-10.50821972 11.31790543]
[-21.37031937 0.94076812]
[-29.99633789 -11.35223103]
[-36.05627823 -25.08754921]
[-39.31894684 -39.73653412]
[-39.66077805 -54.73576355]
[-37.07050323 -69.50872040]
[-31.64952469 -83.48793793]
[-23.60793304 -96.13684082]
[-13.25638103 -106.97027588]
[-0.99406856 -115.57316589]
[-7.06790257 -129.28843689]
[-13.14173603 -143.00370789]
[-19.62123299 -156.53204346]
[-26.50064468 -169.86148071]
[-33.38005829 -183.19090271]
[-40.25946808 -196.52033997]
[-47.13888168 -209.84976196]
[-61.24387741 -204.68717957]
[-75.88470459 -201.33316040]
[-90.83045959 -199.84063721]
[-105.84542847 -200.23312378]
[-120.69279480 -202.50445557]
[-135.13839722 -206.61877441]
[-148.95442200 -212.51121521]
[-161.92294312 -220.08885193]
[-173.83944702 -229.23216248]
[-184.51600647 -239.79693604]
[-193.78419495 -251.61657715]
[-201.49787903 -264.50463867]
[-207.53538513 -278.25787354]
[-211.80149841 -292.65939331]
[-214.22894287 -307.48205566]
[-214.77941895 -322.49203491]
[-213.44424438 -337.45266724]
[-210.24449158 -352.12799072]
[-205.23062134 -366.28652954]
[-198.48168945 -379.70501709]
[-190.10417175 -392.17178345]
[-180.23016357 -403.49023438]
[-169.01541138 -413.48184204]
[-156.63677979 -421.98904419]
[-143.28948975 -428.87768555]
[-129.18405151 -434.03909302]
[-114.54294586 -437.39184570]
[-99.59706879 -438.88311768]
[-84.58213043 -438.48937988]
[-69.73495483 -436.21679688]
[-55.28969574 -432.10125732]
[-41.47417450 -426.20764160]
[-28.50628471 -418.62893677]
[-16.59054756 -409.48461914]
[-5.91488934 -398.91894531]
[3.35231662 -387.09851074]
[11.06491375 -374.20980835]
[17.10126495 -360.45605469]
[21.36616516 -346.05416870]
[23.79235458 -331.23132324]
[24.34156418 -316.22128296]
[23.00513649 -301.26077271]
[19.80414581 -286.58572388]
[14.78907871 -272.42761230]
[8.03902817 -259.00970459]
[-0.33954656 -246.54364014]
[-10.21450424 -235.22601318]
[-21.43010139 -225.23535156]
[-33.80945206 -216.72917175]
[-26.93004036 -203.39974976]
[-20.05062866 -190.07031250]
[-13.17121601 -176.74089050]
[-6.29180336 -163.41145325]
[-3.66538644 -162.43162537]
[-1.26884568 -160.35238647]
[0.47713223 -157.25610352]
[1.18940735 -153.37574768]
[0.57353020 -149.07752991]
[6.64736414 -135.36227417]
[12.72119808 -121.64700317]
[27.33269310 -124.94522858]
[42.31168747 -125.32948303]
[57.08253098 -122.78311157]
[71.07720947 -117.40215302]
[83.75717926 -109.39165497]
[94.63410950 -99.05792236]
[103.28865814 -86.79673767]
[109.38668060 -73.07828522]
[112.69208527 -58.42904282]
[113.07601929 -43.41162872]
[110.52184296 -28.60316277]
[105.12587738 -14.57311249]
[97.09377289 -1.86137414]
[86.73263550 9.04249191]
[74.43933105 17.71811867]
[80.51316071 31.43338585]
[86.58699799 45.14865112]
[92.66082764 58.86391830]
[100.41696930 46.02482605]
[115.27030945 43.93241882]
[126.27153015 54.12914658]
[125.31093597 69.09835815]
[113.09663391 77.80530548]
[98.63381958 73.83263397]
[103.67073822 87.96166229]
[109.02191925 101.97468567]
[114.68470764 115.86471558]
[120.34749603 129.75474548]
[126.01027679 143.64477539]
[131.67306519 157.53479004]
[137.33584595 171.42481995]
[142.99864197 185.31484985]
[157.36494446 183.04931641]
[171.86717224 184.04421997]
[185.77508545 188.24610901]
[198.38912964 195.44012451]
[209.07557678 205.26098633]
[217.29843140 217.21154785]
[222.64627075 230.68797302]
[224.85284424 245.01022339]
[223.81030273 259.45635986]
[219.57452393 273.29898071]
[212.36204529 285.84182739]
[202.53909302 296.45477295]
[190.60289001 304.60552979]
[196.05824280 318.57830811]
[208.28468323 328.61947632]
[205.70602417 343.28915405]
[211.16137695 357.26196289]
[216.61672974 371.23477173]
[222.07209778 385.20755005]
[236.68034363 381.69857788]
[251.63034058 380.21151733]
[266.64358521 380.77404785]
[281.44036865 383.37573242]
[295.74505615 387.96807861]
[309.29116821 394.46551514]
[321.82632446 402.74703979]
[333.11700439 412.65835571]
[342.95288086 424.01480103]
[351.15072632 436.60482788]
[357.55783081 450.19390869]
[362.05477905 464.52886963]
[364.55783081 479.34268188]
[365.02035522 494.35931396]
[363.43374634 509.29907227]
[359.82754517 523.88360596]
[354.26895142 537.84124756]
[346.86148071 550.91198730]
[337.74316406 562.85223389]
[327.08386230 573.43963623]
[315.08215332 582.47692871]
[301.96160889 589.79571533]
[287.96664429 595.25976562]
[273.35803223 598.76715088]
[258.40786743 600.25262451]
[243.39469910 599.68841553]
[228.59819031 597.08514404]
[214.29399109 592.49127197]
[200.74859619 585.99237061]
[188.21432495 577.70947266]
[176.92471313 567.79693604]
[167.09005737 556.43939209]
[158.89356995 543.84851074]
[152.48796082 530.25872803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 176]
[11 175]
[12 174]
[13 173]
[15 171]
[16 170]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[38 150]
[39 149]
[40 143]
[41 142]
[42 141]
[43 140]
[58 125]
[59 124]
[60 123]
[61 118]
[62 117]
[63 116]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
