%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[106.75550842 428.59164429]
[111.87863159 414.30465698]
[121.81981659 402.83566284]
[135.23458862 395.73580933]
[133.45211792 380.84207153]
[124.25725555 369.12442017]
[130.29983521 354.50259399]
[128.51737976 339.60888672]
[126.73490906 324.71517944]
[122.81884003 318.44729614]
[125.03848267 309.58663940]
[121.95836639 305.93673706]
[121.13840485 300.31314087]
[123.66040039 294.20159912]
[122.54474640 279.24313354]
[113.88227081 267.12658691]
[120.57173157 252.78916931]
[119.45607758 237.83071899]
[118.34043121 222.87225342]
[117.22478485 207.91380310]
[114.88929749 193.09674072]
[111.34962463 178.52037048]
[100.82747650 167.97836304]
[105.08972931 152.74209595]
[101.55005646 138.16572571]
[86.83982849 135.85853577]
[74.12942505 128.10227966]
[65.35031891 116.07559967]
[61.83659363 101.60605621]
[64.12218475 86.89246368]
[71.85977936 74.17069244]
[83.87357330 65.37394714]
[80.33390045 50.79757309]
[76.79422760 36.22119904]
[73.25455475 21.64482307]
[60.23852921 8.61928463]
[65.83203888 -8.01440334]
[62.07574081 -22.53646278]
[58.31943893 -37.05852127]
[55.16754532 -40.04508209]
[53.31616592 -43.52888870]
[52.76192474 -47.04004669]
[53.34918594 -50.15801620]
[54.79934692 -52.55701065]
[51.91407394 -67.27690125]
[48.91930008 -81.97490692]
[45.81518936 -96.65020752]
[42.71107864 -111.32550812]
[39.60696793 -126.00081635]
[36.50286102 -140.67611694]
[33.39875031 -155.35142517]
[28.36183357 -169.48045349]
[21.48241997 -182.80987549]
[9.45473671 -187.46794128]
[3.99927187 -198.71168518]
[7.54991627 -210.27540588]
[0.86972147 -223.70578003]
[-5.81047297 -237.13615417]
[-12.49066734 -250.56652832]
[-19.17086220 -263.99691772]
[-25.85105705 -277.42727661]
[-32.53125000 -290.85766602]
[-32.48435211 -275.85772705]
[-35.85162354 -261.24057007]
[-42.45641708 -247.77294922]
[-51.95227051 -236.16137695]
[-63.84103775 -227.01493835]
[-77.49906921 -220.81347656]
[-92.20988464 -217.88227844]
[-107.20178223 -218.37512207]
[-121.68832397 -222.26614380]
[-134.90957642 -229.35124207]
[-146.17196655 -239.25874329]
[-154.88470459 -251.46890259]
[-160.59072876 -265.34121704]
[-162.99072266 -280.14797974]
[-161.95878601 -295.11245728]
[-157.54902649 -309.44961548]
[-149.99281311 -322.40734863]
[-139.68649292 -333.30596924]
[-127.17074585 -341.57373047]
[-113.10209656 -346.77694702]
[-98.21857452 -348.64260864]
[-83.30093384 -347.07290649]
[-69.13172913 -342.15014648]
[-56.45423889 -334.13259888]
[-45.93350601 -323.44079590]
[-38.12072754 -310.63418579]
[-39.45896149 -325.57434082]
[-42.94368362 -331.19293213]
[-43.05161667 -336.87493896]
[-40.60783005 -340.97824097]
[-41.50064850 -355.95162964]
[-42.39346313 -370.92504883]
[-43.28627777 -385.89843750]
[-44.17909622 -400.87185669]
[-58.55567551 -405.80969238]
[-69.94496155 -415.87710571]
[-76.61017609 -429.53884888]
[-77.53491211 -444.71163940]
[-72.57815552 -459.08169556]
[-62.49578094 -470.45773315]
[-48.82527542 -477.10498047]
[-33.65129089 -478.00973511]
[-19.28775024 -473.03408813]
[-7.92498732 -462.93676758]
[-1.29574370 -449.25753784]
[-0.41092947 -434.08236694]
[-5.40547276 -419.72537231]
[-15.51774120 -408.37591553]
[-29.20568848 -401.76467896]
[-28.31287193 -386.79125977]
[-27.42005730 -371.81784058]
[-26.52724075 -356.84445190]
[-25.63442612 -341.87103271]
[-24.51877594 -326.91259766]
[-23.18054199 -311.97241211]
[-19.10087585 -297.53784180]
[-12.42068100 -284.10748291]
[-5.74048662 -270.67709351]
[0.93970823 -257.24673462]
[7.61990309 -243.81634521]
[14.30009747 -230.38597107]
[20.98029137 -216.95559692]
[36.10635757 -208.05789185]
[34.81185150 -189.68928528]
[41.69126129 -176.35986328]
[41.83250427 -191.35919189]
[46.54224014 -205.60063171]
[55.37157059 -217.72674561]
[67.47893524 -226.58178711]
[81.71034241 -231.32173157]
[96.70934296 -231.49479675]
[111.04633331 -227.08448792]
[123.35478973 -218.51115417]
[132.46156311 -206.59197998]
[137.49864197 -192.46301270]
[137.98593140 -177.47093201]
[133.87698364 -163.04469299]
[125.56343842 -150.55929565]
[113.83769226 -141.20478821]
[99.81735992 -135.87277222]
[84.83877563 -135.07147217]
[70.32960510 -138.87725830]
[57.67277145 -146.92738342]
[48.07405090 -158.45552063]
[51.17816162 -143.78022766]
[54.28227234 -129.10491943]
[57.38638306 -114.42961884]
[60.49049377 -99.75431824]
[63.59460068 -85.07901764]
[68.05424500 -79.18550873]
[66.63396454 -70.16217041]
[69.51924133 -55.44228363]
[72.84149933 -40.81482315]
[76.59780121 -26.29276276]
[80.35409546 -11.77070427]
[90.61445618 -5.36355209]
[93.86274719 6.70427322]
[87.83093262 18.10515213]
[91.37060547 32.68152618]
[94.91027069 47.25790024]
[98.44994354 61.83427811]
[113.16017151 64.14145660]
[125.87057495 71.89771271]
[134.64967346 83.92440033]
[138.16340637 98.39394379]
[135.87780762 113.10753632]
[128.14021301 125.82930756]
[116.12642670 134.62605286]
[119.66609955 149.20242310]
[130.44142151 160.78701782]
[125.92599487 174.98069763]
[129.46566772 189.55706787]
[134.76141357 175.52299500]
[145.91098022 165.48870850]
[160.42353821 161.69587708]
[175.05694580 164.99183655]
[186.54206848 174.64027405]
[192.31307983 188.48567200]
[191.08073425 203.43496704]
[183.12034607 216.14843750]
[170.21028137 223.78584290]
[155.23466492 224.64099121]
[141.53912354 218.52284241]
[132.18324280 206.79815674]
[133.29888916 221.75660706]
[134.41453552 236.71505737]
[135.53018188 251.67352295]
[144.27246094 264.85998535]
[137.50320435 278.12750244]
[138.61885071 293.08593750]
[139.95709229 308.02612305]
[141.62863159 322.93270874]
[143.41108704 337.82641602]
[145.19355774 352.72012329]
[154.51593018 365.50308228]
[148.34584045 379.05963135]
[150.12831116 393.95333862]
[164.83964539 397.68710327]
[177.20649719 406.48626709]
[185.55635071 419.16082764]
[188.75996399 433.99664307]
[186.38404846 448.98727417]
[178.74996948 462.10540771]
[166.89013672 471.57687378]
[152.40850830 476.12078857]
[137.26361084 475.12255859]
[123.50365448 468.71722412]
[112.98957825 457.77105713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[7 196]
[8 195]
[9 194]
[11 193]
[14 192]
[15 191]
[17 189]
[18 188]
[19 187]
[20 186]
[21 174]
[22 173]
[24 171]
[25 170]
[32 163]
[33 162]
[34 161]
[35 160]
[37 157]
[38 156]
[39 155]
[44 154]
[45 153]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[51 146]
[52 127]
[53 126]
[56 124]
[57 123]
[58 122]
[59 121]
[60 120]
[61 119]
[62 118]
[88 117]
[89 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
