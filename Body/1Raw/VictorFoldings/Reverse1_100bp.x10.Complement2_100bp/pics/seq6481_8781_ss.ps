%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[249.54417419 444.39385986]
[256.64221191 431.15579224]
[265.37484741 418.93411255]
[275.59872437 407.92953491]
[287.14590454 398.32272339]
[279.10473633 385.66021729]
[267.37100220 382.71978760]
[260.56814575 372.23623657]
[262.80059814 359.53274536]
[254.94882202 346.75189209]
[247.09707642 333.97106934]
[239.24531555 321.19021606]
[224.74382019 317.98986816]
[216.59895325 305.14013672]
[220.05409241 289.95132446]
[212.20233154 277.17050171]
[204.35057068 264.38964844]
[187.95170593 263.64483643]
[175.09941101 253.16723633]
[170.98396301 236.93255615]
[177.41928101 221.29022217]
[169.37811279 208.62770081]
[161.33694458 195.96517944]
[152.83010864 183.61067200]
[143.86941528 171.58128357]
[134.90872192 159.55191040]
[125.94802856 147.52253723]
[116.98732758 135.49314880]
[108.02663422 123.46377563]
[99.06594086 111.43440247]
[99.20429993 126.43376160]
[91.91065216 139.54112244]
[79.09153748 147.33023071]
[64.09784698 147.76504517]
[50.84888077 140.73191833]
[42.80789948 128.06927490]
[42.07679367 113.08709717]
[48.84666824 99.70170593]
[61.34790039 91.41199493]
[76.31269073 90.38488770]
[89.82861328 96.88828278]
[82.75151062 83.66275787]
[75.67440033 70.43723297]
[68.59729767 57.21170425]
[63.22443771 71.21643066]
[49.57910156 77.44578552]
[35.47796249 72.33130646]
[28.99879074 58.80280685]
[33.85314941 44.61001968]
[47.26024628 37.88322067]
[61.53915405 42.47521210]
[55.67019272 28.67103577]
[49.80123138 14.86685848]
[34.63162613 12.90973854]
[22.55809784 3.68332338]
[16.76234055 -10.25495338]
[18.70841789 -25.12333488]
[27.77439308 -36.94169617]
[21.90543175 -50.74587250]
[16.03647232 -64.55004883]
[10.16751099 -78.35422516]
[4.29854965 -92.15840149]
[-8.22143269 -101.83107758]
[-6.08068562 -116.57103729]
[-11.94964600 -130.37521362]
[-12.84500980 -115.40196228]
[-17.38726234 -101.10623169]
[-25.29864311 -88.36221313]
[-36.09537125 -77.94920349]
[-49.11721420 -70.50396729]
[-63.56789398 -66.48178864]
[-78.56373596 -66.12861633]
[-93.18773651 -69.46604919]
[-106.54564667 -76.29000092]
[-117.82061005 -86.18318939]
[-126.32316589 -98.54063416]
[-131.53338623 -112.60668182]
[-133.13264465 -127.52118683]
[-131.02316284 -142.37211609]
[-125.33392334 -156.25132751]
[-116.41284180 -168.31011963]
[-104.80542755 -177.81106567]
[-91.22149658 -184.17320251]
[-76.49169922 -187.00746155]
[-61.51677322 -186.14054871]
[-47.21243668 -181.62547302]
[-34.45340729 -173.73831177]
[-24.01990700 -162.96139526]
[-16.54993629 -149.95368958]
[-17.44275284 -164.92709351]
[-18.33556747 -179.90049744]
[-19.22838402 -194.87390137]
[-20.12120056 -209.84730530]
[-34.84553146 -213.21936035]
[-48.02273560 -220.60433960]
[-58.58459473 -231.40359497]
[-65.67490387 -244.74166870]
[-68.71887970 -259.53729248]
[-67.46977234 -274.59109497]
[-62.02883530 -288.68267822]
[-52.83713913 -300.66973877]
[-40.63981247 -309.58050537]
[-26.42564201 -314.69265747]
[-11.34690475 -315.59173584]
[3.37403274 -312.20489502]
[16.54380989 -304.80667114]
[27.09481430 -293.99682617]
[34.17171860 -280.65164185]
[37.20083618 -265.85296631]
[35.93660355 -250.80043030]
[30.48151016 -236.71430969]
[21.27777481 -224.73651123]
[9.07150555 -215.83798218]
[-5.14779377 -210.74012756]
[-4.25497818 -195.76672363]
[-3.36216211 -180.79330444]
[-2.46934628 -165.81990051]
[-1.57653046 -150.84649658]
[1.85453057 -136.24417114]
[7.72349119 -122.44000244]
[19.82368660 -113.75469208]
[18.10272598 -98.02736664]
[23.97168732 -84.22319031]
[29.84064865 -70.41901398]
[35.70960999 -56.61483383]
[41.57857132 -42.81065750]
[56.37968826 -41.13958740]
[68.43729401 -32.22499084]
[74.45362091 -18.38048935]
[72.72105408 -3.28429770]
[63.60540771 8.99789810]
[69.47437286 22.80207443]
[75.34333038 36.60625076]
[81.82282257 50.13459778]
[88.89993286 63.36012650]
[95.97703552 76.58565521]
[103.05414581 89.81118011]
[111.09531403 102.47370148]
[120.05601501 114.50308228]
[129.01670837 126.53246307]
[137.97740173 138.56184387]
[146.93809509 150.59121704]
[155.89878845 162.62059021]
[164.85949707 174.64996338]
[169.57934570 160.41189575]
[183.60035706 155.08166504]
[196.58676147 162.58856201]
[198.96545410 177.39874268]
[188.98297119 188.59472656]
[173.99946594 187.92399597]
[182.04063416 200.58653259]
[190.08181763 213.24905396]
[203.86454773 213.08447266]
[215.83384705 219.69917297]
[222.91506958 231.27180481]
[223.34980774 244.72377014]
[217.13142395 256.53790283]
[224.98316956 269.31872559]
[232.83493042 282.09957886]
[247.94534302 285.88287354]
[255.72607422 298.95629883]
[252.02615356 313.33847046]
[259.87792969 326.11929321]
[267.72967529 338.90014648]
[275.58142090 351.68099976]
[291.97305298 360.07125854]
[291.76727295 377.61904907]
[299.80844116 390.28155518]
[313.41369629 383.91561890]
[327.72134399 379.34179688]
[342.49639893 376.63519287]
[357.49627686 375.84027100]
[372.47467041 376.97006226]
[387.18557739 380.00601196]
[401.38748169 384.89831543]
[414.84713745 391.56655884]
[427.34356689 399.90130615]
[438.67150879 409.76568604]
[448.64498901 420.99768066]
[457.10025024 433.41287231]
[463.89840698 446.80740356]
[468.92782593 460.96133423]
[472.10595703 475.64218140]
[473.38061523 490.60894775]
[472.73080444 505.61581421]
[470.16726685 520.41638184]
[465.73205566 534.76757812]
[459.49801636 548.43377686]
[451.56753540 561.19055176]
[442.07080078 572.82843018]
[431.16378784 583.15637207]
[419.02557373 592.00463867]
[405.85549927 599.22802734]
[391.86984253 604.70794678]
[377.29821777 608.35437012]
[362.37994385 610.10736084]
[347.35995483 609.93823242]
[332.48492432 607.84973145]
[317.99911499 603.87615967]
[304.14038086 598.08276367]
[291.13629150 590.56463623]
[279.20037842 581.44531250]
[268.52868652 570.87445068]
[259.29641724 559.02563477]
[251.65515137 546.09356689]
[245.73042297 532.29040527]
[241.61947632 517.84301758]
[239.38984680 502.98846436]
[239.07812500 487.97076416]
[240.68942261 473.03649902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[9 165]
[10 164]
[11 163]
[12 162]
[15 159]
[16 158]
[17 157]
[21 152]
[22 151]
[23 150]
[24 144]
[25 143]
[26 142]
[27 141]
[28 140]
[29 139]
[30 138]
[41 137]
[42 136]
[43 135]
[44 134]
[51 133]
[52 132]
[53 131]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[64 120]
[65 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
