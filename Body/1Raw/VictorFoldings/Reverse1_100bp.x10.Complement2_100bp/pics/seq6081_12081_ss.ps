%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[102.42877197 832.99261475]
[87.57602692 830.86621094]
[72.87044525 827.88769531]
[58.36089706 824.06683350]
[44.09557343 819.41644287]
[30.12186241 813.95190430]
[16.48618507 807.69140625]
[3.23383594 800.65570068]
[-9.59115982 792.86822510]
[-21.94619942 784.35473633]
[-33.79023743 775.14367676]
[-45.08393478 765.26550293]
[-55.78977203 754.75305176]
[-65.87218475 743.64135742]
[-75.29767609 731.96722412]
[-84.03494263 719.76940918]
[-92.05495453 707.08850098]
[-99.33107758 693.96661377]
[-105.83913422 680.44732666]
[-111.55750275 666.57556152]
[-116.46719360 652.39739990]
[-120.55189514 637.95989990]
[-123.79803467 623.31109619]
[-126.19483185 608.49957275]
[-127.73432922 593.57458496]
[-128.41140747 578.58569336]
[-128.22381592 563.58264160]
[-127.17218018 548.61535645]
[-125.25999451 533.73352051]
[-122.49361420 518.98657227]
[-118.88222504 504.42346191]
[-114.43782043 490.09262085]
[-109.17516327 476.04165649]
[-103.11174774 462.31719971]
[-96.26770020 448.96484375]
[-88.66577148 436.02899170]
[-80.33119965 423.55261230]
[-71.29168701 411.57708740]
[-61.57724762 400.14224243]
[-51.22016144 389.28607178]
[-40.25482941 379.04464722]
[-28.71767998 369.45193481]
[-16.64703751 360.53985596]
[-4.08299875 352.33798218]
[8.93269920 344.87356567]
[22.35681725 338.17141724]
[36.14476395 332.25381470]
[50.25073624 327.14038086]
[64.62787628 322.84811401]
[79.22842407 319.39126587]
[94.00387573 316.78131104]
[108.90515137 315.02697754]
[108.01232910 300.05355835]
[107.11951447 285.08016968]
[106.22669983 270.10675049]
[105.33388519 255.13334656]
[96.85276031 242.88917542]
[103.75494385 228.65293884]
[102.86212921 213.67953491]
[101.96931458 198.70613098]
[101.07649231 183.73272705]
[100.18367767 168.75930786]
[98.84544373 153.81912231]
[97.06298065 138.92541504]
[95.28050995 124.03169250]
[93.49804688 109.13797760]
[84.29615021 120.98387146]
[69.65970612 124.26631165]
[56.28029633 117.48462677]
[50.27480316 103.73929596]
[54.38886261 89.31450653]
[66.74158478 80.80507660]
[81.68546295 82.10140228]
[92.38916779 92.61249542]
[92.16584015 77.61415863]
[91.94251251 62.61582184]
[90.82686615 47.65736771]
[88.82285309 32.79183960]
[86.81883240 17.92630959]
[84.81481934 3.06078196]
[82.81080627 -11.80474663]
[80.80679321 -26.67027473]
[74.73233795 -12.95528412]
[63.65945435 -2.83642888]
[49.45411682 1.98108637]
[34.51018143 0.68542594]
[21.34595680 -6.50506878]
[12.17984962 -18.37867355]
[8.55650902 -32.93447495]
[11.08653164 -47.71957016]
[19.34356499 -60.24240494]
[31.93615150 -68.39266205]
[46.74222183 -70.79689026]
[61.26669312 -67.04991913]
[73.06193542 -57.78318787]
[80.14070892 -44.55671310]
[81.03352356 -59.53012085]
[81.92633820 -74.50352478]
[82.81915283 -89.47692871]
[83.71196747 -104.45034027]
[70.02402496 -111.06157684]
[59.91175461 -122.41104889]
[54.91720963 -136.76803589]
[55.80202484 -151.94319153]
[62.43126678 -165.62243652]
[73.79402924 -175.71975708]
[88.15756989 -180.69541931]
[103.33155823 -179.79063416]
[117.00205994 -173.14340210]
[127.08443451 -161.76737976]
[132.04119873 -147.39729309]
[131.11645508 -132.22451782]
[124.45124817 -118.56276703]
[113.06195831 -108.49536896]
[98.68537903 -103.55751801]
[97.79255676 -88.58411407]
[96.89974213 -73.61071014]
[96.00692749 -58.63730240]
[95.11411285 -43.66389847]
[95.67232513 -28.67428780]
[97.67633820 -13.80875969]
[99.68035126 1.05676830]
[101.68436432 15.92229652]
[103.68837738 30.78782463]
[105.69239044 45.65335464]
[113.97043610 33.14439392]
[127.97927856 27.78227997]
[142.49397278 31.56694221]
[152.10089111 43.08679962]
[153.21690369 58.04522324]
[145.42575073 70.86309814]
[131.63333130 76.75967407]
[116.98390961 73.53566742]
[106.94084930 62.39249039]
[107.16417694 77.39083099]
[107.38750458 92.38916779]
[108.39176178 107.35551453]
[110.17423248 122.24922943]
[111.95669556 137.14294434]
[113.73916626 152.03666687]
[116.46379089 155.41754150]
[117.83313751 159.11746216]
[117.91331482 162.67118835]
[116.91474915 165.68275452]
[115.15708160 167.86650085]
[116.04990387 182.83990479]
[116.94271851 197.81330872]
[117.83553314 212.78671265]
[118.72834778 227.76011658]
[127.27333069 241.07528687]
[120.30728912 254.24053955]
[121.20010376 269.21392822]
[122.09291840 284.18734741]
[122.98574066 299.16073608]
[123.87855530 314.13415527]
[138.88272095 314.10534668]
[153.86361694 314.94100952]
[168.77148438 316.63836670]
[183.55680847 319.19177246]
[198.17047119 322.59274292]
[212.56391907 326.82998657]
[226.68934631 331.88943481]
[240.49983215 337.75430298]
[253.94947815 344.40505981]
[266.99362183 351.81961060]
[279.58895874 359.97338867]
[291.69357300 368.83923340]
[303.26733398 378.38775635]
[314.27175903 388.58718872]
[324.67028809 399.40365601]
[334.42837524 410.80126953]
[343.51364136 422.74212646]
[351.89584351 435.18655396]
[359.54721069 448.09323120]
[366.44226074 461.41931152]
[372.55810547 475.12048340]
[377.87448120 489.15121460]
[382.37365723 503.46496582]
[386.04071045 518.01416016]
[388.86346436 532.75042725]
[390.83255005 547.62481689]
[391.94143677 562.58801270]
[392.18640137 577.59014893]
[391.56665039 592.58154297]
[390.08422852 607.51232910]
[387.74411011 622.33294678]
[384.55401611 636.99407959]
[380.52453613 651.44708252]
[375.66912842 665.64392090]
[370.00384521 679.53741455]
[363.54754639 693.08154297]
[356.32165527 706.23114014]
[348.35018921 718.94262695]
[339.65963745 731.17370605]
[330.27886963 742.88385010]
[320.23901367 754.03405762]
[309.57345581 764.58734131]
[298.31762695 774.50860596]
[286.50891113 783.76495361]
[274.18652344 792.32556152]
[261.39138794 800.16204834]
[248.16606140 807.24835205]
[234.55441284 813.56097412]
[220.60171509 819.07891846]
[206.35427856 823.78387451]
[191.85943604 827.66015625]
[177.16535950 830.69488525]
[162.32086182 832.87805176]
[147.37522888 834.20239258]
[132.37811279 834.66345215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 140]
[64 139]
[65 138]
[66 137]
[74 136]
[75 135]
[76 134]
[77 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
