%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[85.01130676 518.60656738]
[71.18276215 525.28985596]
[55.86640930 524.14752197]
[43.18227005 515.48681641]
[36.54232025 501.63739014]
[37.73266602 486.32470703]
[46.43311310 473.66775513]
[60.30328369 467.07125854]
[61.41893005 452.11279297]
[62.53458023 437.15435791]
[63.65023041 422.19589233]
[64.76587677 407.23745728]
[65.88152313 392.27899170]
[64.15656281 390.06930542]
[63.20295334 387.04321289]
[63.33603287 383.49108887]
[64.76030731 379.81195068]
[67.53497314 376.47201538]
[69.53898621 361.60650635]
[71.54299927 346.74096680]
[73.54701233 331.87542725]
[74.77398682 316.92568970]
[75.22059631 301.93234253]
[75.66720581 286.93899536]
[62.33469391 274.39468384]
[62.40662003 255.76922607]
[76.30412292 242.89392090]
[76.30412292 227.89392090]
[76.30412292 212.89392090]
[76.30412292 197.89392090]
[68.45178986 210.67440796]
[56.12628174 219.22319031]
[41.40467072 222.09967041]
[26.76780319 218.81910706]
[14.68225002 209.93432617]
[7.18463945 196.94256592]
[5.53845024 182.03317261]
[10.02109337 167.71862793]
[19.87716675 156.41120911]
[33.44574738 150.01638794]
[48.44028854 149.61183167]
[62.33395386 155.26568604]
[72.78540802 166.02520752]
[78.03365326 180.07884216]
[80.91892242 165.35894775]
[83.80419922 150.63905334]
[86.68946838 135.91915894]
[89.24530029 121.13850403]
[91.47042084 106.30446625]
[93.14196014 91.39788818]
[94.25760651 76.43943787]
[95.37326050 61.48098373]
[88.68379974 47.14355850]
[97.34627533 35.02701187]
[98.46192932 20.06855965]
[99.57757568 5.11010695]
[100.69322205 -9.84834671]
[101.80887604 -24.80680084]
[102.92452240 -39.76525497]
[96.23506165 -54.10267639]
[104.89754486 -66.21922302]
[96.81549072 -53.58274841]
[85.10935974 -44.20370102]
[71.01452637 -39.07187653]
[56.01845169 -38.72884369]
[41.70370102 -43.21080780]
[29.58095169 -52.04477310]
[20.92954445 -64.29846954]
[16.66248131 -78.67874146]
[17.23007584 -93.66799927]
[22.57242966 -107.68438721]
[32.12575150 -119.24873352]
[44.88185501 -127.14061737]
[59.49456024 -130.52719116]
[74.42175293 -129.05105591]
[88.08812714 -122.86800385]
[99.05144501 -112.63053894]
[106.15471649 -99.41904449]
[108.64831543 -84.62757874]
[113.47431183 -98.83003235]
[118.30030823 -113.03248596]
[123.12630463 -127.23493958]
[120.24037170 -142.79071045]
[131.66107178 -152.35192871]
[136.48706055 -166.55438232]
[141.31306458 -180.75685120]
[146.13905334 -194.95930481]
[150.96505737 -209.16175842]
[155.79106140 -223.36421204]
[160.61705017 -237.56666565]
[165.44305420 -251.76911926]
[160.45242310 -263.66265869]
[164.76438904 -275.39257812]
[175.55545044 -280.85879517]
[180.59237671 -294.98782349]
[177.93835449 -310.58483887]
[189.50013733 -319.97494507]
[194.53706360 -334.10397339]
[199.57397461 -348.23303223]
[186.46580505 -355.60079956]
[174.79145813 -365.07800293]
[164.88682556 -376.39199829]
[157.03688049 -389.21722412]
[151.46746826 -403.18466187]
[148.33885193 -417.89248657]
[147.74104309 -432.91748047]
[149.69123840 -447.82736206]
[154.13331604 -462.19314575]
[160.93949890 -475.60150146]
[169.91392517 -487.66665649]
[180.79840088 -498.04144287]
[193.27975464 -506.42736816]
[206.99887085 -512.58312988]
[221.56103516 -516.33166504]
[236.54725647 -517.56512451]
[251.52633667 -516.24798584]
[266.06732178 -512.41809082]
[279.75183105 -506.18572998]
[292.18612671 -497.73019409]
[303.01245117 -487.29473877]
[311.91931152 -475.17962646]
[318.65045166 -461.73345947]
[323.01217651 -447.34304810]
[324.87902832 -432.42251587]
[324.19723511 -417.40109253]
[320.98648071 -402.71096802]
[315.33911133 -388.77487183]
[307.41760254 -375.99371338]
[297.44989014 -364.73526001]
[285.72277832 -355.32342529]
[272.57363892 -348.02902222]
[258.38082886 -343.06192017]
[243.55268860 -340.56503296]
[228.51586914 -340.61019897]
[213.70300293 -343.19610596]
[208.66609192 -329.06707764]
[203.62916565 -314.93804932]
[206.64346313 -300.35162354]
[194.72140503 -289.95089722]
[189.68449402 -275.82186890]
[193.77171326 -258.75549316]
[179.64550781 -246.94313049]
[174.81950378 -232.74066162]
[169.99351501 -218.53820801]
[165.16751099 -204.33575439]
[160.34152222 -190.13330078]
[155.51551819 -175.93084717]
[150.68951416 -161.72839355]
[145.86352539 -147.52593994]
[149.09465027 -132.98602295]
[137.32876587 -122.40894318]
[132.50276184 -108.20648956]
[127.67676544 -94.00403595]
[122.85076904 -79.80157471]
[119.85599518 -65.10357666]
[126.62525177 -51.83607864]
[117.88297272 -38.64960480]
[116.76732635 -23.69115067]
[115.65167999 -8.73269749]
[114.53602600 6.22575521]
[113.42037964 21.18420792]
[112.30473328 36.14266205]
[119.07398987 49.41015625]
[110.33171082 62.59663010]
[109.21606445 77.55508423]
[108.10041046 92.51353455]
[120.99658966 84.85268402]
[135.08001709 90.01572418]
[139.96893311 104.19664001]
[132.05938721 116.94181061]
[117.18202209 118.85594940]
[106.30446625 108.52957916]
[104.07934570 123.36362457]
[105.99146271 128.22067261]
[105.86222839 132.86141968]
[104.11586761 136.54452515]
[101.40936279 138.80442810]
[98.52408600 153.52432251]
[95.63881683 168.24421692]
[92.75354004 182.96411133]
[91.30412292 197.89392090]
[91.30412292 212.89392090]
[91.30412292 227.89392090]
[91.30412292 242.89392090]
[101.18605042 249.50332642]
[106.59510040 259.95526123]
[106.29026031 271.60003662]
[100.46290588 281.54779053]
[90.66055298 287.38562012]
[90.21394348 302.37896729]
[89.76734161 317.37231445]
[100.62465668 307.02249146]
[115.58609772 305.94754028]
[127.81147766 314.63891602]
[131.71153259 329.12304688]
[125.50319672 342.77795410]
[112.02484131 349.36080933]
[97.43859863 345.86206055]
[88.41254425 333.87945557]
[86.40853119 348.74496460]
[84.40451813 363.61050415]
[82.40050507 378.47604370]
[80.83998108 393.39465332]
[79.72432709 408.35308838]
[78.60868073 423.31155396]
[77.49303436 438.26998901]
[76.37738800 453.22845459]
[75.26173401 468.18692017]
[87.99991608 476.76794434]
[94.72656250 490.57546997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 208]
[9 207]
[10 206]
[11 205]
[12 204]
[13 203]
[18 202]
[19 201]
[20 200]
[21 199]
[22 191]
[23 190]
[24 189]
[27 184]
[28 183]
[29 182]
[30 181]
[44 180]
[45 179]
[46 178]
[47 177]
[48 173]
[49 172]
[50 166]
[51 165]
[52 164]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[61 155]
[79 154]
[80 153]
[81 152]
[82 151]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[94 140]
[95 139]
[97 137]
[98 136]
[99 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
