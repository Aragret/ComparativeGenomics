%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[48.27811050 712.46014404]
[33.93946838 708.00958252]
[20.13443947 702.10833740]
[7.00936699 694.81884766]
[-5.29661655 686.21844482]
[-16.65306091 676.39831543]
[-26.93958092 665.46252441]
[-36.04713440 653.52697754]
[-43.87917328 640.71826172]
[-50.35268021 627.17211914]
[-55.39902496 613.03216553]
[-58.96471786 598.44830322]
[-61.01195908 583.57507324]
[-61.51905060 568.57019043]
[-60.48060989 553.59265137]
[-57.90764618 538.80133057]
[-53.82744217 524.35290527]
[-48.28324127 510.40066528]
[-41.33382034 497.09240723]
[-33.05284500 484.56924438]
[-23.52809715 472.96395874]
[-12.86054802 462.39950562]
[-1.16327715 452.98791504]
[11.43971729 444.82897949]
[24.81483650 438.00912476]
[38.82029724 432.60070801]
[53.30763245 428.66101074]
[68.12326813 426.23184204]
[67.23045349 411.25842285]
[66.33763885 396.28500366]
[65.44482422 381.31161499]
[64.55200958 366.33819580]
[63.65919113 351.36480713]
[48.60560989 346.41348267]
[36.57544708 336.03924561]
[29.43014145 321.80831909]
[28.29024887 305.88650513]
[33.35981750 290.70971680]
[43.89062881 278.61123657]
[58.29245758 271.46313477]
[57.17681122 256.50466919]
[56.06116104 241.54621887]
[50.35744095 255.41949463]
[41.29971313 267.37597656]
[29.48873901 276.62265015]
[15.70790195 282.54620361]
[0.87123483 284.75375366]
[-14.03719997 283.09890747]
[-28.02857971 277.69137573]
[-40.17490768 268.88986206]
[-49.67055511 257.27810669]
[-55.88571930 243.62631226]
[-58.40816498 228.83992004]
[-57.07059097 213.89967346]
[-51.96170807 199.79650879]
[-43.42037582 187.46583557]
[-32.01310730 177.72549438]
[-18.49650574 171.22154236]
[-3.76707983 168.38534546]
[11.19822121 169.40502930]
[25.40680313 174.21295166]
[37.91625977 182.49023438]
[47.89688873 193.68788147]
[54.68670654 207.06317139]
[57.83578873 221.73408508]
[61.59209061 207.21203613]
[65.34838867 192.68997192]
[69.10469055 178.16790771]
[67.49581909 173.67118835]
[68.69467926 168.11602783]
[73.19506073 163.27267456]
[77.38207245 148.86889648]
[71.83285522 138.12028503]
[75.20323944 126.08599091]
[86.21162415 119.36450958]
[90.61262512 105.02466583]
[93.82589722 90.37287903]
[95.82991028 75.50734711]
[97.83392334 60.64182281]
[99.83793640 45.77629471]
[101.84194946 30.91076469]
[103.84596252 16.04523659]
[105.84998322 1.17970824]
[96.50503540 -8.52011871]
[94.48239899 -21.63954735]
[100.29904175 -33.35486984]
[111.63070679 -39.48862076]
[113.85581970 -54.32266617]
[116.08094025 -69.15670776]
[117.53035736 -84.08651733]
[110.41698456 -98.21841431]
[118.71486664 -110.58750153]
[119.38465118 -125.57254028]
[120.05444336 -140.55758667]
[109.66786957 -152.16606140]
[110.56060028 -167.35348511]
[121.69152832 -177.18394470]
[122.36131287 -192.16899109]
[123.03109741 -207.15402222]
[123.70088196 -222.13906860]
[110.06021881 -228.91049194]
[100.35803986 -240.64878845]
[96.27531433 -255.32023621]
[98.51938629 -270.38290405]
[106.70146942 -283.22711182]
[119.40396118 -291.62750244]
[134.42608643 -294.12866211]
[149.16516113 -290.29727173]
[161.06755066 -280.79711914]
[168.07110596 -267.27416992]
[168.96240234 -252.07135010]
[163.58703613 -237.82264709]
[152.87631226 -226.99674988]
[138.68591309 -221.46928406]
[138.01612854 -206.48423767]
[137.34634399 -191.49920654]
[136.67655945 -176.51416016]
[146.88607788 -165.72984314]
[146.42028809 -150.52334595]
[135.03947449 -139.88780212]
[134.36968994 -124.90275574]
[133.69990540 -109.91771698]
[140.86119080 -96.85765076]
[132.51539612 -83.41673279]
[143.52560425 -93.60374451]
[158.50138855 -94.45581818]
[170.59600830 -85.58338928]
[174.27998352 -71.04280853]
[167.86903381 -57.48184586]
[154.29417419 -51.10037994]
[139.76164246 -54.81593704]
[130.91497803 -66.93159485]
[128.68986511 -52.09754944]
[126.46474457 -37.26350403]
[137.02984619 -24.17849731]
[134.81881714 -7.16596699]
[120.71550751 3.18372178]
[118.71149445 18.04924965]
[116.70748138 32.91477966]
[114.70346832 47.78030777]
[112.69945526 62.64583588]
[110.69544220 77.51136017]
[108.69142914 92.37689209]
[118.72856903 81.22988892]
[132.76399231 75.93773651]
[147.66215515 77.68272400]
[160.09475708 86.07500458]
[167.28431702 99.23973846]
[167.62469482 114.23587799]
[161.03982544 127.71324921]
[149.00079346 136.66096497]
[134.19715881 139.08010864]
[119.93607330 134.43020630]
[109.40351105 123.75007629]
[104.95246887 109.42565918]
[100.55147552 123.76551056]
[105.08983612 141.61164856]
[91.78585815 153.05590820]
[87.59884644 167.45968628]
[83.62674713 181.92420959]
[79.87045288 196.44627380]
[76.11415100 210.96833801]
[72.35784912 225.49038696]
[71.01961517 240.43057251]
[72.13526154 255.38903809]
[73.25090790 270.34747314]
[86.90277100 274.40676880]
[98.32508850 282.86444092]
[106.15793610 294.68811035]
[109.47743225 308.44631958]
[107.90465546 322.48156738]
[101.64878845 335.11026001]
[91.47956085 344.82443237]
[78.63259888 350.47198486]
[79.52541351 365.44540405]
[80.41822815 380.41879272]
[81.31104279 395.39221191]
[82.20385742 410.36560059]
[83.09667969 425.33901978]
[98.09600067 425.99041748]
[112.94884491 428.18066406]
[127.49775696 431.88647461]
[141.58851624 437.06860352]
[155.07174683 443.67211914]
[167.80451965 451.62701416]
[179.65187073 460.84896851]
[190.48820496 471.24023438]
[200.19863892 482.69061279]
[208.68026733 495.07876587]
[215.84313965 508.27334595]
[221.61135864 522.13452148]
[225.92375183 536.51531982]
[228.73463440 551.26330566]
[230.01417542 566.22210693]
[229.74884033 581.23321533]
[227.94143677 596.13751221]
[224.61111450 610.77691650]
[219.79318237 624.99633789]
[213.53871155 638.64501953]
[205.91400146 651.57818604]
[196.99987793 663.65887451]
[186.89083862 674.75891113]
[175.69403076 684.76074219]
[163.52818298 693.55822754]
[150.52221680 701.05816650]
[136.81404114 707.18103027]
[122.54894257 711.86193848]
[107.87815094 715.05133057]
[92.95718384 716.71527100]
[77.94420624 716.83618164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[33 174]
[40 166]
[41 165]
[42 164]
[65 163]
[66 162]
[67 161]
[68 160]
[71 159]
[72 158]
[75 156]
[76 155]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[87 134]
[88 133]
[89 132]
[90 124]
[92 122]
[93 121]
[94 120]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
