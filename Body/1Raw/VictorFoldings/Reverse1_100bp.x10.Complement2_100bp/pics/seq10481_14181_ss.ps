%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[129.55682373 667.56225586]
[115.64124298 673.24182129]
[101.02174377 676.73046875]
[86.04103088 677.94647217]
[71.05027008 676.86126709]
[56.40087509 673.50042725]
[42.43623734 667.94256592]
[29.48371506 660.31811523]
[17.84693146 650.80572510]
[7.79866934 639.62835693]
[-0.42552388 627.04809570]
[-6.63286257 613.35980225]
[-10.67783737 598.88439941]
[-12.46562767 583.96112061]
[-11.95432663 568.93981934]
[-9.15591908 554.17260742]
[-4.13600349 540.00573730]
[2.98774600 526.77124023]
[12.04833794 514.77929688]
[22.83337975 504.31109619]
[35.09005356 495.61199951]
[48.53104782 488.88592529]
[62.84128571 484.29052734]
[77.68531036 481.93356323]
[92.71516418 481.87023926]
[94.94027710 467.03619385]
[97.16539764 452.20214844]
[99.39051056 437.36813354]
[101.61563110 422.53408813]
[103.84075165 407.70004272]
[106.06586456 392.86599731]
[107.95915985 377.98596191]
[109.51968384 363.06735229]
[111.08020020 348.14874268]
[103.70907593 338.55743408]
[104.88707733 326.11572266]
[114.52568817 317.54486084]
[116.30815125 302.65112305]
[118.09062195 287.75741577]
[119.87308502 272.86370850]
[119.53810883 257.86743164]
[117.09238434 243.06816101]
[114.64665222 228.26889038]
[112.20092773 213.46961975]
[109.75519562 198.67034912]
[107.30947113 183.87107849]
[97.60054779 172.57568359]
[102.98421478 157.69862366]
[100.53848267 142.89935303]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[81.63687134 45.30735016]
[78.75160217 30.58745766]
[75.75682831 15.88945389]
[72.65271759 1.21415198]
[62.22708511 -10.68613243]
[67.16310883 -24.73906517]
[64.05899811 -39.41436768]
[60.95489120 -54.08967209]
[57.52383041 -68.69199371]
[53.76752853 -83.21405029]
[50.01122665 -97.73611450]
[45.82421494 -112.13989258]
[41.21020889 -126.41262817]
[27.41931534 -133.65480042]
[22.94337273 -148.19511414]
[29.93266487 -161.29798889]
[18.32556152 -172.04907227]
[21.77280617 -186.53926086]
[17.15879631 -200.81199646]
[12.54478741 -215.08473206]
[7.93077850 -229.35746765]
[-6.92967081 -227.08518982]
[-21.96217728 -227.22627258]
[-36.77736282 -229.77703857]
[-50.99148178 -234.67141724]
[-64.23635101 -241.78265381]
[-76.16889191 -250.92652893]
[-86.48003387 -261.86621094]
[-94.90268707 -274.31832886]
[-101.21868134 -287.96032715]
[-105.26442719 -302.43887329]
[-106.93511963 -317.37890625]
[-106.18749237 -332.39349365]
[-103.04090118 -347.09365845]
[-97.57685852 -361.09866333]
[-89.93688965 -374.04577637]
[-80.31889343 -385.59954834]
[-68.97200012 -395.46081543]
[-56.19011688 -403.37405396]
[-42.30432892 -409.13436890]
[-27.67430878 -412.59249878]
[-12.67901039 -413.65890503]
[2.29315162 -412.30590820]
[16.85436249 -408.56863403]
[30.62745285 -402.54385376]
[43.25566483 -394.38760376]
[54.41189957 -384.31115723]
[63.80718231 -372.57553101]
[71.19815063 -359.48471069]
[76.39336395 -345.37774658]
[79.25825500 -330.62008667]
[79.71861267 -315.59399414]
[77.76251221 -300.68862915]
[73.44062042 -286.29010010]
[66.86489105 -272.77136230]
[58.20564651 -260.48260498]
[47.68718338 -249.74212646]
[35.58195114 -240.82810974]
[22.20351219 -233.97146606]
[26.81752205 -219.69873047]
[31.43153000 -205.42601013]
[36.04553986 -191.15327454]
[47.32261658 -181.42306519]
[44.20539856 -165.91198730]
[57.54214096 -159.38000488]
[62.42472076 -144.97114563]
[55.48294067 -131.02664185]
[60.09695053 -116.75390625]
[62.52846146 -115.35894775]
[64.55391693 -112.91678619]
[65.77168274 -109.57726288]
[65.84174347 -105.63269043]
[64.53328705 -101.49240875]
[68.28958893 -86.97035217]
[72.04589081 -72.44829559]
[74.88210297 -70.35348511]
[76.84459686 -66.78086090]
[77.24982452 -62.15602493]
[75.63019562 -57.19377899]
[78.73430634 -42.51847839]
[81.83840942 -27.84317589]
[92.04201508 -16.99256706]
[87.32801819 -1.88995814]
[90.43212891 12.78534412]
[94.89176941 18.67884827]
[93.47149658 27.70218658]
[96.35676575 42.42207718]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[116.64292145 130.47840881]
[117.34139252 136.11837769]
[115.33775330 140.45362854]
[117.78348541 155.25289917]
[127.66734314 167.60684204]
[122.10874176 181.42535400]
[124.55446625 196.22462463]
[127.00019836 211.02389526]
[129.44592285 225.82316589]
[131.89164734 240.62243652]
[134.33737183 255.42170715]
[138.98358154 241.15942383]
[147.57810974 228.86576843]
[159.37745667 219.60426331]
[173.36083984 214.17611694]
[188.31858826 213.05091858]
[202.95668030 216.32601929]
[216.00877380 223.71807861]
[226.34576416 234.58761597]
[233.07336426 247.99430847]
[235.60957336 262.77835083]
[233.73500061 277.66073608]
[227.61180115 291.35403442]
[217.76971436 302.67364502]
[205.06015015 310.64025879]
[190.58262634 314.56472778]
[175.58959961 314.10751343]
[161.37809753 309.30819702]
[149.17758179 300.58193970]
[140.04350281 288.68368530]
[134.76679993 274.64614868]
[132.98432922 289.53988647]
[131.20187378 304.43359375]
[129.41940308 319.32730103]
[137.05712891 336.08279419]
[125.99880981 349.70925903]
[124.43828583 364.62786865]
[122.87776184 379.54647827]
[125.00485229 384.31329346]
[125.08296967 388.95520020]
[123.50279999 392.71261597]
[120.89990997 395.09109497]
[118.67478943 409.92514038]
[116.44967651 424.75918579]
[114.22455597 439.59323120]
[111.99944305 454.42727661]
[109.77432251 469.26132202]
[107.54920959 484.09536743]
[121.89901733 488.56564331]
[135.39822388 495.17413330]
[147.73037720 503.76589966]
[158.60639954 514.13952637]
[167.77133179 526.05187988]
[175.01036072 539.22369385]
[180.15376282 553.34625244]
[183.08099365 568.08843994]
[183.72340393 583.10467529]
[182.06597900 598.04296875]
[178.14752197 612.55322266]
[172.05993652 626.29516602]
[163.94587708 638.94677734]
[153.99559021 650.21136475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 196]
[26 195]
[27 194]
[28 193]
[29 192]
[30 191]
[31 190]
[32 186]
[33 185]
[34 184]
[37 182]
[38 181]
[39 180]
[40 179]
[41 159]
[42 158]
[43 157]
[44 156]
[45 155]
[46 154]
[48 152]
[49 151]
[50 148]
[51 147]
[53 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 139]
[59 138]
[61 136]
[62 135]
[63 134]
[64 130]
[65 129]
[66 128]
[67 123]
[68 122]
[71 119]
[73 117]
[74 116]
[75 115]
[76 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
