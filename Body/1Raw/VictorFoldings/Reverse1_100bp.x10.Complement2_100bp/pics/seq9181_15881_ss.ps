%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[185.39427185 692.29040527]
[172.93533325 683.92883301]
[161.00930786 674.82330322]
[149.66058350 665.00762939]
[138.93136597 654.51837158]
[128.86158752 643.39453125]
[119.48868561 631.67742920]
[110.84754181 619.41076660]
[102.97029877 606.64007568]
[95.88625336 593.41296387]
[89.62177277 579.77856445]
[84.20015717 565.78759766]
[79.64157104 551.49212646]
[75.96297455 536.94531250]
[73.17805481 522.20135498]
[71.29716492 507.31503296]
[70.32730865 492.34170532]
[70.27209473 477.33709717]
[71.13172150 462.35705566]
[72.90299988 447.45727539]
[75.57933807 432.69320679]
[79.15077209 418.11975098]
[83.60401917 403.79110718]
[88.92252350 389.76062012]
[95.08648682 376.08047485]
[102.07298279 362.80157471]
[109.85602570 349.97326660]
[118.40665436 337.64334106]
[127.69306946 325.85760498]
[137.68070984 314.65994263]
[148.33242798 304.09197998]
[159.60861206 294.19305420]
[171.46730042 284.99996948]
[183.86436462 276.54696655]
[196.75370789 268.86544800]
[189.87429810 255.53602600]
[182.99488831 242.20658875]
[176.11547852 228.87716675]
[168.55108643 215.92416382]
[160.32228088 203.38276672]
[152.09347534 190.84136963]
[143.86466980 178.29997253]
[135.54272461 165.82017517]
[127.12810516 153.40267944]
[118.71348572 140.98518372]
[110.29887390 128.56768799]
[101.88425446 116.15019226]
[86.60792542 109.22125244]
[85.58466339 92.47821808]
[71.33403015 85.60581970]
[70.37813568 70.74191284]
[61.77957535 58.45107651]
[47.52893448 51.57867813]
[46.57304382 36.71477509]
[37.97447968 24.42393875]
[29.37591743 12.13310051]
[20.77735329 -0.15773703]
[7.60205317 7.04466867]
[-6.28561783 12.75394154]
[-20.71707535 16.90077591]
[-35.51713181 19.43483353]
[-50.50613403 20.32535362]
[-65.50212860 19.56152534]
[-80.32306671 17.15262222]
[-94.78905487 13.12788391]
[-108.72447205 7.53616810]
[-121.96016693 0.44535345]
[-134.33546448 -8.05848408]
[-145.70013428 -17.87211609]
[-155.91622925 -28.87641335]
[-164.85974121 -40.93779373]
[-172.42207336 -53.90984726]
[-178.51147461 -67.63510132]
[-183.05398560 -81.94693756]
[-185.99447632 -96.67163849]
[-187.29724121 -111.63044739]
[-186.94650269 -126.64177704]
[-184.94647217 -141.52342224]
[-181.32145691 -156.09471130]
[-176.11546326 -170.17875671]
[-169.39166260 -183.60462952]
[-161.23168945 -196.20932007]
[-151.73460388 -207.83981323]
[-141.01570129 -218.35494995]
[-129.20506287 -227.62707520]
[-116.44609833 -235.54362488]
[-102.89366913 -242.00851440]
[-88.71228790 -246.94326782]
[-74.07411194 -250.28796387]
[-59.15682983 -252.00199890]
[-44.14152908 -252.06459045]
[-29.21047974 -250.47497559]
[-14.54492855 -247.25242615]
[-0.32290283 -242.43608093]
[13.28295422 -236.08439636]
[26.10748100 -228.27449036]
[37.99499893 -219.10115051]
[48.80120087 -208.67573547]
[58.39491653 -197.12481689]
[66.65968323 -184.58859253]
[73.49517059 -171.21925354]
[78.81841278 -157.17909241]
[82.56478119 -142.63853455]
[84.68879700 -127.77408600]
[85.16468048 -112.76619720]
[83.98665619 -97.79704285]
[81.16902924 -83.04834747]
[76.74598694 -68.69913483]
[70.77123260 -54.92359161]
[63.31729889 -41.88894272]
[54.47465897 -29.75342178]
[44.35065842 -18.66433716]
[33.06819153 -8.75630093]
[41.66675568 3.53453684]
[50.26531982 15.82537460]
[58.86388397 28.11621284]
[72.49949646 34.10948944]
[74.07041168 49.85251236]
[82.66897583 62.14335251]
[96.30458832 68.13662720]
[97.87550354 83.87965393]
[109.20125580 86.59417725]
[115.80624390 96.18664551]
[114.30175018 107.73557281]
[122.71636963 120.15306854]
[131.13098145 132.57055664]
[139.54560852 144.98805237]
[147.96022034 157.40554810]
[155.36492920 162.75419617]
[156.40606689 170.07115173]
[164.63487244 182.61256409]
[172.86369324 195.15396118]
[181.09249878 207.69535828]
[184.05596924 192.99101257]
[195.69900513 183.53375244]
[210.69857788 183.64732361]
[222.19706726 193.27980042]
[224.93754578 208.02734375]
[217.66706848 221.14756775]
[203.70962524 226.64208984]
[189.44490051 221.99775696]
[196.32431030 235.32717896]
[203.20372009 248.65661621]
[210.08314514 261.98605347]
[223.81141663 255.93002319]
[237.88334656 250.72218323]
[252.24659729 246.38192749]
[266.84774780 242.92538452]
[281.63244629 240.36541748]
[296.54571533 238.71156311]
[311.53207397 237.96994019]
[326.53576660 238.14334106]
[341.50097656 239.23109436]
[356.37203979 241.22917175]
[371.09362793 244.13014221]
[385.61099243 247.92318726]
[399.87008667 252.59423828]
[413.81790161 258.12588501]
[427.40255737 264.49755859]
[440.57348633 271.68554688]
[453.28170776 279.66314697]
[465.47994995 288.40063477]
[477.12283325 297.86550903]
[488.16705322 308.02261353]
[498.57147217 318.83410645]
[508.29745483 330.25979614]
[517.30877686 342.25717163]
[525.57196045 354.78158569]
[533.05621338 367.78646851]
[539.73370361 381.22341919]
[545.57958984 395.04248047]
[550.57214355 409.19223022]
[554.69281006 423.61999512]
[557.92620850 438.27218628]
[560.26031494 453.09420776]
[561.68652344 468.03097534]
[562.19940186 483.02688599]
[561.79718018 498.02618408]
[560.48126221 512.97308350]
[558.25653076 527.81195068]
[555.13134766 542.48754883]
[551.11724854 556.94537354]
[546.22924805 571.13153076]
[540.48547363 584.99334717]
[533.90734863 598.47924805]
[526.51922607 611.53900146]
[518.34875488 624.12402344]
[509.42617798 636.18756104]
[499.78475952 647.68469238]
[489.46038818 658.57269287]
[478.49142456 668.81097412]
[466.91870117 678.36157227]
[454.78527832 687.18878174]
[442.13626099 695.25994873]
[429.01873779 702.54492188]
[415.48147583 709.01666260]
[401.57482910 714.65112305]
[387.35058594 719.42724609]
[372.86160278 723.32727051]
[358.16183472 726.33679199]
[343.30590820 728.44458008]
[328.34912109 729.64270020]
[313.34713745 729.92681885]
[298.35571289 729.29583740]
[283.43063354 727.75201416]
[268.62744141 725.30120850]
[254.00120544 721.95251465]
[239.60632324 717.71838379]
[225.49633789 712.61450195]
[211.72375488 706.65997314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 144]
[36 143]
[37 142]
[38 141]
[39 133]
[40 132]
[41 131]
[42 130]
[43 128]
[44 127]
[45 126]
[46 125]
[47 124]
[49 121]
[51 119]
[52 118]
[54 116]
[55 115]
[56 114]
[57 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
