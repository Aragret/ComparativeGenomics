%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[199.59307861 439.70953369]
[205.39634705 425.85183716]
[213.03257751 412.91345215]
[222.35952759 401.13540649]
[233.20341492 390.73715210]
[245.36224365 381.91238403]
[238.28514099 368.68685913]
[231.20803833 355.46133423]
[224.13093567 342.23580933]
[217.05383301 329.01028442]
[209.97671509 315.78475952]
[197.14991760 308.21359253]
[197.46089172 292.39544678]
[190.38377380 279.16992188]
[183.30667114 265.94439697]
[167.92239380 257.50100708]
[168.66943359 239.10200500]
[155.73132324 231.72267151]
[155.80674744 215.90164185]
[148.53352356 202.78294373]
[135.59541321 195.40361023]
[135.67083740 179.58258057]
[121.32671356 175.73791504]
[113.76374054 162.53729248]
[117.89364624 147.51792908]
[110.62041473 134.39923096]
[103.34718323 121.28053284]
[96.07395935 108.16184235]
[92.55480957 106.58450317]
[89.74801636 103.46364594]
[88.32733917 99.15218353]
[88.78382111 94.29096222]
[82.10363007 80.86058044]
[75.42343140 67.43020630]
[68.74324036 53.99983215]
[55.66972351 45.08951187]
[56.92933655 30.24826241]
[50.24914169 16.81788635]
[43.56895065 3.38751006]
[29.36940765 5.76736927]
[15.09058380 4.05045891]
[1.88920307 -1.61509693]
[-9.16784096 -10.76166153]
[-17.18971062 -22.64067268]
[-21.53338623 -36.28390121]
[-21.85521507 -50.58236313]
[-18.13806915 -64.37647247]
[-10.69202042 -76.55006409]
[-0.12848347 -86.12071991]
[-6.60797930 -99.64907074]
[-10.27548409 -101.97358704]
[-12.76240635 -105.03622437]
[-13.98167324 -108.37520599]
[-14.00512409 -111.54790497]
[-13.04349422 -114.18104553]
[-18.70628166 -128.07107544]
[-24.36906815 -141.96110535]
[-30.03185463 -155.85112000]
[-35.69464111 -169.74114990]
[-41.35742950 -183.63117981]
[-47.02021408 -197.52120972]
[-61.31155777 -203.71760559]
[-66.85655975 -217.88473511]
[-60.86117554 -231.47116089]
[-66.52396393 -245.36117554]
[-67.61808777 -230.40113831]
[-71.57080078 -215.93130493]
[-78.23431396 -202.49264526]
[-87.35951233 -190.58757019]
[-98.60524750 -180.66116333]
[-111.55108643 -173.08454895]
[-125.71303558 -168.14094543]
[-140.56164551 -166.01519775]
[-155.54177856 -166.78677368]
[-170.09341431 -170.42683411]
[-183.67251587 -176.79928589]
[-195.77140808 -185.66589355]
[-205.93778992 -196.69515991]
[-213.79156494 -209.47476196]
[-219.03910828 -223.52693176]
[-221.48425293 -238.32629395]
[-221.03558350 -253.31958008]
[-217.70986938 -267.94625854]
[-211.63143921 -281.65948486]
[-203.02754211 -293.94659424]
[-192.21984863 -304.34823608]
[-179.61241150 -312.47549438]
[-165.67657471 -318.02456665]
[-150.93331909 -320.78796387]
[-135.93383789 -320.66241455]
[-121.23891449 -317.65258789]
[-107.39791107 -311.87100220]
[-94.92829132 -303.53381348]
[-84.29624176 -292.95272827]
[-75.89925385 -280.52328491]
[-70.05307007 -266.71606445]
[-69.16024780 -281.68945312]
[-68.26743317 -296.66287231]
[-67.37461853 -311.63626099]
[-81.29482269 -317.63656616]
[-92.32118225 -328.03826904]
[-99.12220764 -341.58529663]
[-100.87664795 -356.64178467]
[-97.37263489 -371.38958740]
[-89.03330231 -384.04785156]
[-76.86566925 -393.08798218]
[-62.33902740 -397.41839600]
[-47.20754242 -396.51617432]
[-33.29841995 -390.49023438]
[-22.29124832 -380.06823730]
[-15.51519966 -366.50869751]
[-13.78851414 -351.44900513]
[-17.31969643 -336.70767212]
[-25.68234062 -324.06481934]
[-37.86661530 -315.04708862]
[-52.40121460 -310.74346924]
[-53.29402924 -295.77005005]
[-54.18684387 -280.79663086]
[-55.07966232 -265.82324219]
[-52.63393402 -251.02397156]
[-46.97114563 -237.13394165]
[-33.18552017 -231.61198425]
[-27.24477959 -217.60618591]
[-33.13018799 -203.18399048]
[-27.46740150 -189.29396057]
[-21.80461502 -175.40394592]
[-16.14182663 -161.51391602]
[-10.47904110 -147.62388611]
[-4.81625414 -133.73385620]
[0.84653229 -119.84383392]
[6.92036629 -106.12856293]
[13.39986229 -92.60021973]
[28.90280914 -94.83292389]
[44.35607147 -92.16230011]
[58.24488449 -84.83794403]
[69.20407867 -73.56620026]
[76.15225220 -59.44209290]
[78.39846802 -43.84292221]
[75.71096039 -28.29397202]
[68.34097290 -14.31936836]
[56.99932480 -3.29268456]
[63.67951965 10.13769150]
[70.35971069 23.56806755]
[82.95541382 31.51775932]
[82.17361450 47.31963730]
[88.85380554 60.75001526]
[95.53400421 74.18038940]
[102.21419525 87.61076355]
[109.19264984 100.88861084]
[116.46588135 114.00730896]
[123.73910522 127.12599945]
[131.01234436 140.24468994]
[145.93873596 144.69892883]
[153.12794495 158.10675049]
[148.78953552 172.30935669]
[162.24787903 180.62702942]
[161.65222168 195.50971985]
[168.92544556 208.62840271]
[182.38378906 216.94607544]
[181.78813171 231.82876587]
[193.94915771 236.12666321]
[199.73698425 247.20298767]
[196.53219604 258.86730957]
[203.60931396 272.09283447]
[210.68641663 285.31835938]
[224.01942444 293.83547974]
[223.20225525 308.70764160]
[230.27935791 321.93316650]
[237.35646057 335.15869141]
[244.43356323 348.38421631]
[251.51066589 361.60977173]
[258.58776855 374.83529663]
[272.67553711 369.61526489]
[287.34289551 366.36221313]
[302.31658936 365.13671875]
[317.31771851 365.96163940]
[332.06677246 368.82159424]
[346.28897095 373.66329956]
[359.71942139 380.39657593]
[372.10787964 388.89599609]
[383.22357178 399.00317383]
[392.85943604 410.52984619]
[400.83590698 423.26126099]
[407.00445557 436.96029663]
[411.25012207 451.37167358]
[413.49380493 466.22695923]
[413.69375610 481.24938965]
[411.84619141 496.15914917]
[407.98556519 510.67840576]
[402.18380737 524.53674316]
[394.54895020 537.47595215]
[385.22329712 549.25500488]
[374.38052368 559.65441895]
[362.22265625 568.48052979]
[348.97616577 575.56884766]
[334.88784790 580.78735352]
[320.22012329 584.03881836]
[305.24627686 585.26263428]
[290.24526978 584.43609619]
[275.49652100 581.57458496]
[261.27484131 576.73132324]
[247.84512329 569.99658203]
[235.45758057 561.49584961]
[224.34298706 551.38745117]
[214.70838928 539.85974121]
[206.73327637 527.12744141]
[200.56622314 513.42773438]
[196.32211304 499.01589966]
[194.08003235 484.16036987]
[193.88171387 469.13790894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[13 165]
[14 164]
[15 163]
[17 160]
[19 158]
[20 157]
[22 155]
[25 152]
[26 151]
[27 150]
[28 149]
[32 148]
[33 147]
[34 146]
[35 145]
[37 143]
[38 142]
[39 141]
[49 132]
[50 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[64 121]
[65 120]
[96 119]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
