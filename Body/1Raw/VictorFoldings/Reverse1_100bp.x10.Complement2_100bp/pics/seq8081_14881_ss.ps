%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[52.53719330 568.58972168]
[52.46897507 552.78558350]
[63.65513229 541.62109375]
[63.43180466 526.62274170]
[63.20847702 511.62442017]
[62.98514938 496.62609863]
[62.76182175 481.62774658]
[53.05598068 493.06439209]
[38.50920868 496.72381592]
[24.54709625 491.24118042]
[16.37716103 478.66134644]
[17.04659081 463.67630005]
[26.30570221 451.87506104]
[40.70107651 447.65924072]
[54.86359406 452.60122681]
[63.51134109 464.85885620]
[65.07186127 449.94024658]
[51.90809250 442.89437866]
[42.41908646 431.31405640]
[38.07490540 416.94418335]
[39.56734848 401.96551514]
[46.69997025 388.66366577]
[58.41331863 379.08032227]
[72.94218445 374.69995117]
[74.50270844 359.78134155]
[76.06323242 344.86273193]
[69.69199371 331.39956665]
[78.82301331 318.47924805]
[80.38353729 303.56063843]
[81.83295441 288.63082886]
[83.17118835 273.69064331]
[84.39816284 258.74090576]
[85.51380920 243.78245544]
[86.40662384 228.80905151]
[87.07640839 213.82400513]
[87.74620056 198.83897400]
[88.41598511 183.85392761]
[80.48703766 174.71836853]
[80.92240906 162.22860718]
[90.03378296 153.09921265]
[90.92659760 138.12580872]
[91.81941223 123.15240479]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.48928833 63.16320801]
[92.48928833 48.16320801]
[92.48928833 33.16320801]
[83.93746948 23.50768471]
[84.24626923 11.01415062]
[92.70491028 2.36672688]
[92.92823792 -12.63161087]
[84.91400146 -19.98555946]
[82.32337189 -30.32330132]
[85.77748108 -40.17304611]
[93.90798950 -46.36237717]
[94.57777405 -61.34741592]
[95.24755859 -76.33245850]
[95.91734314 -91.31749725]
[88.80397034 -105.44939423]
[97.10185242 -117.81848145]
[97.77163696 -132.80351257]
[98.44142151 -147.78855896]
[99.11120605 -162.77359009]
[99.78099060 -177.75863647]
[100.45078278 -192.74366760]
[101.12056732 -207.72871399]
[101.79035187 -222.71374512]
[102.46013641 -237.69879150]
[103.12992096 -252.68382263]
[103.68813324 -267.67343140]
[104.13473511 -282.66677856]
[104.58134460 -297.66012573]
[105.02794647 -312.65350342]
[105.25127411 -327.65182495]
[105.25127411 -342.65182495]
[105.25127411 -357.65182495]
[105.25127411 -372.65182495]
[105.25127411 -387.65182495]
[90.14485931 -392.02621460]
[76.89291382 -400.46829224]
[66.56279755 -412.28839111]
[59.98377991 -426.52523804]
[57.68052292 -442.02395630]
[59.83121109 -457.52990723]
[66.25380707 -471.79022217]
[76.42143250 -483.65490723]
[89.50558472 -492.16979980]
[104.44363403 -496.65307617]
[104.22030640 -511.65139771]
[103.88533020 -526.64764404]
[103.43872833 -541.64099121]
[100.69385529 -546.08093262]
[99.99627686 -550.67077637]
[101.06027985 -554.60559082]
[103.32207489 -557.31054688]
[103.54540253 -572.30883789]
[103.76873016 -587.30718994]
[103.99205780 -602.30554199]
[104.21538544 -617.30389404]
[90.74006653 -624.56158447]
[82.19071960 -637.25677490]
[80.53190613 -652.47210693]
[86.14482117 -666.71130371]
[97.73964691 -676.70220947]
[112.65198517 -680.14904785]
[127.45509338 -676.25970459]
[138.74731445 -665.92803955]
[143.93379211 -651.52807617]
[141.82269287 -636.36883545]
[132.89915466 -623.93383789]
[119.21372223 -617.08056641]
[118.99039459 -602.08221436]
[118.76706696 -587.08386230]
[118.54373932 -572.08551025]
[118.32041168 -557.08721924]
[118.43207550 -542.08764648]
[118.87868500 -527.09423828]
[122.21994019 -520.50201416]
[119.21864319 -511.87472534]
[119.44197083 -496.87640381]
[133.32907104 -493.32739258]
[145.83277893 -486.29513550]
[156.09584045 -476.25457764]
[163.41276550 -463.88711548]
[167.27828979 -450.03436279]
[167.42230225 -435.64099121]
[163.82867432 -421.69015503]
[156.73678589 -409.13650513]
[146.62567139 -398.84063721]
[134.18153381 -391.51037598]
[120.25127411 -387.65182495]
[120.25127411 -372.65182495]
[120.25127411 -357.65182495]
[120.25127411 -342.65182495]
[120.25127411 -327.65182495]
[122.93495941 -323.70126343]
[123.16542053 -318.02288818]
[120.02130127 -312.20687866]
[119.57469177 -297.21353149]
[119.12808990 -282.22018433]
[118.68148041 -267.22683716]
[121.62443542 -260.44738770]
[118.11495972 -252.01403809]
[117.44517517 -237.02900696]
[116.77539062 -222.04396057]
[116.10560608 -207.05892944]
[115.43582153 -192.07388306]
[114.76602936 -177.08885193]
[114.09624481 -162.10380554]
[113.42646027 -147.11877441]
[112.75667572 -132.13372803]
[112.08689117 -117.14869690]
[119.24817657 -104.08863068]
[110.90238190 -90.64771271]
[110.23259735 -75.66267395]
[109.56281281 -60.67763138]
[108.89302826 -45.69259262]
[119.03513336 -29.22976875]
[107.92657471 -12.40828323]
[107.70324707 2.59005451]
[117.06398010 17.43403435]
[107.48928833 33.16320801]
[107.48928833 48.16320801]
[107.48928833 63.16320801]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[109.91984558 112.94416046]
[110.41177368 117.56057739]
[109.17313385 121.44397736]
[106.79281616 124.04521942]
[105.90000153 139.01863098]
[105.00718689 153.99203491]
[113.62867737 170.26321411]
[103.40102386 184.52371216]
[102.73123932 199.50875854]
[102.06144714 214.49378967]
[101.39166260 229.47883606]
[104.09450531 235.51258850]
[103.44234467 241.15809631]
[100.47226715 244.89810181]
[99.35661316 259.85653687]
[101.83908081 268.64718628]
[98.11137390 275.02886963]
[96.77313995 289.96905518]
[99.12445068 298.79568481]
[95.30213928 305.12115479]
[93.74161530 320.03976440]
[100.00122833 334.57000732]
[90.98183441 346.42324829]
[89.42131042 361.34185791]
[87.86079407 376.26046753]
[101.16867828 383.55264282]
[110.64529419 395.35250854]
[114.87082672 409.84243774]
[113.23126221 424.80572510]
[106.00740814 437.96554565]
[94.32736969 447.33154297]
[79.99046326 451.50079346]
[78.42994690 466.41937256]
[77.76016235 481.40441895]
[77.98348999 496.40277100]
[78.20681763 511.40109253]
[78.43014526 526.39941406]
[78.65347290 541.39776611]
[90.16707611 552.22424316]
[90.56943512 568.02343750]
[79.62184143 579.42193604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[7 203]
[16 202]
[17 201]
[24 194]
[25 193]
[26 192]
[28 190]
[29 189]
[30 187]
[31 186]
[32 184]
[33 183]
[34 180]
[35 179]
[36 178]
[37 177]
[40 175]
[41 174]
[42 173]
[43 169]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[51 161]
[52 160]
[56 158]
[57 157]
[58 156]
[59 155]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 142]
[72 141]
[73 140]
[74 139]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[89 121]
[90 120]
[91 118]
[92 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
