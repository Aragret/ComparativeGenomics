%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[231.68444824 339.23431396]
[234.41458130 324.47555542]
[238.38650513 310.00152588]
[243.57160950 295.91647339]
[249.93254089 282.32189941]
[257.42346191 269.31576538]
[265.99041748 256.99176025]
[254.44412231 247.41664124]
[242.89781189 237.84152222]
[228.16191101 235.67298889]
[222.47822571 220.90795898]
[210.93191528 211.33283997]
[199.38562012 201.75772095]
[187.83932495 192.18260193]
[185.03890991 192.30850220]
[182.01989746 191.33270264]
[179.20164490 189.16639709]
[177.02790833 185.87408447]
[175.91294861 181.67755127]
[161.33224487 178.63577271]
[156.53746033 163.55860901]
[145.58155823 153.31321716]
[134.62564087 143.06782532]
[123.66973877 132.82243347]
[112.71382904 122.57704926]
[101.75791931 112.33165741]
[106.84547424 126.44252777]
[107.80895996 141.41156006]
[104.57238007 156.05821228]
[97.39099121 169.22740173]
[86.83114624 179.88055420]
[73.72563171 187.17750549]
[59.10801315 190.54280090]
[44.13109207 189.71102905]
[29.97601128 184.74780273]
[17.75909996 176.04452515]
[8.44383526 164.28756714]
[2.76485753 150.40415955]
[1.17003405 135.48918152]
[3.78513932 120.71889496]
[10.40393543 107.25815582]
[20.50443649 96.16852570]
[33.29007721 88.32458496]
[47.75252151 84.34493256]
[62.75120926 84.54342651]
[77.10327911 88.90441132]
[89.67947388 97.08623505]
[82.21173096 84.07728577]
[74.74399567 71.06832886]
[67.27625275 58.05937958]
[60.28986359 52.17480850]
[59.79581833 44.80068207]
[52.52259064 31.68198967]
[45.24935913 18.56329536]
[31.79102135 10.24562359]
[32.38668060 -4.63706636]
[25.11345100 -17.75576019]
[17.84022331 -30.87445450]
[10.56699276 -43.99314880]
[-2.89134669 -52.31082153]
[-2.29568624 -67.19351196]
[-16.16066933 -61.42790222]
[-30.58402634 -57.25096130]
[-45.38436508 -54.71522141]
[-60.37555695 -53.85256958]
[-75.36907196 -54.67385483]
[-90.17635345 -57.16875076]
[-104.61117554 -61.30587769]
[-118.49201965 -67.03321075]
[-131.64430237 -74.27871704]
[-143.90263367 -82.95127869]
[-155.11283875 -92.94183350]
[-165.13395691 -104.12474060]
[-173.83995056 -116.35935211]
[-181.12132263 -129.49182129]
[-186.88652039 -143.35696411]
[-191.06301880 -157.78045654]
[-193.59831238 -172.58087158]
[-194.46052551 -187.57208252]
[-193.63879395 -202.56556702]
[-191.14344788 -217.37277222]
[-187.00588989 -231.80747986]
[-181.27815247 -245.68815613]
[-174.03224182 -258.84020996]
[-165.35931396 -271.09829712]
[-155.36842346 -282.30819702]
[-144.18522644 -292.32897949]
[-131.95034790 -301.03460693]
[-118.81766510 -308.31558228]
[-104.95233917 -314.08035278]
[-90.52873230 -318.25643921]
[-75.72824097 -320.79129028]
[-60.73699951 -321.65304565]
[-45.74353409 -320.83087158]
[-30.93640518 -318.33508301]
[-16.50182533 -314.19711304]
[-2.62132955 -308.46893311]
[10.53052330 -301.22265625]
[22.78833389 -292.54934692]
[33.99794769 -282.55810547]
[44.01839066 -271.37460327]
[52.72364807 -259.13949585]
[60.00423813 -246.00659180]
[65.76860046 -232.14108276]
[69.94424438 -217.71736145]
[72.47866058 -202.91679382]
[73.33996582 -187.92552185]
[72.51733398 -172.93208313]
[70.02111053 -158.12501526]
[65.88269043 -143.69056702]
[60.15411758 -129.81024170]
[52.90742874 -116.65860748]
[44.23376465 -104.40105438]
[34.24220276 -93.19174194]
[23.05840302 -83.17163086]
[10.82300758 -74.46674347]
[23.76111794 -67.08740234]
[23.68568611 -51.26637650]
[30.95891571 -38.14768600]
[38.23214722 -25.02898979]
[45.50537491 -11.91029644]
[58.44348526 -4.53096104]
[58.36805344 11.29006577]
[65.64128113 24.40876007]
[72.91451263 37.52745438]
[80.28520203 50.59164047]
[87.75294495 63.60058975]
[95.22068787 76.60954285]
[102.68842316 89.61849976]
[112.00331116 101.37574768]
[122.95922089 111.62113953]
[133.91513062 121.86653137]
[144.87103271 132.11192322]
[155.82695007 142.35731506]
[166.78285217 152.60270691]
[182.14720154 156.37730408]
[186.15834045 170.72164917]
[197.41444397 180.63629150]
[208.96073914 190.21141052]
[220.50703430 199.78652954]
[232.05334473 209.36164856]
[247.61511230 212.21505737]
[252.47293091 226.29521179]
[264.01922607 235.87033081]
[275.56555176 245.44544983]
[286.09149170 234.74600220]
[297.48690796 224.97776794]
[309.66967773 216.21113586]
[322.55203247 208.50926208]
[336.04113770 201.92764282]
[350.03982544 196.51370239]
[364.44720459 192.30645752]
[379.15948486 189.33619690]
[394.07067871 187.62432861]
[409.07333374 187.18321228]
[424.05932617 188.01600647]
[438.92071533 190.11669922]
[453.55041504 193.47018433]
[467.84301758 198.05227661]
[481.69552612 203.82997131]
[495.00814819 210.76162720]
[507.68496704 218.79731750]
[519.63464355 227.87913513]
[530.77105713 237.94163513]
[541.01397705 248.91233826]
[550.28961182 260.71218872]
[558.53112793 273.25616455]
[565.67913818 286.45385742]
[571.68212891 300.21023560]
[576.49688721 314.42614746]
[580.08868408 328.99917603]
[582.43170166 343.82427979]
[583.50897217 358.79470825]
[583.31274414 373.80255127]
[581.84448242 388.73968506]
[579.11474609 403.49847412]
[575.14318848 417.97262573]
[569.95843506 432.05780029]
[563.59783936 445.65252686]
[556.10729980 458.65887451]
[547.54064941 470.98312378]
[537.95971680 482.53643799]
[527.43347168 493.23562622]
[516.03778076 503.00354004]
[503.85479736 511.76986694]
[490.97225952 519.47143555]
[477.48297119 526.05267334]
[463.48416138 531.46624756]
[449.07666016 535.67315674]
[434.36428833 538.64300537]
[419.45306396 540.35449219]
[404.45040894 540.79522705]
[389.46441650 539.96203613]
[374.60308838 537.86096191]
[359.97348022 534.50714111]
[345.68099976 529.92468262]
[331.82864380 524.14660645]
[318.51620483 517.21459961]
[305.83959961 509.17858887]
[293.89016724 500.09646606]
[282.75399780 490.03366089]
[272.51135254 479.06268311]
[263.23602295 467.26260376]
[254.99484253 454.71841431]
[247.84716797 441.52053833]
[241.84451294 427.76400757]
[237.03012085 413.54797363]
[233.43869019 398.97485352]
[231.09609985 384.14968872]
[230.01921082 369.17922974]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 145]
[8 144]
[9 143]
[11 141]
[12 140]
[13 139]
[14 138]
[19 137]
[21 135]
[22 134]
[23 133]
[24 132]
[25 131]
[26 130]
[47 129]
[48 128]
[49 127]
[50 126]
[52 125]
[53 124]
[54 123]
[56 121]
[57 120]
[58 119]
[59 118]
[61 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
