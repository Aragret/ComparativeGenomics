%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[84.46563721 446.55905151]
[84.01903534 431.56570435]
[83.57242584 416.57235718]
[83.12582397 401.57901001]
[80.32570648 397.71011353]
[79.92628479 392.04110718]
[82.89584351 386.13406372]
[82.89584351 371.13406372]
[82.89584351 356.13406372]
[82.89584351 341.13406372]
[69.07048798 335.49591064]
[58.42821503 324.96557617]
[52.61264038 311.12564087]
[52.53868103 296.07299805]
[58.24874115 282.10128784]
[68.90152740 271.35134888]
[82.89584351 265.48324585]
[82.89584351 250.48323059]
[82.89584351 235.48323059]
[70.60517883 244.08203125]
[56.17674255 239.98078918]
[50.24664688 226.20275879]
[57.18633652 212.90461731]
[71.88012695 209.88923645]
[83.49560547 219.37797546]
[84.61125183 204.41952515]
[85.72689819 189.46105957]
[86.84255219 174.50260925]
[76.95865631 163.41909790]
[77.87699127 148.23321533]
[89.56941223 137.94122314]
[90.68505859 122.98276520]
[91.80071259 108.02431488]
[82.07505798 119.44410706]
[67.97592163 124.56411743]
[53.18880081 122.04599762]
[41.57899857 112.54797363]
[36.18129730 98.55280304]
[38.40663910 83.71878815]
[47.67332458 71.92351532]
[61.55906677 66.25022888]
[76.43416595 68.18192291]
[88.41030884 77.21364594]
[94.35681915 90.98365784]
[97.67907715 76.35620117]
[101.00134277 61.72874069]
[104.32360077 47.10128021]
[107.64585876 32.47381973]
[101.79273224 15.01465702]
[114.20867920 2.61259246]
[117.31278229 -12.06270981]
[120.41689301 -26.73801231]
[123.52100372 -41.41331482]
[126.62511444 -56.08861542]
[129.72923279 -70.76391602]
[132.39501953 -85.52513885]
[134.50964355 -100.37533569]
[136.51365662 -115.24085999]
[130.68943787 -129.95103455]
[140.05775452 -141.53048706]
[142.06176758 -156.39602661]
[140.10691833 -165.31883240]
[144.20787048 -171.46731567]
[146.43298340 -186.30136108]
[148.65811157 -201.13540649]
[150.88322449 -215.96945190]
[153.10833740 -230.80349731]
[138.46449280 -234.08238220]
[124.09188080 -238.39759827]
[110.06372070 -243.72715759]
[96.45152283 -250.04389954]
[83.32463074 -257.31561279]
[70.74995422 -265.50531006]
[58.79156113 -274.57116699]
[47.51039124 -284.46704102]
[36.96393585 -295.14251709]
[27.20593262 -306.54315186]
[18.28610802 -318.61087036]
[10.24991608 -331.28421021]
[3.13830757 -344.49853516]
[-3.01247716 -358.18652344]
[-8.17109489 -372.27841187]
[-12.31125927 -386.70245361]
[-15.41187286 -401.38507080]
[-17.45713425 -416.25146484]
[-18.43662071 -431.22592163]
[-18.34534264 -446.23208618]
[-17.18376541 -461.19348145]
[-14.95780659 -476.03393555]
[-11.67880917 -490.67773438]
[-7.36348438 -505.05032349]
[-2.03382063 -519.07843018]
[4.28302240 -532.69061279]
[11.55485535 -545.81744385]
[19.74462318 -558.39202881]
[28.81059074 -570.35034180]
[38.70656204 -581.63146973]
[49.38210297 -592.17785645]
[60.78282166 -601.93572998]
[72.85061646 -610.85546875]
[85.52398682 -618.89160156]
[98.73836517 -626.00311279]
[112.42640686 -632.15374756]
[126.51835632 -637.31225586]
[140.94239807 -641.45233154]
[155.62504578 -644.55285645]
[170.49148560 -646.59796143]
[185.46592712 -647.57733154]
[200.47209167 -647.48596191]
[215.43350220 -646.32427979]
[230.27391052 -644.09820557]
[244.91770935 -640.81909180]
[259.29025269 -636.50366211]
[273.31832886 -631.17388916]
[286.93045044 -624.85693359]
[300.05722046 -617.58502197]
[312.63177490 -609.39514160]
[324.59002686 -600.32910156]
[335.87103271 -590.43304443]
[346.41732788 -579.75738525]
[356.17517090 -568.35662842]
[365.09478760 -556.28875732]
[373.13079834 -543.61529541]
[380.24218750 -530.40087891]
[386.39276123 -516.71276855]
[391.55117798 -502.62078857]
[395.69113159 -488.19671631]
[398.79150391 -473.51403809]
[400.83654785 -458.64761353]
[401.81579590 -443.67315674]
[401.72430420 -428.66699219]
[400.56246948 -413.70559692]
[398.33630371 -398.86520386]
[395.05706787 -384.22140503]
[390.74151611 -369.84890747]
[385.41165161 -355.82086182]
[379.09460449 -342.20880127]
[371.82257080 -329.08209229]
[363.63259888 -316.50759888]
[354.56646729 -304.54940796]
[344.67031860 -293.26846313]
[333.99459839 -282.72225952]
[322.59375000 -272.96450806]
[310.52581787 -264.04498291]
[297.85232544 -256.00906372]
[284.63781738 -248.89776611]
[270.94970703 -242.74729919]
[256.85766602 -237.58900452]
[242.43354797 -233.44917297]
[227.75085449 -230.34889221]
[212.88439941 -228.30398560]
[197.90994263 -227.32482910]
[182.90377808 -227.41645813]
[167.94238281 -228.57838440]
[165.71726990 -213.74433899]
[163.49215698 -198.91029358]
[161.26702881 -184.07624817]
[159.04191589 -169.24220276]
[156.92729187 -154.39201355]
[154.92327881 -139.52647400]
[160.89083862 -125.87959290]
[151.37918091 -113.23684692]
[149.37516785 -98.37132263]
[151.59686279 -91.32250214]
[147.22906494 -83.30001831]
[148.78489685 -80.96817017]
[149.51080322 -77.87953186]
[149.11389160 -74.34712982]
[147.41992188 -70.78412628]
[144.40452576 -67.65981293]
[141.30041504 -52.98450851]
[138.19630432 -38.30920410]
[135.09219360 -23.63390160]
[131.98808289 -8.95860004]
[128.88397217 5.71670246]
[135.21726990 16.02281380]
[132.75129700 28.27445412]
[122.27331543 35.79608154]
[118.95105743 50.42353821]
[115.62879944 65.05100250]
[112.30654144 79.67845917]
[108.98428345 94.30592346]
[106.75916290 109.13996124]
[105.64351654 124.09841919]
[104.52786255 139.05686951]
[114.56420135 150.96945190]
[113.21968842 166.12356567]
[101.80100250 175.61825562]
[100.68535614 190.57672119]
[99.56970215 205.53517151]
[98.45405579 220.49362183]
[97.89584351 235.48323059]
[97.89584351 250.48323059]
[97.89584351 265.48324585]
[111.89015961 271.35134888]
[122.54294586 282.10128784]
[128.25300598 296.07299805]
[128.17904663 311.12564087]
[122.36347198 324.96557617]
[111.72119904 335.49591064]
[97.89584351 341.13406372]
[97.89584351 356.13406372]
[97.89584351 371.13406372]
[97.89584351 386.13406372]
[98.11917114 401.13238525]
[98.56578064 416.12573242]
[99.01238251 431.11907959]
[99.45899200 446.11245728]
[105.97424316 461.76452637]
[92.73744202 472.35809326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[7 204]
[8 203]
[9 202]
[10 201]
[17 194]
[18 193]
[19 192]
[25 191]
[26 190]
[27 189]
[28 188]
[31 185]
[32 184]
[33 183]
[44 182]
[45 181]
[46 180]
[47 179]
[48 178]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 165]
[57 163]
[58 162]
[60 160]
[61 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
