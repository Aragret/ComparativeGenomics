%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[71.39134979 504.06033325]
[78.01371002 517.62670898]
[80.72918701 532.47692871]
[79.33628845 547.50897217]
[73.93836212 561.60736084]
[64.93598175 573.72595215]
[52.99716949 582.96539307]
[39.00787735 588.64013672]
[24.00620270 590.32897949]
[9.10536289 587.90667725]
[-4.58889675 581.55291748]
[-16.06037140 571.73925781]
[-24.45780373 559.19396973]
[-29.15804482 544.84783936]
[-29.81230927 529.76556396]
[-26.37204361 515.06634521]
[-19.09253883 501.84097290]
[-8.51398373 491.07077026]
[4.57862329 483.55505371]
[19.21372414 479.85147095]
[34.30529785 480.23492432]
[38.70629501 465.89505005]
[43.10729218 451.55520630]
[42.06463623 444.23846436]
[47.68203354 437.03552246]
[52.29604340 422.76278687]
[56.91005325 408.49005127]
[61.52406311 394.21731567]
[66.13806915 379.94458008]
[70.64569855 365.63790894]
[75.04669952 351.29806519]
[79.44769287 336.95819092]
[83.84869385 322.61834717]
[86.18418121 307.80130005]
[86.40750885 292.80294800]
[86.63083649 277.80462646]
[86.85416412 262.80627441]
[84.67391205 260.03521729]
[83.72753906 256.07043457]
[84.56145477 251.50338745]
[87.43730927 247.14718628]
[88.33012390 232.17376709]
[89.22293854 217.20036316]
[90.11575317 202.22695923]
[91.00856781 187.25355530]
[91.90139008 172.28015137]
[92.79420471 157.30674744]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[92.09580994 72.91117859]
[91.31449127 57.93154144]
[89.97625732 42.99135590]
[88.63802338 28.05117226]
[87.29978943 13.11098766]
[85.96155548 -1.82919788]
[84.62332153 -16.76938248]
[70.99621582 -27.73849487]
[69.54703522 -44.83278275]
[80.68587494 -57.43298340]
[79.12535095 -72.35158539]
[77.56482697 -87.27019501]
[76.00431061 -102.18879700]
[65.74197388 -91.24875641]
[50.75467300 -90.63173676]
[39.62780380 -100.69120026]
[38.73534775 -115.66462708]
[48.58853912 -126.97455597]
[63.54302979 -128.14215088]
[75.03176117 -118.49939728]
[74.80843353 -133.49774170]
[74.58510590 -148.49607849]
[74.36177826 -163.49441528]
[74.13845062 -178.49275208]
[60.36003113 -184.96705627]
[50.79793167 -196.73367310]
[47.30717468 -211.42498779]
[50.52801514 -226.11468506]
[59.76929855 -237.90060425]
[73.15591431 -244.47814941]
[72.93258667 -259.47647095]
[72.15126801 -274.45611572]
[70.81303406 -289.39630127]
[69.47480011 -304.33648682]
[68.13655853 -319.27667236]
[66.79832458 -334.21685791]
[57.41918182 -343.07092285]
[56.61213684 -355.54217529]
[64.26556396 -364.90975952]
[63.14991760 -379.86822510]
[62.03426743 -394.82669067]
[60.91861725 -409.78512573]
[59.80297089 -424.74359131]
[45.27302933 -429.13052368]
[33.31141281 -438.47311401]
[25.53583527 -451.50787354]
[22.99787903 -466.47195435]
[26.04077911 -481.34155273]
[34.25300980 -494.10571289]
[46.52393341 -503.03817749]
[61.19401169 -506.93087769]
[76.27923584 -505.25741577]
[89.73944855 -498.24404907]
[99.75427246 -486.83932495]
[104.96927643 -472.58563232]
[104.67918396 -457.41064453]
[98.92322540 -443.36666870]
[88.47984314 -432.35302734]
[74.76142120 -425.85922241]
[75.87707520 -410.90078735]
[76.99272156 -395.94232178]
[78.10836792 -380.98388672]
[79.22401428 -366.02542114]
[89.87173462 -352.07574463]
[81.73851013 -335.55508423]
[83.07674408 -320.61489868]
[84.41497803 -305.67471313]
[85.75321198 -290.73452759]
[87.09144592 -275.79434204]
[98.56595612 -285.45538330]
[113.30274963 -282.65771484]
[120.43841553 -269.46371460]
[114.71279907 -255.59945679]
[100.34661865 -251.28520203]
[87.93092346 -259.69979858]
[88.15425110 -244.70147705]
[101.73077393 -238.52542114]
[111.31887054 -227.01986694]
[114.97564697 -212.43257141]
[111.92385101 -197.64384460]
[102.71633148 -185.59774780]
[89.13678741 -178.71607971]
[89.36011505 -163.71774292]
[89.58344269 -148.71940613]
[89.80677032 -133.72106934]
[90.03009796 -118.72272491]
[90.92291260 -103.74932098]
[92.48343658 -88.83071899]
[94.04396057 -73.91210938]
[95.60448456 -58.99350739]
[106.65095520 -52.35988617]
[111.93867493 -40.39652252]
[109.33224487 -27.38049507]
[99.56350708 -18.10761642]
[100.90174103 -3.16743207]
[102.23997498 11.77275276]
[103.57820892 26.71293831]
[104.91644287 41.65312195]
[106.25467682 56.59330750]
[117.72918701 46.93227005]
[132.46597290 49.72993088]
[139.60163879 62.92395782]
[133.87602234 76.78820801]
[119.50984192 81.10246277]
[107.09414673 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[120.28879547 133.30632019]
[134.77668762 137.19229126]
[140.91127014 150.88050842]
[134.17033386 164.28050232]
[119.52306366 167.51429749]
[107.76760864 158.19955444]
[106.87479401 173.17297363]
[105.98197937 188.14637756]
[105.08915710 203.11978149]
[104.19634247 218.09318542]
[103.30352783 233.06658936]
[102.41071320 248.03999329]
[101.85250092 263.02960205]
[101.62917328 278.02795410]
[101.40584564 293.02627563]
[101.18251801 308.02462769]
[108.28945160 294.81509399]
[118.93199158 284.24453735]
[132.18945312 277.22744751]
[146.91493225 274.37084961]
[161.83453369 275.92184448]
[175.65754700 281.74627686]
[187.18817139 291.34030151]
[195.42886353 303.87387085]
[199.66673279 318.26278687]
[199.53515625 333.26220703]
[195.04553223 347.57455444]
[186.58624268 359.96166992]
[174.88909912 369.35192871]
[160.96603394 374.93298340]
[146.02153015 376.22201538]
[131.34841919 373.10754395]
[118.21609497 365.85894775]
[107.76062012 355.10336304]
[100.88650513 341.77117920]
[98.18854523 327.01934814]
[93.78754425 341.35919189]
[89.38654327 355.69903564]
[84.98554993 370.03890991]
[85.45937347 379.16104126]
[80.41080475 384.55859375]
[75.79679871 398.83132935]
[71.18278503 413.10406494]
[66.56877899 427.37680054]
[61.95476913 441.64953613]
[57.44713974 455.95620728]
[53.04614258 470.29605103]
[48.64514160 484.63589478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 210]
[22 209]
[23 208]
[25 207]
[26 206]
[27 205]
[28 204]
[29 203]
[30 201]
[31 200]
[32 199]
[33 198]
[34 178]
[35 177]
[36 176]
[37 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 162]
[49 161]
[50 160]
[52 158]
[53 157]
[54 151]
[55 150]
[56 149]
[57 148]
[58 147]
[59 146]
[62 142]
[63 141]
[64 140]
[65 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[82 128]
[83 127]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
