%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[83.84695435 667.90051270]
[71.90125275 658.79254150]
[61.24662018 648.20318604]
[52.06537247 636.31372070]
[44.51461029 623.32751465]
[38.72353745 609.46685791]
[34.79124832 594.96881104]
[32.78502655 580.08160400]
[32.73920441 565.05981445]
[34.65456772 550.16064453]
[38.49833679 535.63891602]
[44.20474243 521.74316406]
[51.67613983 508.71115112]
[60.78468704 496.76589966]
[71.37451935 486.11175537]
[83.26443481 476.93106079]
[96.25097656 469.38092041]
[110.11193848 463.59051514]
[124.61013031 459.65890503]
[122.60611725 444.79339600]
[120.60209656 429.92785645]
[116.59314728 423.71899414]
[118.68061829 414.82626343]
[116.89815521 399.93255615]
[115.11568451 385.03884888]
[113.33322144 370.14511108]
[111.55075836 355.25140381]
[109.43297577 353.41479492]
[107.91509247 350.62863159]
[107.36242676 347.11724854]
[108.05242157 343.23284912]
[110.13283539 339.42156982]
[109.24001312 324.44818115]
[97.96395874 314.78451538]
[96.84521484 299.61206055]
[107.05780029 287.85021973]
[106.16498566 272.87683105]
[105.27217102 257.90341187]
[104.37934875 242.93000793]
[103.48653412 227.95660400]
[102.59371948 212.98320007]
[101.70090485 198.00979614]
[100.80809021 183.03639221]
[99.58111572 168.08665466]
[98.02059174 153.16804504]
[96.46006775 138.24945068]
[94.89954376 123.33084106]
[93.33901978 108.41223907]
[89.47471619 93.91854095]
[83.40087891 80.20327759]
[77.32704926 66.48800659]
[70.99076843 59.90854263]
[71.26657104 52.52303314]
[65.39761353 38.71885681]
[59.52865219 24.91468048]
[44.54677200 21.33007622]
[34.66386414 9.74640083]
[33.51052094 -5.25805807]
[41.32009125 -17.91304398]
[35.45112991 -31.71722031]
[22.93114662 -41.38989258]
[25.07189369 -56.12985611]
[19.20293236 -69.93403625]
[13.33397198 -83.73821259]
[7.46501112 -97.54238892]
[1.59605026 -111.34656525]
[-4.27291059 -125.15074158]
[-6.82153273 -110.36884308]
[-15.46076488 -98.10655212]
[-28.52250671 -90.73153687]
[-43.48474121 -89.66778564]
[-57.45849228 -95.12069702]
[-67.74565125 -106.03739929]
[-72.35992432 -120.31004333]
[-70.41037750 -135.18281555]
[-62.27342606 -147.78401184]
[-49.52019119 -155.68052673]
[-34.61312866 -157.34768677]
[-20.43055153 -152.46357727]
[-9.71020317 -141.97016907]
[-13.03246212 -156.59764099]
[-16.35472298 -171.22509766]
[-19.67698097 -185.85255432]
[-34.72640228 -185.53668213]
[-49.53128433 -188.25704956]
[-63.48537445 -193.90223694]
[-76.01726532 -202.24110413]
[-86.61377716 -212.93217468]
[-94.84099579 -225.53762817]
[-100.36201477 -239.54132080]
[-102.95075989 -254.36978149]
[-102.50122070 -269.41580200]
[-99.03179932 -284.06326294]
[-92.68457794 -297.71234131]
[-83.71945953 -309.80413818]
[-72.50357056 -319.84350586]
[-59.49618912 -327.41931152]
[-45.22995758 -332.22134399]
[-30.28907204 -334.05297852]
[-15.28535271 -332.83917236]
[-0.83319163 -328.62966919]
[12.47560406 -321.59683228]
[24.09604836 -312.02865601]
[33.55228806 -300.31692505]
[40.45710373 -286.94128418]
[44.52773666 -272.44937134]
[45.59750748 -257.43469238]
[43.62260437 -242.51208496]
[38.68389511 -228.29258728]
[30.98362541 -215.35848999]
[20.83711052 -204.23945618]
[8.65984344 -195.39077759]
[-5.04952145 -189.17481995]
[-1.72726190 -174.54734802]
[1.59499764 -159.91989136]
[4.91725731 -145.29243469]
[9.53126621 -131.01969910]
[15.40022755 -117.21552277]
[21.26918793 -103.41134644]
[27.13814926 -89.60717010]
[33.00711060 -75.80299377]
[38.87607193 -61.99881744]
[50.97626495 -53.31351089]
[49.25530624 -37.58618164]
[55.12426758 -23.78200340]
[69.65615082 -20.62567139]
[79.66130066 -9.38463306]
[81.14620209 5.76952314]
[73.33283234 19.04571915]
[79.20178986 32.84989548]
[85.07075500 46.65407181]
[91.04231262 60.41417694]
[97.11614990 74.12944031]
[103.18997955 87.84471130]
[103.95899963 72.86443329]
[108.68872833 58.62963104]
[117.03772736 46.16791916]
[128.40327454 36.37892151]
[141.96485901 29.96931267]
[156.74349976 27.40180969]
[171.67227173 28.86176109]
[185.67349243 34.24377441]
[197.73637390 43.15931702]
[206.99009705 54.96476364]
[212.76661682 68.80787659]
[214.64894104 83.68930054]
[212.50117493 98.53474426]
[206.47836304 112.27249146]
[197.01528931 123.91080475]
[184.79512024 132.60951233]
[170.70002747 137.74063110]
[155.74755859 138.93376160]
[141.01713562 136.10275269]
[127.57216644 129.45198059]
[116.38324738 119.46158600]
[108.25762939 106.85171509]
[109.81814575 121.77031708]
[111.37866974 136.68891907]
[112.93919373 151.60752869]
[114.49971771 166.52613831]
[117.56721497 170.74958801]
[118.60423279 175.27484131]
[117.83583832 179.27790833]
[115.78149414 182.14356995]
[116.67430878 197.11697388]
[117.56712341 212.09037781]
[118.45994568 227.06379700]
[119.35276031 242.03720093]
[120.24557495 257.01058960]
[121.13838959 271.98400879]
[122.03120422 286.95742798]
[133.56909180 297.42233276]
[134.26124573 312.62023926]
[124.21342468 323.55535889]
[125.10623932 338.52874756]
[126.44447327 353.46893311]
[128.22694397 368.36267090]
[130.00939941 383.25637817]
[131.79187012 398.15008545]
[133.57434082 413.04382324]
[135.46762085 427.92385864]
[137.47164917 442.78936768]
[139.47566223 457.65490723]
[154.49739075 457.60693359]
[169.39688110 459.52017212]
[183.91914368 463.36187744]
[197.81571960 469.06628418]
[210.84878540 476.53582764]
[222.79536438 485.64266968]
[233.45100403 496.23098755]
[242.63337708 508.11956787]
[250.18537903 521.10504150]
[255.97776794 534.96514893]
[259.91143799 549.46282959]
[261.91906738 564.34985352]
[261.96633911 579.37158203]
[260.05239868 594.27099609]
[256.20999146 608.79309082]
[250.50491333 622.68939209]
[243.03475952 635.72210693]
[233.92735291 647.66821289]
[223.33853149 658.32336426]
[211.44949341 667.50518799]
[198.46366882 675.05657959]
[184.60325623 680.84832764]
[170.10543823 684.78125000]
[155.21829224 686.78820801]
[140.19654846 686.83471680]
[125.29724884 684.92010498]
[110.77534485 681.07702637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 183]
[20 182]
[21 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[32 175]
[33 174]
[36 171]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 134]
[50 133]
[51 132]
[53 131]
[54 130]
[55 129]
[59 125]
[60 124]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[80 116]
[81 115]
[82 114]
[83 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
