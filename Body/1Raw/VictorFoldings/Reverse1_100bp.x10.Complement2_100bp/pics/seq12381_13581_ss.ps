%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[87.30567932 553.43347168]
[87.24788666 538.36383057]
[90.66752625 523.68725586]
[97.38018799 510.19515991]
[107.02387238 498.61514282]
[119.07849121 489.57177734]
[132.89398193 483.55270386]
[130.22817993 468.79147339]
[120.35215759 457.64187622]
[125.51373291 442.68634033]
[122.84793091 427.92510986]
[120.18213654 413.16387939]
[117.51634216 398.40267944]
[114.85054779 383.64144897]
[112.18475342 368.88024902]
[109.51895905 354.11901855]
[106.85316467 339.35781860]
[104.18736267 324.59658813]
[101.52156830 309.83535767]
[98.85577393 295.07415771]
[96.18997955 280.31292725]
[80.55014038 270.79919434]
[76.76614380 252.56202698]
[87.69839478 237.08946228]
[84.59428406 222.41416931]
[81.49017334 207.73886108]
[78.38606262 193.06356812]
[74.68672180 207.60023499]
[67.98866272 221.02171326]
[58.59659195 232.71739197]
[46.93779755 242.15521240]
[33.54267502 248.90582275]
[19.02060890 252.66209412]
[4.03225803 253.25315857]
[-10.74050713 250.65211487]
[-24.62562370 244.97729492]
[-36.99141312 236.48687744]
[-47.27531433 225.56710815]
[-55.00947571 212.71476746]
[-59.84204865 198.51454163]
[-61.55318069 183.61245728]
[-60.06502914 168.68646240]
[-55.44528961 154.41558838]
[-47.90413666 141.44905090]
[-37.78463745 130.37675476]
[-25.54716110 121.70241547]
[-11.74843502 115.82064819]
[2.98379302 112.99904633]
[17.97930527 113.36596680]
[32.55590439 116.90470886]
[46.05045319 123.45429993]
[57.84904099 132.71676636]
[67.41490936 144.27073669]
[74.31287384 157.59057617]
[78.22980499 172.07460022]
[81.11508179 157.35470581]
[84.00035095 142.63481140]
[86.88562775 127.91492462]
[76.16225433 119.57016754]
[70.06558990 107.42701721]
[69.77893066 93.84234619]
[75.35793304 81.45281982]
[85.71974182 72.66313934]
[98.85323334 69.17931366]
[101.95733643 54.50401306]
[105.06144714 39.82871246]
[108.16555786 25.15340805]
[111.26966858 10.47810650]
[114.37377930 -4.19719601]
[117.47789001 -18.87249756]
[120.58200073 -33.54780197]
[123.68611145 -48.22310257]
[118.97211456 -63.32571030]
[129.17572021 -74.17632294]
[129.73393250 -89.16593170]
[127.72991180 -104.03145599]
[125.72589874 -118.89698792]
[123.06010437 -133.65820312]
[119.73784637 -148.28565979]
[116.41558838 -162.91313171]
[113.09333038 -177.54058838]
[102.49167633 -189.28433228]
[107.21792603 -203.40919495]
[103.89566803 -218.03665161]
[100.57340240 -232.66410828]
[85.50427246 -232.79783630]
[70.87230682 -236.40371704]
[57.46660233 -243.28730774]
[46.01010895 -253.07737732]
[37.12065887 -265.24597168]
[31.27764702 -279.13681030]
[28.79618454 -294.00085449]
[29.81009102 -309.03643799]
[34.26469040 -323.43270874]
[41.91974640 -336.41336060]
[52.36243439 -347.27828979]
[65.02959442 -355.44161987]
[79.23809814 -360.46307373]
[94.22171021 -362.07186890]
[109.17237091 -360.18124390]
[123.28381348 -354.89315796]
[135.79502869 -346.49276733]
[146.03129578 -335.43313599]
[153.44059753 -322.31066895]
[157.62335205 -307.83306885]
[158.35397339 -292.78106689]
[155.59309387 -277.96640015]
[149.48957825 -264.18801880]
[140.37258911 -252.18896484]
[128.73379517 -242.61633301]
[115.20086670 -235.98637390]
[118.52312469 -221.35891724]
[121.84538269 -206.73146057]
[132.20941162 -196.03396606]
[127.72078705 -180.86283875]
[131.04304504 -166.23538208]
[134.36531067 -151.60792542]
[137.68756104 -136.98046875]
[146.57716370 -149.06246948]
[161.38496399 -151.45608521]
[173.62835693 -142.79011536]
[176.29380798 -128.02882385]
[167.85440063 -115.62816620]
[153.14460754 -112.69178772]
[140.59143066 -120.90100098]
[142.59544373 -106.03546906]
[144.59945679 -91.16994476]
[149.42787170 -105.37158203]
[157.59356689 -117.95415497]
[168.59722900 -128.14825439]
[181.76596069 -135.33049011]
[196.29449463 -139.06167603]
[211.29440308 -139.11363220]
[225.84843445 -135.48320007]
[239.06661987 -128.39237976]
[250.14064026 -118.27477264]
[258.39334106 -105.74907684]
[263.32003784 -91.58123779]
[264.61947632 -76.63762665]
[262.21218872 -61.83205414]
[256.24539185 -48.06988525]
[247.08393860 -36.19268036]
[235.28807068 -26.92673874]
[221.57911682 -20.83867264]
[206.79537964 -18.30076981]
[191.84088135 -19.46822739]
[177.63009644 -24.26965141]
[165.03202820 -32.41143417]
[154.81704712 -43.39570236]
[147.60980225 -56.55076599]
[143.85101318 -71.07221222]
[148.78704834 -57.01927948]
[138.36141968 -45.11899185]
[135.25730896 -30.44369125]
[132.15319824 -15.76838779]
[129.04908752 -1.09308577]
[125.94496918 13.58221626]
[122.84086609 28.25751877]
[119.73675537 42.93282318]
[116.63264465 57.60812378]
[113.52853394 72.28342438]
[125.63429260 82.85028839]
[130.78170776 98.07238007]
[127.57353973 113.81772614]
[116.88062286 125.81228638]
[101.60551453 130.80020142]
[98.72024536 145.52008057]
[95.83496857 160.23997498]
[92.94969940 174.95986938]
[93.06136322 189.95945740]
[96.16547394 204.63475037]
[99.26958466 219.31005859]
[102.37369537 233.98536682]
[113.40946198 238.40672302]
[120.86435699 247.51306152]
[122.97589874 258.96887207]
[119.33328247 269.90719604]
[110.95119476 277.64715576]
[113.61698914 292.40835571]
[116.28279114 307.16958618]
[118.94858551 321.93078613]
[121.61437988 336.69201660]
[124.28017426 351.45321655]
[126.94596863 366.21444702]
[129.61177063 380.97567749]
[132.27755737 395.73687744]
[134.94335938 410.49810791]
[137.60914612 425.25930786]
[140.27494812 440.02053833]
[150.34164429 452.22595215]
[144.98939514 466.12570190]
[147.65519714 480.88690186]
[162.70332336 481.69335938]
[177.15968323 485.94900513]
[190.24464417 493.42431641]
[201.25256348 503.71618652]
[209.58979797 516.26959229]
[214.80671692 530.40747070]
[216.62199402 545.36749268]
[214.93772888 560.34277344]
[209.84474182 574.52581787]
[201.61770630 587.15167236]
[190.70028687 597.53948975]
[177.68124390 605.12902832]
[163.26269531 609.51104736]
[148.22219849 610.44921875]
[133.37086487 607.89288330]
[119.50962067 601.97998047]
[107.38598633 593.02929688]
[97.65376282 581.52362061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 192]
[8 191]
[10 189]
[11 188]
[12 187]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[24 173]
[25 172]
[26 171]
[27 170]
[55 169]
[56 168]
[57 167]
[58 166]
[64 161]
[65 160]
[66 159]
[67 158]
[68 157]
[69 156]
[70 155]
[71 154]
[72 153]
[74 151]
[75 127]
[76 126]
[77 125]
[78 118]
[79 117]
[80 116]
[81 115]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
