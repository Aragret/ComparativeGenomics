%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[151.51463318 497.54733276]
[153.82878113 482.46066284]
[162.46670532 469.87698364]
[175.71333313 462.29476929]
[174.59768677 447.33630371]
[170.96539307 440.89984131]
[173.57846069 432.14712524]
[172.68565369 417.17373657]
[164.20452881 404.92956543]
[171.10670471 390.69332886]
[170.21389771 375.71990967]
[169.32107544 360.74652100]
[160.83995056 348.50234985]
[167.74214172 334.26611328]
[166.84931946 319.29269409]
[165.95649719 304.31927490]
[163.29071045 289.55807495]
[158.88970947 275.21823120]
[154.48870850 260.87838745]
[150.08770752 246.53852844]
[145.68672180 232.19868469]
[141.28572083 217.85884094]
[136.77809143 203.55215454]
[131.42691040 189.53912354]
[125.35307312 175.82385254]
[119.27923584 162.10859680]
[113.20540619 148.39332581]
[107.13156891 134.67805481]
[94.90340424 126.17386627]
[96.39001465 110.42266083]
[88.63388062 123.26174927]
[73.78053284 125.35415649]
[62.77931595 115.15743256]
[63.73991394 100.18822479]
[75.95420837 91.48126984]
[90.41703033 95.45394135]
[85.38011169 81.32491302]
[80.34319305 67.19588470]
[75.30628204 53.06685257]
[70.26936340 38.93782425]
[65.23244476 24.80879593]
[59.88125992 10.79577255]
[47.50667572 0.93776691]
[49.86664200 -13.76868820]
[44.20385742 -27.65871620]
[38.54106903 -41.54874420]
[23.73682976 -52.49935913]
[26.80099297 -69.77876282]
[20.93203163 -83.58293915]
[15.06307125 -97.38711548]
[9.19410992 -111.19129181]
[3.32514930 -124.99546814]
[-4.62128401 -112.27327728]
[-19.50413513 -110.40224457]
[-30.35231972 -120.76163483]
[-29.16895866 -135.71488953]
[-16.82638359 -144.23901367]
[-2.42431521 -140.05145264]
[-14.19019985 -150.62854004]
[-10.95907402 -165.16844177]
[-22.72495842 -175.74552917]
[-19.49383354 -190.28543091]
[-24.31982994 -204.48788452]
[-36.08571625 -215.06497192]
[-32.85459137 -229.60488892]
[-37.68058777 -243.80734253]
[-42.50658417 -258.00979614]
[-57.17551804 -254.80004883]
[-72.11159515 -253.25291443]
[-87.12697601 -253.38784790]
[-102.03283691 -255.20317078]
[-116.64171600 -258.67602539]
[-130.76988220 -263.76275635]
[-144.23968506 -270.39935303]
[-156.88169861 -278.50241089]
[-168.53694153 -287.97000122]
[-179.05883789 -298.68307495]
[-188.31507874 -310.50686646]
[-196.18925476 -323.29269409]
[-202.58232117 -336.87976074]
[-207.41387939 -351.09722900]
[-210.62318420 -365.76623535]
[-212.16987610 -380.70236206]
[-212.03448486 -395.71774292]
[-210.21873474 -410.62356567]
[-206.74543762 -425.23233032]
[-201.65829468 -439.36035156]
[-195.02127075 -452.82995605]
[-186.91783142 -465.47171021]
[-177.44990540 -477.12667847]
[-166.73652649 -487.64825439]
[-154.91246033 -496.90414429]
[-142.12640381 -504.77792358]
[-128.53912354 -511.17059326]
[-114.32152557 -516.00170898]
[-99.65240479 -519.21057129]
[-84.71623993 -520.75683594]
[-69.70085907 -520.62103271]
[-54.79510880 -518.80480957]
[-40.18643951 -515.33105469]
[-26.05857086 -510.24349976]
[-12.58917618 -503.60607910]
[0.05235191 -495.50225830]
[11.70703316 -486.03396606]
[22.22829819 -475.32031250]
[31.48382950 -463.49594116]
[39.35723114 -450.70965576]
[45.74948502 -437.12219238]
[50.58020401 -422.90444946]
[53.78863144 -408.23522949]
[55.33442307 -393.29901123]
[55.19813919 -378.28363037]
[53.38149261 -363.37792969]
[49.90732574 -348.76937866]
[44.81933594 -334.64166260]
[38.18150711 -321.17245483]
[30.07731438 -308.53118896]
[20.60868263 -296.87677002]
[9.89468384 -286.35583496]
[-1.92993784 -277.10064697]
[-14.71647739 -269.22763062]
[-28.30412865 -262.83578491]
[-23.47813225 -248.63333130]
[-18.65213394 -234.43087769]
[-7.23143768 -224.86965942]
[-10.11737537 -209.31388855]
[-5.29137754 -195.11143494]
[6.12931919 -185.55021667]
[3.24338150 -169.99444580]
[14.66407776 -160.43322754]
[11.77814007 -144.87745667]
[17.12932587 -130.86442566]
[22.99828720 -117.06025696]
[28.86724854 -103.25608063]
[34.73620987 -89.45190430]
[40.60517120 -75.64772034]
[51.70245361 -70.83348846]
[56.70495605 -59.38103867]
[52.43109512 -47.21152878]
[58.09388351 -33.32150269]
[63.75666809 -19.43147469]
[75.72621155 -10.56697750]
[73.77128601 5.13298607]
[76.86194611 6.83009005]
[79.28414917 10.10850143]
[80.30362701 14.63773537]
[79.36147308 19.77187920]
[84.39839172 33.90090942]
[89.43531036 48.02993774]
[94.47222137 62.15896606]
[99.50914001 76.28799438]
[104.54605865 90.41703033]
[110.10528564 104.34882355]
[122.76789093 113.83402252]
[120.84683228 128.60421753]
[126.92066956 142.31948853]
[132.99450684 156.03475952]
[139.06834412 169.75003052]
[145.14216614 183.46528625]
[150.46350098 169.44090271]
[163.49272156 162.00859070]
[178.27305603 164.56629944]
[188.04711914 175.94468689]
[188.34635925 190.94169617]
[179.03395081 202.70091248]
[164.36741638 205.84616089]
[151.05082703 198.93814087]
[156.66822815 206.14109802]
[155.62556458 213.45783997]
[160.02656555 227.79768372]
[164.42756653 242.13752747]
[168.82856750 256.47738647]
[173.22955322 270.81723022]
[177.63055420 285.15707397]
[180.71763611 270.47817993]
[188.58016968 257.70394897]
[200.29447937 248.33512878]
[214.48437500 243.47232056]
[229.48283386 243.68681335]
[243.52787781 248.95341492]
[254.96948242 258.65338135]
[262.46350098 271.64721680]
[265.12957764 286.40838623]
[262.65444946 301.20275879]
[255.32893372 314.29232788]
[244.01361084 324.13934326]
[230.03779602 329.58697510]
[215.04336548 329.99523926]
[200.79182434 325.31616211]
[188.95744324 316.09948730]
[180.92991638 303.42648315]
[181.82272339 318.39987183]
[182.71554565 333.37329102]
[191.26052856 346.68844604]
[184.29447937 359.85369873]
[185.18730164 374.82708740]
[186.08010864 389.80050659]
[194.62509155 403.11569214]
[187.65905762 416.28091431]
[188.55187988 431.25433350]
[189.55613708 446.22067261]
[190.67178345 461.17910767]
[204.89659119 466.71243286]
[215.30563354 477.87551880]
[219.83215332 492.45199585]
[217.57742310 507.54763794]
[208.98912048 520.16522217]
[195.77246094 527.79956055]
[180.55162048 528.93475342]
[166.34870911 523.34552002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[7 200]
[8 199]
[10 197]
[11 196]
[12 195]
[14 193]
[15 192]
[16 191]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[23 167]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[30 153]
[36 152]
[37 151]
[38 150]
[39 149]
[40 148]
[41 147]
[42 143]
[44 141]
[45 140]
[46 139]
[48 136]
[49 135]
[50 134]
[51 133]
[52 132]
[58 131]
[60 129]
[62 127]
[63 126]
[65 124]
[66 123]
[67 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
