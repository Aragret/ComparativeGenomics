%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[134.17941284 594.02374268]
[131.25598145 579.27374268]
[130.86752319 564.24188232]
[133.02520752 549.36059570]
[137.66697693 535.05810547]
[144.65925598 521.74584961]
[153.80088806 509.80688477]
[164.82882690 499.58471680]
[177.42578125 491.37347412]
[191.22932434 485.40939331]
[187.68965149 470.83300781]
[184.14997864 456.25665283]
[173.62783813 445.71463013]
[177.89007568 430.47836304]
[174.35040283 415.90200806]
[169.71726990 410.14389038]
[170.86825562 401.08227539]
[167.54600525 386.45480347]
[162.99911499 380.62835693]
[164.28488159 371.58486938]
[161.18077087 356.90957642]
[158.07666016 342.23425293]
[154.53698730 327.65789795]
[150.56489563 313.19335938]
[139.73353577 302.96932983]
[143.54025269 287.61291504]
[139.56816101 273.14837646]
[135.59606934 258.68386841]
[122.56429291 251.56286621]
[118.32997131 236.95036316]
[125.88748169 223.32972717]
[121.91539001 208.86520386]
[111.08403778 198.64115906]
[114.89075470 183.28474426]
[110.91865540 168.82022095]
[106.94655609 154.35569763]
[102.97446442 139.89117432]
[99.00236511 125.42665100]
[95.03027344 110.96212769]
[91.50751495 125.54259491]
[83.26812744 138.07705688]
[71.28006744 147.09295654]
[56.95168304 151.53111267]
[41.96625519 150.87016296]
[28.08425140 145.18772888]
[16.93652344 135.15138245]
[9.83269310 121.94019318]
[7.60731030 107.10619354]
[10.52181149 92.39205933]
[18.23380280 79.52639771]
[29.83728981 70.02066040]
[43.96910477 64.99156189]
[58.96905518 65.02992249]
[73.07496643 70.13123322]
[84.62968445 79.69618988]
[92.27632904 92.60259247]
[91.82971954 77.60923767]
[91.38311768 62.61589050]
[90.49030304 47.64248657]
[89.15206909 32.70230103]
[87.81382751 17.76211548]
[84.80955505 13.49345970]
[83.84002686 8.95327187]
[84.66793823 4.96208000]
[86.76471710 2.12732172]
[78.41892242 -11.31359768]
[85.58020782 -24.37366295]
[84.91042328 -39.35870361]
[84.24063110 -54.34374237]
[83.57084656 -69.32878113]
[82.90106201 -84.31381989]
[74.55527496 -97.75473785]
[81.71655273 -110.81480408]
[80.71229553 -125.78115082]
[79.37405396 -140.72132874]
[77.70251465 -155.62791443]
[75.69850159 -170.49343872]
[73.69448853 -185.35896301]
[71.69047546 -200.22448730]
[64.53856659 -187.03926086]
[51.80417252 -179.11239624]
[36.81603622 -178.51596069]
[23.49201775 -185.40583801]
[15.31498528 -197.98106384]
[14.42239571 -212.95448303]
[21.04756927 -226.41207886]
[33.45870209 -234.83609009]
[48.41155243 -236.02447510]
[61.99748230 -229.66661072]
[70.66484833 -217.42524719]
[70.88817596 -232.42358398]
[71.11150360 -247.42192078]
[71.33483124 -262.42025757]
[63.80385590 -276.33410645]
[71.72978973 -288.94476318]
[71.95311737 -303.94308472]
[72.17644501 -318.94143677]
[72.39977264 -333.93975830]
[72.62310028 -348.93811035]
[72.84642792 -363.93643188]
[59.37111282 -371.19415283]
[50.82176208 -383.88931274]
[49.16294861 -399.10467529]
[54.77586365 -413.34384155]
[66.37068939 -423.33474731]
[81.28303528 -426.78158569]
[96.08613586 -422.89230347]
[107.37835693 -412.56057739]
[112.56483459 -398.16061401]
[110.45373535 -383.00140381]
[101.53019714 -370.56640625]
[87.84476471 -363.71310425]
[87.62143707 -348.71478271]
[87.39810944 -333.71643066]
[87.17478180 -318.71810913]
[86.95145416 -303.71975708]
[86.72812653 -288.72143555]
[94.27507782 -275.88037109]
[86.33316803 -262.19692993]
[86.10984039 -247.19859314]
[85.88651276 -232.20025635]
[85.66318512 -217.20191956]
[86.55600739 -202.22850037]
[88.56002045 -187.36297607]
[90.56403351 -172.49745178]
[92.56804657 -157.63192749]
[95.13523865 -155.21493530]
[96.65928650 -151.43440247]
[96.51206970 -146.79418945]
[94.31423950 -142.05957031]
[95.65247345 -127.11938477]
[98.10918427 -124.59017181]
[99.46290588 -120.74536896]
[99.10863495 -116.11634827]
[96.70159149 -111.48458862]
[104.99947357 -99.11550140]
[97.88610077 -84.98360443]
[98.55588531 -69.99856567]
[99.22566986 -55.01352692]
[99.89546204 -40.02848816]
[100.56524658 -25.04344940]
[108.86312866 -12.67436028]
[101.74975586 1.45753646]
[102.75401306 16.42388153]
[104.09224701 31.36406517]
[105.43048096 46.30425262]
[107.49264526 48.20310211]
[108.92689514 51.03321457]
[109.37477112 54.55951691]
[108.56942749 58.42163467]
[106.37646484 62.16928482]
[106.82307434 77.16263580]
[107.26967621 92.15598297]
[109.49479675 106.99002838]
[113.46688843 121.45455170]
[117.43898773 135.91908264]
[121.41107941 150.38360596]
[125.38317871 164.84812927]
[129.35527039 179.31265259]
[140.47073364 190.57128906]
[136.37991333 204.89311218]
[140.35200500 219.35763550]
[153.80577087 227.20837402]
[157.62799072 241.93403625]
[150.06059265 254.71176147]
[154.03268433 269.17626953]
[158.00477600 283.64080811]
[169.12025452 294.89944458]
[165.02941895 309.22125244]
[169.00151062 323.68579102]
[172.19752502 326.62509155]
[174.10057068 330.08093262]
[174.70703125 333.58346558]
[174.16624451 336.70983887]
[172.75196838 339.13015747]
[175.85607910 353.80545044]
[178.96018982 368.48074341]
[182.17346191 383.13253784]
[185.49572754 397.76000977]
[188.92678833 412.36233521]
[192.46646118 426.93869019]
[203.24177551 438.52328491]
[198.72634888 452.71697998]
[202.26602173 467.29333496]
[205.80569458 481.86972046]
[220.80720520 480.83889771]
[235.76713562 482.35833740]
[250.25503540 486.38433838]
[263.85409546 492.80102539]
[276.17300415 501.42382812]
[286.85733032 512.00457764]
[295.59967041 524.23895264]
[302.14849854 537.77484131]
[306.31539917 552.22283936]
[307.98046875 567.16729736]
[307.09576416 582.17810059]
[303.68679810 596.82348633]
[297.85165405 610.68200684]
[289.75817871 623.35498047]
[279.63925171 634.47772217]
[267.78601074 643.73022461]
[254.53952026 650.84631348]
[240.28088379 655.62115479]
[225.42036438 657.91748047]
[210.38552856 657.66912842]
[195.60894775 654.88330078]
[181.51579285 649.64013672]
[168.51153564 642.09051514]
[156.97033691 632.45159912]
[147.22425842 621.00073242]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 185]
[11 184]
[12 183]
[14 181]
[15 180]
[17 179]
[18 178]
[20 177]
[21 176]
[22 175]
[23 170]
[24 169]
[26 167]
[27 166]
[28 165]
[31 162]
[32 161]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[39 154]
[56 153]
[57 152]
[58 151]
[59 146]
[60 145]
[61 144]
[65 143]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[73 135]
[74 131]
[75 130]
[76 126]
[77 125]
[78 124]
[79 123]
[90 122]
[91 121]
[92 120]
[93 119]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
