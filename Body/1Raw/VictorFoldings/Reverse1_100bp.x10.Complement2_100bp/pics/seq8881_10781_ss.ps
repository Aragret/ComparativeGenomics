%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-8.28957844 583.69696045]
[-4.20349741 598.16802979]
[-2.62198234 613.12152100]
[-3.59053731 628.12719727]
[-7.08129454 642.75329590]
[-12.99381924 656.57897949]
[-21.15799522 669.20648193]
[-31.33892250 680.27252197]
[-43.24367523 689.45861816]
[-56.52973175 696.50054932]
[-70.81482697 701.19567871]
[-85.68794250 703.40893555]
[-100.72116089 703.07653809]
[-115.48193359 700.20819092]
[-129.54557800 694.88635254]
[-142.50743103 687.26416016]
[-153.99458313 677.56085205]
[-163.67651367 666.05572510]
[-171.27465820 653.07977295]
[-176.57038879 639.00622559]
[-179.41136169 624.24017334]
[-179.71580505 609.20635986]
[-177.47497559 594.33740234]
[-172.75335693 580.06103516]
[-165.68678284 566.78808594]
[-156.47857666 554.90039062]
[-145.39369202 544.73999023]
[-132.75103760 536.59930420]
[-118.91438293 530.71246338]
[-104.28183746 527.24884033]
[-89.27440643 526.30810547]
[-74.32387543 527.91741943]
[-59.86041260 532.03033447]
[-53.38091660 518.50195312]
[-46.90142059 504.97363281]
[-40.42192459 491.44528198]
[-33.94242859 477.91693115]
[-39.11850739 463.99774170]
[-32.74009323 450.18579102]
[-18.10527229 444.85101318]
[-11.62577534 431.32266235]
[-5.14627981 417.79431152]
[1.33321619 404.26599121]
[7.81271219 390.73764038]
[14.29220772 377.20928955]
[19.53892517 363.15682983]
[23.51102257 348.69229126]
[27.48311806 334.22778320]
[21.77448082 323.56295776]
[24.96532059 311.47982788]
[35.87241364 304.59518433]
[40.05942535 290.19140625]
[44.24643707 275.78762817]
[48.43344879 261.38385010]
[52.62045670 246.98007202]
[56.80746841 232.57627869]
[60.99448013 218.17250061]
[65.18149567 203.76872253]
[69.15358734 189.30419922]
[72.90988922 174.78213501]
[76.66619110 160.26008606]
[72.36258698 146.00076294]
[83.30919647 134.57786560]
[87.06549072 120.05580902]
[90.82179260 105.53375244]
[92.49333191 90.62718201]
[92.04673004 75.63382721]
[91.60012054 60.64048004]
[83.45536804 47.07679367]
[90.81030273 34.12479401]
[90.36369324 19.13144493]
[89.91709137 4.13809586]
[89.24730682 -10.84694290]
[87.90907288 -25.78712845]
[86.12660217 -40.68084717]
[84.34413910 -55.57456207]
[82.56167603 -70.46827698]
[80.77920532 -85.36199951]
[77.12874603 -90.87431335]
[76.85168457 -96.55060577]
[79.17221832 -100.72483063]
[77.83398438 -115.66501617]
[76.49575043 -130.60520935]
[67.66741180 -118.47835541]
[53.43310547 -113.74711609]
[39.10188293 -118.17611694]
[30.01893425 -130.11346436]
[29.57196999 -145.10679626]
[37.92770386 -157.56399536]
[51.96964645 -162.83882141]
[66.46050262 -158.96389771]
[75.99597931 -147.38339233]
[76.44258118 -162.37673950]
[76.88919067 -177.37008667]
[77.33579254 -192.36344910]
[70.01280975 -206.38786316]
[78.12561798 -218.87913513]
[63.87749481 -223.96304321]
[51.89897919 -233.20265198]
[43.36360168 -245.69274902]
[39.10757446 -260.20968628]
[39.54785538 -275.33123779]
[44.64131546 -289.57595825]
[53.88894653 -301.54827881]
[66.38476562 -310.07528687]
[80.90454865 -314.32156372]
[96.02580261 -313.87115479]
[110.26709747 -308.76815796]
[122.23322296 -299.51251221]
[130.75184631 -287.01098633]
[134.98841858 -272.48834229]
[134.52787781 -257.36740112]
[129.41532898 -243.12953186]
[120.15165710 -231.16961670]
[107.64442444 -222.65936279]
[93.11896515 -218.43252563]
[100.47389984 -205.48052979]
[92.32914734 -191.91683960]
[91.88253784 -176.92349243]
[91.43593597 -161.93014526]
[90.98932648 -146.93678284]
[91.43593597 -131.94343567]
[92.77416992 -117.00325012]
[94.11240387 -102.06306458]
[95.67292786 -87.14446259]
[97.45539093 -72.25074768]
[99.23785400 -57.35702896]
[101.02032471 -42.46331024]
[102.80278778 -27.56959343]
[104.92057037 -25.73298264]
[106.43844604 -22.94682884]
[106.99111176 -19.43542290]
[106.30111694 -15.55104065]
[104.22071075 -11.73975849]
[107.13478088 -7.95594358]
[107.70281219 -2.30135584]
[104.91043854 3.69148993]
[105.35704803 18.68483925]
[105.80364990 33.67818832]
[113.91645813 46.16945267]
[106.59347534 60.19387436]
[107.04007721 75.18722534]
[107.48668671 90.18057251]
[113.99669647 76.66688538]
[124.15661621 65.63166809]
[137.08752441 58.02959061]
[151.67076111 54.51830292]
[166.64474487 55.40156174]
[180.71405029 60.60296631]
[192.66156006 69.67253113]
[201.45368958 81.82566071]
[206.32981873 96.01097870]
[206.86814880 111.00131226]
[203.02207947 125.49985504]
[195.12432861 138.25233459]
[183.85816956 148.15553284]
[170.19819641 154.35272217]
[155.32614136 156.30780029]
[140.52861023 153.85160828]
[127.08571625 147.19664001]
[116.16040802 136.91862488]
[108.69783020 123.90670776]
[105.34385681 109.29005432]
[101.58755493 123.81211090]
[97.83125305 138.33416748]
[101.86618042 153.63220215]
[91.18824768 164.01638794]
[87.43194580 178.53843689]
[83.67564392 193.06050110]
[85.07135010 199.52296448]
[83.26502228 204.91131592]
[79.58527374 207.95573425]
[75.39826202 222.35951233]
[71.21125031 236.76329041]
[67.02423859 251.16708374]
[62.83723068 265.57086182]
[58.65021896 279.97463989]
[54.46320724 294.37841797]
[50.27619553 308.78219604]
[55.07976151 326.55880737]
[41.94764328 338.19985962]
[37.97554779 352.66439819]
[34.00344849 367.12890625]
[45.18054581 357.12527466]
[59.56690598 352.87881470]
[74.38474274 355.20938110]
[86.77297974 363.66702271]
[94.33962250 376.61868286]
[95.62368774 391.56362915]
[90.37722778 405.61621094]
[79.61326599 416.06307983]
[65.41014099 420.88711548]
[50.51026917 419.15689087]
[37.79056931 411.20645142]
[29.70702171 398.57095337]
[27.82055283 383.68878174]
[21.34105682 397.21713257]
[14.86156178 410.74548340]
[8.38206577 424.27383423]
[1.90257001 437.80215454]
[-4.57692575 451.33050537]
[0.43962377 466.07745361]
[-6.32422304 479.70480347]
[-20.41408348 484.39645386]
[-26.89357948 497.92477417]
[-33.37307358 511.45312500]
[-39.85256958 524.98150635]
[-46.33206558 538.50982666]
[-34.06153870 547.20129395]
[-23.43650436 557.84167480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 208]
[34 207]
[35 206]
[36 205]
[37 204]
[40 201]
[41 200]
[42 199]
[43 198]
[44 197]
[45 196]
[46 183]
[47 182]
[48 181]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[57 173]
[58 172]
[59 169]
[60 168]
[61 167]
[63 165]
[64 164]
[65 163]
[66 143]
[67 142]
[68 141]
[70 139]
[71 138]
[72 137]
[73 134]
[74 129]
[75 128]
[76 127]
[77 126]
[78 125]
[81 124]
[82 123]
[83 122]
[92 121]
[93 120]
[94 119]
[95 118]
[97 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
