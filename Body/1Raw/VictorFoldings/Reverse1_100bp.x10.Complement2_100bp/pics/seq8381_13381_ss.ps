%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[141.39280701 373.22314453]
[136.35589600 359.09411621]
[131.31898499 344.96508789]
[126.28205872 330.83605957]
[121.24514771 316.70703125]
[116.20822906 302.57800293]
[111.17131042 288.44897461]
[106.13439941 274.31994629]
[101.09748077 260.19091797]
[96.06056213 246.06188965]
[91.02365112 231.93286133]
[85.98673248 217.80383301]
[84.22569275 232.70010376]
[79.63081360 246.97900391]
[72.37387848 260.10671997]
[62.72619247 271.59243774]
[51.04843903 281.00680542]
[37.77719879 287.99780273]
[23.40863037 292.30410767]
[8.47991085 293.76470947]
[-6.45083666 292.32501221]
[-20.82541656 288.03881836]
[-34.10642624 281.06637573]
[-45.79734039 271.66839600]
[-55.46109390 260.19616699]
[-62.73639297 247.07861328]
[-67.35124969 232.80615234]
[-69.13312531 217.91236877]
[-68.01541901 202.95407104]
[-64.03990173 188.49047852]
[-57.35520935 175.06234741]
[-48.21125031 163.17167664]
[-36.94988251 153.26301575]
[-23.99211693 145.70680237]
[-9.82239056 140.78553772]
[5.02955198 138.68319702]
[20.00845909 139.47839355]
[34.55433273 143.14138794]
[48.12336731 149.53523254]
[60.20827484 158.42089844]
[70.35724640 169.46618652]
[78.19086456 182.25816345]
[83.41468811 196.31268311]
[84.97521210 181.39407349]
[76.97612762 165.77415466]
[87.91592407 150.96192932]
[89.25415802 136.02174377]
[90.59239197 121.08155060]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.96215057 76.07066345]
[96.52267456 61.15206146]
[98.08319092 46.23345566]
[91.82357788 31.70321846]
[100.84297180 19.84995842]
[102.40349579 4.93135405]
[103.96401978 -9.98725033]
[105.52454376 -24.90585518]
[107.08506775 -39.82445908]
[96.77011108 -46.88629913]
[90.47294617 -57.60143661]
[89.33568573 -69.90534210]
[93.51304626 -81.45742798]
[102.15456390 -90.08628082]
[113.57695007 -94.19778442]
[115.58096313 -109.06331635]
[117.58497620 -123.92884064]
[119.58898926 -138.79437256]
[121.59300232 -153.65989685]
[106.91997528 -156.81117249]
[92.53527069 -161.09001160]
[78.52539825 -166.47071838]
[64.97462463 -172.92089844]
[51.96443939 -180.40176392]
[39.57309341 -188.86833191]
[27.87511063 -198.26969910]
[16.94084167 -208.54928589]
[6.83604908 -219.64529419]
[-2.37849545 -231.49099731]
[-10.64737415 -244.01513672]
[-17.92085457 -257.14239502]
[-24.15519524 -270.79379272]
[-29.31290054 -284.88729858]
[-33.36294937 -299.33807373]
[-36.28098679 -314.05926514]
[-38.04946136 -328.96231079]
[-38.65773773 -343.95761108]
[-38.10215378 -358.95492554]
[-36.38605881 -373.86407471]
[-33.51976776 -388.59542847]
[-29.52052307 -403.06036377]
[-24.41237259 -417.17190552]
[-18.22603989 -430.84515381]
[-10.99873066 -443.99786377]
[-2.77391171 -456.55099487]
[6.39895153 -468.42898560]
[16.46469307 -479.56042480]
[27.36277199 -489.87838745]
[39.02764893 -499.32080078]
[51.38916779 -507.83087158]
[64.37298584 -515.35742188]
[77.90100861 -521.85516357]
[91.89188385 -527.28503418]
[106.26146698 -531.61444092]
[120.92333221 -534.81719971]
[135.78930664 -536.87420654]
[150.76997375 -537.77301025]
[165.77525330 -537.50817871]
[180.71487427 -536.08142090]
[195.49900818 -533.50115967]
[210.03874207 -529.78302002]
[224.24662781 -524.94934082]
[238.03720093 -519.02917480]
[251.32752991 -512.05816650]
[264.03768921 -504.07815552]
[276.09124756 -495.13723755]
[287.41571045 -485.28912354]
[297.94293213 -474.59307861]
[307.60964966 -463.11340332]
[316.35769653 -450.91915894]
[324.13449097 -438.08364868]
[330.89321899 -424.68408203]
[336.59326172 -410.80108643]
[341.20031738 -396.51812744]
[344.68667603 -381.92108154]
[347.03140259 -367.09777832]
[348.22039795 -352.13732910]
[348.24645996 -337.12973022]
[347.10946655 -322.16525269]
[344.81625366 -307.33389282]
[341.38061523 -292.72482300]
[336.82321167 -278.42593384]
[331.17144775 -264.52322388]
[324.45932007 -251.10026550]
[316.72720337 -238.23782349]
[308.02157593 -226.01324463]
[298.39480591 -214.50004578]
[287.90478516 -203.76748657]
[276.61462402 -193.88008118]
[264.59219360 -184.89733887]
[251.90983582 -176.87324524]
[238.64379883 -169.85607910]
[224.87388611 -163.88804626]
[210.68287659 -159.00502014]
[196.15615845 -155.23638916]
[181.38107300 -152.60479736]
[166.44650269 -151.12608337]
[151.44223022 -150.80914307]
[136.45852661 -151.65588379]
[134.45451355 -136.79035950]
[132.45050049 -121.92482758]
[130.44648743 -107.05930328]
[128.44247437 -92.19377136]
[141.76795959 -80.60485077]
[145.50212097 -63.18339920]
[137.96522522 -46.86547470]
[122.00366974 -38.26393890]
[120.44314575 -23.34533310]
[118.88262177 -8.42672729]
[117.32209778 6.49187708]
[115.76158142 21.41048241]
[122.13281250 34.87364197]
[113.00180054 47.79397964]
[111.44127655 62.71258545]
[109.88075256 77.63118744]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[105.53257751 122.41978455]
[104.19434357 137.35997009]
[102.85610962 152.30015564]
[110.51240540 162.68013000]
[109.09021759 175.09629822]
[99.89382172 182.95458984]
[98.33329773 197.87319946]
[100.11576080 212.76692200]
[105.15267944 226.89595032]
[110.18959045 241.02497864]
[115.22650909 255.15400696]
[120.26342773 269.28302002]
[125.30033875 283.41207886]
[130.33726501 297.54110718]
[135.37417603 311.67013550]
[140.41108704 325.79916382]
[145.44801331 339.92819214]
[150.48492432 354.05722046]
[155.52183533 368.18624878]
[170.51974487 366.66101074]
[185.44674683 368.77005005]
[199.43501282 374.39071655]
[211.67127991 383.19622803]
[221.44415283 394.67465210]
[228.18544006 408.15866089]
[231.50323486 422.86431885]
[231.20460510 437.93661499]
[227.30694580 452.49929810]
[220.03686523 465.70568848]
[209.81700134 476.78802490]
[197.24156189 485.10195923]
[183.04164124 490.16415405]
[168.04281616 491.68026733]
[153.11709595 489.56219482]
[139.13223267 483.93307495]
[126.90130615 475.12011719]
[117.13539886 463.63577271]
[110.40228271 450.14767456]
[107.09341431 435.44003296]
[107.40116882 420.36791992]
[111.30765533 405.80758667]
[118.58575439 392.60559082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[43 175]
[44 174]
[46 171]
[47 170]
[48 169]
[49 168]
[51 167]
[52 166]
[53 165]
[54 164]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
