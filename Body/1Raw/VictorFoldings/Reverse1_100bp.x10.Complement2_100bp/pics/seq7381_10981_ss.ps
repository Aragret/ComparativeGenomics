%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[13.25048733 826.13317871]
[3.20743227 837.30548096]
[-8.23517799 847.03948975]
[-20.87313652 855.16137695]
[-34.48090744 861.52630615]
[-48.81563950 866.02062988]
[-63.62151337 868.56414795]
[-78.63430786 869.11145020]
[-93.58609009 867.65283203]
[-108.21003723 864.21429443]
[-122.24516296 858.85717773]
[-135.44099426 851.67706299]
[-147.56204224 842.80218506]
[-158.39198303 832.39086914]
[-167.73754883 820.62890625]
[-175.43196106 807.72619629]
[-181.33789062 793.91302490]
[-185.34996033 779.43591309]
[-187.39654541 764.55322266]
[-187.44114685 749.53051758]
[-185.48294067 734.63592529]
[-181.55690002 720.13525391]
[-175.73307800 706.28729248]
[-168.11540222 693.33911133]
[-158.83982849 681.52191162]
[-148.07189941 671.04644775]
[-136.00375366 662.09973145]
[-122.85077667 654.84149170]
[-108.84770966 649.40112305]
[-94.24443054 645.87579346]
[-79.30157471 644.32843018]
[-64.28579712 644.78662109]
[-49.46508026 647.24218750]
[-45.06408310 632.90234375]
[-40.66308594 618.56250000]
[-36.26208496 604.22265625]
[-31.86108780 589.88281250]
[-39.04468918 576.88543701]
[-34.78572464 562.28009033]
[-21.10418701 554.83343506]
[-16.70318985 540.49359131]
[-12.30219078 526.15374756]
[-19.48579025 513.15637207]
[-15.22682858 498.55102539]
[-1.54528928 491.10433960]
[2.85570884 476.76446533]
[7.25670671 462.42462158]
[6.21404886 455.10791016]
[11.83144951 447.90493774]
[16.44545937 433.63220215]
[21.05946732 419.35946655]
[25.67347717 405.08673096]
[30.28748703 390.81399536]
[25.69394875 373.87686157]
[39.46218872 361.64916992]
[43.75631332 347.27694702]
[47.94332504 332.87316895]
[52.13033676 318.46939087]
[55.56139755 303.86706543]
[58.22719193 289.10583496]
[60.89298630 274.34463501]
[63.55878448 259.58340454]
[66.22457886 244.82218933]
[68.89037323 230.06097412]
[56.75535202 221.38879395]
[49.55941391 208.25379944]
[48.77680969 193.23553467]
[54.61624908 179.30996704]
[65.96891785 169.25990295]
[80.61857605 165.11878967]
[83.28437042 150.35757446]
[85.95017242 135.59635925]
[88.61596680 120.83513641]
[91.28176117 106.07392120]
[92.95330048 91.16734314]
[84.84114838 81.13959503]
[85.70751190 68.67230988]
[94.54384613 60.41120911]
[95.43666077 45.43780518]
[96.32947540 30.46439743]
[97.22229004 15.49099159]
[98.00361633 0.51135457]
[89.14082336 -15.62966251]
[99.15502930 -30.04085922]
[99.60163879 -45.03421021]
[100.04824066 -60.02755737]
[87.82116699 -72.53826904]
[88.41358948 -89.68364716]
[100.97079468 -100.87092590]
[101.19412231 -115.86926270]
[101.41744995 -130.86759949]
[101.64077759 -145.86593628]
[101.75244904 -160.86552429]
[101.75244904 -175.86552429]
[94.01514435 -189.66569519]
[101.75244904 -202.39297485]
[101.75244904 -217.39297485]
[94.01514435 -231.19314575]
[101.75244904 -243.92041016]
[87.97857666 -250.49636841]
[78.42864990 -262.40274048]
[74.99880981 -277.27551270]
[78.37005615 -292.16165161]
[87.87302399 -304.10552979]
[101.62088776 -310.73568726]
[116.88400269 -310.73568726]
[130.63186646 -304.10552979]
[140.13484192 -292.16165161]
[143.50608826 -277.27551270]
[140.07624817 -262.40274048]
[130.52632141 -250.49636841]
[116.75244904 -243.92041016]
[124.48974609 -231.19314575]
[116.75244904 -217.39297485]
[116.75244904 -202.39297485]
[124.48974609 -189.66569519]
[116.75244904 -175.86552429]
[116.75244904 -160.86552429]
[119.89595032 -154.17671204]
[116.63911438 -145.64260864]
[116.41578674 -130.64427185]
[116.19245911 -115.64593506]
[115.96913147 -100.64759827]
[126.14905548 -92.74831390]
[129.97769165 -80.24137115]
[125.84302521 -67.62729645]
[115.04159546 -59.58095169]
[114.59498596 -44.58760071]
[114.14837646 -29.59425163]
[122.21245575 -20.57775497]
[121.96308899 -8.08289337]
[112.98865509 1.18113971]
[115.83034515 8.00364399]
[112.19569397 16.38380814]
[111.30287933 31.35721397]
[110.41006470 46.33061981]
[109.51725006 61.30402374]
[118.20581818 76.55117798]
[107.93833923 91.83712769]
[117.77034760 80.50877380]
[132.13584900 76.19227600]
[146.58355713 80.22513580]
[156.63667297 91.35774231]
[159.18013000 106.14053345]
[153.42581177 119.99288940]
[141.15676880 128.62252808]
[126.17469025 129.35543823]
[113.12192535 121.96453857]
[106.04297638 108.73971558]
[103.37718201 123.50093079]
[100.71138763 138.26214600]
[98.04559326 153.02336121]
[95.37979889 167.78457642]
[107.65557861 176.78828430]
[114.77578735 190.17445374]
[115.37545776 205.26287842]
[109.38918304 219.05873108]
[98.05342865 228.84700012]
[83.65158844 232.72676086]
[80.98579407 247.48797607]
[78.31999969 262.24920654]
[75.65420532 277.01040649]
[72.98841095 291.77163696]
[70.32261658 306.53283691]
[82.59511566 297.90814209]
[97.55047607 299.06448364]
[108.35131073 309.47323608]
[110.05962372 324.37564087]
[101.89439392 336.95852661]
[87.58865356 341.46914673]
[73.68280029 335.84533691]
[66.53411865 322.65640259]
[62.34710693 337.06018066]
[58.16009521 351.46395874]
[58.76968765 360.57803345]
[53.80203629 366.05014038]
[59.14456558 377.78982544]
[55.18374634 389.64291382]
[44.56021881 395.42800903]
[39.94620895 409.70074463]
[35.33220291 423.97348022]
[30.71819115 438.24621582]
[26.10418320 452.51895142]
[21.59655380 466.82562256]
[17.19555664 481.16546631]
[12.79455757 495.50534058]
[19.94318199 509.34494019]
[15.27566814 523.82489014]
[2.03765631 530.55474854]
[-2.36334181 544.89459229]
[-6.76433992 559.23443604]
[0.38428447 573.07403564]
[-4.28322983 587.55395508]
[-17.52124214 594.28381348]
[-21.92223930 608.62365723]
[-26.32323837 622.96350098]
[-30.72423553 637.30334473]
[-35.12523270 651.64318848]
[-21.47864151 657.92443848]
[-8.79105377 665.96862793]
[2.71110582 675.63214111]
[12.82256699 686.74255371]
[21.36287880 699.10162354]
[28.17963028 712.48876953]
[33.15116501 726.66503906]
[36.18876648 741.37750244]
[37.23822021 756.36358643]
[36.28079605 771.35583496]
[33.33358765 786.08660889]
[28.44918251 800.29321289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[40 191]
[41 190]
[42 189]
[45 186]
[46 185]
[47 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[55 176]
[56 174]
[57 173]
[58 172]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[64 159]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 139]
[78 137]
[79 136]
[80 135]
[81 134]
[82 132]
[84 129]
[85 128]
[86 127]
[89 123]
[90 122]
[91 121]
[92 120]
[93 118]
[94 117]
[96 115]
[97 114]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
