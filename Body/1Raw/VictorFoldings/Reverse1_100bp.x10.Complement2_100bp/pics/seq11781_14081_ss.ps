%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[85.95079041 682.36047363]
[81.70913696 667.92706299]
[80.19206238 652.95996094]
[81.45125580 637.96899414]
[85.44382477 623.46472168]
[92.03377533 609.94116211]
[100.99666595 597.85888672]
[112.02722168 587.62945557]
[124.74974060 579.60125732]
[138.73089600 574.04766846]
[135.84562683 559.32781982]
[132.96035767 544.60791016]
[130.07508850 529.88800049]
[127.18981171 515.16815186]
[114.95988464 502.58258057]
[121.07231140 485.21249390]
[112.00381470 497.16082764]
[97.16202545 499.33370972]
[85.04900360 490.48638916]
[82.60363007 475.68707275]
[91.22673035 463.41342163]
[105.97859955 460.69638062]
[118.40816498 469.09158325]
[116.62570190 454.19787598]
[114.84323883 439.30416870]
[113.06076813 424.41043091]
[111.27830505 409.51672363]
[109.49584198 394.62301636]
[107.60254669 379.74298096]
[105.59853363 364.87744141]
[103.59452057 350.01190186]
[101.59050751 335.14639282]
[91.65844727 346.38711548]
[76.69615936 347.45010376]
[65.27471924 337.72637939]
[63.93684006 322.78616333]
[73.44892883 311.18786621]
[88.36202240 309.57556152]
[100.13275909 318.87197876]
[99.46297455 303.88693237]
[98.79319000 288.90188599]
[98.12340546 273.91683960]
[97.45362091 258.93182373]
[96.78383636 243.94677734]
[96.11405182 228.96173096]
[95.44426727 213.97669983]
[82.71683502 210.26103210]
[71.73479462 202.79156494]
[63.57476425 192.28359985]
[59.04192352 179.75108337]
[58.59059525 166.40888977]
[62.27872849 153.55491638]
[69.76091003 142.44395447]
[80.32063293 134.16511536]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[84.86257172 105.93611145]
[84.77587128 94.28992462]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[84.76270294 56.77314758]
[92.50000000 44.04587555]
[92.50000000 29.04587746]
[92.50000000 14.04587746]
[92.50000000 -0.95412302]
[92.50000000 -15.95412254]
[92.50000000 -30.95412254]
[92.50000000 -45.95412445]
[90.19642639 -49.63481903]
[89.27645111 -53.47124481]
[89.61914062 -57.00931931]
[90.96849060 -59.88088226]
[92.97319794 -61.84029007]
[93.86601257 -76.81369781]
[83.82551575 -85.79161072]
[80.83270264 -98.72426605]
[85.76188660 -110.83975983]
[96.60595703 -117.79933167]
[97.72160339 -132.75778198]
[98.83725739 -147.71623230]
[87.52861786 -137.86155701]
[72.53411102 -137.45574951]
[60.70901489 -146.68434143]
[57.45960236 -161.32817078]
[64.27146912 -174.69224548]
[78.03031158 -180.66670227]
[92.44577789 -176.52009583]
[100.92778015 -164.14642334]
[103.59358215 -178.90763855]
[106.25937653 -193.66885376]
[108.92517090 -208.43006897]
[111.59096527 -223.19128418]
[114.25675964 -237.95251465]
[116.92255402 -252.71372986]
[119.58834839 -267.47494507]
[120.92658997 -282.41513062]
[120.92658997 -297.41513062]
[120.92658997 -312.41513062]
[120.92658997 -327.41513062]
[120.92658997 -342.41513062]
[107.58545685 -350.02499390]
[99.85048676 -363.29397583]
[99.80234528 -378.65277100]
[107.45397949 -391.97000122]
[120.74713898 -399.66333008]
[136.10603333 -399.66333008]
[149.39918518 -391.97000122]
[157.05082703 -378.65277100]
[157.00268555 -363.29397583]
[149.26771545 -350.02499390]
[135.92658997 -342.41513062]
[135.92658997 -327.41513062]
[135.92658997 -312.41513062]
[135.92658997 -297.41513062]
[135.92658997 -282.41513062]
[144.05564880 -295.02139282]
[156.80393982 -302.92590332]
[171.70996094 -304.60238647]
[185.89559937 -299.72714233]
[196.62181091 -289.24151611]
[201.81755066 -275.17013550]
[200.47959900 -260.22991943]
[192.86628723 -247.30561829]
[180.44763184 -238.89270020]
[165.62147522 -236.61558533]
[151.25053406 -240.91394043]
[140.10958862 -250.95780945]
[134.34956360 -264.80914307]
[131.68377686 -250.04792786]
[129.01797485 -235.28671265]
[126.35218048 -220.52549744]
[123.68638611 -205.76428223]
[121.02059174 -191.00306702]
[118.35479736 -176.24183655]
[115.68900299 -161.48062134]
[113.79570770 -146.60058594]
[112.68006134 -131.64213562]
[111.56441498 -116.68368530]
[123.07347107 -104.42071533]
[122.13388824 -87.29085541]
[108.83942413 -75.92087555]
[107.94660950 -60.94747162]
[107.50000000 -45.95412445]
[107.50000000 -30.95412254]
[107.50000000 -15.95412254]
[107.50000000 -0.95412302]
[107.50000000 14.04587746]
[107.50000000 29.04587746]
[107.50000000 44.04587555]
[115.23729706 56.77314758]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[116.25928497 99.87895203]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[123.71260071 135.29435730]
[135.95329285 146.85194397]
[142.80093384 162.19094849]
[143.23085022 178.94676208]
[137.20532227 194.54814148]
[125.67505646 206.61192322]
[110.42930603 213.30691528]
[111.09909058 228.29194641]
[111.76887512 243.27699280]
[112.43865967 258.26202393]
[113.10844421 273.24707031]
[113.77822876 288.23211670]
[114.44801331 303.21713257]
[115.11779785 318.20217896]
[116.45603180 333.14236450]
[118.46004486 348.00790405]
[120.46405792 362.87341309]
[122.46807098 377.73895264]
[126.71594238 385.82556152]
[124.38955688 392.84054565]
[126.17201996 407.73425293]
[127.95449066 422.62796021]
[129.73695374 437.52169800]
[131.51942444 452.41540527]
[133.30187988 467.30911255]
[135.74761963 482.10839844]
[146.11244202 489.78518677]
[148.39573669 502.07217407]
[141.90969849 512.28283691]
[144.79496765 527.00274658]
[147.68025208 541.72265625]
[150.56552124 556.44250488]
[153.45079041 571.16241455]
[168.49394226 571.02685547]
[183.30581665 573.65802002]
[197.38194275 578.96624756]
[210.24287415 586.77075195]
[221.45059204 596.80578613]
[230.62336731 608.72949219]
[237.44874573 622.13580322]
[241.69430542 636.56805420]
[243.21540833 651.53472900]
[241.96025085 666.52606201]
[237.97158813 681.03137207]
[231.38528442 694.55676270]
[222.42565918 706.64141846]
[211.39785767 716.87384033]
[198.67750549 724.90545654]
[184.69784546 730.46276855]
[169.93501282 733.35644531]
[154.89183044 733.48797607]
[140.08065796 730.85284424]
[126.00596619 725.54083252]
[113.14713287 717.73278809]
[101.94211578 707.69476318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[16 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 173]
[30 172]
[31 171]
[32 170]
[39 169]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[55 155]
[56 154]
[59 152]
[60 151]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[67 144]
[68 143]
[73 142]
[74 141]
[78 138]
[79 137]
[80 136]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
