%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[94.85529327 735.81988525]
[80.52850342 731.31884766]
[66.82113647 725.18493652]
[53.91857910 717.50115967]
[41.99531555 708.37139893]
[31.21259880 697.91912842]
[21.71625137 686.28576660]
[13.63470268 673.62854004]
[7.07724428 660.11871338]
[2.13255882 645.93890381]
[-1.13248253 631.28094482]
[-2.67372346 616.34301758]
[-2.47032094 601.32720947]
[-0.52502531 586.43652344]
[3.13585520 571.87237549]
[8.46281147 557.83172607]
[15.38380337 544.50439453]
[23.80523109 532.07073975]
[33.61320496 520.69885254]
[44.67508316 510.54251099]
[56.84126663 501.73907471]
[69.94721985 494.40759277]
[83.81570435 488.64724731]
[98.25915527 484.53588867]
[113.08226013 482.12918091]
[112.41246796 467.14413452]
[111.74268341 452.15908813]
[111.07289886 437.17407227]
[110.40311432 422.18902588]
[109.73332977 407.20397949]
[109.06354523 392.21893311]
[108.39376068 377.23391724]
[100.09587860 364.86480713]
[107.20925140 350.73291016]
[96.98159027 336.47241211]
[105.60308075 320.20123291]
[104.71026611 305.22784424]
[94.27142334 291.12118530]
[102.64971161 274.72344971]
[101.53405762 259.76498413]
[100.41841125 244.80653381]
[99.30276489 229.84808350]
[97.96453094 214.90789795]
[96.40400696 199.98928833]
[94.84348297 185.07069397]
[93.28295898 170.15208435]
[83.90571594 181.85966492]
[69.22202301 184.92382812]
[55.94506454 177.94369507]
[50.14488602 164.11047363]
[54.47325134 149.74853516]
[66.95129395 141.42396545]
[81.87421417 142.94264221]
[92.42024231 153.61192322]
[92.42024231 138.61192322]
[92.42024231 123.61192322]
[92.42024231 108.61192322]
[83.57088470 120.72344971]
[69.89161682 126.87792206]
[54.95816040 125.46659088]
[42.67408752 116.85836792]
[36.25041962 103.30342865]
[37.36629486 88.34498596]
[45.73002625 75.89315796]
[59.15534592 69.20281219]
[74.13291931 70.02279663]
[86.74763489 78.13876343]
[93.70184326 91.42835236]
[95.92696381 76.59431458]
[90.32240295 61.79906082]
[99.86207581 50.36035919]
[102.08718872 35.52631760]
[104.31230927 20.69227219]
[106.53742981 5.85822821]
[99.40195465 -11.11724091]
[110.86109161 -24.40841103]
[112.86510468 -39.27393723]
[114.42562866 -54.19254303]
[115.54127502 -69.15099335]
[116.65692139 -84.10945129]
[114.17445374 -92.90007782]
[117.90216827 -99.28176880]
[105.72714233 -90.51999664]
[90.90102386 -92.79732513]
[81.91689301 -104.80921173]
[83.92125702 -119.67469025]
[95.76593781 -128.87814331]
[110.66575623 -127.14742279]
[120.08515167 -115.47486115]
[122.75094604 -130.23606873]
[125.41674042 -144.99729919]
[128.08253479 -159.75851440]
[130.74833679 -174.51972961]
[133.41412354 -189.28094482]
[119.30238342 -194.47996521]
[106.30792236 -202.05064392]
[94.82563019 -211.76290894]
[85.20444489 -223.32162476]
[77.73674774 -236.37553406]
[72.64945984 -250.52793884]
[70.09719086 -265.34878540]
[70.15749359 -280.38763428]
[72.82854462 -295.18753052]
[78.02915955 -309.29867554]
[85.60131073 -322.29226685]
[95.31488037 -333.77346802]
[106.87468719 -343.39334106]
[119.92944336 -350.85955811]
[134.08242798 -355.94525146]
[148.90354919 -358.49581909]
[163.94241333 -358.43380737]
[178.74198914 -355.76110840]
[192.85255432 -350.55886841]
[205.84529114 -342.98526001]
[217.32537842 -333.27038574]
[226.94393921 -321.70947266]
[234.40869141 -308.65386963]
[239.49276733 -294.50033569]
[242.04167175 -279.67892456]
[241.97795105 -264.64004517]
[239.30355835 -249.84077454]
[234.09973145 -235.73080444]
[226.52464294 -222.73892212]
[216.80847168 -211.25993347]
[205.24647522 -201.64268494]
[192.19001770 -194.17942810]
[178.03588867 -189.09695435]
[163.21418762 -186.54972839]
[148.17533875 -186.61514282]
[145.50955200 -171.85392761]
[142.84375000 -157.09271240]
[140.17796326 -142.33149719]
[137.51216125 -127.57028198]
[134.84635925 -112.80906677]
[132.84234619 -97.94353485]
[131.61537170 -82.99380493]
[130.49972534 -68.03534698]
[129.38407898 -53.07689285]
[131.10903931 -50.86722183]
[132.06265259 -47.84112930]
[131.92958069 -44.28899002]
[130.50529480 -40.60986710]
[127.73062897 -37.26992416]
[125.72661591 -22.40439606]
[132.80889893 -12.59788132]
[131.26098633 -0.19676310]
[121.37146759 8.08334541]
[119.14635468 22.91738892]
[116.92123413 37.75143433]
[114.69612122 52.58547592]
[120.45983887 66.31969452]
[110.76100922 78.81942749]
[108.53588867 93.65347290]
[107.42024231 108.61192322]
[107.42024231 123.61192322]
[107.42024231 138.61192322]
[107.42024231 153.61192322]
[108.20156097 168.59156799]
[109.76208496 183.51016235]
[111.32260895 198.42877197]
[112.88313293 213.34738159]
[116.45111847 218.91343689]
[116.64363861 224.59321594]
[114.26121521 228.73243713]
[115.37686157 243.69088745]
[116.49251556 258.64935303]
[117.60816193 273.60778809]
[126.85444641 282.60052490]
[127.47572327 295.08242798]
[119.68367004 304.33502197]
[120.57648468 319.30841064]
[129.68785095 328.43780518]
[130.12322998 340.92758179]
[122.19429016 350.06314087]
[130.54008484 363.50405884]
[123.37879944 376.56411743]
[124.04858398 391.54916382]
[124.71836853 406.53421021]
[125.38815308 421.51922607]
[126.05793762 436.50427246]
[126.72772217 451.48931885]
[127.39750671 466.47436523]
[128.06729126 481.45938110]
[143.04600525 482.53405762]
[157.79866028 485.34042358]
[172.12574768 489.84051514]
[185.83352661 495.97351074]
[198.73660278 503.65643311]
[210.66046143 512.78540039]
[221.44387817 523.23693848]
[230.94100952 534.86968994]
[239.02340698 547.52636719]
[245.58175659 561.03576660]
[250.52738953 575.21520996]
[253.79341125 589.87298584]
[255.33564758 604.81079102]
[255.13325500 619.82666016]
[253.18894958 634.71746826]
[249.52903748 649.28186035]
[244.20301819 663.32287598]
[237.28291321 676.65057373]
[228.86231995 689.08483887]
[219.05509949 700.45739746]
[207.99391174 710.61444092]
[195.82830811 719.41870117]
[182.72283936 726.75103760]
[168.85475159 732.51232910]
[154.41156006 736.62463379]
[139.58862305 739.03234863]
[124.58639526 739.70288086]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[34 174]
[36 171]
[37 170]
[39 167]
[40 166]
[41 165]
[42 164]
[43 161]
[44 160]
[45 159]
[46 158]
[54 157]
[55 156]
[56 155]
[57 154]
[68 153]
[69 152]
[71 150]
[72 149]
[73 148]
[74 147]
[76 144]
[77 143]
[78 138]
[79 137]
[80 136]
[82 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
