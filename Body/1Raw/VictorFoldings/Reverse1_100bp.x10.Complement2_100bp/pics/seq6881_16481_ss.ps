%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[69.39147186 685.13940430]
[54.61382675 687.76519775]
[39.66673279 689.12835693]
[24.65788078 689.21899414]
[9.69541454 688.03643799]
[-5.11285973 685.58923340]
[-19.66024590 681.89495850]
[-33.84192657 676.98034668]
[-47.55572510 670.88067627]
[-60.70282745 663.64001465]
[-73.18850708 655.31042480]
[-84.92280579 645.95202637]
[-95.82117462 635.63214111]
[-105.80509186 624.42523193]
[-114.80261230 612.41198730]
[-122.74892426 599.67895508]
[-129.58676147 586.31787109]
[-135.26684570 572.42504883]
[-139.74827576 558.10058594]
[-142.99874878 543.44763184]
[-144.99485779 528.57183838]
[-145.72219849 513.58038330]
[-145.17553711 498.58120728]
[-143.35882568 483.68243408]
[-140.28512573 468.99139404]
[-135.97662354 454.61398315]
[-130.46434021 440.65371704]
[-123.78797913 427.21124268]
[-115.99567413 414.38339233]
[-107.14354706 402.26260376]
[-97.29538727 390.93618774]
[-86.52215576 380.48577881]
[-74.90146637 370.98663330]
[-62.51705170 362.50723267]
[-49.45814514 355.10867310]
[-35.81883621 348.84423828]
[-21.69740105 343.75909424]
[-7.19558191 339.88983154]
[7.58213091 337.26437378]
[22.52926254 335.90161133]
[37.53811646 335.81137085]
[52.50055313 336.99432373]
[54.94627762 322.19506836]
[57.39200592 307.39578247]
[59.83773422 292.59652710]
[54.27913666 278.77801514]
[64.16299438 266.42407227]
[66.60871887 251.62478638]
[69.05445099 236.82551575]
[67.04361725 229.71366882]
[71.64833832 221.82479858]
[66.29608917 207.92506409]
[76.36278534 195.71963501]
[69.54761505 179.54804993]
[81.55878448 165.59049988]
[84.00451660 150.79122925]
[86.45024109 135.99195862]
[88.89597321 121.19268799]
[91.34169769 106.39341736]
[90.44888306 91.42001343]
[86.26187134 77.01622772]
[82.07485962 62.61244965]
[77.88784790 48.20866776]
[74.64842987 45.31727600]
[72.69414520 41.89013290]
[72.03561401 38.39703751]
[72.52977753 35.26296234]
[73.90786743 32.82185364]
[70.58560944 18.19439507]
[67.26335144 3.56693482]
[63.05922318 -1.53569663]
[62.19313431 -7.15236092]
[64.06681061 -11.54535484]
[61.18153763 -26.26524544]
[58.29626465 -40.98513794]
[55.41099167 -55.70502853]
[52.52571869 -70.42491913]
[49.53094482 -85.12292480]
[46.42683411 -99.79822540]
[36.00120163 -111.69850922]
[40.93722534 -125.75144196]
[37.83311844 -140.42674255]
[34.72900772 -155.10205078]
[31.62489700 -169.77734375]
[16.56855011 -169.78677368]
[1.84325922 -172.92675781]
[-11.90724659 -179.06004333]
[-24.08185577 -187.91851807]
[-34.14834595 -199.11492920]
[-41.66665268 -212.15980530]
[-46.30811310 -226.48287964]
[-47.86981583 -241.45802307]
[-46.28349304 -256.43057251]
[-41.61848831 -270.74600220]
[-34.07874298 -283.77847290]
[-23.99385452 -294.95831299]
[-11.80469704 -303.79678345]
[1.95587492 -309.90744019]
[16.68630791 -313.02322388]
[31.74265099 -313.00787354]
[46.46670532 -309.86209106]
[60.21479416 -303.72338867]
[72.38591766 -294.86013794]
[82.44800568 -283.65975952]
[89.96118164 -270.61193848]
[94.59700012 -256.28704834]
[96.15281677 -241.31127930]
[94.56060028 -226.33935547]
[89.88996887 -212.02577209]
[82.34509277 -198.99624634]
[72.25580597 -187.82037354]
[60.06317520 -178.98672485]
[46.30019760 -172.88145447]
[49.40430832 -158.20616150]
[52.50841904 -143.53085327]
[55.61252975 -128.85556030]
[65.81613159 -118.00494385]
[61.10213852 -102.90233612]
[64.20624542 -88.22703552]
[68.66588593 -82.33352661]
[67.24561310 -73.31019592]
[70.13088226 -58.59030151]
[73.01615906 -43.87041092]
[75.90142822 -29.15051842]
[78.78669739 -14.43062687]
[81.89080811 0.24467538]
[85.21307373 14.87213516]
[88.53533173 29.49959564]
[92.29163361 44.02165604]
[96.47864532 58.42543793]
[100.66564941 72.82921600]
[104.85266113 87.23300171]
[107.49722290 72.46796417]
[112.93384552 58.48786926]
[120.95928955 45.81536865]
[131.27351379 34.92423630]
[143.49092102 26.22164726]
[157.15473938 20.03295135]
[171.75415039 16.58951569]
[186.74334717 16.02007866]
[201.56192017 18.34592819]
[215.65589905 23.48011208]
[228.49835205 31.23068237]
[239.60916138 41.30788040]
[248.57295227 53.33496094]
[255.05458069 66.86228180]
[258.81173706 81.38411713]
[259.70394897 96.35755920]
[257.69790649 111.22281647]
[252.86854553 125.42412567]
[245.39645386 138.43057251]
[235.56095886 149.75590515]
[223.72978210 158.97671509]
[210.34523010 165.74827576]
[195.90771484 169.81741333]
[180.95697021 171.03201294]
[166.05194092 169.34666443]
[151.74989319 164.82438660]
[138.58547974 157.63423157]
[127.05088043 148.04501343]
[117.57733154 136.41522217]
[110.51899719 123.17967224]
[106.14096832 108.83914185]
[103.69524384 123.63842010]
[101.24951172 138.43768311]
[98.80378723 153.23695374]
[96.35806274 168.03622437]
[103.22112274 178.95690918]
[100.87940216 191.23289490]
[91.12400055 198.38543701]
[96.28556824 213.34100342]
[86.40955353 224.49060059]
[83.85372162 239.27124023]
[81.40798950 254.07051086]
[78.96226501 268.86978149]
[84.34592438 283.74685669]
[74.63700867 295.04223633]
[72.19127655 309.84152222]
[69.74555206 324.64077759]
[67.29981995 339.44006348]
[81.84730530 343.13391113]
[96.02911377 348.04818726]
[109.74306488 354.14749146]
[122.89035797 361.38781738]
[135.37625122 369.71707153]
[147.11079407 379.07519531]
[158.00942993 389.39477539]
[167.99363708 400.60144043]
[176.99147034 412.61447144]
[184.93811035 425.34729004]
[191.77629089 438.70816040]
[197.45674133 452.60083008]
[201.93853760 466.92520142]
[205.18939209 481.57803345]
[207.18586731 496.45379639]
[207.91360474 511.44525146]
[207.36732483 526.44445801]
[205.55099487 541.34326172]
[202.47769165 556.03436279]
[198.16955566 570.41192627]
[192.65762329 584.37231445]
[185.98161316 597.81494141]
[178.18963623 610.64300537]
[169.33782959 622.76403809]
[159.48995972 634.09069824]
[148.71699524 644.54138184]
[137.09655762 654.04083252]
[124.71235657 662.52056885]
[111.65364075 669.91943359]
[98.01449585 676.18420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 180]
[43 179]
[44 178]
[45 177]
[47 175]
[48 174]
[49 173]
[51 172]
[53 170]
[55 167]
[56 166]
[57 165]
[58 164]
[59 163]
[60 132]
[61 131]
[62 130]
[63 129]
[68 128]
[69 127]
[70 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 119]
[79 118]
[81 116]
[82 115]
[83 114]
[84 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
