%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[150.41519165 451.61785889]
[145.17974854 437.55380249]
[140.99728394 423.14151001]
[137.89062500 408.45968628]
[135.87673950 393.58853149]
[134.96664429 378.60925293]
[135.16529846 363.60363770]
[136.47160339 348.65371704]
[138.87844849 333.84106445]
[142.37268066 319.24664307]
[146.93521118 304.95010376]
[152.54112244 291.02957153]
[159.15979004 277.56109619]
[166.75506592 264.61816406]
[175.28549194 252.27154541]
[184.70443726 240.58863831]
[194.96047974 229.63323975]
[184.79693604 218.60136414]
[174.63339233 207.56948853]
[164.46984863 196.53759766]
[162.77523804 211.44157410]
[151.12463379 220.88951111]
[136.19203186 219.46920776]
[126.53150177 207.99427795]
[127.67702484 193.03807068]
[138.97241211 183.16821289]
[153.94627380 184.03816223]
[144.80747986 172.14352417]
[135.66867065 160.24890137]
[129.10076904 156.86001587]
[126.48393250 148.10844421]
[117.52323151 136.07907104]
[108.56253815 124.04969788]
[99.60184479 112.02031708]
[90.46304321 100.12568665]
[81.14815521 88.36843109]
[71.83327484 76.61118317]
[74.29617310 91.40760803]
[71.61792755 106.16657257]
[64.11317444 119.15420532]
[52.66356277 128.84474182]
[38.61418152 134.09973145]
[23.61554527 134.30183411]
[9.42967129 129.42732239]
[-2.27689600 120.04881287]
[-10.12888050 107.26811218]
[-13.20383835 92.58667755]
[-11.14052868 77.72926331]
[-4.18134451 64.44130707]
[6.85615444 54.28386307]
[20.67529488 48.45022202]
[35.65261841 47.62571335]
[50.02859879 51.90719604]
[62.11545563 60.79281998]
[55.83809280 47.16950226]
[49.56073380 33.54618454]
[43.12720108 27.06178474]
[43.29301453 19.67298889]
[37.21918106 5.95772219]
[31.14534569 -7.75754452]
[25.07151222 -21.47281075]
[18.99767876 -35.18807983]
[4.70962858 -30.57620811]
[-9.98222637 -27.48313332]
[-24.91691399 -25.94274330]
[-39.93080139 -25.97191811]
[-54.85939407 -27.57033348]
[-69.53911591 -30.72047997]
[-83.80913544 -35.38784409]
[-97.51309967 -41.52128220]
[-110.50086212 -49.05359650]
[-122.63011932 -57.90225983]
[-133.76797485 -67.97031403]
[-143.79240417 -79.14746094]
[-152.59356689 -91.31122589]
[-160.07504272 -104.32834625]
[-166.15484619 -118.05619049]
[-170.76635742 -132.34434509]
[-173.85908508 -147.03628540]
[-175.39910889 -161.97100830]
[-175.36956787 -176.98489380]
[-173.77078247 -191.91345215]
[-170.62028503 -206.59309387]
[-165.95257568 -220.86300659]
[-159.81880188 -234.56681824]
[-152.28617859 -247.55439758]
[-143.43722534 -259.68344116]
[-133.36888123 -270.82104492]
[-122.19149780 -280.84521484]
[-110.02751923 -289.64608765]
[-97.01022339 -297.12722778]
[-83.28222656 -303.20669556]
[-68.99395752 -307.81787109]
[-54.30194855 -310.91024780]
[-39.36718750 -312.44989014]
[-24.35330009 -312.41998291]
[-9.42478848 -310.82086182]
[5.25478268 -307.66998291]
[19.52457428 -303.00192261]
[33.22824097 -296.86782837]
[46.21563721 -289.33489990]
[58.34446335 -280.48562622]
[69.48183441 -270.41702271]
[79.50572205 -259.23941040]
[88.30628967 -247.07521057]
[95.78712463 -234.05772400]
[101.86626434 -220.32958984]
[106.47708893 -206.04119873]
[109.56909943 -191.34912109]
[111.10839844 -176.41432190]
[111.07813263 -161.40043640]
[109.47862244 -146.47196960]
[106.32740784 -131.79246521]
[101.65900421 -117.52278900]
[95.52456665 -103.81927490]
[87.99131012 -90.83206177]
[79.14176178 -78.70344543]
[69.07289124 -67.56632233]
[57.89501572 -57.54270935]
[45.73060608 -48.74243164]
[32.71294403 -41.26191330]
[38.78677750 -27.54664612]
[44.86061478 -13.83137894]
[50.93444824 -0.11611179]
[57.00828171 13.59915447]
[63.18404770 27.26882553]
[69.46141052 40.89213943]
[75.73876953 54.51545715]
[83.59052277 67.29630280]
[92.90541077 79.05355072]
[102.22029114 90.81080627]
[107.15878296 92.57864380]
[110.75524139 96.98758698]
[111.63121796 103.05962372]
[120.59191895 115.08899689]
[129.55261230 127.11837769]
[138.51330566 139.14775085]
[147.56330872 151.11009216]
[156.70211792 163.00473022]
[165.84091187 174.89935303]
[175.50172424 186.37405396]
[185.66526794 197.40592957]
[195.82881165 208.43780518]
[205.99237061 219.46969604]
[217.74996948 210.14414978]
[230.16419983 201.71240234]
[243.16722107 194.22050476]
[256.68804932 187.70938110]
[270.65280151 182.21458435]
[284.98522949 177.76614380]
[299.60705566 174.38833618]
[314.43841553 172.09962463]
[329.39828491 170.91249084]
[344.40496826 170.83343506]
[359.37652588 171.86288452]
[374.23117065 173.99522400]
[388.88778687 177.21878052]
[403.26626587 181.51597595]
[417.28814697 186.86334229]
[430.87683105 193.23164368]
[443.95806885 200.58612061]
[456.46041870 208.88661194]
[468.31564331 218.08776855]
[479.45892334 228.13932800]
[489.82946777 238.98641968]
[499.37060547 250.56977844]
[508.03021240 262.82614136]
[515.76098633 275.68856812]
[522.52075195 289.08682251]
[528.27252197 302.94769287]
[532.98492432 317.19552612]
[536.63226318 331.75247192]
[539.19451904 346.53900146]
[540.65777588 361.47439575]
[541.01397705 376.47708130]
[540.26123047 391.46508789]
[538.40362549 406.35659790]
[535.45135498 421.07022095]
[531.42047119 435.52566528]
[526.33300781 449.64389038]
[520.21679688 463.34786987]
[513.10516357 476.56271362]
[505.03701782 489.21627808]
[496.05639648 501.23941040]
[486.21237183 512.56646729]
[475.55868530 523.13555908]
[464.15353394 532.88903809]
[452.05920410 541.77355957]
[439.34176636 549.74060059]
[426.07064819 556.74664307]
[412.31835938 562.75347900]
[398.16003418 567.72827148]
[383.67294312 571.64379883]
[368.93624878 574.47875977]
[354.03042603 576.21759033]
[339.03686523 576.85089111]
[324.03750610 576.37512207]
[309.11425781 574.79290771]
[294.34860229 572.11285400]
[279.82119751 568.34967041]
[265.61138916 563.52386475]
[251.79676819 557.66174316]
[238.45281982 550.79547119]
[225.65240479 542.96240234]
[213.46543884 534.20538330]
[201.95849609 524.57226562]
[191.19439697 514.11560059]
[181.23196411 502.89254761]
[172.12557983 490.96438599]
[163.92500305 478.39627075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 144]
[18 143]
[19 142]
[20 141]
[27 140]
[28 139]
[29 138]
[31 137]
[32 136]
[33 135]
[34 134]
[35 131]
[36 130]
[37 129]
[54 128]
[55 127]
[56 126]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
