%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[131.32205200 444.68960571]
[131.64958191 429.67462158]
[133.78462219 414.80859375]
[137.69602966 400.30828857]
[143.32678223 386.38522339]
[150.59477234 373.24240112]
[159.39398193 361.07147217]
[169.59611511 350.04995728]
[181.05238342 340.33856201]
[193.59573364 332.07891846]
[186.91552734 318.64852905]
[180.23533630 305.21817017]
[173.55514526 291.78778076]
[160.95944214 283.83810425]
[161.74124146 268.03622437]
[149.14553833 260.08651733]
[149.92733765 244.28465271]
[143.24714661 230.85427856]
[129.08900452 226.37294006]
[122.12300873 212.84779358]
[126.91944885 198.02780151]
[120.23925018 184.59742737]
[113.55905914 171.16705322]
[112.22013855 186.10717773]
[104.99156952 199.25053406]
[93.09148407 208.38223267]
[78.52525330 211.96342468]
[63.74754333 209.39060974]
[51.24866104 201.09735107]
[43.13488770 188.48123169]
[40.77353668 173.66825867]
[44.56253433 159.15469360]
[53.86336899 147.38633728]
[67.10868835 140.34634399]
[82.06642151 139.22108459]
[96.21592712 144.20018005]
[107.17372131 154.44593811]
[103.20162964 139.98139954]
[99.22953033 125.51688385]
[95.25743103 111.05236053]
[91.07041931 96.64857483]
[86.66942596 82.30873108]
[82.26842499 67.96887970]
[77.86743164 53.62903595]
[73.46643066 39.28918839]
[69.70946503 53.81107712]
[60.43462372 65.59993744]
[47.20487213 72.66914368]
[32.24966049 73.82740784]
[18.08919907 68.87954712]
[7.10977936 58.65935135]
[1.16162467 44.88911438]
[1.24710369 29.88935852]
[7.35181189 16.18780518]
[18.44699860 6.09340906]
[32.66292953 1.30725229]
[47.60396957 2.63588619]
[60.75229645 9.85541248]
[69.89289856 21.75070953]
[68.33237457 6.83210468]
[66.77185059 -8.08650017]
[65.21132660 -23.00510406]
[63.65080643 -37.92370987]
[62.09028244 -52.84231567]
[60.52975845 -67.76091766]
[58.96923828 -82.67952728]
[56.08396530 -97.39941406]
[44.80210876 -108.49131775]
[48.67924881 -122.87245178]
[44.38512802 -137.24465942]
[39.98413086 -151.58450317]
[35.58312988 -165.92436218]
[32.30102539 -168.76719666]
[30.29593086 -172.16485596]
[29.58546257 -175.64776611]
[30.03291321 -178.78884888]
[31.37450600 -181.25021362]
[27.83483315 -195.82658386]
[24.29516220 -210.40295410]
[20.75548935 -224.97933960]
[17.21581650 -239.55570984]
[13.67614460 -254.13208008]
[-1.35993016 -253.49749756]
[-16.23084450 -255.80880737]
[-30.36500168 -260.97714233]
[-43.21912003 -268.80389404]
[-54.29912567 -278.98818970]
[-63.17912674 -291.13858032]
[-69.51780701 -304.78802490]
[-73.07151794 -319.41186523]
[-73.70366669 -334.44805908]
[-71.38995361 -349.31860352]
[-66.21931458 -363.45190430]
[-58.39049530 -376.30477905]
[-48.20441055 -387.38311768]
[-36.05259323 -396.26116943]
[-22.40212059 -402.59762573]
[-7.77768230 -406.14895630]
[7.25859642 -406.77868652]
[22.12876320 -404.46255493]
[36.26124573 -399.28964233]
[49.11283112 -391.45874023]
[60.18953705 -381.27087402]
[69.06560516 -369.11761475]
[75.39986420 -355.46612549]
[78.94883728 -340.84109497]
[79.57611847 -325.80471802]
[77.25759888 -310.93493652]
[72.08238220 -296.80328369]
[64.24940491 -283.95297241]
[54.05973434 -272.87789917]
[41.90504456 -264.00381470]
[28.25251961 -257.67175293]
[31.79219246 -243.09538269]
[35.33186340 -228.51901245]
[38.87153625 -213.94262695]
[42.41120911 -199.36625671]
[45.95088196 -184.78988647]
[49.92297745 -170.32536316]
[54.32397461 -155.98550415]
[58.72497559 -141.64566040]
[63.69262314 -136.17352295]
[63.08303452 -127.05946350]
[74.06540680 -116.99781799]
[70.48774719 -101.58642578]
[74.77485657 -115.96073151]
[84.81002045 -127.10952759]
[98.65559387 -132.88014221]
[113.63821411 -132.15838623]
[126.86498260 -125.08359528]
[135.78201294 -113.02180481]
[138.66755676 -98.30197144]
[134.96447754 -83.76625061]
[125.38776398 -72.22126770]
[111.78654480 -65.89617920]
[96.78698730 -66.01225281]
[83.28528595 -72.54708862]
[73.88784027 -84.24004364]
[75.44836426 -69.32144165]
[77.00888824 -54.40283585]
[78.56941223 -39.48423386]
[80.12993622 -24.56562805]
[81.69046021 -9.64702320]
[83.25097656 5.27158165]
[84.81150055 20.19018555]
[87.80627441 34.88819122]
[92.20727539 49.22803879]
[96.60827637 63.56788635]
[101.00926971 77.90773010]
[105.41027069 92.24758148]
[109.36762238 95.69043732]
[111.11431122 101.10546112]
[109.72195435 107.08026123]
[113.69405365 121.54478455]
[117.66615295 136.00930786]
[121.63824463 150.47383118]
[126.98943329 164.48686218]
[133.66963196 177.91723633]
[140.34982300 191.34761047]
[155.06245422 196.46389771]
[161.64579773 210.17936707]
[156.67752075 224.17408752]
[163.35772705 237.60446167]
[176.43122864 246.51478577]
[175.17161560 261.35601807]
[188.24513245 270.26635742]
[186.98551941 285.10760498]
[193.66571045 298.53796387]
[200.34590149 311.96835327]
[207.02610779 325.39871216]
[221.18090820 320.37887573]
[235.83758545 317.10183716]
[250.78240967 315.61538696]
[265.79745483 315.94122314]
[280.66372681 318.07458496]
[295.16442871 321.98437500]
[309.08813477 327.61358643]
[322.23178101 334.88009644]
[334.40368652 343.67791748]
[345.42636108 353.87881470]
[355.13903809 365.33401489]
[363.40008545 377.87643433]
[370.08905029 391.32318115]
[375.10839844 405.47817993]
[378.38488770 420.13497925]
[379.87075806 435.07986450]
[379.54437256 450.09487915]
[377.41043091 464.96105957]
[373.50009155 479.46163940]
[367.87039185 493.38513184]
[360.60339355 506.52850342]
[351.80508423 518.70007324]
[341.60379028 529.72235107]
[330.14822388 539.43463135]
[317.60549927 547.69519043]
[304.15850830 554.38366699]
[290.00332642 559.40246582]
[275.34640503 562.67840576]
[260.40145874 564.16375732]
[245.38645935 563.83679199]
[230.52033997 561.70227051]
[216.01991272 557.79138184]
[202.09663391 552.16119385]
[188.95353699 544.89367676]
[176.78228760 536.09490967]
[165.76039124 525.89318848]
[156.04856873 514.43731689]
[147.78845215 501.89425659]
[141.10047913 488.44702148]
[136.08221436 474.29165649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 170]
[11 169]
[12 168]
[13 167]
[15 165]
[17 163]
[18 162]
[21 159]
[22 158]
[23 157]
[37 156]
[38 155]
[39 154]
[40 153]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 125]
[69 123]
[70 121]
[71 120]
[72 119]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
