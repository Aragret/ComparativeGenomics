%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[150.51788330 579.95336914]
[151.36265564 564.95111084]
[154.33396912 550.22180176]
[159.37130737 536.06530762]
[166.37213135 522.76989746]
[175.19390869 510.60610962]
[185.65702820 499.82168579]
[197.54849243 490.63616943]
[210.62619019 483.23654175]
[205.17083740 469.26373291]
[199.71548462 455.29092407]
[196.65043640 453.54800415]
[194.27729797 450.23388672]
[193.32537842 445.68997192]
[194.34385681 440.57043457]
[189.51786804 426.36798096]
[184.69186401 412.16552734]
[179.86587524 397.96307373]
[175.03987122 383.76062012]
[172.05570984 381.88256836]
[169.83293152 378.46578979]
[169.08483887 373.88391113]
[170.33091736 368.81494141]
[166.14390564 354.41116333]
[161.95689392 340.00738525]
[157.76988220 325.60360718]
[153.58287048 311.19979858]
[149.39585876 296.79602051]
[145.20884705 282.39224243]
[130.27456665 283.51608276]
[115.42720795 281.50936890]
[101.31609344 276.45739746]
[88.55883026 268.57870483]
[77.71434021 258.21560669]
[69.25831604 245.81930542]
[63.56238937 231.93029785]
[60.87778473 217.15475464]
[61.32423401 202.13810730]
[64.88465881 187.53678894]
[71.40579987 173.98962402]
[80.60478973 162.08981323]
[92.08146667 152.35900879]
[105.33575439 145.22439575]
[101.14874268 130.82061768]
[85.48954773 127.21537018]
[73.76917267 116.22261047]
[69.16905975 100.82627869]
[72.93790436 85.20565796]
[84.05266571 73.60090637]
[79.65166473 59.26105881]
[75.25067139 44.92121124]
[61.56912994 37.47451782]
[57.31016922 22.86918068]
[64.49376678 9.87181568]
[60.09276962 -4.46803141]
[48.64701843 -15.39073277]
[52.30961990 -29.82799721]
[47.90862274 -44.16784286]
[43.50762177 -58.50769043]
[29.73938370 -70.73541260]
[34.33292007 -87.67253876]
[29.71891022 -101.94527435]
[25.10490227 -116.21800232]
[20.49089241 -130.49073792]
[15.87688351 -144.76347351]
[4.26978016 -155.51455688]
[7.71702480 -170.00474548]
[3.10301566 -184.27748108]
[-1.51099360 -198.55021667]
[-16.24659729 -195.65222168]
[-31.22153091 -194.51744080]
[-46.22556686 -195.16178894]
[-61.04808044 -197.57624817]
[-75.48097229 -201.72688293]
[-89.32164764 -207.55545044]
[-102.37578583 -214.98013306]
[-114.46013641 -223.89668274]
[-125.40504456 -234.17993164]
[-135.05688477 -245.68551636]
[-143.28012085 -258.25192261]
[-149.95935059 -271.70272827]
[-155.00079346 -285.84912109]
[-158.33366394 -300.49249268]
[-159.91119385 -315.42727661]
[-159.71121216 -330.44381714]
[-157.73655701 -345.33129883]
[-154.01492310 -359.88070679]
[-148.59857178 -373.88784790]
[-141.56353760 -387.15603638]
[-133.00857544 -399.49899292]
[-123.05378723 -410.74349976]
[-111.83892822 -420.73162842]
[-99.52142334 -429.32324219]
[-86.27420044 -436.39764404]
[-72.28323364 -441.85559082]
[-57.74492645 -445.62045288]
[-42.86338043 -447.63931274]
[-27.84750366 -447.88391113]
[-12.90809917 -446.35076904]
[1.74510896 -443.06140137]
[15.90641117 -438.06201172]
[29.37700653 -431.42279053]
[41.96778870 -423.23690796]
[53.50199890 -413.61932373]
[63.81772232 -402.70498657]
[72.77013397 -390.64718628]
[80.23355865 -377.61517334]
[86.10322571 -363.79187012]
[90.29673767 -349.37136841]
[92.75521088 -334.55609131]
[93.44413757 -319.55404663]
[92.35385132 -304.57580566]
[89.49964905 -289.83166504]
[84.92161560 -275.52859497]
[78.68399811 -261.86737061]
[70.87438202 -249.03982544]
[61.60238647 -237.22599792]
[50.99818420 -226.59175110]
[39.21064377 -217.28636169]
[26.40523911 -209.44047546]
[12.76173973 -203.16423035]
[17.37574959 -188.89149475]
[21.98975754 -174.61875916]
[33.26683807 -164.88856506]
[30.14961624 -149.37748718]
[34.76362610 -135.10475159]
[39.37763596 -120.83201599]
[43.99164581 -106.55928040]
[48.60565186 -92.28654480]
[59.22918320 -86.50146484]
[63.18999863 -74.64837646]
[57.84746933 -62.90869141]
[62.24847031 -48.56884384]
[66.64946747 -34.22899628]
[77.78042603 -24.33197594]
[74.43261719 -8.86902905]
[78.83361053 5.47081804]
[92.07162476 12.20065022]
[96.73914337 26.68059921]
[89.59051514 40.52021408]
[93.99151611 54.86006165]
[98.39250946 69.19990540]
[111.78443909 71.49813080]
[122.88910675 79.32831573]
[129.55119324 91.17070770]
[130.47764587 104.72678375]
[125.48865509 117.36543274]
[115.55252838 126.63359833]
[119.73953247 141.03738403]
[134.75309753 139.95486450]
[149.65782166 142.01690674]
[163.80253601 147.13096619]
[176.56982422 155.07121277]
[187.40286255 165.48851013]
[195.82984924 177.92576599]
[201.48443604 191.83796692]
[204.12170410 206.61608887]
[203.62878418 221.61373901]
[200.02964783 236.17544556]
[193.48396301 249.66528320]
[184.28005981 261.49465942]
[172.82214355 271.14801025]
[159.61262512 278.20523071]
[163.79963684 292.60900879]
[167.98664856 307.01281738]
[172.17366028 321.41659546]
[176.36067200 335.82037354]
[180.54768372 350.22415161]
[184.73469543 364.62792969]
[189.24232483 378.93463135]
[194.06832886 393.13708496]
[198.89431763 407.33953857]
[203.72032166 421.54199219]
[208.54631042 435.74444580]
[213.68827820 449.83557129]
[219.14363098 463.80838013]
[224.59898376 477.78118896]
[239.23086548 474.36224365]
[254.20037842 473.06051636]
[269.20275879 473.90252686]
[283.93261719 476.87109375]
[298.09002686 481.90582275]
[311.38677979 488.90417480]
[323.55218506 497.72366333]
[334.33856201 508.18478394]
[343.52627563 520.07452393]
[350.92834473 533.15087891]
[356.39401245 547.14758301]
[359.81204224 561.77966309]
[361.11285400 576.74920654]
[360.26992798 591.75158691]
[357.30044556 606.48126221]
[352.26483154 620.63836670]
[345.26565552 633.93469238]
[336.44540405 646.09954834]
[325.98361206 656.88525391]
[314.09329224 666.07226562]
[301.01651001 673.47351074]
[287.01947021 678.93829346]
[272.38717651 682.35540771]
[257.41751099 683.65527344]
[242.41522217 682.81146240]
[227.68574524 679.84106445]
[213.52896118 674.80456543]
[200.23306274 667.80456543]
[188.06875610 658.98358154]
[177.28369141 648.52111816]
[168.09742737 636.63018799]
[160.69699097 623.55297852]
[155.23303223 609.55560303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 177]
[10 176]
[11 175]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[43 149]
[44 148]
[49 142]
[50 141]
[51 140]
[54 137]
[55 136]
[57 134]
[58 133]
[59 132]
[61 129]
[62 128]
[63 127]
[64 126]
[65 125]
[67 123]
[68 122]
[69 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
