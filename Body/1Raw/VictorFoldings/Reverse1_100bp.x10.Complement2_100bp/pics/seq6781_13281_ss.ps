%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[196.56562805 606.36730957]
[196.56562805 591.36730957]
[196.56562805 576.36730957]
[196.56562805 561.36730957]
[196.56562805 546.36730957]
[195.44998169 531.40887451]
[193.22486877 516.57482910]
[190.99975586 501.74078369]
[188.39685059 499.36227417]
[186.81669617 495.60485840]
[186.89480591 490.96298218]
[189.02189636 486.19613647]
[187.46138000 471.27755737]
[185.90084839 456.35894775]
[184.00755310 441.47891235]
[181.78244019 426.64486694]
[179.55732727 411.81082153]
[177.33221436 396.97677612]
[175.10708618 382.14273071]
[172.88197327 367.30868530]
[169.99670410 352.58880615]
[166.45703125 338.01242065]
[162.91735840 323.43603516]
[159.37768555 308.85968018]
[155.83801270 294.28329468]
[152.29833984 279.70690918]
[148.11132812 265.30313110]
[143.28532410 251.10067749]
[138.45933533 236.89822388]
[127.03863525 227.33700562]
[129.92457581 211.78123474]
[125.09857941 197.57878113]
[120.27257538 183.37632751]
[106.01570129 179.14790344]
[96.87433624 167.19384766]
[96.52066040 151.97122192]
[105.29982758 139.31292725]
[100.47383118 125.11047363]
[95.64783478 110.90802002]
[92.32490540 125.53533173]
[83.40517426 137.59510803]
[70.39176178 145.05508423]
[55.47766495 146.65811157]
[41.17616653 142.13404846]
[29.89732170 132.24528503]
[23.54181290 118.65824890]
[23.18065643 103.66259766]
[28.87471008 89.78536224]
[39.66443253 79.36508942]
[53.73155975 74.15779877]
[68.70553589 75.04099274]
[82.06298065 81.86584473]
[91.55369568 93.48371887]
[89.54968262 78.61818695]
[85.30181885 70.53157043]
[87.62820435 63.51660538]
[85.84574127 48.62288666]
[83.95244598 33.74285126]
[81.94843292 18.87732315]
[79.94441986 4.01179552]
[71.66637421 16.52075195]
[57.65753174 21.88286781]
[43.14283752 18.09820557]
[33.53591919 6.57835007]
[32.41991425 -8.38007641]
[40.21106720 -21.19795227]
[54.00347137 -27.09452438]
[68.65290070 -23.87051773]
[78.69596100 -12.72734356]
[78.47263336 -27.72568130]
[78.24930573 -42.72401810]
[78.02597809 -57.72235489]
[77.80265045 -72.72069550]
[67.99484253 -88.30557251]
[77.13352203 -103.28726959]
[76.68692017 -118.28062439]
[76.24031067 -133.27397156]
[75.79370880 -148.26731873]
[75.34709930 -163.26066589]
[62.70283890 -169.24276733]
[53.91151428 -180.03761292]
[50.64455795 -193.50257874]
[53.48412704 -206.99650574]
[61.82028198 -217.89775085]
[73.98091888 -224.11354065]
[73.75759125 -239.11187744]
[73.53426361 -254.11021423]
[65.59235382 -267.79367065]
[73.13930511 -280.63473511]
[72.91597748 -295.63305664]
[64.97407532 -309.31649780]
[72.52102661 -322.15756226]
[72.29769897 -337.15591431]
[64.35578918 -350.83935547]
[71.90274048 -363.68041992]
[71.67941284 -378.67874146]
[71.45608521 -393.67709351]
[71.23275757 -408.67541504]
[71.00942993 -423.67376709]
[57.32400131 -430.52703857]
[48.40045929 -442.96203613]
[46.28936386 -458.12124634]
[51.47583771 -472.52120972]
[62.76805878 -482.85293579]
[77.57116699 -486.74224854]
[92.48350525 -483.29541016]
[104.07833862 -473.30447388]
[109.69124603 -459.06530762]
[108.03244019 -443.84997559]
[99.48308563 -431.15481567]
[86.00776672 -423.89709473]
[86.23109436 -408.89874268]
[86.45442200 -393.90042114]
[86.67774963 -378.90206909]
[86.90107727 -363.90374756]
[94.82701111 -351.29306030]
[87.29603577 -337.37924194]
[87.51936340 -322.38088989]
[95.44529724 -309.77023315]
[87.91431427 -295.85638428]
[88.13764191 -280.85806274]
[96.06357574 -268.24737549]
[88.53260040 -254.33354187]
[88.75592804 -239.33520508]
[88.97925568 -224.33686829]
[103.28025055 -216.81398010]
[111.88555145 -203.02613831]
[112.36611938 -186.68643188]
[104.49613190 -172.25178528]
[90.34045410 -163.70727539]
[90.78705597 -148.71392822]
[91.23366547 -133.72058105]
[91.68026733 -118.72722626]
[92.12687683 -103.73387909]
[100.71332550 -95.21334839]
[101.20810699 -82.72579956]
[92.80098724 -72.94402313]
[93.02431488 -57.94568253]
[93.24764252 -42.94734573]
[93.47097015 -27.94900894]
[93.69429779 -12.95067120]
[94.80994415 2.00778174]
[96.81395721 16.87331009]
[98.81797791 31.73883820]
[102.82692719 37.94771194]
[100.73945618 46.84041977]
[102.52191925 61.73413849]
[104.41521454 76.61417389]
[106.41922760 91.47969818]
[109.85028839 106.08202362]
[114.67628479 120.28447723]
[119.50228119 134.48693848]
[134.17605591 139.17591858]
[143.17004395 151.46255493]
[143.20420837 166.51124573]
[134.47503662 178.55032349]
[139.30102539 192.75277710]
[144.12702942 206.95523071]
[155.89291382 217.53231812]
[152.66178894 232.07223511]
[157.48779297 246.27468872]
[162.31378174 260.47714233]
[169.89819336 247.53585815]
[184.37661743 243.61471558]
[197.45515442 250.95991516]
[201.64181519 265.36380005]
[194.53829956 278.57516479]
[180.21382141 283.02593994]
[166.87471008 276.16723633]
[170.41438293 290.74362183]
[173.95405579 305.32000732]
[177.49372864 319.89636230]
[181.03340149 334.47274780]
[184.57307434 349.04913330]
[193.28181458 336.83609009]
[208.05232239 334.22229004]
[220.42338562 342.70501709]
[223.30831909 357.42498779]
[215.05447388 369.94992065]
[200.39002991 373.10498047]
[187.71601868 365.08355713]
[189.94113159 379.91760254]
[192.16624451 394.75164795]
[194.39137268 409.58569336]
[196.61648560 424.41973877]
[198.84159851 439.25378418]
[202.09461975 443.33605957]
[203.33267212 447.81048584]
[202.74378967 451.84387207]
[200.81945801 454.79843140]
[202.37997437 469.71701050]
[203.94050598 484.63562012]
[205.83380127 499.51565552]
[208.05891418 514.34973145]
[210.28402710 529.18377686]
[217.23884583 515.89349365]
[229.85380554 507.77792358]
[244.83139038 506.95840454]
[258.25653076 513.64916992]
[266.61987305 526.10119629]
[267.73529053 541.05969238]
[261.31121826 554.61444092]
[249.02688599 563.22229004]
[234.09338379 564.63317871]
[220.41429138 558.47827148]
[211.56562805 546.36730957]
[211.56562805 561.36730957]
[211.56562805 576.36730957]
[211.56562805 591.36730957]
[211.56562805 606.36730957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 206]
[6 195]
[7 194]
[8 193]
[12 192]
[13 191]
[14 190]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[20 181]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[27 162]
[28 161]
[29 160]
[31 158]
[32 157]
[33 156]
[37 152]
[38 151]
[39 150]
[53 149]
[54 148]
[56 147]
[57 146]
[58 144]
[59 143]
[60 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[85 125]
[86 124]
[87 123]
[89 121]
[90 120]
[92 118]
[93 117]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
