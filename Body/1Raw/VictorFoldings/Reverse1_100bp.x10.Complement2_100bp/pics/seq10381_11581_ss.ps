%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[140.62602234 525.66320801]
[128.22985840 516.32971191]
[123.71944427 501.48260498]
[128.82914734 486.83096313]
[141.59417725 478.00863647]
[141.81750488 463.01028442]
[142.04083252 448.01196289]
[142.26416016 433.01361084]
[142.48748779 418.01525879]
[134.29005432 409.11984253]
[134.35336304 396.62265015]
[143.18888855 387.22601318]
[143.63548279 372.23266602]
[144.08209229 357.23931885]
[144.52870178 342.24597168]
[144.97531128 327.25262451]
[145.31028748 312.25637817]
[145.53361511 297.25802612]
[145.53361511 282.25802612]
[145.31028748 267.25970459]
[145.08695984 252.26135254]
[144.86363220 237.26301575]
[141.86885071 222.56501770]
[136.20606995 208.67498779]
[130.54327393 194.78495789]
[124.88049316 180.89492798]
[119.21770477 167.00489807]
[113.55492401 153.11488342]
[98.06240845 154.78295898]
[82.72645569 152.02452087]
[68.78621674 145.06246948]
[57.36808014 134.45933533]
[49.39463425 121.07185364]
[45.51013947 105.98175812]
[46.02846909 90.40832520]
[50.90774155 75.60990906]
[59.75370789 62.78223419]
[71.85160065 52.96178055]
[65.98264313 39.15760422]
[60.11368179 25.35342789]
[54.24472046 11.54925156]
[48.37575912 -2.25492501]
[42.50679779 -16.05910110]
[36.26918411 -22.73217964]
[36.65491486 -30.11276245]
[30.99212837 -44.00278854]
[25.32934189 -57.89281464]
[21.14051628 -43.48955917]
[9.89987659 -33.55739212]
[-4.90954447 -31.17389679]
[-18.69888687 -37.07762909]
[-27.19536972 -49.43925476]
[-27.76626968 -64.42838287]
[-20.23468399 -77.40048218]
[-6.93435812 -84.33599091]
[8.01345825 -83.08587646]
[19.97717476 -74.03729248]
[16.22087479 -88.55934906]
[12.46457386 -103.08140564]
[8.06357574 -117.42125702]
[3.02665973 -131.55029297]
[-2.01025629 -145.67932129]
[-7.04717255 -159.80834961]
[-12.08408928 -173.93737793]
[-17.12100410 -188.06640625]
[-19.95920753 -173.33737183]
[-28.15366554 -160.77349854]
[-40.48877716 -152.23857117]
[-55.13470459 -148.99868774]
[-69.91880798 -151.53446960]
[-82.64796448 -159.46975708]
[-91.43386078 -171.62739563]
[-94.97317505 -186.20385742]
[-92.74086761 -201.03681946]
[-85.06809235 -213.92590332]
[-73.09304810 -222.95907593]
[-58.59217453 -226.79634094]
[-43.71657944 -224.86845398]
[-30.67297745 -217.46141052]
[-21.39717674 -205.67567444]
[-23.40118980 -220.54121399]
[-25.40520287 -235.40673828]
[-40.40260315 -243.22811890]
[-47.71037292 -258.29788208]
[-44.62676239 -274.59060669]
[-32.56166458 -285.72213745]
[-34.78678131 -300.55618286]
[-37.01189804 -315.39022827]
[-52.02310944 -316.77835083]
[-66.26569366 -321.71923828]
[-78.91159821 -329.92559814]
[-89.22561646 -340.92034912]
[-96.60809326 -354.06427002]
[-100.62983704 -368.59317017]
[-101.05700684 -383.66238403]
[-97.86478424 -398.39578247]
[-91.23876190 -411.93679810]
[-81.56415558 -423.49816895]
[-69.40344238 -432.40774536]
[-55.46363068 -438.14752197]
[-40.55516052 -440.38381958]
[-25.54479218 -438.98657227]
[-11.30520725 -434.03707886]
[1.33572257 -425.82302856]
[11.64307022 -414.82205200]
[19.01758003 -401.67364502]
[23.03050804 -387.14230347]
[23.44854736 -372.07284546]
[20.24739456 -357.34140015]
[13.61315823 -343.80438232]
[3.93154693 -332.24887085]
[-8.23456478 -323.34667969]
[-22.17785454 -317.61535645]
[-19.95273590 -302.78131104]
[-17.72761917 -287.94726562]
[-5.36173296 -282.91467285]
[2.96948147 -272.34417725]
[5.00588894 -258.93066406]
[0.10984123 -246.16166687]
[-10.53967571 -237.41075134]
[-8.53566170 -222.54522705]
[-6.53164816 -207.67970276]
[-2.99197555 -193.10331726]
[2.04494071 -178.97428894]
[7.08185673 -164.84526062]
[12.11877346 -150.71623230]
[17.15568924 -136.58720398]
[22.19260597 -122.45817566]
[29.58349991 -135.51094055]
[44.00193787 -139.64720154]
[57.18837738 -132.49754333]
[61.58903122 -118.15758514]
[54.68300629 -104.84192657]
[40.42638397 -100.17837524]
[26.98663330 -106.83770752]
[30.74293327 -92.31565094]
[34.49923325 -77.79359436]
[39.21936798 -63.55560303]
[44.88215637 -49.66557693]
[50.54494095 -35.77554703]
[56.31097412 -21.92806244]
[62.17993546 -8.12388611]
[68.04889679 5.68029118]
[73.91785431 19.48446846]
[79.78681946 33.28864288]
[85.65577698 47.09282303]
[99.84884644 45.18300247]
[114.05223846 47.01452255]
[127.29653931 52.46237946]
[138.67781067 61.15475082]
[147.41926575 72.49836731]
[152.92428589 85.71900940]
[154.81713867 99.91435242]
[152.96864319 114.11553955]
[147.50497437 127.35332489]
[138.79899597 138.72419739]
[127.44494629 147.45208740]
[133.10774231 161.34211731]
[138.77052307 175.23214722]
[144.43330383 189.12217712]
[150.09609985 203.01220703]
[155.75888062 216.90222168]
[156.82775879 201.94035339]
[161.27287292 187.61412048]
[168.86105347 174.67504883]
[179.19422913 163.80191040]
[191.73034668 155.56504822]
[205.81179810 150.39660645]
[220.69987488 148.56765747]
[235.61360168 150.17417908]
[249.77061462 155.13189697]
[262.42828369 163.18072510]
[272.92257690 173.89843750]
[280.70303345 186.72280884]
[285.36148071 200.98109436]
[286.65356445 215.92533875]
[284.51147461 230.77160645]
[279.04757690 244.74107361]
[270.54855347 257.10092163]
[259.46017456 267.20281982]
[246.36415100 274.51681519]
[231.94747925 278.65921021]
[216.96641541 279.41271973]
[202.20684814 276.73785400]
[188.44302368 270.77487183]
[176.39695740 261.83660889]
[166.70059204 250.39193726]
[159.86196899 237.03968811]
[160.08529663 252.03802490]
[160.30862427 267.03637695]
[160.53195190 282.03469849]
[163.58912659 287.89688110]
[163.27415466 293.57119751]
[160.53195190 297.48135376]
[160.30862427 312.47970581]
[163.30992126 321.10699463]
[159.96865845 327.69921875]
[159.52204895 342.69259644]
[159.07543945 357.68594360]
[158.62884521 372.67929077]
[158.18223572 387.67263794]
[167.28436279 403.67990112]
[157.48582458 418.23858643]
[157.26249695 433.23693848]
[157.03916931 448.23529053]
[156.81584167 463.23361206]
[156.59251404 478.23196411]
[169.08920288 487.43045044]
[173.76040649 502.22772217]
[168.80995178 516.93395996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 204]
[9 203]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 195]
[18 194]
[19 191]
[20 190]
[21 189]
[22 188]
[23 162]
[24 161]
[25 160]
[26 159]
[27 158]
[28 157]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[45 140]
[46 139]
[47 138]
[57 137]
[58 136]
[59 135]
[60 128]
[61 127]
[62 126]
[63 125]
[64 124]
[65 123]
[80 122]
[81 121]
[82 120]
[86 115]
[87 114]
[88 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
