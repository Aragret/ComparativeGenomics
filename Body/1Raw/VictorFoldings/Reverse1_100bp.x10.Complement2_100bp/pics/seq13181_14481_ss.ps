%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[196.02224731 861.61145020]
[183.12614441 853.93402100]
[170.89872742 845.23095703]
[159.42138672 835.56018066]
[148.77050781 824.98608398]
[139.01695251 813.57904053]
[130.22564697 801.41491699]
[122.45507812 788.57470703]
[115.75697327 775.14385986]
[110.17591095 761.21173096]
[105.74902344 746.87103271]
[102.50577545 732.21722412]
[100.46774292 717.34777832]
[99.64849854 702.36175537]
[100.05349731 687.35876465]
[101.68003082 672.43878174]
[104.51728821 657.70098877]
[108.54637146 643.24346924]
[113.74048615 629.16247559]
[120.06504822 615.55175781]
[127.47798157 602.50177002]
[135.92994690 590.09948730]
[145.36470032 578.42736816]
[155.71945190 567.56311035]
[166.92529297 557.57904053]
[178.90765381 548.54156494]
[191.58677673 540.51080322]
[204.87829590 533.54028320]
[218.69375610 527.67633057]
[232.94122314 522.95800781]
[229.40155029 508.38165283]
[225.86187744 493.80526733]
[222.32220459 479.22888184]
[218.78253174 464.65252686]
[215.24285889 450.07614136]
[211.70318604 435.49975586]
[208.16351318 420.92340088]
[204.62384033 406.34701538]
[201.08416748 391.77062988]
[197.54449463 377.19427490]
[194.00482178 362.61788940]
[190.24851990 348.09582520]
[186.27642822 333.63131714]
[182.30433655 319.16677856]
[177.37274170 305.00064087]
[171.50376892 291.19647217]
[165.63481140 277.39230347]
[159.76585388 263.58813477]
[153.89689636 249.78395081]
[148.02793884 235.97976685]
[142.15896606 222.17558289]
[128.52296448 221.41629028]
[116.48663330 214.82421875]
[108.42628479 203.63583374]
[105.96116638 190.00126648]
[109.62844849 176.57118225]
[118.76746368 165.98150635]
[113.10467529 152.09147644]
[107.44188690 138.20144653]
[101.77909851 124.31141663]
[96.11631012 110.42139435]
[89.31562805 123.79116058]
[75.09626770 128.56712341]
[61.60372925 122.01338959]
[56.56715012 107.88423920]
[62.87171555 94.27349091]
[76.90587616 88.97799683]
[90.62957764 95.03057861]
[86.22857666 80.69072723]
[81.82758331 66.35088348]
[77.42658234 52.01103210]
[65.98083496 41.08833313]
[69.64343262 26.65106773]
[58.19768524 15.72836590]
[61.86028671 1.29110086]
[59.24745178 16.06178474]
[52.63072205 29.52354240]
[42.53192902 40.61472321]
[29.74749374 48.46063232]
[15.28565979 52.44250870]
[0.28694260 52.24631882]
[-14.06579494 47.88754272]
[-26.64063644 39.70993042]
[-36.44587708 28.35839844]
[-42.70823288 14.72817993]
[-44.93383408 -0.10579156]
[-42.94715500 -14.97364616]
[-36.90487289 -28.70284271]
[-27.28351212 -40.21063995]
[-14.84184933 -48.58948517]
[-0.56108814 -53.17858887]
[14.43253231 -53.61603165]
[28.95655060 -49.86731720]
[41.86554718 -42.22808456]
[52.14145660 -31.30079460]
[58.97501755 -17.94394112]
[58.97501755 -32.94393921]
[58.97501755 -47.94393921]
[58.97501755 -62.94393921]
[45.20114517 -69.51990509]
[35.65122223 -81.42627716]
[32.22138214 -96.29903412]
[35.59262466 -111.18518066]
[45.09559250 -123.12906647]
[58.84345627 -129.75921631]
[74.10657501 -129.75921631]
[87.85443878 -123.12906647]
[97.35740662 -111.18518066]
[100.72865295 -96.29903412]
[97.29881287 -81.42627716]
[87.74888611 -69.51990509]
[73.97501373 -62.94393921]
[73.97501373 -47.94393921]
[73.97501373 -32.94393921]
[73.97501373 -17.94394112]
[76.20013428 -3.10989714]
[87.33109283 6.78712225]
[83.98328400 22.25006866]
[95.11424255 32.14708710]
[91.76643372 47.61003494]
[96.16742706 61.94988251]
[100.56842804 76.28972626]
[104.96942139 90.62957764]
[110.00634003 104.75860596]
[115.66912842 118.64863586]
[121.33191681 132.53866577]
[126.99469757 146.42868042]
[132.65748596 160.31871033]
[149.06060791 162.39944458]
[162.10145569 172.41104126]
[168.27835083 187.54585266]
[165.99308777 203.63726807]
[155.96315002 216.30662537]
[161.83210754 230.11080933]
[167.70106506 243.91497803]
[173.57003784 257.71914673]
[179.43899536 271.52334595]
[185.30795288 285.32751465]
[191.17691040 299.13168335]
[195.15083313 284.66766357]
[206.24235535 274.56924438]
[221.01464844 271.96551514]
[234.89035034 277.66329956]
[243.56994629 289.89706421]
[244.36393738 304.87600708]
[237.02632141 317.95880127]
[223.83073425 325.09158325]
[208.86596680 324.06414795]
[196.76885986 315.19470215]
[200.74095154 329.65921021]
[204.71304321 344.12374878]
[209.14082336 349.03356934]
[210.25685120 354.60595703]
[208.58119202 359.07821655]
[212.12086487 373.65460205]
[215.66053772 388.23095703]
[219.20021057 402.80734253]
[222.73988342 417.38372803]
[226.27955627 431.96008301]
[229.81922913 446.53646851]
[233.35890198 461.11285400]
[236.89857483 475.68920898]
[240.43824768 490.26559448]
[243.97792053 504.84197998]
[247.51759338 519.41833496]
[262.34225464 517.07690430]
[277.30844116 515.95166016]
[292.31652832 516.04998779]
[307.26669312 517.37133789]
[322.05938721 519.90686035]
[336.59619141 523.63970947]
[350.78036499 528.54498291]
[364.51751709 534.59014893]
[377.71618652 541.73486328]
[390.28860474 549.93164062]
[402.15106201 559.12591553]
[413.22463989 569.25653076]
[423.43560791 580.25604248]
[432.71603394 592.05120850]
[441.00415039 604.56359863]
[448.24481201 617.70989990]
[454.38980103 631.40270996]
[459.39828491 645.55078125]
[463.23687744 660.05999756]
[465.88006592 674.83386230]
[467.31021118 689.77398682]
[467.51785278 704.78094482]
[466.50158691 719.75494385]
[464.26818848 734.59625244]
[460.83248901 749.20611572]
[456.21737671 763.48736572]
[450.45355225 777.34490967]
[443.57937622 790.68652344]
[435.64062500 803.42340088]
[426.69009399 815.47088623]
[416.78735352 826.74865723]
[405.99832153 837.18176270]
[394.39477539 846.70074463]
[382.05395508 855.24218750]
[369.05801392 862.74938965]
[355.49337769 869.17224121]
[341.45034790 874.46813965]
[327.02236938 878.60174561]
[312.30548096 881.54559326]
[297.39761353 883.28002930]
[282.39797974 883.79357910]
[267.40640259 883.08276367]
[252.52264404 881.15240479]
[237.84574890 878.01531982]
[223.47340393 873.69226074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 151]
[43 150]
[44 149]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[68 123]
[69 122]
[70 121]
[71 120]
[73 118]
[75 116]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
