%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[114.26025391 553.26568604]
[119.86927795 539.27270508]
[128.66461182 527.02911377]
[140.13491821 517.24670410]
[153.61331177 510.49420166]
[150.29104614 495.86676025]
[146.96878052 481.23928833]
[143.64653015 466.61181641]
[140.32426453 451.98437500]
[136.89320374 437.38204956]
[133.35353088 422.80566406]
[129.81385803 408.22927856]
[126.27419281 393.65292358]
[122.73451996 379.07653809]
[120.41349792 377.50460815]
[118.57528687 374.91854858]
[117.60927582 371.49771118]
[117.83279419 367.55886841]
[119.44556427 363.52737427]
[116.77976990 348.76614380]
[114.11397552 334.00491333]
[111.44818115 319.24371338]
[108.78238678 304.48248291]
[105.43933105 301.07177734]
[104.20337677 295.52474976]
[106.26383209 289.24255371]
[104.03871155 274.40850830]
[99.93776703 268.26000977]
[101.89260101 259.33718872]
[99.88858795 244.47166443]
[97.88457489 229.60614014]
[95.88056183 214.74061584]
[93.76593781 199.89041138]
[91.54082489 185.05638123]
[85.37171936 198.72904968]
[73.93703461 208.43719482]
[59.44462585 212.30630493]
[44.69274521 209.58930969]
[32.52975082 200.81083679]
[25.30413055 187.66586304]
[24.41103363 172.69247437]
[30.02290726 158.78179932]
[41.05618286 148.61978149]
[55.38051224 144.16851807]
[70.23008728 146.28750610]
[82.73768616 154.56759644]
[90.48870087 167.41123962]
[90.93530273 152.41789246]
[91.38191223 137.42454529]
[91.82851410 122.43119812]
[80.24058533 113.39765930]
[76.13734436 99.28920746]
[81.07305908 85.44999695]
[93.17813110 77.12220001]
[93.62474060 62.12884903]
[94.07134247 47.13549805]
[94.51795197 32.14214706]
[94.96455383 17.14879799]
[92.77159119 13.40114880]
[91.96625519 9.53903103]
[92.41412354 6.01272774]
[93.84838104 3.18261600]
[95.91053772 1.28376496]
[97.24877167 -13.65641975]
[98.58700562 -28.59660530]
[96.62099457 -32.46813965]
[96.04695892 -36.37134171]
[96.70392609 -39.86473846]
[98.30408478 -42.60446167]
[100.47561646 -44.37720490]
[102.70072937 -59.21125031]
[104.92584991 -74.04529572]
[107.15096283 -88.87933350]
[92.96739960 -95.88269806]
[81.65614319 -106.91274261]
[74.31607056 -120.88113403]
[71.65506744 -136.41491699]
[73.92177582 -151.99148560]
[80.88242340 -166.08778381]
[91.84487152 -177.32923889]
[105.72740173 -184.62380981]
[121.16548157 -187.26806641]
[123.16949463 -202.13359070]
[125.17350769 -216.99913025]
[117.98833466 -227.71061707]
[119.96351624 -240.05088806]
[129.50163269 -247.49070740]
[131.72674561 -262.32476807]
[133.95187378 -277.15881348]
[123.29808807 -291.03381348]
[125.92371368 -307.98730469]
[139.72134399 -317.60314941]
[141.72535706 -332.46865845]
[143.72937012 -347.33419800]
[145.73338318 -362.19973755]
[147.40492249 -377.10629272]
[148.74316406 -392.04647827]
[150.08139038 -406.98666382]
[151.41963196 -421.92684937]
[137.49937439 -427.84982300]
[126.09204102 -437.78601074]
[118.31522369 -450.76202393]
[114.93080139 -465.50653076]
[116.27035522 -480.57507324]
[122.20264435 -494.49136353]
[132.14648438 -505.89202881]
[145.12768555 -513.66015625]
[159.87446594 -517.03466797]
[174.94210815 -515.68505859]
[188.85441589 -509.74340820]
[200.24841309 -499.79193115]
[208.00784302 -486.80554199]
[211.37249756 -472.05648804]
[210.01275635 -456.98977661]
[204.06181335 -443.08145142]
[194.10270691 -431.69412231]
[181.11111450 -423.94338989]
[166.35981750 -420.58862305]
[165.02157593 -405.64843750]
[163.68334961 -390.70825195]
[162.34510803 -375.76806641]
[164.31321716 -372.84249878]
[164.96209717 -368.81832886]
[163.79080200 -364.32595825]
[160.59892273 -360.19570923]
[158.59490967 -345.33020020]
[156.59089661 -330.46466064]
[154.58688354 -315.59912109]
[163.75599670 -306.54614258]
[166.07128906 -293.67285156]
[160.46696472 -281.63946533]
[148.78591919 -274.93368530]
[146.56079102 -260.09963989]
[144.33567810 -245.26559448]
[151.62931824 -229.30409241]
[140.03903198 -214.99511719]
[138.03501892 -200.12957764]
[136.03100586 -185.26405334]
[149.02632141 -179.40676880]
[159.85595703 -170.11381531]
[167.63595581 -158.13191223]
[171.72793579 -144.42770386]
[171.79153442 -130.10984802]
[167.81259155 -116.33924866]
[160.10513306 -104.23499298]
[149.28654480 -94.78337860]
[136.22813416 -88.75753021]
[121.98500824 -86.65422058]
[119.75988770 -71.82017517]
[117.53477478 -56.98613358]
[115.30965424 -42.15208817]
[113.52719116 -27.25837135]
[112.18895721 -12.31818581]
[110.85072327 2.62199903]
[109.95790863 17.59540558]
[109.51129913 32.58875656]
[109.06469727 47.58210373]
[108.61808777 62.57545471]
[108.17148590 77.56880188]
[119.75941467 86.60234070]
[123.86265564 100.71079254]
[118.92694092 114.55000305]
[106.82186890 122.87779999]
[106.37525940 137.87115479]
[105.92865753 152.86450195]
[105.48204803 167.85784912]
[106.37486267 182.83125305]
[108.59998322 197.66529846]
[112.96778107 205.68777466]
[110.74609375 212.73660278]
[112.75010681 227.60212708]
[114.75411987 242.46765137]
[116.75813293 257.33319092]
[118.87275696 272.18338013]
[121.09786987 287.01742554]
[123.54360199 301.81671143]
[126.20939636 316.57791138]
[128.87519836 331.33914185]
[131.54098511 346.10034180]
[134.20678711 360.86157227]
[137.31089783 375.53686523]
[140.85057068 390.11325073]
[144.39024353 404.68960571]
[147.92991638 419.26599121]
[151.46958923 433.84237671]
[156.53569031 441.44317627]
[154.95172119 448.66210938]
[158.27398682 463.28958130]
[161.59625244 477.91702271]
[164.91850281 492.54449463]
[168.24076843 507.17193604]
[183.31364441 507.43975830]
[197.88426208 511.30761719]
[211.10551453 518.55072021]
[222.20870972 528.74786377]
[230.54833984 541.30633545]
[235.63954163 555.49584961]
[237.18634033 570.49151611]
[235.09877014 585.42156982]
[229.49822998 599.41790771]
[220.71032715 611.66680908]
[209.24595642 621.45617676]
[195.77166748 628.21685791]
[181.07081604 631.55578613]
[165.99809265 631.27886963]
[151.42982483 627.40216064]
[138.21296692 620.15106201]
[127.11595917 609.94714355]
[118.78394318 597.38366699]
[113.70133972 583.19104004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 185]
[11 184]
[12 183]
[13 182]
[14 181]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[26 175]
[27 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 168]
[34 167]
[47 166]
[48 165]
[49 164]
[50 163]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[63 154]
[64 153]
[65 152]
[70 151]
[71 150]
[72 149]
[73 148]
[82 138]
[83 137]
[84 136]
[87 134]
[88 133]
[89 132]
[92 128]
[93 127]
[94 126]
[95 125]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
