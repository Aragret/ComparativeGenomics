%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[151.53729248 513.57629395]
[149.75482178 498.68258667]
[147.97236633 483.78887939]
[146.18989563 468.89517212]
[144.40742493 454.00143433]
[135.21255493 442.28378296]
[141.25514221 427.66195679]
[129.99516296 414.20166016]
[137.38258362 397.33432007]
[135.37857056 382.46878052]
[133.37455750 367.60324097]
[124.00624847 356.02377319]
[129.83047485 341.31362915]
[127.82645416 326.44808960]
[125.82244110 311.58255005]
[123.81842804 296.71704102]
[121.48294067 281.89996338]
[118.81714630 267.13876343]
[116.15135193 252.37753296]
[113.48554993 237.61631775]
[110.81975555 222.85510254]
[100.94374084 211.70550537]
[106.10530853 196.74993896]
[103.43951416 181.98872375]
[101.21617126 180.28141785]
[99.53514862 177.59056091]
[98.77445984 174.11827087]
[99.23202515 170.19970703]
[101.08189392 166.27134705]
[99.29943085 151.37763977]
[97.40613556 136.49760437]
[95.40212250 121.63207245]
[93.39810944 106.76654053]
[90.05506134 102.72451019]
[89.21466827 97.09716034]
[91.56256866 91.42933655]
[90.00204468 76.51072693]
[88.44152069 61.59212494]
[84.43630219 53.38261414]
[86.97052002 46.44002533]
[85.63228607 31.49984169]
[84.29405212 16.55965805]
[81.67129517 13.09915257]
[80.41271973 9.36009979]
[80.43838501 5.80556154]
[81.52616882 2.82506871]
[83.34807587 0.69462317]
[82.90146637 -14.29872704]
[82.45486450 -29.29207611]
[81.67353821 -44.27171326]
[80.55789185 -59.23016739]
[79.44224548 -74.18862152]
[78.32659149 -89.14707184]
[66.63417053 -99.43906403]
[65.71583557 -114.62495422]
[75.59973145 -125.70846558]
[74.48407745 -140.66691589]
[73.36843109 -155.62536621]
[72.25278473 -170.58383179]
[69.80705261 -185.38310242]
[66.05075836 -199.90515137]
[51.76637268 -205.67253113]
[43.71114349 -218.59408569]
[44.79634094 -233.60363770]
[54.39675903 -244.96012878]
[50.64046097 -259.48217773]
[46.88415909 -274.00424194]
[43.12785721 -288.52630615]
[38.51384735 -302.79904175]
[33.05849075 -316.77182007]
[27.60313416 -330.74462891]
[22.14777756 -344.71743774]
[7.50345898 -341.34671021]
[-7.47558975 -340.14422607]
[-22.47008896 -341.13562012]
[-37.16043091 -344.29974365]
[-51.23348618 -349.56918335]
[-64.38928986 -356.83160400]
[-76.34742737 -365.93218994]
[-86.85300446 -376.67700195]
[-95.68209839 -388.83697510]
[-102.64652252 -402.15292358]
[-107.59781647 -416.34103394]
[-110.43045044 -431.09887695]
[-111.08404541 -446.11190796]
[-109.54467010 -461.06008911]
[-105.84513092 -475.62481689]
[-100.06430054 -489.49563599]
[-92.32537842 -502.37689209]
[-82.79333496 -513.99401855]
[-71.67133331 -524.09942627]
[-59.19644547 -532.47766113]
[-45.63457870 -538.95019531]
[-31.27479935 -543.37902832]
[-16.42318916 -545.66979980]
[-1.39631128 -545.77362061]
[13.48553658 -543.68835449]
[27.90514565 -539.45837402]
[41.55516434 -533.17382812]
[54.14463806 -524.96881104]
[65.40522003 -515.01806641]
[75.09689331 -503.53375244]
[83.01308441 -490.76068115]
[88.98504639 -476.97103882]
[92.88549805 -462.45883179]
[94.63129425 -447.53335571]
[94.18522644 -432.51272583]
[91.55680084 -417.71716309]
[86.80204773 -403.46197510]
[80.02230835 -390.05105591]
[71.36209106 -377.77023315]
[61.00599670 -366.88128662]
[49.17476654 -357.61630249]
[36.12057495 -350.17279053]
[41.57593155 -336.19998169]
[47.03128815 -322.22720337]
[52.48664856 -308.25439453]
[57.57906342 -322.36352539]
[69.92693329 -330.87997437]
[84.92480469 -330.62734985]
[96.97884369 -321.69985962]
[101.59319305 -307.42724609]
[97.04681396 -293.13281250]
[85.03539276 -284.14807129]
[70.03888702 -283.82406616]
[57.64991760 -292.28259277]
[61.40621948 -277.76052856]
[65.16252136 -263.23849487]
[68.91882324 -248.71643066]
[82.82170868 -243.43933105]
[91.04866028 -230.83848572]
[90.26914978 -215.63172913]
[80.57281494 -203.66145325]
[84.32911682 -189.13940430]
[89.04230499 -203.37968445]
[99.40495300 -214.22474670]
[113.41620636 -219.58058167]
[128.37069702 -218.41305542]
[141.38095093 -210.94758606]
[149.93490601 -198.62565613]
[152.38090515 -183.82643127]
[148.24668884 -169.40740967]
[138.33047485 -158.15267944]
[124.54696655 -152.23535156]
[109.55752563 -152.79797363]
[96.25637054 -159.73190308]
[87.21123505 -171.69947815]
[88.32688904 -156.74102783]
[89.44253540 -141.78256226]
[90.55818176 -126.82411194]
[101.97686768 -117.32941437]
[103.32138062 -102.17530823]
[93.28504944 -90.26272583]
[94.40069580 -75.30426788]
[95.51634216 -60.34581757]
[96.63199615 -45.38736343]
[99.05077362 -42.82185364]
[100.34709930 -38.95732117]
[99.92395020 -34.33409500]
[97.44821167 -29.73868179]
[97.89481354 -14.74533272]
[98.34142303 0.24801721]
[99.23423767 15.22142315]
[100.57247162 30.16160774]
[101.91070557 45.10179138]
[103.36012268 60.03160095]
[104.92064667 74.95020294]
[106.48117065 89.86881256]
[108.26364136 104.76252747]
[110.26765442 119.62805939]
[112.27166748 134.49359131]
[116.51953888 142.58020020]
[114.19314575 149.59516907]
[115.97561646 164.48889160]
[118.20072937 179.32292175]
[120.86652374 194.08415222]
[130.93321228 206.28956604]
[125.58097839 220.18930054]
[128.24676514 234.95051575]
[130.91256714 249.71173096]
[133.57835388 264.47296143]
[136.24415588 279.23416138]
[139.61727905 283.21777344]
[140.98800659 287.65335083]
[140.51947021 291.70251465]
[138.68395996 294.71301270]
[140.68797302 309.57855225]
[142.69198608 324.44409180]
[144.69599915 339.30960083]
[154.20764160 351.95236206]
[148.24008179 365.59924316]
[150.24409485 380.46475220]
[152.24810791 395.33029175]
[162.01325989 403.75671387]
[163.37637329 416.17950439]
[156.14886475 425.87948608]
[165.47122192 438.66244507]
[159.30114746 452.21899414]
[161.08361816 467.11270142]
[162.86607361 482.00640869]
[164.64854431 496.90014648]
[166.43101501 511.79385376]
[180.35311890 518.44055176]
[188.45222473 531.57098389]
[188.14395142 546.99523926]
[179.52664185 559.79156494]
[165.35006714 565.87664795]
[150.13790894 563.30877686]
[138.74432373 552.90734863]
[134.80496216 537.99139404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[7 196]
[9 193]
[10 192]
[11 191]
[13 189]
[14 188]
[15 187]
[16 186]
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[23 176]
[24 175]
[29 174]
[30 173]
[31 171]
[32 170]
[33 169]
[36 168]
[37 167]
[38 166]
[40 165]
[41 164]
[42 163]
[47 162]
[48 161]
[49 160]
[50 156]
[51 155]
[52 154]
[53 153]
[56 150]
[57 149]
[58 148]
[59 147]
[60 134]
[61 133]
[65 129]
[66 128]
[67 127]
[68 126]
[69 117]
[70 116]
[71 115]
[72 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
