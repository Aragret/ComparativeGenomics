%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[81.76483917 464.70410156]
[68.44966888 457.49401855]
[58.19889450 446.34951782]
[52.12443924 432.47940063]
[50.88521194 417.38824463]
[54.61563873 402.71301270]
[62.91107178 390.04556274]
[74.87168121 380.75994873]
[89.20007324 375.86340332]
[89.20007324 360.86340332]
[89.20007324 345.86340332]
[89.20007324 330.86340332]
[87.31554413 328.78814697]
[86.13949585 325.84136963]
[86.00801086 322.28918457]
[87.15470123 318.51431274]
[89.67327118 314.97723389]
[90.56608582 300.00384521]
[91.45890045 285.03042603]
[92.24022675 270.05081177]
[92.91001129 255.06576538]
[93.57979584 240.08071899]
[94.24958038 225.09568787]
[94.91936493 210.11064148]
[95.58914948 195.12561035]
[96.25893402 180.14056396]
[96.25893402 165.14056396]
[95.47761536 150.16093445]
[94.58480072 135.18751526]
[86.10367584 122.94334412]
[93.00585938 108.70710754]
[92.00159454 93.74076843]
[90.88594818 78.78231049]
[89.77030182 63.82386017]
[87.19934845 60.32468796]
[85.99658203 56.56731033]
[86.07516479 53.01354980]
[87.20720673 50.04958344]
[89.06063080 47.94649887]
[88.83730316 32.94816208]
[88.61397552 17.94982338]
[88.39064789 2.95148635]
[88.16732025 -12.04685116]
[87.94399261 -27.04518890]
[80.00208282 -40.72863388]
[87.54903412 -53.56969070]
[87.32570648 -68.56803131]
[87.10237885 -83.56636810]
[79.16190338 -70.84045410]
[66.53271484 -62.74703217]
[51.65330505 -60.84880829]
[37.39666367 -65.51230621]
[26.51552200 -75.83706665]
[21.11085701 -89.82955170]
[22.22622681 -104.78802490]
[29.64626884 -117.82424164]
[41.93828964 -126.42111206]
[56.72889328 -128.91871643]
[71.16224670 -124.83480835]
[82.45149231 -114.95792389]
[88.41709900 -101.19387817]
[90.86282349 -115.99314880]
[93.30854797 -130.79241943]
[95.75428009 -145.59169006]
[98.20000458 -160.39096069]
[100.64573669 -175.19023132]
[103.09146118 -189.98950195]
[105.53718567 -204.78877258]
[100.15352631 -219.66583252]
[109.86244965 -230.96122742]
[107.89575958 -237.27340698]
[109.21415710 -242.80142212]
[112.60762024 -246.16198730]
[115.49289703 -260.88186646]
[118.37816620 -275.60177612]
[104.46866608 -281.33917236]
[91.94982910 -289.67739868]
[81.30175781 -300.29443359]
[72.93238068 -312.78091431]
[67.16179657 -326.65588379]
[64.21007538 -341.38537598]
[64.18881989 -356.40289307]
[67.09696960 -371.13122559]
[72.82092285 -385.00473022]
[81.13895416 -397.49090576]
[91.72981262 -408.11083984]
[104.18511963 -416.45776367]
[118.02513885 -422.21240234]
[132.71722412 -425.15530396]
[147.69631958 -425.17520142]
[150.58160400 -439.89508057]
[153.46687317 -454.61499023]
[156.35214233 -469.33486938]
[159.23741150 -484.05477905]
[162.12269592 -498.77465820]
[148.11483765 -504.25369263]
[135.31051636 -512.14605713]
[124.12134552 -522.19799805]
[114.90700531 -534.08648682]
[107.96370697 -547.42926025]
[103.51463318 -561.79748535]
[101.70281982 -576.72924805]
[102.58649445 -591.74450684]
[106.13726044 -606.36065674]
[112.24097443 -620.10784912]
[120.70142365 -632.54412842]
[131.24664307 -643.26971436]
[143.53764343 -651.93981934]
[157.17932129 -658.27575684]
[171.73315430 -662.07391357]
[186.73130798 -663.21203613]
[201.69163513 -661.65368652]
[216.13322449 -657.44891357]
[229.59184265 -650.73291016]
[241.63485718 -641.72149658]
[251.87513733 -630.70440674]
[259.98348999 -618.03576660]
[265.69927979 -604.12280273]
[268.83874512 -589.41284180]
[269.30096436 -574.37866211]
[267.07110596 -559.50360107]
[262.22082520 -545.26580811]
[254.90606689 -532.12298584]
[245.36195374 -520.49761963]
[233.89527893 -510.76336670]
[220.87466431 -503.23321533]
[206.71865845 -498.14920044]
[191.88232422 -495.67474365]
[176.84257507 -495.88937378]
[173.95730591 -481.16949463]
[171.07203674 -466.44961548]
[168.18676758 -451.72970581]
[165.30149841 -437.00982666]
[162.41621399 -422.28991699]
[176.27938843 -416.61660767]
[188.77328491 -408.34494019]
[199.41667175 -397.79125977]
[207.79919434 -385.35989380]
[213.59710693 -371.52752686]
[216.58586121 -356.82510376]
[216.64874268 -341.81732178]
[213.78144836 -327.08096313]
[208.09237671 -313.18273926]
[199.79841614 -300.65756226]
[189.21678162 -289.98779297]
[176.75283813 -281.58489990]
[162.88456726 -275.77334595]
[148.14425659 -272.77822876]
[133.09805298 -272.71649170]
[130.21278381 -257.99661255]
[127.32751465 -243.27671814]
[124.66172028 -228.51550293]
[130.22032166 -214.69699097]
[120.33645630 -202.34304810]
[117.89073181 -187.54377747]
[115.44500732 -172.74450684]
[112.99927521 -157.94523621]
[110.55355072 -143.14596558]
[108.10781860 -128.34669495]
[105.66209412 -113.54741669]
[103.21636963 -98.74814606]
[102.10071564 -83.78969574]
[102.32404327 -68.79135895]
[102.54737091 -53.79301834]
[110.47330475 -41.18235397]
[102.94232941 -27.26851654]
[103.16565704 -12.27017879]
[103.38898468 2.72815847]
[103.61231232 17.72649574]
[103.83563995 32.72483444]
[104.05896759 47.72317123]
[104.72875214 62.70820999]
[105.84439850 77.66666412]
[106.96005249 92.62511444]
[110.65238953 99.79025269]
[107.97926331 107.81429291]
[116.52424622 121.12946320]
[109.55820465 134.29470825]
[110.45101929 149.26811218]
[114.08567047 157.64826965]
[111.24397278 164.47077942]
[122.13927460 154.16094971]
[137.13673401 154.43708801]
[147.64512634 165.14100647]
[147.64476013 180.14100647]
[137.13586426 190.84440613]
[122.13838959 191.11982727]
[111.24397278 180.81034851]
[110.57418823 195.79539490]
[109.90440369 210.78042603]
[109.23461914 225.76547241]
[108.56483459 240.75050354]
[107.89505005 255.73554993]
[107.22526550 270.72058105]
[109.96836090 279.43341064]
[106.43231201 285.92324829]
[105.53948975 300.89666748]
[104.64667511 315.87005615]
[104.20007324 330.86340332]
[104.20007324 345.86340332]
[104.20007324 360.86340332]
[104.20007324 375.86340332]
[118.52845764 380.75994873]
[130.48907471 390.04556274]
[138.78450012 402.71301270]
[142.51492310 417.38824463]
[141.27569580 432.47940063]
[135.20124817 446.34951782]
[124.95046997 457.49401855]
[111.63529968 464.70410156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 202]
[10 201]
[11 200]
[12 199]
[17 198]
[18 197]
[19 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 188]
[27 181]
[28 179]
[29 178]
[31 176]
[32 174]
[33 173]
[34 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[46 164]
[47 163]
[48 162]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[66 156]
[67 155]
[68 154]
[70 152]
[73 151]
[74 150]
[75 149]
[90 134]
[91 133]
[92 132]
[93 131]
[94 130]
[95 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
