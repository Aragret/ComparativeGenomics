%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[103.23854828 594.52984619]
[109.96518707 580.72229004]
[122.70336914 572.14123535]
[121.58772278 557.18280029]
[120.47207642 542.22436523]
[116.83979034 535.78784180]
[119.45285797 527.03515625]
[118.56004333 512.06176758]
[117.66722870 497.08834839]
[116.32899475 482.14816284]
[114.54653168 467.25445557]
[112.76406097 452.36074829]
[110.98159790 437.46701050]
[108.75647736 422.63296509]
[106.09068298 407.87176514]
[103.42488861 393.11053467]
[100.75909424 378.34933472]
[93.04785919 391.21542358]
[79.29241943 397.19772339]
[64.62321472 394.06497192]
[54.51148224 382.98556519]
[52.72866440 368.09188843]
[59.93969727 354.93890381]
[73.45504761 348.43234253]
[88.23382568 350.99902344]
[98.76444244 361.68261719]
[97.87162018 346.70922852]
[96.97880554 331.73580933]
[87.74958038 327.24221802]
[81.16692352 319.26074219]
[78.47032166 309.18893433]
[80.21111298 298.82684326]
[86.14128113 290.05526733]
[95.24632263 284.49450684]
[95.02299500 269.49618530]
[87.09706116 256.88552856]
[94.62804413 242.97167969]
[94.40471649 227.97334290]
[94.18138123 212.97500610]
[93.95805359 197.97666931]
[93.73472595 182.97831726]
[93.51139832 167.97998047]
[93.28807068 152.98164368]
[93.06474304 137.98330688]
[92.84141541 122.98497772]
[78.29942322 110.42301941]
[77.58429718 91.21986389]
[91.15170288 77.61112213]
[90.25888824 62.63771439]
[89.36607361 47.66430664]
[88.47325134 32.69090271]
[87.35760498 17.73244858]
[86.01937103 2.79226351]
[75.07957458 -12.01997566]
[83.07865906 -27.63988495]
[81.51814270 -42.55849075]
[79.95761871 -57.47709656]
[78.39709473 -72.39569855]
[67.06769562 -62.56489563]
[52.29088211 -65.14283752]
[44.95956802 -78.22916412]
[50.47813034 -92.17711639]
[64.77848816 -96.70478821]
[77.31808472 -88.47595978]
[76.87148285 -103.46931458]
[76.42487335 -118.46266174]
[75.97827148 -133.45600891]
[62.08599854 -137.23695374]
[49.83618164 -144.77183533]
[40.21739197 -155.44207764]
[34.00290298 -168.37644958]
[31.68852806 -182.52229309]
[33.45307541 -196.73114014]
[39.14455795 -209.85198975]
[48.29325104 -220.82449341]
[60.15044403 -228.76470947]
[73.74970245 -233.03623962]
[65.80780029 -246.71969604]
[73.35475159 -259.56076050]
[73.13142395 -274.55908203]
[65.18951416 -288.24252319]
[72.73647308 -301.08358765]
[71.84365082 -316.05700684]
[70.28312683 -330.97558594]
[68.72261047 -345.89419556]
[67.16208649 -360.81280518]
[65.60156250 -375.73141479]
[64.04103851 -390.65002441]
[49.07510376 -392.33374023]
[34.82116318 -397.19573975]
[21.94589424 -405.00866699]
[11.05149937 -415.40704346]
[2.64752769 -427.90454102]
[-2.87295032 -441.91662598]
[-5.25173283 -456.78790283]
[-4.37755966 -471.82287598]
[-0.29131711 -486.31826782]
[6.81587315 -499.59613037]
[16.61159515 -511.03546143]
[28.63768578 -520.10119629]
[42.33166122 -526.36926270]
[57.05303574 -529.54656982]
[72.11325073 -529.48449707]
[86.80792999 -526.18591309]
[100.44976044 -519.80511475]
[112.40070343 -510.64056396]
[122.10177612 -499.12088013]
[129.09925842 -485.78488159]
[133.06584167 -471.25625610]
[133.81604004 -456.21463013]
[131.31472778 -441.36343384]
[125.67890930 -427.39733887]
[117.17218781 -414.96957397]
[106.19242859 -404.66137695]
[93.25318909 -396.95486450]
[78.95964050 -392.21054077]
[80.52016449 -377.29193115]
[82.08068848 -362.37332153]
[83.64121246 -347.45474243]
[85.20173645 -332.53613281]
[86.76226044 -317.61752319]
[97.02458954 -328.55755615]
[112.01189423 -329.17459106]
[123.13876343 -319.11511230]
[124.03121948 -304.14169312]
[114.17802429 -292.83175659]
[99.22353363 -291.66415405]
[87.73480988 -301.30691528]
[95.66073608 -288.69625854]
[88.12976074 -274.78240967]
[88.35308838 -259.78408813]
[96.27902222 -247.17341614]
[88.74804688 -233.25956726]
[103.76251221 -228.79953003]
[116.67985535 -219.90696716]
[126.22879791 -207.44248962]
[131.46504211 -192.61892700]
[131.86471558 -176.88337708]
[127.37667084 -161.77586365]
[118.42872620 -148.77867126]
[105.88690948 -139.17091370]
[90.97161865 -133.90261841]
[91.41822815 -118.90926361]
[91.86483002 -103.91591644]
[92.31143951 -88.92256927]
[93.31569672 -73.95622253]
[94.87622070 -59.03761673]
[96.43674469 -44.11901474]
[97.99726868 -29.20040894]
[107.19366455 -21.34210968]
[108.61585236 -8.92594624]
[100.95955658 1.45402920]
[102.29779053 16.39421463]
[105.32322693 20.08959007]
[106.05936432 25.72475815]
[103.44666290 31.79808617]
[104.33947754 46.77149200]
[105.23229218 61.74489594]
[106.12510681 76.71829987]
[115.18793488 81.32164764]
[121.54299164 89.25505066]
[124.05725861 99.10411072]
[122.28249359 109.11289978]
[116.53510284 117.49699402]
[107.83975983 122.76165009]
[108.06308746 137.75997925]
[108.28641510 152.75831604]
[108.50974274 167.75665283]
[108.73307037 182.75498962]
[108.95639801 197.75334167]
[109.17972565 212.75167847]
[109.40305328 227.75001526]
[109.62638092 242.74835205]
[117.56828308 256.43179321]
[110.02133179 269.27285767]
[110.24465942 284.27117920]
[125.38310242 297.48129272]
[125.91755676 317.26052856]
[111.95221710 330.84298706]
[112.84503174 345.81640625]
[113.73784637 360.78982544]
[115.52030945 375.68353271]
[118.18610382 390.44473267]
[120.85190582 405.20596313]
[123.51770020 419.96719360]
[126.43872833 423.17990112]
[128.02586365 426.79174805]
[128.31742859 430.33441162]
[127.49988556 433.40005493]
[125.87531281 435.68453979]
[127.65778351 450.57827759]
[129.44024658 465.47198486]
[131.22271729 480.36569214]
[133.94734192 483.74658203]
[135.31668091 487.44650269]
[135.39686584 491.00024414]
[134.39830017 494.01177979]
[132.64064026 496.19552612]
[133.53344727 511.16894531]
[134.42626953 526.14233398]
[135.43052673 541.10870361]
[136.54617310 556.06713867]
[137.66181946 571.02557373]
[151.53199768 577.62213135]
[160.23243713 590.27905273]
[161.42279053 605.59173584]
[154.78283691 619.44116211]
[142.09869385 628.10186768]
[126.78234863 629.24426270]
[112.95380402 622.56091309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[7 200]
[8 199]
[9 198]
[10 193]
[11 192]
[12 191]
[13 190]
[14 185]
[15 184]
[16 183]
[17 182]
[26 181]
[27 180]
[28 179]
[34 176]
[35 175]
[37 173]
[38 172]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[48 159]
[49 158]
[50 157]
[51 156]
[52 153]
[53 152]
[55 149]
[56 148]
[57 147]
[58 146]
[64 145]
[65 144]
[66 143]
[67 142]
[77 133]
[79 131]
[80 130]
[82 128]
[83 121]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
