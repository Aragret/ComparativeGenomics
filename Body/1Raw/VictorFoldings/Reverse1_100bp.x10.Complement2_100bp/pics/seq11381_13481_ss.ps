%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[18.37313843 409.36853027]
[25.76860237 422.44485474]
[31.35511589 436.39025879]
[35.03297806 450.95587158]
[36.73655701 465.88174438]
[36.43544769 480.90148926]
[34.13502502 495.74707031]
[29.87634277 510.15356445]
[23.73540115 523.86383057]
[15.82179356 536.63330078]
[6.27674770 548.23394775]
[-4.72939539 558.45886230]
[-17.00021744 567.12548828]
[-30.31673050 574.07916260]
[-44.44128418 579.19586182]
[-59.12181473 582.38415527]
[-74.09632874 583.58728027]
[-89.09757996 582.78369141]
[-103.85786438 579.98773193]
[-118.11376190 575.24926758]
[-131.61087036 568.65295410]
[-144.10829163 560.31640625]
[-155.38302612 550.38848877]
[-165.23384094 539.04632568]
[-173.48495483 526.49230957]
[-179.98908997 512.95056152]
[-184.63020325 498.66265869]
[-187.32543945 483.88366699]
[-188.02671814 468.87725830]
[-186.72152710 453.91131592]
[-183.43315125 439.25286865]
[-178.22027588 425.16354370]
[-171.17591858 411.89474487]
[-162.42581177 399.68331909]
[-152.12611389 388.74716187]
[-140.46061707 379.28143311]
[-127.63751984 371.45510864]
[-113.88566589 365.40780640]
[-99.45046234 361.24746704]
[-84.58953094 359.04833984]
[-69.56808472 358.84967041]
[-54.65419006 360.65499878]
[-40.11400604 364.43209839]
[-26.20702362 370.11358643]
[-13.18142509 377.59805298]
[-4.04262257 365.70339966]
[5.09617996 353.80877686]
[14.23498249 341.91415405]
[23.37378502 330.01950073]
[32.51258850 318.12487793]
[41.65139008 306.23025513]
[50.70138931 294.26791382]
[58.64807510 281.54586792]
[65.52748871 268.21643066]
[72.40689850 254.88700867]
[79.28630829 241.55758667]
[86.16572571 228.22814941]
[89.92202759 213.70610046]
[90.36862946 198.71275330]
[90.81523895 183.71939087]
[91.26184082 168.72604370]
[82.12316132 153.74433899]
[91.93096924 138.15946960]
[92.15429688 123.16113281]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.37762451 63.16362381]
[92.15429688 48.16528702]
[91.93096924 33.16695023]
[91.70764160 18.16861153]
[88.65045929 12.30642891]
[88.96543884 6.63211727]
[91.70764160 2.72195578]
[91.93096924 -12.27638149]
[92.15429688 -27.27471924]
[92.37762451 -42.27305603]
[92.60095215 -57.27139282]
[79.42118073 -61.23861694]
[67.73102570 -68.47976685]
[58.32605362 -78.49426270]
[51.84432602 -90.59303284]
[48.72306442 -103.94596863]
[49.16917419 -117.63882446]
[53.14556122 -130.73587036]
[60.37409210 -142.34376526]
[70.35504913 -151.67257690]
[82.40167999 -158.08947754]
[95.68744659 -161.16165161]
[96.35723114 -176.14669800]
[85.97066498 -187.75518799]
[86.86338806 -202.94261169]
[97.99431610 -212.77307129]
[90.88094330 -226.90496826]
[99.17883301 -239.27404785]
[99.84861755 -254.25909424]
[100.51840210 -269.24414062]
[101.18818665 -284.22915649]
[87.09272766 -289.76062012]
[75.55867004 -299.57101440]
[67.83714294 -312.59625244]
[64.76572418 -327.42343140]
[66.67756653 -342.44421387]
[73.36530304 -356.02923584]
[84.10347748 -366.70492554]
[97.72731781 -373.31323242]
[112.75898743 -375.13735962]
[127.56798553 -371.97946167]
[140.54792786 -364.18203735]
[150.29084778 -352.59091187]
[155.73991394 -338.46337891]
[156.30404663 -323.33193970]
[151.92205811 -308.83792114]
[143.06927490 -296.55349731]
[130.70596313 -287.81121826]
[116.17322540 -283.55938721]
[115.50344086 -268.57434082]
[114.83365631 -253.58930969]
[114.16387177 -238.60426331]
[121.32514954 -225.54420471]
[112.97935486 -212.10328674]
[123.18886566 -201.31896973]
[122.72307587 -186.11247253]
[111.34226990 -175.47691345]
[110.67248535 -160.49186707]
[126.03033447 -155.01879883]
[138.96315002 -145.06045532]
[148.20043945 -131.58056641]
[152.83030701 -115.88951874]
[152.38941956 -99.51696777]
[146.90931702 -84.06270599]
[136.91455078 -71.04034424]
[123.37239075 -61.72908783]
[107.59928894 -57.04806519]
[107.37596130 -42.04972839]
[107.15263367 -27.05139160]
[106.92930603 -12.05305386]
[106.70597839 2.94528365]
[106.70597839 17.94528389]
[106.92930603 32.94362259]
[107.15263367 47.94195938]
[107.37596130 62.94029617]
[110.61869812 69.58156586]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[107.15263367 123.38446045]
[106.92930603 138.38279724]
[115.33642578 148.16456604]
[114.84164429 160.65213013]
[106.25519562 169.17265320]
[105.80858612 184.16600037]
[105.36197662 199.15934753]
[104.91537476 214.15269470]
[111.97344208 200.91700745]
[121.44676971 189.28703308]
[132.98117065 179.69758606]
[146.14543152 172.50717163]
[160.44740295 167.98460388]
[175.35240173 166.29896545]
[190.30316162 167.51325989]
[204.74076843 171.58212280]
[218.12544250 178.35340881]
[229.95680237 187.57397461]
[239.79252625 198.89910889]
[247.26487732 211.90541077]
[252.09451294 226.10662842]
[254.10087585 240.97184753]
[253.20893860 255.94531250]
[249.45207214 270.46722412]
[242.97071838 283.99465942]
[234.00717163 296.02194214]
[222.89656067 306.09933472]
[210.05426025 313.85015869]
[195.96038818 318.98464966]
[181.14184570 321.31079102]
[166.15264893 320.74163818]
[151.55317688 317.29849243]
[137.88923645 311.11007690]
[125.67165375 302.40771484]
[115.35720825 291.51678467]
[107.33151245 278.84445190]
[101.89460754 264.86447144]
[99.24975586 250.09948730]
[99.49515533 235.10757446]
[92.61573792 248.43699646]
[85.73632812 261.76641846]
[78.85691833 275.09585571]
[71.97750092 288.42529297]
[85.17494965 281.29592896]
[100.17248535 281.02410889]
[113.61962128 287.67047119]
[122.51224518 299.75027466]
[124.86370850 314.56481934]
[120.14869690 328.80450439]
[109.42055511 339.28814697]
[95.07597351 343.67367554]
[80.31957245 340.98138428]
[68.44795990 331.81268311]
[62.11330032 318.21591187]
[62.73076630 303.22860718]
[60.11392212 311.98016357]
[53.54602051 315.36904907]
[44.40721893 327.26367188]
[35.26841736 339.15832520]
[26.12961578 351.05294800]
[16.99081230 362.94757080]
[7.85201025 374.84222412]
[-1.28679204 386.73684692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 210]
[46 209]
[47 208]
[48 207]
[49 206]
[50 205]
[51 204]
[52 202]
[53 190]
[54 189]
[55 188]
[56 187]
[57 186]
[58 155]
[59 154]
[60 153]
[61 152]
[63 149]
[64 148]
[65 147]
[66 145]
[67 144]
[68 142]
[69 141]
[70 140]
[71 139]
[74 138]
[75 137]
[76 136]
[77 135]
[78 134]
[89 125]
[90 124]
[93 121]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
