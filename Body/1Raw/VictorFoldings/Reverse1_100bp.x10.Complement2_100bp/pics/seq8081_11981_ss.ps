%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[8.76712894 392.71566772]
[13.05065536 407.12567139]
[14.96705151 422.03616333]
[14.46667862 437.06100464]
[11.56249619 451.81100464]
[6.32973051 465.90405273]
[-1.09607708 478.97515869]
[-10.52258110 490.68569946]
[-21.70561218 500.73239136]
[-34.35550308 508.85498047]
[-48.14458847 514.84307861]
[-62.71570206 518.54156494]
[-77.69141388 519.85467529]
[-92.68382263 518.74835205]
[-107.30458069 515.25128174]
[-121.17497253 509.45397949]
[-133.93574524 501.50671387]
[-145.25633240 491.61529541]
[-154.84352112 480.03591919]
[-162.44897461 467.06851196]
[-167.87570190 453.04901123]
[-170.98312378 438.34051514]
[-171.69076538 423.32400513]
[-169.98030090 408.38845825]
[-165.89601135 393.92074585]
[-159.54370117 380.29562378]
[-151.08790588 367.86596680]
[-140.74768066 356.95379639]
[-128.79081726 347.84173584]
[-115.52706146 340.76577759]
[-101.29995728 335.90927124]
[-86.47802734 333.39797974]
[-71.44519806 333.29693604]
[-56.59085464 335.60876465]
[-42.29975891 340.27362061]
[-35.42034531 326.94418335]
[-28.54093361 313.61474609]
[-21.66152000 300.28533936]
[-14.78210831 286.95590210]
[-15.50498581 284.24746704]
[-15.19857407 281.08950806]
[-13.68627930 277.87261963]
[-10.93603897 275.04406738]
[-7.07577610 273.05603027]
[0.58482134 260.15969849]
[8.24541855 247.26336670]
[15.90601635 234.36703491]
[23.17924500 221.24833679]
[30.05865860 207.91891479]
[30.33292580 200.53335571]
[37.14101410 194.44337463]
[44.21811676 181.21784973]
[51.29522324 167.99232483]
[50.62867737 164.52993774]
[51.60605621 160.57269287]
[54.44167328 156.89675903]
[58.99511337 154.34463501]
[66.65570831 141.44831848]
[74.31630707 128.55198669]
[81.97690582 115.65566254]
[76.22253418 102.13632965]
[79.47486115 87.80777740]
[90.50192261 78.09753418]
[105.12677002 76.68373871]
[112.78736877 63.78741455]
[120.44795990 50.89108658]
[120.84361267 35.07482910]
[133.99569702 28.08398247]
[141.07279968 14.85845375]
[147.55230713 1.33010840]
[154.03179932 -12.19823742]
[141.25479126 -4.34024858]
[126.34275818 -2.71809721]
[112.17498779 -7.64499569]
[101.48705292 -18.16963768]
[96.34262848 -32.25987625]
[97.73501587 -47.19511414]
[105.39537048 -60.09158325]
[117.84460449 -68.45918274]
[132.67895508 -70.68225861]
[147.03414917 -66.33156586]
[158.13841248 -56.24716187]
[163.84770203 -42.37618256]
[163.05928040 -27.39567184]
[171.83988953 -39.55712891]
[180.62049866 -51.71858215]
[189.40109253 -63.88003922]
[198.18170166 -76.04149628]
[199.98683167 -91.75938416]
[213.71015930 -97.54898071]
[222.49076843 -109.71044159]
[231.08932495 -122.00127411]
[239.50395203 -134.41877747]
[247.91856384 -146.83627319]
[256.33319092 -159.25376892]
[264.74780273 -171.67126465]
[273.16241455 -184.08876038]
[281.57702637 -196.50625610]
[289.99166870 -208.92375183]
[298.40628052 -221.34124756]
[287.07888794 -231.20265198]
[277.02276611 -242.35755920]
[268.38458252 -254.64328003]
[261.29028320 -267.88067627]
[255.84336853 -281.87667847]
[252.12321472 -296.42721558]
[250.18412781 -311.32006836]
[250.05433655 -326.33807373]
[251.73576355 -341.26223755]
[255.20388794 -355.87487793]
[260.40811157 -369.96292114]
[267.27255249 -383.32095337]
[275.69714355 -395.75411987]
[285.55895996 -407.08114624]
[296.71423340 -417.13687134]
[309.00030518 -425.77459717]
[322.23794556 -432.86837769]
[336.23416138 -438.31478882]
[350.78482056 -442.03439331]
[365.67776489 -443.97293091]
[380.69577026 -444.10214233]
[395.61987305 -442.42016602]
[410.23239136 -438.95150757]
[424.32025146 -433.74673462]
[437.67800903 -426.88177490]
[450.11087036 -418.45675659]
[461.43753052 -408.59448242]
[471.49282837 -397.43884277]
[480.13009644 -385.15246582]
[487.22338867 -371.91455078]
[492.66925049 -357.91812134]
[496.38830566 -343.36730957]
[498.32629395 -328.47430420]
[498.45495605 -313.45629883]
[496.77243042 -298.53228760]
[493.30319214 -283.91989136]
[488.09793091 -269.83221436]
[481.23248291 -256.47473145]
[472.80697632 -244.04216003]
[462.94430542 -232.71586609]
[451.78826904 -222.66101074]
[439.50155640 -214.02420044]
[426.26336670 -206.93139648]
[412.26675415 -201.48603821]
[397.71582031 -197.76753235]
[382.82272339 -195.83010864]
[367.80471802 -195.70201111]
[352.88076782 -197.38510132]
[338.26849365 -200.85485840]
[324.18103027 -206.06066895]
[310.82376099 -212.92662048]
[302.40914917 -200.50912476]
[293.99453735 -188.09162903]
[285.57992554 -175.67413330]
[277.16531372 -163.25663757]
[268.75067139 -150.83914185]
[260.33605957 -138.42164612]
[251.92144775 -126.00415802]
[243.50682068 -113.58666229]
[243.51229858 -108.81078339]
[240.51766968 -103.98075104]
[234.65222168 -100.92984009]
[225.87161255 -88.76837921]
[224.69453430 -73.92035675]
[210.34315491 -67.26089478]
[201.56254578 -55.09943390]
[192.78195190 -42.93798065]
[184.00134277 -30.77652359]
[175.22073364 -18.61506844]
[167.56015015 -5.71874142]
[161.08064270 7.80960417]
[154.60115051 21.33794975]
[169.07180786 17.38823891]
[182.16481018 24.70761490]
[186.37989807 39.10320663]
[179.30247498 52.32856369]
[164.98681641 56.80760193]
[151.63356018 49.97452545]
[146.89202881 35.74457932]
[147.04431152 50.63840485]
[133.34428406 58.55168533]
[125.68369293 71.44801331]
[118.02309418 84.34433746]
[123.77746582 97.86367035]
[120.52513885 112.19222260]
[109.49807739 121.90246582]
[94.87322998 123.31626129]
[87.21263123 136.21258545]
[79.55204010 149.10891724]
[71.89144135 162.00523376]
[64.52075195 175.06942749]
[57.44364548 188.29495239]
[50.36653900 201.52047729]
[43.38808823 214.79832458]
[36.50867462 228.12776184]
[36.86762619 232.45500183]
[35.92565155 236.28608704]
[33.99847412 239.27296448]
[31.48242378 241.20585632]
[28.80234337 242.02763367]
[21.14174652 254.92396545]
[13.48114777 267.82028198]
[5.82055092 280.71661377]
[-1.45267868 293.83529663]
[-8.33209133 307.16473389]
[-15.21150398 320.49417114]
[-22.09091568 333.82360840]
[-28.97032928 347.15301514]
[-16.88888359 356.09924316]
[-6.39906073 366.86770630]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[44 203]
[45 202]
[46 201]
[47 200]
[48 195]
[49 194]
[51 193]
[52 192]
[53 191]
[57 190]
[58 189]
[59 188]
[60 187]
[64 183]
[65 182]
[66 181]
[68 179]
[69 172]
[70 171]
[71 170]
[84 169]
[85 168]
[86 167]
[87 166]
[88 165]
[90 163]
[91 162]
[92 159]
[93 158]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[100 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
