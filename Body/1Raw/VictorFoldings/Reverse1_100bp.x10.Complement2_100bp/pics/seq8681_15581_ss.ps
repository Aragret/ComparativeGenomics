%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[160.69152832 658.57623291]
[157.58741760 643.90093994]
[154.48330688 629.22564697]
[151.37919617 614.55035400]
[148.27508545 599.87500000]
[140.16671753 612.49462891]
[125.88148499 617.06976318]
[111.95039368 611.50878906]
[104.74255371 598.35406494]
[107.55329132 583.61975098]
[119.09757996 574.04217529]
[134.09751892 574.00012207]
[145.69628906 583.51434326]
[144.13577271 568.59576416]
[135.11637878 556.74249268]
[141.37599182 542.21228027]
[139.81547546 527.29364014]
[124.88119507 526.10723877]
[110.41539001 522.19567871]
[96.91109467 515.69085693]
[84.82886505 506.81283569]
[74.58105469 495.86291504]
[66.51773834 483.21298218]
[60.91476440 469.29306030]
[57.96431351 454.57666016]
[57.76830292 439.56469727]
[60.33488083 424.76843262]
[65.57807159 410.69201660]
[73.32069397 397.81536865]
[83.30030060 386.57775879]
[95.17812347 377.36288452]
[108.55052948 370.48574829]
[122.96277618 366.18188477]
[121.40225983 351.26327515]
[119.84173584 336.34466553]
[118.28121185 321.42605591]
[116.72068787 306.50747681]
[115.16016388 291.58886719]
[104.10183716 277.96240234]
[111.73957062 261.20690918]
[109.95709991 246.31318665]
[108.17463684 231.41946411]
[106.39217377 216.52575684]
[104.60970306 201.63203430]
[92.77845001 192.65667725]
[90.75861359 177.57772827]
[100.25300598 165.22886658]
[98.47054291 150.33515930]
[96.68807983 135.44143677]
[94.90560913 120.54772186]
[84.08045959 113.95456696]
[78.96202850 102.35908508]
[81.38512421 89.91793060]
[90.48114777 81.09092712]
[88.92062378 66.17232513]
[87.36009979 51.25371933]
[77.85016632 42.54027557]
[76.85753632 30.08241081]
[84.37064362 20.60191727]
[83.03240967 5.66173172]
[79.14986420 -2.60649967]
[81.78716278 -9.51058769]
[80.67151642 -24.46903992]
[79.55587006 -39.42749405]
[68.83782196 -54.40097046]
[77.06857300 -69.90005493]
[75.73033905 -84.84024048]
[74.39210510 -99.78042603]
[73.05387115 -114.72061157]
[69.17132568 -122.98883820]
[71.80862427 -129.89292908]
[70.69297791 -144.85137939]
[69.57733154 -159.80982971]
[68.46168518 -174.76828003]
[64.70266724 -183.09341431]
[67.44246674 -189.95745850]
[66.54965210 -204.93087769]
[58.00466919 -218.24604797]
[64.97071075 -231.41128540]
[64.07789612 -246.38468933]
[49.09419250 -247.45411682]
[34.37828064 -250.47023010]
[20.18196297 -255.38139343]
[6.74816179 -262.10360718]
[-5.69325542 -270.52178955]
[-16.92939949 -280.49197388]
[-26.76800346 -291.84347534]
[-35.04071808 -304.38211060]
[-41.60598373 -317.89331055]
[-46.35146332 -332.14584351]
[-49.19595337 -346.89590454]
[-50.09078217 -361.89105225]
[-49.02063751 -376.87469482]
[-46.00382996 -391.59048462]
[-41.09197998 -405.78656006]
[-34.36914062 -419.22003174]
[-25.95034409 -431.66104126]
[-15.97964954 -442.89672852]
[-4.62766695 -452.73477173]
[7.91135597 -461.00689697]
[21.42285919 -467.57153320]
[35.67564392 -472.31631470]
[50.42582703 -475.16012573]
[65.42101288 -476.05422974]
[80.40460968 -474.98336792]
[95.12023926 -471.96585083]
[109.31608582 -467.05334473]
[122.74925232 -460.32986450]
[135.18986511 -451.91046143]
[146.42506409 -441.93923950]
[156.26258850 -430.58679199]
[164.53410339 -418.04736328]
[171.09808350 -404.53555298]
[175.84220886 -390.28253174]
[178.68528748 -375.53222656]
[179.57868958 -360.53698730]
[178.50712585 -345.55343628]
[175.48890686 -330.83798218]
[170.57571411 -316.64236450]
[163.85159302 -303.20950317]
[155.43161011 -290.76928711]
[145.45985413 -279.53457642]
[134.10693359 -269.69760132]
[121.56712341 -261.42666626]
[108.05499268 -254.86332703]
[93.80175781 -250.11988831]
[79.05130005 -247.27751160]
[79.94411469 -232.30409241]
[88.42523956 -220.05992126]
[81.52305603 -205.82368469]
[82.41587830 -190.85028076]
[83.42013550 -175.88394165]
[84.53578186 -160.92547607]
[85.65143585 -145.96702576]
[86.76708221 -131.00857544]
[87.99405670 -116.05884552]
[89.33229065 -101.11865997]
[90.67052460 -86.17847443]
[92.00875854 -71.23828888]
[101.08713531 -63.24393845]
[102.32431793 -50.80797577]
[94.51432037 -40.54314423]
[95.62996674 -25.58469009]
[96.74562073 -10.62623596]
[97.97259521 4.32349730]
[99.31082916 19.26368332]
[110.16505432 33.05327225]
[102.27870178 49.69319534]
[103.83922577 64.61180115]
[105.39974976 79.53040314]
[118.45440674 89.62712097]
[120.29349518 106.02790070]
[109.79933167 118.76525879]
[111.58179474 133.65896606]
[113.36425781 148.55268860]
[115.14672852 163.44641113]
[127.28704834 173.20603943]
[128.88255310 188.33576965]
[119.50342560 199.84956360]
[121.28588867 214.74328613]
[123.06835175 229.63700867]
[124.85082245 244.53071594]
[126.63328552 259.42443848]
[136.27189636 267.99533081]
[137.44989014 280.43704224]
[130.07876587 290.02832031]
[131.63929749 304.94692993]
[133.19981384 319.86553955]
[134.76034546 334.78414917]
[136.32086182 349.70275879]
[137.88137817 364.62136841]
[152.87229919 365.84957886]
[167.37840271 369.81054688]
[180.90603638 376.36795044]
[192.99514771 385.29711914]
[203.23486328 396.29278564]
[211.27754211 408.97946167]
[216.85052490 422.92431641]
[219.76533508 437.65188599]
[219.92417908 452.66027832]
[217.32308960 467.43838501]
[212.05209351 481.48312378]
[204.29209900 494.31671143]
[194.30862427 505.50280762]
[182.44277954 514.66143799]
[169.09956360 521.48187256]
[154.73406982 525.73315430]
[156.29460144 540.65173340]
[165.42561340 553.57208252]
[159.05438232 567.03521729]
[160.61489868 581.95385742]
[162.95039368 596.77093506]
[166.05450439 611.44622803]
[169.15861511 626.12152100]
[172.26271057 640.79681396]
[175.36682129 655.47210693]
[190.35261536 657.87854004]
[203.45516968 665.53930664]
[212.90249634 677.41833496]
[217.41691589 691.90917969]
[216.38789368 707.05206299]
[209.95457458 720.79895020]
[198.98704529 731.29071045]
[184.96855164 737.10845947]
[169.79498291 737.46539307]
[155.51844788 732.31323242]
[144.06973267 722.34875488]
[136.99716187 708.91955566]
[135.25726318 693.84185791]
[139.08534241 679.15472412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[13 191]
[14 190]
[16 188]
[17 187]
[33 171]
[34 170]
[35 169]
[36 168]
[37 167]
[38 166]
[40 163]
[41 162]
[42 161]
[43 160]
[44 159]
[47 156]
[48 155]
[49 154]
[50 153]
[54 150]
[55 149]
[56 148]
[59 146]
[60 145]
[62 144]
[63 143]
[64 142]
[66 139]
[67 138]
[68 137]
[69 136]
[71 135]
[72 134]
[73 133]
[74 132]
[76 131]
[77 130]
[79 128]
[80 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
