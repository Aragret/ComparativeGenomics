%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[43.18240738 553.13159180]
[31.18523788 562.28198242]
[17.22818947 568.01464844]
[2.26287413 569.93859863]
[-12.69034672 567.92279053]
[-26.61193848 562.10455322]
[-38.55270386 552.88067627]
[-47.69849777 540.87994385]
[-53.42575073 526.92071533]
[-55.34396744 511.95465088]
[-53.32235718 497.00219727]
[-47.49876022 483.08285522]
[-38.27024078 471.14566040]
[-26.26600838 462.00448608]
[-12.30453682 456.28262329]
[2.66226006 454.37017822]
[4.66627359 439.50466919]
[6.67028761 424.63912964]
[4.44859934 417.59030151]
[8.81639576 409.56784058]
[11.04151344 394.73379517]
[13.26663017 379.89974976]
[11.47614193 376.86224365]
[11.06794643 372.80657959]
[12.50455284 368.39187622]
[15.93661499 364.45892334]
[18.82188797 349.73904419]
[21.70716095 335.01916504]
[24.59243202 320.29925537]
[27.47770500 305.57937622]
[30.36297798 290.85946655]
[28.56478119 283.69091797]
[33.40233994 275.94262695]
[36.50645065 261.26733398]
[23.98260307 269.52282715]
[9.06829929 267.92172241]
[-1.41783977 257.19601440]
[-2.68169284 242.24934387]
[5.85455656 229.91514587]
[20.28824997 225.83244324]
[34.02049637 231.86778259]
[40.77332687 245.26374817]
[45.38733673 230.99101257]
[50.00134277 216.71827698]
[54.61535263 202.44554138]
[58.69501877 188.01098633]
[62.23469162 173.43461609]
[65.77436829 158.85824585]
[55.32120132 169.61608887]
[41.57748795 175.62528992]
[26.58203125 175.99440002]
[12.55931377 170.66867065]
[1.58952177 160.43814087]
[-4.70004034 146.82044983]
[-5.37635326 131.83570862]
[-0.33909053 117.70680237]
[9.66450024 106.52967834]
[23.15044594 99.96238708]
[38.11818695 98.97915649]
[52.34734726 103.72584534]
[63.72711563 113.49829865]
[70.56937408 126.84683990]
[71.85931396 141.78938293]
[78.33880615 128.26104736]
[84.81830597 114.73269653]
[91.29779816 101.20435333]
[90.53232574 98.25417328]
[90.82339478 94.96026611]
[92.30036163 91.71341705]
[94.94644165 88.94673920]
[98.58686066 87.08118439]
[105.86009216 73.96249390]
[101.73018646 58.94311905]
[109.29315948 45.74250412]
[123.63729095 41.89783478]
[130.91052246 28.77914047]
[138.18374634 15.66044617]
[145.45698547 2.54175210]
[145.38154602 -13.27927399]
[158.31965637 -20.65860939]
[165.59288025 -33.77730179]
[171.97149658 -47.35351181]
[177.42684937 -61.32630920]
[182.88220215 -75.29910278]
[188.33757019 -89.27190399]
[193.79292297 -103.24470520]
[199.24827576 -117.21749878]
[204.70362854 -131.19029236]
[208.89064026 -145.59408569]
[211.77592468 -160.31396484]
[214.66119385 -175.03385925]
[217.43679810 -189.77482605]
[220.10260010 -204.53604126]
[222.21722412 -219.38624573]
[223.77774048 -234.30484009]
[225.33827209 -249.22344971]
[226.89878845 -264.14205933]
[212.75729370 -269.38314819]
[200.36395264 -277.97708130]
[190.49783325 -289.38366699]
[183.77909851 -302.88589478]
[180.63012695 -317.63494873]
[181.24885559 -332.70373535]
[185.59637451 -347.14498901]
[193.39941406 -360.05093384]
[204.16744995 -370.61029053]
[217.22361755 -378.15927124]
[231.74717712 -382.22338867]
[246.82518005 -382.54711914]
[261.50979614 -379.11013794]
[274.87792969 -372.12850952]
[286.08929443 -362.04104614]
[294.43908691 -349.48193359]
[299.40243530 -335.24057007]
[300.66738892 -320.21224976]
[298.15435791 -305.34161377]
[292.02136230 -291.56347656]
[282.65393066 -279.74392700]
[270.64086914 -270.62594604]
[256.73736572 -264.78271484]
[241.81739807 -262.58154297]
[240.25686646 -247.66293335]
[238.69635010 -232.74432373]
[237.13583374 -217.82571411]
[250.25437927 -225.09921265]
[264.17785645 -219.51914978]
[268.64236450 -205.19894409]
[260.35687256 -192.69493103]
[245.42909241 -191.22459412]
[234.86381531 -201.87023926]
[232.19801331 -187.10902405]
[234.10275269 -179.96803284]
[229.38108826 -172.14859009]
[226.49580383 -157.42869568]
[223.61053467 -142.70880127]
[234.01263428 -153.51603699]
[248.04331970 -158.82077026]
[262.99343872 -157.59875488]
[275.97640991 -150.08592224]
[284.48541260 -137.73291016]
[286.87747192 -122.92486572]
[282.69073486 -108.52101135]
[272.73358154 -97.30249023]
[258.92858887 -91.43542480]
[243.94129944 -92.05266571]
[230.66551208 -99.03501892]
[221.66456604 -111.03431702]
[218.67643738 -125.73493958]
[213.22106934 -111.76214600]
[207.76571655 -97.78934479]
[202.31036377 -83.81654358]
[196.85501099 -69.84375000]
[191.39964294 -55.87095261]
[185.94429016 -41.89815521]
[198.89823914 -49.46089935]
[213.88870239 -48.92603683]
[226.27072144 -40.45929337]
[232.20758057 -26.68418312]
[229.85969543 -11.86907578]
[219.95457458 -0.60459137]
[205.56143188 3.61884618]
[191.14013672 -0.50744140]
[181.15928650 -11.70487881]
[178.71157837 -26.50407410]
[171.43835449 -13.38537979]
[172.03401184 1.49730980]
[158.57566833 9.81498146]
[151.30244446 22.93367577]
[144.02922058 36.05236816]
[136.75598145 49.17106247]
[141.09440613 63.37366104]
[133.90519714 76.78149414]
[118.97879028 81.23572540]
[111.70555878 94.35441589]
[104.82614136 107.68384552]
[98.34664917 121.21218872]
[91.86714935 134.74053955]
[85.38765717 148.26887512]
[80.35073853 162.39791870]
[76.81106567 176.97428894]
[73.27139282 191.55065918]
[87.24408722 186.09503174]
[100.29723358 193.48526001]
[102.80853271 208.27354431]
[92.92676544 219.55850220]
[77.93638611 219.02130127]
[68.88808441 207.05955505]
[64.27407837 221.33229065]
[59.66006851 235.60502625]
[55.04605865 249.87774658]
[51.18175507 264.37145996]
[48.07764435 279.04675293]
[45.08287048 293.74475098]
[42.19759750 308.46463013]
[39.31232452 323.18453979]
[36.42705154 337.90441895]
[33.54177856 352.62432861]
[30.65650558 367.34420776]
[28.10067368 382.12487793]
[25.87555695 396.95889282]
[23.65044022 411.79293823]
[21.53581619 426.64315796]
[19.53180122 441.50866699]
[17.52778816 456.37420654]
[31.45386887 462.18167114]
[43.40175247 471.39636230]
[52.55681229 483.38998413]
[58.29484558 497.34481812]
[60.22461700 512.30938721]
[58.21455383 527.26342773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 204]
[17 203]
[18 202]
[20 201]
[21 200]
[22 199]
[26 198]
[27 197]
[28 196]
[29 195]
[30 194]
[31 193]
[33 192]
[34 191]
[42 190]
[43 189]
[44 188]
[45 187]
[46 181]
[47 180]
[48 179]
[63 178]
[64 177]
[65 176]
[66 175]
[71 174]
[72 173]
[75 170]
[76 169]
[77 168]
[78 167]
[80 165]
[81 164]
[82 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 149]
[88 148]
[89 135]
[90 134]
[91 133]
[92 131]
[93 130]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
