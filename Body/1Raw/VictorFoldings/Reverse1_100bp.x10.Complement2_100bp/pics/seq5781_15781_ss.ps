%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[174.56336975 269.69152832]
[180.37730408 255.85038757]
[187.54051208 242.65693665]
[195.98176575 230.24227905]
[205.61720276 218.72981262]
[195.12969971 208.00543213]
[184.64219666 197.28105164]
[174.15470886 186.55667114]
[163.66720581 175.83229065]
[153.17970276 165.10791016]
[142.69219971 154.38352966]
[132.20469666 143.65914917]
[121.71720123 132.93476868]
[107.28686523 129.24496460]
[103.17008972 113.96875000]
[89.75897217 110.01482391]
[86.10552979 96.51875305]
[75.61802673 85.79437256]
[60.43755722 81.33748627]
[57.07092285 66.82834625]
[45.80983353 76.74255371]
[34.04530334 86.05381012]
[21.80958557 94.73660278]
[9.13621235 102.76712036]
[-3.94007778 110.12335968]
[-17.38344383 116.78516388]
[-31.15703964 122.73425293]
[-45.22311020 127.95433807]
[-59.54310226 132.43110657]
[-74.07776642 136.15229797]
[-88.78726196 139.10768127]
[-103.63127136 141.28919983]
[-118.56911469 142.69084167]
[-133.55982971 143.30877686]
[-148.56236267 143.14129639]
[-163.53555298 142.18888855]
[-178.43838501 140.45414734]
[-193.22999573 137.94181824]
[-207.86985779 134.65881348]
[-222.31782532 130.61410522]
[-236.53431702 125.81878662]
[-250.48036194 120.28600311]
[-264.11770630 114.03092957]
[-277.40902710 107.07070160]
[-290.31784058 99.42439270]
[-302.80880737 91.11296844]
[-314.84765625 82.15921021]
[-326.40139771 72.58765411]
[-337.43835449 62.42454147]
[-347.92831421 51.69772339]
[-357.84246826 40.43660736]
[-367.15371704 28.67205048]
[-375.83645630 16.43630600]
[-383.86694336 3.76290798]
[-391.22314453 -9.31340408]
[-397.88488770 -22.75679016]
[-403.83395386 -36.53040314]
[-409.05398560 -50.59648895]
[-413.53073120 -64.91649628]
[-417.25186157 -79.45117188]
[-420.20721436 -94.16067505]
[-422.38867188 -109.00469208]
[-423.79028320 -123.94253540]
[-424.40817261 -138.93325806]
[-424.24063110 -153.93577576]
[-423.28817749 -168.90896606]
[-421.55340576 -183.81179810]
[-419.04101562 -198.60340881]
[-415.75796509 -213.24325562]
[-411.71322632 -227.69120789]
[-406.91784668 -241.90768433]
[-401.38504028 -255.85371399]
[-395.12991333 -269.49105835]
[-388.16964722 -282.78234863]
[-380.52331543 -295.69113159]
[-372.21185303 -308.18206787]
[-363.25805664 -320.22088623]
[-353.68646240 -331.77459717]
[-343.52331543 -342.81155396]
[-332.79647827 -353.30145264]
[-321.53530884 -363.21560669]
[-309.77072144 -372.52679443]
[-297.53497314 -381.20950317]
[-284.86154175 -389.23995972]
[-271.78521729 -396.59609985]
[-258.34179688 -403.25781250]
[-244.56816101 -409.20684814]
[-230.50205994 -414.42684937]
[-216.18205261 -418.90353394]
[-201.64735413 -422.62460327]
[-186.93785095 -425.57992554]
[-172.09382629 -427.76135254]
[-157.15597534 -429.16290283]
[-142.16525269 -429.78073120]
[-127.16272736 -429.61318970]
[-112.18953705 -428.66067505]
[-97.28672028 -426.92584229]
[-82.49512482 -424.41342163]
[-67.85528564 -421.13031006]
[-53.40733337 -417.08554077]
[-39.19087219 -412.29013062]
[-25.24486542 -406.75726318]
[-11.60754108 -400.50210571]
[1.68372428 -393.54180908]
[14.59249878 -385.89541626]
[27.08340073 -377.58392334]
[39.12219238 -368.63009644]
[50.67588043 -359.05847168]
[61.71279144 -348.89526367]
[72.20267487 -338.16839600]
[82.11677551 -326.90722656]
[91.42793274 -315.14260864]
[100.11061096 -302.90679932]
[108.14101410 -290.23336792]
[115.49713898 -277.15701294]
[122.15881348 -263.71359253]
[128.10778809 -249.93992615]
[133.32774353 -235.87380981]
[137.80438232 -221.55377197]
[141.52543640 -207.01908875]
[144.48069763 -192.30955505]
[146.66206360 -177.46553040]
[148.06358337 -162.52767944]
[148.68136597 -147.53694153]
[148.51376343 -132.53442383]
[147.56121826 -117.56124115]
[145.82633972 -102.65843201]
[143.31388855 -87.86683655]
[140.03073120 -73.22701263]
[135.98590088 -58.77907181]
[131.19046021 -44.56262207]
[125.65755463 -30.61663437]
[119.40235138 -16.97932816]
[112.44200134 -3.68808436]
[104.79557800 9.22066784]
[96.48404694 21.71154404]
[87.53017426 33.75030899]
[77.95851898 45.30396652]
[67.79530334 56.34084702]
[82.22563934 60.03065491]
[86.34240723 75.30686951]
[96.82991028 86.03125000]
[110.24102783 89.98517609]
[113.89447021 103.48124695]
[129.07493591 107.93813324]
[132.44157410 122.44727325]
[142.92907715 133.17164612]
[153.41658020 143.89602661]
[163.90408325 154.62040710]
[174.39158630 165.34478760]
[184.87908936 176.06916809]
[195.36657715 186.79354858]
[205.85408020 197.51792908]
[216.34158325 208.24230957]
[228.06636047 198.86637878]
[240.66642761 190.70445251]
[254.01655579 183.83767700]
[267.98406982 178.33427429]
[282.43014526 174.24896240]
[297.21118164 171.62232971]
[312.18029785 170.48049927]
[327.18875122 170.83479309]
[342.08731079 172.68170166]
[356.72796631 176.00288391]
[370.96514893 180.76530457]
[384.65740967 186.92164612]
[397.66867065 194.41073608]
[409.86956787 203.15811157]
[421.13885498 213.07685852]
[431.36456299 224.06838989]
[440.44500732 236.02346802]
[448.28997803 248.82327271]
[454.82153320 262.34057617]
[459.97470093 276.44107056]
[463.69827271 290.98455811]
[465.95526123 305.82656860]
[466.72323608 320.81951904]
[465.99456787 335.81442261]
[463.77648926 350.66229248]
[460.09103394 365.21551514]
[454.97482300 379.32943726]
[448.47875977 392.86383057]
[440.66735840 405.68414307]
[431.61825562 417.66296387]
[421.42138672 428.68127441]
[410.17813110 438.62951660]
[398.00021362 447.40884399]
[385.00863647 454.93200684]
[371.33258057 461.12420654]
[357.10791016 465.92395020]
[342.47601318 469.28347778]
[327.58233643 471.16943359]
[312.57489014 471.56307983]
[297.60281372 470.46047974]
[282.81491089 467.87258911]
[268.35818481 463.82516479]
[254.37631226 458.35836792]
[241.00823975 451.52661133]
[228.38682556 443.39773560]
[216.63751221 434.05258179]
[205.87707520 423.58398438]
[196.21246338 412.09597778]
[187.73973083 399.70278931]
[180.54307556 386.52755737]
[174.69404602 372.70123291]
[170.25074768 358.36120605]
[167.25733948 343.65005493]
[165.74360657 328.71395874]
[165.72456360 313.70135498]
[167.20040894 298.76144409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[15 144]
[17 142]
[18 141]
[20 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
