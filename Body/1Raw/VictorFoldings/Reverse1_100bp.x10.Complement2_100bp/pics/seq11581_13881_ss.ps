%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[26.99773598 584.77642822]
[11.94636059 587.55395508]
[-2.66831255 583.00750732]
[-13.48793697 572.18188477]
[-18.02624321 557.56469727]
[-15.24036121 542.51489258]
[-5.77046585 530.49072266]
[8.20732880 524.25537109]
[9.10014534 509.28195190]
[9.99296093 494.30856323]
[10.88577652 479.33514404]
[11.77859306 464.36175537]
[1.77901256 475.54244995]
[-12.64916897 479.64459229]
[-27.03522301 475.39709473]
[-36.92147446 464.11602783]
[-39.24456024 449.29702759]
[-33.28464508 435.53186035]
[-20.88847923 427.08584595]
[-5.89714336 426.57608032]
[7.04413080 434.16049194]
[13.92539978 447.48925781]
[16.81067276 432.76937866]
[19.69594383 418.04946899]
[22.58121681 403.32958984]
[25.46648979 388.60968018]
[13.06694126 397.05072021]
[-1.86954737 395.67184448]
[-12.51421356 385.10345459]
[-14.00046062 370.17727661]
[-5.64879513 357.71734619]
[8.72251320 353.42019653]
[22.54309654 359.25039673]
[29.49462128 372.54434204]
[33.89561844 358.20449829]
[37.75992584 343.71081543]
[41.08218384 329.08334351]
[44.40444565 314.45587158]
[39.67819595 300.33102417]
[50.27984619 288.58728027]
[53.60210800 273.95980835]
[56.92436600 259.33236694]
[45.72061157 247.33430481]
[43.85733795 230.85734558]
[52.26570511 216.37284851]
[67.80329132 209.68858337]
[70.90740204 195.01327515]
[64.57410431 184.70716858]
[67.04008484 172.45553589]
[77.51805878 164.93389893]
[80.84032440 150.30644226]
[84.16258240 135.67898560]
[87.48484039 121.05152130]
[90.80709839 106.42406464]
[78.16172791 114.49217987]
[63.27291489 112.66919708]
[52.94762802 101.78855133]
[51.90644836 86.82472992]
[60.62538910 74.61898804]
[75.11827087 70.75163269]
[88.75914001 76.99076080]
[95.31176758 90.48577118]
[100.13777161 76.28331757]
[104.96376801 62.08086014]
[109.78976440 47.87840652]
[114.61576080 33.67594910]
[119.44175720 19.47349548]
[124.26775360 5.27103901]
[121.38182068 -10.28472996]
[132.80252075 -19.84595108]
[137.62850952 -34.04840851]
[142.45451355 -48.25086212]
[147.28050232 -62.45331955]
[152.10650635 -76.65577698]
[145.37310791 -90.70209503]
[150.46968079 -105.03665161]
[163.90219116 -111.36936188]
[168.72819519 -125.57181549]
[173.55418396 -139.77427673]
[178.38018799 -153.97673035]
[181.91986084 -168.55310059]
[176.31529236 -183.34835815]
[185.85496521 -194.78704834]
[188.08007812 -209.62109375]
[190.30520630 -224.45513916]
[192.53031921 -239.28918457]
[193.42314148 -254.26258850]
[192.97653198 -269.25595093]
[192.52992249 -284.24929810]
[180.50071716 -275.28836060]
[165.95657349 -278.95819092]
[159.61888123 -292.55355835]
[166.15956116 -306.05242920]
[180.75706482 -309.50396729]
[192.64990234 -300.36526489]
[193.31968689 -315.35031128]
[193.98947144 -330.33532715]
[179.75312805 -335.41647339]
[167.64796448 -344.46945190]
[158.75033569 -356.68927002]
[153.85144043 -370.98934937]
[153.38687134 -386.09811401]
[157.39794922 -400.67218018]
[165.52799988 -413.41555786]
[177.05410767 -423.19512939]
[190.95138550 -429.14132690]
[205.98408508 -430.72540283]
[220.81552124 -427.80648804]
[234.12687683 -420.64416504]
[244.73454285 -409.87527466]
[251.69526672 -396.45736694]
[254.39010620 -381.58358765]
[252.57945251 -366.57650757]
[246.42430115 -352.77050781]
[236.47196960 -341.39321899]
[223.60740662 -333.45632935]
[208.97450256 -329.66555786]
[208.30471802 -314.68051147]
[207.63493347 -299.69546509]
[207.52326965 -284.69589233]
[207.96987915 -269.70254517]
[208.41648865 -254.70919800]
[216.16661072 -267.55191040]
[228.67390442 -275.83248901]
[243.52340698 -277.95202637]
[257.84790039 -273.50131226]
[268.88156128 -263.33969116]
[274.49395752 -249.42921448]
[273.60140991 -234.45579529]
[266.37628174 -221.31054688]
[254.21360779 -212.53163147]
[239.46183777 -209.81408691]
[224.96928406 -213.68264771]
[213.53422546 -223.39036560]
[207.36436462 -237.06407166]
[205.13925171 -222.23002625]
[202.91412354 -207.39598083]
[200.68901062 -192.56193542]
[206.45272827 -178.82771301]
[196.75390625 -166.32798767]
[206.66305542 -177.58891296]
[220.44287109 -183.51486206]
[235.43266296 -182.96162415]
[248.73814392 -176.03601074]
[257.79025269 -164.07525635]
[260.84112549 -149.38879395]
[257.30172729 -134.81234741]
[247.85543823 -123.16041565]
[234.32620239 -116.68277740]
[219.32629395 -116.63018036]
[205.75196838 -123.01277924]
[196.22419739 -134.59819031]
[192.58264160 -149.15072632]
[187.75663757 -134.94827271]
[182.93064880 -120.74581909]
[178.10464478 -106.54335785]
[184.89808655 -93.33787537]
[180.20614624 -78.86581421]
[166.30895996 -71.82977295]
[161.48297119 -57.62731934]
[156.65696716 -43.42486572]
[151.83096313 -29.22240829]
[147.00497437 -15.01995373]
[150.23609924 -0.48003945]
[138.47021484 10.09703636]
[133.64421082 24.29949188]
[128.81822205 38.50194931]
[123.99221802 52.70440292]
[119.16622162 66.90686035]
[114.34022522 81.10931396]
[109.51422882 95.31176758]
[105.43456268 109.74632263]
[102.11229706 124.37378693]
[98.79003906 139.00125122]
[95.46778107 153.62870789]
[92.14552307 168.25616455]
[97.99864960 185.71533203]
[85.58270264 198.11738586]
[82.47859192 212.79269409]
[92.44775391 222.31144714]
[96.38052368 235.40922546]
[93.35210419 248.63414001]
[84.25776672 258.55569458]
[71.55182648 262.65460205]
[68.22956848 277.28207397]
[64.90731049 291.90954590]
[69.39592743 307.08065796]
[59.03190613 317.77813721]
[55.70964432 332.40560913]
[52.38738632 347.03305054]
[66.27729797 341.36999512]
[79.43902588 348.56506348]
[82.17022705 363.31433105]
[72.45756531 374.74517822]
[57.46085358 374.43121338]
[48.23546600 362.60549927]
[43.83446884 376.94534302]
[40.18638229 391.49496460]
[37.30110931 406.21484375]
[34.41583633 420.93475342]
[31.53056335 435.65463257]
[28.64529037 450.37454224]
[26.75199890 465.25457764]
[25.85918236 480.22796631]
[24.96636581 495.20138550]
[24.07355118 510.17477417]
[23.18073463 525.14819336]
[36.31853485 533.00036621]
[44.29249191 546.06463623]
[45.27024460 561.33886719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[34 197]
[35 196]
[36 190]
[37 189]
[38 188]
[40 186]
[41 185]
[42 184]
[46 179]
[47 178]
[50 176]
[51 175]
[52 174]
[53 173]
[54 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 166]
[68 165]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[77 156]
[78 155]
[79 154]
[80 153]
[81 140]
[83 138]
[84 137]
[85 136]
[86 135]
[87 122]
[88 121]
[89 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
