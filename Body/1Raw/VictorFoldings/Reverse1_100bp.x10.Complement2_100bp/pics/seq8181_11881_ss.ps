%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[83.28217316 651.19183350]
[82.38935852 636.21838379]
[81.49654388 621.24499512]
[73.01541901 609.00079346]
[79.91760254 594.76458740]
[79.02478027 579.79119873]
[78.13196564 564.81774902]
[77.23915100 549.84436035]
[66.80030823 535.73773193]
[75.17858887 519.33996582]
[74.06294250 504.38153076]
[72.94729614 489.42306519]
[71.72032166 474.47332764]
[70.38208771 459.53314209]
[69.04385376 444.59295654]
[66.98168945 442.69412231]
[65.54743958 439.86401367]
[65.09956360 436.33770752]
[65.90490723 432.47558594]
[68.09786987 428.72793579]
[67.65126801 413.73458862]
[67.20465851 398.74124146]
[53.90507507 394.26235962]
[42.90974426 385.49417114]
[35.55214691 373.47396851]
[32.73347473 359.63497925]
[34.81229019 345.63549805]
[41.55904770 333.16015625]
[52.18126297 323.71716309]
[65.41652679 318.45611572]
[65.19319916 303.45776367]
[64.96987152 288.45944214]
[64.74654388 273.46109009]
[64.52321625 258.46276855]
[64.29988861 243.46443176]
[64.07656097 228.46607971]
[62.16134262 226.41911316]
[60.94155884 223.49017334]
[60.75720215 219.94032288]
[61.84756088 216.14880371]
[64.31318665 212.57463074]
[64.98297119 197.58959961]
[65.65275574 182.60455322]
[58.23172379 195.64021301]
[47.47881317 206.09844971]
[34.24204254 213.15451050]
[19.56532097 216.25190735]
[4.60611725 215.14637756]
[-9.45582581 209.92509460]
[-21.51152229 200.99984741]
[-30.61021233 189.07449341]
[-36.03433228 175.08953857]
[-37.35611725 160.14788818]
[-34.47132492 145.42790222]
[-27.60745811 132.09046936]
[-17.30583191 121.18741608]
[-4.37887859 113.57861328]
[10.15393162 109.86412811]
[25.14648056 110.33689117]
[39.41638947 114.95961761]
[51.83827972 123.36775208]
[61.43250656 134.89817810]
[67.44242859 148.64157104]
[69.39404297 163.51753235]
[74.43095398 149.38850403]
[79.46787262 135.25947571]
[84.50479126 121.13044739]
[89.54170227 107.00141907]
[94.26184082 92.76342773]
[98.66283417 78.42358398]
[103.06383514 64.08373260]
[107.03593445 49.61921310]
[110.57560730 35.04283524]
[102.61590576 21.65325165]
[106.41328430 6.92115879]
[119.22725677 -0.58468169]
[122.76692963 -15.16105747]
[118.50468445 -30.39732361]
[129.02682495 -40.93932343]
[132.56649780 -55.51569748]
[135.99755859 -70.11801910]
[139.31982422 -84.74548340]
[142.64207458 -99.37294006]
[141.49108887 -108.43456268]
[146.12422180 -114.19267273]
[149.66389465 -128.76905823]
[153.20356750 -143.34542847]
[156.74324036 -157.92179871]
[160.28291321 -172.49818420]
[163.82258606 -187.07455444]
[157.79077148 -198.47543335]
[161.03906250 -210.54325867]
[171.29942322 -216.95040894]
[175.05572510 -231.47247314]
[169.72500610 -249.09815979]
[182.50469971 -261.12506104]
[186.04437256 -275.70144653]
[189.58404541 -290.27780151]
[193.12371826 -304.85418701]
[196.66339111 -319.43057251]
[183.17913818 -326.14788818]
[171.52803040 -335.69772339]
[162.29447937 -347.60104370]
[155.94166565 -361.26083374]
[152.78820801 -375.99185181]
[152.99230957 -391.05526733]
[156.54373169 -405.69546509]
[163.26431274 -419.17810059]
[172.81697083 -430.82690430]
[184.72254944 -440.05755615]
[198.38386536 -446.40704346]
[213.11566162 -449.55694580]
[228.17901611 -449.34918213]
[242.81834412 -445.79421997]
[256.29934692 -439.07037354]
[267.94583130 -429.51489258]
[277.17361450 -417.60708618]
[283.51980591 -403.94421387]
[286.66610718 -389.21166992]
[286.45471191 -374.14837646]
[282.89620972 -359.50988770]
[276.16909790 -346.03051758]
[266.61077881 -334.38635254]
[254.70072937 -325.16146851]
[241.03634644 -318.81857300]
[226.30302429 -315.67584229]
[211.23977661 -315.89089966]
[207.70010376 -301.31451416]
[204.16043091 -286.73812866]
[200.62075806 -272.16177368]
[197.08108521 -257.58538818]
[203.10472107 -247.09527588]
[200.27505493 -234.92248535]
[189.57777405 -227.71617126]
[185.82147217 -213.19410706]
[191.41499329 -196.56042480]
[178.39895630 -183.53488159]
[174.85928345 -168.95851135]
[171.31961060 -154.38212585]
[167.77995300 -139.80575562]
[164.24028015 -125.22937775]
[160.70060730 -110.65300751]
[157.26954651 -96.05068207]
[153.94728088 -81.42321777]
[150.62501526 -66.79576111]
[152.20898438 -59.57683945]
[147.14286804 -51.97602463]
[143.60319519 -37.39965057]
[148.11863708 -23.20598412]
[137.34330750 -11.62138462]
[133.80363464 2.95499063]
[141.74810791 15.50173664]
[138.36602783 30.33467865]
[125.15197754 38.58250809]
[121.61230469 53.15888214]
[122.95390320 55.62023926]
[123.40135193 58.76132202]
[122.69087982 62.24422836]
[120.68579102 65.64189148]
[117.40367889 68.48473358]
[113.00268555 82.82457733]
[108.60168457 97.16442871]
[109.90744781 100.79311371]
[109.60740662 104.97973633]
[107.48822784 108.99423218]
[103.67073822 112.03833771]
[98.63381958 126.16736603]
[93.59690094 140.29638672]
[88.55998230 154.42543030]
[83.52307129 168.55445862]
[80.63779449 183.27433777]
[79.96800995 198.25938416]
[79.29822540 213.24441528]
[79.07489777 228.24275208]
[79.29822540 243.24110413]
[79.52155304 258.23944092]
[79.74488068 273.23776245]
[79.96820831 288.23611450]
[80.19153595 303.23443604]
[80.41486359 318.23278809]
[95.39698792 324.06753540]
[106.96517944 335.17822266]
[113.36853790 349.84222412]
[113.65366364 365.80224609]
[107.80647278 380.61392212]
[96.74982452 392.02001953]
[82.19800568 398.29461670]
[82.64461517 413.28796387]
[83.09121704 428.28134155]
[83.98403931 443.25473022]
[85.32227325 458.19491577]
[86.66050720 473.13510132]
[90.54305267 481.40332031]
[87.90574646 488.30743408]
[89.02140045 503.26586914]
[90.13704681 518.22430420]
[99.38333130 527.21704102]
[100.00460052 539.69897461]
[92.21255493 548.95153809]
[93.10536957 563.92492676]
[93.99819183 578.89837646]
[94.89100647 593.87176514]
[103.43598938 607.18695068]
[96.46994781 620.35217285]
[97.36276245 635.32556152]
[98.25557709 650.29901123]
[109.25213623 661.98040771]
[106.83293915 677.84002686]
[92.85379791 685.71166992]
[78.03830719 679.55694580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[5 202]
[6 201]
[7 200]
[8 199]
[10 196]
[11 195]
[12 194]
[13 192]
[14 191]
[15 190]
[20 189]
[21 188]
[22 187]
[30 180]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[41 173]
[42 172]
[43 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[69 162]
[70 161]
[71 160]
[72 155]
[73 154]
[76 151]
[77 150]
[79 148]
[80 147]
[81 145]
[82 144]
[83 143]
[85 142]
[86 141]
[87 140]
[88 139]
[89 138]
[90 137]
[93 135]
[94 134]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
