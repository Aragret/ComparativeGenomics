%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[111.43663788 602.17529297]
[120.00874329 589.78112793]
[131.20849609 579.69836426]
[144.43188477 572.47070312]
[140.45979309 558.00616455]
[136.48768616 543.54168701]
[132.51559448 529.07714844]
[128.54350281 514.61260986]
[124.57140350 500.14810181]
[120.59930420 485.68356323]
[116.62720490 471.21905518]
[106.27259064 464.96536255]
[102.84499359 452.94723511]
[108.70639801 441.45782471]
[98.02846527 431.07363892]
[102.06339264 415.77560425]
[98.30709839 401.25354004]
[94.55079651 386.73147583]
[84.29043579 380.32434082]
[81.04215240 368.25650024]
[87.07396698 356.85562134]
[83.11865234 371.32476807]
[74.50972748 383.60833740]
[62.25854492 392.26330566]
[47.80436707 396.27288818]
[32.84526062 395.16607666]
[19.13860130 389.07284546]
[8.29463387 378.70904541]
[1.58729911 365.29217529]
[-0.19543363 350.39849854]
[3.15586972 335.77767944]
[11.24750137 323.14733887]
[23.12886429 313.99127197]
[37.40414810 309.38516235]
[52.39630890 309.87011719]
[66.34407806 315.38916016]
[77.60888672 325.29388428]
[84.86787415 338.42224121]
[84.86787415 323.42224121]
[84.86787415 308.42224121]
[84.86787415 293.42224121]
[84.86787415 278.42224121]
[82.64660645 275.68392944]
[81.64130402 271.73370361]
[82.40713501 267.15475464]
[85.21781158 262.75619507]
[85.88759613 247.77116394]
[86.55738068 232.78611755]
[76.34786987 222.00180054]
[76.81365967 206.79530334]
[88.19446564 196.15974426]
[88.86425018 181.17471313]
[89.53403473 166.18966675]
[90.20381927 151.20463562]
[77.27272034 146.91854858]
[65.89349365 139.42874146]
[56.84315491 129.24664307]
[50.73967361 117.06750488]
[47.99981308 103.72295380]
[48.81066513 90.12419128]
[53.11685562 77.19976807]
[60.62435150 65.83220673]
[70.82051849 56.79771423]
[83.00913239 50.71318436]
[96.35793304 47.99408722]
[97.47357941 33.03563309]
[98.58923340 18.07717896]
[99.70487976 3.11872625]
[100.82052612 -11.83972740]
[101.93618011 -26.79817963]
[94.12618256 -37.06301498]
[95.36336517 -49.49897766]
[104.44174194 -57.49332428]
[97.96648407 -71.92875671]
[106.80840302 -83.91498566]
[108.14663696 -98.85517120]
[109.48487091 -113.79535675]
[99.62700653 -125.85604858]
[101.19699860 -140.98846436]
[112.75577545 -150.31210327]
[114.09400940 -165.25228882]
[115.43224335 -180.19247437]
[116.32505798 -195.16587830]
[116.77166748 -210.15922546]
[117.21827698 -225.15257263]
[108.95772552 -235.05844116]
[109.63836670 -247.53723145]
[118.35073090 -255.92898560]
[119.02051544 -270.91403198]
[119.69029999 -285.89904785]
[108.30252838 -293.66497803]
[102.28681183 -305.94625854]
[103.11840057 -319.48797607]
[110.47334290 -330.75958252]
[122.34093475 -336.87530518]
[123.23374939 -351.84872437]
[124.12656403 -366.82214355]
[125.01937866 -381.79553223]
[110.92893982 -387.30142212]
[99.23083496 -396.89358521]
[91.07112122 -409.63226318]
[87.24919891 -424.26947021]
[88.13951111 -439.37121582]
[93.65483093 -453.45797729]
[103.25482941 -465.14965820]
[115.99897766 -473.30081177]
[130.63874817 -477.11294556]
[145.73989868 -476.21249390]
[159.82293701 -470.68774414]
[171.50817871 -461.07992554]
[179.65081787 -448.33029175]
[183.45312500 -433.68798828]
[182.54257202 -418.58743286]
[177.00837708 -404.50808716]
[167.39273071 -392.82928467]
[154.63766479 -384.69522095]
[139.99278259 -380.90270996]
[139.09997559 -365.92932129]
[138.20715332 -350.95590210]
[137.31434631 -335.98251343]
[150.32443237 -325.97177124]
[154.84931946 -310.01910400]
[148.91514587 -294.35748291]
[134.67533875 -285.22927856]
[134.00555420 -270.24423218]
[133.33576965 -255.25920105]
[142.25038147 -240.14309692]
[132.21162415 -224.70596313]
[131.76501465 -209.71261597]
[131.31840515 -194.71926880]
[133.14031982 -192.58882141]
[134.22810364 -189.60832214]
[134.25376892 -186.05378723]
[132.99519348 -182.31474304]
[130.37243652 -178.85423279]
[129.03419495 -163.91404724]
[127.69596100 -148.97386169]
[137.41374207 -137.74443054]
[136.26940918 -122.57389069]
[124.42505646 -112.45712280]
[123.08682251 -97.51693726]
[121.74858856 -82.57675171]
[128.31956482 -69.20994568]
[119.38192749 -56.15509033]
[127.61267853 -40.65600586]
[116.89463043 -25.68253136]
[115.77898407 -10.72407818]
[114.66333008 4.23437500]
[113.54768372 19.19282913]
[112.43203735 34.15128326]
[111.31639099 49.10973358]
[126.46680450 55.08465576]
[139.03434753 65.44281006]
[147.79258728 79.17336273]
[151.88679504 94.93636322]
[150.91743469 111.19351959]
[144.97909546 126.35830688]
[134.65130615 138.95082092]
[120.94193268 147.74217224]
[105.18885803 151.87442017]
[104.51907349 166.85945129]
[103.84928894 181.84449768]
[103.17950439 196.82952881]
[113.56607056 208.43801880]
[112.67334747 223.62544250]
[101.54241943 233.45590210]
[100.87263489 248.44094849]
[100.20285034 263.42599487]
[99.86787415 278.42224121]
[99.86787415 293.42224121]
[99.86787415 308.42224121]
[99.86787415 323.42224121]
[99.86787415 338.42224121]
[101.65033722 353.31594849]
[114.66635895 366.34149170]
[109.07285309 382.97518921]
[112.82915497 397.49725342]
[116.58545685 412.01931763]
[127.53206635 423.44219971]
[123.22846222 437.70150757]
[136.43696594 450.53182983]
[131.09173584 467.24694824]
[135.06382751 481.71145630]
[139.03591919 496.17599487]
[143.00802612 510.64050293]
[146.98011780 525.10504150]
[150.95220947 539.56958008]
[154.92431641 554.03405762]
[158.89640808 568.49859619]
[173.95648193 567.95935059]
[188.73486328 570.90826416]
[202.43455505 577.18640137]
[214.31678772 586.45513916]
[223.74072266 598.21466064]
[230.19816589 611.83074951]
[233.34086609 626.56915283]
[232.99934387 641.63500977]
[229.19201660 656.21582031]
[222.12420654 669.52532959]
[212.17707825 680.84576416]
[199.88706970 689.56652832]
[185.91694641 695.21740723]
[171.02012634 697.49365234]
[155.99995422 696.27252197]
[141.66645813 691.61981201]
[128.79263306 683.78649902]
[118.07273102 673.19494629]
[110.08487701 660.41638184]
[105.25983429 646.14001465]
[103.85782623 631.13562012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 182]
[14 180]
[16 178]
[17 177]
[18 176]
[21 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[46 168]
[47 167]
[48 166]
[51 163]
[52 162]
[53 161]
[54 160]
[65 151]
[66 150]
[67 149]
[68 148]
[69 147]
[70 146]
[73 144]
[75 142]
[76 141]
[77 140]
[80 137]
[81 136]
[82 135]
[83 130]
[84 129]
[85 128]
[88 126]
[89 125]
[90 124]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
