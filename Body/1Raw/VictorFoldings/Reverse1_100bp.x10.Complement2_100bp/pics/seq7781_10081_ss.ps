%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[111.20676422 517.34722900]
[100.07379913 507.16293335]
[91.95687866 494.44375610]
[87.40943909 480.05682373]
[86.74151611 464.98312378]
[89.99867249 450.25039673]
[96.95880890 436.86312866]
[107.14738464 425.73410034]
[119.86971283 417.62210083]
[134.25837708 413.08020020]
[133.58859253 398.09518433]
[132.91880798 383.11013794]
[132.24902344 368.12509155]
[131.57923889 353.14004517]
[130.90945435 338.15502930]
[130.23966980 323.16998291]
[119.10874176 313.33950806]
[118.21601868 298.15209961]
[128.60258484 286.54360962]
[127.93280029 271.55856323]
[127.26301575 256.57351685]
[126.59322357 241.58848572]
[124.47859955 226.73829651]
[120.93893433 212.16192627]
[117.39926147 197.58554077]
[113.85958862 183.00917053]
[110.31991577 168.43280029]
[106.78024292 153.85641479]
[103.02394104 139.33436584]
[92.19258881 129.11032104]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[68.61665344 72.98336029]
[54.63021851 63.11568451]
[46.39076996 48.17543793]
[45.51361847 31.19179535]
[52.12689972 15.58416557]
[64.85554504 4.47374105]
[60.45454788 -9.86610603]
[56.05355072 -24.20595360]
[51.65255356 -38.54579926]
[47.25155640 -52.88564682]
[42.85055542 -67.22549438]
[26.22431374 -67.86647034]
[10.84602928 -74.15116119]
[-1.43229127 -85.30371857]
[-9.13847828 -99.96319580]
[-11.35670185 -116.34962463]
[-7.83628464 -132.48014832]
[0.98011225 -146.40895081]
[14.01206112 -156.46194458]
[9.18606377 -170.66439819]
[4.36006594 -184.86685181]
[-0.46593177 -199.06930542]
[-5.60789156 -213.16044617]
[-11.06324863 -227.13323975]
[-25.93176270 -231.16232300]
[-35.46539688 -243.03511047]
[-36.17148972 -258.06726074]
[-27.98859787 -270.48413086]
[-33.44395447 -284.45690918]
[-38.89931107 -298.42971802]
[-44.35467148 -312.40249634]
[-49.81002808 -326.37530518]
[-55.26538467 -340.34811401]
[-60.72074127 -354.32089233]
[-66.17609406 -368.29370117]
[-78.40253448 -378.33486938]
[-75.82387543 -393.00454712]
[-81.27923584 -406.97735596]
[-86.73458862 -420.95013428]
[-101.40518188 -417.68301392]
[-116.40257263 -416.69372559]
[-131.37519836 -418.00549316]
[-145.97209167 -421.58755493]
[-159.85107422 -427.35595703]
[-172.68679810 -435.17544556]
[-184.17837524 -444.86276245]
[-194.05644226 -456.19079590]
[-202.08941650 -468.89401245]
[-208.08901978 -482.67462158]
[-211.91459656 -497.20959473]
[-213.47647095 -512.15820312]
[-212.73803711 -527.17004395]
[-209.71659851 -541.89318848]
[-204.48300171 -555.98254395]
[-197.15989685 -569.10778809]
[-187.91896057 -580.96130371]
[-176.97682190 -591.26519775]
[-164.58998108 -599.77795410]
[-151.04879761 -606.29992676]
[-136.67070007 -610.67840576]
[-121.79271698 -612.81054688]
[-106.76363373 -612.64654541]
[-91.93572998 -610.19018555]
[-77.65660858 -605.49896240]
[-64.26098633 -598.68298340]
[-52.06288147 -589.90197754]
[-41.34823227 -579.36169434]
[-32.36819839 -567.30932617]
[-25.33329391 -554.02740479]
[-20.40842438 -539.82714844]
[-17.70903397 -525.04156494]
[-17.29840088 -510.01721191]
[-19.18615341 -495.10623169]
[-23.32803535 -480.65823364]
[-29.62696075 -467.01184082]
[-37.93526840 -454.48696899]
[-48.05820465 -443.37719727]
[-59.75846863 -433.94299316]
[-72.76179504 -426.40548706]
[-67.30643463 -412.43270874]
[-61.85107803 -398.45989990]
[-50.01484299 -389.41818237]
[-52.20330048 -373.74905396]
[-46.74794388 -359.77627563]
[-41.29258728 -345.80346680]
[-35.83723068 -331.83065796]
[-30.38187218 -317.85787964]
[-24.92651558 -303.88507080]
[-19.47115707 -289.91226196]
[-14.01580048 -275.93948364]
[0.41566208 -272.35186768]
[10.08168983 -260.81793213]
[11.11474037 -245.62628174]
[2.90954924 -232.58860779]
[8.36490631 -218.61579895]
[11.42995644 -216.87287903]
[13.80308056 -213.55876160]
[14.75501251 -209.01484680]
[13.73652363 -203.89530945]
[18.56252098 -189.69284058]
[23.38851929 -175.49038696]
[28.21451759 -161.28793335]
[41.67679596 -161.69114685]
[54.72396851 -158.28234863]
[66.29737854 -151.32830811]
[75.45520782 -141.38392639]
[81.44909668 -129.24783325]
[83.78530121 -115.89834595]
[82.26537323 -102.41455841]
[77.00295258 -89.88913727]
[68.41533661 -79.33977509]
[57.19040298 -71.62649536]
[61.59140015 -57.28664398]
[65.99240112 -42.94680023]
[70.39339447 -28.60695076]
[74.79439545 -14.26710415]
[79.19539642 0.07274280]
[92.15432739 0.97269249]
[104.06541443 6.23581648]
[113.50215912 15.25551987]
[119.32635498 26.97391510]
[120.82533264 40.00587082]
[117.79911041 52.80273438]
[110.58677673 63.83635330]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[121.57929230 121.04044342]
[117.48846436 135.36225891]
[121.91624451 140.27207947]
[123.03226471 145.84446716]
[121.35661316 150.31674194]
[124.89628601 164.89312744]
[128.43595886 179.46949768]
[131.97563171 194.04586792]
[135.51530457 208.62225342]
[139.05497742 223.19862366]
[143.66963196 208.92610168]
[153.62973022 197.71018982]
[167.25679016 191.44096375]
[182.25442505 191.17489624]
[196.09527588 196.95683289]
[206.44691467 207.81242371]
[211.56491089 221.91227722]
[210.58677673 236.88035583]
[203.67735291 250.19425964]
[192.00102234 259.61035156]
[177.52540588 263.54190063]
[162.68994141 261.32629395]
[149.99464417 253.33697510]
[141.57826233 240.91870117]
[142.24804688 255.90374756]
[142.91783142 270.88879395]
[143.58761597 285.87380981]
[154.96842957 296.50936890]
[155.43421936 311.71588135]
[145.22470093 322.50018311]
[145.89448547 337.48522949]
[146.56428528 352.47027588]
[147.23406982 367.45532227]
[147.90385437 382.44033813]
[148.57363892 397.42538452]
[149.24342346 412.41043091]
[163.97991943 415.65051270]
[177.37522888 422.59512329]
[188.51606750 432.77081299]
[196.64279175 445.48373413]
[201.20135498 459.86712646]
[201.88090515 474.94030762]
[198.63513184 489.67556763]
[191.68533325 503.06817627]
[181.50535583 514.20507812]
[168.78929138 522.32690430]
[154.40414429 526.87988281]
[139.33070374 527.55364990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 192]
[19 189]
[20 188]
[21 187]
[22 186]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 164]
[31 162]
[33 160]
[34 159]
[40 151]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[53 136]
[54 135]
[55 134]
[56 133]
[57 129]
[58 128]
[62 124]
[63 123]
[64 122]
[65 121]
[66 120]
[67 119]
[68 118]
[69 117]
[71 115]
[72 114]
[73 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
