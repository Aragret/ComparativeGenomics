%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[66.97920990 567.41058350]
[66.97920990 552.41058350]
[66.97920990 537.41058350]
[66.97920990 522.41058350]
[66.97920990 507.41058350]
[66.97920990 492.41058350]
[66.97920990 477.41058350]
[59.24191284 464.68328857]
[66.97920990 450.88311768]
[66.97920990 435.88311768]
[54.58995438 424.51013184]
[54.25286865 407.35781860]
[66.66485596 395.03054810]
[66.44152832 380.03219604]
[66.21820068 365.03387451]
[58.29226685 352.42321777]
[65.82324982 338.50936890]
[65.59992218 323.51101685]
[65.37659454 308.51269531]
[63.11479950 305.80776978]
[62.05079651 301.87292480]
[62.74837112 297.28308105]
[65.49324799 292.84317017]
[65.93984985 277.84982300]
[64.11794281 275.71939087]
[63.03016281 272.73889160]
[63.00449753 269.18435669]
[64.26306915 265.44528198]
[66.88583374 261.98480225]
[68.22406769 247.04460144]
[59.48238373 259.23406982]
[46.78214264 267.21554565]
[32.00734329 269.80502319]
[17.34974480 266.61834717]
[4.98371267 258.12829590]
[-3.25632668 245.59425354]
[-6.14801168 230.87562561]
[-3.26237774 216.15580750]
[4.97250795 203.61839294]
[17.33504868 195.12324524]
[31.99133682 191.93055725]
[46.76719666 194.51396179]
[59.47072220 202.49020386]
[68.21741486 214.67607117]
[71.70967865 229.26194763]
[76.11067200 214.92210388]
[80.51167297 200.58226013]
[84.91267395 186.24241638]
[89.31366730 171.90255737]
[91.64915466 157.08549500]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[92.57087708 57.69159317]
[91.67806244 42.71818542]
[90.78524017 27.74478149]
[89.89242554 12.77137566]
[88.99961090 -2.20203018]
[88.10679626 -17.17543602]
[87.21398163 -32.14884186]
[76.72005463 -47.28023148]
[85.18064880 -62.65505600]
[84.06500244 -77.61351013]
[82.94935608 -92.57196045]
[80.37840271 -96.07112885]
[79.17563629 -99.82850647]
[79.25422668 -103.38227081]
[80.38626099 -106.34623718]
[82.23968506 -108.44931793]
[82.01635742 -123.44766235]
[81.79302979 -138.44599915]
[81.56970215 -153.44433594]
[73.62779236 -167.12777710]
[81.17475128 -179.96884155]
[78.49628448 -184.44911194]
[77.86711884 -189.04884338]
[78.98959351 -192.96740723]
[81.29140472 -195.63835144]
[81.73800659 -210.63169861]
[82.18461609 -225.62506104]
[82.63121796 -240.61840820]
[83.07782745 -255.61175537]
[83.41280365 -270.60800171]
[83.63613129 -285.60635376]
[83.74779510 -300.60592651]
[83.74779510 -315.60592651]
[83.74779510 -330.60592651]
[83.74779510 -345.60592651]
[69.01931763 -348.73092651]
[55.26256943 -354.85018921]
[43.07894135 -363.69625854]
[33.00104904 -374.88241577]
[25.46945190 -387.91961670]
[20.81340408 -402.23794556]
[19.23644638 -417.21148682]
[20.80751419 -432.18566895]
[25.45792770 -446.50582886]
[32.98439407 -459.54598999]
[43.05788422 -470.73611450]
[55.23803329 -479.58697510]
[68.99237061 -485.71163940]
[83.71961975 -488.84243774]
[98.77597046 -488.84243774]
[113.50321960 -485.71163940]
[127.25756073 -479.58697510]
[139.43771362 -470.73611450]
[149.51119995 -459.54598999]
[157.03765869 -446.50582886]
[161.68807983 -432.18566895]
[163.25915527 -417.21148682]
[161.68218994 -402.23794556]
[157.02613831 -387.91961670]
[149.49455261 -374.88241577]
[139.41665649 -363.69625854]
[127.23302460 -354.85018921]
[113.47628021 -348.73092651]
[98.74779510 -345.60592651]
[98.74779510 -330.60592651]
[98.74779510 -315.60592651]
[98.74779510 -300.60592651]
[101.89129639 -293.91711426]
[98.63446808 -285.38302612]
[98.41114044 -270.38467407]
[101.45470428 -263.64981079]
[98.07117462 -255.16514587]
[97.62457275 -240.17179871]
[97.17796326 -225.17845154]
[96.73136139 -210.18510437]
[96.28475189 -195.19175720]
[96.17308807 -180.19216919]
[104.09902191 -167.58149719]
[96.56803894 -153.66766357]
[96.79136658 -138.66932678]
[97.01469421 -123.67098999]
[97.23802185 -108.67265320]
[97.90780640 -93.68761444]
[99.02346039 -78.72915649]
[100.13910675 -63.77070236]
[109.09745026 -55.64207840]
[110.14933777 -43.18907547]
[102.18738556 -33.04165649]
[103.08020020 -18.06825256]
[103.97301483 -3.09484601]
[104.86582947 11.87856007]
[105.75865173 26.85196495]
[106.65146637 41.82537079]
[107.54428101 56.79877853]
[119.30134583 47.48366165]
[133.94831848 50.71885300]
[140.68797302 64.11948395]
[134.55210876 77.80711365]
[120.06384277 81.69172668]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[106.64749146 157.30882263]
[113.75442505 144.09930420]
[124.39696503 133.52876282]
[137.65443420 126.51165771]
[152.37991333 123.65504456]
[167.29949951 125.20604706]
[181.12252808 131.03048706]
[192.65313721 140.62449646]
[200.89382935 153.15808105]
[205.13169861 167.54698181]
[205.00013733 182.54641724]
[200.51051331 196.85874939]
[192.05122375 209.24586487]
[180.35408020 218.63612366]
[166.43101501 224.21717834]
[151.48651123 225.50622559]
[136.81340027 222.39173889]
[123.68107605 215.14315796]
[113.22560120 204.38755798]
[106.35147858 191.05538940]
[103.65351868 176.30355835]
[99.25251770 190.64340210]
[94.85151672 204.98326111]
[90.45052338 219.32310486]
[86.04952240 233.66294861]
[83.16425323 248.38284302]
[81.82601929 263.32302856]
[80.93320465 278.29641724]
[80.48659515 293.28979492]
[80.37493134 308.28936768]
[80.59825897 323.28768921]
[80.82158661 338.28604126]
[88.76348877 351.96948242]
[81.21653748 364.81054688]
[81.43986511 379.80886841]
[81.66319275 394.80722046]
[92.34362793 403.01348877]
[96.29003906 415.68771362]
[92.27561951 428.13629150]
[81.97920990 435.88311768]
[81.97920990 450.88311768]
[89.71651459 464.68328857]
[81.97920990 477.41058350]
[81.97920990 492.41058350]
[81.97920990 507.41058350]
[81.97920990 522.41058350]
[81.97920990 537.41058350]
[81.97920990 552.41058350]
[81.97920990 567.41058350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 210]
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[7 204]
[9 202]
[10 201]
[13 197]
[14 196]
[15 195]
[17 193]
[18 192]
[19 191]
[23 190]
[24 189]
[29 188]
[30 187]
[45 186]
[46 185]
[47 184]
[48 183]
[49 182]
[50 162]
[51 161]
[52 160]
[53 159]
[55 157]
[56 156]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[65 141]
[66 140]
[67 139]
[72 138]
[73 137]
[74 136]
[75 135]
[77 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 126]
[87 125]
[88 123]
[89 122]
[90 121]
[91 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
