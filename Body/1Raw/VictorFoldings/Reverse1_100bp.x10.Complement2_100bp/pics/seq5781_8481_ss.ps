%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[33.54024506 295.54876709]
[39.67402649 309.27368164]
[43.52661514 323.80480957]
[44.99821854 338.76577759]
[44.05072403 353.76904297]
[40.70866776 368.42602539]
[35.05861664 382.35702515]
[27.24692726 395.20123291]
[17.47593498 406.62594604]
[5.99873543 416.33523560]
[-6.88738632 424.07757568]
[-20.84864807 429.65246582]
[-35.52341843 432.91546631]
[-50.53158951 433.78210449]
[-65.48440552 432.22988892]
[-79.99456024 428.29904175]
[-93.68620300 422.09136963]
[-106.20468903 413.76770020]
[-117.22576141 403.54357910]
[-126.46393585 391.68389893]
[-133.67993164 378.49581909]
[-138.68684387 364.32095337]
[-141.35496521 349.52642822]
[-141.61518860 334.49551392]
[-139.46078491 319.61752319]
[-134.94755554 305.27783203]
[-128.19239807 291.84786987]
[-119.37027740 279.67550659]
[-108.70972443 269.07601929]
[-96.48686981 260.32400513]
[-83.01831818 253.64611816]
[-68.65292358 249.21534729]
[-53.76279831 247.14646912]
[-38.73362350 247.49305725]
[-23.95469666 250.24613953]
[-9.80882454 255.33441162]
[-2.53559542 242.21571350]
[4.73763418 229.09701538]
[12.01086330 215.97831726]
[12.50490665 208.60420227]
[19.49129486 202.71961975]
[26.95903587 189.71067810]
[34.42677689 176.70172119]
[41.89451981 163.69276428]
[49.36225891 150.68382263]
[56.83000183 137.67486572]
[44.00006866 145.44615173]
[29.29954338 148.42852783]
[14.45542812 146.27162170]
[1.21159327 139.22883606]
[-8.87608719 128.12754822]
[-14.62252331 114.27191162]
[-15.35262966 99.28968811]
[-10.98063374 84.94097137]
[-2.02015305 72.91143799]
[10.47614384 64.61429596]
[25.04020500 61.02428818]
[39.96105576 62.56316757]
[53.48581696 69.05014801]
[64.02560425 79.72314453]
[70.34221649 93.32830048]
[71.69358826 108.26730347]
[67.92031097 122.78656006]
[78.24698639 111.90722656]
[88.57365417 101.02789307]
[73.81719971 103.71995544]
[59.65876389 98.76631165]
[49.79931641 87.46183014]
[46.81609344 72.76147461]
[51.48891068 58.50788498]
[62.59629440 48.42691422]
[77.23480988 45.15370560]
[91.57798004 49.54386520]
[101.87653351 60.44981384]
[105.43845367 75.02076721]
[101.33312225 89.44715118]
[113.15939331 80.22005463]
[124.98566437 70.99295044]
[136.81193542 61.76585388]
[134.35293579 45.41516113]
[140.44032288 30.14298248]
[153.32463074 20.08259010]
[169.43098450 17.90520287]
[184.35067749 24.11126709]
[196.03825378 14.70911598]
[207.72584534 5.30696440]
[219.41342163 -4.09518671]
[221.29812622 -8.96293545]
[224.53759766 -12.28845119]
[228.31755066 -13.81393814]
[231.83930969 -13.64215946]
[243.93505859 -22.51305580]
[256.03082275 -31.38395119]
[268.12655640 -40.25484467]
[280.15594482 -49.21554184]
[292.11828613 -58.26554108]
[304.08062744 -67.31554413]
[316.04293823 -76.36553955]
[328.00527954 -85.41554260]
[319.96911621 -98.09148407]
[313.00717163 -111.38775635]
[307.16702271 -125.21353149]
[302.48852539 -139.47436523]
[299.00369263 -154.07283020]
[296.73629761 -168.90922546]
[295.70181274 -183.88218689]
[295.90734863 -198.88941956]
[297.35147095 -213.82843018]
[300.02435303 -228.59715271]
[303.90768433 -243.09472656]
[308.97494507 -257.22207642]
[315.19155884 -270.88272095]
[322.51501465 -283.98333740]
[330.89532471 -296.43444824]
[340.27523804 -308.15100098]
[350.59063721 -319.05291748]
[361.77108765 -329.06576538]
[373.74020386 -338.12112427]
[386.41625977 -346.15713501]
[399.71258545 -353.11892700]
[413.53845215 -358.95892334]
[427.79934692 -363.63723755]
[442.39785767 -367.12191772]
[457.23425293 -369.38912964]
[472.20724487 -370.42340088]
[487.21447754 -370.21771240]
[502.15347290 -368.77340698]
[516.92218018 -366.10034180]
[531.41967773 -362.21685791]
[545.54699707 -357.14941406]
[559.20751953 -350.93264771]
[572.30810547 -343.60900879]
[584.75909424 -335.22857666]
[596.47552490 -325.84854126]
[607.37731934 -315.53298950]
[617.39001465 -304.35241699]
[626.44525146 -292.38317871]
[634.48114014 -279.70706177]
[641.44274902 -266.41061401]
[647.28259277 -252.58470154]
[651.96069336 -238.32376099]
[655.44519043 -223.72520447]
[657.71228027 -208.88876343]
[658.74633789 -193.91578674]
[658.54046631 -178.90853882]
[657.09600830 -163.96957397]
[654.42279053 -149.20089722]
[650.53912354 -134.70343018]
[645.47149658 -120.57619476]
[639.25457764 -106.91569519]
[631.93078613 -93.81524658]
[623.55017090 -81.36434174]
[614.16998291 -69.64803314]
[603.85430908 -58.74635315]
[592.67364502 -48.73377609]
[580.70428467 -39.67869949]
[568.02807617 -31.64298248]
[554.73156738 -24.68151093]
[540.90557861 -18.84184456]
[526.64459229 -14.16387272]
[512.04595947 -10.67955208]
[497.20950317 -8.41268444]
[482.23651123 -7.37875366]
[467.22927856 -7.58482409]
[452.29031372 -9.02948761]
[437.52166748 -11.70287609]
[423.02426147 -15.58672619]
[408.89709473 -20.65450668]
[395.23666382 -26.87160110]
[382.13629150 -34.19553757]
[369.68548584 -42.57628632]
[357.96929932 -51.95659637]
[347.06771851 -62.27239227]
[337.05529785 -73.45320129]
[325.09295654 -64.40320587]
[313.13061523 -55.35320663]
[301.16827393 -46.30320358]
[289.20593262 -37.25320435]
[285.76828003 -30.71071434]
[276.99746704 -28.15909386]
[264.90170288 -19.28819847]
[252.80595398 -10.41730309]
[240.71020508 -1.54640770]
[228.81556702 7.59239483]
[217.12799072 16.99454498]
[205.44041443 26.39669609]
[193.75282288 35.79884720]
[196.73083496 49.12733459]
[193.66087341 62.50283813]
[185.08650208 73.30233765]
[172.63636780 79.38282776]
[158.71511841 79.50646973]
[146.03903198 73.59212494]
[134.21275330 82.81922150]
[122.38648987 92.04632568]
[110.56021881 101.27342224]
[99.45298767 111.35456085]
[89.12631989 122.23389435]
[78.79965210 133.11323547]
[69.83895111 145.14260864]
[62.37121201 158.15156555]
[54.90346909 171.16050720]
[47.43572998 184.16946411]
[39.96798706 197.17842102]
[32.50024796 210.18736267]
[25.12955666 223.25155640]
[17.85632896 236.37023926]
[10.58309841 249.48893738]
[3.30986929 262.60763550]
[15.11959743 271.90960693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 209]
[37 208]
[38 207]
[39 206]
[41 205]
[42 204]
[43 203]
[44 202]
[45 201]
[46 200]
[63 199]
[64 198]
[65 197]
[76 196]
[77 195]
[78 194]
[79 193]
[84 187]
[85 186]
[86 185]
[87 184]
[91 183]
[92 182]
[93 181]
[94 180]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
