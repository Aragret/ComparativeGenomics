%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[30.26261902 514.99829102]
[33.29428101 529.89385986]
[30.38998413 544.81475830]
[21.99261093 557.48571777]
[9.38270092 565.97442627]
[-5.51682615 568.98651123]
[-20.43390083 566.06256104]
[-33.09377670 557.64855957]
[-41.56591797 545.02746582]
[-44.55838013 530.12402344]
[-41.61483765 515.21081543]
[-33.18415833 502.56201172]
[-20.55195808 494.10647583]
[-5.64455748 491.13360596]
[-2.75928473 476.41372681]
[0.12598795 461.69384766]
[3.01126051 446.97393799]
[5.67705584 432.21273804]
[8.12278366 417.41345215]
[10.56851101 402.61419678]
[13.01423836 387.81491089]
[11.00340462 380.70306396]
[15.60812378 372.81417847]
[2.69995928 380.45483398]
[-11.86386204 376.86386108]
[-19.74052238 364.09832764]
[-16.41791153 349.47094727]
[-3.79937410 341.36093140]
[10.88662052 344.41406250]
[19.22707748 356.88043213]
[23.19917297 342.41589355]
[27.17127037 327.95138550]
[31.14336586 313.48684692]
[35.11546326 299.02233887]
[31.02463341 284.70053101]
[42.14009857 273.44186401]
[46.11219406 258.97735596]
[50.08429337 244.51283264]
[45.99346542 230.19100952]
[57.10892868 218.93237305]
[61.08102417 204.46784973]
[55.73578644 187.75273132]
[68.94429779 174.92242432]
[72.70059967 160.40036011]
[76.45690155 145.87829590]
[63.01620483 152.53770447]
[48.75980377 147.87347412]
[41.85441589 134.55747986]
[46.25575638 120.21773529]
[59.44254303 113.06870270]
[73.86077881 117.20565796]
[81.25093079 130.25784302]
[86.28784180 116.12880707]
[78.87542725 101.38350677]
[84.30135345 85.79738617]
[99.26804352 78.84282684]
[104.09404755 64.64037323]
[108.92004395 50.43791580]
[113.74604034 36.23546219]
[118.57203674 22.03300667]
[123.39803314 7.83055067]
[128.22402954 -6.37190533]
[125.33809662 -21.92767334]
[136.75878906 -31.48889542]
[140.62309265 -45.98258972]
[143.50836182 -60.70248032]
[146.39364624 -75.42237091]
[136.37004089 -89.75926971]
[139.75006104 -106.57861328]
[153.96330261 -115.56875610]
[156.62908936 -130.32997131]
[159.29489136 -145.09118652]
[161.96069336 -159.85240173]
[164.62648010 -174.61361694]
[166.74110413 -189.46382141]
[168.30163574 -204.38243103]
[169.86215210 -219.30102539]
[171.42268372 -234.21963501]
[172.42694092 -249.18597412]
[165.10394287 -263.21038818]
[173.21675110 -275.70166016]
[173.66336060 -290.69500732]
[174.10997009 -305.68835449]
[174.55657959 -320.68170166]
[157.77581787 -330.07803345]
[148.13789368 -346.62658691]
[148.24444580 -365.69503784]
[157.98280334 -381.99438477]
[174.58021545 -391.04586792]
[174.13360596 -406.03921509]
[165.98886108 -419.60290527]
[173.34379578 -432.55490112]
[172.89718628 -447.54824829]
[172.45057678 -462.54159546]
[172.00396729 -477.53494263]
[171.55737305 -492.52828979]
[171.11076355 -507.52163696]
[156.88757324 -512.88537598]
[145.80307007 -523.28741455]
[139.54757690 -537.14154053]
[139.07501221 -552.33514404]
[144.45741272 -566.55126953]
[154.87402344 -577.62207031]
[168.73638916 -583.85931396]
[183.93057251 -584.31188965]
[198.13960266 -578.91076660]
[209.19670105 -568.47961426]
[215.41572571 -554.60906982]
[215.84832764 -539.41430664]
[210.42852783 -525.21240234]
[199.98283386 -514.16900635]
[186.10411072 -507.96826172]
[186.55072021 -492.97491455]
[186.99731445 -477.98156738]
[187.44392395 -462.98818970]
[187.89053345 -447.99484253]
[188.33714294 -433.00149536]
[196.44995117 -420.51025391]
[189.12695312 -406.48580933]
[189.57356262 -391.49246216]
[200.03256226 -387.93206787]
[208.93267822 -381.34091187]
[215.41943359 -372.33166504]
[218.86396790 -361.75000000]
[218.92390442 -350.59539795]
[215.57737732 -339.92660522]
[209.12660217 -330.76116943]
[200.17066956 -323.97842407]
[189.54992676 -320.23510742]
[189.10331726 -305.24176025]
[188.65670776 -290.24841309]
[188.21011353 -275.25506592]
[195.56503296 -262.30307007]
[187.42028809 -248.73937988]
[199.96151733 -256.96841431]
[214.26145935 -252.43940735]
[219.77870178 -238.49092102]
[212.44615173 -225.40528870]
[197.66908264 -222.82875061]
[186.34127808 -232.65911865]
[184.78076172 -217.74050903]
[183.22023010 -202.82189941]
[181.65971375 -187.90330505]
[194.77825928 -195.17678833]
[208.70173645 -189.59672546]
[213.16624451 -175.27653503]
[204.88075256 -162.77250671]
[189.95298767 -161.30216980]
[179.38769531 -171.94783020]
[176.72190857 -157.18661499]
[174.05610657 -142.42539978]
[171.39031982 -127.66417694]
[168.72451782 -112.90296173]
[177.48025513 -103.44956207]
[179.21841431 -90.48573303]
[173.08236694 -78.71460724]
[161.11354065 -72.53710175]
[158.22825623 -57.81720734]
[155.34298706 -43.09731674]
[166.74667358 -52.84184647]
[181.59356689 -54.97959518]
[195.28317261 -48.84815979]
[203.57363892 -36.34743118]
[203.89607239 -21.35089874]
[196.15054321 -8.50539684]
[182.73710632 -1.79124689]
[167.81207275 -3.28890038]
[156.00009155 -12.53429317]
[150.96124268 -26.66289711]
[154.19236755 -12.12298393]
[142.42648315 -1.54590750]
[137.60049438 12.65654850]
[132.77449036 26.85900307]
[127.94849396 41.06145859]
[123.12249756 55.26391602]
[118.29650116 69.46636963]
[113.47050476 83.66882324]
[120.38557434 94.29122925]
[119.99297333 106.96006775]
[112.43344879 117.13391113]
[100.41687012 121.16572571]
[95.37995911 135.29475403]
[90.97895813 149.63459778]
[87.22265625 164.15666199]
[83.46635437 178.67872620]
[89.32775879 190.16813660]
[85.90016174 202.18626404]
[75.54554749 208.43994141]
[71.57345581 222.90446472]
[75.38017273 238.26087952]
[64.54881287 248.48492432]
[60.57672119 262.94946289]
[56.60462189 277.41397095]
[60.41133881 292.77038574]
[49.57998657 302.99441528]
[45.60789108 317.45895386]
[41.63579178 331.92349243]
[37.66369629 346.38800049]
[33.69160080 360.85253906]
[30.36934090 375.47998047]
[27.81350899 390.26065063]
[25.36778259 405.05990601]
[22.92205429 419.85919189]
[20.47632599 434.65844727]
[22.44301605 440.97064209]
[21.12461662 446.49862671]
[17.73115158 449.85922241]
[14.84587955 464.57910156]
[11.96060658 479.29901123]
[9.07533455 494.01889038]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 204]
[19 203]
[20 202]
[21 201]
[23 200]
[30 199]
[31 198]
[32 197]
[33 196]
[34 195]
[36 193]
[37 192]
[38 191]
[40 189]
[41 188]
[43 185]
[44 184]
[45 183]
[52 182]
[53 181]
[56 177]
[57 176]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[64 169]
[65 159]
[66 158]
[67 157]
[70 153]
[71 152]
[72 151]
[73 150]
[74 149]
[75 143]
[76 142]
[77 141]
[78 140]
[79 134]
[81 132]
[82 131]
[83 130]
[84 129]
[89 120]
[90 119]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
