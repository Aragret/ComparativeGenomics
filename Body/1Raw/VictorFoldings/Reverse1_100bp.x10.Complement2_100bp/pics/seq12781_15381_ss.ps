%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[176.27873230 567.95324707]
[174.40773010 553.05426025]
[174.21667480 538.03948975]
[175.70797729 523.09777832]
[178.86288452 508.41693115]
[183.64170837 494.18167114]
[189.98435974 480.57098389]
[197.81106567 467.75604248]
[207.02340698 455.89801025]
[217.50552368 445.14602661]
[229.12559509 435.63528442]
[241.73748779 427.48541260]
[235.05728149 414.05505371]
[228.37709045 400.62466431]
[221.69689941 387.19430542]
[215.01670837 373.76391602]
[211.80838013 372.30139160]
[209.14904785 369.21221924]
[207.79551697 364.77136230]
[208.35321045 359.58135986]
[202.27937317 345.86608887]
[188.33544922 340.75701904]
[181.98033142 326.93432617]
[187.43373108 312.34329224]
[181.35989380 298.62802124]
[166.53553772 297.17749023]
[154.34654236 288.44342041]
[148.12477112 274.69003296]
[149.63238525 259.56970215]
[158.56414795 247.15315247]
[152.49031067 233.43788147]
[146.41648865 219.72262573]
[140.34265137 206.00735474]
[134.26881409 192.29208374]
[128.19497681 178.57682800]
[112.26166534 173.19459534]
[105.00811005 157.64787292]
[111.36543274 141.35050964]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[62.06593323 56.07286835]
[63.54637146 41.25201797]
[46.94328308 35.74231339]
[39.60638428 20.23474121]
[45.63428497 4.53432226]
[38.95409012 -8.89605427]
[32.27389908 -22.32642937]
[25.49390602 -35.70670319]
[18.61449242 -49.03613281]
[6.58680964 -53.69420242]
[1.13134456 -64.93794250]
[4.68198872 -76.50165558]
[-1.99820578 -89.93202972]
[-8.67840004 -103.36241150]
[-15.35859489 -116.79278564]
[-28.43210793 -125.70310974]
[-27.17249489 -140.54435730]
[-41.88512039 -145.66064453]
[-48.46846771 -159.37611389]
[-43.50019836 -173.37081909]
[-50.18039322 -186.80120850]
[-56.86058807 -200.23158264]
[-63.54078293 -213.66195679]
[-77.76278687 -208.82273865]
[-92.50291443 -205.92239380]
[-107.49810791 -205.01263428]
[-122.48075867 -206.10974121]
[-137.18348694 -209.19409180]
[-151.34390259 -214.21067810]
[-164.70928955 -221.06996155]
[-177.04113770 -229.64952087]
[-188.11936951 -239.79626465]
[-197.74627686 -251.32908630]
[-205.75006104 -264.04217529]
[-211.98788452 -277.70867920]
[-216.34841919 -292.08468628]
[-218.75384521 -306.91360474]
[-219.16123962 -321.93084717]
[-217.56333923 -336.86840820]
[-213.98864746 -351.45965576]
[-208.50097656 -365.44424438]
[-201.19824219 -378.57260132]
[-192.21076965 -390.61041260]
[-181.69897461 -401.34286499]
[-169.85041809 -410.57839966]
[-156.87658691 -418.15225220]
[-143.00898743 -423.92919922]
[-128.49511719 -427.80615234]
[-113.59397888 -429.71395874]
[-98.57151794 -429.61856079]
[-83.69582367 -427.52163696]
[-69.23236084 -423.46063232]
[-55.43925858 -417.50802612]
[-42.56266403 -409.77001953]
[-30.83237648 -400.38470459]
[-20.45773888 -389.51962280]
[-11.62389565 -377.36862183]
[-4.48849821 -364.14859009]
[0.82111281 -350.09539795]
[4.21018219 -335.45993042]
[5.61822748 -320.50329590]
[5.02012110 -305.49243164]
[2.42653632 -290.69525146]
[-2.11624122 -276.37579346]
[-8.52713966 -262.78964233]
[-16.69174957 -250.17921448]
[-26.46436501 -238.76959229]
[-37.67057800 -228.76438904]
[-50.11040878 -220.34214783]
[-43.43021393 -206.91177368]
[-36.75001907 -193.48139954]
[-30.06982231 -180.05102539]
[-15.91167259 -175.56968689]
[-8.94568443 -162.04454041]
[-13.74211884 -147.22454834]
[-1.14641798 -139.27485657]
[-1.92821896 -123.47297668]
[4.75197554 -110.04260254]
[11.43216991 -96.61222839]
[18.11236572 -83.18185425]
[33.23843002 -74.28415680]
[31.94392204 -55.91554642]
[38.82333374 -42.58611679]
[44.68441391 -38.08394241]
[45.70427322 -29.00662422]
[52.38446808 -15.57624817]
[59.06466293 -2.14587259]
[71.73366547 0.20486228]
[80.87192535 9.56297112]
[82.98290253 22.66847610]
[77.07471466 34.77252197]
[89.55065918 42.90886307]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[125.04453278 127.68270874]
[124.98874664 135.07315063]
[138.07731628 138.25181580]
[146.81779480 148.24253845]
[148.18791199 161.25041199]
[141.91024780 172.50299072]
[147.98408508 186.21824646]
[154.05790710 199.93351746]
[160.13174438 213.64878845]
[166.20558167 227.36405945]
[172.27941895 241.07931519]
[187.47648621 242.81036377]
[199.68603516 251.85600281]
[205.68867493 265.70645142]
[203.96417236 280.60214233]
[195.07516479 292.55419922]
[201.14900208 306.26943970]
[215.61849976 312.03759766]
[221.58285522 326.03335571]
[215.99464417 339.79226685]
[222.06848145 353.50750732]
[228.44708252 367.08374023]
[235.12727356 380.51409912]
[241.80746460 393.94448853]
[248.48765564 407.37484741]
[255.16786194 420.80523682]
[269.27645874 415.66448975]
[283.87194824 412.13574219]
[298.77075195 410.26339722]
[313.78549194 410.07101440]
[328.72738647 411.56097412]
[343.40850830 414.71453857]
[357.64419556 419.49209595]
[371.25546265 425.83352661]
[384.07107544 433.65908813]
[395.92993164 442.87036133]
[406.68286133 453.35150146]
[416.19464111 464.97073364]
[424.34564209 477.58187866]
[431.03335571 491.02636719]
[436.17370605 505.13513184]
[439.70199585 519.73071289]
[441.57388306 534.62957764]
[441.76583862 549.64434814]
[440.27542114 564.58618164]
[437.12139893 579.26721191]
[432.34344482 593.50274658]
[426.00158691 607.11383057]
[418.17565918 619.92919922]
[408.96401978 631.78778076]
[398.48254395 642.54040527]
[386.86303711 652.05181885]
[374.25164795 660.20245361]
[360.80694580 666.88977051]
[346.69805908 672.02972412]
[332.10235596 675.55755615]
[317.20343018 677.42901611]
[302.18865967 677.62048340]
[287.24685669 676.12963867]
[272.56594849 672.97521973]
[258.33053589 668.19677734]
[244.71966553 661.85455322]
[231.90449524 654.02819824]
[220.04618835 644.81622314]
[209.29388428 634.33441162]
[199.78280640 622.71466064]
[191.63256836 610.10302734]
[184.94564819 596.65814209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[20 163]
[21 162]
[24 159]
[25 158]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[38 144]
[39 142]
[40 141]
[42 139]
[43 138]
[44 137]
[46 135]
[49 131]
[50 130]
[51 129]
[52 127]
[53 126]
[56 124]
[57 123]
[58 122]
[59 121]
[61 119]
[64 116]
[65 115]
[66 114]
[67 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
