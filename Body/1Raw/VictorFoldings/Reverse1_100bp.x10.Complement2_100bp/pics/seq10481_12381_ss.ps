%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[123.68092346 606.30670166]
[115.61472321 593.64300537]
[108.94030762 580.19366455]
[103.73330688 566.11108398]
[100.05271149 551.55480957]
[97.94023895 536.68975830]
[97.41980743 521.68438721]
[98.49732971 506.70874023]
[101.16059113 491.93243408]
[105.37941742 477.52291870]
[111.10599518 463.64349365]
[118.27545166 450.45141602]
[126.80654144 438.09616089]
[136.60260010 426.71771240]
[147.55264282 416.44497681]
[159.53259277 407.39440918]
[172.40670776 399.66851807]
[186.02909851 393.35485840]
[181.20309448 379.15240479]
[176.37710571 364.94992065]
[171.55110168 350.74746704]
[159.30973816 346.72521973]
[151.50364685 336.23013306]
[151.16250610 322.96008301]
[158.63484192 311.75387573]
[154.02082825 297.48117065]
[149.40681458 283.20843506]
[144.35824585 277.81085205]
[144.83207703 268.68872070]
[140.43107605 254.34887695]
[135.46342468 248.87673950]
[136.07302856 239.76268005]
[131.88601685 225.35890198]
[127.69899750 210.95510864]
[123.51198578 196.55133057]
[119.32497406 182.14755249]
[115.13796234 167.74377441]
[104.15559387 157.68212891]
[107.73325348 142.27073669]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[83.11994934 77.38707733]
[70.89350891 67.34592438]
[73.47216797 52.67623901]
[61.24572754 42.63508606]
[63.82439041 27.96539688]
[58.36903381 13.99259853]
[52.33286285 7.13676310]
[52.93817520 -0.22906293]
[47.69145584 -14.28153419]
[35.61586761 -24.50360680]
[38.41265488 -39.13327789]
[33.16593552 -53.18574905]
[30.77110672 -38.37815475]
[23.25184822 -25.39891243]
[11.59745121 -15.95565987]
[-2.65875030 -11.29082108]
[-17.64110756 -12.01813602]
[-31.37843323 -18.04191399]
[-42.06334305 -28.56962204]
[-48.29006195 -42.21615982]
[-49.23934937 -57.18609238]
[-44.78631210 -71.50986481]
[-35.51682663 -83.30294037]
[-22.65045166 -91.01373291]
[-7.87997866 -93.62776184]
[6.85128069 -90.80110931]
[19.60517693 -82.90565491]
[28.70479202 -70.97807312]
[26.70077705 -85.84360504]
[24.69676399 -100.70912933]
[22.69275093 -115.57466125]
[20.68873596 -130.44018555]
[18.68472290 -145.30570984]
[16.68070984 -160.17124939]
[14.67669582 -175.03677368]
[12.45157814 -189.87081909]
[10.00585079 -204.67008972]
[7.56012344 -219.46936035]
[-7.47298479 -219.42663574]
[-22.31824875 -221.79609680]
[-36.59114075 -226.51634216]
[-49.92195511 -233.46511841]
[-61.96539688 -242.46243286]
[-72.40950775 -253.27523804]
[-80.98376465 -265.62344360]
[-87.46607208 -279.18722534]
[-91.68852234 -293.61520386]
[-93.54174042 -308.53372192]
[-92.97772217 -323.55630493]
[-90.01108551 -338.29385376]
[-84.71866608 -352.36462402]
[-77.23755646 -365.40414429]
[-67.76153564 -377.07467651]
[-56.53604507 -387.07388306]
[-43.85186005 -395.14282227]
[-30.03753281 -401.07244873]
[-15.45088387 -404.70919800]
[-0.46974319 -405.95883179]
[14.51784134 -404.78900146]
[29.12365532 -401.23001099]
[42.96937180 -395.37405396]
[55.69635391 -387.37280273]
[66.97494507 -377.43350220]
[76.51300049 -365.81362915]
[84.06345367 -352.81411743]
[89.43074799 -338.77175903]
[92.47583771 -324.05023193]
[93.11986542 -309.03085327]
[91.34613800 -294.10269165]
[87.20059967 -279.65240479]
[80.79063416 -266.05429077]
[72.28227234 -253.66058350]
[61.89590073 -242.79231262]
[49.90055466 -233.73097229]
[36.60694122 -226.71128845]
[22.35939407 -221.91508484]
[24.80512238 -207.11581421]
[27.25084877 -192.31654358]
[30.54275131 -188.85643005]
[31.69597816 -183.29161072]
[29.54222298 -177.04078674]
[31.54623795 -162.17526245]
[33.55025101 -147.30972290]
[35.55426407 -132.44419861]
[37.55827713 -117.57867432]
[39.56229401 -102.71314240]
[41.56630707 -87.84761810]
[43.57032013 -72.98208618]
[47.21840668 -58.43246841]
[52.46512604 -44.37999725]
[64.16542816 -35.16304779]
[61.74392700 -19.52825165]
[66.99064636 -5.47578096]
[72.34182739 8.53724194]
[77.79718781 22.51004028]
[89.63342285 31.55176353]
[87.44496918 47.22088242]
[99.28120422 56.26260376]
[97.09274292 71.93172455]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[123.87904358 109.34588623]
[138.16793823 104.78216553]
[151.56140137 111.53605652]
[156.38705444 125.73862457]
[149.88055420 139.25399780]
[135.76910400 144.33995056]
[122.13703156 138.08372498]
[133.41888428 149.17562866]
[129.54174805 163.55676270]
[133.72875977 177.96054077]
[137.91577148 192.36431885]
[142.10278320 206.76809692]
[146.28979492 221.17189026]
[150.47680664 235.57566833]
[154.77093506 249.94787598]
[159.17192078 264.28771973]
[163.67955017 278.59442139]
[168.29356384 292.86715698]
[172.90757751 307.13989258]
[188.62571716 314.81838989]
[193.82501221 331.16714478]
[185.75355530 345.92147827]
[190.57955933 360.12393188]
[195.40556335 374.32638550]
[200.23155212 388.52883911]
[214.88040161 385.23593140]
[229.79627991 383.51879883]
[244.81018066 383.39685059]
[259.75198364 384.87152100]
[274.45239258 387.92605591]
[288.74481201 392.52587891]
[302.46734619 398.61886597]
[315.46447754 406.13598633]
[327.58892822 414.99203491]
[338.70333862 425.08666992]
[348.68179321 436.30554199]
[357.41116333 448.52151489]
[364.79260254 461.59616089]
[370.74246216 475.38134766]
[375.19329834 489.72085571]
[378.09469604 504.45227051]
[379.41378784 519.40863037]
[379.13558960 534.42041016]
[377.26330566 549.31762695]
[373.81814575 563.93139648]
[368.83911133 578.09619141]
[362.38262939 591.65148926]
[354.52188110 604.44372559]
[345.34588623 616.32788086]
[334.95867920 627.16937256]
[323.47790527 636.84533691]
[311.03366089 645.24609375]
[297.76696777 652.27648926]
[283.82812500 657.85693359]
[269.37509155 661.92407227]
[254.57160950 664.43188477]
[239.58543396 665.35198975]
[224.58636475 664.67388916]
[209.74433899 662.40533447]
[195.22753906 658.57196045]
[181.20045471 653.21722412]
[167.82200623 646.40185547]
[155.24380493 638.20300293]
[143.60836792 628.71362305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 171]
[19 170]
[20 169]
[21 168]
[25 165]
[26 164]
[27 163]
[29 162]
[30 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[39 153]
[40 146]
[41 145]
[43 143]
[44 142]
[46 140]
[48 138]
[49 137]
[51 136]
[52 135]
[54 133]
[55 132]
[71 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 121]
[80 120]
[81 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
