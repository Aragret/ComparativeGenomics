%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[109.01858521 596.46734619]
[107.01434326 611.69488525]
[97.65211487 623.87048340]
[83.45028687 629.71887207]
[68.22908783 627.66687012]
[56.08293152 618.26654053]
[50.27908325 604.04644775]
[52.37874603 588.83178711]
[61.81712341 576.71514893]
[76.05533600 570.95587158]
[78.05934906 556.09033203]
[80.06336212 541.22485352]
[81.62388611 526.30621338]
[82.73953247 511.34777832]
[83.85517883 496.38931274]
[84.97083282 481.43087769]
[82.33352661 474.52676392]
[86.21607208 466.25854492]
[87.55430603 451.31835938]
[88.78128052 436.36862183]
[89.89693451 421.41018677]
[91.01258087 406.45172119]
[92.12822723 391.49325562]
[77.08857727 384.34732056]
[65.92259979 371.94558716]
[60.36424637 356.17172241]
[61.29285431 339.43615723]
[68.59416962 324.30780029]
[81.17354584 313.11981201]
[97.11998749 307.60952759]
[97.78977203 292.62451172]
[98.45955658 277.63946533]
[99.12934113 262.65441895]
[99.79913330 247.66938782]
[100.46891785 232.68434143]
[101.13870239 217.69931030]
[101.80848694 202.71426392]
[102.47827148 187.72923279]
[103.03648376 172.73962402]
[103.48308563 157.74627686]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[84.03633118 103.53142548]
[72.05991364 112.56278992]
[57.18475723 114.49403381]
[43.29918671 108.82032776]
[34.03285599 97.02477264]
[31.80796242 82.19069672]
[37.20608902 68.19568634]
[48.81617737 58.69801331]
[63.60337830 56.18033600]
[77.70235443 61.30077744]
[87.42727661 72.72006226]
[86.31163025 57.76160812]
[75.59358215 42.78813171]
[83.82433319 27.28904915]
[82.48609924 12.34886456]
[81.14786530 -2.59132051]
[79.80963135 -17.53150558]
[78.47139740 -32.47169113]
[77.13316345 -47.41187668]
[66.19337463 -62.22411346]
[74.19245911 -77.84402466]
[72.63193512 -92.76262665]
[67.29225922 -78.74521637]
[58.41321182 -66.65544891]
[46.63578415 -57.36608887]
[32.81019211 -51.54775238]
[17.93452072 -49.62046432]
[3.08265877 -51.72336197]
[-10.67322731 -57.70463181]
[-22.34008789 -67.13248444]
[-31.07568169 -79.32630920]
[-36.24937820 -93.40583038]
[-37.48768616 -108.35462952]
[-34.70121002 -123.09354401]
[-28.09110641 -136.55854797]
[-18.13456535 -147.77761841]
[-5.55035782 -155.94081116]
[8.75305080 -160.45883179]
[23.74308586 -161.00550842]
[38.33760071 -157.54139709]
[51.48300934 -150.31655884]
[62.23033142 -139.85256958]
[69.80371094 -126.90483856]
[73.65655518 -112.40689850]
[76.76066589 -127.08219910]
[72.04666901 -142.18481445]
[82.25027466 -153.03541565]
[85.35438538 -167.71072388]
[84.06861115 -176.75421143]
[88.61550140 -182.58065796]
[91.93775940 -197.20811462]
[95.26001740 -211.83558655]
[97.59550476 -226.65264893]
[98.93373871 -241.59283447]
[100.27197266 -256.53302002]
[86.53659058 -262.94512939]
[75.82482147 -273.67050171]
[69.43015289 -287.41400146]
[68.12478638 -302.51605225]
[72.06633759 -317.15298462]
[80.77885437 -329.55734253]
[93.21025848 -338.23120117]
[107.85939026 -342.12719727]
[122.95729828 -340.77484131]
[136.68084717 -334.33743286]
[147.37283325 -323.59234619]
[153.74215698 -309.83706665]
[155.01969910 -294.73263550]
[151.05117798 -280.10299683]
[142.31581116 -267.71472168]
[129.86845398 -259.06375122]
[115.21215820 -255.19477844]
[113.87392426 -240.25459290]
[112.53569031 -225.31440735]
[122.86373138 -236.19244385]
[137.40765381 -239.86318970]
[151.66085815 -235.18922424]
[161.20684814 -223.61882019]
[163.08769226 -208.73721313]
[156.72058105 -195.15560913]
[144.07844543 -187.08242798]
[129.07856750 -187.01922607]
[116.36885071 -194.98559570]
[109.88748169 -208.51332092]
[106.56522369 -193.88586426]
[103.24295807 -179.25839233]
[100.02968597 -164.60661316]
[96.92557526 -149.93130493]
[101.86160278 -135.87837219]
[91.43596649 -123.97809601]
[88.33186340 -109.30278778]
[87.55053711 -94.32315063]
[89.11106110 -79.40454865]
[98.30745697 -71.54624939]
[99.72965240 -59.13008499]
[92.07334900 -48.75011063]
[93.41158295 -33.80992508]
[94.74981689 -18.86973953]
[96.08805084 -3.92955470]
[97.42628479 11.01063061]
[98.76451874 25.95081520]
[107.84290314 33.94516373]
[109.08007812 46.38112640]
[101.27008820 56.64595795]
[102.38573456 71.60441589]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[120.67994690 125.04259491]
[129.11907959 112.64173889]
[141.08792114 103.60034180]
[155.32336426 98.87256622]
[170.32313538 98.95732880]
[184.50424194 103.84569550]
[196.37013245 113.02178192]
[204.66856384 125.51721954]
[208.52380371 140.01333618]
[207.52897644 154.98030090]
[201.78907776 168.83863831]
[191.90985107 180.12583923]
[178.93386841 187.65074158]
[164.23052979 190.61920166]
[149.35150146 188.71798706]
[135.86701965 182.14770508]
[125.20011139 171.60174561]
[118.47644043 158.19287109]
[118.02983093 173.18623352]
[120.90234375 181.85723877]
[117.46331024 188.39901733]
[116.79352570 203.38404846]
[116.12374115 218.36909485]
[115.45395660 233.35412598]
[114.78417206 248.33917236]
[114.11437988 263.32421875]
[113.44459534 278.30923462]
[112.77481079 293.29428101]
[112.10502625 308.27932739]
[124.57989502 313.28298950]
[134.88845825 321.87258911]
[142.03649902 333.20138550]
[145.34028625 346.15945435]
[144.49191284 359.48229980]
[139.58793640 371.87429810]
[131.11866760 382.13467407]
[119.91909790 389.27383423]
[107.08668518 392.60891724]
[105.97103119 407.56738281]
[104.85538483 422.52581787]
[103.73973846 437.48428345]
[106.22220612 446.27490234]
[102.49449158 452.65658569]
[101.15625763 467.59677124]
[99.92928314 482.54650879]
[98.81363678 497.50497437]
[97.69798279 512.46343994]
[96.58233643 527.42187500]
[98.60577393 531.26373291]
[99.23785400 535.15795898]
[98.63297272 538.66070557]
[97.07378387 541.42395020]
[94.92888641 543.22882080]
[92.92487335 558.09436035]
[90.92086029 572.95989990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 203]
[14 202]
[15 201]
[16 200]
[18 199]
[19 198]
[20 196]
[21 195]
[22 194]
[23 193]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 174]
[40 173]
[41 155]
[42 154]
[43 153]
[45 151]
[56 150]
[57 149]
[59 146]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[66 138]
[67 137]
[89 136]
[90 135]
[92 133]
[93 132]
[95 131]
[96 130]
[97 129]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
