%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[59.83141327 369.48428345]
[54.73210144 383.59942627]
[48.52745438 397.26480103]
[41.25669479 410.39401245]
[32.96579742 422.90405273]
[23.70717812 434.71582031]
[13.53937054 445.75463867]
[2.52666426 455.95074463]
[-9.26131630 465.23965454]
[-21.75004196 473.56262207]
[-34.86055374 480.86703491]
[-48.50996017 487.10671997]
[-62.61196899 492.24221802]
[-77.07741547 496.24108887]
[-91.81484985 499.07803345]
[-106.73108673 500.73507690]
[-121.73183441 501.20181274]
[-136.72222900 500.47521973]
[-151.60752869 498.55996704]
[-166.29357910 495.46807861]
[-180.68757629 491.21917725]
[-194.69847107 485.84008789]
[-208.23771667 479.36480713]
[-221.21969604 471.83432007]
[-233.56233215 463.29620361]
[-245.18757629 453.80444336]
[-256.02197266 443.41903687]
[-265.99697876 432.20568848]
[-275.04953003 420.23526001]
[-283.12240601 407.58343506]
[-290.16458130 394.33023071]
[-296.13150024 380.55938721]
[-300.98547363 366.35800171]
[-304.69580078 351.81585693]
[-307.23898315 337.02493286]
[-308.59899902 322.07867432]
[-308.76721191 307.07162476]
[-307.74258423 292.09863281]
[-305.53155518 277.25439453]
[-302.14816284 262.63272095]
[-297.61373901 248.32612610]
[-291.95700073 234.42498779]
[-285.21368408 221.01724243]
[-277.42642212 208.18763733]
[-268.64447021 196.01730347]
[-258.92333984 184.58316040]
[-248.32446289 173.95751953]
[-236.91490173 164.20756531]
[-224.76675415 155.39491272]
[-211.95683289 147.57530212]
[-198.56614685 140.79817200]
[-184.67933655 135.10636902]
[-170.38421631 130.53587341]
[-155.77114868 127.11558533]
[-140.93252563 124.86712646]
[-125.96218109 123.80471039]
[-110.95475006 123.93505859]
[-96.00511169 125.25734711]
[-81.20779419 127.76321411]
[-66.65634155 131.43681335]
[-52.44276047 136.25492859]
[-38.65691376 142.18708801]
[-25.38596153 149.19580078]
[-12.71380806 157.23672485]
[-0.72057205 166.25906372]
[10.51792049 176.20573425]
[21.32007790 165.79835510]
[32.12223434 155.39099121]
[42.92438889 144.98361206]
[53.72654724 134.57623291]
[64.52870178 124.16886902]
[75.33085632 113.76149750]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[114.02371979 75.51294708]
[118.36747742 60.29972076]
[132.85115051 56.82516479]
[143.49716187 46.25811768]
[154.14317322 35.69107056]
[164.71022034 25.04506111]
[175.19770813 14.32068157]
[185.68521118 3.59630227]
[175.65121460 -7.56051302]
[166.35266113 -19.33728790]
[157.82774353 -31.68562889]
[150.11151123 -44.55479431]
[143.23565674 -57.89189911]
[137.22845459 -71.64214325]
[132.11457825 -85.74901581]
[127.91503906 -100.15455627]
[124.64710236 -114.79956055]
[122.32418823 -129.62385559]
[120.95584869 -144.56652832]
[120.54769897 -159.56616211]
[121.10142517 -174.56112671]
[122.61475372 -189.48980713]
[125.08145142 -204.29086304]
[128.49139404 -218.90345764]
[132.83056641 -233.26754761]
[138.08113098 -247.32412720]
[144.22152710 -261.01541138]
[151.22651672 -274.28515625]
[159.06729126 -287.07879639]
[167.71166992 -299.34381104]
[177.12411499 -311.02978516]
[187.26593018 -322.08865356]
[198.09547424 -332.47503662]
[209.56820679 -342.14624023]
[221.63702393 -351.06246948]
[234.25230408 -359.18716431]
[247.36221313 -366.48687744]
[260.91287231 -372.93164062]
[274.84863281 -378.49496460]
[289.11218262 -383.15399170]
[303.64495850 -386.88955688]
[318.38720703 -389.68634033]
[333.27835083 -391.53283691]
[348.25720215 -392.42144775]
[363.26220703 -392.34854126]
[378.23171997 -391.31439209]
[393.10421753 -389.32327271]
[407.81857300 -386.38336182]
[422.31433105 -382.50674438]
[436.53195190 -377.70932007]
[450.41299438 -372.01083374]
[463.90039062 -365.43469238]
[476.93875122 -358.00793457]
[489.47445679 -349.76104736]
[501.45605469 -340.72793579]
[512.83428955 -330.94570923]
[523.56237793 -320.45458984]
[533.59625244 -309.29766846]
[542.89465332 -297.52078247]
[551.41943359 -285.17233276]
[559.13555908 -272.30310059]
[566.01123047 -258.96591187]
[572.01831055 -245.21559143]
[577.13201904 -231.10867310]
[581.33142090 -216.70307922]
[584.59918213 -202.05804443]
[586.92193604 -187.23371887]
[588.29010010 -172.29103088]
[588.69805908 -157.29139709]
[588.14416504 -142.29643250]
[586.63067627 -127.36776733]
[584.16381836 -112.56674194]
[580.75372314 -97.95418549]
[576.41436768 -83.59014130]
[571.16369629 -69.53362274]
[565.02313232 -55.84241104]
[558.01800537 -42.57275391]
[550.17706299 -29.77918053]
[541.53253174 -17.51426697]
[532.11999512 -5.82841063]
[521.97802734 5.23036861]
[511.14840698 15.61662769]
[499.67553711 25.28768539]
[487.60662842 34.20380402]
[474.99127197 42.32834244]
[461.88128662 49.62791443]
[448.33053589 56.07252502]
[434.39471436 61.63569260]
[420.13110352 66.29455566]
[405.59829712 70.02997589]
[390.85601807 72.82659149]
[375.96487427 74.67292023]
[360.98599243 75.56137085]
[345.98098755 75.48829651]
[331.01150513 74.45398712]
[316.13903809 72.46270752]
[301.42468262 69.52263641]
[286.92895508 65.64584351]
[272.71139526 60.84827042]
[258.83044434 55.14963150]
[245.34310913 48.57334137]
[232.30484009 41.14642334]
[219.76919556 32.89939499]
[207.78770447 23.86614990]
[196.40959167 14.08380318]
[185.92208862 24.80818367]
[175.43460083 35.53256226]
[173.00547791 42.51261902]
[164.71022034 46.33707809]
[154.06420898 56.90412521]
[143.41819763 67.47117615]
[139.83592224 81.92858124]
[124.59076691 86.15895844]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[92.73617554 122.18656158]
[85.73823547 124.56365204]
[74.93607330 134.97102356]
[64.13391876 145.37840271]
[53.33176422 155.78576660]
[42.52960587 166.19314575]
[31.72744942 176.60050964]
[20.92529297 187.00788879]
[30.44684982 198.60874939]
[39.01660919 210.92944336]
[46.58039093 223.89204407]
[53.09037399 237.41462708]
[58.50540161 251.41168213]
[62.79123306 265.79473877]
[65.92076874 280.47280884]
[67.87423706 295.35311890]
[68.63926697 310.34161377]
[68.21104431 325.34350586]
[66.59225464 340.26394653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 199]
[67 198]
[68 197]
[69 196]
[70 195]
[71 194]
[72 193]
[73 191]
[75 189]
[76 188]
[78 186]
[79 185]
[80 184]
[81 182]
[82 181]
[83 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
