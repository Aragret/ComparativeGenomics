%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[72.21405792 737.80145264]
[57.21600723 737.13104248]
[42.36272812 734.94677734]
[27.80663872 731.27099609]
[13.69711113 726.14147949]
[0.17893231 719.61077881]
[-12.60917950 711.74597168]
[-24.53599739 702.62774658]
[-35.47912979 692.34967041]
[-45.32628632 681.01721191]
[-53.97642136 668.74664307]
[-61.34076309 655.66394043]
[-67.34374237 641.90332031]
[-71.92376709 627.60595703]
[-75.03382874 612.91857910]
[-76.64201355 597.99194336]
[-76.73182678 582.97918701]
[-75.30234528 568.03436279]
[-72.36823273 553.31085205]
[-67.95959473 538.95971680]
[-62.12168121 525.12823486]
[-54.91439438 511.95834351]
[-46.41169357 499.58520508]
[-36.70082855 488.13574219]
[-25.88144684 477.72747803]
[-14.06457806 468.46719360]
[-1.37147963 460.44995117]
[12.06759548 453.75799561]
[26.11474037 448.45999146]
[40.62580872 444.61035156]
[55.45189285 442.24850464]
[70.44084930 441.39874268]
[71.11063385 426.41369629]
[71.78042603 411.42868042]
[72.45021057 396.44363403]
[73.11999512 381.45858765]
[73.67820740 366.46899414]
[74.12480927 351.47561646]
[74.57141876 336.48226929]
[75.01802063 321.48892212]
[75.46463013 306.49557495]
[73.64272308 304.36514282]
[72.55493927 301.38464355]
[72.52927399 297.83010864]
[73.78784943 294.09106445]
[76.41060638 290.63055420]
[77.74884033 275.69036865]
[79.08707428 260.75018311]
[72.51609802 247.38336182]
[81.45373535 234.32852173]
[82.79196930 219.38833618]
[83.90762329 204.42987061]
[84.80043793 189.45646667]
[85.69325256 174.48306274]
[86.58606720 159.50965881]
[84.53173065 156.64399719]
[83.76332855 152.64091492]
[84.80034637 148.11567688]
[87.86784363 143.89221191]
[89.42836761 128.97361755]
[76.28897095 119.72351074]
[69.58585358 105.11952972]
[71.13855743 89.12586975]
[80.52559662 76.08395386]
[95.19889832 69.53396606]
[96.53713226 54.59378433]
[90.06188202 40.15835190]
[98.90379333 28.17212105]
[100.24202728 13.23193645]
[101.58026886 -1.70824862]
[89.40523529 7.05352640]
[74.57911682 4.77619219]
[65.59498596 -7.23569155]
[67.59935760 -22.10117149]
[79.44403839 -31.30462646]
[94.34385681 -29.57389832]
[103.76324463 -17.90133858]
[106.42903900 -32.66255569]
[101.26747131 -47.61811447]
[111.14349365 -58.76771164]
[113.47898102 -73.58477783]
[115.48299408 -88.45030975]
[117.48700714 -103.31583405]
[119.49102020 -118.18136597]
[121.49503326 -133.04689026]
[123.49904633 -147.91241455]
[116.11162567 -164.77976990]
[127.37160492 -178.24008179]
[129.15406799 -193.13378906]
[130.93653870 -208.02751160]
[123.29880524 -224.78300476]
[134.35713196 -238.40946960]
[135.91766357 -253.32806396]
[137.47817993 -268.24667358]
[123.12730408 -272.78948975]
[109.98481750 -280.12844849]
[98.58891296 -289.96298218]
[89.40622711 -301.89038086]
[82.81279755 -315.42227173]
[79.07861328 -330.00445557]
[78.35659790 -345.03988647]
[80.67630005 -359.91281128]
[85.94274902 -374.01419067]
[93.94026947 -386.76663208]
[104.34137726 -397.64788818]
[116.72015381 -406.21240234]
[130.56970215 -412.10943604]
[145.32287598 -415.09753418]
[160.37554932 -415.05435181]
[175.11132812 -411.98159790]
[188.92678833 -406.00515747]
[201.25619507 -397.36972046]
[211.59466553 -386.42892456]
[219.51884460 -373.63079834]
[224.70425415 -359.49938965]
[226.93855286 -344.61340332]
[226.13023376 -329.58239746]
[222.31239319 -315.02185059]
[215.64140320 -301.52807617]
[206.39039612 -289.65356445]
[194.93821716 -279.88461304]
[181.75382996 -272.62121582]
[167.37710571 -268.16085815]
[152.39678955 -266.68615723]
[150.83625793 -251.76754761]
[149.27574158 -236.84893799]
[156.64686584 -227.25764465]
[155.46885681 -214.81593323]
[145.83026123 -206.24504089]
[144.04779053 -191.35133362]
[142.26531982 -176.45761108]
[149.49282837 -166.75762939]
[148.12971497 -154.33483887]
[138.36457825 -145.90840149]
[136.36056519 -131.04287720]
[134.35655212 -116.17735291]
[132.35253906 -101.31182098]
[130.34852600 -86.44629669]
[128.34451294 -71.58076477]
[130.18002319 -68.57025146]
[130.64855957 -64.52111053]
[129.27783203 -60.08552170]
[125.90470886 -56.10191727]
[131.25695801 -42.20217896]
[121.19026184 -29.99675941]
[118.52446747 -15.23554230]
[116.52044678 -0.37001440]
[115.18221283 14.57017040]
[113.84397888 29.51035500]
[120.41495514 42.87716293]
[111.47731781 55.93201828]
[110.13908386 70.87220001]
[121.67240906 78.05606842]
[128.99931335 89.49906158]
[130.69769287 102.98020172]
[126.43790436 115.88290405]
[117.04675293 125.70287323]
[104.34696960 130.53413391]
[102.78645325 145.45274353]
[101.55947876 160.40248108]
[100.66665649 175.37588501]
[99.77384186 190.34928894]
[98.88102722 205.32269287]
[101.49372864 211.39602661]
[100.75759125 217.03118896]
[97.73215485 220.72656250]
[96.39392090 235.66674805]
[102.86917877 250.10217285]
[94.02725983 262.08840942]
[92.68902588 277.02859497]
[91.35079193 291.96878052]
[90.45797729 306.94219971]
[90.01136780 321.93554688]
[89.56476593 336.92889404]
[89.11815643 351.92224121]
[88.67155457 366.91558838]
[91.54406738 375.58660889]
[88.10503387 382.12838745]
[87.43524933 397.11340332]
[86.76546478 412.09844971]
[86.09567261 427.08349609]
[85.42588806 442.06854248]
[100.27926636 444.25216675]
[114.83551788 447.92727661]
[128.94526672 453.05621338]
[142.46372986 459.58630371]
[155.25219727 467.45056152]
[167.17941284 476.56823730]
[178.12300110 486.84585571]
[187.97065735 498.17785645]
[196.62132263 510.44802856]
[203.98625183 523.53039551]
[209.98983765 537.29077148]
[214.57048035 551.58795166]
[217.68119812 566.27514648]
[219.29003906 581.20172119]
[219.38050842 596.21447754]
[217.95169067 611.15936279]
[215.01821899 625.88305664]
[210.61021423 640.23437500]
[204.77290344 654.06610107]
[197.56620789 667.23626709]
[189.06404114 679.60980225]
[179.35368347 691.05969238]
[168.53475952 701.46844482]
[156.71829224 710.72924805]
[144.02555847 718.74707031]
[130.58677673 725.43957520]
[116.53986359 730.73822021]
[102.02896118 734.58850098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[46 171]
[47 170]
[48 169]
[50 167]
[51 166]
[52 163]
[53 162]
[54 161]
[55 160]
[59 159]
[60 158]
[65 152]
[66 151]
[68 149]
[69 148]
[70 147]
[77 146]
[78 145]
[80 143]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[86 134]
[88 131]
[89 130]
[90 129]
[92 126]
[93 125]
[94 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
