%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[108.40896606 618.33801270]
[96.87916565 608.64898682]
[87.70214844 596.70758057]
[81.30713654 583.07244873]
[77.99323273 568.38122559]
[77.91543579 553.32104492]
[81.07739258 538.59637451]
[87.33120728 524.89587402]
[96.38437653 512.86035156]
[107.81346130 503.05267334]
[121.08391571 495.93164062]
[135.57504272 491.83029175]
[134.68223572 476.85687256]
[133.78941345 461.88348389]
[132.89660645 446.91006470]
[116.59331512 437.77246094]
[109.03108978 420.51727295]
[113.43148804 402.04443359]
[128.19245911 389.86047363]
[126.63193512 374.94186401]
[117.61254120 363.08859253]
[123.87216187 348.55834961]
[122.31163788 333.63973999]
[120.75111389 318.72116089]
[119.19058990 303.80255127]
[109.99419403 295.94424438]
[108.57199860 283.52807617]
[116.22830200 273.14810181]
[114.89006805 258.20791626]
[113.55183411 243.26773071]
[112.10240936 228.33792114]
[110.54188538 213.41932678]
[108.98136902 198.50071716]
[107.42084503 183.58210754]
[105.86032104 168.66351318]
[104.29979706 153.74490356]
[101.74396515 138.96424866]
[98.20429230 124.38787842]
[94.66461945 109.81150055]
[91.01653290 95.26187897]
[87.26023102 80.73982239]
[79.72344971 93.70890045]
[65.65675354 98.91735840]
[51.49124908 93.98396301]
[43.70320511 81.16419983]
[45.85321808 66.31908417]
[56.95832825 56.23560715]
[71.94142914 55.52379608]
[83.95347595 64.51063538]
[74.25463867 52.01090240]
[80.01836395 38.27667999]
[77.79324341 23.44263649]
[75.56813049 8.60859299]
[65.67860413 0.32848457]
[64.13069153 -12.07263279]
[71.21298218 -21.87914848]
[69.20896912 -36.74467850]
[67.20494843 -51.61020660]
[65.09032440 -66.46040344]
[62.86521149 -81.29444885]
[53.16638184 -93.79417419]
[58.93009949 -107.52839661]
[56.70498276 -122.36244202]
[52.12938690 -108.07734680]
[44.80821228 -94.98535156]
[35.03306580 -83.60789490]
[23.19328117 -74.39813995]
[9.76043415 -67.72291565]
[-4.73044968 -63.84808731]
[-19.70220375 -62.92798996]
[-34.55850983 -64.99926758]
[-48.70764542 -69.97942352]
[-61.58605576 -77.67009735]
[-72.68080139 -87.76498413]
[-81.54998016 -99.86199188]
[-87.84033966 -113.47930908]
[-91.30133057 -128.07456970]
[-91.79511261 -143.06643677]
[-89.30200958 -157.85780334]
[-83.92132568 -171.85952759]
[-75.86737061 -184.51393127]
[-65.46092987 -195.31697083]
[-53.11648560 -203.83840942]
[-39.32571793 -209.73880005]
[-24.63790321 -212.78315735]
[-9.63805199 -212.85021973]
[5.07639503 -209.93731689]
[18.91936874 -204.16046143]
[31.33950996 -195.74974060]
[41.84212494 -185.04016113]
[50.00890732 -172.45828247]
[55.51456451 -158.50523376]
[58.13950348 -143.74092102]
[62.32651520 -158.14469910]
[66.51352692 -172.54847717]
[70.70053864 -186.95225525]
[74.88755035 -201.35604858]
[79.07456207 -215.75982666]
[83.26157379 -230.16360474]
[69.86721039 -237.01835632]
[58.01234436 -246.28434753]
[48.12551117 -257.62661743]
[40.56411743 -270.63516235]
[35.60150146 -284.83969116]
[33.41706085 -299.72674561]
[34.08975983 -314.75817871]
[37.59527969 -329.39062500]
[43.80690002 -343.09506226]
[52.50007629 -355.37615967]
[63.36054993 -365.78991699]
[75.99572754 -373.95993042]
[89.94885254 -379.59078979]
[104.71553040 -382.47900391]
[119.76195526 -382.52014160]
[134.54420471 -379.71270752]
[148.52790833 -374.15823364]
[161.20756531 -366.05743408]
[172.12481689 -355.70321655]
[180.88500977 -343.46981812]
[187.17147827 -329.79953003]
[190.75695801 -315.18649292]
[191.51182556 -300.15896606]
[189.40882874 -285.26019287]
[184.52395630 -271.02871704]
[177.03379822 -257.97903442]
[167.20912170 -246.58288574]
[155.40510559 -237.25221252]
[142.04843140 -230.32432556]
[127.62193298 -226.04965210]
[112.64713287 -224.58273315]
[97.66535187 -225.97659302]
[93.47834015 -211.57281494]
[89.29132843 -197.16903687]
[85.10431671 -182.76524353]
[80.91730499 -168.36146545]
[76.73029327 -153.95768738]
[72.54328918 -139.55390930]
[71.53902435 -124.58755493]
[73.76414490 -109.75351715]
[83.30381775 -98.31481171]
[77.69925690 -83.51956177]
[79.92436981 -68.68551636]
[84.02532196 -62.53702164]
[82.07048035 -53.61421967]
[84.07449341 -38.74869156]
[86.07850647 -23.88316345]
[97.53764343 -10.59199333]
[90.40216827 6.38347626]
[92.62728882 21.21751976]
[94.85240173 36.05156326]
[104.39208221 47.49026489]
[98.78751373 62.28551483]
[101.78228760 76.98352051]
[105.53858948 91.50557709]
[110.44554138 97.90045166]
[109.24099731 106.27182770]
[112.78067017 120.84820557]
[116.32034302 135.42457581]
[122.59941864 121.80205536]
[135.18904114 113.64721680]
[150.18818665 113.48693848]
[162.94920349 121.37088013]
[169.51794434 134.85612488]
[167.85902405 149.76409912]
[158.48646545 161.47543335]
[144.30447388 166.36122131]
[129.70747375 162.90756226]
[119.21839905 152.18438721]
[120.77892303 167.10298157]
[122.33944702 182.02159119]
[123.89997101 196.94020081]
[125.46049500 211.85879517]
[127.02101898 226.77740479]
[131.02622986 234.98690796]
[128.49201965 241.92950439]
[129.83024597 256.86968994]
[131.16848755 271.80987549]
[142.10827637 286.62210083]
[134.10919189 302.24203491]
[135.66972351 317.16061401]
[137.23023987 332.07922363]
[138.79075623 346.99783325]
[147.92178345 359.91818237]
[141.55053711 373.38134766]
[143.11106873 388.29992676]
[153.88264465 392.22259521]
[162.37417603 399.84719849]
[167.38447571 410.04370117]
[168.22407532 421.32217407]
[164.80986023 432.05035400]
[157.67158508 440.68997192]
[147.87001038 446.01724243]
[148.76281738 460.99066162]
[149.65563965 475.96408081]
[150.54844666 490.93746948]
[165.42427063 493.28778076]
[179.44689941 498.78140259]
[191.96046448 507.16143799]
[202.37968445 518.03588867]
[210.21722412 530.89617920]
[215.10652161 545.14080811]
[216.81889343 560.10345459]
[215.27424622 575.08441162]
[210.54483032 589.38287354]
[202.85183716 602.33013916]
[192.55509949 613.32067871]
[180.13619995 621.84033203]
[166.17599487 627.49072266]
[151.32743835 630.00750732]
[136.28500366 629.27301025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 195]
[13 194]
[14 193]
[15 192]
[19 185]
[20 184]
[22 182]
[23 181]
[24 180]
[25 179]
[28 177]
[29 176]
[30 175]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[37 158]
[38 157]
[39 156]
[40 154]
[41 153]
[49 152]
[51 150]
[52 149]
[53 148]
[56 146]
[57 145]
[58 144]
[59 142]
[60 141]
[62 139]
[63 138]
[93 137]
[94 136]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
