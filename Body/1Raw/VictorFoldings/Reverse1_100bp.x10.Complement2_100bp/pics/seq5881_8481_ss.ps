%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[94.12880707 185.83221436]
[96.87531281 200.58900452]
[98.28795624 215.53257751]
[98.35536957 230.54263306]
[97.07700348 245.49830627]
[94.46316528 260.27917480]
[90.53488159 274.76623535]
[85.32379150 288.84283447]
[78.87184906 302.39566040]
[71.23101044 315.31555176]
[62.46278381 327.49850464]
[52.63777542 338.84643555]
[41.83509064 349.26797485]
[30.14170647 358.67916870]
[17.65177536 367.00430298]
[4.46585941 374.17633057]
[-9.30987358 380.13748169]
[-23.56450844 384.83978271]
[-38.18327332 388.24536133]
[-53.04846191 390.32681274]
[-68.04039001 391.06735229]
[-83.03833771 390.46105957]
[-97.92156982 388.51275635]
[-112.57022858 385.23815918]
[-126.86638641 380.66366577]
[-140.69493103 374.82604980]
[-153.94451904 367.77236938]
[-166.50846863 359.55935669]
[-178.28562927 350.25320435]
[-189.18118286 339.92880249]
[-199.10737610 328.66928101]
[-207.98429871 316.56527710]
[-215.74049377 303.71429443]
[-222.31349182 290.21978760]
[-227.65039062 276.19039917]
[-231.70819092 261.73907471]
[-234.45423889 246.98220825]
[-235.86643982 232.03858948]
[-235.93339539 217.02853394]
[-234.65457153 202.07290649]
[-232.04026794 187.29211426]
[-228.11155701 172.80517578]
[-222.90002441 158.72872925]
[-216.44767761 145.17611694]
[-208.80644226 132.25645447]
[-200.03784180 120.07376099]
[-190.21249390 108.72612762]
[-179.40948486 98.30493164]
[-167.71582031 88.89407349]
[-155.22563171 80.56932068]
[-142.03948975 73.39769745]
[-128.26358032 67.43696594]
[-114.00880432 62.73509598]
[-99.38993073 59.32995987]
[-84.52468109 57.24897003]
[-69.53273010 56.50888443]
[-54.53479767 57.11565399]
[-39.65163040 59.06440353]
[-25.00306702 62.33943176]
[-10.70705032 66.91438293]
[3.12131524 72.75240326]
[16.37068939 79.80650330]
[28.93439293 88.01988220]
[40.71126938 97.32640839]
[51.60649490 107.65115356]
[61.53234863 118.91098022]
[73.62809753 110.04008484]
[85.72385406 101.16918945]
[91.52891541 88.44940948]
[105.40525055 86.73506165]
[117.50100708 77.86416626]
[129.59675598 68.99327087]
[124.90512085 54.62504196]
[124.88428497 39.53060150]
[129.52372742 25.18821716]
[138.35708618 12.99860573]
[150.50912476 4.14815044]
[164.78233337 -0.50656784]
[179.77499390 -0.52166134]
[194.01882935 4.09176397]
[206.12274170 12.86992931]
[218.21849060 3.99903417]
[230.31423950 -4.87186146]
[242.40998840 -13.74275684]
[254.50575256 -22.61365318]
[266.60150146 -31.48454857]
[278.69723511 -40.35544205]
[270.59274292 -52.98332596]
[263.28897095 -66.09063721]
[256.81423950 -79.62667084]
[251.19354248 -93.53904724]
[246.44865417 -107.77395630]
[242.59791565 -122.27631378]
[239.65625000 -136.99002075]
[237.63500977 -151.85813904]
[236.54203796 -166.82316589]
[236.38154602 -181.82719421]
[237.15417480 -196.81216431]
[238.85691833 -211.72012329]
[241.48318481 -226.49337769]
[245.02282715 -241.07479858]
[249.46215820 -255.40792847]
[254.78396606 -269.43734741]
[260.96771240 -283.10879517]
[267.98944092 -296.36932373]
[275.82196045 -309.16766357]
[284.43502808 -321.45431519]
[293.79528809 -333.18173218]
[303.86654663 -344.30450439]
[314.60980225 -354.77966309]
[325.98355103 -364.56665039]
[337.94372559 -373.62759399]
[350.44406128 -381.92742920]
[363.43624878 -389.43408203]
[376.86999512 -396.11849976]
[390.69329834 -401.95480347]
[404.85272217 -406.92044067]
[419.29345703 -410.99615479]
[433.95965576 -414.16622925]
[448.79455566 -416.41836548]
[463.74078369 -417.74386597]
[478.74047852 -418.13760376]
[493.73565674 -417.59805298]
[508.66830444 -416.12728882]
[523.48059082 -413.73098755]
[538.11529541 -410.41848755]
[552.51568604 -406.20254517]
[566.62615967 -401.09945679]
[580.39208984 -395.12902832]
[593.76019287 -388.31430054]
[606.67877197 -380.68167114]
[619.09783936 -372.26068115]
[630.96936035 -363.08386230]
[642.24737549 -353.18676758]
[652.88824463 -342.60766602]
[662.85089111 -331.38745117]
[672.09667969 -319.56961060]
[680.58984375 -307.19979858]
[688.29760742 -294.32589722]
[695.19006348 -280.99768066]
[701.24053955 -267.26678467]
[706.42572021 -253.18627930]
[710.72546387 -238.81065369]
[714.12316895 -224.19551086]
[716.60565186 -209.39741516]
[718.16339111 -194.47360229]
[718.79022217 -179.48182678]
[718.48388672 -164.48007202]
[717.24542236 -149.52638245]
[715.07977295 -134.67861938]
[711.99511719 -119.99420929]
[708.00360107 -105.52997589]
[703.12048340 -91.34188080]
[697.36480713 -77.48480988]
[690.75872803 -64.01237488]
[683.32788086 -50.97669983]
[675.10095215 -38.42821884]
[666.10986328 -26.41547394]
[656.38928223 -14.98494434]
[645.97686768 -4.18085384]
[634.91290283 5.95500040]
[623.24023438 15.38340378]
[611.00396729 24.06787872]
[598.25146484 31.97482872]
[585.03204346 39.07365799]
[571.39685059 45.33691025]
[557.39862061 50.74034882]
[543.09161377 55.26306534]
[528.53106689 58.88757324]
[513.77331543 61.59983826]
[498.87554932 63.38937378]
[483.89532471 64.24925232]
[468.89062500 64.17614746]
[453.91949463 63.17034912]
[439.03982544 61.23574448]
[424.30926514 58.37981415]
[409.78469849 54.61360931]
[395.52243042 49.95170212]
[381.57754517 44.41212845]
[368.00402832 38.01631927]
[354.85440063 30.78902245]
[342.17953491 22.75819397]
[330.02844238 13.95490551]
[318.44818115 4.41321564]
[307.48352051 -5.82995939]
[297.17687988 -16.73499107]
[287.56814575 -28.25969124]
[275.47238159 -19.38879585]
[263.37664795 -10.51790047]
[251.28088379 -1.64700484]
[239.18513489 7.22389030]
[227.08938599 16.09478569]
[214.99363708 24.96568108]
[219.72872925 39.14805603]
[219.84852600 54.11989212]
[215.32872009 68.41503906]
[206.59991455 80.62975311]
[194.50674438 89.56047058]
[180.22604370 94.32247162]
[165.15238953 94.43746185]
[150.76188660 89.88158417]
[138.46765137 81.08901978]
[126.37190247 89.95991516]
[114.27614594 98.83081055]
[108.47108459 111.55059052]
[94.59474945 113.26493835]
[82.49899292 122.13583374]
[70.40324402 131.00672913]
[78.15982819 143.85748291]
[84.73323822 157.35179138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 208]
[67 207]
[68 206]
[70 204]
[71 203]
[72 202]
[81 193]
[82 192]
[83 191]
[84 190]
[85 189]
[86 188]
[87 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
