%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[-7.58940649 555.37213135]
[-14.10851288 568.95330811]
[-23.48668098 580.74304199]
[-35.25350571 590.14990234]
[-48.81876755 596.70214844]
[-63.50204086 600.07098389]
[-78.56681824 600.08752441]
[-93.25745392 596.75091553]
[-106.83707428 590.22851562]
[-118.62452698 580.84753418]
[-128.02856445 569.07843018]
[-134.57748413 555.51153564]
[-137.94279480 540.82745361]
[-137.95568848 525.76269531]
[-134.61550903 511.07284546]
[-128.08982849 497.49481201]
[-118.70594788 485.70962524]
[-106.93457031 476.30844116]
[-93.36612701 469.76281738]
[-78.68122864 466.40106201]
[-63.61644745 466.39181519]
[-60.29418564 451.76437378]
[-56.97192764 437.13690186]
[-58.71397400 432.69006348]
[-57.68104172 427.10168457]
[-53.32685471 422.12649536]
[-49.57055283 407.60443115]
[-45.81425095 393.08236694]
[-42.05795288 378.56030273]
[-38.30165100 364.03823853]
[-34.54534912 349.51620483]
[-44.56872940 360.67556763]
[-57.40512466 368.43618774]
[-71.94405365 372.12664795]
[-86.92776489 371.42767334]
[-101.06000519 366.39978027]
[-113.11819458 357.47790527]
[-122.05918884 345.43386841]
[-127.10949707 331.30963135]
[-127.83222198 316.32705688]
[-124.16483307 301.78228760]
[-116.42459869 288.93359375]
[-105.28112030 278.89251709]
[-91.69844055 272.52774048]
[-76.85157013 270.38983154]
[-62.02493286 272.66375732]
[-48.50117493 279.15283203]
[-37.45023346 289.29562378]
[-29.82812500 302.21475220]
[-26.29424286 316.79254150]
[-27.15358353 331.76440430]
[-19.49298668 318.86807251]
[-11.83238888 305.97177124]
[-4.26801014 293.01876831]
[3.19973111 280.00979614]
[10.66747189 267.00085449]
[18.13521385 253.99189758]
[14.00873470 239.72628784]
[21.39676857 226.42697144]
[36.38783646 222.19546509]
[43.85557556 209.18652344]
[51.32331848 196.17756653]
[50.94930649 181.28765869]
[64.52999115 173.17127991]
[71.99773407 160.16233826]
[77.96929169 146.40222168]
[82.37029266 132.06237793]
[86.77129364 117.72253418]
[91.17228699 103.38268280]
[89.82761383 98.31259918]
[91.41934204 92.85002136]
[95.92369080 88.68495178]
[93.03775024 73.12918854]
[104.45845032 63.56796265]
[109.28444672 49.36550903]
[114.11044312 35.16305161]
[111.22451019 19.60728455]
[122.64520264 10.04606247]
[127.47119904 -4.15639353]
[126.45271301 -9.27594090]
[127.40464783 -13.81985188]
[129.77777100 -17.13396263]
[132.84281921 -18.87689400]
[138.29817200 -32.84969330]
[143.75352478 -46.82249069]
[149.20889282 -60.79528809]
[152.09416199 -75.51517487]
[152.31748962 -90.51351929]
[152.54081726 -105.51185608]
[152.76414490 -120.51019287]
[152.98747253 -135.50852966]
[153.21080017 -150.50686646]
[145.67982483 -164.42070007]
[153.60575867 -177.03137207]
[153.82908630 -192.02970886]
[144.48963928 -207.89968872]
[154.07032776 -222.60266113]
[154.07032776 -237.60266113]
[154.07032776 -252.60266113]
[154.07032776 -267.60266113]
[140.72920227 -275.21252441]
[132.99423218 -288.48147583]
[132.94609070 -303.84030151]
[140.59773254 -317.15753174]
[153.89088440 -324.85086060]
[169.24978638 -324.85086060]
[182.54293823 -317.15753174]
[190.19458008 -303.84030151]
[190.14643860 -288.48147583]
[182.41146851 -275.21252441]
[169.07032776 -267.60266113]
[169.07032776 -252.60266113]
[169.07032776 -237.60266113]
[169.07032776 -222.60266113]
[177.39929199 -213.83026123]
[177.52204895 -201.33351135]
[168.82742310 -191.80638123]
[168.60409546 -176.80804443]
[176.15104675 -163.96697998]
[168.20913696 -150.28353882]
[167.98580933 -135.28520203]
[167.76248169 -120.28686523]
[167.53915405 -105.28852844]
[167.31582642 -90.29019165]
[167.09249878 -75.29184723]
[173.94754028 -88.63382721]
[183.75912476 -99.97988129]
[195.97235107 -108.68833923]
[209.89649963 -114.26668549]
[224.74409485 -116.39943695]
[239.67544556 -114.96598816]
[253.84611511 -110.04740143]
[266.45465088 -101.92185211]
[276.78799438 -91.04886627]
[284.26177979 -78.04337311]
[288.45327759 -63.64089966]
[289.12545776 -48.65596771]
[286.24032593 -33.93605423]
[279.96099854 -20.31363487]
[270.64266968 -8.55912876]
[258.81225586 0.66269100]
[245.13891602 6.83028603]
[230.39587402 9.59484863]
[215.41694641 8.80002975]
[201.04925537 4.49078035]
[188.10537720 -3.08919072]
[177.31733704 -13.51119995]
[169.29525757 -26.18583107]
[164.49282837 -40.39627457]
[163.18168640 -55.33993149]
[157.72633362 -41.36713409]
[152.27096558 -27.39433479]
[146.81561279 -13.42153645]
[141.67366028 0.66960412]
[136.84765625 14.87205982]
[140.07878113 29.41197395]
[128.31289673 39.98904800]
[123.48690033 54.19150543]
[118.66090393 68.39395905]
[121.89202881 82.93387604]
[110.12614441 93.51094818]
[105.51213837 107.78368378]
[101.11113739 122.12353516]
[96.71014404 136.46337891]
[92.30914307 150.80322266]
[103.22975922 140.52023315]
[117.09999847 134.80914307]
[132.09498596 134.42135620]
[146.24186707 139.40788269]
[157.67939758 149.11268616]
[164.90275574 162.25891113]
[166.96157837 177.11694336]
[163.58500671 191.73196411]
[155.21728516 204.18110657]
[142.95933533 212.82647705]
[128.42388916 216.53063965]
[113.52333832 214.80622864]
[100.21810913 207.88012695]
[90.25872803 196.66357422]
[84.95553589 182.63232422]
[85.00668335 167.63006592]
[77.53894043 180.63902283]
[77.37881470 196.45942688]
[64.33226776 203.64530945]
[56.86452866 216.65426636]
[49.39678955 229.66320801]
[53.30261612 244.74241638]
[45.54394913 257.82894897]
[31.14416504 261.45965576]
[23.67642403 274.46859741]
[16.20868301 287.47753906]
[8.74094200 300.48651123]
[7.18259764 309.48703003]
[1.06393778 313.63235474]
[-6.59665966 326.52868652]
[-14.25725746 339.42501831]
[-20.02329063 353.27249146]
[-23.77959061 367.79455566]
[-27.53589249 382.31661987]
[-31.29219246 396.83868408]
[-35.04849243 411.36071777]
[-38.80479431 425.88278198]
[-42.34446716 440.45916748]
[-45.66672516 455.08663940]
[-48.98898697 469.71408081]
[-35.40620422 476.22988892]
[-23.61420441 485.60522461]
[-14.20446491 497.36975098]
[-7.64897299 510.93344116]
[-4.27655125 525.61590576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 205]
[22 204]
[23 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[51 196]
[52 195]
[53 194]
[54 192]
[55 191]
[56 190]
[57 189]
[60 186]
[61 185]
[62 184]
[64 182]
[65 181]
[66 165]
[67 164]
[68 163]
[69 162]
[72 161]
[74 159]
[75 158]
[76 157]
[78 155]
[79 154]
[83 153]
[84 152]
[85 151]
[86 150]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
