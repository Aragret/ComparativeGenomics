%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[24.93054581 626.24737549]
[13.62175369 636.14978027]
[0.90304792 644.16107178]
[-12.91236305 650.08398438]
[-27.48426056 653.77264404]
[-42.45380020 655.13623047]
[-57.45234680 654.14117432]
[-72.11054230 650.81188965]
[-86.06741333 645.23052979]
[-98.97926331 637.53436279]
[-110.52812958 627.91302490]
[-120.42960358 616.60339355]
[-128.43986511 603.88403320]
[-134.36163330 590.06817627]
[-138.04910278 575.49597168]
[-139.41145325 560.52630615]
[-138.41513062 545.52783203]
[-135.08468628 530.86993408]
[-129.50212097 516.91351318]
[-121.80490875 504.00228882]
[-112.18261719 492.45422363]
[-100.87219238 482.55368042]
[-88.15216064 474.54446411]
[-74.33577728 468.62384033]
[-59.76326752 464.93756104]
[-44.79350281 463.57644653]
[-29.79512405 464.57400513]
[-26.47286415 449.94653320]
[-23.15060616 435.31909180]
[-19.82834625 420.69161987]
[-16.50608635 406.06417847]
[-13.18382645 391.43670654]
[-17.91007614 377.31182861]
[-7.30842304 365.56808472]
[-3.98616362 350.94064331]
[-0.66390419 336.31317139]
[-2.40595102 331.86633301]
[-1.37301874 326.27795410]
[2.98116922 321.30276489]
[6.73746967 306.78070068]
[-4.55316734 316.65600586]
[-19.11801529 320.24279785]
[-33.70325089 316.73983765]
[-45.05049515 306.92962646]
[-50.62474442 293.00381470]
[-49.18069458 278.07348633]
[-41.04095459 265.47412109]
[-28.02396202 258.02038574]
[-13.03774357 257.37753296]
[0.56973863 263.68914795]
[9.75853920 275.54519653]
[12.47585583 290.29702759]
[18.54969025 276.58175659]
[24.62352371 262.86648560]
[30.69735718 249.15122986]
[36.77119064 235.43597412]
[42.84502411 221.72070312]
[48.91886139 208.00543213]
[54.78781891 194.20126343]
[60.45060730 180.31123352]
[58.09064102 165.60476685]
[70.46522522 155.74676514]
[76.12801361 141.85673523]
[81.58336639 127.88394165]
[86.83008575 113.83147430]
[80.91102600 100.60607910]
[85.97918701 87.03184509]
[99.11743927 80.92180634]
[104.36415863 66.86933899]
[104.43412781 57.73517609]
[109.79502106 52.64767838]
[115.25037384 38.67487717]
[120.70573425 24.70208168]
[125.84769440 10.61093998]
[130.67369080 -3.59151578]
[129.67680359 -7.81764603]
[130.04005432 -11.74607754]
[131.50282288 -14.98578262]
[133.70431519 -17.27053070]
[136.23283386 -18.48077583]
[141.89562988 -32.37080383]
[147.55841064 -46.26082993]
[153.22119141 -60.15085602]
[157.83520508 -74.42359161]
[153.57296753 -89.65985870]
[164.09510803 -100.20185852]
[167.63478088 -114.77822876]
[166.16360474 -119.78649902]
[166.70635986 -124.39721680]
[168.77435303 -127.90982819]
[171.67167664 -129.91926575]
[175.85868835 -144.32304382]
[180.04570007 -158.72682190]
[184.23271179 -173.13061523]
[188.41972351 -187.53439331]
[192.06781006 -202.08401489]
[195.17192078 -216.75930786]
[198.27603149 -231.43461609]
[201.38014221 -246.10992432]
[187.70185852 -252.42279053]
[175.77157593 -261.62149048]
[166.18772888 -273.24462891]
[159.43101501 -286.70919800]
[155.84036255 -301.33981323]
[155.59588623 -316.40261841]
[158.70982361 -331.14205933]
[165.02600098 -344.81881714]
[174.22760010 -356.74685669]
[185.85307312 -366.32791138]
[199.31927490 -373.08135986]
[213.95075989 -376.66845703]
[229.01362610 -376.90927124]
[243.75230408 -373.79177856]
[257.42752075 -367.47229004]
[269.35336304 -358.26779175]
[278.93157959 -346.64001465]
[285.68176270 -333.17214966]
[289.26531982 -318.53979492]
[289.50250244 -303.47689819]
[286.38140869 -288.73895264]
[280.05859375 -275.06527710]
[270.85122681 -263.14166260]
[259.22113037 -253.56626892]
[245.75164795 -246.81935120]
[231.11842346 -243.23934937]
[216.05543518 -243.00581360]
[212.95132446 -228.33050537]
[209.84722900 -213.65519714]
[206.74311829 -198.97990417]
[220.54716492 -204.84913635]
[233.81455994 -197.85083008]
[236.76506042 -183.14387512]
[227.22366333 -171.56968689]
[212.22393799 -171.66032410]
[202.82350159 -183.34738159]
[198.63648987 -168.94360352]
[194.44947815 -154.53981018]
[190.26246643 -140.13603210]
[186.07545471 -125.73225403]
[182.21115112 -111.23855591]
[178.67147827 -96.66218567]
[183.18690491 -82.46851349]
[172.41159058 -70.88391876]
[183.86906433 -80.56513214]
[198.61433411 -83.31779480]
[212.79299927 -78.42234802]
[222.69880676 -67.15846252]
[225.74238586 -52.47048569]
[221.12815857 -38.19782257]
[210.06227112 -28.07131195]
[195.43733215 -24.73799706]
[181.07624817 -29.06920242]
[170.73298645 -39.93275833]
[167.11122131 -54.48807144]
[161.44844055 -40.59804153]
[155.78564453 -26.70801544]
[150.12286377 -12.81798935]
[144.87614441 1.23448193]
[140.05015564 15.43693733]
[141.27230835 18.74430275]
[140.95323181 22.80795097]
[138.75491333 26.89704895]
[134.67852783 30.15743828]
[129.22317505 44.13023758]
[123.76781464 58.10303497]
[118.41663361 72.11605835]
[113.16991425 86.16852570]
[119.08897400 99.39392090]
[114.02081299 112.96815491]
[100.88256073 119.07819366]
[95.63584137 133.13066101]
[96.35164642 139.70326233]
[93.99454498 144.87445068]
[90.01803589 147.51953125]
[84.35524750 161.40956116]
[86.31017303 177.10951233]
[74.34063721 185.97401428]
[68.67784882 199.86404419]
[69.19764709 206.45504761]
[66.68762207 211.55375671]
[62.63412476 214.07926941]
[56.56029129 227.79454041]
[50.48645782 241.50979614]
[44.41262436 255.22506714]
[38.33879089 268.94033813]
[32.26495743 282.65560913]
[26.19112206 296.37088013]
[21.25952911 310.53698730]
[17.50322914 325.05905151]
[13.96355629 339.63543701]
[10.64129639 354.26290894]
[7.31903696 368.89035034]
[11.80765724 384.06146240]
[1.44363332 394.75897217]
[-1.87862611 409.38641357]
[-5.20088577 424.01388550]
[-8.52314568 438.64135742]
[-11.84540462 453.26879883]
[-15.16766453 467.89627075]
[-1.20986998 473.47537231]
[11.70325184 481.16937256]
[23.25370407 490.78881836]
[33.15704727 502.09680176]
[41.16940308 514.81481934]
[47.09345627 528.62976074]
[50.78332520 543.20135498]
[52.14814377 558.17077637]
[51.15430069 573.16943359]
[47.82627106 587.82788086]
[42.24600983 601.78521729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[34 192]
[35 191]
[36 190]
[39 189]
[40 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 182]
[58 181]
[59 178]
[60 177]
[62 175]
[63 174]
[64 171]
[65 170]
[68 167]
[69 166]
[71 165]
[72 164]
[73 163]
[74 159]
[75 158]
[80 157]
[81 156]
[82 155]
[83 154]
[84 143]
[86 141]
[87 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 129]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
