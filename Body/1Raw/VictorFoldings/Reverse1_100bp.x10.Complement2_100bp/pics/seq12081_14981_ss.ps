%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[5.05547047 581.72851562]
[0.07639204 595.98986816]
[-8.72000027 608.26989746]
[-20.62062263 617.57324219]
[-34.66074371 623.14562988]
[-49.70219803 624.53540039]
[-64.52563477 621.62982178]
[-77.92938995 614.66448975]
[-88.82688141 604.20404053]
[-96.33470154 591.09637451]
[-99.84420776 576.40423584]
[-99.07092285 561.31854248]
[-94.07752228 547.06219482]
[-85.26879883 534.79095459]
[-73.35883331 525.49957275]
[-59.31312180 519.94128418]
[-44.27027893 518.56665039]
[-41.38500595 503.84677124]
[-38.49973297 489.12689209]
[-35.61445999 474.40701294]
[-32.72918701 459.68710327]
[-34.52738571 452.51855469]
[-29.68982506 444.77026367]
[-26.58571625 430.09497070]
[-35.97826385 441.79025269]
[-48.14563751 450.56268311]
[-62.20945358 455.77890015]
[-77.15444183 457.06237793]
[-91.90171051 454.32043457]
[-105.38663483 447.75106812]
[-116.63573456 437.82849121]
[-124.83692169 425.26898193]
[-129.39814758 410.97930908]
[-129.99012756 395.99099731]
[-126.57013702 381.38607788]
[-119.38506317 368.21890259]
[-108.95360565 357.44000244]
[-96.02880859 349.82751465]
[-81.54373932 345.93103027]
[-66.54407501 346.03179932]
[-52.11266327 350.12255859]
[-39.29131699 357.90798950]
[-29.00561905 368.82608032]
[-21.99810410 382.08862305]
[-18.77465057 396.73815918]
[-19.56818008 411.71832275]
[-12.10043812 398.70935059]
[-4.63269711 385.70040894]
[2.83504391 372.69146729]
[3.43882179 365.32550049]
[10.51204872 359.54559326]
[18.17264557 346.64926147]
[25.83324242 333.75296021]
[31.49602890 319.86291504]
[35.03570175 305.28652954]
[38.57537460 290.71017456]
[42.11504745 276.13378906]
[45.65472031 261.55740356]
[44.14236450 258.37228394]
[44.09762573 254.29637146]
[45.92236328 250.02745056]
[49.69161987 246.41638184]
[53.87862778 232.01260376]
[58.06563950 217.60882568]
[56.91416168 210.30842590]
[62.42369843 203.02262878]
[66.82469940 188.68276978]
[71.22569275 174.34292603]
[67.56309509 159.90567017]
[79.00884247 148.98295593]
[83.40984344 134.64311218]
[87.38193512 120.17858887]
[90.92160797 105.60221863]
[93.03623199 90.75201416]
[93.70601654 75.76697540]
[94.37580872 60.78194046]
[95.04559326 45.79690170]
[95.71537781 30.81186295]
[96.38516235 15.82682419]
[96.94337463 0.83721393]
[97.16670227 -14.16112328]
[97.16670227 -29.16112328]
[89.42939758 -42.96129608]
[97.16670227 -55.68856812]
[97.16670227 -70.68856812]
[88.61487579 -80.34409332]
[88.92368317 -92.83762360]
[97.38232422 -101.48504639]
[89.85134125 -115.39888763]
[97.77727509 -128.00955200]
[98.00060272 -143.00788879]
[98.22393036 -158.00622559]
[90.69295502 -171.92007446]
[98.61888885 -184.53073120]
[89.27944183 -200.40071106]
[98.86013794 -215.10368347]
[98.74847412 -230.10327148]
[98.52514648 -245.10160828]
[98.30181885 -260.09994507]
[84.61638641 -266.95321655]
[75.69284058 -279.38821411]
[73.58174896 -294.54742432]
[78.76821899 -308.94741821]
[90.06044006 -319.27911377]
[104.86354828 -323.16842651]
[119.77588654 -319.72158813]
[131.37071228 -309.73065186]
[136.98362732 -295.49151611]
[135.32481384 -280.27615356]
[126.77546692 -267.58099365]
[113.30015564 -260.32327271]
[113.52348328 -245.32493591]
[113.74681091 -230.32659912]
[116.98954773 -223.68531799]
[113.86013794 -215.10368347]
[122.18909454 -206.33128357]
[122.31185913 -193.83453369]
[113.61722565 -184.30740356]
[121.16417694 -171.46633911]
[113.22226715 -157.78289795]
[112.99893951 -142.78456116]
[112.77561188 -127.78622437]
[120.32256317 -114.94516754]
[112.38066101 -101.26171875]
[121.74138641 -86.41773987]
[112.16670227 -70.68856812]
[112.16670227 -55.68856812]
[119.90399933 -42.96129608]
[112.16670227 -29.16112328]
[112.16670227 -14.16112328]
[114.85037994 -10.21056843]
[115.08084106 -4.53219557]
[111.93672180 1.28381991]
[114.87967682 8.06325912]
[111.37020111 16.49660873]
[110.70041656 31.48164749]
[110.03063202 46.46668625]
[109.36084747 61.45172501]
[108.69105530 76.43676758]
[108.02127075 91.42180634]
[116.43645477 79.00469208]
[129.13139343 71.01478577]
[143.96676636 68.79853058]
[158.44255066 72.72939301]
[170.11932373 82.14496613]
[177.02934265 95.45855713]
[178.00814819 110.42658234]
[172.89079285 124.52667999]
[162.53965759 135.38273621]
[148.69906616 141.16529846]
[133.70141602 140.89991760]
[120.07406616 134.63131714]
[110.11347198 123.41584778]
[105.49798584 109.14188385]
[101.95831299 123.71826172]
[103.32826233 127.83860016]
[103.31694794 131.78378296]
[102.14903259 135.14106750]
[100.16016388 137.61311340]
[97.74968719 139.04411316]
[93.34869385 153.38395691]
[96.69650269 168.84690857]
[85.56554413 178.74392700]
[81.16454315 193.08377075]
[76.76354980 207.42361450]
[72.46942139 221.79583740]
[68.28240967 236.19961548]
[64.09539795 250.60339355]
[60.23109436 265.09707642]
[56.69142151 279.67346191]
[53.15174866 294.24984741]
[49.61207581 308.82620239]
[46.07240677 323.40258789]
[55.86228561 312.03781128]
[68.42605591 303.84320068]
[82.77288818 299.46502686]
[97.77133179 299.24856567]
[112.23853302 303.21087646]
[125.03356171 311.03948975]
[135.14735413 322.11700439]
[141.78227234 335.56979370]
[144.41506958 350.33694458]
[142.83813477 365.25381470]
[137.17579651 379.14401245]
[127.87462616 390.91213989]
[115.66815186 399.63003540]
[101.51903534 404.61022949]
[86.54312134 405.45996094]
[71.92147827 402.11218262]
[58.80723190 394.83093262]
[48.23462296 384.19046021]
[41.03745651 371.02987671]
[37.78332520 356.38711548]
[38.72956848 341.41354370]
[31.06897354 354.30987549]
[23.40837479 367.20620728]
[15.84399605 380.15921021]
[8.37625504 393.16815186]
[0.90851402 406.17709351]
[-6.55922699 419.18606567]
[-11.91041279 433.19906616]
[-15.01452351 447.87438965]
[-18.00929832 462.57238770]
[-20.89456940 477.29226685]
[-23.77984238 492.01217651]
[-26.66511536 506.73205566]
[-29.55038834 521.45196533]
[-16.13964081 528.40380859]
[-5.23164749 538.85333252]
[2.28933144 551.95336914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[23 202]
[24 201]
[46 200]
[47 199]
[48 198]
[49 197]
[51 196]
[52 195]
[53 194]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[62 168]
[63 167]
[64 166]
[66 165]
[67 164]
[68 163]
[70 161]
[71 160]
[72 155]
[73 154]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 133]
[81 130]
[82 129]
[84 127]
[85 126]
[88 124]
[90 122]
[91 121]
[92 120]
[94 118]
[96 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
