%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[102.39304352 704.40106201]
[88.98994446 697.64544678]
[76.21720886 689.76263428]
[64.16941071 680.81097412]
[52.93574142 670.85675049]
[42.59938049 659.97369385]
[33.23685074 648.24237061]
[24.91746902 635.74957275]
[17.70283508 622.58789062]
[11.64636040 608.85467529]
[6.79288769 594.65167236]
[3.17835093 580.08404541]
[0.82951069 565.25958252]
[-0.23624237 550.28808594]
[-0.01101773 535.28039551]
[1.50351715 520.34759521]
[4.29614878 505.60034180]
[8.34620190 491.14770508]
[13.62368965 477.09674072]
[20.08953857 463.55145264]
[27.69587898 450.61218262]
[36.38639450 438.37469482]
[46.09674072 426.92956543]
[56.75502396 416.36157227]
[68.28233337 406.74896240]
[80.59333038 398.16287231]
[93.59685516 390.66690063]
[107.19664001 384.31652832]
[121.29199982 379.15875244]
[135.77856445 375.23181152]
[133.11276245 360.47058105]
[130.44697571 345.70938110]
[127.78117371 330.94815063]
[125.11537933 316.18695068]
[122.44958496 301.42572021]
[113.96908569 313.79830933]
[99.55396271 317.94613647]
[85.79461670 311.97280884]
[78.98163605 298.60931396]
[82.22982025 283.96520996]
[94.05415344 274.73562622]
[109.04869080 275.14019775]
[120.35905457 284.99554443]
[119.24340820 270.03707886]
[110.58092499 257.92053223]
[117.27038574 243.58312988]
[116.15473938 228.62466431]
[115.03908539 213.66621399]
[103.62040710 204.17152405]
[102.27588654 189.01741028]
[112.31222534 177.10482788]
[111.19657135 162.14637756]
[108.20179749 147.44836426]
[103.37580109 133.24591064]
[98.54980469 119.04345703]
[85.59929657 112.54496002]
[80.93753052 98.82583618]
[87.24774170 85.78253937]
[82.42174530 71.58008575]
[80.05704498 86.39251709]
[73.28682709 99.77774048]
[62.75637817 110.45995331]
[49.46939850 117.42099762]
[34.69231415 119.99739075]
[19.83358574 117.94357300]
[6.30945063 111.45529175]
[-4.59105539 101.15097809]
[-11.82896709 88.01276398]
[-14.71441174 73.29290771]
[-12.97236729 58.39440536]
[-6.76887465 44.73729324]
[3.30478907 33.62327957]
[16.28846550 26.11168098]
[30.94463539 22.91845322]
[45.87636566 24.34795570]
[59.66045380 30.26393700]
[70.98309326 40.10252380]
[78.76551819 52.92701340]
[77.87270355 37.95360947]
[76.97988892 22.98020172]
[74.10403442 18.62399101]
[73.27011871 14.05694866]
[74.21649170 10.09217644]
[76.39674377 7.32110405]
[76.17341614 -7.67723322]
[75.95008850 -22.67557144]
[75.72676086 -37.67390823]
[67.78485107 -51.35735321]
[75.33181000 -64.19841003]
[75.10848236 -79.19674683]
[74.88515472 -94.19508362]
[74.66182709 -109.19342804]
[74.32685089 -124.18968201]
[73.88024139 -139.18302917]
[70.49671173 -147.66769409]
[73.54027557 -154.40257263]
[73.31694794 -169.40090942]
[59.07388687 -174.64491272]
[47.68955994 -184.68290710]
[40.70360947 -198.15736389]
[39.06082916 -213.24595642]
[42.98339081 -227.90809631]
[51.94079590 -240.16081238]
[64.72163391 -248.34706116]
[79.59740448 -251.35969543]
[94.55627441 -248.79130554]
[107.57518005 -240.98922729]
[116.89342499 -229.00862122]
[121.25079346 -214.46978760]
[120.05798340 -199.33897400]
[113.47631836 -185.66249084]
[102.39590454 -175.28997803]
[88.31528473 -169.62423706]
[88.53861237 -154.62590027]
[88.87358856 -139.62963867]
[89.32019806 -124.63629150]
[92.66145325 -118.04403687]
[89.66016388 -109.41675568]
[89.88349152 -94.41841125]
[90.10681915 -79.42007446]
[90.33014679 -64.42173767]
[98.25608063 -51.81107712]
[90.72509766 -37.89723587]
[90.94842529 -22.89889908]
[91.17175293 -7.90056133]
[91.39508057 7.09777641]
[91.95329285 22.08738518]
[92.84610748 37.06079102]
[93.73892212 52.03419876]
[96.62419891 66.75408936]
[101.45019531 80.95654297]
[114.40070343 87.45503998]
[119.06246948 101.17416382]
[112.75225830 114.21746063]
[117.57825470 128.41990662]
[122.40425873 142.62237549]
[124.89779663 127.83107758]
[132.00100708 114.61956024]
[142.96427917 104.38204193]
[156.63063049 98.19893646]
[171.55781555 96.72274017]
[186.17053223 100.10925293]
[198.92668152 108.00108337]
[208.48004150 119.56539154]
[213.82244873 133.58175659]
[214.39010620 148.57101440]
[210.12310791 162.95129395]
[201.47175598 175.20503235]
[189.34904480 184.03904724]
[175.03431702 188.52107239]
[160.03823853 188.17810059]
[145.94337463 183.04634094]
[134.23721313 173.66734314]
[126.15502930 161.03071594]
[127.27067566 175.98918152]
[138.96310425 186.28115845]
[139.88143921 201.46705627]
[129.99754333 212.55056763]
[131.11318970 227.50901794]
[132.22883606 242.46746826]
[140.97111511 255.65394592]
[134.20185852 268.92144775]
[135.31750488 283.87988281]
[137.21080017 298.75991821]
[139.87660217 313.52114868]
[142.54238892 328.28237915]
[145.20819092 343.04357910]
[147.87397766 357.80480957]
[150.53977966 372.56600952]
[165.48481750 371.17776489]
[180.49388123 371.07943726]
[195.45582581 372.27172852]
[210.25988770 374.74578857]
[224.79646301 378.48336792]
[238.95793152 383.45672607]
[252.63943481 389.62908936]
[265.73968506 396.95474243]
[278.16165161 405.37942505]
[289.81344604 414.84078979]
[300.60873413 425.26879883]
[310.46762085 436.58621216]
[319.31707764 448.70925903]
[327.09164429 461.54818726]
[333.73370361 475.00790405]
[339.19412231 488.98880005]
[343.43243408 503.38735962]
[346.41726685 518.09692383]
[348.12655640 533.00866699]
[348.54760742 548.01214600]
[347.67733765 562.99627686]
[345.52215576 577.85009766]
[342.09802246 592.46368408]
[337.43032837 606.72882080]
[331.55358887 620.53991699]
[324.51132202 633.79461670]
[316.35568237 646.39489746]
[307.14703369 658.24743652]
[296.95358276 669.26446533]
[285.85076904 679.36444092]
[273.92083740 688.47253418]
[261.25204468 696.52136230]
[247.93826294 703.45129395]
[234.07800293 709.21105957]
[219.77392578 713.75799561]
[205.13191223 717.05847168]
[190.26039124 719.08801270]
[175.26943970 719.83160400]
[160.27006531 719.28369141]
[145.37330627 717.44842529]
[130.68948364 714.33935547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[43 163]
[44 162]
[46 160]
[47 159]
[48 158]
[51 155]
[52 154]
[53 136]
[54 135]
[55 134]
[58 131]
[59 130]
[78 129]
[79 128]
[80 127]
[84 126]
[85 125]
[86 124]
[87 123]
[89 121]
[90 120]
[91 119]
[92 118]
[93 116]
[94 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
