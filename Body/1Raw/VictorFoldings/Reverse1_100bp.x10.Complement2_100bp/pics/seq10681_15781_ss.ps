%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[147.33033752 580.65655518]
[158.24136353 570.27563477]
[171.12911987 562.48333740]
[166.30311584 548.28088379]
[161.47712708 534.07843018]
[156.65112305 519.87597656]
[151.52275085 514.55413818]
[151.86071777 505.42596436]
[147.24670410 491.15322876]
[142.63269043 476.88049316]
[137.58412170 471.48294067]
[138.05795288 462.36080933]
[133.65695190 448.02096558]
[129.25595093 433.68112183]
[123.12825775 447.37240601]
[110.18115997 454.94686890]
[95.24362183 453.57946777]
[83.88696289 443.78015137]
[80.34694672 429.20385742]
[85.94390106 415.28717041]
[98.59030914 407.22070312]
[113.56937408 408.01296997]
[125.29491425 417.36953735]
[122.62911987 402.60830688]
[119.96332550 387.84710693]
[105.75008392 378.85696411]
[102.37006378 362.03762817]
[112.39366150 347.70071411]
[109.50839233 332.98083496]
[106.62311554 318.26092529]
[103.73784637 303.54104614]
[93.69692230 292.53973389]
[98.63525391 277.50897217]
[95.74997711 262.78909302]
[92.86470795 248.06918335]
[89.97943115 233.34928894]
[87.09416199 218.62940979]
[77.05323792 207.62808228]
[81.99156952 192.59733582]
[78.01701355 207.06117249]
[70.61471558 220.10748291]
[60.23733139 230.93844604]
[47.51943970 238.89176941]
[33.23875046 243.48109436]
[18.26852798 244.42578125]
[3.52420712 241.66806030]
[-10.09258938 235.37655640]
[-21.74918938 225.93603516]
[-30.73278809 213.92375183]
[-36.49403381 200.07426453]
[-38.68062592 185.23449707]
[-37.15885162 170.31188965]
[-32.02177048 156.21896362]
[-23.58351517 143.81752014]
[-12.36008835 133.86590576]
[0.96219355 126.97266388]
[15.56866741 123.55931854]
[30.56614113 123.83459473]
[45.03751373 127.78166962]
[58.09785461 135.15916443]
[68.94852448 145.51594543]
[76.92598724 158.21870422]
[81.54244232 172.49067688]
[83.76755524 157.65663147]
[85.99267578 142.82260132]
[88.21778870 127.98854828]
[90.44290924 113.15451050]
[84.09726715 103.38854218]
[85.91062164 91.88406372]
[94.95261383 84.54351807]
[97.39833832 69.74424744]
[95.55874634 64.85926819]
[95.75706482 60.22095490]
[97.55806732 56.56425858]
[100.29792023 54.34489822]
[103.40203094 39.66959763]
[95.04720306 26.52293777]
[98.40426636 11.68431377]
[110.98908234 3.80028081]
[114.09319305 -10.87502193]
[117.19730377 -25.55032349]
[120.30141449 -40.22562790]
[123.40552521 -54.90092850]
[126.40029907 -69.59893036]
[129.28556824 -84.31882477]
[131.95137024 -99.08003998]
[134.39709473 -113.87931061]
[136.84281921 -128.67858887]
[139.28854370 -143.47785950]
[131.34632874 -162.00576782]
[144.25276184 -176.40406799]
[146.25677490 -191.26960754]
[148.26078796 -206.13513184]
[150.26480103 -221.00065613]
[152.26881409 -235.86618042]
[153.82934570 -250.78479004]
[147.13987732 -265.12222290]
[155.80236816 -277.23876953]
[156.91801453 -292.19720459]
[142.99349976 -298.14587402]
[131.75665283 -308.29534912]
[124.42635345 -321.54470825]
[121.79775238 -336.45675659]
[124.15597534 -351.41394043]
[131.24522400 -364.79382324]
[142.29649353 -375.14508057]
[156.11103821 -381.34481812]
[171.19036865 -382.72061157]
[185.89877319 -379.12316895]
[198.64079285 -370.94271851]
[208.03428650 -359.06665039]
[213.06030273 -344.78317261]
[213.17367554 -329.64166260]
[208.36209106 -315.28451538]
[199.14746094 -303.26913452]
[186.52935791 -294.89883423]
[171.87646484 -291.08157349]
[170.76081848 -276.12310791]
[177.53007507 -262.85562134]
[168.78779602 -249.66914368]
[170.51275635 -247.45947266]
[171.46636963 -244.43338013]
[171.33328247 -240.88124084]
[169.90901184 -237.20211792]
[167.13435364 -233.86216736]
[165.13034058 -218.99664307]
[163.12632751 -204.13111877]
[161.12229919 -189.26559448]
[159.11828613 -174.40005493]
[166.01940918 -166.86430359]
[167.66802979 -156.55749512]
[163.28143311 -146.84472656]
[154.08781433 -141.03211975]
[151.64208984 -126.23285675]
[149.19636536 -111.43358612]
[146.75064087 -96.63431549]
[148.75427246 -92.29905701]
[148.05580139 -86.65909576]
[144.00546265 -81.43354797]
[141.12019348 -66.71366119]
[142.91838074 -59.54509735]
[138.08082581 -51.79681778]
[134.97671509 -37.12151718]
[131.87260437 -22.44621468]
[128.76849365 -7.77091122]
[125.66438293 6.90439081]
[133.97891235 19.20903778]
[131.03994751 34.13610077]
[118.07733154 42.77370453]
[114.97322083 57.44900894]
[112.19760895 72.18997192]
[109.75188446 86.98924255]
[116.06143951 102.53162384]
[105.27695465 115.37962341]
[103.05183411 130.21366882]
[100.82672119 145.04771423]
[98.60160065 159.88175964]
[96.37648010 174.71580505]
[96.71145630 189.71205139]
[106.95875549 201.76625061]
[101.81405640 215.74412537]
[104.69932556 230.46401978]
[107.58459473 245.18391418]
[110.46987152 259.90380859]
[113.35514069 274.62368774]
[123.60243988 286.67788696]
[118.45774078 300.65576172]
[121.34300995 315.37567139]
[124.22827911 330.09555054]
[127.11355591 344.81542969]
[139.08238220 350.99295044]
[145.21842957 362.76406860]
[143.48027039 375.72790527]
[134.72454834 385.18130493]
[137.39033508 399.94253540]
[140.05613708 414.70373535]
[143.59580994 429.28012085]
[147.99679565 443.61996460]
[152.39779663 457.95980835]
[156.90542603 472.26651001]
[161.51943970 486.53921509]
[166.13345337 500.81195068]
[170.85357666 515.04992676]
[175.67958069 529.25238037]
[180.50556946 543.45483398]
[185.33157349 557.65734863]
[200.29873657 555.98449707]
[215.27552795 557.56872559]
[229.56144714 562.33593750]
[242.48834229 570.06311035]
[253.45159912 580.38891602]
[261.93841553 592.83026123]
[267.55187988 606.80535889]
[270.02941895 621.66052246]
[269.25515747 636.70098877]
[265.26531982 651.22320557]
[258.24649048 664.54797363]
[248.52700806 676.05212402]
[236.56141663 685.19757080]
[222.90939331 691.55651855]
[208.20945740 694.83154297]
[193.14915466 694.86956787]
[178.43289185 691.66870117]
[164.74896240 685.37866211]
[152.73739624 676.29370117]
[142.95999146 664.83874512]
[135.87405396 651.54949951]
[131.81101990 637.04760742]
[130.96090698 622.01129150]
[133.36347961 607.14379883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[6 183]
[8 182]
[9 181]
[10 180]
[12 179]
[13 178]
[14 177]
[23 176]
[24 175]
[25 174]
[28 170]
[29 169]
[30 168]
[31 167]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[39 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[70 152]
[71 151]
[75 150]
[76 149]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 140]
[85 139]
[86 136]
[87 135]
[88 134]
[89 133]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 120]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
