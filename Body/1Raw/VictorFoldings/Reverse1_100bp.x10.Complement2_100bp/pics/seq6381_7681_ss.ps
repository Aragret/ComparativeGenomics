%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[97.19461823 517.10089111]
[100.79908752 531.75250244]
[100.48764801 546.83776855]
[96.28153229 561.32812500]
[88.46752167 574.23565674]
[77.57838440 584.68023682]
[64.35656738 591.94976807]
[49.70354462 595.54858398]
[34.61839676 595.23132324]
[20.12964439 591.01959229]
[7.22515917 583.20056152]
[-3.21520996 572.30743408]
[-10.47962189 559.08282471]
[-14.07277679 544.42840576]
[-13.74968719 529.34338379]
[-9.53238297 514.85626221]
[-1.70840561 501.95477295]
[9.18879223 491.51861572]
[22.41622162 484.25930786]
[37.07201767 480.67181396]
[52.15691757 481.00073242]
[56.34392929 466.59695435]
[60.53093719 452.19314575]
[64.71794891 437.78936768]
[68.90496063 423.38558960]
[73.09197235 408.98181152]
[77.27898407 394.57803345]
[81.46599579 380.17425537]
[83.35929108 365.29421997]
[82.91268158 350.30087280]
[82.46607208 335.30752563]
[80.52059174 333.28927612]
[79.25733185 330.37881470]
[79.02014923 326.83212280]
[80.05393982 323.02478027]
[82.46607208 319.41430664]
[82.91268158 304.42095947]
[83.35929108 289.42761230]
[83.80589294 274.43426514]
[75.74181366 265.41775513]
[75.99118805 252.92289734]
[84.96562195 243.65885925]
[85.63540649 228.67382812]
[86.30519104 213.68878174]
[86.97497559 198.70375061]
[87.64476013 183.71870422]
[79.71582031 174.58314514]
[80.15119171 162.09338379]
[89.26255798 152.96398926]
[90.15537262 137.99058533]
[91.04818726 123.01718140]
[91.94100952 108.04377747]
[81.94142914 119.22448730]
[67.51324463 123.32662964]
[53.12718964 119.07910919]
[43.24094009 107.79806519]
[40.91785431 92.97904205]
[46.87776947 79.21389008]
[59.27393723 70.76788330]
[74.26527405 70.25811005]
[87.20654297 77.84252930]
[94.08781433 91.17127991]
[96.97308350 76.45139313]
[99.85836029 61.73149872]
[102.74362946 47.01160812]
[92.34152985 57.81884003]
[78.31085205 63.12357712]
[63.36071777 61.90155411]
[50.37774658 54.38872910]
[41.86875916 42.03570938]
[39.47669983 27.22767067]
[43.66344070 12.82381058]
[53.62059021 1.60529017]
[67.42557526 -4.26176977]
[82.41287231 -3.64453244]
[95.68866730 3.33782411]
[104.68960571 15.33711529]
[107.67773438 30.03774261]
[113.13309479 16.06494522]
[118.58844757 2.09214664]
[124.04380798 -11.88065147]
[129.49916077 -25.85344887]
[134.95452881 -39.82624817]
[140.40988159 -53.79904556]
[145.23587036 -68.00150299]
[141.65821838 -83.41288757]
[152.64059448 -93.47453308]
[156.82760620 -107.87831879]
[161.01461792 -122.28209686]
[165.20162964 -136.68588257]
[163.95555115 -141.75485229]
[164.70364380 -146.33673096]
[166.92640686 -149.75349426]
[169.91058350 -151.63156128]
[167.02464294 -167.18731689]
[178.44534302 -176.74855042]
[183.27133179 -190.95100403]
[188.09733582 -205.15345764]
[174.85081482 -212.26539612]
[162.95565796 -221.46078491]
[152.73634338 -232.48872375]
[144.47167969 -245.04838562]
[138.38713074 -258.79714966]
[134.64868164 -273.35989380]
[133.35832214 -288.33938599]
[134.55125427 -303.32693481]
[138.19493103 -317.91369629]
[144.18995667 -331.70169067]
[152.37278748 -344.31484985]
[162.52017212 -355.40899658]
[174.35528564 -364.68151855]
[187.55528259 -371.87945557]
[201.76002502 -376.80642700]
[216.58201599 -379.32803345]
[231.61689758 -379.37545776]
[246.45449829 -376.94741821]
[260.69006348 -372.11016846]
[273.93521118 -364.99569702]
[285.82858276 -355.79800415]
[296.04577637 -344.76809692]
[304.30801392 -332.20684814]
[310.38992310 -318.45693970]
[314.12557983 -303.89346313]
[315.41305542 -288.91372681]
[314.21722412 -273.92639160]
[310.57073975 -259.34033203]
[304.57305908 -245.55348206]
[296.38778687 -232.94192505]
[286.23828125 -221.84971619]
[274.40136719 -212.57946777]
[261.19998169 -205.38407898]
[246.99429321 -200.45985413]
[232.17181396 -197.94111633]
[217.13693237 -197.89657593]
[202.29978943 -200.32745361]
[197.47378540 -186.12500000]
[192.64779663 -171.92254639]
[195.87892151 -157.38262939]
[184.11303711 -146.80555725]
[179.60540771 -132.49887085]
[175.41839600 -118.09508514]
[171.23138428 -103.69130707]
[167.04437256 -89.28752136]
[170.92150879 -74.90638733]
[159.63966370 -63.81448746]
[173.27267456 -70.07076263]
[187.38388062 -64.98413086]
[193.88973999 -51.46844101]
[189.06340027 -37.26610184]
[175.66961670 -30.51285362]
[161.38093567 -35.07726669]
[154.38267517 -48.34368896]
[148.92732239 -34.37089157]
[143.47196960 -20.39809227]
[138.01660156 -6.42529392]
[132.56124878 7.54750395]
[127.10588837 21.52030182]
[121.65053558 35.49309921]
[117.46352386 49.89688110]
[114.57824707 64.61677551]
[111.69297791 79.33666229]
[108.80770111 94.05655670]
[106.91441345 108.93659210]
[106.02159882 123.90999603]
[105.12878418 138.88340759]
[104.23596191 153.85681152]
[112.85746002 170.12799072]
[102.62979889 184.38848877]
[101.96001434 199.37353516]
[101.29022980 214.35856628]
[100.62044525 229.34361267]
[99.95066071 244.32864380]
[108.81345367 260.46966553]
[98.79924011 274.88085938]
[98.35263824 289.87420654]
[97.90602875 304.86755371]
[97.45942688 319.86090088]
[97.45942688 334.86090088]
[97.90602875 349.85424805]
[98.35263824 364.84759521]
[104.72009277 351.26617432]
[114.47373962 339.87026978]
[126.90946198 331.48260498]
[141.12950134 326.70867920]
[156.10731506 325.89315796]
[170.76164246 329.09484863]
[184.03456116 336.08267212]
[194.96789551 346.35214233]
[202.77235413 359.16192627]
[206.88453674 373.58724976]
[207.00756836 388.58673096]
[203.13258362 403.07757568]
[195.53930664 416.01367188]
[184.77590942 426.46112061]
[171.61940002 433.66574097]
[157.01957703 437.10739136]
[142.03039551 436.53765869]
[127.73395538 431.99765015]
[115.16231537 423.81512451]
[105.22303772 412.58074951]
[98.63364410 399.10559082]
[95.86977386 384.36126709]
[91.68276978 398.76504517]
[87.49575806 413.16882324]
[83.30874634 427.57260132]
[79.12173462 441.97637939]
[74.93472290 456.38015747]
[70.74771118 470.78396606]
[66.56069946 485.18774414]
[79.47121429 492.99676514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 209]
[22 208]
[23 207]
[24 206]
[25 205]
[26 204]
[27 203]
[28 202]
[29 180]
[30 179]
[31 178]
[36 177]
[37 176]
[38 175]
[39 174]
[42 172]
[43 171]
[44 170]
[45 169]
[46 168]
[49 166]
[50 165]
[51 164]
[52 163]
[62 162]
[63 161]
[64 160]
[65 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[84 152]
[85 145]
[87 143]
[88 142]
[89 141]
[90 140]
[94 139]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
