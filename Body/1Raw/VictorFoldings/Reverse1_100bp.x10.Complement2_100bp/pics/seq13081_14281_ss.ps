%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[44.42426682 623.73437500]
[44.56210709 638.82226562]
[40.78929138 653.43139648]
[33.36304474 666.56585693]
[22.78971291 677.33001709]
[9.79019451 684.98999023]
[-4.74917793 689.02343750]
[-19.83708572 689.15545654]
[-34.44481277 685.37701416]
[-47.57637787 677.94567871]
[-58.33644867 667.36822510]
[-65.99138641 654.36572266]
[-70.01926422 639.82482910]
[-70.14545441 624.73687744]
[-66.36135864 610.13061523]
[-58.92497253 597.00189209]
[-48.34333038 586.24591064]
[-35.33789825 578.59600830]
[-20.79541588 574.57373047]
[-5.70741034 574.45336914]
[-1.95110977 559.93127441]
[1.80519092 545.40924072]
[-2.49841404 531.14990234]
[8.44819450 519.72705078]
[4.14458990 505.46771240]
[15.09119797 494.04483032]
[18.84749985 479.52276611]
[22.60379982 465.00070190]
[26.36009979 450.47863770]
[30.11640167 435.95660400]
[33.87270355 421.43453979]
[37.08597565 406.78274536]
[39.75177002 392.02151489]
[42.41756821 377.26031494]
[45.08336258 362.49908447]
[47.74915695 347.73788452]
[50.41495132 332.97665405]
[36.54291916 327.33197021]
[24.14289665 318.92303467]
[13.75826454 308.11535645]
[5.84469366 295.37969971]
[0.75015885 281.27145386]
[-1.30036736 266.40646362]
[-0.21484563 251.43417358]
[3.96170092 237.00920105]
[11.04904842 223.76272583]
[20.73954964 212.27494812]
[32.61148071 203.04954529]
[46.14741135 196.49168396]
[60.75673294 192.89022827]
[75.80144501 192.40493774]
[78.46723938 177.64370728]
[81.13303375 162.88249207]
[83.79882812 148.12127686]
[86.46462250 133.36006165]
[89.13041687 118.59884644]
[91.79621887 103.83763123]
[90.06850433 100.38981628]
[89.86891937 96.19720459]
[91.49603271 91.95933533]
[94.92474365 88.48316193]
[98.24700928 73.85569763]
[101.56926727 59.22824097]
[97.08064270 44.05712128]
[107.44467163 33.35963058]
[110.76692963 18.73217010]
[104.91379547 1.27300704]
[117.32974243 -11.12905693]
[120.43385315 -25.80435944]
[123.53796387 -40.47966003]
[126.64207458 -55.15496445]
[116.82464600 -43.81397247]
[103.75424957 -36.45430756]
[88.96637726 -33.94057083]
[74.19829559 -36.56808090]
[61.18494797 -44.02815628]
[51.45512390 -55.44439697]
[46.15187836 -69.47563171]
[45.89822388 -84.47348785]
[50.72396851 -98.67603302]
[60.06218338 -110.41475677]
[72.81582642 -118.31062317]
[87.48661041 -121.43601227]
[102.35102844 -119.42377472]
[115.66281891 -112.51029968]
[125.85813141 -101.50777435]
[131.73922729 -87.70876312]
[132.61503601 -72.73280334]
[139.09452820 -86.26115417]
[145.57402039 -99.78949738]
[151.74978638 -113.45916748]
[157.61874390 -127.26334381]
[163.48771667 -141.06752014]
[169.35667419 -154.87170410]
[175.22563171 -168.67587280]
[181.09458923 -182.48005676]
[186.96356201 -196.28422546]
[174.08837891 -204.02862549]
[162.41635132 -213.48960876]
[152.17468262 -224.48298645]
[143.56274414 -236.79479980]
[136.74815369 -250.18536377]
[131.86355591 -264.39407349]
[129.00404358 -279.14428711]
[128.22528076 -294.14895630]
[129.54240417 -309.11596680]
[132.92979431 -323.75396729]
[138.32151794 -337.77807617]
[145.61260986 -350.91528320]
[154.66114807 -362.90988159]
[165.29101562 -373.52835083]
[177.29527283 -382.56405640]
[190.44027710 -389.84106445]
[204.47015381 -395.21777344]
[219.11178589 -398.58947754]
[234.08020020 -399.89059448]
[249.08401489 -399.09576416]
[263.83117676 -396.22045898]
[278.03463745 -391.32064819]
[291.41790771 -384.49172974]
[303.72045898 -375.86660767]
[314.70288086 -365.61318970]
[324.15136719 -353.93103027]
[331.88195801 -341.04757690]
[337.74423218 -327.21356201]
[341.62408447 -312.69830322]
[343.44592285 -297.78430176]
[343.17434692 -282.76190186]
[340.81463623 -267.92352295]
[336.41268921 -253.55796814]
[330.05422974 -239.94488525]
[321.86300659 -227.34924316]
[311.99847412 -216.01623535]
[300.65264893 -206.16647339]
[288.04635620 -197.99165344]
[274.42498779 -191.65090942]
[260.05374146 -187.26768494]
[245.21228027 -184.92729187]
[230.18954468 -184.67526245]
[215.27793884 -186.51654053]
[200.76773071 -190.41526794]
[194.89877319 -176.61108398]
[189.02981567 -162.80691528]
[183.16084290 -149.00273132]
[177.29188538 -135.19856262]
[171.42292786 -121.39438629]
[165.55397034 -107.59020996]
[166.52674866 -104.20110321]
[165.90632629 -100.17243958]
[163.40995789 -96.25817108]
[159.10237122 -93.30999756]
[152.62287903 -79.78165436]
[146.14337158 -66.25331116]
[141.31738281 -52.05085373]
[138.21327209 -37.37555313]
[135.10916138 -22.70024872]
[132.00505066 -8.02494717]
[138.33834839 2.28116322]
[135.87236023 14.53280449]
[125.39438629 22.05443001]
[122.07212830 36.68188858]
[126.79837799 50.80675507]
[116.19672394 62.55049896]
[112.87446594 77.17795563]
[109.55220795 91.80541992]
[106.55743408 106.50342560]
[103.89163971 121.26464081]
[101.22583771 136.02586365]
[98.56004333 150.78707886]
[95.89424896 165.54829407]
[93.22845459 180.30950928]
[90.56266022 195.07072449]
[104.48727417 200.78771973]
[116.91401672 209.27174377]
[127.30108643 220.14996338]
[135.19621277 232.94519043]
[140.25636292 247.09687805]
[142.26264954 261.98559570]
[141.12979126 276.96023560]
[136.90971375 291.36645508]
[129.78921509 304.57522583]
[120.08169556 316.01028442]
[108.21331787 325.17343140]
[94.70435333 331.66604614]
[80.14633179 335.20651245]
[65.17617035 335.64245605]
[62.51037598 350.40368652]
[59.84457779 365.16488647]
[57.17878342 379.92611694]
[54.51298904 394.68731689]
[51.84719467 409.44854736]
[65.47038269 403.17089844]
[78.94026184 409.77108765]
[82.32733154 424.38369751]
[73.13476562 436.23681641]
[58.13899231 436.59280396]
[48.39476013 425.19082642]
[44.63846207 439.71289062]
[40.88216019 454.23495483]
[37.12585831 468.75701904]
[33.36956024 483.27908325]
[29.61325836 497.80111694]
[33.64818573 513.09918213]
[22.97025299 523.48333740]
[27.00518227 538.78137207]
[16.32724953 549.16552734]
[12.57094955 563.68762207]
[8.81464863 578.20965576]
[21.95194817 585.63085938]
[32.72018433 596.20001221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 208]
[21 207]
[22 206]
[24 204]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 197]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[61 165]
[62 164]
[63 163]
[65 161]
[66 160]
[68 157]
[69 156]
[70 155]
[71 154]
[88 153]
[89 152]
[90 151]
[91 147]
[92 146]
[93 145]
[94 144]
[95 143]
[96 142]
[97 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
