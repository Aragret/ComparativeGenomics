%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[67.90019226 712.21789551]
[59.14619446 700.00531006]
[52.21940994 686.67108154]
[47.26086044 672.48681641]
[44.37149811 657.74127197]
[43.61014557 642.73455811]
[44.99230576 627.77221680]
[48.48983383 613.15893555]
[54.03152847 599.19219971]
[61.50457001 586.15631104]
[70.75681305 574.31671143]
[81.59989166 563.91436768]
[93.81305695 555.16113281]
[107.14766693 548.23516846]
[121.33224487 543.27746582]
[118.44697571 528.55761719]
[115.56170654 513.83770752]
[112.67642975 499.11779785]
[109.79116058 484.39791870]
[97.56123352 471.81237793]
[103.67366028 454.44229126]
[100.56954956 439.76699829]
[90.36594391 428.91638184]
[95.07994080 413.81378174]
[91.97583008 399.13845825]
[82.01180267 392.27957153]
[79.30561066 380.07873535]
[85.84048462 368.95855713]
[82.95520782 354.23867798]
[80.06993866 339.51876831]
[77.18466949 324.79888916]
[70.83023834 338.38641357]
[58.59023285 347.05718994]
[43.66416931 348.54467773]
[29.95368195 342.46008301]
[21.04265785 330.39385986]
[19.26041794 315.50012207]
[25.07283401 301.67202759]
[36.96055603 292.52423096]
[51.81616211 290.44796753]
[65.75643158 295.98590088]
[75.13705444 307.68966675]
[74.46726990 292.70465088]
[73.79748535 277.71960449]
[73.12770081 262.73455811]
[72.45790863 247.74952698]
[64.15819550 260.24411011]
[50.76737976 267.00326538]
[35.78579712 266.26013184]
[23.12959862 258.20901489]
[16.10708046 244.95442200]
[16.55391312 229.96109009]
[24.35329437 217.14822388]
[37.46648788 209.86506653]
[52.46573639 210.01545715]
[65.43026733 217.56004333]
[72.97095490 230.52586365]
[74.53147888 215.60725403]
[76.09199524 200.68865967]
[77.65251923 185.77005005]
[79.21304321 170.85144043]
[66.90892029 179.43098450]
[52.11834717 176.93315125]
[43.31404877 164.78884888]
[45.53952408 149.95484924]
[57.51991653 140.92877197]
[72.39231110 142.88114929]
[81.63687134 154.69265747]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[90.04908752 71.55100250]
[100.09001160 60.54967880]
[102.97528076 45.82978821]
[104.86857605 30.94975090]
[97.96639252 16.71351433]
[106.44751740 4.46933937]
[107.34033203 -10.50406647]
[94.06379700 -15.89249706]
[83.11682892 -25.10397339]
[75.56117249 -37.22776031]
[72.12430573 -51.07151794]
[73.12937927 -65.27855682]
[78.46491241 -78.46080780]
[87.59697723 -89.33441162]
[99.62258911 -96.84480286]
[113.35899353 -100.26891327]
[114.47463989 -115.22737122]
[107.78517914 -129.56478882]
[116.44766235 -141.68133545]
[117.56330872 -156.63978577]
[118.67896271 -171.59825134]
[119.79460907 -186.55670166]
[120.91025543 -201.51515198]
[114.22079468 -215.85256958]
[122.88327789 -227.96911621]
[123.99892426 -242.92758179]
[125.11457825 -257.88601685]
[111.39615631 -264.37982178]
[100.95277405 -275.39346313]
[95.19680786 -289.43743896]
[94.90671539 -304.61242676]
[100.12172699 -318.86611938]
[110.13655090 -330.27084351]
[123.59676361 -337.28421021]
[138.68199158 -338.95767212]
[153.35206604 -335.06497192]
[165.62298584 -326.13250732]
[173.83522034 -313.36834717]
[176.87811279 -298.49874878]
[174.34016418 -283.53466797]
[166.56459045 -270.49990845]
[154.60296631 -261.15731812]
[140.07302856 -256.77038574]
[138.95738220 -241.81192017]
[137.84173584 -226.85346985]
[144.61099243 -213.58598328]
[135.86871338 -200.39950562]
[134.75306702 -185.44105530]
[133.63740540 -170.48258972]
[132.52175903 -155.52413940]
[131.40611267 -140.56568909]
[138.17536926 -127.29819489]
[129.43309021 -114.11171722]
[128.31744385 -99.15326691]
[142.75135803 -92.86428833]
[154.17866516 -81.99452972]
[161.20504761 -67.84489441]
[162.96450806 -52.11800766]
[159.22605896 -36.71330643]
[150.42384338 -23.49765778]
[137.60681152 -14.07911396]
[122.31373596 -9.61125088]
[121.42092133 5.36215496]
[128.38696289 18.52739525]
[119.84197998 31.84256744]
[129.84156799 20.66185188]
[144.26974487 16.55970955]
[158.65579224 20.80723190]
[168.54205322 32.08827972]
[170.86512756 46.90729904]
[164.90521240 60.67245102]
[152.50904846 69.11845398]
[137.51771545 69.62822723]
[124.57643890 62.04380798]
[117.69517517 48.71506119]
[114.80989838 63.43495178]
[119.95460510 77.41283417]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[96.35676575 157.57792664]
[94.13165283 172.41197205]
[92.57112885 187.33056641]
[91.01060486 202.24917603]
[89.45008087 217.16778564]
[87.88955688 232.08638000]
[87.44295502 247.07974243]
[88.11273956 262.06478882]
[88.78252411 277.04980469]
[89.45230865 292.03485107]
[90.12209320 307.01989746]
[91.90455627 321.91360474]
[94.78983307 336.63351440]
[97.67510223 351.35339355]
[100.56037903 366.07327271]
[112.98179626 379.66702271]
[106.65113068 396.03436279]
[109.75524139 410.70965576]
[120.18087769 422.60995483]
[115.24485016 436.66287231]
[118.34896088 451.33819580]
[128.71379089 459.01498413]
[130.99708557 471.30197144]
[124.51104736 481.51263428]
[127.39632416 496.23254395]
[130.28160095 510.95242310]
[133.16687012 525.67230225]
[136.05213928 540.39221191]
[151.05870056 539.62805176]
[166.02125549 541.00744629]
[180.63519287 544.50225830]
[194.60298157 550.04138184]
[207.64025879 557.51196289]
[219.48159790 566.76202393]
[229.88594055 577.60321045]
[238.64144897 589.81469727]
[245.56988525 603.14807129]
[250.53018188 617.33172607]
[253.42137146 632.07696533]
[254.18458557 647.08355713]
[252.80427551 662.04602051]
[249.30856323 676.65972900]
[243.76858521 690.62719727]
[236.29716492 703.66400146]
[227.04638672 715.50476074]
[216.20458984 725.90844727]
[203.99250793 734.66320801]
[190.65875244 741.59082031]
[176.47479248 746.55023193]
[161.72938538 749.44049072]
[146.72273254 750.20275879]
[131.76034546 748.82153320]
[117.14684296 745.32495117]
[103.17974091 739.78411865]
[90.14338684 732.31188965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[21 176]
[22 175]
[24 173]
[25 172]
[28 170]
[29 169]
[30 168]
[31 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[68 156]
[69 155]
[70 154]
[71 153]
[73 151]
[75 149]
[76 148]
[77 138]
[79 136]
[80 135]
[89 127]
[90 126]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
