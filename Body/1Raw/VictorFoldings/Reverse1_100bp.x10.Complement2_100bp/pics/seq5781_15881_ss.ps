%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[103.25486755 417.42376709]
[98.23558807 431.72698975]
[88.62461090 443.44897461]
[75.58250427 451.17422485]
[60.68417740 453.96987915]
[45.72866821 451.49832153]
[32.52193069 444.05804443]
[22.65873909 432.54745483]
[17.33012390 418.35656738]
[17.17954063 403.19894409]
[22.22517204 388.90499878]
[31.85773659 377.20074463]
[44.91405487 369.49954224]
[59.81750870 366.73135376]
[62.26323700 351.93209839]
[64.70896149 337.13281250]
[67.15469360 322.33355713]
[65.15105438 317.99829102]
[65.84952545 312.35833740]
[69.89986420 307.13278198]
[72.78514099 292.41290283]
[59.06999207 298.48699951]
[45.69987488 291.68701172]
[42.53074265 277.02560425]
[51.89876175 265.31063843]
[66.89817047 265.17794800]
[76.47156525 276.72375488]
[80.44366455 262.25921631]
[84.41576385 247.79470825]
[88.38785553 233.33018494]
[92.35995483 218.86566162]
[96.33204651 204.40113831]
[100.30414581 189.93661499]
[101.41979218 174.97814941]
[99.63732910 160.08444214]
[97.85485840 145.19071960]
[84.01416016 142.32322693]
[71.73383331 135.32458496]
[62.21254730 124.87792969]
[56.37968063 112.00294495]
[54.80457306 97.95635986]
[57.64097214 84.10925293]
[64.61201477 71.81323242]
[75.03726959 62.26851654]
[87.89911652 56.40674973]
[86.33859253 41.48814392]
[84.77806854 26.56953812]
[70.98916626 15.80453014]
[69.28563690 -1.26628864]
[80.23564911 -14.03093147]
[78.45317841 -28.92464828]
[76.67071533 -43.81836700]
[74.88824463 -58.71208572]
[73.10578156 -73.60580444]
[63.78341675 -86.38876343]
[69.95349884 -99.94528198]
[68.17103577 -114.83900452]
[66.27774048 -129.71903992]
[64.27372742 -144.58456421]
[61.49906158 -147.92449951]
[60.07478333 -151.60363770]
[59.94170380 -155.15577698]
[60.89531708 -158.18186951]
[62.62027740 -160.39154053]
[61.50463104 -175.34999084]
[60.38898087 -190.30844116]
[59.27333069 -205.26689148]
[44.26496124 -205.44099426]
[29.32711983 -206.90464783]
[14.57039928 -209.64703369]
[0.10405618 -213.64782715]
[-13.96480370 -218.87741089]
[-27.53201866 -225.29707336]
[-40.49713898 -232.85929871]
[-52.76417160 -241.50807190]
[-64.24229431 -251.17936707]
[-74.84653473 -261.80160522]
[-84.49836731 -273.29608154]
[-93.12634277 -285.57775879]
[-100.66658020 -298.55569458]
[-107.06324768 -312.13375854]
[-112.26898956 -326.21145630]
[-116.24526978 -340.68457031]
[-118.96263123 -355.44589233]
[-120.40097046 -370.38619995]
[-120.54963684 -385.39483643]
[-119.40752411 -400.36071777]
[-116.98309326 -415.17300415]
[-113.29429626 -429.72201538]
[-108.36843109 -443.90008545]
[-102.24198151 -457.60220337]
[-94.96029663 -470.72692871]
[-86.57730103 -483.17709351]
[-77.15504456 -494.86053467]
[-66.76330566 -505.69073486]
[-55.47900391 -515.58746338]
[-43.38569641 -524.47753906]
[-30.57291794 -532.29510498]
[-17.13553047 -538.98229980]
[-3.17302155 -544.48950195]
[11.21123314 -548.77606201]
[25.91073608 -551.81024170]
[40.81665421 -553.56951904]
[55.81863022 -554.04083252]
[70.80558777 -553.22082520]
[85.66657257 -551.11547852]
[100.29155731 -547.74035645]
[114.57225800 -543.12048340]
[128.40293884 -537.29010010]
[141.68121338 -530.29229736]
[154.30876160 -522.17895508]
[166.19210815 -513.01013184]
[177.24324036 -502.85366821]
[187.38037109 -491.78479004]
[196.52842712 -479.88543701]
[204.61968994 -467.24371338]
[211.59423828 -453.95321655]
[217.40045166 -440.11236572]
[221.99533081 -425.82360840]
[225.34484863 -411.19274902]
[227.42422485 -396.32812500]
[228.21806335 -381.33975220]
[227.72047424 -366.33862305]
[225.93515015 -351.43579102]
[222.87530518 -336.74160767]
[218.56359863 -322.36486816]
[213.03195190 -308.41201782]
[206.32130432 -294.98635864]
[198.48135376 -282.18725586]
[189.57015991 -270.10949707]
[179.65367126 -258.84252930]
[168.80532837 -248.46974182]
[157.10543823 -239.06793213]
[144.64064026 -230.70671082]
[131.50318909 -223.44798279]
[117.79038239 -217.34550476]
[103.60373688 -212.44442749]
[89.04827881 -208.78106689]
[74.23178864 -206.38253784]
[75.34743500 -191.42408752]
[76.46308136 -176.46563721]
[77.57872772 -161.50718689]
[79.13925171 -146.58857727]
[81.14326477 -131.72305298]
[85.15222168 -125.51417542]
[83.06475067 -116.62146759]
[84.84721375 -101.72775269]
[94.04209137 -90.01008606]
[87.99949646 -75.38826752]
[89.78196716 -60.49454880]
[91.56443024 -45.60083389]
[93.34690094 -30.70711517]
[95.12936401 -15.81339741]
[106.27337646 -9.34497833]
[111.73863220 2.53833294]
[109.32627869 15.59172344]
[99.69667816 25.00901604]
[101.25720215 39.92761993]
[102.81772614 54.84622574]
[118.09692383 58.53550720]
[131.19168091 67.22986603]
[140.52137756 79.87982941]
[144.95982361 94.95845032]
[143.97128296 110.64562988]
[137.67506409 125.04779816]
[126.83118439 136.42649841]
[112.74858093 143.40824890]
[114.53104401 158.30197144]
[116.31351471 173.19569397]
[121.29674530 159.04763794]
[129.26445007 146.33876038]
[139.82785034 135.68913269]
[152.47155762 127.61839294]
[166.57862854 122.52032471]
[181.46076965 120.64366913]
[196.39184570 122.08000183]
[210.64334106 126.75923157]
[223.51986694 134.45304871]
[234.39317322 144.78607178]
[242.73272705 157.25410461]
[248.13160706 171.24882507]
[250.32640076 186.08737183]
[249.21003723 201.04577637]
[244.83694458 215.39416504]
[237.42053223 228.43244934]
[227.32264709 239.52445984]
[215.03598022 248.12899780]
[201.16004944 253.82621765]
[186.37187195 256.33816528]
[171.39300537 255.54223633]
[156.95429993 251.47731018]
[143.76023865 244.34170532]
[132.45462036 234.48356628]
[123.58903503 222.38392639]
[117.59607697 208.63311768]
[114.76866913 193.90870667]
[110.79656982 208.37322998]
[106.82447815 222.83775330]
[102.85237885 237.30227661]
[98.88028717 251.76679993]
[94.90818787 266.23132324]
[90.93608856 280.69586182]
[87.50502777 295.29815674]
[84.61975861 310.01806641]
[81.95396423 324.77926636]
[79.50823212 339.57855225]
[77.06250763 354.37780762]
[74.61678314 369.17709351]
[87.83721161 376.59301758]
[97.72159576 388.08538818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 208]
[15 207]
[16 206]
[17 205]
[20 204]
[21 203]
[27 202]
[28 201]
[29 200]
[30 199]
[31 198]
[32 197]
[33 196]
[34 169]
[35 168]
[36 167]
[45 159]
[46 158]
[47 157]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[56 147]
[57 146]
[58 144]
[59 143]
[64 142]
[65 141]
[66 140]
[67 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
