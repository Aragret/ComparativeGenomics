%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[89.99460602 635.53955078]
[80.47403717 647.18743896]
[68.97512054 656.88745117]
[55.88951492 664.30914307]
[41.66290283 669.19976807]
[26.77984238 671.39276123]
[11.74724483 670.81341553]
[-2.92288613 667.48144531]
[-16.73089027 661.51037598]
[-29.20647430 653.10357666]
[-39.92472458 642.54736328]
[-48.52057648 630.20123291]
[-54.70126343 616.48577881]
[-58.25627518 601.86810303]
[-59.06452179 586.84606934]
[-57.09848022 571.93133545]
[-52.42511368 557.63189697]
[-45.20359421 544.43475342]
[-35.67988205 532.78942871]
[-24.17835236 523.09259033]
[-11.09074497 515.67437744]
[3.13718295 510.78759766]
[18.02083397 508.59863281]
[33.05327606 509.18203735]
[36.37553406 494.55459595]
[39.69779205 479.92712402]
[42.91106796 465.27532959]
[46.01517868 450.60003662]
[49.11928940 435.92474365]
[52.22339630 421.24942017]
[47.28737259 407.19650269]
[57.71300507 395.29620361]
[60.26883698 380.51556396]
[62.27285004 365.65002441]
[64.27686310 350.78448486]
[66.28087616 335.91897583]
[68.28488922 321.05343628]
[70.28890228 306.18792725]
[72.18219757 291.30789185]
[73.96466064 276.41415405]
[75.74713135 261.52044678]
[77.19654846 246.59063721]
[78.31219482 231.63218689]
[79.42784882 216.67372131]
[80.54349518 201.71527100]
[78.53204346 198.81935120]
[77.82333374 194.80526733]
[78.92761230 190.29595947]
[82.05764771 186.11865234]
[83.84011841 171.22492981]
[81.51372528 164.20997620]
[85.76159668 156.12335205]
[87.76560974 141.25782776]
[89.76962280 126.39229584]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.84562683 72.22631073]
[95.96127319 57.26786041]
[97.07691956 42.30940628]
[90.38746643 27.97198296]
[99.04994202 15.85543728]
[100.16558838 0.89698410]
[93.47613525 -13.44043922]
[102.13861084 -25.55698586]
[95.44915009 -39.89440918]
[104.11163330 -52.01095581]
[105.22727966 -66.96940613]
[106.34293365 -81.92786407]
[107.45858002 -96.88631439]
[107.68190765 -111.88465118]
[97.41442871 -127.17060852]
[106.10299683 -142.41775513]
[105.21018219 -157.39115906]
[104.31736755 -172.36456299]
[103.42455292 -187.33798218]
[89.42586517 -190.70361328]
[76.95713806 -197.87043762]
[67.02491760 -208.24955750]
[60.42808151 -220.99316406]
[57.69355774 -235.06382751]
[59.03427124 -249.31892395]
[64.33257294 -262.60342407]
[73.15052032 -273.84344482]
[84.76604462 -282.13317871]
[98.23210144 -286.80770874]
[97.56230927 -301.79275513]
[96.89252472 -316.77777100]
[96.22274017 -331.76281738]
[95.55295563 -346.74786377]
[87.20716095 -360.18878174]
[94.36844635 -373.24884033]
[93.69866180 -388.23388672]
[93.02887726 -403.21893311]
[78.39598846 -407.00970459]
[65.53141785 -414.94659424]
[55.57908249 -426.32388306]
[49.42393112 -440.12988281]
[47.61327744 -455.13696289]
[50.30812454 -470.01074219]
[57.26884842 -483.42861938]
[67.87650299 -494.19750977]
[81.18786621 -501.35986328]
[96.01930237 -504.27877808]
[111.05200195 -502.69470215]
[124.94927216 -496.74850464]
[136.47538757 -486.96893311]
[144.60543823 -474.22555542]
[148.61650085 -459.65148926]
[148.15194702 -444.54269409]
[143.25305176 -430.24261475]
[134.35542297 -418.02282715]
[122.25025177 -408.96984863]
[108.01391602 -403.88870239]
[108.68370056 -388.90368652]
[109.35348511 -373.91864014]
[117.65136719 -361.54953003]
[110.53799438 -347.41766357]
[111.20777893 -332.43261719]
[111.87756348 -317.44757080]
[112.54734802 -302.46252441]
[113.21714020 -287.47750854]
[128.35774231 -283.46646118]
[141.53413391 -274.96243286]
[151.44995117 -262.78778076]
[157.12522888 -248.12670898]
[157.99322510 -232.41003418]
[153.95697021 -217.17558289]
[145.39997864 -203.91775513]
[133.14976501 -193.94082642]
[118.39795685 -188.23078918]
[119.29077148 -173.25738525]
[120.18358612 -158.28398132]
[121.07640076 -143.31057739]
[129.91273499 -135.04946899]
[130.77909851 -122.58219147]
[122.66694641 -112.55443573]
[132.02796936 -124.27497864]
[146.45933533 -128.36590576]
[160.57850647 -123.30139923]
[169.11936951 -110.97039795]
[168.89639282 -95.97205353]
[159.99275208 -83.90038300]
[145.72927856 -79.25782013]
[131.42590332 -83.77593231]
[122.41703033 -95.77066803]
[121.30138397 -80.81221008]
[120.18573761 -65.85375977]
[119.07008362 -50.89530563]
[125.83934784 -37.62781143]
[117.09706879 -24.44133568]
[123.86632538 -11.17384243]
[115.12404633 2.01263285]
[114.00839996 16.97108650]
[120.77765656 30.23858070]
[112.03537750 43.42505646]
[110.91973114 58.38351059]
[109.80407715 73.34196472]
[112.44138336 80.24604797]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[108.57917786 117.55857849]
[108.72639465 122.19879150]
[107.20234680 125.97931671]
[104.63515472 128.39630127]
[102.63114166 143.26184082]
[100.62712860 158.12736511]
[98.73383331 173.00740051]
[96.95137024 187.90112305]
[95.50194550 202.83091736]
[94.38629913 217.78938293]
[93.27065277 232.74783325]
[92.15499878 247.70628357]
[94.42307281 252.40765381]
[94.63935852 257.04516602]
[93.17176819 260.84796143]
[90.64084625 263.30291748]
[88.85838318 278.19662476]
[87.07591248 293.09033203]
[89.16338348 301.98306274]
[85.15443420 308.19192505]
[83.15042114 323.05746460]
[81.14640808 337.92297363]
[79.14239502 352.78851318]
[77.13838196 367.65405273]
[75.13436890 382.51956177]
[88.46366119 375.63989258]
[102.21481323 381.63201904]
[106.25099182 396.07879639]
[97.59687042 408.33059692]
[82.63194275 409.35583496]
[72.38830566 398.40032959]
[77.10230255 413.50292969]
[66.89869690 424.35354614]
[63.79459000 439.02883911]
[60.69047928 453.70413208]
[57.58636856 468.37945557]
[58.87214661 477.42291260]
[54.32525253 483.24938965]
[51.00299454 497.87683105]
[47.68073654 512.50427246]
[61.49034882 518.47161865]
[73.96820068 526.87512207]
[84.68929291 537.42840576]
[93.28847504 549.77221680]
[99.47285461 563.48596191]
[103.03180695 578.10272217]
[103.84410095 593.12451172]
[101.88208771 608.03979492]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 202]
[25 201]
[26 200]
[27 198]
[28 197]
[29 196]
[30 195]
[32 193]
[33 187]
[34 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 180]
[40 179]
[41 178]
[42 174]
[43 173]
[44 172]
[45 171]
[49 170]
[50 169]
[52 168]
[53 167]
[54 166]
[55 162]
[57 160]
[58 158]
[59 157]
[60 156]
[62 154]
[63 153]
[65 151]
[67 149]
[68 148]
[69 147]
[70 146]
[71 137]
[73 134]
[74 133]
[75 132]
[76 131]
[86 122]
[87 121]
[88 120]
[89 119]
[90 118]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
