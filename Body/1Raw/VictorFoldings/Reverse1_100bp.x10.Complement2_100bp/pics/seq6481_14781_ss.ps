%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[78.46130371 537.69744873]
[72.73686981 523.69433594]
[71.62181091 508.60754395]
[75.22537994 493.91503906]
[83.19452667 481.05627441]
[94.74852753 471.29101562]
[108.75543213 465.57595825]
[107.63978577 450.61752319]
[98.97730255 438.50097656]
[105.66676331 424.16354370]
[104.55110931 409.20510864]
[103.43546295 394.24664307]
[94.47711182 386.11801147]
[93.42523193 373.66500854]
[101.38718414 363.51760864]
[100.49436951 348.54418945]
[96.95831299 342.05435181]
[99.70141602 333.34152222]
[99.03163147 318.35647583]
[88.39958191 311.07711792]
[83.83330536 298.82025146]
[87.20983887 285.98242188]
[97.51319885 277.30743408]
[97.06658936 262.31408691]
[96.61998749 247.32073975]
[96.17337799 232.32739258]
[87.58692932 223.80685425]
[87.09214783 211.31930542]
[95.49926758 201.53752136]
[95.27593994 186.53918457]
[95.05261230 171.54084778]
[81.17326355 159.60437012]
[80.41345215 140.99427795]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[89.84336090 58.22871780]
[87.61824799 43.39467239]
[85.39312744 28.56063080]
[83.16800690 13.72658634]
[80.94289398 -1.10745728]
[66.68705750 -11.24602127]
[64.22297668 -28.22374725]
[74.59209442 -41.46460342]
[72.14636230 -56.26387405]
[69.70063782 -71.06314087]
[67.25490570 -85.86241150]
[62.89876556 -71.50888062]
[55.39101791 -58.52297592]
[45.12550354 -47.58591843]
[32.64073181 -39.27144623]
[18.59162712 -34.01571655]
[3.71517920 -32.09443665]
[-11.20822334 -33.60839462]
[-25.39572716 -38.47816849]
[-38.10308838 -46.44830322]
[-48.66370010 -57.10069275]
[-56.52357483 -69.87654877]
[-61.27040100 -84.10565948]
[-62.65516663 -99.04160309]
[-60.60523224 -113.90086365]
[-55.22813416 -127.90396881]
[-46.80594254 -140.31632996]
[-35.78046417 -150.48681641]
[-22.73008156 -157.88191223]
[-8.33938789 -162.11369324]
[6.63670921 -162.96015930]
[21.41259384 -160.37689209]
[35.21315384 -154.49943542]
[47.31443787 -145.63609314]
[57.08163834 -134.25181580]
[64.00238800 -120.94379425]
[67.71385193 -106.40850830]
[70.81796265 -121.08381653]
[73.92207336 -135.75910950]
[77.02618408 -150.43441772]
[72.31218719 -165.53703308]
[82.51579285 -176.38763428]
[85.61990356 -191.06294250]
[88.72401428 -205.73823547]
[84.01001740 -220.84085083]
[94.21361542 -231.69145203]
[97.31772614 -246.36676025]
[95.82570648 -250.44448853]
[95.71955872 -254.38824463]
[96.78699493 -257.77880859]
[98.70138550 -260.30899048]
[101.06817627 -261.81112671]
[105.04027557 -276.27563477]
[109.01237488 -290.74017334]
[112.98446655 -305.20468140]
[116.95656586 -319.66921997]
[119.84183502 -334.38909912]
[121.62430573 -349.28283691]
[123.40676880 -364.17654419]
[125.18923187 -379.07025146]
[111.17823029 -384.66973877]
[99.09448242 -393.70553589]
[89.76186371 -405.56152344]
[83.81670380 -419.42938232]
[81.66434479 -434.36355591]
[83.45154572 -449.34582520]
[89.05644226 -463.35467529]
[98.09688568 -475.43493652]
[109.95648956 -484.76296997]
[123.82663727 -490.70278931]
[138.76165771 -492.84936523]
[153.74322510 -491.05639648]
[167.74990845 -485.44607544]
[179.82667542 -476.40097046]
[189.15013123 -464.53778076]
[195.08457947 -450.66531372]
[197.22540283 -435.72949219]
[195.42663574 -420.74859619]
[189.81092834 -406.74411011]
[180.76115417 -394.67083740]
[168.89434814 -385.35195923]
[155.01962280 -379.42285156]
[140.08294678 -377.28781128]
[138.30049133 -362.39407349]
[136.51802063 -347.50036621]
[134.73554993 -332.60665894]
[144.96142578 -343.58078003]
[159.27511597 -348.06613159]
[173.93505859 -344.89022827]
[185.10916138 -334.88327026]
[189.87657166 -320.66104126]
[186.99107361 -305.94119263]
[177.20693970 -294.57147217]
[163.08172607 -289.52386475]
[148.30770874 -292.11782837]
[136.74681091 -301.67532349]
[131.42108154 -315.69711304]
[127.44898987 -301.23260498]
[123.47689819 -286.76806641]
[119.50479889 -272.30355835]
[115.53270721 -257.83901978]
[111.99303436 -243.26264954]
[108.88892365 -228.58735657]
[113.82494354 -214.53442383]
[103.39931488 -202.63412476]
[100.29520416 -187.95883179]
[97.19109344 -173.28352356]
[102.12712097 -159.23059082]
[91.70148468 -147.33030701]
[88.59737396 -132.65501404]
[85.49326324 -117.97970581]
[82.38915253 -103.30440521]
[82.05417633 -88.30814362]
[84.49990845 -73.50887299]
[86.94563293 -58.70960236]
[89.39136505 -43.91033173]
[100.81308746 -37.94596863]
[106.80351257 -26.31854630]
[104.97642517 -13.17045784]
[95.77693939 -3.33257437]
[98.00205231 11.50146961]
[100.22717285 26.33551216]
[102.45228577 41.16955566]
[104.67740631 56.00360107]
[113.52252197 43.88898468]
[128.05474854 40.17221451]
[141.63014221 46.55254364]
[148.04222107 60.11297226]
[144.35946655 74.65385437]
[132.26557922 83.52729797]
[117.28973389 82.67648315]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[118.87441254 133.00303650]
[124.74476624 143.20301819]
[124.96020508 154.84980774]
[119.58284760 165.04783630]
[110.05094910 171.31752014]
[110.27427673 186.31585693]
[110.49760437 201.31419373]
[120.30541229 216.89907837]
[111.16672516 231.88078308]
[111.61333466 246.87413025]
[112.05993652 261.86749268]
[112.50654602 276.86083984]
[125.45659637 288.62158203]
[125.88573456 305.77182007]
[114.01667023 317.68670654]
[114.68645477 332.67172241]
[115.46777344 347.65136719]
[116.36058807 362.62478638]
[126.85451508 377.75616455]
[118.39392090 393.13098145]
[119.50956726 408.08944702]
[120.62521362 423.04791260]
[129.36749268 436.23437500]
[122.59823608 449.50186157]
[123.71388245 464.46032715]
[138.41358948 468.03433228]
[151.28836060 475.97763062]
[161.07681274 487.51196289]
[166.82002258 501.50735474]
[167.95529175 516.59265137]
[164.37141418 531.28997803]
[156.41950989 544.15942383]
[144.87860107 553.94012451]
[130.87937927 559.67395020]
[115.79331970 560.79913330]
[101.09841156 557.20538330]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[10 196]
[11 195]
[12 194]
[15 192]
[16 191]
[18 190]
[19 189]
[23 186]
[24 185]
[25 184]
[26 183]
[29 181]
[30 180]
[31 179]
[34 174]
[35 173]
[37 171]
[38 170]
[39 162]
[40 161]
[41 160]
[42 159]
[43 158]
[46 154]
[47 153]
[48 152]
[49 151]
[75 150]
[76 149]
[77 148]
[78 147]
[80 145]
[81 144]
[82 143]
[84 141]
[85 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[95 124]
[96 123]
[97 122]
[98 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
