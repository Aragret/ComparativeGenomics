%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[81.45899200 567.55584717]
[69.51329041 558.44787598]
[58.85865402 547.85858154]
[49.67740631 535.96905518]
[42.12664413 522.98291016]
[36.33557129 509.12222290]
[32.40328217 494.62420654]
[30.39706230 479.73696899]
[30.35124016 464.71520996]
[32.26660156 449.81600952]
[36.11037064 435.29428101]
[41.81677628 421.39852905]
[49.28817749 408.36651611]
[58.39672089 396.42126465]
[68.98655701 385.76712036]
[80.87647247 376.58645630]
[93.86301422 369.03628540]
[107.72396851 363.24588013]
[122.22216034 359.31430054]
[120.21814728 344.44876099]
[118.21413422 329.58322144]
[116.21012115 314.71771240]
[114.20610809 299.85217285]
[112.20209503 284.98663330]
[102.77580261 277.40563965]
[100.98456573 265.03732300]
[108.32842255 254.43399048]
[106.54595184 239.54028320]
[104.76348877 224.64656067]
[102.98102570 209.75285339]
[99.84690857 206.14918518]
[98.94331360 200.53843689]
[101.37403107 194.39001465]
[92.53211212 182.40377808]
[99.00737000 167.96835327]
[97.66913605 153.02816772]
[96.33090210 138.08798218]
[94.88148499 123.15817261]
[93.32096100 108.23956299]
[91.20633698 93.38936615]
[88.54054260 78.62815094]
[85.87474060 63.86693192]
[83.20894623 49.10571671]
[80.54315186 34.34449768]
[68.32550049 20.56732559]
[74.89914703 4.29605913]
[72.01387787 -10.42383194]
[61.76449203 -18.25409126]
[59.66437912 -30.57372284]
[66.30171967 -40.68669891]
[63.63592529 -55.44791412]
[60.97013092 -70.20912933]
[58.30433655 -84.97035217]
[55.63853836 -99.73156738]
[45.50687408 -107.71355438]
[43.59041595 -120.06308746]
[50.37759018 -130.07612610]
[47.93186188 -144.87539673]
[45.48613358 -159.67466736]
[29.95124817 -165.33674622]
[19.45169830 -177.98803711]
[16.78032303 -194.11505127]
[22.57281685 -209.30065918]
[35.15971756 -219.43389893]
[32.49392319 -234.19511414]
[29.82812691 -248.95632935]
[27.16233063 -263.71755981]
[24.38672066 -278.45849609]
[21.50144768 -293.17840576]
[6.54956102 -291.82003784]
[-8.46274567 -292.00628662]
[-23.37633324 -293.73513794]
[-38.03310776 -296.98828125]
[-52.27770615 -301.73123169]
[-65.95911407 -307.91369629]
[-78.93231964 -315.47015381]
[-91.05978394 -324.32049561]
[-102.21295166 -334.37091064]
[-112.27359772 -345.51486206]
[-121.13507843 -357.63418579]
[-128.70344543 -370.60046387]
[-134.89846802 -384.27618408]
[-139.65449524 -398.51641846]
[-142.92108154 -413.17019653]
[-144.66363525 -428.08221436]
[-144.86364746 -443.09432983]
[-143.51902771 -458.04745483]
[-140.64399719 -472.78308105]
[-136.26907349 -487.14495850]
[-130.44059753 -500.98089600]
[-123.22038269 -514.14422607]
[-114.68494415 -526.49530029]
[-104.92477417 -537.90338135]
[-94.04333496 -548.24737549]
[-82.15596771 -557.41766357]
[-69.38870239 -565.31707764]
[-55.87686157 -571.86187744]
[-41.76369095 -576.98266602]
[-27.19878960 -580.62512207]
[-12.33655739 -582.75073242]
[2.66545749 -583.33685303]
[17.64822769 -582.37738037]
[32.45292282 -579.88238525]
[46.92261124 -575.87835693]
[60.90390015 -570.40771484]
[74.24858093 -563.52850342]
[86.81520081 -555.31365967]
[98.47053528 -545.85015869]
[109.09103394 -535.23846436]
[118.56412506 -523.59094238]
[126.78936768 -511.03109741]
[133.67958069 -497.69210815]
[139.16172791 -483.71533203]
[143.17770386 -469.24896240]
[145.68490601 -454.44631958]
[146.65678406 -439.46435547]
[146.08302307 -424.46185303]
[143.96972656 -409.59786987]
[140.33926392 -395.02996826]
[135.23013306 -380.91256714]
[128.69650269 -367.39532471]
[120.80761719 -354.62155151]
[111.64711761 -342.72662354]
[101.31211090 -331.83663940]
[89.91213989 -322.06707764]
[77.56806183 -313.52142334]
[64.41072845 -306.29034424]
[50.57961655 -300.45046997]
[36.22134018 -296.06365967]
[39.10661316 -281.34378052]
[43.47801208 -275.38452148]
[41.92354965 -266.38333130]
[44.58934402 -251.62213135]
[47.25513840 -236.86090088]
[49.92093658 -222.09968567]
[63.05009842 -218.33909607]
[73.32746124 -209.24488831]
[78.70957947 -196.54913330]
[78.09363556 -182.70721436]
[71.54288483 -170.42292786]
[60.28540421 -162.12039185]
[62.73113251 -147.32112122]
[65.17685699 -132.52185059]
[77.02664185 -119.57775879]
[70.39975739 -102.39736176]
[73.06555176 -87.63614655]
[75.73134613 -72.87493134]
[78.39714050 -58.11371231]
[81.06294250 -43.35249329]
[93.10412598 -30.58625793]
[86.73376465 -13.30910492]
[89.61904144 1.41078639]
[99.47984314 8.41728592]
[102.00408173 20.65705681]
[95.30436707 31.67870140]
[97.97016907 46.43991852]
[100.63596344 61.20113754]
[103.30175781 75.96235657]
[105.96755219 90.72357178]
[116.53439331 80.07735443]
[131.46202087 81.54910278]
[139.74633789 94.05390930]
[135.28045654 108.37368011]
[121.35646820 113.95242310]
[108.23956299 106.67903900]
[109.80008698 121.59764862]
[113.80530548 129.80715942]
[111.27108765 136.74974060]
[112.60932159 151.68992615]
[113.94755554 166.63011169]
[122.88519287 179.68496704]
[116.31421661 193.05177307]
[117.87474060 207.97038269]
[119.65720367 222.86408997]
[121.43967438 237.75781250]
[123.22213745 252.65153503]
[134.59809875 267.13150024]
[127.06761932 282.98263550]
[129.07164001 297.84817505]
[131.07565308 312.71368408]
[133.07966614 327.57922363]
[135.08367920 342.44473267]
[137.08769226 357.31027222]
[152.10943604 357.26229858]
[167.00891113 359.17553711]
[181.53118896 363.01724243]
[195.42774963 368.72164917]
[208.46083069 376.19119263]
[220.40739441 385.29803467]
[231.06303406 395.88635254]
[240.24542236 407.77496338]
[247.79740906 420.76040649]
[253.58981323 434.62054443]
[257.52346802 449.11816406]
[259.53112793 464.00521851]
[259.57836914 479.02697754]
[257.66442871 493.92636108]
[253.82203674 508.44845581]
[248.11695862 522.34472656]
[240.64678955 535.37744141]
[231.53938293 547.32360840]
[220.95056152 557.97875977]
[209.06152344 567.16058350]
[196.07569885 574.71191406]
[182.21530151 580.50366211]
[167.71748352 584.43664551]
[152.83032227 586.44360352]
[137.80857849 586.49011230]
[122.90928650 584.57543945]
[108.38737488 580.73236084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 183]
[20 182]
[21 181]
[22 180]
[23 179]
[24 178]
[27 176]
[28 175]
[29 174]
[30 173]
[33 172]
[35 170]
[36 169]
[37 168]
[38 166]
[39 165]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[46 152]
[47 151]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[57 143]
[58 142]
[59 141]
[64 135]
[65 134]
[66 133]
[67 132]
[68 130]
[69 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
