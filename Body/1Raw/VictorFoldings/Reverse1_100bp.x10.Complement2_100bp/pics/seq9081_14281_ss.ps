%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[131.37635803 594.28149414]
[126.62417603 580.00518799]
[124.65995789 565.08746338]
[125.55470276 550.06762695]
[129.27606201 535.48858643]
[135.68952942 521.87744141]
[144.56323242 509.72613525]
[155.57640076 499.47399902]
[168.33093262 491.49160767]
[182.36573792 486.06753540]
[172.48971558 474.91793823]
[177.65129089 459.96237183]
[174.98548889 445.20114136]
[172.31970215 430.43994141]
[169.65390015 415.67871094]
[166.98809814 400.91751099]
[164.32231140 386.15628052]
[161.65650940 371.39505005]
[151.78050232 360.24545288]
[156.94206238 345.28991699]
[154.27627563 330.52868652]
[151.61047363 315.76745605]
[148.28820801 301.14001465]
[144.31611633 286.67547607]
[140.34402466 272.21096802]
[127.21190643 260.56988525]
[132.01547241 242.79330444]
[127.82846069 228.38952637]
[123.64144897 213.98573303]
[118.75582123 208.44024658]
[119.50103760 199.33627319]
[115.52893829 184.87174988]
[111.55684662 170.40722656]
[100.72549438 160.18318176]
[104.53221130 144.82676697]
[100.56011200 130.36224365]
[96.58801270 115.89772034]
[84.35319519 104.42228699]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[79.75812531 59.63401794]
[74.30276489 45.66122055]
[68.84740448 31.68842316]
[63.39205170 17.71562576]
[55.07035446 30.19558334]
[40.13839340 31.62266541]
[29.60345650 20.94488144]
[31.23150444 6.03349352]
[43.82240295 -2.11937547]
[58.09340668 2.49513125]
[53.69240952 -11.84471607]
[49.29141235 -26.18456268]
[44.89041519 -40.52441025]
[40.48941422 -54.86425781]
[31.26255035 -43.03780746]
[16.26580811 -42.72526550]
[6.55422640 -54.15702820]
[9.28682423 -68.90602112]
[22.44923210 -76.09984589]
[36.33749771 -70.43669128]
[33.01523972 -85.06414795]
[19.92545319 -93.50780487]
[16.76458359 -108.38945770]
[24.89498520 -120.81652832]
[21.57272530 -135.44398499]
[18.25046539 -150.07144165]
[14.92820644 -164.69891357]
[11.38056755 -168.52792358]
[9.81315517 -172.89787292]
[10.10041809 -176.96389771]
[11.79967499 -180.05337524]
[9.13387966 -194.81459045]
[6.46808386 -209.57580566]
[3.80228829 -224.33703613]
[-8.41536427 -238.11419678]
[-1.84171784 -254.38546753]
[-4.72699070 -269.10534668]
[-7.61226320 -283.82525635]
[-10.49753571 -298.54513550]
[-13.38280869 -313.26504517]
[-16.26808167 -327.98492432]
[-22.62251282 -314.39739990]
[-34.86251450 -305.72662354]
[-49.78857803 -304.23910522]
[-63.49906540 -310.32373047]
[-72.41008759 -322.38995361]
[-74.19232941 -337.28369141]
[-68.37991333 -351.11175537]
[-56.49219131 -360.25955200]
[-41.63658524 -362.33584595]
[-27.69631577 -356.79791260]
[-18.31569481 -345.09411621]
[-18.98547935 -360.07916260]
[-19.65526390 -375.06420898]
[-20.32505035 -390.04925537]
[-20.99483490 -405.03427124]
[-21.66461945 -420.01931763]
[-35.85500717 -425.54678345]
[-46.56573105 -436.37268066]
[-51.94110107 -450.62139893]
[-51.04980087 -465.82418823]
[-44.04624939 -479.34713745]
[-32.14385605 -488.84729004]
[-17.40478325 -492.67871094]
[-2.38266373 -490.17752075]
[10.31982803 -481.77713013]
[18.50191116 -468.93295288]
[20.74598694 -453.87026978]
[16.66325951 -439.19882202]
[6.96108246 -427.46054077]
[-6.67958117 -420.68911743]
[-6.00979614 -405.70407104]
[-5.34001064 -390.71902466]
[-4.67022562 -375.73397827]
[-4.00044060 -360.74896240]
[-3.33065557 -345.76391602]
[-1.54818952 -330.87020874]
[1.33708310 -316.15029907]
[4.22235584 -301.43041992]
[7.10762835 -286.71051025]
[9.99290085 -271.99063110]
[12.87817383 -257.27075195]
[22.73898125 -250.26423645]
[25.26321793 -238.02447510]
[18.56350517 -227.00282288]
[21.22930145 -212.24160767]
[23.89509583 -197.48039246]
[26.56089211 -182.71917725]
[29.55566597 -168.02116394]
[32.87792587 -153.39370728]
[36.20018387 -138.76625061]
[39.52244568 -124.13878632]
[52.22324753 -116.44300079]
[55.80086517 -101.65599823]
[47.64269638 -88.38640594]
[50.96495819 -73.75894928]
[54.82926178 -59.26525497]
[59.23026276 -44.92540741]
[63.63125992 -30.58556175]
[68.03225708 -16.24571419]
[72.43325806 -1.90586686]
[77.36484528 12.26026821]
[82.82020569 26.23306656]
[88.27556610 40.20586395]
[93.73091888 54.17866135]
[100.72991180 40.91162872]
[115.01879883 36.34790421]
[128.41226196 43.10179520]
[133.23793030 57.30436325]
[126.73141479 70.81974030]
[112.61996460 75.90569305]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[113.02512360 90.26731110]
[116.19271851 101.47479248]
[111.05253601 111.92562103]
[115.02463531 126.39014435]
[118.99673462 140.85467529]
[130.11219788 152.11331177]
[126.02136993 166.43511963]
[129.99346924 180.89964294]
[133.96556091 195.36416626]
[138.04522705 209.79872131]
[142.23223877 224.20251465]
[146.41925049 238.60629272]
[157.32633972 245.49092102]
[160.51718140 257.57406616]
[154.80854797 268.23886108]
[158.78063965 282.70339966]
[162.75273132 297.16790771]
[171.09397888 284.70101929]
[185.78012085 281.64859009]
[198.39826965 289.75921631]
[201.72018433 304.38674927]
[193.84291077 317.15188599]
[179.27891541 320.74215698]
[166.37168884 313.10168457]
[169.03749084 327.86288452]
[171.70327759 342.62411499]
[181.76997375 354.82952881]
[176.41772461 368.72927856]
[179.08352661 383.49047852]
[181.74932861 398.25170898]
[184.41511536 413.01290894]
[187.08091736 427.77413940]
[189.74670410 442.53533936]
[192.41250610 457.29656982]
[202.47920227 469.50198364]
[197.12695312 483.40173340]
[212.17243958 483.57406616]
[226.91337585 486.59091187]
[240.81686401 492.34326172]
[253.38032532 500.62310791]
[264.14959717 511.13119507]
[272.73535156 523.48760986]
[278.82723999 537.24572754]
[282.20501709 551.90814209]
[282.74664307 566.94488525]
[280.43246460 581.81231689]
[275.34619141 595.97302246]
[267.67163086 608.91516113]
[257.68627930 620.17077637]
[245.75106812 629.33306885]
[232.29745483 636.07073975]
[217.81176758 640.14031982]
[202.81765747 641.39465332]
[187.85716248 639.78839111]
[173.47109985 635.37957764]
[160.17948914 628.32763672]
[148.46284485 618.88751221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 189]
[12 187]
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[20 179]
[21 178]
[22 177]
[23 170]
[24 169]
[25 168]
[27 165]
[28 164]
[29 163]
[31 162]
[32 161]
[33 160]
[35 158]
[36 157]
[37 156]
[39 153]
[40 152]
[41 145]
[42 144]
[43 143]
[44 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[60 136]
[61 135]
[64 132]
[65 131]
[66 130]
[67 129]
[71 128]
[72 127]
[73 126]
[74 125]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
