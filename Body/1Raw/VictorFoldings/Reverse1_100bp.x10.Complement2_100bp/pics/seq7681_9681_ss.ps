%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[107.80080414 554.27191162]
[96.90024567 543.67730713]
[90.88842773 529.71569824]
[90.68209839 514.51617432]
[96.31273651 500.39648438]
[106.92169952 489.50988770]
[120.89120483 483.51644897]
[120.66786957 468.51809692]
[120.44454193 453.51977539]
[105.79271698 450.43334961]
[92.18859100 444.16070557]
[80.31579590 435.01348877]
[70.77173615 423.44793701]
[64.03755188 410.04199219]
[60.45386505 395.46658325]
[60.20351410 380.45196533]
[63.30228043 365.75103760]
[69.59789276 352.10180664]
[78.77754211 340.19015503]
[90.38337708 330.61541748]
[103.83539581 323.86032104]
[118.46038055 320.26644897]
[118.23705292 305.26812744]
[118.01372528 290.26977539]
[117.45551300 275.28018188]
[116.56269836 260.30676270]
[115.00217438 245.38816833]
[112.77706146 230.55412292]
[110.55194092 215.72007751]
[108.32682800 200.88603210]
[106.10170746 186.05198669]
[103.87659454 171.21794128]
[101.65147400 156.38391113]
[99.20574951 141.58464050]
[96.53994751 126.82341766]
[93.87415314 112.06220245]
[89.72590637 126.47719574]
[82.79778290 139.78137207]
[73.36571503 151.44482422]
[61.80538559 161.00300598]
[48.57723999 168.07521057]
[34.20815277 172.37977600]
[19.27042961 173.74522400]
[4.35904026 172.11720276]
[-9.93210030 167.56051636]
[-23.03378296 160.25669861]
[-34.42417145 150.49661255]
[-43.64959335 138.66903687]
[-50.34259796 125.24504089]
[-54.23661423 110.75930786]
[-55.17653656 95.78878021]
[-53.12493515 80.92974854]
[-48.16352081 66.77402496]
[-40.48990250 53.88544464]
[-30.40972328 42.77733994]
[-18.32446861 33.89215088]
[-4.71548986 27.58376503]
[9.87517166 24.10344696]
[24.86637497 23.58981705]
[39.66102600 26.06332970]
[53.66986084 31.42546844]
[66.33491516 39.46265793]
[77.15174103 49.85478592]
[85.68950653 62.18793488]
[91.60816193 75.97087860]
[94.67152405 90.65048981]
[98.42782593 76.12843323]
[102.18412781 61.60637283]
[105.94042969 47.08431625]
[104.54398346 42.05469894]
[105.15531921 37.45257187]
[107.27537537 33.97113800]
[110.20230865 32.00506592]
[114.60330200 17.66521835]
[119.00430298 3.32537079]
[123.40529633 -11.01447678]
[127.80629730 -25.35432434]
[123.26792908 -43.20046616]
[136.57191467 -54.64472198]
[140.75892639 -69.04850769]
[144.94593811 -83.45228577]
[149.13294983 -97.85607147]
[153.21261597 -112.29061890]
[157.18470764 -126.75514221]
[161.15679932 -141.21966553]
[163.82260132 -155.98088074]
[165.16082764 -170.92106628]
[155.30297852 -182.98176575]
[156.87295532 -198.11418152]
[168.43174744 -207.43780518]
[169.76997375 -222.37799072]
[171.10821533 -237.31817627]
[172.44644165 -252.25836182]
[173.78468323 -267.19854736]
[175.12290955 -282.13873291]
[160.79138184 -286.78146362]
[147.85253906 -294.49731445]
[136.95539856 -304.89923096]
[128.64656067 -317.46548462]
[123.34278107 -331.56576538]
[121.31010437 -346.49279785]
[122.65048218 -361.49783325]
[127.29668427 -375.82824707]
[135.01565552 -388.76519775]
[145.42022705 -399.65982056]
[157.98851013 -407.96560669]
[172.09005737 -413.26599121]
[187.01757812 -415.29504395]
[202.02227783 -413.95101929]
[216.35156250 -409.30136108]
[229.28666687 -401.57925415]
[240.17875671 -391.17202759]
[248.48150635 -378.60174561]
[253.77845764 -364.49890137]
[255.80389404 -349.57089233]
[254.45625305 -334.56652832]
[249.80310059 -320.23837280]
[242.07786560 -307.30514526]
[231.66801453 -296.41555786]
[219.09571838 -288.11584473]
[204.99159241 -282.82232666]
[190.06309509 -280.80050659]
[188.72486877 -265.86032104]
[187.38662720 -250.92013550]
[186.04840088 -235.97994995]
[184.71015930 -221.03976440]
[183.37193298 -206.09957886]
[193.08970642 -194.87013245]
[191.94537354 -179.69960022]
[180.10101318 -169.58283997]
[178.76278687 -154.64265442]
[187.98411560 -166.47341919]
[201.38677979 -173.20904541]
[216.38291931 -173.54899597]
[230.07704163 -167.42762756]
[239.82499695 -156.02687073]
[243.74462891 -141.54803467]
[241.07910156 -126.78676605]
[232.34310913 -114.59323120]
[219.22341919 -107.32180786]
[204.25323486 -106.37649536]
[190.32305908 -111.93981934]
[180.12261963 -122.93758392]
[175.62132263 -137.24757385]
[171.64923096 -122.78305054]
[167.67713928 -108.31852722]
[168.93717957 -101.03607178]
[163.53672791 -93.66905975]
[159.34971619 -79.26527405]
[155.16270447 -64.86149597]
[150.97569275 -50.45771027]
[156.52491760 -39.70909882]
[153.15452576 -27.67480278]
[142.14614868 -20.95332527]
[137.74514771 -6.61347818]
[133.34414673 7.72636890]
[128.94314575 22.06621552]
[124.54215240 36.40606308]
[120.46248627 50.84061432]
[116.70618439 65.36267853]
[112.94988251 79.88473511]
[109.19358063 94.40679169]
[108.63537598 109.39640045]
[111.30117035 124.15762329]
[113.96696472 138.91883850]
[117.93905640 144.20410156]
[118.55348206 149.85383606]
[116.48551941 154.15878296]
[118.71063232 168.99282837]
[120.93575287 183.82687378]
[123.16086578 198.66091919]
[125.38598633 213.49496460]
[127.61110687 228.32901001]
[129.83622742 243.16305542]
[139.59982300 231.77568054]
[154.54461670 230.49006653]
[166.10957336 240.04264832]
[167.66973877 254.96128845]
[158.33139038 266.69992065]
[143.44395447 268.53408813]
[131.53610229 259.41394043]
[132.42892456 274.38735962]
[135.30476379 278.74356079]
[136.13868713 283.31060791]
[135.19232178 287.27539062]
[133.01206970 290.04644775]
[133.23539734 305.04479980]
[133.45872498 320.04312134]
[148.18421936 323.19995117]
[161.83140564 329.55154419]
[173.71716309 338.77648926]
[183.24740601 350.40954590]
[189.94660950 363.86529541]
[193.48170471 378.46740723]
[193.67851257 393.48284912]
[190.53036499 408.15847778]
[184.19831848 421.75897217]
[175.00283813 433.60357666]
[163.40765381 443.10025024]
[149.99632263 449.77514648]
[135.44288635 453.29644775]
[135.66621399 468.29476929]
[135.88954163 483.29312134]
[150.03129578 488.86798096]
[160.95968628 499.43389893]
[167.00822449 513.37963867]
[167.25453186 528.57855225]
[161.66107178 542.71301270]
[151.08078003 553.62750244]
[137.12709045 559.65765381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 203]
[8 202]
[9 201]
[22 188]
[23 187]
[24 186]
[25 182]
[26 181]
[27 174]
[28 173]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 165]
[35 164]
[36 163]
[66 162]
[67 161]
[68 160]
[69 159]
[73 158]
[74 157]
[75 156]
[76 155]
[77 154]
[79 151]
[80 150]
[81 149]
[82 148]
[83 146]
[84 145]
[85 144]
[86 131]
[87 130]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
