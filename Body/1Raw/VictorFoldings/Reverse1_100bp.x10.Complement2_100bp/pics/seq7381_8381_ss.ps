%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[51.58736801 756.91241455]
[40.89339066 767.80285645]
[26.53035736 772.96679688]
[11.35006237 771.37890625]
[-1.63343525 763.35449219]
[-9.84225368 750.48675537]
[-11.64652634 735.33062744]
[-6.68801260 720.89544678]
[4.04877043 710.04718018]
[18.43202591 704.93988037]
[19.99254990 690.02124023]
[21.44196892 675.09143066]
[22.78020287 660.15124512]
[24.11843681 645.21105957]
[25.34541130 630.26135254]
[26.46106148 615.30291748]
[27.57670975 600.34442139]
[15.33540535 596.54382324]
[4.15593147 590.25958252]
[-5.46412039 581.76818848]
[-13.09587097 571.44421387]
[-18.39827156 559.74420166]
[-21.13334656 547.18615723]
[-21.17686653 534.32696533]
[-18.52400017 521.73712158]
[-13.28964138 509.97616577]
[-5.70345116 499.56716919]
[3.90022779 490.97384644]
[15.09710121 484.57974243]
[27.39166832 480.67114258]
[40.23915100 479.42428589]
[42.24316406 464.55877686]
[44.24717712 449.69323730]
[38.27961731 436.04635620]
[47.79127121 423.40359497]
[49.79528427 408.53808594]
[51.79929733 393.67254639]
[53.80331039 378.80700684]
[55.80732346 363.94149780]
[57.81133652 349.07595825]
[50.28086472 333.22482300]
[61.65682220 318.74487305]
[63.43928909 303.85113525]
[65.22175598 288.95742798]
[67.00421906 274.06372070]
[68.78668976 259.16998291]
[59.40755463 247.65620422]
[61.00306320 232.52645874]
[73.14337921 222.76683044]
[74.92584991 207.87310791]
[73.04571533 204.89025879]
[72.51694489 200.84854126]
[73.82147980 196.39303589]
[77.13491821 192.35964966]
[79.58064270 177.56037903]
[82.02637482 162.76110840]
[84.47209930 147.96183777]
[86.91783142 133.16256714]
[73.78444672 124.15872192]
[65.88128662 110.33500671]
[64.78508759 94.44937897]
[70.71456909 79.67113495]
[82.48673248 68.94867706]
[97.75293732 64.42121124]
[99.97805023 49.58716965]
[102.20317078 34.75312805]
[104.42829132 19.91908455]
[106.54291534 5.06888628]
[108.54692841 -9.79664230]
[110.55094147 -24.66217041]
[112.55495453 -39.52769852]
[105.16753387 -56.39505005]
[116.42751312 -69.85535431]
[110.38492584 -84.47718048]
[119.57979584 -96.19483948]
[121.36225891 -111.08855438]
[111.86786652 -123.43740845]
[113.88770294 -138.51635742]
[125.71895599 -147.49171448]
[127.50142670 -162.38543701]
[129.28388977 -177.27915955]
[131.06636047 -192.17286682]
[132.84881592 -207.06658936]
[134.63128662 -221.96031189]
[125.13688660 -234.30915833]
[127.15673065 -249.38810730]
[138.98797607 -258.36346436]
[140.77044678 -273.25720215]
[141.55177307 -288.23681641]
[141.32844543 -303.23516846]
[141.10511780 -318.23348999]
[140.88179016 -333.23184204]
[140.65846252 -348.23016357]
[140.10025024 -363.21978760]
[139.20742798 -378.19317627]
[138.31462097 -393.16659546]
[123.93803406 -398.10443115]
[112.54875183 -408.17184448]
[105.88353729 -421.83358765]
[104.95880127 -437.00637817]
[109.91555786 -451.37643433]
[119.99793243 -462.75247192]
[133.66844177 -469.39971924]
[148.84242249 -470.30450439]
[163.20596313 -465.32882690]
[174.56872559 -455.23150635]
[181.19796753 -441.55227661]
[182.08277893 -426.37710571]
[177.08824158 -412.02011108]
[166.97596741 -400.67065430]
[153.28802490 -394.05941772]
[154.18084717 -379.08599854]
[155.07365417 -364.11260986]
[157.45396423 -361.51135254]
[158.69261169 -357.62796021]
[158.20068359 -353.01153564]
[155.65679932 -348.45349121]
[155.88012695 -333.45516968]
[156.10345459 -318.45681763]
[156.32678223 -303.45849609]
[156.55010986 -288.46014404]
[165.69041443 -300.35363770]
[179.77352905 -305.51754761]
[194.43565369 -302.35177612]
[205.13356018 -291.83728027]
[208.55239868 -277.23208618]
[203.63279724 -263.06176758]
[191.89915466 -253.71717834]
[176.98725891 -252.09381104]
[163.51771545 -258.69470215]
[155.66416931 -271.47473145]
[153.88169861 -256.58099365]
[163.26083374 -245.06721497]
[161.66532898 -229.93746948]
[149.52500916 -220.17784119]
[147.74253845 -205.28411865]
[145.96006775 -190.39041138]
[144.17761230 -175.49668884]
[142.39514160 -160.60296631]
[140.61267090 -145.70925903]
[149.99180603 -134.19546509]
[148.39630127 -119.06571960]
[136.25598145 -109.30609131]
[134.47351074 -94.41237640]
[140.64360046 -80.85585022]
[131.32122803 -68.07289124]
[138.54873657 -58.37290573]
[137.18562317 -45.95011520]
[127.42047882 -37.52368546]
[125.41646576 -22.65815735]
[123.41245270 -7.79262829]
[121.40843964 7.07289982]
[123.63012695 14.12172222]
[119.26232910 22.14420128]
[117.03721619 36.97824478]
[114.81209564 51.81229019]
[112.58698273 66.64633179]
[124.33199310 73.94519043]
[132.41603088 85.16423035]
[135.62277222 98.61545563]
[133.46974182 112.27500153]
[126.28086853 124.08765411]
[115.13779449 132.27609253]
[101.71710205 135.60829163]
[99.27136993 150.40756226]
[96.82564545 165.20683289]
[94.37991333 180.00610352]
[91.93418884 194.80537415]
[89.81956482 209.65557861]
[88.03710175 224.54930115]
[97.53150177 236.89814758]
[95.51165771 251.97709656]
[83.68040466 260.95245361]
[81.89793396 275.84616089]
[80.11547089 290.73989868]
[78.33300781 305.63360596]
[76.55053711 320.52731323]
[83.89439392 331.13064575]
[82.10315704 343.49896240]
[72.67686462 351.07998657]
[70.67285156 365.94549561]
[68.66883850 380.81103516]
[66.66482544 395.67657471]
[64.66081238 410.54208374]
[62.65679932 425.40762329]
[68.48101807 440.11779785]
[59.11270523 451.69723511]
[57.10869217 466.56277466]
[55.10467911 481.42831421]
[71.04515839 488.18859863]
[84.44743347 499.13064575]
[94.24559021 513.37481689]
[99.66295624 529.77911377]
[100.27372742 547.03094482]
[96.03640747 563.75207520]
[87.29651642 578.60858154]
[74.75845337 590.41748047]
[59.42873001 598.24078369]
[42.53516388 601.46008301]
[41.41951370 616.41851807]
[40.30386734 631.37701416]
[42.78633499 640.16760254]
[39.05862045 646.54931641]
[37.72038651 661.48950195]
[36.38215256 676.42968750]
[38.73346710 685.25628662]
[34.91115570 691.58178711]
[33.35063171 706.50036621]
[46.36562729 714.47363281]
[54.62505722 727.30889893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 205]
[13 204]
[14 203]
[15 201]
[16 200]
[17 199]
[31 189]
[32 188]
[33 187]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[42 177]
[43 176]
[44 175]
[45 174]
[46 173]
[49 170]
[50 169]
[54 168]
[55 167]
[56 166]
[57 165]
[58 164]
[64 157]
[65 156]
[66 155]
[67 154]
[68 152]
[69 151]
[70 150]
[71 149]
[73 146]
[75 144]
[76 143]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[87 132]
[88 131]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
