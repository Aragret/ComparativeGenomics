%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[63.84976959 651.92797852]
[48.06124496 651.22222900]
[37.45788193 639.50286865]
[38.33046722 623.72265625]
[50.16131210 613.24383545]
[50.83109665 598.25878906]
[51.50088120 583.27374268]
[42.58626556 568.15765381]
[52.62502289 552.72052002]
[53.07162857 537.72717285]
[53.51823425 522.73382568]
[53.96483994 507.74044800]
[46.60990906 494.78845215]
[54.75466156 481.22476196]
[55.20126724 466.23141479]
[43.56933594 475.70233154]
[28.63395691 474.31149292]
[18.95079041 462.85565186]
[20.06679916 447.89721680]
[31.34267807 438.00509644]
[46.31909561 438.84588623]
[56.41654968 449.93710327]
[58.19901657 435.04339600]
[52.02893448 421.48684692]
[61.35129929 408.70388794]
[63.13376617 393.81018066]
[64.91622925 378.91647339]
[66.69869995 364.02273560]
[68.48116302 349.12902832]
[62.31108093 335.57250977]
[71.63344574 322.78955078]
[73.41591644 307.89584351]
[59.13191223 301.46981812]
[47.51842117 290.93121338]
[39.72035217 277.30273438]
[36.51148224 261.91250610]
[38.21768570 246.26460266]
[44.68387604 231.89213562]
[55.28803635 220.20690918]
[69.00102997 212.36088562]
[84.48645020 209.13252258]
[86.04697418 194.21391296]
[87.60749817 179.29530334]
[89.16802216 164.37670898]
[90.28366852 149.41824341]
[83.12239075 136.35818481]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[93.58938599 62.95591736]
[94.03599548 47.96256638]
[91.84303284 44.21491623]
[91.03768921 40.35279846]
[91.48556519 36.82649612]
[92.91981506 33.99638367]
[94.98197174 32.09753418]
[96.32021332 17.15734863]
[97.65844727 2.21716309]
[98.99668121 -12.72302246]
[100.33491516 -27.66320801]
[101.45056152 -42.62166214]
[102.34337616 -57.59506607]
[99.73030090 -66.34776306]
[103.36258698 -72.78424072]
[96.67312622 -87.12166595]
[105.33560944 -99.23821259]
[106.45125580 -114.19666290]
[107.56690979 -129.15512085]
[108.45972443 -144.12852478]
[109.12950897 -159.11357117]
[109.79929352 -174.09860229]
[95.53199768 -179.03057861]
[83.24493408 -187.77415466]
[73.92890167 -199.61378479]
[68.33219147 -213.58464050]
[66.90042877 -228.55134583]
[69.74114990 -243.30012512]
[76.61573792 -256.63732910]
[86.95945740 -267.48596191]
[99.92784882 -274.97277832]
[114.46564484 -278.49838257]
[115.13542938 -293.48339844]
[115.80521393 -308.46844482]
[107.69306183 -318.49621582]
[108.55942535 -330.96350098]
[117.39575195 -339.22457886]
[118.28857422 -354.19799805]
[119.18138885 -369.17138672]
[119.85117340 -384.15643311]
[120.29777527 -399.14978027]
[120.74438477 -414.14312744]
[121.19098663 -429.13647461]
[121.63759613 -444.12985229]
[107.11204529 -448.16366577]
[93.97427368 -455.55706787]
[82.98811340 -465.88021851]
[74.79226685 -478.53295898]
[69.86323547 -492.77966309]
[68.48759460 -507.79202271]
[70.74531555 -522.69726562]
[76.50513458 -536.62878418]
[85.43218994 -548.77667236]
[97.00746918 -558.43463135]
[110.55800629 -565.04119873]
[125.29598236 -568.21221924]
[140.36456299 -567.76336670]
[154.88766479 -563.72076416]
[168.02095032 -556.31939697]
[179.00085449 -545.98956299]
[187.18902588 -533.33184814]
[192.10940552 -519.08221436]
[193.47595215 -504.06900024]
[191.20919800 -489.16513062]
[185.44093323 -475.23706055]
[176.50651550 -463.09460449]
[164.92538452 -453.44366455]
[151.37084961 -446.84533691]
[136.63095093 -443.68322754]
[136.18434143 -428.68988037]
[135.73773193 -413.69653320]
[135.29112244 -398.70318604]
[134.84452820 -383.70983887]
[137.40939331 -379.68112183]
[137.47068787 -373.99841309]
[134.15478516 -368.27859497]
[133.26197815 -353.30517578]
[132.36915588 -338.33178711]
[141.05773926 -323.08462524]
[130.79025269 -307.79867554]
[130.12046814 -292.81362915]
[129.45068359 -277.82858276]
[143.61596680 -273.02005005]
[155.86470032 -264.40612793]
[165.19929504 -252.67790222]
[170.85658264 -238.78056335]
[172.37016296 -223.83717346]
[169.60885620 -209.05789185]
[162.78804016 -195.64204407]
[152.45288086 -184.68077087]
[139.43473816 -177.06825256]
[124.78433228 -173.42881775]
[124.11454773 -158.44377136]
[123.44476318 -143.45874023]
[125.94936371 -139.39228821]
[125.92604065 -133.70928955]
[122.52536011 -128.03947449]
[121.40971375 -113.08101654]
[120.29405975 -98.12256622]
[127.06332397 -84.85507202]
[118.32104492 -71.66859436]
[117.31678009 -56.70225143]
[116.42396545 -41.72884369]
[118.86775208 -37.62555695]
[118.75981903 -31.94353485]
[115.27510071 -26.32497215]
[113.93685913 -11.38478756]
[112.59862518 3.55539703]
[111.26039124 18.49558258]
[109.92215729 33.43576813]
[109.02934265 48.40917206]
[108.58274078 63.40252304]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[113.56658936 137.71894836]
[105.26870728 150.08804321]
[107.40563202 153.86791992]
[108.15338135 157.74160767]
[107.65305328 161.26084900]
[106.17682648 164.06929016]
[104.08662415 165.93722534]
[102.52610016 180.85583496]
[100.96557617 195.77442932]
[99.40505219 210.69303894]
[112.66764832 216.29609680]
[123.80097961 225.40002441]
[131.90798950 237.25968933]
[136.33871460 250.90837097]
[136.74244690 265.23660278]
[133.09541321 279.08233643]
[125.70198822 291.32516479]
[115.16937256 300.97702026]
[102.35765839 307.26193237]
[88.30963135 309.67828369]
[86.52716827 324.57202148]
[92.56975555 339.19384766]
[83.37487793 350.91149902]
[81.59241486 365.80520630]
[79.80995178 380.69894409]
[78.02748108 395.59265137]
[76.24501801 410.48635864]
[82.28760529 425.10818481]
[73.09273529 436.82586670]
[71.31026459 451.71957397]
[70.19461823 466.67800903]
[69.74800873 481.67138672]
[77.07099915 495.69580078]
[68.95819092 508.18704224]
[68.51158905 523.18041992]
[68.06497955 538.17376709]
[67.61837006 553.16711426]
[75.87892914 563.07299805]
[75.19828033 575.55175781]
[66.48592377 583.94354248]
[65.81613159 598.92852783]
[65.14634705 613.91357422]
[75.99514008 625.40618896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 209]
[6 208]
[7 207]
[9 204]
[10 203]
[11 202]
[12 201]
[14 199]
[15 198]
[22 197]
[23 196]
[25 194]
[26 193]
[27 192]
[28 191]
[29 190]
[31 188]
[32 187]
[41 177]
[42 176]
[43 175]
[44 174]
[45 169]
[47 167]
[48 166]
[49 164]
[50 163]
[51 162]
[52 161]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 153]
[63 152]
[65 151]
[67 149]
[68 148]
[69 147]
[70 144]
[71 143]
[72 142]
[82 132]
[83 131]
[84 130]
[87 128]
[88 127]
[89 126]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
