%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[88.77025604 557.41619873]
[76.33188629 549.00585938]
[64.87577820 539.29992676]
[54.53623962 528.41223145]
[45.43449402 516.47052002]
[37.67725754 503.61465454]
[31.35548401 489.99548340]
[26.54328728 475.77261353]
[23.29708862 461.11282349]
[21.65494919 446.18798828]
[21.63612366 431.17309570]
[23.24082947 416.24420166]
[26.45025444 401.57629395]
[31.22677040 387.34140015]
[37.51437378 373.70642090]
[45.23934555 360.83117676]
[54.31111526 348.86660767]
[64.62332153 337.95306396]
[76.05505371 328.21844482]
[88.47229004 319.77691650]
[101.72943115 312.72741699]
[115.67105865 307.15264893]
[130.13371277 303.11791992]
[127.68798065 288.31863403]
[125.24225616 273.51937866]
[111.16444397 264.31860352]
[108.03520966 247.45082092]
[118.27115631 233.26473999]
[115.60536194 218.50352478]
[105.72933960 207.35392761]
[110.89091492 192.39836121]
[108.22511292 177.63714600]
[105.55931854 162.87593079]
[102.89352417 148.11471558]
[99.89875031 133.41670227]
[96.57649231 118.78924561]
[84.37232208 110.97870636]
[81.16312408 96.84904480]
[88.79605103 84.53301239]
[85.47379303 69.90554810]
[82.15152740 55.27809143]
[78.82926941 40.65063095]
[73.27004242 26.71883202]
[65.60944366 13.82250500]
[57.94884872 0.92617857]
[50.19245911 -11.91276169]
[42.34070206 -24.69360542]
[34.48894882 -37.47444534]
[26.07432938 -49.89194107]
[17.11363220 -61.92132187]
[8.15293694 -73.95069885]
[-0.80775940 -85.98007202]
[-9.76845551 -98.00945282]
[-18.72915077 -110.03883362]
[-31.62734222 -102.35503387]
[-45.24723434 -96.03818512]
[-59.44445419 -91.15525818]
[-74.06849670 -87.75799561]
[-88.96434021 -85.88242340]
[-103.97409058 -85.54842377]
[-118.93862152 -86.75952911]
[-133.69931030 -89.50290680]
[-148.09968567 -93.74948120]
[-161.98707581 -99.45422363]
[-175.21429443 -106.55667114]
[-187.64111328 -114.98152161]
[-199.13580322 -124.63948059]
[-209.57652283 -135.42816162]
[-218.85256958 -147.23320007]
[-226.86563110 -159.92945862]
[-233.53076172 -173.38233948]
[-238.77729797 -187.44924927]
[-242.54965210 -201.98104858]
[-244.80780029 -216.82371521]
[-245.52781677 -231.81990051]
[-244.70207214 -246.81063843]
[-242.33932495 -261.63702393]
[-238.46461487 -276.14187622]
[-233.11901855 -290.17141724]
[-226.35919189 -303.57699585]
[-218.25680542 -316.21643066]
[-208.89775085 -327.95574951]
[-198.38122559 -338.67056274]
[-186.81872559 -348.24722290]
[-174.33280945 -356.58422852]
[-161.05583191 -363.59323120]
[-147.12855530 -369.19992065]
[-132.69860840 -373.34484863]
[-117.91893768 -375.98406982]
[-102.94623566 -377.08963013]
[-87.93921661 -376.64981079]
[-73.05696869 -374.66925049]
[-58.45724106 -371.16897583]
[-44.29480743 -366.18606567]
[-30.71979332 -359.77331543]
[-17.87610245 -351.99877930]
[-5.89988565 -342.94482422]
[5.08190203 -332.70742798]
[14.95284748 -321.39511108]
[23.60831451 -309.12777710]
[30.95654869 -296.03552246]
[36.91965485 -282.25708008]
[41.43442535 -267.93853760]
[44.45299149 -253.23165894]
[45.94336319 -238.29234314]
[45.88973999 -223.27897644]
[44.29268646 -208.35070801]
[41.16913605 -193.66575623]
[36.55220032 -179.37982178]
[30.49081802 -165.64433289]
[23.04924583 -152.60490417]
[14.30636883 -140.39973450]
[4.35486460 -129.15821838]
[-6.69977379 -118.99952698]
[2.26092219 -106.97014618]
[11.22161865 -94.94077301]
[20.18231392 -82.91139221]
[29.14301109 -70.88201904]
[38.10370636 -58.85263824]
[41.33964539 -73.49943542]
[53.90994263 -81.68403625]
[68.61376190 -78.71792603]
[77.02808380 -66.30022430]
[74.33280182 -51.54436493]
[62.07190323 -42.90316391]
[47.26979065 -45.32620239]
[55.12154388 -32.54536057]
[62.97330093 -19.76451683]
[69.15299988 -15.71074104]
[70.84517670 -6.73441887]
[78.50577545 6.16190815]
[86.16637421 19.05823517]
[85.14981842 4.09272051]
[88.15450287 -10.60326195]
[94.96350098 -23.96879768]
[105.08527374 -35.03901291]
[117.78911591 -43.01474762]
[132.15794373 -47.32021713]
[147.15443420 -47.64461136]
[161.69598389 -43.96451187]
[174.73283386 -36.54558945]
[185.32385254 -25.92341614]
[192.70443726 -12.86482239]
[196.34179688 1.68748391]
[195.97334290 16.68295860]
[191.62567139 31.03906441]
[183.61265564 43.71942139]
[172.51274109 53.80862808]
[159.12725830 60.57833099]
[144.42251587 63.53981781]
[129.46005249 62.47930527]
[115.32003021 57.47334290]
[103.02321625 48.88331985]
[93.45673370 37.32837296]
[96.77899170 51.95582962]
[100.10124969 66.58329010]
[103.42350769 81.21075439]
[115.62767792 89.02129364]
[118.83687592 103.15095520]
[111.20394897 115.46698761]
[114.52620697 130.09445190]
[118.07385254 133.92346191]
[119.64125824 138.29341125]
[119.35399628 142.35943604]
[117.65473938 145.44891357]
[120.32054138 160.21012878]
[122.98633575 174.97134399]
[125.65213013 189.73257446]
[135.71882629 201.93798828]
[130.36657715 215.83772278]
[133.03237915 230.59893799]
[144.90789795 236.95396423]
[150.86801147 248.81513977]
[148.93704224 261.75164795]
[140.04153442 271.07363892]
[142.48725891 285.87292480]
[144.93298340 300.67218018]
[159.92475891 299.83926392]
[174.91871643 300.63217163]
[189.73904419 303.04156494]
[204.21197510 307.03924561]
[218.16783142 312.57830811]
[231.44299316 319.59381104]
[243.88182068 328.00350952]
[255.33843994 337.70880127]
[265.67855835 348.59591675]
[274.78094482 360.53717041]
[282.53887939 373.39260864]
[288.86138916 387.01144409]
[293.67434692 401.23406982]
[296.92135620 415.89367676]
[298.56430054 430.81842041]
[298.58392334 445.83331299]
[296.98001099 460.76229858]
[293.77139282 475.43035889]
[288.99563599 489.66549683]
[282.70877075 503.30084229]
[274.98449707 516.17651367]
[265.91336060 528.14154053]
[255.60174561 539.05566406]
[244.17053223 548.79089355]
[231.75375366 557.23309326]
[218.49697876 564.28326416]
[204.55564880 569.85882568]
[190.09321594 573.89434814]
[175.27925110 576.34246826]
[160.28742981 577.17456055]
[145.29351807 576.38085938]
[130.47332764 573.97070312]
[116.00060272 569.97222900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 177]
[24 176]
[25 175]
[28 171]
[29 170]
[31 168]
[32 167]
[33 166]
[34 165]
[35 161]
[36 160]
[39 157]
[40 156]
[41 155]
[42 154]
[43 132]
[44 131]
[45 130]
[46 128]
[47 127]
[48 126]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
