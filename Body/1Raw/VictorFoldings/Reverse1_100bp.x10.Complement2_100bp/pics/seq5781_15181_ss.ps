%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[77.44883728 472.13421631]
[74.98075104 457.10662842]
[78.84458923 442.37600708]
[88.37092590 430.49456787]
[101.90926361 423.52081299]
[101.01644135 408.54739380]
[100.12362671 393.57397461]
[99.23081207 378.60058594]
[95.69476318 372.11074829]
[98.43785858 363.39791870]
[90.13996887 351.02883911]
[97.25334167 336.89694214]
[96.58355713 321.91189575]
[88.28567505 309.54281616]
[95.39904785 295.41091919]
[94.72926331 280.42587280]
[94.05947876 265.44082642]
[93.38969421 250.45579529]
[92.71990967 235.47074890]
[92.05012512 220.48571777]
[91.38033295 205.50067139]
[89.40502167 203.51162720]
[88.09857178 200.62030029]
[87.80860138 197.07751465]
[88.78559113 193.25521851]
[91.14370728 189.60922241]
[91.36703491 174.61088562]
[91.59036255 159.61254883]
[81.06429291 149.13699341]
[81.07711792 133.92335510]
[92.13622284 122.95367432]
[92.35955048 107.95533752]
[79.94222260 116.37020111]
[65.57644653 112.05458069]
[59.85214615 98.18978882]
[66.98905182 84.99643707]
[81.72611237 82.20017242]
[93.19902802 91.86078644]
[94.53726196 76.92060852]
[92.18594360 68.09398651]
[96.00825500 61.76850891]
[97.56877899 46.84990311]
[95.34914398 37.98925781]
[99.26520538 31.72138596]
[101.04767609 16.82766914]
[102.83013916 1.93395114]
[104.61260986 -12.95976639]
[94.38673401 -1.98563921]
[80.07304382 2.49970865]
[65.41310883 -0.67618167]
[54.23899460 -10.68313980]
[49.47159195 -24.90537262]
[52.35709000 -39.62522125]
[62.14122009 -50.99494934]
[76.26644135 -56.04254532]
[91.04044342 -53.44857025]
[102.60134888 -43.89109039]
[107.92707062 -29.86928749]
[111.89916992 -44.33381271]
[115.87126160 -58.79833603]
[112.06454468 -74.15474701]
[122.89590454 -84.37879181]
[126.86799622 -98.84331512]
[113.87497711 -91.34789276]
[99.08242035 -93.83387756]
[89.25327301 -105.16471863]
[88.88130188 -120.16011047]
[98.13656616 -131.96435547]
[112.78767395 -135.18070984]
[126.13634491 -128.33871460]
[132.07986450 -114.56456757]
[137.53521729 -128.53736877]
[142.99057007 -142.51016235]
[148.44592285 -156.48295593]
[147.82806396 -163.06549072]
[150.26188660 -168.20100403]
[154.27734375 -170.78659058]
[160.14630127 -184.59077454]
[166.01525879 -198.39494324]
[171.88421631 -212.19912720]
[177.75317383 -226.00329590]
[164.46569824 -232.98152161]
[151.79121399 -241.01957703]
[139.81410217 -250.06399536]
[128.61404419 -260.05456543]
[118.26557922 -270.92480469]
[108.83758545 -282.60238647]
[100.39279938 -295.00958252]
[92.98742676 -308.06381226]
[86.67073822 -321.67822266]
[81.48477936 -335.76220703]
[77.46405792 -350.22204590]
[74.63533783 -364.96148682]
[73.01744080 -379.88244629]
[72.62113190 -394.88565063]
[73.44905090 -409.87121582]
[75.49568939 -424.73944092]
[78.74742126 -439.39135742]
[83.18260956 -453.72949219]
[88.77173615 -467.65838623]
[95.47761536 -481.08538818]
[103.25560760 -493.92111206]
[112.05396271 -506.08010864]
[121.81411743 -517.48150635]
[132.47111511 -528.04943848]
[143.95405579 -537.71356201]
[156.18650818 -546.40954590]
[169.08705139 -554.07952881]
[182.56985474 -560.67242432]
[196.54519653 -566.14447021]
[210.92004395 -570.45916748]
[225.59875488 -573.58776855]
[240.48362732 -575.50952148]
[255.47561646 -576.21160889]
[270.47494507 -575.68939209]
[285.38180542 -573.94628906]
[300.09698486 -570.99395752]
[314.52255249 -566.85198975]
[328.56253052 -561.54803467]
[342.12344360 -555.11724854]
[355.11505127 -547.60260010]
[367.45092773 -539.05395508]
[379.04895020 -529.52825928]
[389.83193970 -519.08892822]
[399.72814941 -507.80538940]
[408.67169189 -495.75277710]
[416.60308838 -483.01129150]
[423.46954346 -469.66567993]
[429.22534180 -455.80484009]
[433.83218384 -441.52093506]
[437.25939941 -426.90905762]
[439.48422241 -412.06643677]
[440.49182129 -397.09188843]
[440.27551270 -382.08502197]
[438.83670044 -367.14572144]
[436.18496704 -352.37341309]
[432.33795166 -337.86639404]
[427.32131958 -323.72122192]
[421.16836548 -310.03201294]
[413.92010498 -296.88989258]
[405.62472534 -284.38232422]
[396.33749390 -272.59249878]
[386.12014771 -261.59890747]
[375.04074097 -251.47473145]
[363.17294312 -242.28730774]
[350.59579468 -234.09780884]
[337.39297485 -226.96070862]
[323.65231323 -220.92352295]
[309.46530151 -216.02642822]
[294.92636108 -212.30201721]
[280.13217163 -209.77505493]
[265.18127441 -208.46237183]
[250.17312622 -208.37271118]
[235.20759583 -209.50665283]
[220.38429260 -211.85665894]
[205.80186462 -215.40710449]
[191.55735779 -220.13433838]
[185.68840027 -206.33015442]
[179.81944275 -192.52598572]
[173.95046997 -178.72180176]
[168.08151245 -164.91763306]
[162.41873169 -151.02760315]
[156.96336365 -137.05480957]
[151.50801086 -123.08200836]
[146.05265808 -109.10920715]
[141.33251953 -94.87122345]
[137.36042786 -80.40669250]
[141.45124817 -66.08488464]
[130.33578491 -54.82624054]
[126.36369324 -40.36171722]
[122.39159393 -25.89719200]
[119.50632477 -11.17730045]
[117.72386169 3.71641707]
[115.94139099 18.61013412]
[114.15892792 33.50385284]
[112.48738861 48.41042709]
[110.92686462 63.32902908]
[109.47744751 78.25884247]
[108.13920593 93.19902039]
[107.35788727 108.17866516]
[107.13455963 123.17700195]
[117.86215210 134.47109985]
[117.42200470 149.67835999]
[106.58869934 159.83587646]
[106.36537170 174.83421326]
[106.14204407 189.83255005]
[106.36537170 204.83088684]
[107.03516388 219.81593323]
[107.70494843 234.80096436]
[108.37473297 249.78601074]
[109.04451752 264.77105713]
[109.71430206 279.75607300]
[110.38408661 294.74111938]
[118.72988129 308.18203735]
[111.56859589 321.24209595]
[112.23838043 336.22714233]
[120.58417511 349.66806030]
[113.42289734 362.72811890]
[114.20421600 377.70776367]
[115.09703064 392.68118286]
[115.98985291 407.65457153]
[116.88266754 422.62799072]
[131.15377808 427.94357300]
[142.02449036 438.60879517]
[147.61140442 452.77587891]
[146.94654846 467.99026489]
[140.14511108 481.61599731]
[128.38548279 491.29229736]
[113.70509338 495.34274292]
[98.64739990 493.06549072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[7 200]
[8 199]
[10 198]
[12 196]
[13 195]
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 188]
[21 187]
[26 186]
[27 185]
[28 184]
[31 181]
[32 180]
[38 179]
[39 178]
[41 177]
[42 176]
[44 175]
[45 174]
[46 173]
[47 172]
[58 171]
[59 170]
[60 169]
[62 167]
[63 166]
[71 165]
[72 164]
[73 163]
[74 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
