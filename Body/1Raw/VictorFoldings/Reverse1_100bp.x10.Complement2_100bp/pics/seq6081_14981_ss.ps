%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[30.42867279 758.32421875]
[15.83868694 761.83917236]
[1.02244091 764.22698975]
[-13.93311596 765.47363281]
[-28.94021797 765.57171631]
[-43.91079712 764.52081299]
[-58.75699997 762.32690430]
[-73.39170074 759.00299072]
[-87.72901154 754.56860352]
[-101.68479919 749.04962158]
[-115.17716980 742.47857666]
[-128.12693787 734.89398193]
[-140.45809937 726.34033203]
[-152.09831238 716.86779785]
[-162.97923279 706.53204346]
[-173.03704834 695.39367676]
[-182.21269226 683.51806641]
[-190.45234680 670.97491455]
[-197.70765686 657.83782959]
[-203.93603516 644.18383789]
[-209.10092163 630.09320068]
[-213.17202759 615.64849854]
[-216.12544250 600.93457031]
[-217.94384766 586.03771973]
[-218.61657715 571.04541016]
[-218.13966370 556.04553223]
[-216.51591492 541.12622070]
[-213.75486755 526.37500000]
[-209.87271118 511.87838745]
[-204.89222717 497.72146606]
[-198.84266663 483.98736572]
[-191.75950623 470.75668335]
[-183.68432617 458.10699463]
[-174.66452026 446.11260986]
[-164.75300598 434.84384155]
[-154.00794983 424.36691284]
[-142.49241638 414.74322510]
[-130.27398682 406.02926636]
[-117.42434692 398.27624512]
[-104.01892853 391.52957153]
[-90.13639069 385.82888794]
[-75.85820007 381.20764160]
[-61.26814270 377.69293213]
[-46.45185471 375.30541992]
[-31.49627304 374.05908203]
[-16.48916817 373.96124268]
[-1.51860940 375.01248169]
[13.32754993 377.20663452]
[16.64980888 362.57916260]
[19.97206879 347.95172119]
[23.29432869 333.32424927]
[26.28910255 318.62625122]
[28.95489883 303.86502075]
[31.62069321 289.10382080]
[34.28649139 274.34259033]
[36.95228577 259.58135986]
[25.22783661 268.93750000]
[10.24881268 269.73052979]
[-2.39797950 261.66461182]
[-7.99559975 247.74821472]
[-4.45627403 233.17175293]
[6.89991665 223.37190247]
[21.83739281 222.00376892]
[34.78484726 229.57763672]
[40.91332626 243.26979065]
[45.31432724 228.92994690]
[49.71532440 214.59010315]
[48.52261353 212.05325317]
[48.26291275 208.89111328]
[49.17942810 205.45666504]
[51.38320160 202.18437195]
[54.82869720 199.54193115]
[60.07541656 185.48945618]
[57.27862930 170.85978699]
[69.35421753 160.63771057]
[74.60093689 146.58523560]
[79.84765625 132.53277588]
[85.09436798 118.48030090]
[90.34108734 104.42782593]
[94.63521576 90.05561066]
[97.95747375 75.42815399]
[101.27973175 60.80069351]
[96.79111481 45.62957382]
[107.15513611 34.93208313]
[110.47739410 20.30462456]
[113.79965210 5.67716408]
[117.12191772 -8.95029640]
[120.44417572 -23.57775688]
[118.89859772 -28.56356430]
[119.37264252 -33.18185425]
[121.38810730 -36.72486877]
[124.25519562 -38.77721405]
[120.44847870 -54.13362885]
[131.27983093 -64.35767365]
[135.25193787 -78.82219696]
[139.22402954 -93.28672028]
[142.76370239 -107.86309052]
[145.86781311 -122.53839874]
[148.97192383 -137.21369934]
[135.29364014 -143.52656555]
[123.36335754 -152.72526550]
[113.77950287 -164.34841919]
[107.02279663 -177.81298828]
[103.43214417 -192.44360352]
[103.18766785 -207.50640869]
[106.30161285 -222.24584961]
[112.61779022 -235.92259216]
[121.81938934 -247.85064697]
[133.44485474 -257.43167114]
[146.91105652 -264.18511963]
[161.54254150 -267.77224731]
[176.60540771 -268.01306152]
[191.34408569 -264.89553833]
[205.01931763 -258.57604980]
[216.94512939 -249.37156677]
[226.52336121 -237.74377441]
[233.27352905 -224.27593994]
[236.85710144 -209.64358521]
[237.09428406 -194.58065796]
[233.97319031 -179.84274292]
[227.65039062 -166.16903687]
[218.44300842 -154.24545288]
[206.81289673 -144.67005920]
[193.34341431 -137.92314148]
[178.71020508 -134.34312439]
[163.64721680 -134.10958862]
[160.54310608 -119.43428802]
[157.43899536 -104.75897980]
[158.85328674 -102.33866119]
[159.39405823 -99.21229553]
[158.78759766 -95.70977783]
[156.88456726 -92.25392151]
[153.68855286 -89.31462097]
[149.71646118 -74.85009766]
[145.74435425 -60.38557434]
[149.83518982 -46.06375885]
[138.71972656 -34.80511856]
[135.07164001 -20.25549698]
[131.74937439 -5.62803650]
[128.42710876 8.99942398]
[125.10485840 23.62688446]
[121.78259277 38.25434494]
[126.50885010 52.37920761]
[115.90719604 64.12295532]
[112.58493042 78.75041199]
[109.26267242 93.37787628]
[120.95143890 83.97719574]
[135.85539246 82.28244019]
[149.35638428 88.81874847]
[157.27098083 101.56076813]
[157.14675903 116.56025696]
[149.02221680 129.16944885]
[135.41482544 135.48126221]
[120.54097748 133.53988647]
[109.00951385 123.94690704]
[104.39356232 109.67454529]
[99.14684296 123.72701263]
[93.90012360 137.77947998]
[88.65340424 151.83195496]
[83.40668488 165.88442993]
[85.82819366 181.51922607]
[74.12788391 190.73617554]
[68.88117218 204.78865051]
[64.05516815 218.99110413]
[59.65417099 233.33094788]
[55.25317383 247.67079163]
[51.71350098 262.24716187]
[49.04770660 277.00839233]
[46.38191223 291.76959229]
[43.71611404 306.53082275]
[41.05031967 321.29205322]
[42.81697845 326.20385742]
[42.54962921 330.83871460]
[40.69437790 334.46820068]
[37.92178726 336.64651489]
[34.59952927 351.27395630]
[31.27726936 365.90142822]
[27.95500946 380.52890015]
[42.29240799 384.96304321]
[56.24830246 390.48171997]
[69.74079132 397.05252075]
[82.69070435 404.63690186]
[95.02203369 413.19030762]
[106.66241455 422.66259766]
[117.54354858 432.99816895]
[127.60156250 444.13635254]
[136.77743530 456.01177979]
[145.01733398 468.55477905]
[152.27288818 481.69174194]
[158.50152588 495.34555054]
[163.66668701 509.43612671]
[167.73805237 523.88073730]
[170.69175720 538.59460449]
[172.51043701 553.49145508]
[173.18344116 568.48376465]
[172.70681763 583.48358154]
[171.08335876 598.40295410]
[168.32258606 613.15423584]
[164.44070435 627.65093994]
[159.46049500 641.80792236]
[153.41119385 655.54211426]
[146.32829285 668.77301025]
[138.25334167 681.42279053]
[129.23376465 693.41735840]
[119.32245636 704.68634033]
[108.57760620 715.16345215]
[97.06225586 724.78735352]
[84.84398651 733.50152588]
[71.99449921 741.25482178]
[58.58921051 748.00177002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 178]
[49 177]
[50 176]
[51 175]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[65 166]
[66 165]
[67 164]
[72 163]
[73 162]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 146]
[81 145]
[82 144]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[92 137]
[94 135]
[95 134]
[96 133]
[97 128]
[98 127]
[99 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
