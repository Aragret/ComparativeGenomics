%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[174.97406006 429.06210327]
[177.45138550 409.83938599]
[177.67471313 394.84106445]
[177.89804077 379.84271240]
[177.67471313 364.84439087]
[177.00491333 349.85934448]
[176.33512878 334.87429810]
[175.66534424 319.88925171]
[167.36746216 307.52017212]
[174.48083496 293.38827515]
[173.81105042 278.40322876]
[170.16296387 263.85360718]
[163.68347168 250.32527161]
[157.20397949 236.79692078]
[150.72447205 223.26858521]
[136.63461304 218.57695007]
[129.87077332 204.94958496]
[134.88731384 190.20265198]
[128.40782166 176.67430115]
[121.92832947 163.14596558]
[107.32965851 166.44200134]
[92.36357117 166.40745544]
[77.78028107 163.04402161]
[64.31082153 156.52032471]
[52.63038635 147.16337585]
[43.32449341 135.44223022]
[36.85963058 121.94442749]
[33.55986404 107.34660339]
[33.59060669 92.38050079]
[36.95031738 77.79635620]
[43.47058105 64.32523346]
[52.82454681 52.64241409]
[64.54332733 43.33353424]
[58.06383133 29.80518723]
[50.30743790 16.96624756]
[41.34674454 4.93686914]
[32.38604736 -7.09250832]
[26.47583008 -10.05576038]
[23.40960884 -14.84066582]
[23.34398270 -19.61609650]
[14.74541950 -31.90693474]
[6.14685535 -44.19777298]
[-2.45170856 -56.48860931]
[-11.05027294 -68.77944946]
[-9.88681221 -53.82463837]
[-14.46174717 -39.53932953]
[-24.09641266 -28.04266930]
[-37.36156082 -21.04011345]
[-52.28939056 -19.57045174]
[-66.66544342 -23.85169983]
[-78.35712433 -33.24875641]
[-85.63002777 -46.36763000]
[-87.40527344 -61.26221085]
[-83.41951752 -75.72297668]
[-74.26400757 -87.60475159]
[-61.29692459 -95.14495850]
[-46.44184875 -97.22504425]
[-31.90244675 -93.53644562]
[-19.83684158 -84.62774658]
[-25.80840302 -98.38784790]
[-31.88223839 -112.10311127]
[-37.95606995 -125.81838226]
[-44.02990723 -139.53364563]
[-50.10374069 -153.24891663]
[-56.17757416 -166.96418762]
[-70.52138519 -162.51763916]
[-85.28442383 -159.76643372]
[-100.26703644 -158.74772644]
[-115.26660919 -159.47534180]
[-130.08027649 -161.93940735]
[-144.50772095 -166.10661316]
[-158.35380554 -171.92059326]
[-171.43128967 -179.30273438]
[-183.56330872 -188.15318298]
[-194.58580017 -198.35226440]
[-204.34968567 -209.76203918]
[-212.72293091 -222.22821045]
[-219.59230042 -235.58216858]
[-224.86488342 -249.64334106]
[-228.46937561 -264.22155762]
[-230.35702515 -279.11962891]
[-230.50231934 -294.13613892]
[-228.90327454 -309.06799316]
[-225.58152771 -323.71319580]
[-220.58200073 -337.87374878]
[-213.97230530 -351.35812378]
[-205.84184265 -363.98397827]
[-196.30053711 -375.58053589]
[-185.47746277 -385.99096680]
[-173.51895142 -395.07452393]
[-160.58674622 -402.70831299]
[-146.85575867 -408.78912354]
[-132.51164246 -413.23468018]
[-117.74842834 -415.98492432]
[-102.76573944 -417.00262451]
[-87.76622009 -416.27401733]
[-72.95271301 -413.80895996]
[-58.52555084 -409.64077759]
[-44.67985535 -403.82586670]
[-31.60286331 -396.44287109]
[-19.47143173 -387.59161377]
[-8.44962120 -377.39178467]
[1.31350780 -365.98135376]
[9.68592167 -353.51464844]
[16.55439377 -340.16021729]
[21.82603455 -326.09869385]
[25.42955017 -311.52023315]
[27.31620979 -296.62203979]
[27.46049881 -281.60549927]
[25.86046219 -266.67379761]
[22.53774261 -252.02877808]
[17.53727150 -237.86856079]
[10.92667961 -224.38462830]
[2.79536486 -211.75932312]
[-6.74670601 -200.16340637]
[-17.57048607 -189.75367737]
[-29.52959824 -180.67094421]
[-42.46230698 -173.03800964]
[-36.38847351 -159.32275391]
[-30.31463814 -145.60748291]
[-24.24080467 -131.89221191]
[-18.16697121 -118.17694855]
[-12.09313679 -104.46168518]
[-6.51042557 -99.61863708]
[-6.03266430 -90.49670410]
[1.24056542 -77.37801361]
[9.83912945 -65.08717346]
[18.43769264 -52.79633713]
[27.03625679 -40.50549698]
[35.63482285 -28.21466064]
[44.41542435 -16.05320358]
[53.37612152 -4.02382660]
[62.33681488 8.00555134]
[60.99926376 -6.93469477]
[65.77693176 -21.15348053]
[75.86470032 -32.25469208]
[89.56260681 -38.36758041]
[104.56230927 -38.46201324]
[118.33609772 -32.52208328]
[128.56283569 -21.54876709]
[133.51916504 -7.39126301]
[132.36982727 7.56464005]
[125.30851746 20.79860878]
[113.52519989 30.08049011]
[99.00555420 33.84612274]
[84.19640350 31.46092796]
[71.59217834 23.32569122]
[78.07167053 36.85403824]
[92.67034149 33.55799484]
[107.63642883 33.59255219]
[122.21971893 36.95598221]
[135.68917847 43.47967911]
[147.36961365 52.83662415]
[156.67550659 64.55777740]
[163.14036560 78.05557251]
[166.44013977 92.65339661]
[166.40939331 107.61949921]
[163.04968262 122.20364380]
[156.52941895 135.67475891]
[147.17544556 147.35758972]
[135.45668030 156.66647339]
[141.93617249 170.19480896]
[148.41566467 183.72315979]
[163.05049133 189.05792236]
[169.42889404 202.86990356]
[164.25282288 216.78909302]
[170.73231506 230.31742859]
[177.21182251 243.84577942]
[183.69131470 257.37411499]
[183.85583496 242.37503052]
[187.19757080 227.75199890]
[193.56445312 214.17028809]
[202.66687012 202.24778748]
[214.09069824 192.52688599]
[227.31623840 185.44979858]
[241.74180603 181.33850098]
[256.71115112 180.38003540]
[271.54327393 182.61799622]
[285.56338501 187.95059204]
[298.13366699 196.13519287]
[308.68228149 206.79946899]
[316.72930908 219.45826721]
[321.90869141 233.53570557]
[323.98477173 248.39132690]
[322.86312866 263.34933472]
[318.59475708 277.72921753]
[311.37387085 290.87680054]
[301.52896118 302.19393921]
[289.50790405 311.16580200]
[275.85757446 317.38418579]
[261.19897461 320.56625366]
[246.19897461 320.56719971]
[231.53997803 317.38699341]
[217.88885498 311.17031860]
[205.86666870 302.20001221]
[196.02030945 290.88412476]
[188.79609680 277.73345947]
[189.46588135 292.71850586]
[197.81167603 306.15942383]
[190.65039062 319.21948242]
[191.32017517 334.20452881]
[191.98995972 349.18954468]
[192.65974426 364.17459106]
[195.12536621 367.74874878]
[196.21572876 371.54028320]
[196.03137207 375.09011841]
[194.81158447 378.01907349]
[192.89637756 380.06604004]
[192.67304993 395.06439209]
[192.44972229 410.06271362]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 210]
[3 209]
[4 208]
[5 203]
[6 202]
[7 201]
[8 200]
[10 198]
[11 197]
[12 169]
[13 168]
[14 167]
[15 166]
[18 163]
[19 162]
[20 161]
[33 148]
[34 147]
[35 133]
[36 132]
[37 131]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[59 125]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
