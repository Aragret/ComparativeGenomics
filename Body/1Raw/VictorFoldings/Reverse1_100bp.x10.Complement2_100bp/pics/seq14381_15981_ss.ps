%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGAAACCUAUAUGAUGUCGCUACCGAUAACUCCUCAUAGGACUCCGUACCCCCAGUCCCCAACUCCAGAACCACUCACAAAAUCACCCCAAUCGCUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[59.78482437 213.12409973]
[62.77573395 227.83393860]
[64.39662170 242.75698853]
[64.63365173 257.76593018]
[63.48480606 272.73272705]
[60.95988464 287.52966309]
[57.08043289 302.03051758]
[51.87954712 316.11154175]
[45.40159988 329.65261841]
[37.70185852 342.53820801]
[28.84601974 354.65838623]
[18.90963936 365.90975952]
[7.97748995 376.19628906]
[-3.85715461 385.43023682]
[-16.49332428 393.53280640]
[-29.82320976 400.43490601]
[-43.73308182 406.07760620]
[-58.10426331 410.41278076]
[-72.81414032 413.40344238]
[-87.73722076 415.02407837]
[-102.74617004 415.26086426]
[-117.71293640 414.11178589]
[-132.50984192 411.58660889]
[-147.01062012 407.70690918]
[-161.09155273 402.50579834]
[-174.63253784 396.02761841]
[-187.51800537 388.32766724]
[-199.63803101 379.47161865]
[-210.88922119 369.53506470]
[-221.17556763 358.60272217]
[-230.40933228 346.76794434]
[-238.51170349 334.13162231]
[-245.41355896 320.80163574]
[-251.05604553 306.89166260]
[-255.39097595 292.52041626]
[-258.38140869 277.81048584]
[-260.00180054 262.88739014]
[-260.23831177 247.87841797]
[-259.08895874 232.91166687]
[-256.56356812 218.11482239]
[-252.68362427 203.61410522]
[-247.48226929 189.53324890]
[-241.00387573 175.99238586]
[-233.30369568 163.10704041]
[-224.44746399 150.98715210]
[-214.51069641 139.73612976]
[-203.57821655 129.44996643]
[-191.74325562 120.21640778]
[-179.10681152 112.11424255]
[-165.77670288 105.21260071]
[-151.86663818 99.57035828]
[-137.49531555 95.23565674]
[-122.78533936 92.24548340]
[-107.86220551 90.62534332]
[-92.85324860 90.38906097]
[-77.88652039 91.53865814]
[-63.08970642 94.06431580]
[-48.58905411 97.94449615]
[-34.50828171 103.14608765]
[-20.96752739 109.62471008]
[-8.08231354 117.32509613]
[4.03742361 126.18153381]
[15.28828049 136.11848450]
[25.57426834 147.05114746]
[37.40053940 137.82405090]
[49.22680664 128.59695435]
[61.05307770 119.36985016]
[72.87934875 110.14275360]
[73.35626984 107.38037872]
[74.95613098 104.64048004]
[77.67587280 102.35171509]
[81.35742188 100.93371582]
[85.69537354 100.74361420]
[91.87657928 88.20231628]
[105.79780579 86.90187836]
[118.15231323 78.39505005]
[130.50682068 69.88822174]
[142.86132812 61.38139343]
[155.21583557 52.87456512]
[167.57034302 44.36774063]
[179.92485046 35.86091232]
[176.17401123 21.19269753]
[177.66516113 6.15446281]
[184.19909668 -7.44067764]
[194.96983337 -17.96023941]
[208.66394043 -24.14838791]
[223.62065125 -25.27583885]
[238.03335571 -21.22576523]
[250.16773987 -12.50556469]
[262.52224731 -21.01239204]
[274.87677002 -29.51921844]
[287.23126221 -38.02604675]
[279.57479858 -50.93152237]
[272.80703735 -64.32444763]
[266.95886230 -78.14370728]
[262.05700684 -92.32624817]
[258.12374878 -106.80735779]
[255.17712402 -121.52096558]
[253.23051453 -136.39993286]
[252.29284668 -151.37637329]
[252.36836243 -166.38194275]
[253.45672607 -181.34819031]
[255.55299377 -196.20681763]
[258.64758301 -210.89001465]
[262.72634888 -225.33081055]
[267.77075195 -239.46328735]
[273.75769043 -253.22299194]
[280.65991211 -266.54711914]
[288.44589233 -279.37487793]
[297.08010864 -291.64773560]
[306.52316284 -303.30972290]
[316.73199463 -314.30758667]
[327.66000366 -324.59115601]
[339.25729370 -334.11349487]
[351.47100830 -342.83120728]
[364.24539185 -350.70446777]
[377.52212524 -357.69738770]
[391.24069214 -363.77801514]
[405.33843994 -368.91864014]
[419.75109863 -373.09579468]
[434.41284180 -376.29043579]
[449.25683594 -378.48797607]
[464.21530151 -379.67837524]
[479.22003174 -379.85620117]
[494.20251465 -379.02066040]
[509.09439087 -377.17556763]
[523.82775879 -374.32931519]
[538.33532715 -370.49490356]
[552.55096436 -365.68984985]
[566.40979004 -359.93603516]
[579.84857178 -353.25976562]
[592.80596924 -345.69146729]
[605.22283936 -337.26568604]
[617.04254150 -328.02084351]
[628.21124268 -317.99917603]
[638.67779541 -307.24633789]
[648.39465332 -295.81146240]
[657.31726074 -283.74667358]
[665.40509033 -271.10705566]
[672.62115479 -257.95025635]
[678.93255615 -244.33630371]
[684.31048584 -230.32734680]
[688.73034668 -215.98727417]
[692.17205811 -201.38154602]
[694.61987305 -186.57678223]
[696.06268311 -171.64053345]
[696.49377441 -156.64096069]
[695.91131592 -141.64651489]
[694.31793213 -126.72558594]
[691.72082520 -111.94627380]
[688.13189697 -97.37600708]
[683.56750488 -83.08127594]
[678.04852295 -69.12729645]
[671.60009766 -55.57773209]
[664.25158691 -42.49442291]
[656.03668213 -29.93705177]
[646.99267578 -17.96292114]
[637.16101074 -6.62666702]
[626.58642578 4.01998663]
[615.31719971 13.92846107]
[603.40478516 23.05354500]
[590.90350342 31.35360336]
[577.87042236 38.79076385]
[564.36499023 45.33109283]
[550.44879150 50.94474792]
[536.18542480 55.60611725]
[521.63983154 59.29392624]
[506.87854004 61.99135208]
[491.96878052 63.68608856]
[476.97860718 64.37039948]
[461.97647095 64.04116058]
[447.03076172 62.69987869]
[432.20971680 60.35267639]
[417.58093262 57.01025391]
[403.21118164 52.68787003]
[389.16601562 47.40524673]
[375.50952148 41.18648148]
[362.30401611 34.05995560]
[349.60974121 26.05818176]
[337.48461914 17.21767426]
[325.98397827 7.57876873]
[315.16030884 -2.81455445]
[305.06298828 -13.91487217]
[295.73809814 -25.67153740]
[283.38357544 -17.16470909]
[271.02908325 -8.65788269]
[258.67456055 -0.15105556]
[262.49209595 14.29580402]
[261.13403320 29.20501900]
[254.74501038 42.77539062]
[244.07872009 53.36084366]
[230.40890503 59.67007828]
[215.37734985 60.92408752]
[200.79666138 56.95228577]
[188.43168640 48.21542358]
[176.07717896 56.72224808]
[163.72267151 65.22907257]
[151.36816406 73.73590088]
[139.01364136 82.24272919]
[126.65914154 90.74955750]
[114.30462646 99.25638580]
[108.12342072 111.79768372]
[94.20219421 113.09812164]
[82.10644531 121.96901703]
[70.28017426 131.19612122]
[58.45390701 140.42321777]
[46.62763596 149.65031433]
[34.80136490 158.87741089]
[42.90415955 171.51344299]
[49.80646896 184.84321594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 208]
[65 207]
[66 206]
[67 205]
[68 204]
[73 203]
[75 201]
[76 200]
[77 199]
[78 198]
[79 197]
[80 196]
[81 195]
[89 187]
[90 186]
[91 185]
[92 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
