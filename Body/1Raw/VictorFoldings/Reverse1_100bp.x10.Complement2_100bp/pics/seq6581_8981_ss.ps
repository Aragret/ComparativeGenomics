%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-27.53512573 536.96539307]
[-29.11179924 551.91564941]
[-33.06637573 566.41931152]
[-39.29642868 580.10083008]
[-47.64057541 592.60565186]
[-57.88269043 603.60998535]
[-69.75747681 612.82873535]
[-82.95734406 620.02319336]
[-97.14038849 625.00689697]
[-111.93923950 627.65081787]
[-126.97055817 627.88647461]
[-141.84501648 625.70770264]
[-156.17730713 621.17102051]
[-169.59620667 614.39392090]
[-181.75411987 605.55187988]
[-192.33613586 594.87402344]
[-201.06816101 582.63684082]
[-207.72401428 569.15740967]
[-212.13127136 554.78479004]
[-214.17579651 539.89129639]
[-213.80462646 524.86273193]
[-211.02737427 510.08828735]
[-205.91596985 495.95077515]
[-198.60281372 482.81631470]
[-189.27735901 471.02514648]
[-178.18112183 460.88265991]
[-165.60153198 452.65161133]
[-151.86444092 446.54519653]
[-137.32566833 442.72155762]
[-122.36179352 441.27975464]
[-107.36042786 442.25714111]
[-92.71014404 445.62838745]
[-87.04735565 431.73834229]
[-81.38457489 417.84832764]
[-75.72178650 403.95831299]
[-80.12266541 392.69070435]
[-75.51857758 381.07235718]
[-63.87066269 375.53259277]
[-58.00170135 361.72842407]
[-52.13274002 347.92425537]
[-46.26377869 334.12005615]
[-58.89441299 342.21124268]
[-73.83019257 343.59780884]
[-87.73442078 337.96997070]
[-97.50086975 326.58505249]
[-100.94767761 311.98645020]
[-97.30482483 297.43551636]
[-87.38613129 286.18298340]
[-73.40746307 280.74267578]
[-58.49168396 282.32998657]
[-45.97102356 290.59033203]
[-38.64262390 303.67828369]
[-38.14367676 318.67001343]
[-30.10250282 306.00747681]
[-22.25074768 293.22662354]
[-14.59014988 280.33032227]
[-6.92955256 267.43399048]
[0.73104477 254.53765869]
[8.39164257 241.64132690]
[16.05224037 228.74501038]
[23.71283722 215.84867859]
[31.37343407 202.95234680]
[39.03403091 190.05603027]
[29.94350052 176.91400146]
[27.48524857 161.06562805]
[32.20157623 145.67602539]
[43.19678497 133.84109497]
[58.30679321 127.96475220]
[74.52494049 129.27076721]
[81.99267578 116.26181030]
[89.46041870 103.25285339]
[74.52026367 104.59138489]
[64.04881287 93.85132599]
[65.76524353 78.94985962]
[78.40425873 70.87178040]
[92.64884949 75.57195282]
[97.99855804 89.58394623]
[106.41317749 77.16645050]
[114.82779694 64.74895477]
[123.24241638 52.33145523]
[131.65704346 39.91395950]
[140.07165527 27.49646568]
[140.96908569 9.10418034]
[157.04528809 2.06697273]
[165.27409363 -10.47442722]
[173.40931702 -23.07674026]
[181.45048523 -35.73926544]
[189.49166870 -48.40179062]
[190.35804749 -64.19925690]
[203.71244812 -70.79541779]
[203.93081665 -76.01071930]
[205.92813110 -80.20166779]
[209.01629639 -82.86218262]
[212.40608215 -83.83260345]
[221.00463867 -96.12344360]
[229.60321045 -108.41427612]
[218.25100708 -118.23932648]
[207.96920776 -129.17956543]
[198.86682129 -141.11901855]
[191.04031372 -153.93110657]
[184.57266235 -167.48004150]
[179.53242493 -181.62217712]
[175.97303772 -196.20761108]
[173.93222046 -211.08171082]
[173.43161011 -226.08682251]
[174.47653198 -241.06388855]
[177.05587769 -255.85411072]
[181.14233398 -270.30075073]
[186.69255066 -284.25061035]
[193.64772034 -297.55587769]
[201.93411255 -310.07543945]
[211.46386719 -321.67663574]
[222.13598633 -332.23648071]
[233.83732605 -341.64300537]
[246.44384766 -349.79650879]
[259.82189941 -356.61056519]
[273.82971191 -362.01293945]
[288.31872559 -365.94635010]
[303.13543701 -368.36914062]
[318.12268066 -369.25558472]
[333.12167358 -368.59631348]
[347.97335815 -366.39828491]
[362.52032471 -362.68484497]
[376.60836792 -357.49530029]
[390.08813477 -350.88473511]
[402.81674194 -342.92315674]
[414.65924072 -333.69497681]
[425.49014282 -323.29806519]
[435.19454956 -311.84259033]
[443.66967773 -299.44998169]
[450.82565308 -286.25164795]
[456.58657837 -272.38745117]
[460.89144897 -258.00439453]
[463.69458008 -243.25494385]
[464.96627808 -228.29544067]
[464.69308472 -213.28446960]
[462.87783813 -198.38114929]
[459.53985596 -183.74345398]
[454.71444702 -169.52658081]
[448.45281982 -155.88121033]
[440.82131958 -142.95201111]
[431.90087891 -130.87602234]
[421.78601074 -119.78127289]
[410.58395386 -109.78535461]
[398.41348267 -100.99423981]
[385.40359497 -93.50112152]
[371.69219971 -87.38542938]
[357.42465210 -82.71199036]
[342.75219727 -79.53034210]
[327.83035278 -77.87422180]
[312.81732178 -77.76118469]
[297.87222290 -79.19241333]
[283.15353394 -82.15275574]
[268.81723022 -86.61082458]
[255.01528931 -92.51934814]
[241.89404297 -99.81571198]
[233.29548645 -87.52487946]
[224.69691467 -75.23403931]
[216.37496948 -62.75424576]
[216.08374023 -47.86248779]
[202.15419006 -40.36061478]
[194.11302185 -27.69809151]
[186.07183838 -15.03556633]
[185.13975525 -7.70392179]
[177.81550598 -2.24561977]
[169.58670044 10.29578018]
[171.73805237 22.19948578]
[164.98513794 32.71527863]
[152.48915100 35.91108322]
[144.07453918 48.32857895]
[135.65991211 60.74607468]
[127.24529266 73.16356659]
[118.83067322 85.58106232]
[110.41605377 97.99855804]
[102.46937561 110.72059631]
[95.00163269 123.72955322]
[87.53388977 136.73849487]
[95.96364594 148.08248901]
[99.42258453 161.74118042]
[97.42047882 175.64431763]
[90.29228973 187.69750977]
[79.14263916 196.09779358]
[65.67476654 199.60325623]
[51.93035889 197.71661377]
[44.26976013 210.61294556]
[36.60916519 223.50927734]
[28.94856644 236.40559387]
[21.28796959 249.30192566]
[13.62737179 262.19824219]
[5.96677446 275.09457397]
[-1.69382322 287.99090576]
[-9.35442066 300.88723755]
[-9.81809235 307.48242188]
[-13.05669117 312.15237427]
[-17.43997765 314.04864502]
[-25.48115158 326.71118164]
[-32.45960236 339.98901367]
[-38.32856369 353.79321289]
[-44.19752502 367.59738159]
[-50.06648636 381.40155029]
[-47.40936661 399.62301636]
[-61.83175659 409.62109375]
[-67.49454498 423.51110840]
[-73.15733337 437.40115356]
[-78.82012177 451.29116821]
[-65.98870850 459.12387085]
[-54.57999802 468.91351318]
[-44.88951111 480.40658569]
[-37.16824341 493.30535889]
[-31.61620522 507.27572632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 205]
[33 204]
[34 203]
[35 202]
[38 200]
[39 199]
[40 198]
[41 197]
[53 196]
[54 195]
[55 192]
[56 191]
[57 190]
[58 189]
[59 188]
[60 187]
[61 186]
[62 185]
[63 184]
[69 177]
[70 176]
[71 175]
[77 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 169]
[84 166]
[85 165]
[86 163]
[87 162]
[88 161]
[90 159]
[94 158]
[95 157]
[96 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
