%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[108.32907104 430.43902588]
[113.45219421 416.15203857]
[123.39337158 404.68307495]
[136.80815125 397.58319092]
[135.02568054 382.68948364]
[133.13238525 367.80944824]
[131.12837219 352.94390869]
[129.12435913 338.07839966]
[127.00973511 323.22817993]
[124.78462219 308.39413452]
[122.55950165 293.56008911]
[108.64846039 288.23577881]
[99.20742798 276.58575439]
[96.84974670 261.67578125]
[102.30750275 247.49446106]
[114.20840454 237.88635254]
[111.98328400 223.05230713]
[109.75816345 208.21826172]
[107.53305054 193.38421631]
[93.59378052 183.97488403]
[90.71603394 167.06236267]
[101.16205597 153.03025818]
[98.71632385 138.23098755]
[96.27059937 123.43170929]
[93.82487488 108.63243866]
[90.50260925 94.00498199]
[86.31559753 79.60119629]
[82.12858582 65.19741821]
[77.94158173 50.79363632]
[73.75457001 36.38985443]
[69.56755829 21.98607063]
[65.27342987 7.61385775]
[60.87243271 -6.72598934]
[56.47143555 -21.06583595]
[52.64883423 -24.62038422]
[50.76074219 -28.86165810]
[50.74479294 -32.93778229]
[52.20955658 -36.14508820]
[48.45325470 -50.66714478]
[42.89403152 -64.59894562]
[35.62080002 -77.71763611]
[28.34757233 -90.83633423]
[21.07434273 -103.95502472]
[13.80111217 -117.07372284]
[6.52788305 -130.19241333]
[-8.02463913 -126.27965546]
[-23.08161545 -125.96381378]
[-37.76771545 -129.25891113]
[-51.23020935 -135.96916199]
[-62.68847656 -145.70063782]
[-71.47927856 -157.88433838]
[-77.09513092 -171.80950928]
[-79.21363068 -186.66506958]
[-77.71592712 -201.58689880]
[-72.69340515 -215.70802307]
[-64.44209290 -228.20906067]
[-53.44526291 -238.36573792]
[-60.71849442 -251.48442078]
[-67.99172211 -264.60311890]
[-75.26495361 -277.72180176]
[-88.72328949 -286.03948975]
[-88.12763214 -300.92218018]
[-95.40086365 -314.04086304]
[-109.31739807 -308.39398193]
[-123.81313324 -304.46575928]
[-138.67668152 -302.31347656]
[-153.69128418 -301.96853638]
[-168.63798523 -303.43594360]
[-183.29882812 -306.69436646]
[-197.46000671 -311.69619751]
[-210.91500854 -318.36856079]
[-223.46760559 -326.61413574]
[-234.93476868 -336.31268311]
[-245.14926147 -347.32272339]
[-253.96212769 -359.48376465]
[-261.24484253 -372.61843872]
[-266.89123535 -386.53518677]
[-270.81890869 -401.03106689]
[-272.97064209 -415.89468384]
[-273.31503296 -430.90930176]
[-271.84704590 -445.85595703]
[-268.58807373 -460.51666260]
[-263.58569336 -474.67764282]
[-256.91284180 -488.13241577]
[-248.66679382 -500.68469238]
[-238.96783447 -512.15148926]
[-227.95739746 -522.36560059]
[-215.79603577 -531.17797852]
[-202.66110229 -538.46020508]
[-188.74414062 -544.10607910]
[-174.24810791 -548.03320312]
[-159.38439941 -550.18438721]
[-144.36976624 -550.52819824]
[-129.42317200 -549.05969238]
[-114.76258087 -545.80017090]
[-100.60178375 -540.79724121]
[-87.14728546 -534.12390137]
[-74.59529114 -525.87738037]
[-63.12885666 -516.17797852]
[-52.91518402 -505.16717529]
[-44.10322571 -493.00549316]
[-36.82148743 -479.87026978]
[-31.17615128 -465.95309448]
[-27.24954796 -451.45693970]
[-25.09893608 -436.59313965]
[-24.75568199 -421.57849121]
[-26.22478867 -406.63195801]
[-29.48483086 -391.97149658]
[-34.48826981 -377.81088257]
[-41.16213989 -364.35662842]
[-49.40911865 -351.80493164]
[-59.10893631 -340.33886719]
[-70.12014771 -330.12561035]
[-82.28216553 -321.31408691]
[-75.00893402 -308.19540405]
[-62.07082748 -300.81607056]
[-62.14625931 -284.99505615]
[-54.87302780 -271.87634277]
[-47.59980011 -258.75765991]
[-40.32656860 -245.63896179]
[-25.88643837 -249.58497620]
[-10.91249180 -249.96041870]
[3.72496557 -246.73913574]
[17.17414665 -240.10411072]
[28.65134811 -230.43717957]
[37.48662186 -218.29690552]
[43.16287613 -204.38644409]
[45.34613419 -189.51274109]
[43.90519714 -174.53977966]
[38.91949463 -160.33828735]
[30.67474937 -147.73526001]
[19.64657784 -137.46563721]
[26.91980743 -124.34694672]
[34.19303513 -111.22825623]
[41.46626663 -98.10956573]
[48.73949432 -84.99086761]
[56.01272583 -71.87217712]
[55.83786392 -86.87115479]
[60.48005676 -101.13474274]
[69.44940186 -113.15767670]
[81.79933929 -121.67114258]
[96.22655487 -125.77668762]
[111.20850372 -125.04105377]
[125.16410828 -119.54187012]
[136.62060547 -109.85947418]
[144.36895752 -97.01568604]
[147.59146118 -82.36592102]
[145.94804382 -67.45622253]
[139.61213684 -53.86003876]
[129.25238037 -43.01220322]
[115.96207428 -36.05752182]
[101.14376068 -33.72993469]
[86.36126709 -36.27507401]
[73.17461395 -43.42435455]
[62.97531509 -54.42344666]
[66.73161316 -39.90138626]
[70.81127930 -25.46683502]
[75.21228027 -11.12698746]
[79.61328125 3.21285963]
[84.58093262 8.68499279]
[83.97133636 17.79905891]
[88.15834808 32.20284271]
[92.34535980 46.60662460]
[96.53237152 61.01040649]
[100.71938324 75.41418457]
[104.90639496 89.81797028]
[111.23725891 76.21943665]
[124.29568481 68.83855438]
[139.21121216 70.42822266]
[150.42071533 80.39552307]
[153.74333191 95.02290344]
[147.93978882 108.85471344]
[135.17468262 116.73202515]
[120.20907593 115.71680450]
[108.62414551 106.18671417]
[111.06987000 120.98598480]
[113.51559448 135.78524780]
[115.96132660 150.58453369]
[127.74092102 157.11566162]
[133.52377319 169.06425476]
[131.40040588 181.97058105]
[122.36709595 191.15910339]
[124.59220886 205.99314880]
[126.81732941 220.82717896]
[129.04244995 235.66122437]
[143.23860168 241.35476685]
[152.61695862 253.31065369]
[154.73762512 268.25619507]
[149.13021851 282.16348267]
[137.39355469 291.33499146]
[139.61866760 306.16903687]
[141.84378052 321.00308228]
[146.21157837 329.02554321]
[143.98988342 336.07437134]
[145.99391174 350.93991089]
[147.99792480 365.80541992]
[152.24578857 373.89205933]
[149.91940308 380.90701294]
[151.70185852 395.80072021]
[166.41320801 399.53448486]
[178.78005981 408.33367920]
[187.12991333 421.00820923]
[190.33351135 435.84402466]
[187.95761108 450.83468628]
[180.32351685 463.95281982]
[168.46369934 473.42428589]
[153.98207092 477.96817017]
[138.83717346 476.96994019]
[125.07721710 470.56463623]
[114.56313324 459.61846924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 199]
[5 198]
[6 196]
[7 195]
[8 194]
[9 192]
[10 191]
[11 190]
[16 185]
[17 184]
[18 183]
[19 182]
[22 178]
[23 177]
[24 176]
[25 175]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 159]
[33 158]
[34 157]
[38 156]
[39 155]
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[45 132]
[57 120]
[58 119]
[59 118]
[60 117]
[62 115]
[63 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
