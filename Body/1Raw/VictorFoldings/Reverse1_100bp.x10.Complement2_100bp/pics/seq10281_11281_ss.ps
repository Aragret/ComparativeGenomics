%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[103.76169586 632.96246338]
[92.32890320 623.23944092]
[81.71556854 612.62792969]
[71.99052429 601.19683838]
[63.21684265 589.02026367]
[55.45142365 576.17718506]
[48.74463654 562.75091553]
[43.13996887 548.82849121]
[38.67377472 534.50018311]
[35.37501907 519.85900879]
[33.26509857 504.99987793]
[32.35768890 490.01910400]
[32.65867996 475.01391602]
[34.16612244 460.08160400]
[36.87023544 445.31903076]
[40.75348282 430.82189941]
[45.79067993 416.68423462]
[51.94916153 402.99777222]
[59.18898010 389.85125732]
[67.46318817 377.32989502]
[76.71811676 365.51498413]
[86.89375305 354.48309326]
[97.92409515 344.30575562]
[109.73760986 335.04901123]
[122.25767517 326.77288818]
[135.40310669 319.53106689]
[149.08862305 313.37048340]
[144.05171204 299.24145508]
[139.01480103 285.11242676]
[133.97787476 270.98339844]
[128.83592224 256.89227295]
[123.58920288 242.83979797]
[118.34248352 228.78732300]
[113.09576416 214.73484802]
[107.53653717 200.80305481]
[101.66757965 186.99887085]
[95.79861450 173.19470215]
[94.95869446 188.17115784]
[91.06486511 202.65695190]
[84.28269196 216.03611755]
[74.90056610 227.73977661]
[63.31740952 237.27027893]
[50.02574921 244.22239685]
[35.59075546 248.30050659]
[20.62620926 249.33119202]
[5.76841021 247.27066040]
[-8.35088062 242.20651245]
[-21.13130379 234.35408020]
[-32.02942657 224.04724121]
[-40.58185959 211.72425842]
[-46.42494583 197.90910339]
[-49.31023788 183.18922424]
[-49.11504745 168.19049072]
[-45.84767532 153.55067444]
[-39.64705276 139.89225769]
[-30.77683449 127.79600525]
[-19.61418343 117.77626801]
[-6.63374329 110.25907135]
[7.61255074 105.56406403]
[22.51893997 103.89087677]
[37.45159531 105.31064606]
[51.77557755 109.76301575]
[64.88182068 117.05866241]
[76.21303558 126.88737488]
[85.28742218 138.83122253]
[91.71918488 152.38252258]
[91.94251251 137.38418579]
[92.16584015 122.38584137]
[92.38916779 107.38750458]
[92.05419159 92.39124298]
[91.16137695 77.41783905]
[90.26856232 62.44443512]
[89.37574005 47.47102737]
[88.48292542 32.49762344]
[87.47866821 17.53127861]
[75.78624725 7.23928976]
[74.86791229 -7.94660187]
[84.75180054 -19.03011322]
[83.63615417 -33.98856735]
[82.52050781 -48.94701767]
[71.80245972 -63.92049408]
[80.03321075 -79.41957855]
[78.69497681 -94.35976410]
[69.31583405 -103.21382904]
[68.50878906 -115.68508911]
[76.16221619 -125.05267334]
[75.04656219 -140.01112366]
[73.93091583 -154.96958923]
[72.81526947 -169.92803955]
[57.90610123 -172.05659485]
[43.80323792 -177.34085083]
[31.16629601 -185.53364563]
[20.58633041 -196.25177002]
[12.55818081 -208.99394226]
[7.45734215 -223.16418457]
[5.52238846 -238.09970093]
[6.84382057 -253.10197449]
[11.35983372 -267.46926880]
[18.85920525 -280.52966309]
[28.99117661 -291.67224121]
[41.28185654 -300.37588501]
[55.15638351 -306.23348999]
[69.96582794 -308.97106934]
[85.01752472 -308.46063232]
[99.60747528 -304.72598267]
[113.05327606 -297.94186401]
[124.72605896 -288.42553711]
[134.07984924 -276.62213135]
[140.67715454 -263.08367920]
[144.20942688 -248.44342041]
[144.51142883 -233.38610840]
[141.56906128 -218.61598206]
[135.51991272 -204.82388306]
[126.64694977 -192.65489197]
[115.36514282 -182.67816162]
[102.20218658 -175.36033630]
[87.77371979 -171.04368591]
[88.88937378 -156.08523560]
[90.00502014 -141.12677002]
[91.12066650 -126.16832733]
[101.76837921 -112.21865845]
[93.63516235 -95.69799805]
[94.97339630 -80.75781250]
[104.05177307 -72.76346588]
[105.28895569 -60.32750320]
[97.47895813 -50.06266785]
[98.59461212 -35.10421371]
[99.71025848 -20.14576149]
[111.12893677 -10.65106392]
[112.47345734 4.50304174]
[102.43711853 16.41563034]
[106.06940460 22.85211182]
[103.45633698 31.60480690]
[104.34915161 46.57821274]
[105.24196625 61.55162048]
[106.13478088 76.52502441]
[107.02759552 91.49842834]
[118.78466797 82.18331909]
[133.43162537 85.41850281]
[140.17129517 98.81913757]
[134.03543091 112.50676727]
[119.54716492 116.39138031]
[107.38750458 107.61083221]
[107.16417694 122.60916901]
[106.94084930 137.60751343]
[106.71752167 152.60585022]
[109.60279083 167.32572937]
[115.47175598 181.12991333]
[121.34071350 194.93409729]
[125.51237488 198.07167053]
[127.83145905 202.09349060]
[128.27137756 206.14584351]
[127.14823914 209.48812866]
[132.39495850 223.54060364]
[137.64167786 237.59307861]
[142.88839722 251.64553833]
[148.82182312 258.59048462]
[148.10690308 265.94650269]
[153.14382935 280.07553101]
[158.18074036 294.20455933]
[163.21765137 308.33358765]
[177.71401978 304.44747925]
[192.47607422 301.74044800]
[207.40809631 300.23007202]
[222.41322327 299.92611694]
[237.39414978 300.83056641]
[252.25372314 302.93756104]
[266.89556885 306.23342896]
[281.22473145 310.69680786]
[295.14825439 316.29873657]
[308.57586670 323.00286865]
[321.42047119 330.76574707]
[333.59878540 339.53704834]
[345.03176880 349.25982666]
[355.64535522 359.87106323]
[365.37063599 371.30194092]
[374.14459229 383.47833252]
[381.91030884 396.32122803]
[388.61737061 409.74737549]
[394.22235107 423.66967773]
[398.68887329 437.99786377]
[401.98794556 452.63897705]
[404.09820557 467.49807739]
[405.00592041 482.47882080]
[404.70526123 497.48400879]
[403.19815063 512.41638184]
[400.49435425 527.17901611]
[396.61145020 541.67620850]
[391.57455444 555.81396484]
[385.41638184 569.50054932]
[378.17684937 582.64727783]
[369.90292358 595.16876221]
[360.64825439 606.98394775]
[350.47286987 618.01605225]
[339.44274902 628.19360352]
[327.62942505 637.45062256]
[315.10952759 645.72698975]
[301.96426392 652.96911621]
[288.27890015 659.13000488]
[274.14212036 664.16967773]
[259.64569092 668.05548096]
[244.88356018 670.76214600]
[229.95150757 672.27221680]
[214.94638062 672.57580566]
[199.96546936 671.67102051]
[185.10594177 669.56372070]
[170.46417236 666.26751709]
[156.13511658 661.80383301]
[142.21170044 656.20159912]
[128.78424072 649.49719238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 161]
[28 160]
[29 159]
[30 158]
[31 156]
[32 155]
[33 154]
[34 153]
[35 149]
[36 148]
[37 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 131]
[78 128]
[79 127]
[80 126]
[82 123]
[83 122]
[86 120]
[87 119]
[88 118]
[89 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
