%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[33.40079117 577.28582764]
[18.05721855 576.60003662]
[5.12084246 568.32080078]
[-1.92851520 554.67523193]
[-1.19461334 539.33386230]
[7.12513208 526.42352295]
[20.79275131 519.41693115]
[21.46253586 504.43191528]
[22.13232231 489.44686890]
[22.80210686 474.46185303]
[23.47189140 459.47680664]
[24.14167786 444.49176025]
[24.81146240 429.50671387]
[16.39627838 441.92382812]
[3.70134187 449.91375732]
[-11.13402843 452.13000488]
[-25.60980988 448.19912720]
[-37.28658295 438.78356934]
[-44.19660187 425.46997070]
[-45.17541122 410.50195312]
[-40.05805969 396.40185547]
[-29.70691490 385.54580688]
[-15.86632538 379.76324463]
[-0.86867332 380.02862549]
[12.75867367 386.29721069]
[22.71926689 397.51266479]
[27.33474922 411.78665161]
[30.87442207 397.21026611]
[34.41409302 382.63388062]
[23.39021301 370.47036743]
[21.77246475 353.96749878]
[30.39554977 339.60980225]
[46.03093719 333.15759277]
[49.35319519 318.53012085]
[52.67545700 303.90267944]
[55.99771500 289.27520752]
[41.39005280 280.38317871]
[30.68944550 267.01177979]
[25.19986153 250.76350403]
[25.59948921 233.59289551]
[31.85699463 217.57162476]
[43.23326874 204.63844299]
[58.36869049 196.36459351]
[75.44559479 193.76295471]
[78.11138916 179.00173950]
[72.75914764 165.10200500]
[82.82584381 152.89659119]
[85.49163818 138.13537598]
[88.15743256 123.37415314]
[90.82322693 108.61293793]
[93.15871429 93.79586792]
[95.16272736 78.93033600]
[97.16674042 64.06481171]
[99.17075348 49.19928360]
[101.17476654 34.33375549]
[103.17877960 19.46822739]
[105.18280029 4.60269833]
[105.62940216 -10.39065170]
[104.51375580 -25.34910583]
[92.82133484 -35.64109421]
[91.90299225 -50.82698441]
[101.78688812 -61.91049576]
[100.67124176 -76.86894989]
[91.92896271 -90.05542755]
[98.69821930 -103.32292175]
[97.58257294 -118.28137207]
[96.46692657 -133.23982239]
[95.35127258 -148.19827271]
[86.60899353 -161.38475037]
[93.37825775 -174.65225220]
[91.48496246 -189.53228760]
[88.81916809 -204.29350281]
[86.15337372 -219.05471802]
[83.48757935 -233.81593323]
[80.82177734 -248.57714844]
[65.82284546 -247.78016663]
[50.84229660 -248.86938477]
[36.11639786 -251.82763672]
[21.87740135 -256.60824585]
[8.34987450 -263.13580322]
[-4.25283480 -271.30740356]
[-15.73196316 -280.99414062]
[-25.90646744 -292.04324341]
[-34.61588287 -304.28045654]
[-41.72284698 -317.51278687]
[-47.11527252 -331.53152466]
[-50.70811844 -346.11557007]
[-52.44471359 -361.03494263]
[-52.29767227 -376.05432129]
[-50.26931381 -390.93682861]
[-46.39162827 -405.44775391]
[-40.72577286 -419.35821533]
[-33.36110687 -432.44885254]
[-24.41377831 -444.51321411]
[-14.02490044 -455.36099243]
[-2.35832357 -464.82113647]
[10.40195560 -472.74441528]
[24.05468941 -479.00588989]
[38.38455200 -483.50680542]
[53.16554260 -486.17617798]
[68.16454315 -486.97189331]
[83.14500427 -485.88140869]
[97.87065125 -482.92193604]
[112.10924530 -478.14013672]
[125.63622284 -471.61141968]
[138.23825073 -463.43875122]
[149.71655273 -453.75106812]
[159.89013672 -442.70111084]
[168.59851074 -430.46316528]
[175.70436096 -417.23025513]
[181.09561157 -403.21105957]
[184.68722534 -388.62667847]
[186.42257690 -373.70718384]
[186.27426147 -358.68780518]
[184.24465942 -343.80548096]
[180.36575317 -329.29489136]
[174.69871521 -315.38488770]
[167.33294678 -302.29486084]
[158.38461304 -290.23126221]
[147.99481201 -279.38436890]
[136.32745361 -269.92520142]
[123.56649780 -262.00299072]
[109.91323853 -255.74266052]
[95.58300018 -251.24295044]
[98.24879456 -236.48173523]
[100.91458893 -221.72052002]
[103.58038330 -206.95928955]
[106.24617767 -192.19807434]
[114.72667694 -204.57067871]
[129.14179993 -208.71847534]
[142.90113831 -202.74516296]
[149.71412659 -189.38166809]
[146.46594238 -174.73757935]
[134.64161682 -165.50798035]
[119.64707184 -165.91253662]
[108.33670807 -175.76789856]
[116.99919128 -163.65135193]
[110.30973053 -149.31393433]
[111.42537689 -134.35546875]
[112.54102325 -119.39701843]
[113.65667725 -104.43856812]
[122.31915283 -92.32202148]
[115.62969208 -77.98459625]
[116.74534607 -63.02614594]
[128.16403198 -53.53144836]
[129.50854492 -38.37734222]
[119.47220612 -26.46475410]
[120.58786011 -11.50629997]
[127.22508240 -24.95796204]
[138.45401001 -34.90337753]
[152.60887146 -39.86720657]
[167.58990479 -39.11309052]
[181.17475891 -32.75289917]
[191.34817505 -21.73013306]
[196.60101318 -7.67994785]
[196.15405273 7.31339121]
[190.07356262 21.02571297]
[179.26158142 31.42287445]
[165.32197571 36.96252060]
[150.32263184 36.82287598]
[136.48858643 31.02465630]
[125.87206268 20.42799377]
[120.04832458 6.60671186]
[118.04431152 21.47224045]
[116.04029846 36.33776855]
[114.03628540 51.20329666]
[112.03227234 66.06882477]
[110.02825928 80.93435669]
[108.02424622 95.79988098]
[109.90418243 99.16710663]
[110.29077911 103.34662628]
[108.85451508 107.65292358]
[105.58444214 111.27873230]
[102.91864777 126.03994751]
[100.25285339 140.80116272]
[97.58705902 155.56237793]
[102.74862671 170.51794434]
[92.87261200 181.66754150]
[90.20681763 196.42875671]
[101.82373810 202.25503540]
[111.52505493 210.88246155]
[118.65324402 221.71696472]
[122.72764587 234.01521301]
[123.47679901 246.93560791]
[120.85655975 259.59591675]
[115.05260468 271.13342285]
[106.46731567 280.76382446]
[95.69189453 287.83444214]
[83.46562195 291.86856079]
[70.62517548 292.59747314]
[67.30291748 307.22494507]
[63.98065567 321.85238647]
[60.65839767 336.47985840]
[70.48472595 346.14599609]
[74.22206116 359.30087280]
[70.99707794 372.47921753]
[61.75603104 382.26428223]
[48.99047089 386.17355347]
[45.45079803 400.74993896]
[41.91112518 415.32632446]
[39.79650116 430.17651367]
[39.12671661 445.16156006]
[38.45693207 460.14657593]
[37.78714371 475.13162231]
[37.11735916 490.11666870]
[36.44757462 505.10171509]
[35.77779007 520.08673096]
[48.76581573 528.28472900]
[55.90057755 541.88586426]
[55.26286316 557.23150635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 207]
[8 206]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[27 200]
[28 199]
[29 198]
[33 193]
[34 192]
[35 191]
[36 190]
[44 179]
[45 178]
[47 176]
[48 175]
[49 174]
[50 173]
[51 169]
[52 168]
[53 167]
[54 166]
[55 165]
[56 164]
[57 163]
[58 148]
[59 147]
[62 144]
[63 143]
[65 141]
[66 140]
[67 139]
[68 138]
[70 136]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
