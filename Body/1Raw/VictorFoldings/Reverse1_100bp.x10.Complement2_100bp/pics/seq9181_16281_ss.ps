%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[34.17449951 688.60272217]
[33.77245331 703.65771484]
[30.14299393 718.27416992]
[23.45587349 731.76849365]
[14.02386189 743.50952148]
[2.28811312 752.94805908]
[-11.20247173 759.64270020]
[-25.81691170 763.28033447]
[-40.87166595 763.69073486]
[-55.66259384 760.85479736]
[-69.49790192 754.90515137]
[-81.73047638 746.12005615]
[-91.78819275 734.91040039]
[-99.20061493 721.80047607]
[-103.62107086 707.40344238]
[-104.84279633 692.39276123]
[-102.80864716 677.47039795]
[-97.61376953 663.33441162]
[-89.50113678 650.64581299]
[-78.85018921 639.99822998]
[-66.15908813 631.88958740]
[-52.02142715 626.69915771]
[-37.09844589 624.66967773]
[-22.08812141 625.89611816]
[-17.68712234 611.55627441]
[-13.28612423 597.21643066]
[-8.88512611 582.87658691]
[-4.48412848 568.53674316]
[-0.08313027 554.19689941]
[4.31786776 539.85705566]
[8.28996372 525.39251709]
[11.82963657 510.81616211]
[15.36930847 496.23977661]
[18.90898132 481.66342163]
[5.66696644 464.18029785]
[9.74764061 442.35018921]
[28.88115311 430.54080200]
[31.10626984 415.70675659]
[33.33138657 400.87271118]
[35.44601059 386.02249146]
[37.45002365 371.15698242]
[39.45403671 356.29144287]
[33.48647690 342.64456177]
[42.99812698 330.00180054]
[45.00214386 315.13629150]
[47.00615692 300.27075195]
[49.01016998 285.40524292]
[51.01418304 270.53970337]
[53.01819611 255.67417908]
[41.72321701 265.54449463]
[26.79454231 267.00555420]
[13.80020237 259.51242065]
[7.58676529 245.85983276]
[10.47168732 231.13987732]
[21.37896538 220.84272766]
[36.24045181 218.80897522]
[49.51318359 225.79714966]
[56.24693680 239.20199585]
[60.00323868 224.67993164]
[63.75954056 210.15788269]
[67.51583862 195.63581848]
[71.27214050 181.11375427]
[60.55332184 170.77101135]
[56.42317963 156.35581970]
[60.08719635 141.71199036]
[70.65848541 130.79666138]
[85.36994171 126.61091614]
[89.12624359 112.08885193]
[84.22846985 96.04553986]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[103.19554138 55.05816650]
[98.93328857 39.82189941]
[109.45543671 29.27990150]
[112.34070587 14.56000996]
[114.56582642 -0.27403343]
[116.79093933 -15.10807705]
[119.01605988 -29.94212151]
[121.24118042 -44.77616501]
[123.46629333 -59.61020660]
[124.58193970 -74.56866455]
[124.58193970 -89.56866455]
[124.58193970 -104.56866455]
[124.13533783 -119.56201172]
[123.24252319 -134.53541565]
[114.69754028 -147.85058594]
[121.66358185 -161.01582336]
[118.02893066 -169.39599609]
[120.87062073 -176.21849060]
[120.20083618 -191.20353699]
[119.53105164 -206.18856812]
[118.86126709 -221.17361450]
[118.19148254 -236.15864563]
[117.52169800 -251.14369202]
[102.88880920 -254.93446350]
[90.02424622 -262.87136841]
[80.07190704 -274.24862671]
[73.91675568 -288.05462646]
[72.10610199 -303.06173706]
[74.80094910 -317.93551636]
[81.76167297 -331.35339355]
[92.36932373 -342.12228394]
[105.68068695 -349.28463745]
[120.51212311 -352.20352173]
[135.54483032 -350.61944580]
[149.44209290 -344.67327881]
[160.96820068 -334.89367676]
[169.09825134 -322.15029907]
[173.10932922 -307.57626343]
[172.64476013 -292.46746826]
[167.74586487 -278.16738892]
[158.84825134 -265.94757080]
[146.74307251 -256.89462280]
[132.50674438 -251.81347656]
[133.17652893 -236.82844543]
[133.84631348 -221.84339905]
[134.51609802 -206.85836792]
[135.18588257 -191.87332153]
[135.85566711 -176.88829041]
[136.63697815 -161.90864563]
[145.11810303 -149.66447449]
[138.21592712 -135.42823792]
[139.10874939 -120.45482635]
[141.11344910 -118.49542236]
[142.46279907 -115.62386322]
[142.80549622 -112.08578491]
[141.88551331 -108.24935913]
[139.58193970 -104.56866455]
[139.58193970 -89.56866455]
[139.58193970 -74.56866455]
[148.43128967 -86.68018341]
[162.11056519 -92.83466339]
[177.04402161 -91.42333221]
[189.32809448 -82.81510925]
[195.75177002 -69.26016235]
[194.63589478 -54.30172348]
[186.27215576 -41.84989548]
[172.84683228 -35.15955353]
[157.86926270 -35.97953415]
[145.25454712 -44.09550095]
[138.30033875 -57.38508987]
[136.07522583 -42.55104828]
[133.85009766 -27.71700287]
[131.62498474 -12.88296032]
[129.39987183 1.95108378]
[127.17475128 16.78512764]
[139.84970093 8.76355743]
[154.51399231 11.91932011]
[162.76722717 24.44465256]
[159.88160706 39.16447449]
[147.51013184 47.64660263]
[132.73974609 45.03209305]
[124.03181458 32.81957245]
[128.54724121 47.01324081]
[117.77191162 58.59783936]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[116.14162445 98.04374695]
[113.30912781 109.34056854]
[103.64830017 115.84515381]
[99.89199829 130.36721802]
[110.72874451 141.16130066]
[114.68152618 155.83346558]
[110.78547668 170.41725159]
[100.18367767 181.02186584]
[85.79419708 184.87005615]
[82.03790283 199.39212036]
[78.28160095 213.91418457]
[74.52529907 228.43623352]
[70.76899719 242.95829773]
[67.88372803 257.67819214]
[65.87971497 272.54373169]
[63.87569809 287.40924072]
[61.87168503 302.27478027]
[59.86767197 317.14028931]
[57.86365509 332.00582886]
[63.68787766 346.71600342]
[54.31956482 358.29547119]
[52.31555176 373.16098022]
[50.31153870 388.02651978]
[52.26637650 396.94931030]
[48.16543198 403.09780884]
[45.94031143 417.93185425]
[43.71519470 432.76589966]
[50.62085342 437.31784058]
[55.86719894 443.66821289]
[59.00848770 451.24642944]
[59.78696060 459.37896729]
[58.15390015 467.34936523]
[54.27218246 474.46121216]
[48.50025558 480.09909058]
[41.35912323 483.78173828]
[33.48535538 485.20309448]
[29.94568443 499.77944946]
[26.40601158 514.35583496]
[22.86633873 528.93218994]
[24.23628998 533.05255127]
[24.22496986 536.99774170]
[23.05705643 540.35504150]
[21.06818581 542.82708740]
[18.65771484 544.25805664]
[14.25671673 558.59790039]
[9.85571861 572.93774414]
[5.45472097 587.27758789]
[1.05372274 601.61743164]
[-3.34727526 615.95727539]
[-7.74827337 630.29711914]
[5.36577415 637.70227051]
[16.58103752 647.75372314]
[25.37296104 659.98138428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 207]
[25 206]
[26 205]
[27 204]
[28 203]
[29 202]
[30 201]
[31 196]
[32 195]
[33 194]
[34 193]
[37 184]
[38 183]
[39 182]
[40 180]
[41 179]
[42 178]
[44 176]
[45 175]
[46 174]
[47 173]
[48 172]
[49 171]
[58 170]
[59 169]
[60 168]
[61 167]
[62 166]
[67 161]
[68 160]
[70 157]
[71 156]
[72 155]
[74 153]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 130]
[82 129]
[83 128]
[84 123]
[85 122]
[87 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
