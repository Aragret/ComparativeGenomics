%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[85.67552185 729.01544189]
[70.95792389 726.06457520]
[56.56964874 721.78759766]
[42.62992096 716.21990967]
[29.25424767 709.40765381]
[16.55347061 701.40728760]
[4.63283253 692.28515625]
[-6.40888453 682.11676025]
[-16.48018456 670.98645020]
[-25.49761200 658.98638916]
[-33.38644409 646.21606445]
[-40.08131027 632.78125000]
[-45.52673340 618.79333496]
[-49.67758942 604.36816406]
[-52.49948502 589.62524414]
[-53.96903229 574.68688965]
[-54.07405472 559.67675781]
[-52.81368637 544.71923828]
[-50.19836807 529.93835449]
[-46.24977112 515.45648193]
[-41.00061798 501.39370728]
[-34.49440002 487.86654663]
[-26.78503799 474.98706055]
[-17.93641281 462.86199951]
[-8.02184582 451.59182739]
[2.87650299 441.26995850]
[14.66832542 431.98190308]
[27.25590897 423.80459595]
[40.53494644 416.80587769]
[54.39540482 411.04367065]
[68.72241974 406.56573486]
[83.39728546 403.40921021]
[98.29838562 401.60025024]
[97.85178375 386.60687256]
[97.40517426 371.61352539]
[96.95857239 356.62017822]
[96.51196289 341.62683105]
[96.06536102 326.63348389]
[86.05114746 312.22229004]
[94.91394043 296.08126831]
[94.24415588 281.09622192]
[83.11322784 271.26577759]
[82.22050476 256.07833862]
[92.60707092 244.46986389]
[91.93728638 229.48483276]
[91.26750183 214.49978638]
[89.29218292 212.51074219]
[87.98573303 209.61941528]
[87.69577026 206.07662964]
[88.67276001 202.25433350]
[91.03087616 198.60833740]
[91.25420380 183.61000061]
[91.47753143 168.61166382]
[91.70085907 153.61332703]
[91.92418671 138.61499023]
[84.37723541 125.77392578]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[83.56640625 56.81786728]
[93.14710236 42.11490250]
[93.14710236 27.11490250]
[90.01769257 18.53325844]
[93.26042938 11.89198971]
[93.48375702 -3.10634756]
[93.70708466 -18.10468483]
[93.93041229 -33.10302353]
[94.15373993 -48.10136032]
[94.37706757 -63.09969711]
[85.96994781 -72.88146973]
[86.46472931 -85.36902618]
[95.05118561 -93.88955688]
[95.49778748 -108.88290405]
[95.94439697 -123.87625122]
[81.79967499 -127.40914917]
[68.70754242 -133.81021118]
[57.24206924 -142.79595947]
[47.90540314 -153.96961975]
[41.10579681 -166.83866882]
[37.13973999 -180.83654785]
[36.17903900 -195.34761047]
[38.26337433 -209.73416138]
[43.29866791 -223.36453247]
[51.06133652 -235.64074707]
[61.20819473 -246.02484131]
[73.29165649 -254.06237793]
[86.77944946 -259.40234375]
[101.07808685 -261.81250000]
[101.74787140 -276.79754639]
[102.41765594 -291.78259277]
[103.08744049 -306.76763916]
[103.75722504 -321.75265503]
[104.42700958 -336.73770142]
[101.68391418 -345.45053101]
[105.21996307 -351.94036865]
[106.11278534 -366.91378784]
[107.00559998 -381.88717651]
[92.91516113 -387.39306641]
[81.21704865 -396.98522949]
[73.05733490 -409.72390747]
[69.23542023 -424.36111450]
[70.12573242 -439.46286011]
[75.64105225 -453.54962158]
[85.24104309 -465.24130249]
[97.98519897 -473.39245605]
[112.62496948 -477.20458984]
[127.72611237 -476.30413818]
[141.80915833 -470.77938843]
[153.49440002 -461.17156982]
[161.63703918 -448.42193604]
[165.43933105 -433.77963257]
[164.52879333 -418.67907715]
[158.99459839 -404.59973145]
[149.37893677 -392.92092896]
[136.62387085 -384.78686523]
[121.97900391 -380.99435425]
[121.08618927 -366.02096558]
[120.19337463 -351.04754639]
[119.41204834 -336.06790161]
[118.74226379 -321.08288574]
[118.07247925 -306.09783936]
[117.40269470 -291.11279297]
[116.73291016 -276.12774658]
[116.06312561 -261.14273071]
[130.98472595 -257.12152100]
[144.64755249 -249.88500977]
[156.36836243 -239.79154968]
[165.56028748 -227.34246826]
[171.76213074 -213.15713501]
[174.66162109 -197.94216919]
[174.11100769 -182.45620728]
[170.13468933 -167.47210693]
[162.92810059 -153.73838806]
[152.84808350 -141.94178772]
[140.39532471 -132.67295837]
[126.18933105 -126.39691162]
[110.93774414 -123.42964935]
[110.49114227 -108.43629456]
[110.04453278 -93.44294739]
[119.18321991 -78.46125031]
[109.37541199 -62.87636948]
[109.15208435 -47.87803268]
[108.92875671 -32.87969589]
[108.70542908 -17.88135719]
[108.48210144 -2.88301969]
[108.25877380 12.11531734]
[108.14710236 27.11490250]
[108.14710236 42.11490250]
[116.47605896 50.88730240]
[116.59882355 63.38405228]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.84845734 126.22765350]
[106.92252350 138.83831787]
[106.69919586 153.83665466]
[106.47586823 168.83499146]
[106.25254059 183.83332825]
[106.02921295 198.83166504]
[106.25254059 213.83000183]
[106.92232513 228.81503296]
[107.59210968 243.80007935]
[118.97291565 254.43563843]
[119.43870544 269.64212036]
[109.22919464 280.42645264]
[109.89897919 295.41149902]
[118.87341309 304.67553711]
[119.12278748 317.17037964]
[111.05870819 326.18688965]
[111.50531006 341.18023682]
[111.95191956 356.17358398]
[112.39852905 371.16693115]
[112.84513092 386.16027832]
[113.29174042 401.15362549]
[128.27409363 402.07247925]
[143.11082458 404.34994507]
[157.67897034 407.96716309]
[171.85781860 412.89416504]
[185.52989197 419.09011841]
[198.58187866 426.50366211]
[210.90562439 435.07339478]
[222.39901733 444.72830200]
[232.96682739 455.38836670]
[242.52145386 466.96524048]
[250.98374939 479.36303711]
[258.28359985 492.47894287]
[264.36047363 506.20437622]
[269.16403198 520.42547607]
[272.65447998 535.02453613]
[274.80291748 549.88049316]
[275.59149170 564.87030029]
[275.01370239 579.86968994]
[273.07431030 594.75433350]
[269.78942871 609.40100098]
[265.18624878 623.68829346]
[259.30288696 637.49774170]
[252.18815613 650.71502686]
[243.90097046 663.23052979]
[234.51000977 674.94055176]
[224.09310913 685.74810791]
[212.73655701 695.56359863]
[200.53448486 704.30572510]
[187.58799744 711.90203857]
[174.00437927 718.28955078]
[159.89617920 723.41540527]
[145.38032532 727.23699951]
[130.57707214 729.72283936]
[115.60912323 730.85217285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[40 168]
[41 167]
[44 164]
[45 163]
[46 162]
[51 161]
[52 160]
[53 159]
[54 158]
[55 157]
[57 155]
[59 153]
[60 152]
[62 149]
[63 148]
[65 147]
[66 146]
[67 145]
[68 144]
[69 143]
[70 142]
[73 140]
[74 139]
[75 138]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
