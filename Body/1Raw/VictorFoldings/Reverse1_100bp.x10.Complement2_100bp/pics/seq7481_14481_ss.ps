%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[-7.71169996 818.40606689]
[-22.38342285 821.54748535]
[-37.21298218 823.83050537]
[-52.15019989 825.24743652]
[-67.14453125 825.79339600]
[-82.14524078 825.46661377]
[-97.10157013 824.26818848]
[-111.96291351 822.20208740]
[-126.67897797 819.27545166]
[-141.19998169 815.49804688]
[-155.47677612 810.88275146]
[-169.46105957 805.44506836]
[-183.10549927 799.20355225]
[-196.36395264 792.17919922]
[-209.19154358 784.39581299]
[-221.54487610 775.87976074]
[-233.38212585 766.65979004]
[-244.66326904 756.76715088]
[-255.35011292 746.23535156]
[-265.40649414 735.09991455]
[-274.79840088 723.39868164]
[-283.49404907 711.17108154]
[-291.46401978 698.45855713]
[-298.68133545 685.30413818]
[-305.12158203 671.75238037]
[-310.76293945 657.84899902]
[-315.58636475 643.64117432]
[-319.57550049 629.17694092]
[-322.71688843 614.50518799]
[-324.99984741 599.67559814]
[-326.41668701 584.73840332]
[-326.96261597 569.74401855]
[-326.63574219 554.74334717]
[-325.43725586 539.78698730]
[-323.37112427 524.92565918]
[-320.44439697 510.20962524]
[-316.66693115 495.68865967]
[-312.05154419 481.41186523]
[-306.61386108 467.42761230]
[-300.37225342 453.78317261]
[-293.34783936 440.52474976]
[-285.56442261 427.69720459]
[-277.04827881 415.34390259]
[-267.82827759 403.50668335]
[-257.93560791 392.22558594]
[-247.40374756 381.53878784]
[-236.26831055 371.48245239]
[-224.56698608 362.09060669]
[-212.33937073 353.39498901]
[-199.62683105 345.42507935]
[-186.47239685 338.20782471]
[-172.92056274 331.76763916]
[-159.01719666 326.12634277]
[-144.80932617 321.30297852]
[-130.34506226 317.31387329]
[-115.67330933 314.17257690]
[-100.84372711 311.88967896]
[-85.90650177 310.47290039]
[-70.91216278 309.92703247]
[-55.91145706 310.25393677]
[-40.95513916 311.45251465]
[-26.09381485 313.51870728]
[-11.37777138 316.44549561]
[3.14319539 320.22302246]
[7.75720453 305.95028687]
[12.37121391 291.67755127]
[16.98522377 277.40481567]
[21.59923172 263.13208008]
[26.21324158 248.85934448]
[30.82725143 234.58660889]
[17.95792007 242.29248047]
[3.00723457 241.07716370]
[-8.44857121 231.39395142]
[-12.13676357 216.85444641]
[-6.68173933 202.88151550]
[5.88191366 194.68672180]
[20.86826324 195.32652283]
[32.68777084 204.56228638]
[36.93202591 218.95046997]
[43.20938492 205.32714844]
[49.48674774 191.70382690]
[55.76410675 178.08052063]
[62.04146957 164.45719910]
[68.31883240 150.83387756]
[74.59619141 137.21057129]
[80.87355042 123.58724976]
[87.15090942 109.96393585]
[85.18231964 93.30557251]
[98.98404694 83.77203369]
[105.05788422 70.05676270]
[111.13172150 56.34149933]
[117.20555115 42.62623215]
[123.27938843 28.91096687]
[126.60164642 14.28350639]
[127.04824829 -0.70984375]
[116.49000549 -12.16240406]
[117.15650940 -27.36143112]
[128.13984680 -37.35652924]
[128.58645630 -52.34988022]
[129.03305054 -67.34323120]
[115.46108246 -74.32637787]
[106.26988983 -86.51180267]
[103.28438568 -101.48008728]
[107.09735107 -116.25926971]
[116.95172119 -127.91491699]
[130.89089966 -134.13281250]
[146.14724731 -133.67835999]
[159.69161987 -126.64183044]
[168.83474731 -114.42029572]
[171.76129150 -99.44037628]
[167.89015198 -84.67633057]
[157.98995972 -73.05957031]
[144.02641296 -66.89662170]
[143.57980347 -51.90327454]
[143.13319397 -36.90992355]
[153.50213623 -26.27880669]
[153.26280212 -11.06705570]
[142.04159546 -0.26323786]
[141.59500122 14.73011208]
[148.62184143 1.47780943]
[158.38662720 -9.90852833]
[170.41294861 -18.87333679]
[184.11398315 -24.97920418]
[198.82124329 -27.92820930]
[213.81710815 -27.57646370]
[228.36993408 -23.94113350]
[241.76960754 -17.19959068]
[253.36238098 -7.68077135]
[262.58258057 4.15087986]
[268.98031616 17.71807098]
[272.24349976 32.35882950]
[272.21282959 47.35879517]
[268.88986206 61.98609543]
[262.43670654 75.52702332]
[253.16822815 87.32089233]
[241.53666687 96.79225159]
[228.10954285 103.47897339]
[213.54199219 107.05479431]
[198.54479980 107.34525299]
[183.84971619 104.33615875]
[170.17375183 98.17434692]
[158.18418884 89.16046143]
[148.46600342 77.73430634]
[141.49337769 64.45339966]
[137.60653687 49.96573257]
[136.99465942 34.98480225]
[130.92082214 48.70006561]
[124.84698486 62.41533279]
[118.77314758 76.13059998]
[112.69931793 89.84587097]
[116.23233795 100.94357300]
[111.43725586 111.55716705]
[100.77422333 116.24129486]
[94.49686432 129.86460876]
[88.21950531 143.48793030]
[81.94214630 157.11123657]
[75.66478729 170.73455811]
[69.38742065 184.35787964]
[63.11006165 197.98118591]
[56.83270264 211.60450745]
[50.55533981 225.22782898]
[45.09998322 239.20062256]
[40.48597336 253.47335815]
[35.87196732 267.74609375]
[31.25795746 282.01882935]
[26.64394760 296.29156494]
[22.02993774 310.56430054]
[17.41592789 324.83703613]
[31.40025711 330.27453613]
[45.04476166 336.51599121]
[58.30327225 343.54022217]
[71.13092804 351.32348633]
[83.48432159 359.83947754]
[95.32165527 369.05932617]
[106.60287476 378.95184326]
[117.28980255 389.48358154]
[127.34628296 400.61889648]
[136.73829651 412.32009888]
[145.43403625 424.54760742]
[153.40411377 437.26007080]
[160.62153625 450.41439819]
[167.06187439 463.96615601]
[172.70336914 477.86944580]
[177.52690125 492.07723999]
[181.51617432 506.54147339]
[184.65765381 521.21319580]
[186.94075012 536.04272461]
[188.35771179 550.97998047]
[188.90376282 565.97430420]
[188.57702637 580.97497559]
[187.37864685 595.93133545]
[185.31265259 610.79266357]
[182.38603210 625.50872803]
[178.60870361 640.02978516]
[173.99343872 654.30657959]
[168.55586243 668.29089355]
[162.31436157 681.93536377]
[155.29006958 695.19384766]
[147.50674438 708.02148438]
[138.99072266 720.37481689]
[129.77082825 732.21209717]
[119.87824249 743.49328613]
[109.34645844 754.18017578]
[98.21110535 764.23663330]
[86.50985718 773.62860107]
[74.28231049 782.32427979]
[61.56983948 790.29431152]
[48.41545868 797.51165771]
[34.86368179 803.95196533]
[20.96036148 809.59338379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 163]
[70 162]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
[94 119]
[95 118]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
