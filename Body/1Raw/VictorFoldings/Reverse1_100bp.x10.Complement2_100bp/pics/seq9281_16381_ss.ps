%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[37.22600937 737.15270996]
[22.63564682 740.79852295]
[7.63382912 741.85522461]
[-7.32355070 740.29064941]
[-21.78195572 736.15234375]
[-35.30201340 729.56604004]
[-47.47285843 720.73193359]
[-57.92464066 709.91845703]
[-66.33973694 697.45422363]
[-72.46242523 683.71801758]
[-76.10663605 669.12725830]
[-77.16163635 654.12530518]
[-75.59535980 639.16809082]
[-71.45540619 624.71014404]
[-64.86758423 611.19085693]
[-56.03209305 599.02099609]
[-45.21742249 588.57043457]
[-32.75222778 580.15673828]
[-19.01531219 574.03564453]
[-4.42411995 570.39306641]
[10.57793617 569.33978271]
[12.13845921 554.42114258]
[13.69898224 539.50256348]
[15.25950527 524.58398438]
[16.82002831 509.66534424]
[7.27051258 498.29248047]
[8.64058304 483.14065552]
[20.63425255 473.20135498]
[22.19477463 458.28274536]
[23.75529861 443.36416626]
[12.15826702 452.87777710]
[-2.84167719 452.83694458]
[-14.38676262 443.26037598]
[-17.19873047 428.52630615]
[-9.99198914 415.37097168]
[3.93863845 409.80880737]
[18.22425652 414.38275146]
[26.33408737 427.00350952]
[29.43819809 412.32818604]
[32.54230881 397.65289307]
[20.18298721 389.27575684]
[11.95022964 376.77105713]
[9.12458992 362.02725220]
[12.16723442 347.28512573]
[20.64500999 334.79748535]
[33.29180145 326.48474121]
[48.19754028 323.63964844]
[51.30165100 308.96435547]
[54.40576172 294.28903198]
[57.50987244 279.61373901]
[60.61397934 264.93844604]
[63.71809006 250.26313782]
[58.78206635 236.21020508]
[69.20769501 224.30992126]
[72.31180573 209.63461304]
[57.69778824 200.25573730]
[47.78613281 185.95474243]
[44.11919022 168.90948486]
[47.28581619 151.72834778]
[56.82701111 137.05122375]
[71.30220795 127.14380646]
[88.50675201 123.54788208]
[90.95247650 108.74861145]
[93.06710052 93.89841461]
[94.84957123 79.00469208]
[96.63203430 64.11097717]
[85.56987000 50.55930710]
[87.68955994 33.53515244]
[101.19477844 23.51278496]
[102.75530243 8.59418011]
[104.31582642 -6.32442522]
[94.63861847 -18.53055191]
[96.43373108 -33.63790894]
[108.13005066 -42.78841782]
[109.69056702 -57.70702362]
[111.25109100 -72.62562561]
[112.81161499 -87.54423523]
[110.47270966 -93.72816467]
[111.45973969 -99.32484436]
[114.64715576 -102.88143921]
[116.65116882 -117.74697113]
[114.49742126 -123.99780273]
[115.65064240 -129.56260681]
[118.94255066 -133.02272034]
[121.38827515 -147.82199097]
[123.83399963 -162.62126160]
[118.45034027 -177.49832153]
[128.15925598 -188.79371643]
[130.60499573 -203.59298706]
[133.05072021 -218.39227295]
[127.66705322 -233.26931763]
[137.37597656 -244.56472778]
[139.82170105 -259.36398315]
[142.26742554 -274.16326904]
[144.71316528 -288.96252441]
[147.15888977 -303.76181030]
[133.10385132 -309.15075684]
[120.42148590 -317.25894165]
[109.63114166 -327.75433350]
[101.17467499 -340.20715332]
[95.39836121 -354.10748291]
[92.53874969 -368.88610840]
[92.71293640 -383.93783569]
[95.91378021 -398.64633179]
[102.01021576 -412.40924072]
[110.75260162 -424.66305542]
[121.78293610 -434.90594482]
[134.64953613 -442.71847534]
[148.82551575 -447.78070068]
[163.73039246 -449.88537598]
[178.75379944 -448.94631958]
[193.28056335 -445.00192261]
[206.71580505 -438.21377563]
[218.50936890 -428.85980225]
[228.17829895 -417.32302856]
[235.32667542 -404.07595825]
[239.66177368 -389.66094971]
[241.00607300 -374.66836548]
[239.30453491 -359.71209717]
[234.62681580 -345.40463257]
[227.16447449 -332.33181763]
[217.22308350 -321.02899170]
[205.20976257 -311.95901489]
[191.61640930 -305.49325562]
[176.99969482 -301.89651489]
[161.95816040 -301.31607056]
[159.51243591 -286.51681519]
[157.06669617 -271.71752930]
[154.62097168 -256.91827393]
[152.17524719 -242.11898804]
[157.73384094 -228.30047607]
[147.84999084 -215.94653320]
[145.40426636 -201.14726257]
[142.95852661 -186.34799194]
[148.51713562 -172.52947998]
[138.63327026 -160.17553711]
[136.18754578 -145.37626648]
[133.74182129 -130.57699585]
[131.51670837 -115.74295807]
[129.51268005 -100.87742615]
[127.73022461 -85.98371124]
[126.16970062 -71.06510162]
[124.60917664 -56.14649963]
[123.04865265 -41.22789383]
[132.59817505 -29.85501862]
[131.22810364 -14.70320129]
[119.23442841 -4.76390219]
[117.67390442 10.15470219]
[116.11338043 25.07330704]
[125.54797363 33.84929657]
[128.24552917 46.64794159]
[123.00196838 58.84284210]
[111.52574921 65.89344025]
[109.74328613 80.78716278]
[107.96082306 95.68087769]
[109.89068604 99.01973724]
[110.33946228 103.19304657]
[108.96747589 107.52024841]
[105.75174713 111.19433594]
[103.30602264 125.99360657]
[114.61774445 131.86564636]
[123.81063080 140.66740417]
[130.15075684 151.68228149]
[133.13589478 164.01756287]
[132.53524780 176.67677307]
[128.40725708 188.64016724]
[121.09412384 198.94688416]
[111.19341278 206.77210999]
[99.50927734 211.49310303]
[86.98711395 212.73872375]
[83.88300323 227.41403198]
[88.59700012 242.51663208]
[78.39339447 253.36724854]
[75.28928375 268.04254150]
[72.18517303 282.71783447]
[69.08106232 297.39315796]
[65.97695160 312.06845093]
[62.87284470 326.74374390]
[75.34987640 335.38085938]
[83.54747009 348.10256958]
[86.24261475 362.95349121]
[83.05524445 377.66500854]
[74.50151825 390.00189209]
[61.91045761 398.10192871]
[47.21760941 400.75701904]
[44.11349869 415.43231201]
[41.00939178 430.10760498]
[38.67390442 444.92468262]
[37.11338043 459.84329224]
[35.55285645 474.76190186]
[45.23006058 486.96801758]
[43.43494415 502.07537842]
[31.73863220 511.22589111]
[30.17811012 526.14447021]
[28.61758614 541.06311035]
[27.05706406 555.98168945]
[25.49654007 570.90032959]
[39.95588303 575.03533936]
[53.47743225 581.61853027]
[65.65028381 590.44989014]
[76.10451508 601.26104736]
[84.52243805 613.72332764]
[90.64823914 627.45819092]
[94.29576874 642.04815674]
[95.35417175 657.04986572]
[93.79129028 672.00738525]
[89.65460968 686.46624756]
[83.06985474 699.98706055]
[74.23712158 712.15893555]
[63.42482376 722.61193848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[28 190]
[29 189]
[30 188]
[38 187]
[39 186]
[40 185]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[54 171]
[55 170]
[62 160]
[63 159]
[64 155]
[65 154]
[66 153]
[69 149]
[70 148]
[71 147]
[74 144]
[75 143]
[76 142]
[77 141]
[80 140]
[81 139]
[84 138]
[85 137]
[86 136]
[88 134]
[89 133]
[90 132]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
