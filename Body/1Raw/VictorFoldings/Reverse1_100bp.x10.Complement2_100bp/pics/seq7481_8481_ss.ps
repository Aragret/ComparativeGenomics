%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUUUCGGGUAUUUUUAUUUUUUAAUAUUGUUUGGGACUCUUGGUUUUACUUGCUUUUAGACAAGCGAAGUAAGUAACGGGGGUGUUAGGAUCCGGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[81.86556244 616.37286377]
[68.08538055 622.51849365]
[53.18398666 624.88720703]
[38.17737579 623.31750488]
[24.08872604 617.91638184]
[11.87862492 609.05206299]
[2.37957740 597.32897949]
[-3.76075554 583.54644775]
[-6.12371588 568.64410400]
[-4.54819298 553.63812256]
[0.85839099 539.55157471]
[9.72740650 527.34490967]
[21.45414925 517.85034180]
[35.23907089 511.71536255]
[50.14229202 509.35815430]
[51.70281601 494.43954468]
[53.26333618 479.52093506]
[54.82386017 464.60232544]
[56.38438416 449.68371582]
[50.01314926 436.22055054]
[59.14416122 423.30023193]
[60.70468521 408.38162231]
[62.26520920 393.46301270]
[63.82573318 378.54440308]
[52.25202560 372.64584351]
[43.34977722 363.14193726]
[38.19442749 351.14901733]
[37.41953278 338.08602905]
[41.13899612 325.50653076]
[48.93091202 314.91387939]
[59.88533020 307.58181763]
[72.71047211 304.40103149]
[74.71448517 289.53549194]
[76.71849823 274.66998291]
[78.72251129 259.80444336]
[80.72652435 244.93891907]
[74.75896454 231.29203796]
[84.27061462 218.64929199]
[77.18832397 208.84277344]
[78.73624420 196.44165039]
[88.62576294 188.16154480]
[90.85087585 173.32749939]
[93.07599640 158.49345398]
[95.30110931 143.65942383]
[97.52622986 128.82537842]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[84.84857178 76.19422913]
[80.44757843 61.85438538]
[76.04657745 47.51453781]
[71.64557648 33.17469025]
[67.13794708 18.86800194]
[62.52394104 4.59526920]
[50.91683960 -6.15581083]
[54.36408234 -20.64600754]
[49.75007248 -34.91873932]
[45.13606262 -49.19147491]
[40.52205658 -63.46420670]
[36.64695740 -66.96144867]
[34.69592667 -71.17414093]
[34.61928940 -75.24957275]
[36.03614044 -78.47833252]
[32.06404495 -92.94285583]
[28.09194946 -107.40737915]
[24.11985207 -121.87190247]
[20.14775658 -136.33642578]
[7.76099730 -137.36027527]
[-3.69180059 -142.12542725]
[-13.11187553 -150.15846252]
[-19.60047150 -160.67326355]
[-22.54458046 -172.64788818]
[-21.67482948 -184.92393494]
[-17.09005356 -196.31851196]
[-9.24632549 -205.73832703]
[1.08837152 -212.28450012]
[-2.23388815 -226.91195679]
[-5.55614758 -241.53941345]
[-8.87840748 -256.16687012]
[-12.20066643 -270.79434204]
[-16.76902771 -256.50692749]
[-26.39840126 -245.00582886]
[-39.66032791 -237.99717712]
[-54.58747864 -236.52064514]
[-68.96549988 -240.79527283]
[-80.66149902 -250.18695068]
[-87.94044495 -263.30249023]
[-89.72254181 -278.19622803]
[-85.74343872 -292.65884399]
[-76.59339905 -304.54483032]
[-63.62978745 -312.09100342]
[-48.77566910 -314.17791748]
[-34.23457336 -310.49600220]
[-22.16357803 -301.59146118]
[-14.35400963 -288.78698730]
[-14.57733727 -303.78530884]
[-14.80066490 -318.78366089]
[-15.02399254 -333.78201294]
[-29.04351425 -339.72952271]
[-39.42716599 -350.86950684]
[-44.37591553 -365.27194214]
[-43.03236389 -380.44146729]
[-35.62928772 -393.74990845]
[-23.44931602 -402.89147949]
[-8.60270309 -406.28231812]
[6.33828640 -403.33502197]
[18.78503609 -394.56015015]
[26.58107185 -381.47802734]
[28.37568092 -366.35522461]
[23.85793877 -351.81182861]
[13.81057072 -340.36761475]
[-0.02565549 -334.00534058]
[0.19767223 -319.00698853]
[0.42099994 -304.00863647]
[0.64432764 -289.01031494]
[2.42679358 -274.11660767]
[5.74905300 -259.48913574]
[9.07131290 -244.86167908]
[12.39357185 -230.23422241]
[15.71583176 -215.60675049]
[33.09807587 -212.29414368]
[47.32157898 -201.67875671]
[55.49151230 -185.86325073]
[55.91983032 -168.01431274]
[48.47383881 -151.72872925]
[34.61228180 -140.30851746]
[38.58437729 -125.84400177]
[42.55647278 -111.37947845]
[46.52856827 -96.91495514]
[50.50066376 -82.45043182]
[54.79478836 -68.07821655]
[59.40879822 -53.80548096]
[64.02280426 -39.53274918]
[68.63681793 -25.26001549]
[79.91389465 -15.52981663]
[76.79667664 -0.01873996]
[81.41068268 14.25399303]
[86.45925903 19.65155792]
[85.98542786 28.77369118]
[90.38642120 43.11353683]
[94.78742218 57.45338440]
[99.18842316 71.79323578]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[113.17486572 94.66314697]
[118.40274811 80.60366058]
[126.23862457 67.81307983]
[136.38955688 56.76958847]
[148.47602844 47.88606644]
[162.04620361 41.49462128]
[176.59272766 37.83420181]
[191.57177734 37.04166412]
[206.42333984 39.14662933]
[220.59219360 44.07040405]
[233.54862976 51.62891006]
[244.80824280 61.53956604]
[253.95008850 73.43185425]
[260.63241577 86.86117554]
[264.60534668 101.32546997]
[265.72042847 116.28396606]
[263.93588257 131.17742920]
[259.31851196 145.44908142]
[252.04089355 158.56533813]
[242.37510681 170.03584290]
[230.68252563 179.43177795]
[217.40028381 186.40185547]
[203.02494812 190.68550110]
[188.09393311 192.12257385]
[173.16548157 190.65931702]
[158.79766846 186.35047913]
[145.52767944 179.35711670]
[133.85159302 169.94068909]
[124.20593262 158.45324707]
[116.95132446 145.32424927]
[112.36027527 131.05049133]
[110.13515472 145.88453674]
[107.91004181 160.71858215]
[105.68492126 175.55262756]
[103.45980835 190.38667297]
[110.59527588 207.36213684]
[99.13613892 220.65330505]
[104.96036530 235.36346436]
[95.59204865 246.94293213]
[93.58803558 261.80847168]
[91.58402252 276.67398071]
[89.58000946 291.53952026]
[87.57599640 306.40505981]
[102.08842468 315.58541870]
[111.09896851 330.13882446]
[112.83597565 347.11181641]
[106.99811554 363.08468628]
[94.80534363 374.86050415]
[78.74433899 380.10494995]
[77.18381500 395.02352905]
[75.62329102 409.94213867]
[74.06276703 424.86074829]
[80.32238007 439.39099121]
[71.30298615 451.24423218]
[69.74246216 466.16284180]
[68.18194580 481.08145142]
[66.62142181 496.00006104]
[65.06089783 510.91867065]
[79.15370941 516.30889893]
[91.37065887 525.16381836]
[100.87875366 536.87951660]
[107.02972412 550.65734863]
[109.40419769 565.55780029]
[107.84026337 580.56506348]
[102.44455719 594.65576172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[21 197]
[22 196]
[23 195]
[24 194]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[38 182]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 145]
[48 143]
[49 142]
[50 141]
[51 140]
[52 139]
[53 137]
[54 136]
[56 134]
[57 133]
[58 132]
[59 131]
[63 130]
[64 129]
[65 128]
[66 127]
[67 126]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
