%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[192.88215637 228.01533508]
[182.55548096 217.13600159]
[172.22880554 206.25666809]
[161.90214539 195.37733459]
[151.57546997 184.49800110]
[141.24880981 173.61866760]
[130.92213440 162.73933411]
[134.51190186 177.30345154]
[132.67041016 192.18998718]
[125.63992310 205.44035339]
[114.34542847 215.31124878]
[100.27291870 220.50396729]
[85.27386475 220.33534241]
[71.32165527 214.82754517]
[60.25194550 204.70521545]
[53.52114105 191.30012512]
[52.01479721 176.37596130]
[55.93109894 161.89622498]
[64.75479126 149.76600647]
[77.32495880 141.58120728]
[91.98779297 138.41871643]
[106.81413269 140.69458008]
[119.85514832 148.11093140]
[112.19454956 135.21459961]
[104.53395081 122.31827545]
[86.89513397 118.62590790]
[77.46195984 103.27088165]
[82.14103699 85.86778259]
[74.09986115 73.20526123]
[66.05869293 60.54273605]
[58.01751709 47.88021088]
[41.12338638 47.05294037]
[28.17975807 36.42449570]
[24.16200256 20.33663177]
[30.46133995 5.17761230]
[22.23253250 -7.36378765]
[14.00372410 -19.90518761]
[5.77491665 -32.44658661]
[-2.45389128 -44.98798752]
[-10.68269920 -57.52938843]
[-18.91150665 -70.07078552]
[-17.07644653 -55.18346024]
[-18.33388329 -40.23625946]
[-22.63034630 -25.86474419]
[-29.78315163 -12.68000507]
[-39.48815918 -1.24265945]
[-51.33270264 7.96096945]
[-64.81314850 14.53953838]
[-79.35630035 18.21332359]
[-94.34378052 18.82611465]
[-109.13830566 16.35185432]
[-123.11080933 10.89575005]
[-135.66717529 2.68979788]
[-146.27349854 -7.91708136]
[-154.47880554 -20.47387695]
[-159.93417358 -34.44666672]
[-162.40765381 -49.24132538]
[-161.79408264 -64.22876740]
[-158.11953735 -78.77172852]
[-151.54026794 -92.25183105]
[-142.33601379 -104.09589386]
[-130.89816284 -113.80030060]
[-117.71305084 -120.95241547]
[-103.34130859 -125.24813080]
[-88.39404297 -126.50478363]
[-73.50681305 -124.66894531]
[-59.31262589 -119.81867981]
[-46.41503143 -112.16020966]
[-35.36244202 -102.01918793]
[-26.62473488 -89.82666779]
[-29.07046127 -104.62593842]
[-31.51618958 -119.42520905]
[-33.96191788 -134.22448730]
[-36.40764618 -149.02375793]
[-51.41010666 -148.34371948]
[-66.38769531 -149.44288635]
[-81.13014984 -152.30583191]
[-95.43050385 -156.89234924]
[-109.08801270 -163.13806152]
[-121.91093445 -170.95529175]
[-133.71925354 -180.23428345]
[-144.34721375 -190.84480286]
[-153.64561462 -202.63784790]
[-161.48390198 -215.44790649]
[-167.75205994 -229.09512329]
[-172.36207581 -243.38792419]
[-175.24925232 -258.12564087]
[-176.37303162 -273.10140991]
[-175.71766663 -288.10498047]
[-173.29232788 -302.92572021]
[-169.13108826 -317.35556030]
[-163.29235840 -331.19195557]
[-155.85810852 -344.24063110]
[-146.93267822 -356.31842041]
[-136.64140320 -367.25579834]
[-125.12873077 -376.89916992]
[-112.55628967 -385.11318970]
[-99.10057831 -391.78253174]
[-84.95049286 -396.81356812]
[-70.30467987 -400.13571167]
[-55.36874008 -401.70227051]
[-40.35235596 -401.49127197]
[-25.46632767 -399.50567627]
[-10.91963768 -395.77334595]
[3.08350444 -390.34671021]
[16.34651566 -383.30194092]
[28.68320274 -374.73791504]
[39.92037964 -364.77487183]
[49.90029526 -353.55267334]
[58.48284149 -341.22888184]
[65.54753876 -327.97647095]
[70.99520874 -313.98150635]
[74.74937439 -299.44042969]
[76.75733185 -284.55740356]
[76.99089050 -269.54135132]
[75.44677734 -254.60307312]
[72.14665985 -239.95228577]
[67.13687897 -225.79466248]
[60.48775101 -212.32893372]
[52.29263306 -199.74417114]
[42.66656113 -188.21702576]
[31.74467468 -177.90931702]
[19.68029976 -168.96575928]
[6.64280081 -161.51190186]
[-7.18479633 -155.65238953]
[-21.60837364 -151.46948242]
[-19.16264534 -136.67021179]
[-16.71691895 -121.87093353]
[-14.27119160 -107.07166290]
[-11.82546425 -92.27239227]
[-6.37010670 -78.29959869]
[1.85870111 -65.75819397]
[10.08750916 -53.21679688]
[18.31631660 -40.67539597]
[26.54512405 -28.13399506]
[34.77393341 -15.59259605]
[43.00273895 -3.05119538]
[56.33979034 -3.65549946]
[68.33002472 2.45829582]
[75.79296875 13.78852367]
[76.68997955 27.43454361]
[70.68003845 39.83903885]
[78.72121429 52.50156403]
[86.76239014 65.16408539]
[94.80355835 77.82661438]
[106.07107544 78.04996490]
[115.85193634 83.64830017]
[121.75108337 93.25074005]
[122.32395172 104.50589752]
[117.43027496 114.65767670]
[125.09087372 127.55400085]
[132.75148010 140.45033264]
[141.80146790 152.41267395]
[152.12814331 163.29200745]
[162.45480347 174.17134094]
[172.78147888 185.05067444]
[183.10815430 195.93000793]
[193.43481445 206.80934143]
[203.76148987 217.68867493]
[215.77929688 208.68374634]
[228.76129150 201.13493347]
[242.53187561 195.14431763]
[256.90481567 190.79290771]
[271.68576050 188.13954163]
[286.67480469 187.22012329]
[301.66921997 188.04708862]
[316.46624756 190.60923767]
[330.86575317 194.87191772]
[344.67303467 200.77751160]
[357.70132446 208.24612427]
[369.77444458 217.17674255]
[380.72912598 227.44862366]
[390.41720581 238.92283630]
[398.70770264 251.44419861]
[405.48843384 264.84338379]
[410.66775513 278.93917847]
[414.17556763 293.54092407]
[415.96450806 308.45120239]
[416.01031494 323.46835327]
[414.31237793 338.38925171]
[410.89367676 353.01214600]
[405.80047607 367.13928223]
[399.10159302 380.57955933]
[390.88763428 393.15127563]
[381.26974487 404.68435669]
[370.37792969 415.02288818]
[358.35949707 424.02700806]
[345.37701416 431.57495117]
[331.60601807 437.56466675]
[317.23278809 441.91510010]
[302.45166016 444.56747437]
[287.46258545 445.48590088]
[272.46820068 444.65792847]
[257.67135620 442.09478760]
[243.27212524 437.83114624]
[229.46525574 431.92465210]
[216.43746948 424.45516968]
[204.36492920 415.52374268]
[193.41093445 405.25112915]
[183.72361755 393.77627563]
[175.43397522 381.25436401]
[168.65411377 367.85470581]
[163.47575378 353.75857544]
[159.96888733 339.15658569]
[158.18096924 324.24618530]
[158.13616943 309.22903442]
[159.83508301 294.30825806]
[163.25474548 279.68557739]
[168.34892273 265.55880737]
[175.04869080 252.11895752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[5 155]
[6 154]
[7 153]
[23 152]
[24 151]
[25 150]
[28 145]
[29 144]
[30 143]
[31 142]
[35 137]
[36 136]
[37 135]
[38 134]
[39 133]
[40 132]
[41 131]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
