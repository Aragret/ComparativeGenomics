%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[174.86524963 637.23999023]
[169.40449524 623.25213623]
[165.54425049 608.74078369]
[163.33305359 593.88848877]
[162.79873657 578.88201904]
[163.94799805 563.91009521]
[166.76638794 549.16094971]
[171.21847534 534.82012939]
[177.24824524 521.06799316]
[184.77989197 508.07745361]
[193.71868896 496.01187134]
[203.95220947 485.02301025]
[215.35177612 475.24908447]
[227.77401733 466.81295776]
[241.06269836 459.82077026]
[235.60734558 445.84796143]
[230.15199280 431.87518311]
[224.69664001 417.90237427]
[209.95182800 415.79135132]
[198.16499329 406.52172852]
[192.56353760 392.50421143]
[194.74481201 377.46630859]
[204.22209167 365.46096802]
[198.76673889 351.48815918]
[193.31138611 337.51538086]
[187.85601807 323.54257202]
[182.40066528 309.56976318]
[176.94531250 295.59698486]
[171.48994446 281.62417603]
[166.03459167 267.65136719]
[148.03239441 267.94305420]
[131.26455688 261.29260254]
[118.30746460 248.69384766]
[111.16271973 232.05664062]
[110.94795990 213.91746521]
[117.72212219 197.05273438]
[130.47242737 184.05372620]
[124.19506836 170.43040466]
[117.91770935 156.80708313]
[105.56428528 148.48590088]
[106.81621552 132.71430969]
[100.53885651 119.09098816]
[86.98255157 113.97505951]
[80.91882324 100.81536865]
[85.83782959 87.18637085]
[79.05783844 73.80609894]
[71.78460693 60.68740463]
[64.51137543 47.56871033]
[51.05303574 39.25103760]
[51.64869690 24.36834717]
[44.37546539 11.24965382]
[37.10223770 -1.86904025]
[29.82900810 -14.98773479]
[14.62593079 -14.19538307]
[0.64343983 -20.05856705]
[-9.36583519 -31.36496353]
[-13.45671749 -45.83650970]
[-10.86934566 -60.58828735]
[-2.16966653 -72.70361328]
[-9.44289589 -85.82230377]
[-16.71612549 -98.94100189]
[-30.58111000 -93.17539215]
[-45.00446320 -88.99845123]
[-59.80480576 -86.46271515]
[-74.79599762 -85.60005951]
[-89.78951263 -86.42134857]
[-104.59679413 -88.91623688]
[-119.03161621 -93.05336761]
[-132.91246033 -98.78070068]
[-146.06474304 -106.02620697]
[-158.32307434 -114.69876862]
[-169.53327942 -124.68932343]
[-179.55439758 -135.87222290]
[-188.26037598 -148.10684204]
[-195.54176331 -161.23930359]
[-201.30694580 -175.10446167]
[-205.48345947 -189.52793884]
[-208.01875305 -204.32835388]
[-208.88096619 -219.31958008]
[-208.05923462 -234.31306458]
[-205.56388855 -249.12026978]
[-201.42633057 -263.55496216]
[-195.69859314 -277.43563843]
[-188.45268250 -290.58770752]
[-179.77975464 -302.84576416]
[-169.78886414 -314.05569458]
[-158.60566711 -324.07647705]
[-146.37078857 -332.78210449]
[-133.23811340 -340.06307983]
[-119.37277985 -345.82785034]
[-104.94917297 -350.00393677]
[-90.14868164 -352.53878784]
[-75.15744019 -353.40054321]
[-60.16397476 -352.57836914]
[-45.35684204 -350.08258057]
[-30.92226601 -345.94458008]
[-17.04176903 -340.21643066]
[-3.88991570 -332.97012329]
[8.36789513 -324.29684448]
[19.57750893 -314.30560303]
[29.59795189 -303.12210083]
[38.30320740 -290.88696289]
[45.58380127 -277.75408936]
[51.34816360 -263.88858032]
[55.52380753 -249.46484375]
[58.05821991 -234.66427612]
[58.91952896 -219.67300415]
[58.09689713 -204.67956543]
[55.60067368 -189.87251282]
[51.46225357 -175.43804932]
[45.73367691 -161.55772400]
[38.48698807 -148.40609741]
[29.81332588 -136.14854431]
[19.82176590 -124.93923187]
[8.63796425 -114.91912079]
[-3.59743142 -106.21422577]
[3.67579818 -93.09553528]
[10.94902802 -79.97684479]
[25.83337402 -80.93690491]
[39.71561813 -75.31616974]
[49.82219315 -64.17982483]
[54.10884857 -49.70070648]
[51.67399216 -34.73546600]
[42.94770050 -22.26096344]
[50.22093201 -9.14227009]
[57.49415970 3.97642422]
[64.76738739 17.09511757]
[77.70549774 24.47445297]
[77.63007355 40.29547882]
[84.90329742 53.41417313]
[92.17652893 66.53286743]
[98.75628662 53.05300522]
[113.36373138 49.64379120]
[125.23078156 58.81837463]
[125.60950470 73.81359100]
[114.22071075 83.57553101]
[99.46114349 80.90901184]
[113.01744843 86.02494049]
[119.08117676 99.18463135]
[114.16217041 112.81362915]
[120.43953705 126.43694305]
[133.24195862 135.73255920]
[131.54103088 150.52972412]
[137.81838989 164.15304565]
[144.09574890 177.77636719]
[156.12135315 176.14476013]
[168.14578247 177.67483521]
[179.35289001 182.25524902]
[188.98391724 189.56784058]
[196.38890076 199.10978699]
[201.07057190 210.22810364]
[202.71762085 222.16438293]
[201.22550964 234.10652161]
[196.70303345 245.24391174]
[189.46437073 254.82254028]
[180.00738525 262.19601440]
[185.46275330 276.16882324]
[190.91810608 290.14163208]
[196.37345886 304.11441040]
[201.82882690 318.08721924]
[207.28417969 332.05999756]
[212.73953247 346.03280640]
[218.19488525 360.00561523]
[233.29949951 362.41351318]
[245.09297180 371.99530029]
[250.47116089 386.09997559]
[248.08326721 400.90380859]
[238.66943359 412.44702148]
[244.12478638 426.41979980]
[249.58013916 440.39260864]
[255.03550720 454.36541748]
[269.54647827 450.50387573]
[284.39859009 448.29135132]
[299.40499878 447.75567627]
[314.37707520 448.90359497]
[329.12643433 451.72067261]
[343.46765137 456.17144775]
[357.22033691 462.20001221]
[370.21157837 469.73046875]
[382.27795410 478.66818237]
[393.26773071 488.90072632]
[403.04269409 500.29940796]
[411.47991943 512.72088623]
[418.47329712 526.00897217]
[423.93490601 539.99645996]
[427.79598999 554.50756836]
[430.00808716 569.35974121]
[430.54330444 584.36621094]
[429.39492798 599.33819580]
[426.57742310 614.08752441]
[422.12619019 628.42858887]
[416.09725952 642.18109131]
[408.56637573 655.17211914]
[399.62829590 667.23822021]
[389.39544678 678.22766113]
[377.99645996 688.00231934]
[365.57473755 696.43914795]
[352.28646851 703.43212891]
[338.29876709 708.89331055]
[323.78756714 712.75396729]
[308.93533325 714.96563721]
[293.92886353 715.50042725]
[278.95687866 714.35156250]
[264.20767212 711.53363037]
[249.86671448 707.08197021]
[236.11437988 701.05261230]
[223.12361145 693.52136230]
[211.05776978 684.58294678]
[200.06860352 674.34973145]
[190.29432678 662.95043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 171]
[16 170]
[17 169]
[18 168]
[23 163]
[24 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[37 145]
[38 144]
[39 143]
[41 141]
[42 140]
[45 137]
[46 131]
[47 130]
[48 129]
[50 127]
[51 126]
[52 125]
[53 124]
[59 118]
[60 117]
[61 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
