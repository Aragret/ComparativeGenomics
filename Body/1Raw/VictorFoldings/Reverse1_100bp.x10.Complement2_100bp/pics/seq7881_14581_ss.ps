%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[166.17008972 495.98184204]
[169.05140686 481.23892212]
[173.83245850 466.99826050]
[180.43145752 453.50350952]
[188.73545837 440.98559570]
[198.60237122 429.65866089]
[209.86338806 419.71661377]
[222.32579041 411.32949829]
[215.64558411 397.89910889]
[208.96539307 384.46875000]
[202.28520203 371.03836060]
[196.49180603 366.44943237]
[195.60720825 357.35794067]
[189.12771606 343.82958984]
[182.64820862 330.30123901]
[179.46202087 328.79110718]
[176.84898376 325.66268921]
[175.56172180 321.20214844]
[176.19660950 316.02105713]
[170.32765198 302.21685791]
[164.45869446 288.41268921]
[158.58973694 274.60852051]
[152.72076416 260.80432129]
[146.85180664 247.00015259]
[140.98284912 233.19598389]
[135.11389160 219.39179993]
[132.56762695 218.21934509]
[130.33236694 215.96762085]
[128.82151794 212.75006104]
[128.39982605 208.82746887]
[129.33367920 204.58695984]
[117.77189636 195.19683838]
[120.42591095 179.59982300]
[115.38899231 165.47079468]
[110.35208130 151.34176636]
[105.31516266 137.21273804]
[100.27824402 123.08370972]
[95.24133301 108.95468140]
[89.78342438 103.02307892]
[90.23631287 94.57762146]
[85.41030884 80.37516785]
[80.58431244 66.17271423]
[71.71366119 78.26863861]
[56.73286819 79.02754974]
[46.68522644 67.89000702]
[48.97748184 53.06618881]
[61.91986465 45.48366547]
[75.97058868 50.73080444]
[72.21428680 36.20874405]
[58.87890625 28.15856552]
[55.27635574 13.37762165]
[63.03315353 0.71398503]
[59.27685165 -13.80807400]
[55.52054977 -28.33013344]
[51.54845428 -42.79465866]
[47.36144257 -57.19844055]
[43.17443085 -71.60221863]
[29.07561302 -70.50556183]
[15.04068661 -72.19499969]
[1.61467767 -76.60291290]
[-10.68144131 -83.55610657]
[-21.37095642 -92.78268433]
[-30.03989792 -103.92266846]
[-36.35307312 -116.54200745]
[-40.06702423 -130.14953613]
[-41.03941727 -144.21606445]
[-39.23449326 -158.19494629]
[-34.72438812 -171.54336548]
[-27.68623352 -183.74337769]
[-18.39522743 -194.32202148]
[-7.21384764 -202.86964417]
[5.42227221 -209.05578613]
[1.66597152 -223.57783508]
[-9.28063679 -235.00073242]
[-4.97703218 -249.26004028]
[-8.73333263 -263.78210449]
[-12.48963356 -278.30416870]
[-16.24593353 -292.82623291]
[-20.00223541 -307.34829712]
[-23.75853539 -321.87033081]
[-27.51483536 -336.39239502]
[-31.27113724 -350.91445923]
[-35.02743912 -365.43652344]
[-50.07755661 -364.88156128]
[-64.89503479 -367.57531738]
[-78.78682709 -373.39184570]
[-91.10319519 -382.05911255]
[-101.26808167 -393.17166138]
[-108.80605316 -406.20980835]
[-113.36454010 -420.56372070]
[-114.73033905 -435.56198120]
[-112.83957672 -450.50317383]
[-107.78067017 -464.68844604]
[-99.79024506 -477.45431519]
[-89.24202728 -488.20367432]
[-76.62937164 -496.43380737]
[-62.54220200 -501.75976562]
[-47.63939667 -503.93240356]
[-32.61798477 -502.85015869]
[-18.18054962 -498.56359863]
[-5.00235128 -491.27325439]
[6.30023813 -481.32009888]
[15.19857788 -469.16961670]
[21.27647591 -455.39019775]
[24.24965858 -440.62622070]
[23.97906303 -425.56832886]
[20.47734642 -410.92071533]
[13.90829182 -397.36853027]
[4.57914448 -385.54562378]
[-7.07375479 -376.00497437]
[-20.50537872 -369.19281006]
[-16.74907684 -354.67077637]
[-12.99277687 -340.14871216]
[-9.23647594 -325.62664795]
[-5.48017550 -311.10458374]
[-1.72387493 -296.58251953]
[2.03242564 -282.06045532]
[5.78872633 -267.53842163]
[9.54502678 -253.01634216]
[20.22295952 -242.63217163]
[16.18803024 -227.33413696]
[19.94433212 -212.81207275]
[35.83315277 -213.41786194]
[51.46849823 -210.49009705]
[66.07399750 -204.17112732]
[78.92375183 -194.77174377]
[89.37839508 -182.75595093]
[96.91693115 -168.71798706]
[101.16266632 -153.35304260]
[101.90206146 -137.42268372]
[99.09544373 -121.71724701]
[92.87914276 -107.01655579]
[83.55886841 -94.05120850]
[71.59466553 -83.46628571]
[57.57821274 -75.78923035]
[61.76522446 -61.38545227]
[65.95223999 -46.98167038]
[69.63198090 -43.93724823]
[71.43830872 -38.54890823]
[70.04261017 -32.08643341]
[73.79891205 -17.56437492]
[77.55521393 -3.04231572]
[90.47951508 4.27191210]
[94.49581146 18.94583511]
[86.73634338 32.45244217]
[90.49264526 46.97450256]
[94.78677368 61.34671402]
[99.61277008 75.54917145]
[104.43876648 89.75162506]
[109.37036133 103.91776276]
[114.40727234 118.04679108]
[119.44419098 132.17582703]
[124.48110962 146.30485535]
[129.51802063 160.43388367]
[134.55494690 174.56291199]
[146.47700500 184.96363831]
[143.46270752 199.55004883]
[148.91806030 213.52284241]
[154.78703308 227.32702637]
[160.65599060 241.13119507]
[166.52494812 254.93537903]
[172.39390564 268.73956299]
[178.26286316 282.54373169]
[184.13183594 296.34790039]
[190.00079346 310.15206909]
[196.17655945 323.82174683]
[202.65605164 337.35009766]
[209.13554382 350.87844849]
[215.71557617 364.35818481]
[222.39576721 377.78854370]
[229.07597351 391.21893311]
[235.75616455 404.64929199]
[249.96377563 399.77090454]
[264.68661499 396.78875732]
[279.67272949 395.75387573]
[294.66574097 396.68402100]
[309.40902710 399.56323242]
[323.65039062 404.34225464]
[337.14608765 410.93933105]
[349.66519165 419.24151611]
[360.99349976 429.10684204]
[370.93719482 440.36642456]
[379.32608032 452.82763672]
[386.01663208 466.27722168]
[390.89434814 480.48504639]
[393.87579346 495.20803833]
[394.90994263 510.19421387]
[393.97909546 525.18713379]
[391.09918213 539.93035889]
[386.31948853 554.17144775]
[379.72177124 567.66680908]
[371.41897583 580.18554688]
[361.55313110 591.51342773]
[350.29306030 601.45654297]
[337.83148193 609.84484863]
[324.38156128 616.53472900]
[310.17349243 621.41180420]
[295.45037842 624.39257812]
[280.46414185 625.42596436]
[265.47122192 624.49444580]
[250.72819519 621.61383057]
[236.48730469 616.83343506]
[222.99223328 610.23510742]
[210.47392273 601.93170166]
[199.14653015 592.06530762]
[189.20393372 580.80474854]
[180.81623840 568.34277344]
[174.12696838 554.89251709]
[169.25057983 540.68420410]
[166.27053833 525.96093750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 172]
[9 171]
[10 170]
[11 169]
[13 168]
[14 167]
[15 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[31 157]
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[38 150]
[40 149]
[41 148]
[42 147]
[48 146]
[49 145]
[52 142]
[53 141]
[54 140]
[55 137]
[56 136]
[57 135]
[72 122]
[73 121]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
[82 112]
[83 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
