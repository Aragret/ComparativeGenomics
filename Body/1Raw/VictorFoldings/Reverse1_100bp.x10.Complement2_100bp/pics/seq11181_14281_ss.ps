%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[96.04157257 544.77832031]
[81.52238464 538.97082520]
[74.17864227 525.16491699]
[77.47782898 509.87930298]
[89.86218262 500.33142090]
[90.30878448 485.33807373]
[90.75539398 470.34472656]
[82.69131470 461.32824707]
[82.94068146 448.83337402]
[91.91512299 439.56933594]
[92.58490753 424.58428955]
[93.25469208 409.59927368]
[93.92447662 394.61422729]
[94.14780426 379.61587524]
[93.92447662 364.61755371]
[93.70114899 349.61920166]
[85.77521515 337.00854492]
[93.30619049 323.09469604]
[93.08286285 308.09637451]
[92.85953522 293.09802246]
[92.63620758 278.09970093]
[92.41287994 263.10134888]
[92.18955231 248.10302734]
[91.96622467 233.10469055]
[91.74289703 218.10635376]
[88.50016022 211.46507263]
[91.62957001 202.88343811]
[91.62957001 187.88343811]
[91.62957001 172.88343811]
[83.30061340 164.11103821]
[83.17784882 151.61428833]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[93.57583618 27.69284058]
[86.65715027 41.00192642]
[76.56883240 52.10264206]
[63.98001099 60.25871658]
[49.72565079 64.92918396]
[34.75120163 65.80428314]
[20.04985428 62.82595062]
[6.59670353 56.19174194]
[-4.71595430 46.34167862]
[-13.13779068 33.92907715]
[-18.11021614 19.77722168]
[-19.30342674 4.82475519]
[-16.63828278 -9.93657970]
[-10.29155064 -23.52771568]
[-0.68418837 -35.04720306]
[11.54658222 -43.73099518]
[25.58953857 -49.00312805]
[40.51326370 -50.51391983]
[55.32791519 -48.16316223]
[69.05089569 -42.10677719]
[80.77200317 -32.74645996]
[89.71382904 -20.70304489]
[95.28328705 -6.77533340]
[97.11093903 8.11803436]
[102.14785004 -6.01099539]
[107.18476868 -20.14002419]
[112.22168732 -34.26905441]
[117.25860596 -48.39808273]
[120.14387512 -63.11797714]
[120.81365967 -78.10301208]
[121.48344421 -93.08805084]
[114.37007141 -107.21994781]
[122.66796112 -119.58903503]
[123.33774567 -134.57408142]
[124.00753021 -149.55911255]
[124.67731476 -164.54415894]
[125.34709930 -179.52919006]
[126.01688385 -194.51423645]
[126.68666840 -209.49926758]
[127.35645294 -224.48431396]
[112.71358490 -227.92272949]
[98.95555115 -233.99171448]
[86.55031586 -242.48326111]
[75.91952515 -253.10694885]
[67.42420197 -265.49993896]
[61.35245895 -279.23931885]
[57.90974426 -293.85659790]
[57.21187592 -308.85360718]
[59.28116226 -323.71951294]
[64.04566956 -337.94824219]
[71.34175110 -351.05569458]
[80.91964722 -362.59616089]
[92.45202637 -372.17758179]
[105.54519653 -379.47470093]
[119.75254059 -384.24032593]
[134.58972168 -386.31353760]
[135.25950623 -401.29858398]
[135.92929077 -416.28363037]
[128.81591797 -430.41552734]
[137.11380005 -442.78460693]
[123.20812225 -448.86706543]
[112.44145203 -459.56488037]
[106.26989746 -473.43124390]
[105.52812195 -488.59088135]
[110.31643677 -502.99353027]
[119.98725128 -514.69140625]
[133.23268127 -522.10241699]
[148.26139832 -524.22424316]
[163.04086304 -520.77008057]
[175.57231140 -512.20690918]
[184.16093445 -499.69290161]
[187.64520264 -484.92050171]
[185.55390930 -469.88751221]
[178.16987610 -456.62701416]
[166.49172974 -446.93243408]
[152.09884644 -442.11480713]
[159.26013184 -429.05474854]
[150.91433716 -415.61383057]
[150.24455261 -400.62878418]
[149.57476807 -385.64376831]
[164.16781616 -382.25509644]
[177.89334106 -376.24096680]
[190.28327942 -367.80480957]
[200.91485596 -357.23275757]
[209.42497253 -344.88381958]
[215.52256775 -331.17770386]
[218.99865723 -316.58062744]
[219.73341370 -301.58938599]
[217.70036316 -286.71444702]
[212.96728516 -272.46258545]
[205.69398499 -259.31970215]
[196.12689209 -247.73405457]
[184.59069824 -238.10115051]
[171.47735596 -230.75021362]
[157.23272705 -225.93286133]
[142.34149170 -223.81452942]
[141.67170715 -208.82948303]
[141.00192261 -193.84445190]
[140.33213806 -178.85940552]
[139.66235352 -163.87437439]
[138.99256897 -148.88932800]
[138.32278442 -133.90429688]
[137.65299988 -118.91925049]
[144.81427002 -105.85918427]
[136.46849060 -92.41826630]
[135.79870605 -77.43322754]
[135.12890625 -62.44818878]
[142.54994202 -75.48384094]
[153.30285645 -85.94208527]
[166.53962708 -92.99814606]
[181.21635437 -96.09554291]
[196.17555237 -94.99000549]
[210.23750305 -89.76872253]
[222.29319763 -80.84346771]
[231.39189148 -68.91812897]
[236.81600952 -54.93317413]
[238.13778687 -39.99152374]
[235.25299072 -25.27153969]
[228.38912964 -11.93409824]
[218.08750916 -1.03104675]
[205.16055298 6.57775450]
[190.62774658 10.29224396]
[175.63519287 9.81948090]
[161.36528015 5.19675016]
[148.94338989 -3.21138072]
[139.34916687 -14.74181175]
[133.33924866 -28.48520470]
[131.38763428 -43.36116791]
[126.35071564 -29.23213768]
[121.31379700 -15.10310841]
[116.27688599 -0.97407925]
[111.23996735 13.15495014]
[108.57417297 27.91616821]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[116.21026611 158.18046570]
[106.62957001 172.88343811]
[106.62957001 187.88343811]
[106.62957001 202.88343811]
[106.74123383 217.88302612]
[106.96456146 232.88136292]
[107.18788910 247.87969971]
[107.41121674 262.87802124]
[107.63454437 277.87637329]
[107.85787201 292.87469482]
[108.08119965 307.87304688]
[108.30452728 322.87136841]
[116.24643707 336.55484009]
[108.69948578 349.39587402]
[108.92281342 364.39422607]
[109.14614105 379.39254761]
[111.50425720 383.03854370]
[112.48124695 386.86087036]
[112.19127655 390.40365601]
[110.88482666 393.29498291]
[108.90951538 395.28399658]
[108.23973083 410.26904297]
[107.56994629 425.25408936]
[106.90016174 440.23913574]
[115.76294708 456.38015747]
[105.74874115 470.79135132]
[105.30213928 485.78469849]
[104.85552979 500.77804565]
[116.64962006 511.04611206]
[119.03314972 526.50097656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 208]
[6 207]
[7 206]
[10 204]
[11 203]
[12 202]
[13 201]
[14 196]
[15 195]
[16 194]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[25 185]
[27 184]
[28 183]
[29 182]
[32 180]
[33 179]
[34 178]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 146]
[69 145]
[70 144]
[72 142]
[73 141]
[74 140]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[95 119]
[96 118]
[97 117]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
