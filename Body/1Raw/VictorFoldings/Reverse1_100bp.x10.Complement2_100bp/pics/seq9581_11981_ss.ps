%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[237.49450684 490.64685059]
[246.17562866 478.38372803]
[256.47903442 467.44818115]
[268.20413208 458.05307007]
[260.54351807 445.15673828]
[252.88293457 432.26040649]
[245.22233582 419.36407471]
[237.56173706 406.46774292]
[221.10174561 403.01702881]
[212.05213928 388.44241333]
[216.42779541 371.50506592]
[208.57603455 358.72424316]
[200.72427368 345.94338989]
[192.87252808 333.16253662]
[185.02076721 320.38171387]
[177.16900635 307.60086060]
[175.38467407 322.49435425]
[165.91387939 334.12637329]
[151.69125366 338.89263916]
[137.12385559 335.31625366]
[126.72552490 324.50537109]
[123.71830750 309.80990601]
[129.03402710 295.78338623]
[141.02554321 286.77209473]
[155.97715759 285.56826782]
[169.25613403 292.54510498]
[157.02796936 284.04089355]
[158.51458740 268.28970337]
[152.44075012 254.57443237]
[146.36691284 240.85916138]
[140.29307556 227.14390564]
[134.21925354 213.42863464]
[128.14541626 199.71336365]
[122.07157898 185.99809265]
[115.67197418 199.56442261]
[101.60112000 204.76162720]
[87.91943359 198.61251831]
[82.46440887 184.63958740]
[88.36093140 170.84716797]
[102.23120880 165.13616943]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[68.11687469 56.06270599]
[64.38967896 44.13409805]
[69.61641693 33.22502518]
[63.99901581 26.02206612]
[65.04167175 18.70532799]
[60.64067459 4.36548185]
[49.63228989 -2.35599518]
[46.26190186 -14.39029026]
[51.81112289 -25.13890457]
[47.62411499 -39.54268646]
[43.91425323 -25.00869370]
[34.98651123 -12.95483971]
[22.16525841 -5.16924286]
[7.35245705 -2.80684972]
[-7.25450420 -6.21810722]
[-19.48876953 -14.89697552]
[-27.53545761 -27.55599594]
[-30.20089149 -42.31727982]
[-27.08966827 -56.99107361]
[-18.66332054 -69.40061188]
[-6.17184591 -77.70501709]
[8.53171825 -80.67237091]
[23.26618767 -77.86248779]
[35.84578705 -69.69219971]
[44.40364838 -57.37526703]
[43.28799820 -72.33371735]
[42.17234802 -87.29217529]
[41.05670166 -102.25062561]
[39.94105148 -117.20907593]
[38.82540512 -132.16752625]
[27.20832634 -122.67840576]
[12.51481915 -125.69516754]
[5.57638741 -138.99397278]
[11.50778484 -152.77143860]
[25.93660545 -156.87132263]
[38.22564697 -148.27279663]
[38.22564697 -163.27279663]
[38.22564697 -178.27279663]
[38.22564697 -193.27279663]
[23.41457558 -195.88111877]
[9.28151417 -201.02189636]
[-3.74405146 -208.53892517]
[-15.26628876 -218.20376587]
[-24.93505096 -229.72271729]
[-32.45651245 -242.74572754]
[-37.60210800 -256.87704468]
[-40.21546555 -271.68722534]
[-40.21717072 -286.72619629]
[-37.60717392 -301.53698730]
[-32.46478271 -315.66946411]
[-24.94627380 -328.69418335]
[-15.28012562 -340.21530151]
[-3.76008105 -349.88278198]
[9.26377964 -357.40274048]
[23.39567375 -362.54675293]
[38.20615387 -365.15841675]
[53.24514008 -365.15841675]
[68.05561829 -362.54675293]
[82.18751526 -357.40274048]
[95.21137238 -349.88278198]
[106.73141479 -340.21530151]
[116.39756775 -328.69418335]
[123.91607666 -315.66946411]
[129.05847168 -301.53698730]
[131.66845703 -286.72619629]
[131.66676331 -271.68722534]
[129.05340576 -256.87704468]
[123.90780640 -242.74572754]
[116.38634491 -229.72271729]
[106.71758270 -218.20376587]
[95.19534302 -208.53892517]
[82.16977692 -201.02189636]
[68.03671265 -195.88111877]
[53.22564697 -193.27279663]
[53.22564697 -178.27279663]
[53.22564697 -163.27279663]
[53.22564697 -148.27279663]
[53.78385544 -133.28318787]
[54.89950562 -118.32472992]
[56.01515579 -103.36627197]
[57.13080215 -88.40782166]
[58.24645233 -73.44937134]
[59.36209869 -58.49091339]
[62.02789688 -43.72969818]
[66.21490479 -29.32591438]
[79.51889038 -17.88165855]
[74.98052216 -0.03551631]
[79.38152313 14.30433083]
[83.88914490 28.61101723]
[97.52796936 39.65409088]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[135.78684998 179.92427063]
[141.86068726 193.63952637]
[147.93450928 207.35479736]
[154.00834656 221.07006836]
[160.08218384 234.78533936]
[166.15602112 248.50059509]
[172.22984314 262.21585083]
[184.89245605 271.70104980]
[182.97140503 286.47125244]
[189.94985962 299.74911499]
[197.80160522 312.52993774]
[205.65336609 325.31079102]
[213.50512695 338.09164429]
[221.35687256 350.87246704]
[229.20863342 363.65332031]
[242.58218384 365.25415039]
[252.44795227 374.13543701]
[255.35408020 386.88833618]
[250.45806885 398.80715942]
[258.11865234 411.70349121]
[265.77926636 424.59979248]
[273.43984985 437.49612427]
[281.10046387 450.39245605]
[294.95971680 444.59011841]
[309.49163818 440.77313232]
[324.41336060 439.01583862]
[339.43444824 439.35241699]
[354.26248169 441.77633667]
[368.60885620 446.24041748]
[382.19427490 452.65774536]
[394.75436401 460.90338135]
[406.04455566 470.81689453]
[415.84512329 482.20526123]
[423.96533203 494.84680176]
[430.24703979 508.49545288]
[434.56802368 522.88555908]
[436.84417725 537.73699951]
[437.03115845 552.76068115]
[435.12536621 567.66418457]
[431.16387939 582.15740967]
[425.22381592 595.95819092]
[417.42080688 608.79791260]
[407.90670776 620.42669678]
[396.86676025 630.61810303]
[384.51580811 639.17382812]
[371.09429932 645.92730713]
[356.86349487 650.74707031]
[342.10037231 653.53930664]
[327.09231567 654.24963379]
[312.13146973 652.86431885]
[297.50906372 649.41021729]
[283.50967407 643.95458984]
[270.40585327 636.60369873]
[258.45263672 627.50054932]
[247.88273621 616.82238770]
[238.90185547 604.77703857]
[231.68484497 591.59899902]
[226.37216187 577.54479980]
[223.06724548 562.88793945]
[221.83439636 547.91375732]
[222.69763184 532.91369629]
[225.64013672 518.17980957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 158]
[26 157]
[28 155]
[29 154]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[41 148]
[42 147]
[43 146]
[44 145]
[45 144]
[47 142]
[48 141]
[49 140]
[52 138]
[54 137]
[55 136]
[58 134]
[59 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[85 126]
[86 125]
[87 124]
[88 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
