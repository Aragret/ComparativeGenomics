%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[228.12979126 445.56198120]
[239.73013306 436.00518799]
[232.06953430 423.10885620]
[224.40893555 410.21252441]
[216.74833679 397.31619263]
[210.62968445 393.17086792]
[209.07133484 384.17034912]
[201.60359192 371.16140747]
[195.22525024 384.73773193]
[180.67019653 388.36404419]
[168.66786194 379.36715698]
[168.06591797 364.37924194]
[179.30812073 354.44882202]
[194.10574341 356.89529419]
[187.62625122 343.36697388]
[181.14675903 329.83862305]
[174.66726685 316.31027222]
[168.18775940 302.78192139]
[155.71182251 294.64556885]
[156.72880554 278.85708618]
[150.24929810 265.32873535]
[143.76980591 251.80039978]
[137.29031372 238.27206421]
[133.96621704 252.89909363]
[123.33666992 263.48272705]
[108.69537354 266.74346924]
[94.57908630 261.67095947]
[85.36189270 249.83695984]
[83.89983368 234.90838623]
[90.64595032 221.51100159]
[103.50988770 213.79612732]
[118.50561523 214.15432739]
[130.98669434 222.47477722]
[126.37268829 208.20204163]
[121.75868225 193.92930603]
[117.14466858 179.65657043]
[112.53066254 165.38383484]
[100.35054016 161.17977905]
[92.70156860 150.56962585]
[92.55803680 137.29597473]
[100.19638824 126.20227051]
[95.79538727 111.86241913]
[91.07525635 97.62443542]
[86.03833771 83.49539948]
[81.00141907 69.36637115]
[75.96450043 55.23734283]
[70.92758942 41.10831451]
[65.78562927 27.01717377]
[51.31399155 15.63063431]
[54.89126968 -1.54987824]
[49.43591309 -15.52267647]
[43.98055267 -29.49547386]
[38.52519608 -43.46827316]
[33.06983948 -57.44107056]
[27.61448288 -71.41386414]
[22.15912628 -85.38666534]
[16.70376968 -99.35946655]
[0.55646253 -106.08879089]
[-5.60671473 -122.09909821]
[1.57223511 -137.30769348]
[-10.80234718 -147.16571045]
[-8.44238186 -161.87216187]
[-14.10516834 -175.76219177]
[-15.16401482 -160.79960632]
[-19.48188782 -146.43450928]
[-26.84811020 -133.36779785]
[-36.90326691 -122.23704529]
[-49.15674591 -113.58531952]
[-63.01066971 -107.83477783]
[-77.78907776 -105.26599121]
[-92.77089691 -106.00429535]
[-107.22512817 -110.01367188]
[-120.44652557 -117.09848785]
[-131.78997803 -126.91307068]
[-140.70202637 -138.97853088]
[-146.74781799 -152.70619202]
[-149.63237000 -167.42622375]
[-149.21495056 -182.42041016]
[-145.51591492 -196.95715332]
[-138.71572876 -210.32719421]
[-129.14622498 -221.87814331]
[-117.27430725 -231.04641724]
[-103.67922211 -237.38468933]
[-89.02430725 -240.58369446]
[-74.02462006 -240.48733521]
[-59.41201782 -237.10032654]
[-45.89948273 -230.58792114]
[-34.14632416 -221.26786804]
[-24.72600555 -209.59492493]
[-18.10041428 -196.14486694]
[-18.10041428 -211.14486694]
[-18.10041428 -226.14486694]
[-18.10041428 -241.14486694]
[-18.10041428 -256.14486694]
[-18.10041428 -271.14486694]
[-18.10041428 -286.14486694]
[-18.10041428 -301.14486694]
[-32.35308456 -306.30599976]
[-43.97901535 -316.03292847]
[-51.57431412 -329.15115356]
[-54.22182083 -344.07650757]
[-51.60182571 -359.00671387]
[-44.03071213 -372.13888550]
[-32.42272949 -381.88726807]
[-18.17959213 -387.07464600]
[-3.02123547 -387.07464600]
[11.22189903 -381.88726807]
[22.82988358 -372.13888550]
[30.40099716 -359.00671387]
[33.02099228 -344.07650757]
[30.37348747 -329.15115356]
[22.77818489 -316.03292847]
[11.15225601 -306.30599976]
[-3.10041428 -301.14486694]
[-3.10041428 -286.14486694]
[-3.10041428 -271.14486694]
[-3.10041428 -256.14486694]
[-3.10041428 -241.14486694]
[-3.10041428 -226.14486694]
[-3.10041428 -211.14486694]
[-3.10041428 -196.14486694]
[-0.21514164 -181.42497253]
[5.44764519 -167.53494263]
[17.41718674 -158.67044067]
[15.46226215 -142.97048950]
[27.92133141 -139.68399048]
[36.33826065 -129.67211914]
[37.46864700 -116.44590759]
[30.67656708 -104.81481934]
[36.13192368 -90.84202576]
[41.58728027 -76.86922455]
[47.04263687 -62.89642715]
[52.49799347 -48.92362976]
[57.95335388 -34.95083237]
[63.40871048 -20.97803307]
[68.86406708 -7.00523520]
[79.81309509 -1.86273050]
[84.47239685 9.73359108]
[79.83809662 21.77045441]
[85.12265015 26.93720627]
[85.05661774 36.07139587]
[90.09353638 50.20042801]
[95.13044739 64.32946014]
[100.16736603 78.45848846]
[105.20428467 92.58751678]
[108.41915131 94.71753693]
[110.67953491 98.25427246]
[111.37821960 102.73968506]
[110.13523102 107.46142578]
[114.53623199 121.80126953]
[130.13830566 129.71293640]
[135.09362793 146.13729858]
[126.80339813 160.76983643]
[131.41740417 175.04255676]
[136.03141785 189.31529236]
[140.64541626 203.58802795]
[145.25942993 217.86076355]
[150.81866455 231.79255676]
[157.29815674 245.32090759]
[163.77764893 258.84924316]
[170.25714111 272.37759399]
[183.19654846 281.48156738]
[181.71611023 296.30242920]
[188.19560242 309.83078003]
[194.67509460 323.35913086]
[201.15460205 336.88745117]
[207.63409424 350.41580200]
[214.61254883 363.69366455]
[222.08029175 376.70260620]
[229.64466858 389.65560913]
[237.30526733 402.55194092]
[244.96586609 415.44827271]
[252.62646484 428.34457397]
[266.56802368 422.72915649]
[281.20343018 419.30780029]
[296.18957520 418.16076660]
[311.17517090 419.31488037]
[325.80895996 422.74313354]
[339.74786377 428.36517334]
[352.66519165 436.04916382]
[364.25805664 445.61499023]
[374.25479126 456.83843994]
[382.42102051 469.45642090]
[388.56530762 483.17312622]
[392.54364014 497.66705322]
[394.26272583 512.59838867]
[393.68231201 527.61718750]
[390.81597900 542.37127686]
[385.73092651 556.51495361]
[378.54635620 569.71655273]
[369.43069458 581.66662598]
[358.59759521 592.08514404]
[346.30102539 600.72772217]
[332.82922363 607.39190674]
[318.49798584 611.92138672]
[303.64328003 614.21002197]
[288.61331177 614.20416260]
[273.76037598 611.90399170]
[259.43267822 607.36334229]
[245.96606445 600.68865967]
[233.67622375 592.03649902]
[222.85124207 581.60955811]
[213.74487305 569.65240479]
[206.57058716 556.44519043]
[201.49655151 542.29760742]
[198.64170837 527.54125977]
[198.07299805 512.52203369]
[199.80372620 497.59201050]
[203.79333496 483.10119629]
[209.94828796 469.38928223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 173]
[3 172]
[4 171]
[5 170]
[7 169]
[8 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[20 161]
[21 160]
[22 159]
[23 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[41 150]
[42 149]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 139]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[60 125]
[62 123]
[63 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
