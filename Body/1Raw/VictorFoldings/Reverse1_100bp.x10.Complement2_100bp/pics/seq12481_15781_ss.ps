%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[196.41983032 671.06237793]
[209.38822937 663.17663574]
[206.72244263 648.41540527]
[204.05664062 633.65417480]
[201.39085388 618.89300537]
[189.34965515 606.12677002]
[195.72001648 588.84960938]
[192.83474731 574.12969971]
[189.44128418 570.76910400]
[188.12287903 565.24108887]
[190.08956909 558.92895508]
[187.64384460 544.12963867]
[185.19812012 529.33038330]
[182.75239563 514.53112793]
[180.30665588 499.73184204]
[177.86093140 484.93258667]
[175.41520691 470.13330078]
[172.96948242 455.33404541]
[170.52375793 440.53475952]
[167.85795593 425.77355957]
[164.97268677 411.05364990]
[162.08741760 396.33377075]
[159.20213318 381.61389160]
[156.31686401 366.89398193]
[151.94546509 360.93472290]
[153.49992371 351.93353271]
[143.74453735 344.78100586]
[141.40280151 332.50500488]
[148.26586914 321.58435059]
[145.82014465 306.78506470]
[136.11122131 295.48965454]
[141.49488831 280.61260986]
[139.04916382 265.81335449]
[135.61810303 251.21101379]
[131.21710205 236.87117004]
[126.81610107 222.53132629]
[122.41510010 208.19148254]
[118.01410675 193.85162354]
[113.61310577 179.51177979]
[105.19631195 176.68502808]
[98.92861938 170.20344543]
[96.30686188 161.43299866]
[98.04025269 152.30464172]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[86.69087219 109.34056854]
[83.85837555 98.04374695]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[67.91308594 32.43686676]
[72.42851257 18.24319839]
[68.88884735 3.66682339]
[63.82273483 -3.93398881]
[65.40670013 -11.15291214]
[62.08443832 -25.78037262]
[58.76218033 -40.40783310]
[55.70060349 -43.48691177]
[53.95376968 -47.02429581]
[53.50431442 -50.55039978]
[54.18415070 -53.64950180]
[55.70509720 -56.00425720]
[53.25936890 -70.80352783]
[50.81364059 -85.60279846]
[40.92978287 -97.95674133]
[46.48838043 -111.77525330]
[44.04265213 -126.57452393]
[41.59692764 -141.37379456]
[39.15119934 -156.17306519]
[34.66444397 -164.12962341]
[36.78093719 -171.21073914]
[34.55582047 -186.04478455]
[31.73173714 -189.34304810]
[30.25284195 -193.00056458]
[30.06689072 -196.55032349]
[30.97534561 -199.59027100]
[32.66721344 -201.82539368]
[31.32897949 -216.76557922]
[27.44643402 -225.03379822]
[30.08373642 -231.93789673]
[28.96808815 -246.89634705]
[27.85243988 -261.85479736]
[26.73678970 -276.81326294]
[18.32060814 -264.39682007]
[4.56982231 -258.40383911]
[-10.25473690 -260.69128418]
[-21.55951691 -270.55038452]
[-25.84161186 -284.92617798]
[-21.77416420 -299.36419678]
[-10.61752033 -309.39062500]
[4.17131472 -311.89868164]
[18.00985909 -306.11120605]
[26.61017036 -293.82128906]
[27.50298691 -308.79470825]
[28.39580345 -323.76812744]
[14.17650414 -328.86596680]
[1.97023332 -337.76449585]
[-7.23350143 -349.74230957]
[-12.68859482 -363.82843018]
[-13.95282555 -378.88095093]
[-10.92370987 -393.67962646]
[-3.84680438 -407.02481079]
[6.70419884 -417.83468628]
[19.87397575 -425.23287964]
[34.59491348 -428.61972046]
[49.67365265 -427.72064209]
[63.88782120 -422.60848999]
[76.08514404 -413.69772339]
[85.27684021 -401.71066284]
[90.71778107 -387.61907959]
[91.96688843 -372.56527710]
[88.92291260 -357.76965332]
[81.83260345 -344.43157959]
[71.27074432 -333.63232422]
[58.09354019 -326.24734497]
[43.36920929 -322.87530518]
[42.47639465 -307.90188599]
[41.58357620 -292.92849731]
[41.69524384 -277.92889404]
[42.81089401 -262.97045898]
[43.92654037 -248.01199341]
[45.04219055 -233.05354309]
[46.26916504 -218.10380554]
[47.60739899 -203.16362000]
[49.38986588 -188.26989746]
[51.61498260 -173.43586731]
[53.95046997 -158.61878967]
[56.39619827 -143.81951904]
[58.84192276 -129.02024841]
[61.28765106 -114.22097778]
[70.99657440 -102.92558289]
[65.61291504 -88.04852295]
[68.05863953 -73.24925232]
[70.50436401 -58.44998169]
[73.38964081 -43.73009109]
[76.71189880 -29.10263252]
[80.03415680 -14.47517109]
[83.46521759 0.12715094]
[87.00489044 14.70352650]
[97.52703857 25.24552536]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[115.77153015 96.04553986]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[134.30874634 155.47488403]
[127.95295715 175.11077881]
[132.35395813 189.45063782]
[136.75494385 203.79048157]
[141.15594482 218.13032532]
[145.55694580 232.47016907]
[149.95794678 246.81001282]
[155.41505432 232.83790588]
[167.49697876 223.94818115]
[182.45999146 222.89543152]
[195.66764832 230.00584412]
[203.02738953 243.07618713]
[202.25875854 258.05648804]
[193.59988403 270.30490112]
[179.73384094 276.02618408]
[164.95716858 273.44747925]
[153.84843445 263.36761475]
[156.29415894 278.16687012]
[166.17800903 290.52084351]
[160.61941528 304.33932495]
[163.06513977 319.13861084]
[175.07632446 333.09616089]
[168.26115417 349.26776123]
[171.03675842 364.00869751]
[173.92202759 378.72860718]
[176.80729675 393.44848633]
[179.69258118 408.16839600]
[182.57785034 422.88827515]
[186.62818909 428.11383057]
[187.32666016 433.75378418]
[185.32302856 438.08905029]
[187.76875305 452.88830566]
[190.21447754 467.68759155]
[192.66020203 482.48684692]
[195.10592651 497.28613281]
[197.55166626 512.08538818]
[199.99739075 526.88464355]
[202.44311523 541.68395996]
[204.88883972 556.48321533]
[207.55464172 571.24444580]
[210.43991089 585.96429443]
[220.68930054 593.79455566]
[222.78939819 606.11419678]
[216.15206909 616.22717285]
[218.81785583 630.98840332]
[221.48365784 645.74963379]
[224.14944458 660.51080322]
[239.05694580 663.36236572]
[251.92559814 671.40985107]
[261.01504517 683.56494141]
[265.09603882 698.18377686]
[263.61660767 713.28924561]
[256.77685547 726.83850098]
[245.50180054 736.99908447]
[231.31629944 742.39685059]
[216.13883972 742.30187988]
[202.02203369 736.72692871]
[190.87506104 726.42596436]
[184.20547485 712.79211426]
[182.91525269 697.66931152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 194]
[7 191]
[8 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[26 173]
[29 171]
[30 170]
[32 168]
[33 167]
[34 157]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[44 150]
[45 149]
[46 148]
[49 146]
[50 145]
[51 144]
[52 143]
[54 141]
[55 140]
[57 139]
[58 138]
[59 137]
[64 136]
[65 135]
[66 134]
[68 132]
[69 131]
[70 130]
[71 129]
[73 128]
[74 127]
[79 126]
[80 125]
[82 124]
[83 123]
[84 122]
[85 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
