%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[210.63146973 546.47229004]
[207.52735901 531.79699707]
[204.42324829 517.12170410]
[201.31913757 502.44638062]
[198.21502686 487.77108765]
[188.25100708 480.91217041]
[185.54481506 468.71133423]
[192.07968140 457.59115601]
[189.19441223 442.87127686]
[186.19964600 428.17327881]
[183.09553528 413.49798584]
[178.63589478 407.60446167]
[180.05616760 398.58111572]
[177.17089844 383.86123657]
[174.28561401 369.14135742]
[171.40034485 354.42144775]
[168.51507568 339.70156860]
[165.62980652 324.98165894]
[161.25840759 319.02243042]
[162.81286621 310.02124023]
[160.14706421 295.26000977]
[157.37145996 280.51904297]
[154.48619080 265.79916382]
[151.60092163 251.07926941]
[148.71563721 236.35937500]
[144.52862549 221.95559692]
[139.07327271 207.98280334]
[133.61791992 194.00999451]
[128.16255188 180.03720093]
[122.70719910 166.06440735]
[116.73564148 152.30430603]
[110.25614166 138.77595520]
[103.77664948 125.24761200]
[97.29714966 111.71926880]
[90.61695862 98.28888702]
[83.73754120 84.95945740]
[76.85813141 71.63002777]
[69.97872162 58.30060196]
[63.00026703 45.02275467]
[55.92316055 31.79722786]
[48.84605789 18.57170105]
[41.76895142 5.34617329]
[26.91051674 0.67020345]
[19.92172813 -12.84317780]
[24.47111893 -26.97960854]
[17.39401245 -40.20513535]
[10.31690693 -53.43066406]
[4.91165113 -57.23785782]
[2.58915305 -62.42467117]
[3.23264623 -67.15700531]
[-3.39109969 -73.44697571]
[-3.44535089 -80.83743286]
[-9.92484665 -94.36578369]
[-16.40434265 -107.89412689]
[-31.03916359 -113.22889709]
[-37.41757584 -127.04086304]
[-32.24150085 -140.96005249]
[-38.72099686 -154.48840332]
[-45.20049286 -168.01673889]
[-49.50808716 -170.96492004]
[-52.00444412 -174.87918091]
[-52.62487411 -178.90785217]
[-51.65209198 -182.29695129]
[-57.52105331 -196.10113525]
[-63.39001465 -209.90530396]
[-69.25897217 -223.70948792]
[-75.12793732 -237.51365662]
[-80.99689484 -251.31784058]
[-86.86585999 -265.12200928]
[-92.73481750 -278.92617798]
[-98.97243500 -285.59927368]
[-98.58670044 -292.97985840]
[-104.24948883 -306.86987305]
[-109.91227722 -320.75988770]
[-124.57841492 -317.45019531]
[-139.58929443 -316.59976196]
[-154.53541565 -318.23181152]
[-169.00901794 -322.30175781]
[-182.61526489 -328.69863892]
[-194.98297119 -337.24789429]
[-205.77471924 -347.71630859]
[-214.69610596 -359.81832886]
[-221.50376892 -373.22375488]
[-226.01197815 -387.56692505]
[-228.09773254 -402.45648193]
[-227.70414734 -417.48629761]
[-224.84196472 -432.24630737]
[-219.58924866 -446.33383179]
[-212.08930969 -459.36459351]
[-202.54675293 -470.98309326]
[-191.22190857 -480.87237549]
[-178.42370605 -488.76260376]
[-164.50131226 -494.43859863]
[-149.83453369 -497.74545288]
[-134.82348633 -498.59301758]
[-119.87768555 -496.95809937]
[-105.40486145 -492.88534546]
[-91.79985046 -486.48587036]
[-79.43379974 -477.93420410]
[-68.64406586 -467.46371460]
[-59.72500229 -455.35998535]
[-52.91992950 -441.95324707]
[-48.41448975 -427.60922241]
[-46.33159637 -412.71923828]
[-46.72807312 -397.68951416]
[-49.59310532 -382.93005371]
[-54.84852982 -368.84353638]
[-62.35097885 -355.81420898]
[-71.89577484 -344.19757080]
[-83.22253418 -334.31048584]
[-96.02224731 -326.42269897]
[-90.35945892 -312.53265381]
[-84.69667053 -298.64263916]
[-78.93064117 -284.79513550]
[-73.06167603 -270.99096680]
[-67.19271851 -257.18679810]
[-61.32375717 -243.38261414]
[-55.45479584 -229.57844543]
[-49.58583450 -215.77426147]
[-43.71687698 -201.97009277]
[-37.84791565 -188.16590881]
[-31.67214584 -174.49624634]
[-25.19264984 -160.96789551]
[-18.71315384 -147.43954468]
[-4.62329388 -142.74792480]
[2.14055252 -129.12055969]
[-2.87599707 -114.37362671]
[3.60349894 -100.84527588]
[10.08299446 -87.31693268]
[16.66302299 -73.83719635]
[23.54243469 -60.50776672]
[30.61954117 -47.28224182]
[37.69664764 -34.05671310]
[51.98194504 -29.99890518]
[59.34753799 -16.68715477]
[54.99448013 -1.73093224]
[62.07158279 11.49459553]
[69.14868927 24.72012329]
[76.22579193 37.94565201]
[82.15325165 42.36006165]
[83.30815125 51.42118835]
[90.18756104 64.75061798]
[97.06697083 78.08004761]
[103.94638824 91.40947723]
[108.45261383 94.09423065]
[111.13384247 99.11263275]
[110.82550049 105.23976898]
[117.30499268 118.76811218]
[123.78449249 132.29646301]
[130.26399231 145.82481384]
[137.63441467 132.76048279]
[152.41888428 130.22676086]
[163.71881104 140.09141541]
[163.20433044 155.08259583]
[151.25468445 164.14935303]
[136.67999268 160.60905457]
[142.13536072 174.58184814]
[147.59071350 188.55464172]
[153.04606628 202.52743530]
[158.50143433 216.50024414]
[161.48902893 201.80078125]
[170.48953247 189.80114746]
[183.76506042 182.81829834]
[198.75233459 182.20050049]
[212.55754089 188.06704712]
[222.51510620 199.28518677]
[226.70239258 213.68888855]
[224.31088257 228.49702454]
[215.80235291 240.85035706]
[202.81967163 248.36367798]
[187.86956787 249.58625793]
[173.83869934 244.28204346]
[163.43553162 233.47410583]
[166.32080078 248.19400024]
[169.20608521 262.91387939]
[172.09135437 277.63378906]
[176.81301880 285.45321655]
[174.90829468 292.59420776]
[177.57408142 307.35543823]
[180.34970093 322.09640503]
[183.23497009 336.81628418]
[186.12023926 351.53619385]
[189.00550842 366.25607300]
[191.89077759 380.97595215]
[194.77606201 395.69586182]
[197.77082825 410.39385986]
[200.87493896 425.06915283]
[205.71249390 432.81744385]
[203.91430664 439.98599243]
[206.79957581 454.70590210]
[219.22099304 468.29965210]
[212.89033508 484.66696167]
[215.99444580 499.34228516]
[219.09855652 514.01757812]
[222.20266724 528.69287109]
[225.30677795 543.36816406]
[240.29255676 545.77459717]
[253.39512634 553.43536377]
[262.84243774 565.31445312]
[267.35687256 579.80523682]
[266.32781982 594.94812012]
[259.89453125 608.69500732]
[248.92698669 619.18676758]
[234.90850830 625.00451660]
[219.73493958 625.36145020]
[205.45840454 620.20928955]
[194.00967407 610.24481201]
[186.93711853 596.81561279]
[185.19720459 581.73791504]
[189.02528381 567.05078125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 194]
[4 193]
[5 192]
[8 190]
[9 189]
[10 187]
[11 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[20 179]
[21 178]
[22 176]
[23 175]
[24 174]
[25 173]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 150]
[32 149]
[33 148]
[34 147]
[35 144]
[36 143]
[37 142]
[38 141]
[39 139]
[40 138]
[41 137]
[42 136]
[45 133]
[46 132]
[47 131]
[50 130]
[52 129]
[53 128]
[54 127]
[57 124]
[58 123]
[59 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[72 113]
[73 112]
[74 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
