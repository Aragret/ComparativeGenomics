%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[141.55867004 590.75006104]
[139.10597229 575.88629150]
[140.02281189 560.84942627]
[144.26316833 546.39373779]
[151.61436462 533.24432373]
[161.70765686 522.06072998]
[174.03677368 513.40386963]
[187.98330688 507.70809937]
[185.53756714 492.90881348]
[173.31735229 484.47070312]
[170.62622070 469.49697876]
[179.55973816 456.73648071]
[177.11401367 441.93722534]
[174.66828918 427.13793945]
[164.95936584 415.84255981]
[170.34301758 400.96548462]
[160.63409424 389.67010498]
[166.01776123 374.79302979]
[163.57203674 359.99377441]
[161.12631226 345.19448853]
[158.68058777 330.39523315]
[156.23484802 315.59594727]
[152.94294739 312.13583374]
[151.78971863 306.57104492]
[153.94348145 300.32019043]
[151.93946838 285.45468140]
[149.93545532 270.58914185]
[146.28736877 256.03952026]
[141.04064941 241.98706055]
[135.79393005 227.93458557]
[131.89793396 225.17228699]
[129.69584656 219.93321228]
[130.60702515 213.38482666]
[125.78102875 199.18237305]
[120.95503235 184.97991943]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.26033783 86.22078705]
[82.81462097 80.72470856]
[84.22109985 76.16062164]
[79.82010651 61.82077408]
[77.27641296 76.60352325]
[70.88865662 90.17543030]
[61.11798096 101.55672455]
[48.66973114 109.92578125]
[34.44256592 114.67843628]
[19.46355057 115.47158813]
[4.81403351 112.24797821]
[-8.44842243 105.24031830]
[-19.36639023 94.95449829]
[-27.15169144 82.13307190]
[-31.24229813 67.70161438]
[-31.34290695 52.70195389]
[-27.44625473 38.21692276]
[-19.83364487 25.29221153]
[-9.05463696 14.86086464]
[4.11262321 7.67593145]
[18.71757889 4.25609779]
[33.70588684 4.84824467]
[47.99552536 9.40962410]
[60.55492020 17.61094666]
[70.47738647 28.86014938]
[77.04698944 42.34625244]
[77.27031708 27.34791374]
[77.49364471 12.34957695]
[77.38197327 -2.65000772]
[76.93537140 -17.64335823]
[76.48876190 -32.63670731]
[76.04216003 -47.63005829]
[75.59555054 -62.62340927]
[75.14894867 -77.61676025]
[74.70233917 -92.61010742]
[74.25573730 -107.60345459]
[73.80912781 -122.59680939]
[65.66437531 -136.16049194]
[73.01931000 -149.11248779]
[72.57270050 -164.10583496]
[72.12609863 -179.09919739]
[61.07850647 -168.95272827]
[46.08682251 -169.45211792]
[35.73896027 -180.31129456]
[35.96264648 -195.30963135]
[46.62974548 -205.85539246]
[61.62965393 -205.90748596]
[72.36936951 -195.43695068]
[73.26218414 -210.41035461]
[74.15499878 -225.38375854]
[75.04781342 -240.35716248]
[75.94063568 -255.33056641]
[76.83345032 -270.30398560]
[77.72626495 -285.27737427]
[69.10476685 -301.54855347]
[79.33242798 -315.80908203]
[80.00221252 -330.79409790]
[80.67199707 -345.77914429]
[67.03133392 -352.55056763]
[57.32915878 -364.28887939]
[53.24642944 -378.96029663]
[55.49050903 -394.02297974]
[63.67258835 -406.86718750]
[76.37508392 -415.26757812]
[91.39720154 -417.76873779]
[106.13627625 -413.93734741]
[118.03866577 -404.43719482]
[125.04222107 -390.91424561]
[125.93351746 -375.71142578]
[120.55815125 -361.46273804]
[109.84742737 -350.63681030]
[95.65703583 -345.10937500]
[94.98725128 -330.12432861]
[94.31746674 -315.13928223]
[102.24640656 -306.00372314]
[101.81103516 -293.51394653]
[92.69966888 -284.38458252]
[91.80685425 -269.41116333]
[90.91403961 -254.43775940]
[90.02122498 -239.46435547]
[89.12840271 -224.49095154]
[88.23558807 -209.51754761]
[87.34277344 -194.54412842]
[87.11944580 -179.54579163]
[87.56605530 -164.55244446]
[88.01265717 -149.55909729]
[96.12546539 -137.06784058]
[88.80248260 -123.04341125]
[89.24908447 -108.05006409]
[89.69569397 -93.05671692]
[90.14229584 -78.06336212]
[90.58890533 -63.07001495]
[91.03550720 -48.07666397]
[91.48211670 -33.08331299]
[91.92871857 -18.08996391]
[92.37532806 -3.09661365]
[94.67713928 -0.42565826]
[95.79960632 3.49290156]
[95.17044830 8.09262466]
[92.49198151 12.57290459]
[92.26865387 27.57124138]
[92.04532623 42.56958008]
[94.15995026 57.41977692]
[98.56095123 71.75962067]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[135.15748596 180.15393066]
[139.98348999 194.35638428]
[144.80947876 208.55883789]
[149.84640503 222.68786621]
[155.09310913 236.74034119]
[160.33982849 250.79280090]
[162.73466492 235.98521423]
[170.25392151 223.00596619]
[181.90832520 213.56271362]
[196.16452026 208.89787292]
[211.14688110 209.62519836]
[224.88420105 215.64897156]
[235.56912231 226.17668152]
[241.79583740 239.82321167]
[242.74511719 254.79315186]
[238.29208374 269.11691284]
[229.02259827 280.91000366]
[216.15621948 288.62078857]
[201.38574219 291.23483276]
[186.65449524 288.40817261]
[173.90058899 280.51272583]
[164.80097961 268.58514404]
[166.80499268 283.45065308]
[168.80900574 298.31619263]
[171.03411865 313.15023804]
[173.47985840 327.94949341]
[175.92558289 342.74877930]
[178.37130737 357.54803467]
[180.81703186 372.34732056]
[190.70089722 384.70126343]
[185.14228821 398.51977539]
[195.02615356 410.87371826]
[189.46755981 424.69223022]
[191.91328430 439.49148560]
[194.35900879 454.29077148]
[206.92300415 463.49856567]
[209.19250488 478.54196167]
[200.33683777 490.46307373]
[202.78257751 505.26235962]
[217.82009888 506.16824341]
[232.27886963 510.39810181]
[245.43363953 517.73974609]
[256.62460327 527.82489014]
[265.29037476 540.14770508]
[270.99630737 554.09008789]
[273.45620728 568.95269775]
[272.54666138 583.98999023]
[268.31329346 598.44775391]
[260.96847534 611.60076904]
[250.88059998 622.78924561]
[238.55567932 631.45202637]
[224.61190796 637.15460205]
[209.74873352 639.61090088]
[194.71163940 638.69769287]
[180.25492859 634.46087646]
[167.10369873 627.11285400]
[155.91764832 617.02227783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 192]
[9 191]
[12 188]
[13 187]
[14 186]
[16 184]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[25 177]
[26 176]
[27 175]
[28 159]
[29 158]
[30 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[42 147]
[45 146]
[46 145]
[68 144]
[69 143]
[70 142]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[78 131]
[79 130]
[81 128]
[82 127]
[83 126]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
