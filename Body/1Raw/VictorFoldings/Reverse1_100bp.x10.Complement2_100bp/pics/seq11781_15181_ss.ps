%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[100.93841553 492.49044800]
[89.18658447 482.91598511]
[81.42079163 469.89797974]
[78.57879639 455.00842285]
[81.00379181 440.04528809]
[88.40293884 426.81546021]
[99.88275909 416.91650391]
[114.05700684 411.54376221]
[113.83367920 396.54541016]
[113.61035156 381.54708862]
[105.15171051 372.89965820]
[104.84291077 360.40612793]
[113.39472961 350.75061035]
[113.39472961 335.75061035]
[113.39472961 320.75061035]
[113.39472961 305.75061035]
[110.71104431 301.80004883]
[110.48059082 296.12167358]
[113.62471008 290.30566406]
[114.07131195 275.31231689]
[113.40152740 260.32727051]
[111.61906433 245.43354797]
[109.83660126 230.53982544]
[108.05413055 215.64611816]
[104.92001343 212.04244995]
[104.01641846 206.43170166]
[106.44714355 200.28327942]
[105.10890961 185.34309387]
[103.77067566 170.40290833]
[102.43244171 155.46272278]
[100.31781769 140.61251831]
[97.43254089 125.89263153]
[82.56481934 119.31410980]
[74.50424194 105.19485474]
[76.39786530 89.04740143]
[87.50637054 77.17612457]
[84.40225983 62.50082016]
[81.29814911 47.82551956]
[77.97589111 33.19805908]
[74.43621826 18.62168312]
[70.89654541 4.04530716]
[67.35687256 -10.53106880]
[63.07723999 -15.57054138]
[62.12762451 -21.17368889]
[63.93568420 -25.59409142]
[60.83157349 -40.26939392]
[57.72746277 -54.94469452]
[42.66977310 -55.78201294]
[28.35305977 -60.48490524]
[15.75137520 -68.72708130]
[5.72044516 -79.94167328]
[-1.06043196 -93.36022186]
[-4.13438797 -108.06531525]
[-3.29776025 -123.05332947]
[1.38642430 -137.30291748]
[9.59315491 -149.84460449]
[20.75798035 -159.82676697]
[34.11582947 -166.57342529]
[31.01172066 -181.24873352]
[27.99632645 -184.37304688]
[26.30235481 -187.93605042]
[25.90544701 -191.46844482]
[26.63134956 -194.55708313]
[28.18718338 -196.88893127]
[25.96206665 -211.72297668]
[23.73694801 -226.55702209]
[21.51183128 -241.39106750]
[19.28671455 -256.22509766]
[16.07344055 -270.87689209]
[11.88642979 -285.28067017]
[7.69941807 -299.68444824]
[2.29896736 -307.05148315]
[3.55900955 -314.33392334]
[-0.41308662 -328.79846191]
[-4.38518286 -343.26296997]
[-8.35727882 -357.72750854]
[-12.32937527 -372.19201660]
[-16.30147171 -386.65655518]
[-31.25699234 -385.11309814]
[-46.26257324 -386.05245972]
[-60.90885544 -389.44897461]
[-74.79626465 -395.21002197]
[-87.54595947 -403.17840576]
[-98.81011200 -413.13674927]
[-108.28141785 -424.81341553]
[-115.70150757 -437.88980103]
[-120.86795044 -452.00921631]
[-123.63979340 -466.78643799]
[-123.94143677 -481.81838989]
[-121.76463318 -496.69491577]
[-117.16877747 -511.01022339]
[-110.27924347 -524.37377930]
[-101.28398895 -536.42095947]
[-90.42840576 -546.82318115]
[-78.00864410 -555.29663086]
[-64.36352539 -561.61016846]
[-49.86529541 -565.59149170]
[-34.90947723 -567.13208008]
[-19.90407753 -566.18981934]
[-5.25845289 -562.79052734]
[8.62785244 -557.02679443]
[21.37600899 -549.05596924]
[32.63823700 -539.09539795]
[42.10729980 -527.41693115]
[49.52486801 -514.33911133]
[54.68858719 -500.21871948]
[57.45758820 -485.44094849]
[57.75632858 -470.40896606]
[55.57666397 -455.53283691]
[50.97805023 -441.21841431]
[44.08594513 -427.85620117]
[35.08837128 -415.81072998]
[24.23078346 -405.41058350]
[11.80938911 -396.93954468]
[-1.83694756 -390.62866211]
[2.13514853 -376.16412354]
[6.10724497 -361.69958496]
[10.07934093 -347.23507690]
[14.05143738 -332.77053833]
[18.02353287 -318.30603027]
[22.10320091 -303.87145996]
[26.29021072 -289.46768188]
[30.47722244 -275.06390381]
[36.14175797 -288.95321655]
[48.35469437 -297.66207886]
[63.33172226 -298.49194336]
[76.43204498 -291.18566895]
[83.59638214 -278.00720215]
[82.60478973 -263.04000854]
[73.76452637 -250.92185974]
[59.81483459 -245.40766907]
[45.07818604 -248.20610046]
[34.12075806 -258.45022583]
[36.34587479 -243.61618042]
[38.57099152 -228.78213501]
[40.79610825 -213.94810486]
[43.02122879 -199.11405945]
[45.68702316 -184.35284424]
[48.79113388 -169.67753601]
[63.73676682 -168.91761780]
[77.98733521 -164.31130981]
[90.56958008 -156.16688538]
[100.62254333 -145.03448486]
[107.45649719 -131.66894531]
[110.60024261 -116.97861481]
[109.83361053 -101.96362305]
[105.20285797 -87.64779663]
[97.01792908 -75.00885010]
[85.83173370 -64.91160583]
[72.40276337 -58.04880524]
[75.50687408 -43.37350464]
[78.61098480 -28.69820023]
[81.93324280 -14.07074070]
[85.47291565 0.50563461]
[89.01258850 15.08201027]
[92.55226135 29.65838623]
[96.09239960 32.86407852]
[97.65632629 38.32770157]
[95.97344971 44.72140884]
[99.07756042 59.39670944]
[102.18167114 74.07201385]
[114.65493011 78.49992371]
[123.33601379 88.49127960]
[125.97857666 101.46068573]
[121.89881897 114.05210876]
[112.15243530 123.00736237]
[115.03770447 137.72724915]
[123.33305359 125.22976685]
[137.68482971 120.86779785]
[151.53158569 126.63559723]
[158.54277039 139.89617920]
[155.51296997 154.58700562]
[143.82736206 163.99162292]
[128.82846069 163.81036377]
[117.37262726 154.12448120]
[118.71086121 169.06466675]
[120.04909515 184.00485229]
[121.38732910 198.94503784]
[122.94785309 213.86364746]
[124.73031616 228.75737000]
[126.51277924 243.65107727]
[128.29524231 258.54479980]
[135.64266968 245.46751404]
[148.49366760 237.73112488]
[163.48902893 237.35789490]
[176.70898438 244.44538879]
[184.69789124 257.14096069]
[185.36744690 272.12600708]
[178.54264832 285.48348999]
[166.00746155 293.72177124]
[151.03858948 294.68740845]
[137.54881287 288.12796021]
[129.06466675 275.75891113]
[128.61805725 290.75225830]
[128.39472961 305.75061035]
[128.39472961 320.75061035]
[128.39472961 335.75061035]
[128.39472961 350.75061035]
[137.96942139 366.47976685]
[128.60868835 381.32376099]
[128.83201599 396.32208252]
[129.05534363 411.32043457]
[143.38328552 416.26876831]
[155.15274048 425.82156372]
[162.94250488 438.82522583]
[165.81193542 453.70950317]
[163.41452026 468.67709351]
[156.03976440 481.92053223]
[144.57820129 491.84063721]
[130.41387939 497.23950195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[13 198]
[14 197]
[15 196]
[16 195]
[19 194]
[20 193]
[21 182]
[22 181]
[23 180]
[24 179]
[27 178]
[28 177]
[29 176]
[30 175]
[31 167]
[32 166]
[36 161]
[37 160]
[38 159]
[39 156]
[40 155]
[41 154]
[42 153]
[45 152]
[46 151]
[47 150]
[58 139]
[59 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 123]
[70 122]
[71 121]
[73 120]
[74 119]
[75 118]
[76 117]
[77 116]
[78 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
