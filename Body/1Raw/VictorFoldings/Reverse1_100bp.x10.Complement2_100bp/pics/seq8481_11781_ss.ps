%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[102.72556305 474.34527588]
[115.65143585 466.34588623]
[113.20570374 451.54660034]
[110.75997925 436.74734497]
[108.31424713 421.94805908]
[105.86852264 407.14880371]
[103.31269073 392.36813354]
[100.64689636 377.60693359]
[97.98110199 362.84570312]
[88.22570038 355.69317627]
[85.88397980 343.41717529]
[92.74703979 332.49649048]
[90.30131531 317.69723511]
[87.85559082 302.89794922]
[83.66355133 296.81121826]
[85.48532867 287.86029053]
[83.26020813 273.02624512]
[78.17765808 287.13891602]
[68.83957672 298.87774658]
[56.23141479 307.00390625]
[41.68375778 310.65979004]
[26.73184586 309.45965576]
[12.95359612 303.53005981]
[1.80305612 293.49685669]
[-5.54302979 280.41882324]
[-8.30941200 265.67611694]
[-6.20414686 250.82460022]
[0.55059141 237.43154907]
[11.24195862 226.91040039]
[24.74167061 220.37145996]
[39.62506866 218.50479126]
[54.32147598 221.50740051]
[67.27993774 229.06240845]
[77.13292694 240.37252808]
[82.84067535 254.24433899]
[84.40119934 239.32574463]
[85.96171570 224.40713501]
[87.52223969 209.48852539]
[89.08276367 194.56991577]
[90.64328766 179.65132141]
[91.53610229 164.67791748]
[91.75942993 149.67958069]
[91.98275757 134.68124390]
[92.20608521 119.68289948]
[82.35883331 111.70259857]
[78.83544922 99.52724457]
[82.89897919 87.52135468]
[93.09275055 79.98871613]
[93.53935242 64.99536133]
[85.27880096 55.08950424]
[85.95944977 42.61070251]
[94.67180634 34.21895599]
[95.34159088 19.23391914]
[96.01137543 4.24887943]
[95.78804779 -10.74945736]
[94.67240143 -25.70791054]
[83.95435333 -40.68138504]
[92.18510437 -56.18046951]
[90.84687042 -71.12065887]
[89.50863647 -86.06083679]
[77.18542480 -92.23572540]
[69.58284760 -103.60319519]
[68.59780121 -117.13461304]
[74.38090515 -129.28779602]
[85.32503510 -136.93423462]
[84.20938873 -151.89268494]
[83.09374237 -166.85115051]
[74.35146332 -180.03761292]
[81.12071991 -193.30511475]
[80.00507355 -208.26356506]
[78.88941956 -223.22201538]
[77.77377319 -238.18048096]
[76.65812683 -253.13893127]
[61.65076447 -253.56695557]
[46.76696014 -255.53579712]
[32.16448593 -259.02459717]
[17.99813271 -263.99636841]
[4.41807747 -270.39840698]
[-8.43172550 -278.16284180]
[-20.41506195 -287.20739746]
[-31.40490150 -297.43615723]
[-41.28474426 -308.74069214]
[-49.94985962 -321.00119019]
[-57.30839539 -334.08767700]
[-63.28234100 -347.86141968]
[-67.80837250 -362.17642212]
[-70.83850861 -376.88092041]
[-72.34063721 -391.81903076]
[-72.29882812 -406.83242798]
[-70.71351624 -421.76196289]
[-67.60152435 -436.44937134]
[-62.99582672 -450.73892212]
[-56.94525528 -464.47918701]
[-49.51394653 -477.52447510]
[-40.78067398 -489.73651123]
[-30.83801842 -500.98583984]
[-19.79137611 -511.15322876]
[-7.75784731 -520.13092041]
[5.13500404 -527.82366943]
[18.75050735 -534.14996338]
[32.94433212 -539.04272461]
[47.56601334 -542.45013428]
[62.46055603 -544.33605957]
[77.47006226 -544.68048096]
[92.43543243 -543.47979736]
[107.19802094 -540.74664307]
[121.60134125 -536.51007080]
[135.49270630 -530.81494141]
[148.72485352 -523.72174072]
[161.15751648 -515.30548096]
[172.65890503 -505.65551758]
[183.10710144 -494.87408447]
[192.39134216 -483.07550049]
[200.41322327 -470.38479614]
[207.08769226 -456.93655396]
[212.34400940 -442.87329102]
[216.12643433 -428.34411621]
[218.39488220 -413.50302124]
[219.12532043 -398.50732422]
[218.30998230 -383.51602173]
[215.95753479 -368.68801880]
[212.09289551 -354.18048096]
[206.75703430 -340.14721680]
[200.00653076 -326.73696899]
[191.91291809 -314.09188843]
[182.56201172 -302.34606934]
[172.05293274 -291.62396240]
[160.49708557 -282.03927612]
[148.01696777 -273.69357300]
[134.74485779 -266.67535400]
[120.82147980 -261.05902100]
[106.39440918 -256.90408325]
[91.61657715 -254.25457764]
[92.73222351 -239.29612732]
[93.84787750 -224.33767700]
[94.96352386 -209.37921143]
[96.07917023 -194.42076111]
[104.74165344 -182.30421448]
[98.05219269 -167.96679688]
[99.16783905 -153.00834656]
[100.28349304 -138.04988098]
[114.51439667 -129.86705017]
[121.13000488 -114.66193390]
[117.34143829 -98.34789276]
[104.44882202 -87.39907074]
[105.78705597 -72.45889282]
[107.12528992 -57.51870346]
[116.20367432 -49.52435684]
[117.44084930 -37.08839417]
[109.63085175 -26.82356071]
[110.74650574 -11.86510658]
[119.75441742 -23.85916901]
[134.05758667 -28.37795639]
[148.32127380 -23.73607254]
[157.22549438 -11.66482830]
[157.44917297 3.33350420]
[148.90890503 15.66491604]
[134.78997803 20.73009491]
[120.35841370 16.63985634]
[110.99641418 4.91866493]
[110.32662964 19.90370369]
[109.65684509 34.88874054]
[118.57146454 50.00484467]
[108.53270721 65.44197083]
[108.08609772 80.43531799]
[119.67478943 92.18563843]
[119.30623627 108.68508911]
[107.20442200 119.90622711]
[106.98109436 134.90457153]
[106.75776672 149.90290833]
[106.53443909 164.90124512]
[118.02407837 155.25819397]
[132.97851562 156.42651367]
[142.83116150 167.73690796]
[141.93798828 182.71029663]
[130.81063843 192.76922607]
[115.82336426 192.15148926]
[105.56188965 181.21183777]
[104.00137329 196.13044739]
[102.44084930 211.04905701]
[100.88032532 225.96765137]
[99.31980133 240.88626099]
[97.75927734 255.80487061]
[98.09425354 270.80111694]
[100.31937408 285.63516235]
[102.65486145 300.45223999]
[105.10058594 315.25149536]
[107.54631042 330.05078125]
[119.55748749 344.00833130]
[112.74231720 360.17993164]
[115.40811157 374.94113159]
[118.07390594 389.70236206]
[122.67862701 397.59121704]
[120.66779327 404.70306396]
[123.11351776 419.50234985]
[125.55924988 434.30160522]
[128.00497437 449.10089111]
[130.45069885 463.90014648]
[145.26298523 467.31555176]
[157.63783264 476.14343262]
[165.68817139 489.03762817]
[168.18638611 504.03189087]
[164.75151062 518.83966064]
[155.90736389 531.20288086]
[143.00257874 539.23626709]
[128.00505066 541.71472168]
[113.20182037 538.26037598]
[100.85023499 529.39996338]
[92.83384705 516.48461914]
[90.37509155 501.48388672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[7 192]
[8 191]
[9 190]
[12 188]
[13 187]
[14 186]
[16 185]
[17 184]
[35 183]
[36 182]
[37 181]
[38 180]
[39 179]
[40 178]
[41 171]
[42 170]
[43 169]
[44 168]
[48 165]
[49 164]
[52 162]
[53 161]
[54 160]
[55 151]
[56 150]
[58 147]
[59 146]
[60 145]
[65 141]
[66 140]
[67 139]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
