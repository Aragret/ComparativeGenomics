%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[217.39790344 440.61749268]
[212.78388977 426.34475708]
[208.16987610 412.07202148]
[196.89280701 402.34182739]
[200.01002502 386.83074951]
[195.39601135 372.55801392]
[179.52552795 370.69302368]
[166.00796509 362.06231689]
[157.57688904 348.35098267]
[155.96345520 332.27749634]
[161.54118347 317.05471802]
[173.24102783 305.74774170]
[168.41503906 291.54528809]
[163.58903503 277.34283447]
[149.78730774 266.50405884]
[153.52427673 248.47306824]
[148.48736572 234.34403992]
[143.45043945 220.21501160]
[138.41352844 206.08598328]
[133.37661743 191.95693970]
[127.71382904 178.06692505]
[121.43646240 164.44360352]
[115.15910339 150.82028198]
[108.88174438 137.19697571]
[102.60438538 123.57365417]
[96.32701874 109.95034027]
[89.54702759 96.57006836]
[82.27380371 83.45137024]
[75.00057220 70.33267975]
[67.72734070 57.21398163]
[52.80093765 52.75975037]
[45.61172867 39.35192108]
[49.95014572 25.14932442]
[42.67691422 12.03063011]
[35.40368652 -1.08806384]
[28.13045692 -14.20675755]
[19.62362862 -26.56126595]
[9.96281910 -38.03596878]
[2.04184103 -42.58524323]
[0.24513564 -49.75418091]
[-9.24376297 -61.37144470]
[-18.73266029 -72.98870850]
[-28.22155952 -84.60597229]
[-43.70195770 -86.33657837]
[-53.15955734 -98.25331116]
[-51.41428757 -113.00083923]
[-60.90318680 -124.61810303]
[-70.39208221 -136.23536682]
[-79.88098145 -147.85263062]
[-89.36988068 -159.46989441]
[-98.85877991 -171.08715820]
[-108.34767914 -182.70442200]
[-120.87583160 -174.43179321]
[-134.17665100 -167.46908569]
[-148.11363220 -161.88774109]
[-162.54377747 -157.74502563]
[-177.31898499 -155.08346558]
[-192.28767395 -153.93035889]
[-207.29620361 -154.29756165]
[-222.19059753 -156.18127441]
[-236.81797791 -159.56219482]
[-251.02825928 -164.40560913]
[-264.67562866 -170.66183472]
[-277.62005615 -178.26664734]
[-289.72866821 -187.14202881]
[-300.87722778 -197.19689941]
[-310.95135498 -208.32807922]
[-319.84765625 -220.42134094]
[-327.47482300 -233.35260010]
[-333.75460815 -246.98913574]
[-338.62255859 -261.19104004]
[-342.02874756 -275.81256104]
[-343.93820190 -290.70367432]
[-344.33132935 -305.71154785]
[-343.20410156 -320.68218994]
[-340.56808472 -335.46197510]
[-336.45031738 -349.89926147]
[-330.89303589 -363.84588623]
[-323.95333862 -377.15869141]
[-315.70236206 -389.70114136]
[-306.22482300 -401.34445190]
[-295.61795044 -411.96920776]
[-283.99060059 -421.46633911]
[-271.46206665 -429.73843384]
[-258.16094971 -436.70056152]
[-244.22372437 -442.28128052]
[-229.79339600 -446.42337036]
[-215.01805115 -449.08425903]
[-200.04933167 -450.23669434]
[-185.04080200 -449.86886597]
[-170.14651489 -447.98446655]
[-155.51927185 -444.60290527]
[-141.30918884 -439.75888062]
[-127.66210175 -433.50204468]
[-114.71802521 -425.89666748]
[-102.60980225 -417.02075195]
[-91.46166992 -406.96539307]
[-81.38804626 -395.83377075]
[-72.49228668 -383.74011230]
[-64.86567688 -370.80853271]
[-58.58649063 -357.17172241]
[-53.71915054 -342.96960449]
[-50.31361008 -328.34793091]
[-48.40481186 -313.45672607]
[-48.01234436 -298.44885254]
[-49.14023590 -283.47824097]
[-51.77691269 -268.69854736]
[-55.89531708 -254.26145935]
[-61.45318985 -240.31509399]
[-68.39349365 -227.00257874]
[-76.64501190 -214.46051025]
[-86.12306976 -202.81759644]
[-96.73041534 -192.19331360]
[-87.24151611 -180.57604980]
[-77.75261688 -168.95878601]
[-68.26371765 -157.34152222]
[-58.77481842 -145.72425842]
[-49.28592300 -134.10699463]
[-39.79702377 -122.48973846]
[-24.99796104 -121.25550079]
[-15.20937634 -109.60911560]
[-16.60429573 -94.09487152]
[-7.11539793 -82.47760773]
[2.37350059 -70.86034393]
[11.86239910 -59.24308014]
[21.43751907 -47.69677734]
[31.09832954 -36.22207642]
[28.87388611 -51.05622101]
[32.79676819 -65.53417206]
[42.20589828 -77.21613312]
[55.51567078 -84.13349915]
[70.48316193 -85.12056732]
[84.58607483 -80.01099396]
[95.44783783 -69.66584015]
[101.23803711 -55.82844162]
[100.98092651 -40.83064651]
[94.71984100 -27.19984245]
[83.50988007 -17.23306274]
[69.24011230 -12.60988331]
[54.31525040 -14.10939121]
[41.24914932 -21.47998810]
[48.52238083 -8.36129284]
[55.79560852 4.75740099]
[63.06884003 17.87609482]
[77.41297150 21.72076607]
[84.97593689 34.92137909]
[80.84603882 49.94075394]
[88.11926270 63.05944824]
[95.39249420 76.17813873]
[102.66572571 89.29683685]
[109.24548340 75.81697083]
[123.85292816 72.40776062]
[135.71998596 81.58234406]
[136.09870911 96.57756042]
[124.70990753 106.33950043]
[109.95034027 103.67298126]
[116.22769928 117.29629517]
[122.50505829 130.91961670]
[128.78242493 144.54292297]
[135.05978394 158.16624451]
[141.33714294 171.78956604]
[147.53405762 158.12945557]
[161.52597046 152.72334290]
[175.29769897 158.66806030]
[180.96014404 172.55822754]
[175.26962280 186.43690491]
[161.48591614 192.35377502]
[147.50564575 186.92002869]
[152.54255676 201.04905701]
[157.57946777 215.17808533]
[162.61639404 229.30711365]
[167.65330505 243.43614197]
[178.95083618 249.65937805]
[182.85522461 261.53115845]
[177.79148865 272.51684570]
[182.61749268 286.71929932]
[187.44348145 300.92175293]
[201.52795410 302.09411621]
[214.06379700 308.52658081]
[223.17346191 319.21862793]
[227.50668335 332.53454590]
[226.44065857 346.45370483]
[220.16923523 358.87713623]
[209.66874695 367.94400024]
[214.28276062 382.21673584]
[225.88986206 392.96780396]
[222.44261169 407.45800781]
[227.05662537 421.73074341]
[231.67063904 436.00347900]
[246.73905945 435.22555542]
[261.49517822 438.37512207]
[274.93286133 445.23736572]
[286.13595581 455.34445190]
[294.34057617 468.00726318]
[298.98736572 482.36239624]
[299.75942993 497.43112183]
[296.60418701 512.18597412]
[289.73675537 525.62103271]
[279.62533569 536.82025146]
[266.95938110 545.01995850]
[252.60244751 549.66119385]
[237.53343201 550.42749023]
[222.77975464 547.26654053]
[209.34736633 540.39392090]
[198.15208435 530.27819824]
[189.95722961 517.60906982]
[185.32154846 503.25030518]
[184.56109619 488.18099976]
[187.72773743 473.42855835]
[194.60556030 459.99880981]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[5 185]
[6 184]
[12 177]
[13 176]
[14 175]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[21 161]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[27 150]
[28 149]
[29 148]
[30 147]
[33 144]
[34 143]
[35 142]
[36 141]
[37 127]
[38 126]
[40 125]
[41 124]
[42 123]
[43 122]
[46 119]
[47 118]
[48 117]
[49 116]
[50 115]
[51 114]
[52 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
