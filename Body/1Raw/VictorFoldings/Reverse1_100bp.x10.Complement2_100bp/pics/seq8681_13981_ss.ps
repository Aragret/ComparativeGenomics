%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[203.75337219 496.01736450]
[214.66192627 485.62741089]
[227.60922241 477.92578125]
[222.99522400 463.65304565]
[218.38121033 449.38031006]
[213.76719666 435.10757446]
[209.15318298 420.83483887]
[204.53918457 406.56210327]
[190.90036011 395.51904297]
[194.90536499 377.54568481]
[190.07937622 363.34323120]
[185.04244995 349.21420288]
[179.79573059 335.16171265]
[174.54901123 321.10925293]
[160.93391418 315.17929077]
[155.41281128 301.00283813]
[161.72500610 286.76226807]
[156.47828674 272.70977783]
[141.76655579 270.37948608]
[130.11903381 260.93536377]
[124.72689819 246.83602905]
[127.13181305 231.83226013]
[136.78678894 219.96934509]
[131.54006958 205.91688538]
[126.29335785 191.86441040]
[114.59305573 182.64746094]
[117.01455688 167.01266479]
[111.76783752 152.96018982]
[100.06753540 143.74325562]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.27834320 56.14085007]
[72.99325562 48.78485107]
[67.95633698 34.65582275]
[56.03428268 24.25509453]
[59.04857254 9.66868687]
[54.01165390 -4.46034288]
[48.97473907 -18.58937263]
[33.90128708 -17.77021408]
[19.22256851 -21.22817993]
[6.12622595 -28.67471313]
[-4.33060789 -39.49889374]
[-11.30663300 -52.81756592]
[-14.24406528 -67.54738617]
[-12.91323185 -82.49294281]
[-7.43050003 -96.44376373]
[1.75184047 -108.27236938]
[13.88287735 -117.02538300]
[8.84596157 -131.15441895]
[3.80904531 -145.28344727]
[-1.22787094 -159.41247559]
[-6.26478720 -173.54150391]
[-11.30170345 -187.67053223]
[-16.33861923 -201.79956055]
[-30.63912392 -213.40029907]
[-26.80644989 -230.52565002]
[-32.05316925 -244.57812500]
[-37.29988861 -258.63058472]
[-41.32728195 -261.95132446]
[-43.46447372 -266.07269287]
[-43.72300720 -270.14062500]
[-42.45174408 -273.42944336]
[-47.06575012 -287.70217896]
[-51.67975998 -301.97491455]
[-53.84854126 -287.13250732]
[-59.22288132 -273.12835693]
[-67.54055786 -260.64572144]
[-78.39572906 -250.29365540]
[-91.25875854 -242.57727051]
[-105.50201416 -237.87306213]
[-120.43054199 -236.41055298]
[-135.31594849 -238.26110840]
[-149.43194580 -243.33444214]
[-162.08978271 -251.38299561]
[-172.67184448 -262.01406860]
[-180.66181946 -274.70898438]
[-185.66984558 -288.84826660]
[-187.45158386 -303.74206543]
[-185.92010498 -318.66369629]
[-181.15011597 -332.88504028]
[-173.37435913 -345.71228027]
[-162.97224426 -356.51950073]
[-150.45129395 -364.77938843]
[-136.42243958 -370.08892822]
[-121.57019043 -372.18908691]
[-106.61920929 -370.97738647]
[-92.29899597 -366.51290894]
[-79.30826569 -359.01351929]
[-68.28085327 -348.84515381]
[-59.75481796 -336.50387573]
[-54.14794540 -322.59826660]
[-53.03229904 -337.55673218]
[-51.91664886 -352.51519775]
[-50.80100250 -367.47363281]
[-64.87974548 -372.97637939]
[-76.71001434 -382.38577271]
[-85.23986053 -394.86508179]
[-89.71081543 -409.30465698]
[-89.72532654 -424.42059326]
[-85.28211212 -438.86874390]
[-76.77624512 -451.36441040]
[-64.96407318 -460.79647827]
[-50.89591980 -466.32626343]
[-35.82271957 -467.46206665]
[-21.08476639 -464.10284424]
[-7.99255514 -456.54736328]
[2.28976727 -445.46740723]
[8.84790325 -431.84823608]
[11.09870720 -416.90081787]
[8.84204006 -401.95428467]
[2.27856231 -388.33767700]
[-8.00810528 -377.26174927]
[-21.10328102 -369.71139526]
[-35.84254837 -366.35800171]
[-36.95819473 -351.39953613]
[-38.07384491 -336.44107056]
[-39.18949509 -321.48263550]
[-37.40702820 -306.58889771]
[-32.79301834 -292.31616211]
[-28.17900848 -278.04345703]
[-23.24741554 -263.87731934]
[-18.00069809 -249.82482910]
[-12.75397968 -235.77236938]
[-1.88272953 -230.46742249]
[2.60340452 -218.80300903]
[-2.20958996 -206.83647156]
[2.82732630 -192.70744324]
[7.86424255 -178.57841492]
[12.90115833 -164.44938660]
[17.93807411 -150.32035828]
[22.97499084 -136.19132996]
[28.01190758 -122.06230164]
[42.94430161 -122.95724487]
[57.53857422 -119.60485840]
[70.61006165 -112.26850891]
[81.09523010 -101.53528595]
[88.13821411 -88.26907349]
[91.16069794 -73.54098511]
[89.90934753 -58.54290390]
[84.47706604 -44.49102402]
[75.29611206 -32.52722549]
[63.10376740 -23.62628937]
[68.14068604 -9.49725914]
[73.17760468 4.63177013]
[84.73938751 14.02189445]
[82.08536530 29.61890602]
[87.12228394 43.74793625]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[128.61709595 133.08380127]
[125.82031250 147.71347046]
[131.06703186 161.76594543]
[143.14260864 171.98802185]
[140.34582520 186.61769104]
[145.59254456 200.67016602]
[150.83926392 214.72264099]
[165.90635681 217.35516357]
[177.55586243 227.11148071]
[182.72344971 241.29464722]
[180.11541748 256.06130981]
[170.53076172 267.46307373]
[175.77748108 281.51553345]
[189.87799072 288.13467407]
[194.99873352 302.46063232]
[188.60148621 315.86251831]
[193.84820557 329.91500854]
[199.09492493 343.96746826]
[203.94308472 348.46267700]
[205.55178833 353.91329956]
[204.28182983 358.51721191]
[209.10781860 372.71966553]
[220.31144714 379.11041260]
[224.03865051 391.03903198]
[218.81192017 401.94808960]
[223.42591858 416.22082520]
[228.03993225 430.49356079]
[232.65394592 444.76629639]
[237.26794434 459.03903198]
[241.88195801 473.31176758]
[256.88748169 471.97695923]
[271.81375122 474.01516724]
[285.91204834 479.32418823]
[298.47521973 487.63769531]
[308.87310791 498.53869629]
[316.58416748 511.48040771]
[321.22155762 525.81365967]
[322.55273438 540.81951904]
[320.51089478 555.74530029]
[315.19848633 569.84228516]
[306.88192749 582.40344238]
[295.97839355 592.79870605]
[283.03482056 600.50659180]
[268.70046997 605.14050293]
[253.69427490 606.46807861]
[238.76899719 604.42260742]
[224.67327881 599.10675049]
[212.11413574 590.78717041]
[201.72152710 579.88116455]
[194.01676941 566.93572998]
[189.38630676 552.60021973]
[188.06240845 537.59368896]
[190.11148071 522.66894531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[8 182]
[10 179]
[11 178]
[12 175]
[13 174]
[14 173]
[17 170]
[18 169]
[23 164]
[24 163]
[25 162]
[27 160]
[28 159]
[30 157]
[31 156]
[33 154]
[34 153]
[35 152]
[37 151]
[38 150]
[40 148]
[41 147]
[42 146]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[57 131]
[58 130]
[60 127]
[61 126]
[62 125]
[66 124]
[67 123]
[68 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
