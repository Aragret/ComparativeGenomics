%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[34.18235016 677.85717773]
[26.55405235 691.00549316]
[14.47175789 700.22973633]
[-0.22207130 704.12329102]
[-15.28673363 702.09240723]
[-28.42497635 694.44683838]
[-37.63331604 682.35241699]
[-41.50754166 667.65350342]
[-39.45686722 652.59149170]
[-31.79400635 639.46331787]
[-19.68748474 630.27093506]
[-4.98346281 626.41601562]
[-2.97944903 611.55047607]
[-0.97543538 596.68493652]
[1.02857828 581.81945801]
[3.03259206 566.95391846]
[5.03660583 552.08837891]
[7.04061937 537.22283936]
[5.20510530 534.21234131]
[4.73657179 530.16320801]
[6.10729170 525.72760010]
[9.48041725 521.74401855]
[12.14621258 506.98278809]
[14.81200790 492.22155762]
[1.18881595 498.49920654]
[-12.28105927 491.89901733]
[-15.66812801 477.28643799]
[-6.47556734 465.43328857]
[8.52020741 465.07730103]
[18.26444054 476.47927856]
[22.02074051 461.95721436]
[16.15395355 451.37860107]
[19.16453934 439.24926758]
[29.96792030 432.20303345]
[33.94001770 417.73849487]
[37.91211319 403.27398682]
[32.20347595 392.60916138]
[35.39431381 380.52603149]
[46.30140686 373.64138794]
[50.48841858 359.23760986]
[53.59252930 344.56231689]
[55.59654236 329.69677734]
[53.46471786 325.42309570]
[53.99495697 319.76486206]
[57.88791656 314.42102051]
[60.33364487 299.62176514]
[62.77937317 284.82247925]
[65.22509766 270.02322388]
[67.67082977 255.22395325]
[65.66719055 250.88868713]
[66.36566162 245.24873352]
[70.41600037 240.02319336]
[73.30127716 225.30329895]
[76.18654633 210.58340454]
[79.07182312 195.86351013]
[81.95709229 181.14361572]
[84.84236908 166.42373657]
[87.72763824 151.70384216]
[89.73165131 136.83830261]
[90.84729767 121.87985992]
[91.96295166 106.92140198]
[92.40955353 91.92805481]
[92.18622589 76.92971802]
[91.96289825 61.93137741]
[91.73957062 46.93304062]
[83.04493713 37.40591431]
[83.16770172 24.90916443]
[91.49665833 16.13676262]
[91.49665833 1.13676286]
[91.27333069 -13.86157417]
[90.82672119 -28.85492516]
[78.79752350 -19.89399147]
[64.25337219 -23.56384087]
[57.91568756 -37.15919495]
[64.45636749 -50.65806961]
[79.05386353 -54.10958862]
[90.94670105 -44.97090149]
[91.61648560 -59.95594025]
[92.28627014 -74.94097900]
[92.95605469 -89.92601776]
[93.62583923 -104.91105652]
[86.51246643 -119.04295349]
[94.81035614 -131.41203308]
[95.48014069 -146.39707947]
[96.03835297 -161.38668823]
[96.48495483 -176.38003540]
[89.16197205 -190.40446472]
[97.27478027 -202.89572144]
[97.72138214 -217.88906860]
[98.16799164 -232.88241577]
[98.61459351 -247.87577820]
[88.31124115 -256.55075073]
[84.93470001 -269.38858032]
[89.50097656 -281.64544678]
[100.13302612 -288.92480469]
[100.80281067 -303.90985107]
[93.68943787 -318.04174805]
[101.98732758 -330.41085815]
[102.65711212 -345.39587402]
[103.32689667 -360.38092041]
[89.68623352 -367.15234375]
[79.98405457 -378.89065552]
[75.90132904 -393.56207275]
[78.14540100 -408.62475586]
[86.32748413 -421.46896362]
[99.02997589 -429.86935425]
[114.05209351 -432.37051392]
[128.79116821 -428.53912354]
[140.69355774 -419.03897095]
[147.69711304 -405.51602173]
[148.58840942 -390.31320190]
[143.21304321 -376.06451416]
[132.50231934 -365.23858643]
[118.31193542 -359.71112061]
[117.64215088 -344.72610474]
[116.97236633 -329.74105835]
[124.13364410 -316.68099976]
[115.78784943 -303.24008179]
[115.11806488 -288.25503540]
[126.98713684 -276.34017944]
[126.55799103 -259.18994141]
[113.60794830 -247.42916870]
[113.16133881 -232.43582153]
[112.71473694 -217.44247437]
[112.26812744 -202.44911194]
[119.62306213 -189.49711609]
[111.47830963 -175.93342590]
[111.03170013 -160.94007874]
[113.97465515 -154.16064453]
[110.46517944 -145.72729492]
[109.79539490 -130.74224854]
[116.95667267 -117.68218994]
[108.61087799 -104.24127197]
[107.94109344 -89.25623322]
[107.27130890 -74.27119446]
[106.60152435 -59.28615189]
[105.93173981 -44.30111313]
[105.82007599 -29.30153084]
[106.26667786 -14.30818081]
[109.06679535 -10.43927956]
[109.46621704 -4.77028656]
[106.49665833 1.13676286]
[106.49665833 16.13676262]
[116.07734680 30.83972931]
[106.73790741 46.70971298]
[106.96123505 61.70804977]
[107.18456268 76.70639038]
[107.40789032 91.70472717]
[118.60532379 81.72386932]
[133.58790588 82.44641113]
[143.77294922 93.45845032]
[143.32598877 108.45178986]
[132.50305176 118.83756256]
[117.50403595 118.66632843]
[106.92140198 108.03704834]
[105.80575562 122.99550629]
[104.69010162 137.95396423]
[115.37757111 127.42884064]
[130.19281006 125.08179474]
[143.61010742 131.78820801]
[150.62515259 145.04676819]
[148.62149048 159.91233826]
[138.34645081 170.84045410]
[123.63235474 173.75517273]
[109.96721649 167.56939697]
[102.44753265 154.58911133]
[99.56225586 169.30900574]
[96.67698669 184.02890015]
[93.79170990 198.74877930]
[90.90644073 213.46867371]
[88.02116394 228.18856812]
[85.13589478 242.90846252]
[82.47010040 257.66967773]
[80.02436829 272.46893311]
[77.57864380 287.26821899]
[75.13291931 302.06747437]
[72.68718719 316.86676025]
[70.46207428 331.70080566]
[68.45806122 346.56634521]
[78.84619141 335.74566650]
[93.22506714 331.47393799]
[107.83609772 334.86773682]
[118.85997772 345.03994751]
[123.41510773 359.33157349]
[120.31077576 374.00683594]
[110.35845184 385.22964478]
[96.15964508 390.06637573]
[81.42589569 387.25271606]
[70.00856781 377.52416992]
[64.89220428 363.42462158]
[60.70518875 377.82839966]
[65.50875854 395.60501099]
[52.37663651 407.24606323]
[48.40454102 421.71060181]
[44.43244553 436.17510986]
[49.50014496 453.87823486]
[36.54280090 465.71353149]
[32.78649902 480.23556519]
[29.57322502 494.88735962]
[26.90743065 509.64859009]
[24.24163437 524.40979004]
[21.90614700 539.22686768]
[19.90213394 554.09240723]
[17.89812088 568.95794678]
[15.89410686 583.82342529]
[13.89009285 598.68896484]
[11.88607883 613.55450439]
[9.88206577 628.42004395]
[23.04037857 636.03100586]
[32.28050232 648.10119629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[17 203]
[18 202]
[22 201]
[23 200]
[24 199]
[30 198]
[31 197]
[34 195]
[35 194]
[36 193]
[39 191]
[40 190]
[41 179]
[42 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 173]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[59 157]
[60 156]
[61 155]
[62 148]
[63 147]
[64 146]
[65 145]
[68 143]
[69 142]
[70 139]
[71 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 128]
[86 127]
[88 125]
[89 124]
[90 123]
[91 122]
[95 119]
[96 118]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
