%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[69.71108246 626.67498779]
[55.89328003 620.76519775]
[43.11067963 612.86181641]
[31.64884567 603.14154053]
[21.76383972 591.82147217]
[13.67650032 579.15447998]
[7.56749916 565.42358398]
[3.57331395 550.93548584]
[1.78317642 536.01391602]
[2.23707867 520.99224854]
[4.92488050 506.20596313]
[9.78653526 491.98550415]
[16.71343231 478.64849854]
[25.55082130 466.49288940]
[36.10127258 455.79031372]
[48.12908554 446.77978516]
[61.36555099 439.66265869]
[75.51496887 434.59790039]
[90.26123047 431.69866943]
[89.59143829 416.71365356]
[88.92165375 401.72860718]
[88.25186920 386.74356079]
[79.95398712 374.37448120]
[87.06735992 360.24258423]
[86.39757538 345.25753784]
[85.72779083 330.27249146]
[74.83248901 340.58233643]
[59.83502960 340.30618286]
[49.32664108 329.60226440]
[49.32699966 314.60226440]
[59.83590317 303.89886475]
[74.83337402 303.62344360]
[85.72779083 313.93292236]
[86.39757538 298.94787598]
[87.06735992 283.96286011]
[87.73714447 268.97781372]
[85.64036560 266.14306641]
[84.81245422 262.15185547]
[85.78198242 257.61166382]
[88.78625488 253.34301758]
[90.12448883 238.40283203]
[91.46272278 223.46264648]
[84.89175415 210.09584045]
[93.82939148 197.04098511]
[95.16762543 182.10079956]
[95.50260162 167.10453796]
[94.83281708 152.11950684]
[94.16303253 137.13446045]
[93.49324036 122.14942932]
[92.82345581 107.16439056]
[89.34608459 99.89249420]
[92.25693512 91.95159912]
[91.81033325 76.95825195]
[88.42680359 68.47357941]
[91.47036743 61.73871231]
[91.24703979 46.74037552]
[80.56660461 38.53410339]
[76.62019348 25.85986519]
[80.63461304 13.41131115]
[90.93102264 5.66446877]
[90.93102264 -9.33553123]
[78.33687592 -21.47665215]
[78.41854858 -38.63206482]
[90.63710785 -50.18825912]
[90.41378021 -65.18659973]
[81.71914673 -74.71372986]
[81.84191132 -87.21047211]
[90.17086792 -95.98287201]
[90.17086792 -110.98287201]
[90.17086792 -125.98287201]
[90.17086792 -140.98287964]
[90.17086792 -155.98287964]
[90.17086792 -170.98287964]
[90.17086792 -185.98287964]
[90.17086792 -200.98287964]
[74.22243500 -211.56507874]
[67.92408752 -229.47988892]
[73.65013885 -247.42817688]
[88.91432953 -258.21231079]
[88.24454498 -273.19735718]
[87.57476044 -288.18237305]
[86.90497589 -303.16741943]
[71.94765472 -304.59036255]
[57.33395767 -308.08120728]
[43.34833527 -313.57199097]
[30.26302719 -320.95581055]
[18.33273888 -330.08895874]
[7.78969955 -340.79364014]
[-1.16086888 -352.86151123]
[-8.34473991 -366.05764771]
[-13.62207890 -380.12518311]
[-16.89015961 -394.79031372]
[-18.08536720 -409.76754761]
[-17.18443871 -424.76535034]
[-14.20490837 -439.49182129]
[-9.20477581 -453.66027832]
[-2.28136992 -466.99490356]
[6.43054390 -479.23617554]
[16.76138496 -490.14578247]
[28.51006317 -499.51141357]
[41.44788361 -507.15072632]
[55.32300949 -512.91497803]
[69.86535645 -516.69207764]
[84.79185486 -518.40838623]
[99.81195068 -518.03057861]
[114.63328552 -515.56597900]
[128.96734619 -511.06256104]
[142.53511047 -504.60797119]
[155.07250977 -496.32788086]
[166.33546448 -486.38342285]
[176.10475159 -474.96820068]
[184.19020081 -462.30441284]
[190.43443298 -448.63858032]
[194.71591187 -434.23666382]
[196.95129395 -419.37902832]
[197.09706116 -404.35488892]
[195.15036011 -389.45666504]
[191.14910889 -374.97439575]
[185.17118835 -361.18997192]
[177.33296204 -348.37170410]
[167.78698730 -336.76910400]
[156.71908569 -326.60800171]
[144.34471130 -318.08621216]
[130.90472412 -311.36959839]
[116.66073608 -306.58892822]
[101.89001465 -303.83721924]
[102.55979919 -288.85217285]
[103.22958374 -273.86712646]
[103.89936829 -258.88208008]
[114.20198059 -254.60343933]
[122.20035553 -246.75332642]
[126.71214294 -236.43855286]
[127.05044556 -225.13394165]
[123.12812805 -214.47151184]
[115.47589874 -206.00488281]
[105.17086792 -200.98287964]
[105.17086792 -185.98287964]
[105.17086792 -170.98287964]
[105.17086792 -155.98287964]
[105.17086792 -140.98287964]
[105.17086792 -125.98287201]
[105.17086792 -110.98287201]
[105.17086792 -95.98287201]
[114.75155640 -81.27990723]
[105.41211700 -65.40992737]
[105.63544464 -50.41158676]
[116.04604340 -42.81890106]
[120.24536896 -30.43149757]
[116.48809052 -17.69990730]
[105.93102264 -9.33553123]
[105.93102264 5.66446877]
[118.32027435 17.03746796]
[118.65736389 34.18976212]
[106.24537659 46.51704407]
[106.46870422 61.51538467]
[106.80368042 76.51164246]
[107.25028992 91.50498962]
[107.80849457 106.49460602]
[108.47827911 121.47964478]
[109.14807129 136.46467590]
[109.81785583 151.44972229]
[110.48764038 166.43475342]
[119.26977539 154.27441406]
[133.19290161 148.69349670]
[147.94277954 151.42131042]
[158.94900513 161.61262512]
[162.80117798 176.10955811]
[158.30566406 190.42004395]
[146.85543823 200.10986328]
[131.99848938 202.17648315]
[118.33839417 195.97956848]
[110.10781097 183.43904114]
[108.76957703 198.37922668]
[115.24482727 212.81465149]
[106.40290833 224.80088806]
[105.06467438 239.74107361]
[103.72644043 254.68125916]
[102.72218323 269.64758301]
[102.05239868 284.63262939]
[101.38261414 299.61767578]
[100.71282959 314.60272217]
[100.71282959 329.60272217]
[101.38261414 344.58773804]
[102.05239868 359.57278442]
[110.39819336 373.01370239]
[103.23690796 386.07379150]
[103.90669250 401.05880737]
[104.57647705 416.04385376]
[105.24626923 431.02890015]
[120.19237518 432.60095215]
[134.73722839 436.38317871]
[148.55586243 442.29101562]
[161.33959961 450.19253540]
[172.80281067 459.91119385]
[182.68943787 471.22985840]
[190.77857971 483.89569092]
[196.88952637 497.62573242]
[200.88578796 512.11322021]
[202.67803955 527.03454590]
[202.22628784 542.05633545]
[199.54058838 556.84295654]
[194.68095398 571.06414795]
[187.75596619 584.40209961]
[178.92030334 596.55895996]
[168.37136841 607.26306152]
[156.34484863 616.27526855]
[143.10939026 623.39428711]
[128.96069336 628.46105957]
[114.21485138 631.36242676]
[99.20127869 632.03344727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 189]
[20 188]
[21 187]
[22 186]
[24 184]
[25 183]
[26 182]
[33 181]
[34 180]
[35 179]
[36 178]
[40 177]
[41 176]
[42 175]
[44 173]
[45 172]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[52 157]
[53 156]
[55 155]
[56 154]
[60 151]
[61 150]
[64 146]
[65 145]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[79 129]
[80 128]
[81 127]
[82 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
