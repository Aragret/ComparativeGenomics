%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[58.51574707 531.86456299]
[59.65846634 516.88433838]
[62.83042145 502.19921875]
[67.97252655 488.08282471]
[74.98897552 474.79812622]
[83.74906921 462.59262085]
[94.08959961 451.69366455]
[105.81793976 442.30432129]
[118.71559143 434.59948730]
[112.84662628 420.79531860]
[106.97766876 406.99114990]
[101.10871124 393.18695068]
[95.23974609 379.38278198]
[94.40378571 394.35946655]
[90.30027008 408.78726196]
[83.12940979 421.96218872]
[73.24108887 433.24142456]
[61.11777878 442.07461548]
[47.35100555 448.03079224]
[32.61248016 450.81933594]
[17.62133217 450.30416870]
[3.10900497 446.51043701]
[-10.21640778 439.62326050]
[-21.70473099 429.97863770]
[-30.79542542 418.04721069]
[-37.04493332 404.41107178]
[-40.14832687 389.73562622]
[-39.95418930 374.73687744]
[-36.47198868 360.14666748]
[-29.87162971 346.67687988]
[-20.47515869 334.98474121]
[-8.74105263 325.64071655]
[4.75815725 319.10073853]
[19.36381531 315.68389893]
[34.36327744 315.55691528]
[49.02468872 318.72598267]
[62.63268280 325.03649902]
[74.52330017 334.18054199]
[84.11637115 345.71191406]
[90.94147491 359.06185913]
[90.71814728 344.06350708]
[90.49481964 329.06518555]
[90.27149200 314.06683350]
[90.04816437 299.06851196]
[89.82483673 284.07015991]
[80.11048889 278.08706665]
[74.43188477 268.05364990]
[74.30045319 256.40560913]
[79.86451721 246.03536987]
[89.84375000 239.57382202]
[90.06707764 224.57548523]
[82.52012634 211.73442078]
[90.46203613 198.05097961]
[90.68536377 183.05264282]
[90.90869141 168.05430603]
[91.13201904 153.05596924]
[82.93459320 144.16053772]
[82.99790192 131.66334534]
[91.83341980 122.26672363]
[92.28002167 107.27336884]
[91.94504547 92.27711487]
[90.82939911 77.31865692]
[89.71374512 62.36020660]
[78.56380463 54.80419540]
[73.87000275 42.38732147]
[77.13636017 29.72189713]
[86.95340729 21.37593651]
[86.06059265 6.40253115]
[85.16777802 -8.57087517]
[84.27496338 -23.54428101]
[83.38214874 -38.51768494]
[82.48932648 -53.49109268]
[81.37368011 -68.44954681]
[80.03544617 -83.38973236]
[78.69721222 -98.32991791]
[76.69319916 -113.19544220]
[74.02740479 -127.95665741]
[71.36161041 -142.71788025]
[59.14395523 -156.49505615]
[65.71760559 -172.76631165]
[62.83232880 -187.48620605]
[59.94705582 -202.20610046]
[57.06178284 -216.92599487]
[54.17650986 -231.64588928]
[51.29123688 -246.36576843]
[36.23477173 -246.70758057]
[21.60390091 -250.27853394]
[8.08294106 -256.91162109]
[-3.69570899 -266.29656982]
[-13.18113899 -277.99447632]
[-19.92970085 -291.45816040]
[-23.62574768 -306.05792236]
[-24.09641457 -321.11093140]
[-21.31968307 -335.91308594]
[-15.42542648 -349.77206421]
[-6.68933153 -362.03970337]
[4.47999954 -372.14218140]
[17.56015778 -379.60699463]
[31.93935776 -384.08502197]
[46.94506073 -385.36679077]
[61.87542343 -383.39236450]
[76.03212738 -378.25408936]
[88.75302887 -370.19229126]
[99.44315338 -359.58401489]
[107.60250854 -346.92547607]
[112.84946442 -332.80868530]
[114.93861389 -317.89395142]
[113.77223206 -302.87881470]
[109.40488434 -288.46563721]
[102.04083252 -275.32846069]
[92.02451324 -264.08181763]
[79.82440948 -255.25166321]
[66.01113129 -249.25105286]
[68.89640045 -234.53115845]
[71.78167725 -219.81126404]
[74.66694641 -205.09136963]
[77.55222321 -190.37147522]
[80.43749237 -175.65159607]
[90.29830170 -168.64509583]
[92.82254028 -156.40531921]
[86.12282562 -145.38366699]
[88.78862000 -130.62245178]
[91.45441437 -115.86123657]
[100.87464142 -127.53425598]
[115.77454376 -129.26426697]
[127.61878204 -120.06024933]
[129.62243652 -105.19467163]
[120.63772583 -93.18321991]
[105.81150055 -90.90659332]
[93.63739777 -99.66815186]
[94.97563171 -84.72796631]
[96.31386566 -69.78778076]
[99.33930206 -66.09240723]
[100.07543945 -60.45723724]
[97.46273804 -54.38390732]
[98.35555267 -39.41050339]
[99.24836731 -24.43709564]
[100.14118195 -9.46369076]
[101.03399658 5.50971508]
[101.92681122 20.48312187]
[114.97103882 31.09853363]
[116.32845306 48.20035553]
[104.67220306 61.24455643]
[105.78784943 76.20301056]
[106.90349579 91.16146088]
[116.62516022 79.73827362]
[131.39358521 77.11265564]
[144.45683289 84.48500061]
[149.84255981 98.48477936]
[145.08851624 112.71147919]
[132.36814880 120.66084290]
[117.49705505 118.69853210]
[107.27336884 107.71997833]
[106.82676697 122.71332550]
[115.92889404 138.72059631]
[106.13035583 153.27929688]
[105.90702820 168.27763367]
[105.68370056 183.27597046]
[105.46037292 198.27430725]
[112.99134827 212.18815613]
[105.06541443 224.79881287]
[104.84208679 239.79714966]
[118.54636383 252.87794495]
[118.34097290 271.50241089]
[104.82317352 283.84683228]
[105.04650116 298.84518433]
[105.26982880 313.84350586]
[105.49315643 328.84185791]
[105.71648407 343.84017944]
[105.93981171 358.83853149]
[109.04392242 373.51382446]
[114.91288757 387.31799316]
[120.78184509 401.12219238]
[126.65081024 414.92636108]
[132.51976013 428.73052979]
[147.01705933 424.78817749]
[161.91615295 422.85662842]
[176.93948364 422.97192383]
[191.80717468 425.13189697]
[206.24226379 429.29629517]
[219.97581482 435.38754272]
[232.75198364 443.29217529]
[244.33276367 452.86294556]
[254.50241089 463.92150879]
[263.07147217 476.26187134]
[269.88031006 489.65417480]
[274.80209351 503.84887695]
[277.74508667 518.58160400]
[278.65451050 533.57781982]
[277.51342773 548.55816650]
[274.34304810 563.24365234]
[269.20248413 577.36059570]
[262.18746948 590.64605713]
[253.42869568 602.85247803]
[243.08935547 613.75256348]
[231.36203003 623.14318848]
[218.46520996 630.84942627]
[204.63916016 636.72766113]
[190.14143372 640.66845703]
[175.24212646 642.59838867]
[160.21881104 642.48144531]
[145.35134888 640.31988525]
[130.91671753 636.15393066]
[117.18383789 630.06121826]
[104.40851593 622.15515137]
[92.82877350 612.58319092]
[82.66031647 601.52349854]
[74.09259033 589.18218994]
[67.28520203 575.78918457]
[62.36497116 561.59393311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[40 170]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[50 162]
[51 161]
[53 159]
[54 158]
[55 157]
[56 156]
[59 154]
[60 153]
[61 145]
[62 144]
[63 143]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 132]
[74 131]
[75 130]
[76 123]
[77 122]
[78 121]
[80 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
