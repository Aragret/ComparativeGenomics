%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[-27.60239029 509.69622803]
[-27.94177246 524.71722412]
[-30.36844826 539.54479980]
[-34.83518219 553.89038086]
[-41.25503159 567.47460938]
[-49.50302887 580.03314209]
[-59.41862488 591.32147217]
[-70.80880737 601.11993408]
[-83.45186615 609.23779297]
[-97.10169983 615.51696777]
[-111.49260712 619.83526611]
[-126.34447479 622.10870361]
[-141.36819458 622.29284668]
[-156.27133179 620.38433838]
[-170.76379395 616.42010498]
[-184.56347656 610.47747803]
[-197.40176392 602.67205811]
[-209.02876282 593.15582275]
[-219.21813965 582.11395264]
[-227.77156067 569.76141357]
[-234.52253723 556.33868408]
[-239.33964539 542.10699463]
[-242.12913513 527.34332275]
[-242.83670044 512.33514404]
[-241.44856262 497.37457275]
[-237.99174500 482.75277710]
[-232.53353882 468.75442505]
[-225.18019104 455.65194702]
[-216.07484436 443.70043945]
[-205.39471436 433.13253784]
[-193.34770203 424.15390015]
[-180.16831970 416.93933105]
[-166.11309814 411.62927246]
[-151.45562744 408.32705688]
[-136.48120117 407.09701538]
[-121.48133850 407.96301270]
[-106.74798584 410.90826416]
[-92.56793976 415.87542725]
[-85.68852997 402.54598999]
[-78.80912018 389.21655273]
[-71.92970276 375.88714600]
[-65.05029297 362.55770874]
[-79.91577911 364.56201172]
[-90.85635376 354.30023193]
[-89.80702209 339.33697510]
[-77.54132080 330.70260620]
[-63.10106277 334.76205444]
[-57.13101578 348.52117920]
[-49.27925873 335.74032593]
[-41.42750549 322.95950317]
[-33.57574844 310.17864990]
[-25.81935692 297.33969116]
[-18.15876007 284.44338989]
[-10.49816322 271.54705811]
[-21.18771553 261.06747437]
[-29.06316376 248.32629395]
[-33.66302490 234.06188965]
[-34.71578598 219.10209656]
[-32.15591812 204.31619263]
[-26.12794876 190.56439209]
[-16.97829056 178.64782715]
[-5.23536205 169.26182556]
[8.42095184 162.95536804]
[23.19864845 160.09899902]
[38.23954391 160.86300659]
[52.66912079 165.20732117]
[60.32971573 152.31098938]
[67.99031067 139.41465759]
[75.65090942 126.51833344]
[83.31150818 113.62200928]
[90.97210693 100.72567749]
[90.55950928 96.89134216]
[91.83903503 92.89376068]
[94.84568787 89.49272156]
[99.27371979 87.43543243]
[107.50252533 74.89403534]
[115.73133087 62.35263443]
[123.96014404 49.81123352]
[132.18894958 37.26983261]
[140.41775513 24.72843361]
[146.38931274 10.96832943]
[149.92898560 -3.60804582]
[153.46865845 -18.18442154]
[156.89971924 -32.78674316]
[160.22198486 -47.41420364]
[163.54425049 -62.04166412]
[166.86650085 -76.66912079]
[165.32093811 -81.65493011]
[165.79496765 -86.27322388]
[167.81044006 -89.81623840]
[170.67752075 -91.86858368]
[174.64962769 -106.33310699]
[167.09211731 -119.95374298]
[171.32643127 -134.56623840]
[184.35820007 -141.68724060]
[188.33030701 -156.15176392]
[192.30239868 -170.61628723]
[196.27449036 -185.08081055]
[200.24659729 -199.54533386]
[204.21868896 -214.00985718]
[190.84350586 -220.92347717]
[179.19827271 -230.46717834]
[169.79208374 -242.22377014]
[163.03611755 -255.67927551]
[159.22572327 -270.24548340]
[158.52748108 -285.28564453]
[160.97189331 -300.14224243]
[166.45213318 -314.16580200]
[174.72860718 -326.74331665]
[185.43951416 -337.32492065]
[198.11660767 -345.44802856]
[212.20570374 -350.75753784]
[227.09089661 -353.02136230]
[242.12145996 -352.14050293]
[256.64031982 -348.15347290]
[270.01278687 -341.23458862]
[281.65426636 -331.68630981]
[291.05581665 -319.92602539]
[297.80648804 -306.46786499]
[301.61117554 -291.90014648]
[302.30349731 -276.85974121]
[299.85321045 -262.00408936]
[294.36746216 -247.98268127]
[286.08605957 -235.40843201]
[275.37097168 -224.83103943]
[262.69070435 -216.71292114]
[248.59950256 -211.40895081]
[233.71342468 -209.15098572]
[218.68321228 -210.03776550]
[214.71112061 -195.57324219]
[210.73901367 -181.10871887]
[206.76692200 -166.64418030]
[202.79483032 -152.17965698]
[198.82272339 -137.71513367]
[206.39012146 -124.93741608]
[202.56790161 -110.21175385]
[189.11415100 -102.36100769]
[185.14205933 -87.89648438]
[181.49395752 -73.34686279]
[178.17170715 -58.71940613]
[174.84944153 -44.09194565]
[171.52719116 -29.46448326]
[173.11114502 -22.24556160]
[168.04504395 -14.64474869]
[164.50537109 -0.06837334]
[160.96569824 14.50800228]
[170.62846375 3.03494596]
[182.81114197 -5.71618795]
[196.76875305 -11.21026421]
[211.64779663 -13.11131859]
[226.53840637 -11.30310059]
[240.53002930 -5.89618301]
[252.76704407 2.77879882]
[262.50119019 14.19136620]
[269.13717651 27.64363670]
[272.26922607 42.31299973]
[271.70584106 57.30241394]
[267.48144531 71.69527435]
[259.85437012 84.61145782]
[249.29100037 95.26111603]
[236.43731689 102.99304199]
[222.07929993 107.33441162]
[207.09497070 108.01974487]
[192.40060425 105.00714874]
[178.89479065 98.48082733]
[167.40339661 88.83988190]
[158.62913513 76.67385101]
[153.10855103 62.72669601]
[151.17922974 47.85128784]
[152.95915222 32.95724106]
[144.73034668 45.49864197]
[136.50154114 58.04004288]
[128.27273560 70.58144379]
[120.04392242 83.12284088]
[111.81511688 95.66424561]
[103.86843109 108.38627625]
[96.20783234 121.28260803]
[88.54724121 134.17892456]
[80.88664246 147.07525635]
[73.22604370 159.97158813]
[65.56544495 172.86791992]
[76.28296661 183.46133423]
[84.14881897 196.30424500]
[88.70947266 210.64787292]
[89.70397186 225.65710449]
[87.07883453 240.45921326]
[80.99093628 254.19450378]
[71.79811859 266.06631470]
[60.03818130 275.38726807]
[46.39741516 281.61889648]
[31.67053604 284.40295410]
[16.71440697 283.58184814]
[2.39816403 279.20764160]
[-5.26243353 292.10397339]
[-12.92303085 305.00030518]
[-14.61520672 313.97662354]
[-20.79490662 318.03039551]
[-28.64666176 330.81124878]
[-36.49841690 343.59210205]
[-44.35017395 356.37292480]
[-51.72086334 369.43710327]
[-58.60027313 382.76654053]
[-65.47969055 396.09597778]
[-72.35910034 409.42541504]
[-79.23851013 422.75482178]
[-66.97499084 431.43539429]
[-56.03897476 441.73828125]
[-46.64332962 453.46295166]
[-38.97095108 466.38119507]
[-33.17117691 480.24151611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 205]
[39 204]
[40 203]
[41 202]
[42 201]
[48 200]
[49 199]
[50 198]
[51 197]
[52 195]
[53 194]
[54 193]
[66 181]
[67 180]
[68 179]
[69 178]
[70 177]
[71 176]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[81 146]
[82 145]
[83 144]
[84 142]
[85 141]
[86 140]
[87 139]
[91 138]
[92 137]
[95 134]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
