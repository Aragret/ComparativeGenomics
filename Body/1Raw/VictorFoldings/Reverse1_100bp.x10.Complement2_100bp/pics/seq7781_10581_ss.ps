%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[145.63642883 451.26614380]
[148.69338989 436.56271362]
[153.46795654 422.32403564]
[159.89309692 408.75000000]
[167.87861633 396.03121948]
[177.31240845 384.34619141]
[188.06204224 373.85894775]
[199.97660828 364.71676636]
[192.31600952 351.82043457]
[184.65541077 338.92413330]
[176.89901733 326.08517456]
[169.04725647 313.30435181]
[161.19551086 300.52349854]
[153.34375000 287.74264526]
[148.98918152 285.78134155]
[145.82046509 281.06369019]
[145.45504761 274.46231079]
[137.98730469 261.45336914]
[130.51956177 248.44441223]
[123.05181885 235.43545532]
[115.58407593 222.42649841]
[111.28983307 220.33639526]
[108.26299286 215.52648926]
[108.09426880 208.91717529]
[101.01716614 195.69165039]
[101.48534393 210.68434143]
[99.05944824 225.48687744]
[93.83018494 239.54585266]
[85.99304199 252.33566284]
[75.84102631 263.37814331]
[63.75366974 272.26046753]
[50.18287277 278.65057373]
[35.63598633 282.30957031]
[20.65686035 283.10064697]
[5.80549908 280.99420166]
[-8.36287022 276.06903076]
[-21.31855202 268.50924683]
[-32.57718658 258.59747314]
[-41.71786499 246.70429993]
[-48.39885712 233.27430725]
[-52.37038422 218.80963135]
[-53.48397064 203.85102844]
[-51.69798279 188.95773315]
[-47.07919693 174.68653870]
[-39.80028152 161.57099915]
[-30.13336754 150.10144043]
[-18.43985939 140.70666504]
[-5.15692997 133.73789978]
[9.21883202 129.45565796]
[24.14997673 128.02008057]
[39.07829285 129.48478699]
[53.44567108 133.79505920]
[66.71498108 140.78971863]
[78.39014435 150.20729065]
[88.03466034 161.69569397]
[95.28556061 174.81980896]
[94.61577606 159.83476257]
[93.94599152 144.84973145]
[90.50695038 138.30795288]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[89.85394287 40.96748734]
[89.18415833 25.98244858]
[88.51436615 10.99740887]
[80.16857910 -2.44351006]
[87.32985687 -15.50357628]
[86.66007233 -30.48861504]
[85.99028778 -45.47365570]
[85.32050323 -60.45869446]
[84.65071869 -75.44373322]
[83.86939240 -90.42337036]
[82.75374603 -105.38182068]
[81.41551208 -120.32200623]
[80.07727814 -135.26219177]
[78.73904419 -150.20237732]
[66.89468384 -160.31913757]
[65.75035095 -175.48968506]
[75.46813965 -186.71911621]
[74.12990570 -201.65930176]
[72.79167175 -216.59948730]
[71.45343781 -231.53967285]
[57.82633209 -242.50878906]
[56.37715149 -259.60308838]
[67.51599121 -272.20327759]
[65.95546722 -287.12188721]
[64.39494324 -302.04049683]
[49.47497177 -304.24166870]
[35.57146835 -310.08489990]
[23.55842018 -319.20288086]
[14.19097614 -331.02243042]
[8.05798435 -344.80056763]
[5.54496813 -359.67120361]
[6.80989838 -374.69952393]
[11.77326012 -388.94088745]
[20.12305260 -401.50000000]
[31.33440208 -411.58743286]
[44.70254898 -418.56909180]
[59.38716888 -422.00607300]
[74.46516418 -421.68234253]
[88.98873138 -417.61822510]
[102.04489136 -410.06924438]
[112.81293488 -399.50988770]
[120.61597443 -386.60394287]
[124.96349335 -372.16265869]
[125.58221436 -357.09390259]
[122.43323517 -342.34484863]
[115.71451569 -328.84262085]
[105.84838104 -317.43603516]
[93.45504761 -308.84210205]
[79.31355286 -303.60101318]
[80.87407684 -288.68240356]
[82.43459320 -273.76379395]
[93.48107147 -267.13018799]
[98.76879120 -255.16680908]
[96.16236115 -242.15078735]
[86.39361572 -232.87789917]
[87.73185730 -217.93772888]
[89.07009125 -202.99754333]
[90.40832520 -188.05735779]
[101.96710205 -178.73371887]
[103.53708649 -163.60130310]
[93.67922974 -151.54061890]
[95.01746368 -136.60043335]
[96.35569763 -121.66024017]
[97.69393158 -106.72005463]
[100.71936035 -103.02468109]
[101.45550537 -97.38951111]
[98.84280396 -91.31618500]
[102.37885284 -84.82633972]
[99.63575745 -76.11351776]
[100.30554199 -61.12847900]
[100.97532654 -46.14344025]
[101.64511108 -31.15839958]
[102.31489563 -16.17336082]
[110.61278534 -3.80427241]
[103.49940491 10.32762432]
[104.16919708 25.31266212]
[104.83898163 40.29770279]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[108.93103027 144.17994690]
[109.60081482 159.16497803]
[110.27059937 174.15002441]
[114.24269104 188.61454773]
[121.31980133 201.84007263]
[128.59303284 214.95875549]
[136.06077576 227.96771240]
[143.52851868 240.97666931]
[150.99624634 253.98562622]
[158.46398926 266.99456787]
[166.12458801 279.89089966]
[173.97634888 292.67175293]
[181.82810974 305.45257568]
[189.67985535 318.23342896]
[196.83834839 323.90737915]
[197.55172729 331.26351929]
[205.21232605 344.15985107]
[212.87292480 357.05618286]
[226.60069275 350.96646118]
[240.95237732 346.54315186]
[255.72648621 343.84835815]
[270.71563721 342.91989136]
[285.70938110 343.77078247]
[300.49722290 346.38912964]
[314.87161255 350.73809814]
[328.63070679 356.75671387]
[341.58135986 364.36044312]
[353.54177856 373.44256592]
[364.34405518 383.87554932]
[373.83654785 395.51293945]
[381.88595581 408.19140625]
[388.37933350 421.73291016]
[393.22549438 435.94738770]
[396.35641479 450.63525391]
[397.72811890 465.59033203]
[397.32141113 480.60269165]
[395.14190674 495.46157837]
[391.22030640 509.95837402]
[385.61157227 523.88958740]
[378.39450073 537.05963135]
[369.67037964 549.28363037]
[359.56170654 560.38995361]
[348.21035767 570.22277832]
[335.77572632 578.64392090]
[322.43234253 585.53527832]
[308.36752319 590.80004883]
[293.77874756 594.36431885]
[278.87081909 596.17810059]
[263.85299683 596.21588135]
[248.93612671 594.47717285]
[234.32960510 590.98632812]
[220.23847961 585.79241943]
[206.86059570 578.96832275]
[194.38372803 570.60986328]
[182.98304749 560.83428955]
[172.81860352 549.77899170]
[164.03306580 537.59906006]
[156.74980164 524.46551514]
[151.07104492 510.56268311]
[147.07650757 496.08578491]
[144.82228088 481.23806763]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 167]
[9 166]
[10 165]
[11 163]
[12 162]
[13 161]
[14 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[24 154]
[25 153]
[56 152]
[57 151]
[58 150]
[60 149]
[61 148]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[75 132]
[76 129]
[77 128]
[78 127]
[79 126]
[82 123]
[83 122]
[84 121]
[85 120]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
