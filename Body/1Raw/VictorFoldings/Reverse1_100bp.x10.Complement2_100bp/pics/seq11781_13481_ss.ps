%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[165.03039551 549.78149414]
[174.27052307 537.71130371]
[187.42883301 530.10034180]
[185.42481995 515.23480225]
[183.42080688 500.36926270]
[181.41679382 485.50375366]
[179.41278076 470.63821411]
[177.40876770 455.77270508]
[164.23147583 448.88088989]
[157.56018066 435.39172363]
[160.14120483 420.38531494]
[171.19128418 409.65209961]
[169.18725586 394.78659058]
[167.18324280 379.92105103]
[154.00595093 373.02926636]
[147.33467102 359.54006958]
[149.91569519 344.53369141]
[160.96575928 333.80047607]
[158.96174622 318.93493652]
[156.95773315 304.06939697]
[154.95372009 289.20388794]
[152.94970703 274.33834839]
[149.62744141 259.71087646]
[138.35037231 249.98068237]
[141.46759033 234.46960449]
[136.85357666 220.19688416]
[132.23956299 205.92414856]
[120.96248627 196.19393921]
[124.07971191 180.68287659]
[119.46569824 166.41014099]
[114.85169220 152.13740540]
[110.23767853 137.86466980]
[104.36872101 124.06049347]
[97.29161835 110.83496094]
[90.11624908 97.66249084]
[82.84301758 84.54379272]
[75.56979370 71.42510223]
[76.29646301 86.40748596]
[73.71620941 101.18389893]
[67.95491028 115.03335571]
[59.29367828 127.28011322]
[48.15511322 137.32662964]
[35.08269501 144.68270874]
[20.71425438 148.98942566]
[5.75085449 150.03665161]
[-9.07740307 147.77330017]
[-23.04701614 142.30978394]
[-35.47637558 133.91270447]
[-45.75902557 122.99176025]
[-53.39325333 110.07980347]
[-58.00656509 95.80684662]
[-59.37387085 80.86929321]
[-57.42845917 65.99597931]
[-52.26524353 51.91261673]
[-44.13615417 39.30635071]
[-33.43782425 28.79227638]
[-20.69225121 20.88339806]
[-6.52131844 15.96560574]
[8.38354206 14.27885056]
[23.29508781 15.90543270]
[37.48575592 20.76598740]
[50.26314545 28.62335777]
[61.00382614 39.09416580]
[69.18075562 51.66160202]
[67.39829254 36.76788712]
[65.61582947 21.87416840]
[61.48882294 13.72520161]
[63.91939926 6.74565220]
[62.35887527 -8.17295265]
[60.79835129 -23.09155655]
[59.23782730 -38.01016235]
[57.67730713 -52.92876816]
[56.11678314 -67.84737396]
[44.78738403 -58.01656723]
[30.01057053 -60.59450912]
[22.67925835 -73.68083191]
[28.19782066 -87.62879181]
[42.49817657 -92.15646362]
[55.03777695 -83.92763519]
[54.59117126 -98.92098236]
[51.44705200 -104.73699951]
[51.67750931 -110.41537476]
[54.36119461 -114.36592865]
[54.36119461 -129.36592102]
[54.36119461 -144.36592102]
[54.24952698 -159.36550903]
[54.02619934 -174.36384583]
[53.80287170 -189.36218262]
[53.57954407 -204.36051941]
[53.35621643 -219.35885620]
[43.54840469 -234.94374084]
[52.68709183 -249.92544556]
[52.24048615 -264.91879272]
[51.79387665 -279.91213989]
[37.17647171 -283.72109985]
[24.22498894 -291.49514771]
[13.98934841 -302.60406494]
[7.29930687 -316.14733887]
[4.69719696 -331.02703857]
[6.39395952 -346.03695679]
[12.25204563 -359.96029663]
[21.79656601 -371.66836548]
[34.25379181 -380.21203613]
[48.61386871 -384.89871216]
[63.71268845 -385.34844971]
[78.32626343 -381.52481079]
[91.26992798 -373.73776245]
[101.49440765 -362.61856079]
[108.17083740 -349.06857300]
[110.75799561 -334.18627930]
[109.04615784 -319.17807007]
[103.17408752 -305.26062012]
[93.61780548 -293.56213379]
[81.15200806 -285.03097534]
[66.78723145 -280.35873413]
[67.23383331 -265.36538696]
[67.68044281 -250.37203979]
[76.26689148 -241.85151672]
[76.76167297 -229.36396790]
[68.35455322 -219.58218384]
[68.57788086 -204.58384705]
[68.80120850 -189.58551025]
[69.02453613 -174.58717346]
[69.24786377 -159.58883667]
[72.49060059 -152.94757080]
[69.36119080 -144.36592102]
[69.36119080 -129.36592102]
[69.36119080 -114.36592865]
[69.58451843 -99.36759186]
[70.03112793 -84.37423706]
[71.03538513 -69.40789795]
[72.59590912 -54.48928833]
[74.15643311 -39.57068634]
[75.71695709 -24.65208054]
[77.27748108 -9.73347569]
[78.83800507 5.18512917]
[80.50954437 20.09170341]
[82.29200745 34.98542023]
[84.07447815 49.87913895]
[88.68848419 64.15187073]
[95.96171570 77.27056885]
[103.23493958 90.38925934]
[109.58694458 95.35157776]
[110.51714325 103.75785828]
[117.59424591 116.98338318]
[118.81393433 102.03305817]
[126.32472992 89.04891205]
[138.67642212 80.53799438]
[153.48408508 78.14361572]
[167.88859558 82.32810974]
[179.10867310 92.28350067]
[184.97789001 106.08757019]
[184.36299133 121.07495880]
[177.38272095 134.35185242]
[165.38482666 143.35466003]
[150.68594360 146.34512329]
[136.12419128 142.74578857]
[124.51041412 133.25065613]
[129.12442017 147.52339172]
[133.73843384 161.79612732]
[138.35244751 176.06886292]
[149.95954895 186.81994629]
[146.51229858 201.31013489]
[151.12631226 215.58287048]
[155.74032593 229.85560608]
[167.34742737 240.60668945]
[163.90017700 255.09687805]
[167.75741577 240.60130310]
[177.45617676 229.15866089]
[191.12380981 222.97836304]
[206.12127686 223.25372314]
[219.55282593 229.93156433]
[228.82502747 241.72251892]
[232.14755249 256.34991455]
[228.87889099 270.98944092]
[219.65016174 282.81445312]
[206.24330139 289.54168701]
[191.24693298 289.87225342]
[177.55665588 283.74230957]
[167.81523132 272.33432007]
[169.81924438 287.19985962]
[171.82325745 302.06539917]
[173.82727051 316.93090820]
[175.83128357 331.79644775]
[189.32911682 339.22039795]
[195.79177856 353.00759888]
[192.93067932 367.78182983]
[182.04878235 377.91702271]
[184.05279541 392.78256226]
[186.05680847 407.64810181]
[199.55462646 415.07202148]
[206.01730347 428.85925293]
[203.15618896 443.63348389]
[192.27429199 453.76867676]
[194.27830505 468.63421631]
[196.28231812 483.49972534]
[198.28633118 498.36526489]
[200.29034424 513.23077393]
[202.29435730 528.09631348]
[216.99838257 531.95123291]
[229.10490417 541.14361572]
[236.76777649 554.27178955]
[238.81845093 569.33380127]
[234.94421387 584.03271484]
[225.73588562 596.12713623]
[212.59764099 603.77270508]
[197.53297424 605.80358887]
[182.83914185 601.91003418]
[170.75685120 592.68579102]
[163.12855530 579.53747559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 194]
[12 190]
[13 189]
[14 188]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[23 167]
[25 165]
[26 164]
[27 163]
[29 161]
[30 160]
[31 159]
[32 158]
[33 145]
[34 144]
[35 142]
[36 141]
[37 140]
[64 139]
[65 138]
[66 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
[73 131]
[79 130]
[80 129]
[83 128]
[84 127]
[85 126]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
