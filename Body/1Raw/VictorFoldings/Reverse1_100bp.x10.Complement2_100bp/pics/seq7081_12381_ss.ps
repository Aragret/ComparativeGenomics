%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[95.94390106 576.21826172]
[92.08345032 590.74914551]
[85.88380432 604.44635010]
[77.51409149 616.93627930]
[67.20265961 627.87811279]
[55.23079300 636.97338867]
[41.92509842 643.97399902]
[27.64857292 648.68896484]
[12.79068089 650.98956299]
[-2.24323845 650.81317139]
[-17.04305077 648.16448975]
[-31.20500565 643.11584473]
[-44.34275436 635.80493164]
[-56.09788895 626.43121338]
[-66.14971924 615.25042725]
[-74.22402954 602.56750488]
[-80.10054779 588.72857666]
[-83.61894989 574.11108398]
[-84.68325043 559.11389160]
[-83.26442719 544.14599609]
[-79.40117645 529.61584473]
[-73.19889069 515.91979980]
[-64.82678223 503.43151855]
[-54.51323318 492.49166870]
[-42.53961563 483.39868164]
[-29.23257637 476.40063477]
[-14.95514011 471.68844604]
[-0.09680615 469.39068604]
[14.93707943 469.57000732]
[29.73637962 472.22149658]
[34.77329636 458.09246826]
[39.81021118 443.96343994]
[44.84712982 429.83441162]
[49.88404465 415.70538330]
[54.28504181 401.36553955]
[58.04134369 386.84347534]
[61.79764557 372.32144165]
[65.55394745 357.79937744]
[68.54872131 343.10134888]
[70.77383423 328.26733398]
[72.99895477 313.43328857]
[75.22406769 298.59924316]
[77.44918823 283.76519775]
[79.67430878 268.93115234]
[81.89942169 254.09710693]
[84.12454224 239.26306152]
[86.34965515 224.42901611]
[88.57477570 209.59497070]
[89.91300964 194.65478516]
[90.35961151 179.66143799]
[83.00468445 166.70944214]
[91.14943695 153.14575195]
[91.59603882 138.15240479]
[92.04264832 123.15904999]
[92.37762451 108.16278839]
[92.48928833 93.16320801]
[92.48928833 78.16320801]
[92.48928833 63.16320801]
[92.48928833 48.16320801]
[91.37364197 33.20475388]
[89.14852142 18.37071037]
[86.92340851 3.53666687]
[84.36757660 -11.24398708]
[74.12027740 -23.29817390]
[79.26498413 -37.27605820]
[76.37970734 -51.99595261]
[73.49443817 -66.71584320]
[70.60916138 -81.43573761]
[67.72389221 -96.15562439]
[64.83861542 -110.87551880]
[61.84384537 -125.57352448]
[58.73973465 -140.24882507]
[48.49455643 -129.29270935]
[33.52973175 -130.31936646]
[24.87677002 -142.57196045]
[28.91431236 -157.01835632]
[42.66603470 -163.00920105]
[55.99367523 -156.12957764]
[53.98966217 -170.99510193]
[51.98564911 -185.86062622]
[49.98163605 -200.72615051]
[47.97761917 -215.59169006]
[45.97360611 -230.45721436]
[43.96959305 -245.32273865]
[41.96557999 -260.18826294]
[39.96156693 -275.05380249]
[37.95755386 -289.91934204]
[35.95353699 -304.78485107]
[33.94952393 -319.65039062]
[31.94551086 -334.51589966]
[29.94149780 -349.38143921]
[15.02876377 -351.85162354]
[1.50740099 -358.60913086]
[-9.42027950 -369.05313110]
[-16.78259468 -382.25494385]
[-19.92489624 -397.04067993]
[-18.56776810 -412.09555054]
[-12.83188725 -426.08093262]
[-3.22728539 -437.75326538]
[9.39200401 -446.07461548]
[23.90388298 -450.30508423]
[39.01796341 -450.06848145]
[53.39031219 -445.38583374]
[65.74295044 -436.67358398]
[74.97748566 -424.70632935]
[80.27279663 -410.54824829]
[81.15802765 -395.45828247]
[77.55445862 -380.77816772]
[69.78251648 -367.81326294]
[58.53328323 -357.71643066]
[44.80702591 -351.38546753]
[46.81103897 -336.51992798]
[48.81505203 -321.65438843]
[50.81906891 -306.78887939]
[52.82308197 -291.92333984]
[54.82709503 -277.05780029]
[56.83110809 -262.19229126]
[58.83512115 -247.32675171]
[60.83913422 -232.46122742]
[62.84314728 -217.59570312]
[64.84716034 -202.73017883]
[66.85117340 -187.86463928]
[68.85518646 -172.99911499]
[70.85920715 -158.13359070]
[73.41503906 -143.35293579]
[76.51914978 -128.67762756]
[80.97879028 -122.78412628]
[79.55850983 -113.76078796]
[82.44377899 -99.04090118]
[85.32905579 -84.32100677]
[88.21432495 -69.60111237]
[91.09960175 -54.88122559]
[93.98487091 -40.16133118]
[104.02579498 -29.16000938]
[99.08746338 -14.12925911]
[101.79396820 -11.86935329]
[103.54033661 -8.18624878]
[103.66957092 -3.54549479]
[101.75745392 1.31154978]
[103.98256683 16.14559364]
[106.20768738 30.97963715]
[113.16249084 17.68939209]
[125.77745819 9.57380676]
[140.75505066 8.75427818]
[154.18017578 15.44502735]
[162.54351807 27.89710999]
[163.65895081 42.85557938]
[157.23487854 56.41033173]
[144.95053101 65.01818085]
[130.01704407 66.42906189]
[116.33795166 60.27416992]
[107.48928833 48.16320801]
[107.48928833 63.16320801]
[107.48928833 78.16320801]
[107.48928833 93.16320801]
[110.63848877 100.58312225]
[107.37596130 108.38612366]
[110.37725830 117.01340485]
[107.03599548 123.60565948]
[106.58939362 138.59901428]
[106.14278412 153.59236145]
[113.46577454 167.61677551]
[105.35296631 180.10804749]
[104.90635681 195.10139465]
[115.11318970 184.10954285]
[129.80885315 181.10331726]
[143.51222229 187.20393372]
[151.11228943 200.13601685]
[149.77441406 215.07623291]
[139.99758911 226.45223999]
[125.42832947 230.02107239]
[111.50060272 224.45164490]
[103.40882111 211.82008362]
[101.18370056 226.65412903]
[98.95858002 241.48817444]
[96.73346710 256.32220459]
[94.50834656 271.15625000]
[92.28323364 285.99029541]
[90.05811310 300.82434082]
[87.83300018 315.65838623]
[85.60787964 330.49243164]
[83.38276672 345.32647705]
[95.39303589 336.34017944]
[110.37619019 337.05075073]
[121.48214722 347.13330078]
[123.63339996 361.97824097]
[115.84642792 374.79864502]
[101.68133545 379.73321533]
[87.61420441 374.52593994]
[80.07600403 361.55566406]
[76.31970215 376.07772827]
[72.56340027 390.59979248]
[68.80710602 405.12185669]
[82.24780273 398.46243286]
[96.50419617 403.12667847]
[103.40958405 416.44265747]
[99.00824738 430.78240967]
[85.82146454 437.93145752]
[71.40322113 433.79449463]
[64.01307678 420.74230957]
[58.97615814 434.87133789]
[53.93924332 449.00036621]
[48.90232468 463.12939453]
[43.86540985 477.25842285]
[57.00456619 484.56680298]
[68.76150513 493.93826294]
[78.81549835 505.11712646]
[86.89225006 517.79846191]
[92.77143097 531.63629150]
[96.29264832 546.25305176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 204]
[31 203]
[32 202]
[33 201]
[34 200]
[35 193]
[36 192]
[37 191]
[38 190]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 164]
[50 163]
[52 161]
[53 160]
[54 159]
[55 157]
[56 155]
[57 154]
[58 153]
[59 152]
[60 141]
[61 140]
[62 139]
[63 135]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 126]
[72 125]
[78 124]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
