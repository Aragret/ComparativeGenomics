%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[89.13856506 642.49627686]
[77.50931549 632.98449707]
[67.28362274 621.97772217]
[58.65197754 609.68103027]
[51.77519608 596.32348633]
[46.78137970 582.15399170]
[43.76356506 567.43640137]
[42.77796936 552.44500732]
[43.84295273 537.45904541]
[46.93867493 522.75769043]
[52.00746918 508.61477661]
[58.95490265 495.29385376]
[67.65155029 483.04306030]
[77.93540192 472.09060669]
[89.61486816 462.64053345]
[102.47237396 454.86889648]
[116.26838684 448.92047119]
[130.74589539 444.90609741]
[128.74188232 430.04055786]
[126.73786926 415.17504883]
[124.73385620 400.30950928]
[122.72984314 385.44396973]
[113.36153412 373.86450195]
[119.18575287 359.15435791]
[117.18173981 344.28881836]
[115.17772675 329.42327881]
[112.61053467 327.00628662]
[111.08648682 323.22576904]
[111.23370361 318.58557129]
[113.43152618 313.85095215]
[112.09329224 298.91076660]
[110.75505829 283.97058105]
[109.41682434 269.03039551]
[108.07859039 254.09019470]
[106.74035645 239.15000916]
[93.17088318 233.00712585]
[84.44001770 220.81582642]
[82.97396851 205.79194641]
[89.26613617 191.96061707]
[101.71781921 183.07789612]
[100.37958527 168.13771057]
[99.04135132 153.19752502]
[97.70311737 138.25733948]
[95.92065430 123.36362457]
[93.69553375 108.52957916]
[90.70075989 93.83157349]
[86.94445801 79.30951691]
[83.18816376 64.78746033]
[79.43186188 50.26539993]
[75.67556000 35.74333954]
[62.46704865 22.91303444]
[67.81228638 6.19791031]
[63.84019089 -8.26661396]
[59.86809540 -22.73113823]
[55.89599609 -37.19566345]
[51.92390060 -51.66018677]
[47.95180511 -66.12471008]
[43.97970963 -80.58923340]
[40.00761414 -95.05375671]
[36.03551483 -109.51828003]
[33.20797348 -94.78719330]
[27.32064438 -80.99083710]
[18.64136887 -68.75685883]
[7.56499434 -58.64182663]
[-5.40457821 -51.10589981]
[-19.67732048 -46.49191666]
[-34.60391617 -45.00978088]
[-49.50530624 -46.72692108]
[-63.70357513 -51.56521988]
[-76.55280304 -59.30456161]
[-87.46842194 -69.59286499]
[-95.95385742 -81.96207428]
[-101.62307739 -95.84947968]
[-104.21816254 -110.62329102]
[-103.62105560 -125.61140442]
[-99.85893250 -140.13195801]
[-93.10292816 -153.52435303]
[-83.66040039 -165.17933655]
[-71.96092987 -174.56669617]
[-58.53675842 -181.25933838]
[-43.99859619 -184.95281982]
[-29.00782967 -185.47911072]
[-14.24644470 -182.81423950]
[-0.38598120 -177.07948303]
[11.94299984 -168.53569031]
[22.17961311 -157.57157898]
[29.85816002 -144.68594360]
[34.63025284 -130.46073914]
[36.63426590 -145.32626343]
[38.63827896 -160.19178772]
[40.64229202 -175.05732727]
[34.81807327 -189.76748657]
[44.18638229 -201.34695435]
[46.19039917 -216.21247864]
[47.52863312 -231.15266418]
[48.19841766 -246.13771057]
[48.86820221 -261.12274170]
[49.53798676 -276.10778809]
[35.44253159 -281.63922119]
[23.90847397 -291.44964600]
[16.18694878 -304.47488403]
[13.11552525 -319.30203247]
[15.02737045 -334.32281494]
[21.71510124 -347.90783691]
[32.45328140 -358.58352661]
[46.07711792 -365.19183350]
[61.10879135 -367.01599121]
[75.91778564 -363.85806274]
[88.89772797 -356.06063843]
[98.64064789 -344.46951294]
[104.08971405 -330.34201050]
[104.65384674 -315.21057129]
[100.27185822 -300.71652222]
[91.41906738 -288.43212891]
[79.05576324 -279.68984985]
[64.52302551 -275.43798828]
[63.85324097 -260.45294189]
[63.18345642 -245.46791077]
[62.51367188 -230.48287964]
[74.28532410 -239.77955627]
[89.19834137 -238.16651917]
[98.70986938 -226.56777954]
[97.37127686 -211.62762451]
[85.94937134 -201.90444946]
[70.98712921 -202.96813965]
[61.05592728 -214.20846558]
[59.05191040 -199.34294128]
[65.01947021 -185.69606018]
[55.50782013 -173.05329895]
[53.50380707 -158.18777466]
[51.49979401 -143.32225037]
[49.49578094 -128.45672607]
[50.50004196 -113.49037933]
[54.47213745 -99.02585602]
[58.44423294 -84.56133270]
[62.41632843 -70.09680939]
[66.38842773 -55.63228226]
[70.36051941 -41.16775894]
[74.33261871 -26.70323372]
[78.30471039 -12.23871040]
[82.27680969 2.22581387]
[92.63142395 8.47949409]
[96.05902100 20.49761963]
[90.19761658 31.98703957]
[93.95391846 46.50909805]
[97.71022034 61.03115845]
[101.46652222 75.55321503]
[105.22282410 90.07527924]
[112.75959778 77.10620117]
[126.82629395 71.89773560]
[140.99180603 76.83113098]
[148.77984619 89.65089417]
[146.62983704 104.49600983]
[135.52471924 114.57949066]
[120.54161835 115.29129791]
[108.52957916 106.30446625]
[110.75469971 121.13850403]
[113.57878113 124.43676758]
[115.05767822 128.09428406]
[115.24362946 131.64404297]
[114.33517456 134.68399048]
[112.64330292 136.91911316]
[113.98153687 151.85929871]
[115.31977081 166.79948425]
[116.65800476 181.73966980]
[130.49011230 188.26806641]
[139.14021301 200.76097107]
[140.36753845 215.80624390]
[133.94229126 229.35511780]
[121.68054199 237.81178284]
[123.01877594 252.75196838]
[124.35700989 267.69213867]
[125.69524384 282.63232422]
[127.03347778 297.57250977]
[128.37171936 312.51269531]
[130.04325867 327.41928101]
[132.04727173 342.28482056]
[134.05128479 357.15032959]
[143.56294250 369.79309082]
[137.59536743 383.43997192]
[139.59938049 398.30548096]
[141.60339355 413.17102051]
[143.60742188 428.03656006]
[145.61143494 442.90206909]
[160.63514709 442.93942261]
[175.51385498 445.02221680]
[189.97035217 449.11166382]
[203.73530579 455.13159180]
[216.55232239 462.96984863]
[228.18260193 472.48037720]
[238.40948486 483.48602295]
[247.04246521 495.78179932]
[253.92068481 509.13858032]
[258.91604614 523.30755615]
[261.93545532 538.02478027]
[262.92266846 553.01611328]
[261.85931396 568.00219727]
[258.76516724 582.70391846]
[253.69790649 596.84735107]
[246.75192261 610.16900635]
[238.05659485 622.42071533]
[227.77394104 633.37432861]
[216.09548950 642.82562256]
[203.23883057 650.59863281]
[189.44345093 656.54858398]
[174.96638489 660.56451416]
[160.07728577 662.57171631]
[145.05357361 662.53277588]
[130.17509460 660.44836426]
[115.71904755 656.35729980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[24 178]
[25 177]
[26 176]
[30 175]
[31 174]
[32 173]
[33 172]
[34 171]
[35 170]
[40 165]
[41 164]
[42 163]
[43 162]
[44 157]
[45 156]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[88 132]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
