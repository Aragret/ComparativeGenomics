%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[145.40441895 748.25964355]
[154.64454651 736.18945312]
[167.80285645 728.57849121]
[165.79884338 713.71295166]
[163.79483032 698.84741211]
[161.79081726 683.98187256]
[159.78680420 669.11639404]
[157.78279114 654.25085449]
[155.77877808 639.38531494]
[153.77474976 624.51977539]
[151.77073669 609.65423584]
[147.76179504 603.44537354]
[149.84925842 594.55267334]
[148.06680298 579.65893555]
[146.28433228 564.76525879]
[144.50186157 549.87152100]
[142.71940613 534.97778320]
[129.54112244 533.40875244]
[117.03980255 528.92950439]
[105.84995270 521.76342773]
[96.54040527 512.27044678]
[89.58538818 500.92886353]
[85.34036255 488.31134033]
[84.02386475 475.05584717]
[85.70623779 461.83349609]
[90.30590820 449.31460571]
[97.59333038 438.13455200]
[107.20241547 428.86178589]
[118.64895630 421.96859741]
[131.35498047 417.80740356]
[130.23933411 402.84896851]
[129.12368774 387.89050293]
[125.49140930 381.45401001]
[128.10447693 372.70132446]
[127.21166229 357.72793579]
[126.31884766 342.75451660]
[125.42603302 327.78109741]
[123.86550903 312.86251831]
[121.64038849 298.02847290]
[119.41527557 283.19442749]
[117.19015503 268.36038208]
[114.74443054 253.56109619]
[112.07863617 238.79988098]
[109.41283417 224.03866577]
[106.74703979 209.27745056]
[104.08124542 194.51623535]
[101.41545105 179.75502014]
[90.84860992 190.40122986]
[75.92098999 188.92948914]
[67.63666534 176.42468262]
[72.10254669 162.10490417]
[86.02653503 156.52616882]
[99.14344025 163.79954529]
[97.58291626 148.88093567]
[88.56352234 137.02767944]
[94.82313538 122.49744415]
[93.26261139 107.57884216]
[89.35857391 100.52681732]
[91.79161835 92.42674255]
[90.45338440 77.48655701]
[81.51574707 64.43170166]
[88.08671570 51.06489563]
[86.74848175 36.12471008]
[85.41024780 21.18452644]
[83.96083069 6.25471783]
[82.40030670 -8.66388702]
[80.61784363 -23.55760384]
[78.61383057 -38.42313385]
[76.60981750 -53.28866196]
[62.50650787 -63.63834763]
[60.29547501 -80.65087891]
[70.86057281 -93.73588562]
[68.63545990 -108.56993103]
[66.41033936 -123.40397644]
[58.31945419 -110.77315521]
[44.39199829 -105.20306396]
[29.82256508 -108.77120209]
[20.04519653 -120.14675140]
[18.70660591 -135.08689880]
[26.30605698 -148.01936340]
[40.00914383 -154.12062073]
[54.70494843 -151.11508179]
[64.91280365 -140.12266541]
[64.46619415 -155.11602783]
[64.01959229 -170.10937500]
[55.87483597 -183.67304993]
[63.22976685 -196.62506104]
[62.78316116 -211.61840820]
[51.56196594 -222.42222595]
[51.32262802 -237.63397217]
[61.69157028 -248.26509094]
[61.24496460 -263.25845337]
[60.79835892 -278.25180054]
[60.35175323 -293.24514771]
[59.90514755 -308.23849487]
[59.45853806 -323.23184204]
[45.05852127 -327.96630859]
[33.14813995 -337.34280396]
[25.16562653 -350.22906494]
[22.07491302 -365.06896973]
[24.24921799 -380.07058716]
[31.42597961 -393.42236328]
[42.73857498 -403.51202393]
[56.82094574 -409.12115479]
[71.97257996 -409.57247925]
[86.36385345 -404.81146240]
[98.25693512 -395.41305542]
[106.21568298 -382.51211548]
[109.27904510 -367.66653442]
[107.07710266 -352.66894531]
[99.87574005 -339.33041382]
[88.54457855 -329.26162720]
[74.45188904 -323.67843628]
[74.89849854 -308.68508911]
[75.34510040 -293.69174194]
[75.79170990 -278.69839478]
[76.23831177 -263.70504761]
[76.68492126 -248.71170044]
[87.66825104 -238.71659851]
[88.33476257 -223.51757812]
[77.77651215 -212.06501770]
[78.22311401 -197.07165527]
[86.33592987 -184.58039856]
[79.01293945 -170.55596924]
[79.45954132 -155.56262207]
[79.90615082 -140.56927490]
[81.24438477 -125.62908936]
[83.46950531 -110.79505157]
[85.69461823 -95.96100616]
[97.02628326 -89.82725525]
[102.84292603 -78.11193085]
[100.82028961 -64.99250031]
[91.47534180 -55.29267502]
[93.47935486 -40.42714691]
[95.48336792 -25.56161880]
[98.67079163 -22.00502205]
[99.65782166 -16.40834427]
[97.31891632 -10.22441006]
[98.87943268 4.69419479]
[102.70175171 11.01967621]
[100.35043335 19.84629250]
[101.68866730 34.78647614]
[103.02690125 49.72666168]
[111.86882019 61.71289444]
[105.39356232 76.14832306]
[106.73179626 91.08850861]
[108.18122101 106.01831818]
[109.74174500 120.93692017]
[118.87275696 133.85725403]
[112.50151825 147.32041931]
[114.06204224 162.23902893]
[116.17666626 177.08921814]
[118.84246063 191.85043335]
[121.50826263 206.61166382]
[124.17405701 221.37287903]
[126.83985138 236.13409424]
[129.50564575 250.89530945]
[133.47773743 256.18057251]
[134.09216309 261.83032227]
[132.02420044 266.13525391]
[134.24931335 280.96929932]
[136.47442627 295.80334473]
[138.69955444 310.63739014]
[148.46315002 299.25003052]
[163.40795898 297.96438599]
[174.97290039 307.51699829]
[176.53306580 322.43563843]
[167.19471741 334.17425537]
[152.30728149 336.00842285]
[140.39942932 326.88830566]
[141.29225159 341.86169434]
[142.18507385 356.83511353]
[143.07788086 371.80850220]
[144.08213806 386.77484131]
[145.19779968 401.73330688]
[146.31344604 416.69177246]
[162.81675720 419.98638916]
[177.72171021 427.77117920]
[189.83534241 439.41455078]
[198.19049072 453.97637939]
[202.12298584 470.28402710]
[201.32452393 487.02664185]
[195.86672974 502.86059570]
[186.19487000 516.51727295]
[173.09147644 526.90484619]
[157.61311340 533.19531250]
[159.39558411 548.08905029]
[161.17805481 562.98278809]
[162.96051025 577.87646484]
[164.74298096 592.77020264]
[166.63627625 607.65026855]
[168.64028931 622.51574707]
[170.64430237 637.38128662]
[172.64831543 652.24682617]
[174.65232849 667.11236572]
[176.65634155 681.97790527]
[178.66035461 696.84338379]
[180.66436768 711.70892334]
[182.66838074 726.57446289]
[197.37240601 730.42938232]
[209.47892761 739.62176514]
[217.14178467 752.74993896]
[219.19245911 767.81195068]
[215.31823730 782.51086426]
[206.10989380 794.60528564]
[192.97164917 802.25085449]
[177.90698242 804.28173828]
[163.21316528 800.38818359]
[151.13085938 791.16394043]
[143.50256348 778.01562500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 199]
[4 198]
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[10 192]
[11 191]
[13 190]
[14 189]
[15 188]
[16 187]
[17 186]
[30 176]
[31 175]
[32 174]
[34 173]
[35 172]
[36 171]
[37 170]
[38 163]
[39 162]
[40 161]
[41 160]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[53 151]
[54 150]
[56 148]
[57 147]
[59 146]
[60 145]
[62 143]
[63 142]
[64 141]
[65 139]
[66 138]
[67 135]
[68 134]
[69 133]
[72 129]
[73 128]
[74 127]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
