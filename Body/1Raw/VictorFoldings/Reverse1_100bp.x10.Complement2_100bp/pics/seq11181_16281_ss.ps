%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[-23.32767677 365.63870239]
[-15.85109043 378.66998291]
[-10.21863461 392.59799194]
[-6.53523779 407.16323853]
[-4.86951876 422.09436035]
[-5.25250912 437.11325073]
[-7.67707396 451.94009399]
[-12.09804535 466.29867554]
[-18.43306351 479.92150879]
[-26.56410980 492.55477905]
[-36.33971024 503.96316528]
[-47.57774734 513.93414307]
[-60.06886673 522.28192139]
[-73.58036804 528.85107422]
[-87.86053467 533.51910400]
[-102.64334106 536.19909668]
[-117.65338135 536.84112549]
[-132.61105347 535.43328857]
[-147.23767090 532.00170898]
[-161.26077271 526.61041260]
[-174.41911316 519.35974121]
[-186.46755981 510.38485718]
[-197.18165588 499.85290527]
[-206.36178589 487.96011353]
[-213.83695984 474.92800903]
[-219.46791077 460.99938965]
[-223.14973450 446.43374634]
[-224.81384277 431.50244141]
[-224.42922974 416.48358154]
[-222.00305176 401.65701294]
[-217.58052063 387.29888916]
[-211.24403381 373.67675781]
[-203.11161804 361.04437256]
[-193.33479309 349.63702393]
[-182.09567261 339.66726685]
[-169.60365295 331.32083130]
[-156.09143066 324.75317383]
[-141.81076050 320.08670044]
[-127.02767181 317.40829468]
[-112.01755524 316.76785278]
[-97.06004333 318.17733765]
[-82.43379211 321.61047363]
[-68.41127014 327.00332642]
[-55.25371552 334.25540161]
[-46.29301834 322.22601318]
[-37.33232498 310.19665527]
[-28.37162781 298.16726685]
[-19.41093254 286.13787842]
[-10.45023632 274.10852051]
[-2.31502008 261.50619507]
[4.95820904 248.38749695]
[12.23143864 235.26881409]
[19.50466728 222.15011597]
[26.77789688 209.03141785]
[26.34635544 204.27507019]
[28.89813995 199.19714355]
[34.46800613 195.63510132]
[34.31572342 180.74127197]
[48.01574326 172.82800293]
[44.10211563 158.50251770]
[51.68733978 145.31468201]
[66.73974609 141.30683899]
[74.40034485 128.41052246]
[82.06094360 115.51419067]
[89.72153473 102.61786652]
[96.69998932 89.34001923]
[102.97734833 75.71670532]
[109.25471497 62.09338760]
[115.53207397 48.47006989]
[102.66613770 56.18159485]
[87.69569397 57.12284470]
[73.96518707 51.08354187]
[64.54204559 39.41287613]
[61.53142166 24.71811104]
[65.60589600 10.28209209]
[75.85521698 -0.67013782]
[89.98966980 -5.69182205]
[104.85157013 -3.66110349]
[117.12074280 4.96834993]
[124.05621338 18.26869774]
[124.10858154 33.26862717]
[132.52319336 20.85113144]
[140.93782043 8.43363667]
[149.35243225 -3.98385930]
[157.76705933 -16.40135384]
[166.18167114 -28.81884956]
[167.07910156 -47.21113586]
[183.15531921 -54.24834442]
[191.38412476 -66.78974152]
[196.73530579 -80.80276489]
[198.96041870 -95.63681030]
[201.18554688 -110.47085571]
[203.41065979 -125.30489349]
[197.80609131 -140.10014343]
[207.34576416 -151.53884888]
[209.57089233 -166.37289429]
[211.79600525 -181.20693970]
[197.76622009 -186.69445801]
[185.30958557 -195.16676331]
[175.05088806 -206.19885254]
[167.50474548 -219.23738098]
[163.04962158 -233.62834167]
[161.90902710 -248.64988708]
[164.14013672 -263.54855347]
[169.63107300 -277.57699585]
[178.10638428 -290.03158569]
[189.14096069 -300.28759766]
[202.18132019 -307.83059692]
[216.57336426 -312.28222656]
[231.59518433 -313.41918945]
[246.49328613 -311.18444824]
[260.52041626 -305.69012451]
[272.97296143 -297.21179199]
[283.22628784 -286.17471313]
[290.76611328 -273.13253784]
[295.21426392 -258.73941040]
[296.34759521 -243.71733093]
[294.10925293 -228.81976318]
[288.61151123 -214.79397583]
[280.13018799 -202.34349060]
[269.09063721 -192.09283447]
[256.04660034 -184.55615234]
[241.65242004 -180.11149597]
[226.63005066 -178.98181152]
[224.40493774 -164.14778137]
[222.17980957 -149.31373596]
[227.94352722 -135.57951355]
[218.24470520 -123.07978058]
[216.01959229 -108.24573517]
[213.79446411 -93.41168976]
[211.56935120 -78.57765198]
[220.13481140 -90.89157104]
[230.97497559 -101.25936127]
[243.65806580 -109.26806641]
[257.67892456 -114.59870148]
[272.47909546 -117.03895569]
[287.46908569 -116.49162292]
[302.05191040 -112.97852325]
[315.64666748 -106.63956451]
[327.71191406 -97.72722626]
[337.76708984 -86.59649658]
[345.41174316 -73.69069672]
[350.34130859 -59.52386093]
[352.35952759 -44.66025162]
[351.38595581 -29.69187927]
[347.45938110 -15.21492958]
[340.73620605 -1.80601251]
[331.48422241 10.00079918]
[320.07192993 19.73524666]
[306.95385742 27.00960732]
[292.65252686 31.53414726]
[277.73751831 33.12865829]
[262.80288696 31.72962952]
[248.44351196 27.39278221]
[235.23129272 20.29085541]
[223.69248962 10.70671272]
[214.28666687 -0.97791213]
[207.38845825 -14.29762459]
[203.27261353 -28.72190666]
[202.10308838 -43.67624283]
[203.92552185 -58.56093597]
[195.69671631 -46.01953506]
[197.84806824 -34.11582947]
[191.09515381 -23.60003662]
[178.59916687 -20.40423203]
[170.18455505 -7.98673630]
[161.76992798 4.43075943]
[153.35531616 16.84825516]
[144.94068909 29.26575089]
[136.52607727 41.68324661]
[129.15539551 54.74743271]
[122.87802887 68.37075043]
[116.60066986 81.99406433]
[110.32330322 95.61737823]
[124.36457062 90.34075165]
[138.55384827 95.20537567]
[146.40397644 107.98721313]
[144.32598877 122.84258270]
[133.26992798 132.97981262]
[118.29045105 133.76428223]
[106.23599243 124.83735657]
[102.61786652 110.27846527]
[94.95726776 123.17478943]
[87.29666901 136.07112122]
[79.63607025 148.96743774]
[83.31696320 164.10311890]
[75.36431122 177.07270813]
[60.91207123 180.48858643]
[60.51641846 196.30485535]
[47.36433411 203.29570007]
[39.89659119 216.30465698]
[32.62336349 229.42333984]
[25.35013199 242.54203796]
[18.07690239 255.66073608]
[10.80367374 268.77941895]
[24.65188599 263.01513672]
[39.43650055 265.54794312]
[50.57634735 275.59304810]
[54.61962128 290.03781128]
[50.31347275 304.40643311]
[38.99220657 314.24661255]
[24.16383743 316.50924683]
[10.42310238 310.49325562]
[2.02771473 298.06274414]
[1.57914162 283.06921387]
[-7.38155413 295.09857178]
[-16.34225082 307.12796021]
[-25.30294609 319.15734863]
[-34.26364136 331.18670654]
[-43.22433853 343.21609497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 210]
[45 209]
[46 208]
[47 207]
[48 206]
[49 205]
[50 195]
[51 194]
[52 193]
[53 192]
[54 191]
[57 190]
[59 188]
[62 185]
[63 184]
[64 183]
[65 182]
[66 174]
[67 173]
[68 172]
[69 171]
[81 170]
[82 169]
[83 168]
[84 167]
[85 166]
[86 165]
[88 162]
[89 161]
[90 131]
[91 130]
[92 129]
[93 128]
[95 126]
[96 125]
[97 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
