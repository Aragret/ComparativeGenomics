%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[100.78653717 819.90307617]
[86.43298340 824.30102539]
[71.71746826 827.27093506]
[56.78170776 828.78417969]
[41.76954269 828.82611084]
[26.82555962 827.39636230]
[12.09367466 824.50878906]
[-2.28422976 820.19104004]
[-16.16968346 814.48480225]
[-29.42895889 807.44506836]
[-41.93435669 799.13952637]
[-53.56544495 789.64825439]
[-64.21020508 779.06256104]
[-73.76611328 767.48455811]
[-82.14114380 755.02557373]
[-89.25464630 741.80572510]
[-95.03809357 727.95227051]
[-99.43580627 713.59863281]
[-102.40541840 698.88305664]
[-103.91832733 683.94726562]
[-103.95997620 668.93505859]
[-102.52995300 653.99108887]
[-99.64203644 639.25927734]
[-95.32403564 624.88146973]
[-89.61753845 610.99615479]
[-82.57749939 597.73699951]
[-74.27172089 585.23175049]
[-64.78019714 573.60089111]
[-54.19433594 562.95629883]
[-42.61608887 553.40063477]
[-30.15696526 545.02587891]
[-16.93695259 537.91259766]
[-3.08337283 532.12945557]
[11.27035427 527.73205566]
[25.98599052 524.76269531]
[40.92181396 523.25012207]
[55.93397522 523.20874023]
[70.87790680 524.63909912]
[65.73320007 510.66119385]
[75.98049927 498.60699463]
[78.86576843 483.88711548]
[81.75104523 469.16720581]
[83.42258453 454.26065063]
[83.86919403 439.26730347]
[84.31579590 424.27392578]
[84.76240540 409.28057861]
[85.20900726 394.28723145]
[77.85408020 381.33523560]
[85.99883270 367.77154541]
[86.44543457 352.77819824]
[86.89204407 337.78485107]
[87.33864594 322.79150391]
[87.78525543 307.79815674]
[72.91561127 303.09298706]
[59.95967865 294.38424683]
[49.96982574 282.36947632]
[43.76025772 268.01513672]
[41.84067154 252.47886658]
[44.37442398 237.01614380]
[51.16467667 222.87886047]
[61.66963577 211.21385193]
[75.04579926 202.97001648]
[90.21566772 198.82102966]
[90.43899536 183.82269287]
[90.66232300 168.82435608]
[82.46489716 159.92890930]
[82.52821350 147.43171692]
[91.36372375 138.03509521]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[93.03856659 63.05546570]
[93.26189423 48.05712891]
[85.73091888 34.14329147]
[93.65685272 21.53262520]
[93.88018036 6.53428888]
[94.10350800 -8.46404839]
[84.32108307 -15.21984577]
[79.06824493 -25.75116158]
[79.54642487 -37.39011765]
[85.52124023 -47.24999619]
[95.40942383 -52.94122696]
[96.07920837 -67.92626190]
[96.74899292 -82.91130066]
[97.41877747 -97.89633942]
[85.37932587 -110.58771515]
[86.22694397 -127.72236633]
[98.94932556 -138.72145081]
[99.39593506 -153.71479797]
[99.84253693 -168.70814514]
[89.28429413 -180.16070557]
[89.95079803 -195.35974121]
[100.93412781 -205.35482788]
[101.38073730 -220.34819031]
[94.05774689 -234.37260437]
[102.17055511 -246.86386108]
[102.61716461 -261.85720825]
[103.06376648 -276.85055542]
[89.18505096 -283.05133057]
[78.73934937 -294.09469604]
[73.31955719 -308.29660034]
[73.75215912 -323.49139404]
[79.97118378 -337.36193848]
[91.02827454 -347.79309082]
[105.23729706 -353.19421387]
[120.43149567 -352.74160767]
[134.29385376 -346.50436401]
[144.71046448 -335.43356323]
[150.09288025 -321.21743774]
[149.62030029 -306.02383423]
[143.36480713 -292.16970825]
[132.28030396 -281.76766968]
[118.05712128 -276.40396118]
[117.61051178 -261.41061401]
[117.16390991 -246.41726685]
[124.51883698 -233.46527100]
[116.37408447 -219.90158081]
[115.92748260 -204.90823364]
[126.29642487 -194.27711487]
[126.05708313 -179.06535339]
[114.83589172 -168.26153564]
[114.38928223 -153.26818848]
[113.94268036 -138.27484131]
[124.00386047 -130.22486877]
[127.64586639 -117.66231537]
[123.32384491 -105.11119080]
[112.40381622 -97.22655487]
[111.73403168 -82.24151611]
[111.06424713 -67.25647736]
[110.39446259 -52.27144241]
[123.53872681 -39.53001404]
[123.18949890 -20.90769005]
[109.10184479 -8.24072075]
[108.87851715 6.75761652]
[108.65518951 21.75595474]
[116.20214081 34.59701157]
[108.26023102 48.28045654]
[108.03690338 63.27879333]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[106.35707092 138.48170471]
[115.45919800 154.48898315]
[105.66065979 169.04768372]
[105.43733215 184.04602051]
[105.21400452 199.04435730]
[119.08526611 203.10986328]
[131.41889954 210.62461853]
[141.37561035 221.06985474]
[148.27978516 233.72772217]
[151.66531372 247.73049927]
[151.30702209 262.12011719]
[147.23568726 275.91378784]
[139.73544312 288.17095947]
[129.32403564 298.05761719]
[116.71701050 304.90292358]
[102.77860260 308.24475098]
[102.33199310 323.23809814]
[101.88539124 338.23147583]
[101.43878174 353.22482300]
[100.99217987 368.21817017]
[108.31517029 382.24258423]
[100.20235443 394.73385620]
[99.75575256 409.72720337]
[99.30914307 424.72055054]
[98.86254120 439.71389771]
[98.41593170 454.70724487]
[107.23893738 442.57650757]
[120.64763641 435.85290527]
[135.64648438 436.03848267]
[148.88470459 443.09182739]
[157.40486145 455.43713379]
[159.30349731 470.31649780]
[154.15647888 484.40579224]
[143.11366272 494.55743408]
[128.64202881 498.50354004]
[113.97457123 495.36251831]
[102.38806152 485.83612061]
[96.47093201 472.05249023]
[93.58566284 486.77236938]
[90.70039368 501.49227905]
[95.63871765 516.52301025]
[85.59779358 527.52435303]
[99.97587585 531.84149170]
[113.86155701 537.54711914]
[127.12110901 544.58636475]
[139.62684631 552.89141846]
[151.25831604 562.38226318]
[161.90348816 572.96746826]
[171.45986938 584.54516602]
[179.83538818 597.00378418]
[186.94941711 610.22332764]
[192.73342896 624.07659912]
[197.13171387 638.43005371]
[200.10191345 653.14550781]
[201.61541748 668.08123779]
[201.65766907 683.09338379]
[200.22824097 698.03741455]
[197.34091187 712.76934814]
[193.02348328 727.14733887]
[187.31755066 741.03289795]
[180.27803040 754.29229736]
[171.97276306 766.79791260]
[162.48170471 778.42913818]
[151.89627075 789.07415771]
[140.31840515 798.63024902]
[127.85961151 807.00555420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 186]
[40 184]
[41 183]
[42 182]
[43 170]
[44 169]
[45 168]
[46 167]
[47 166]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[63 149]
[64 148]
[65 147]
[68 145]
[69 144]
[70 143]
[71 141]
[72 140]
[73 139]
[74 138]
[76 136]
[77 135]
[78 134]
[83 131]
[84 130]
[85 129]
[86 128]
[89 124]
[90 123]
[91 122]
[94 119]
[95 118]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
