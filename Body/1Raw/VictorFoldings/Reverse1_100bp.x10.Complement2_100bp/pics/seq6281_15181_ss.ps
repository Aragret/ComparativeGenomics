%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[8.17001152 706.54626465]
[2.65758467 720.54364014]
[-5.33320427 733.28973389]
[-15.53019238 744.35028076]
[-27.58607292 753.34863281]
[-41.09022903 759.97827148]
[-55.58271027 764.01348877]
[-70.56990814 765.31671143]
[-85.54137421 763.84362793]
[-99.98717499 759.64440918]
[-113.41529083 752.86206055]
[-125.36837769 743.72760010]
[-135.43930054 732.55212402]
[-143.28506470 719.71630859]
[-148.63844299 705.65728760]
[-151.31707764 690.85388184]
[-151.22976685 675.81042480]
[-148.37947083 661.03912354]
[-142.86328125 647.04321289]
[-134.86904907 634.29931641]
[-124.66908264 623.24145508]
[-112.61077881 614.24639893]
[-99.10483551 607.62036133]
[-84.61126709 603.58911133]
[-69.62371826 602.28985596]
[-54.65264893 603.76702881]
[-50.46563721 589.36322021]
[-46.27862930 574.95941162]
[-42.09161758 560.55566406]
[-37.90460587 546.15185547]
[-33.71759415 531.74810791]
[-29.53058243 517.34429932]
[-25.34357071 502.94052124]
[-21.15656090 488.53674316]
[-35.35892105 493.36300659]
[-48.06905365 485.39730835]
[-49.91752625 470.51165771]
[-39.54170609 459.67916870]
[-24.59026909 460.88519287]
[-16.08511543 473.23904419]
[-10.83839703 459.18658447]
[-5.59167910 445.13409424]
[-15.17632961 433.73236084]
[-17.78437424 418.96569824]
[-12.61677265 404.78253174]
[-0.96726847 395.02621460]
[14.09981632 392.39367676]
[19.34653473 378.34121704]
[24.59325218 364.28872681]
[29.83997154 350.23626709]
[35.08668900 336.18377686]
[40.33340836 322.13131714]
[37.53662109 307.50164795]
[49.61220932 297.27957153]
[54.85892868 283.22711182]
[60.10564423 269.17462158]
[65.14256287 255.04560852]
[69.96855927 240.84315491]
[74.68869019 226.60516357]
[79.30270386 212.33242798]
[83.91670990 198.05969238]
[86.80198669 183.33979797]
[87.91763306 168.38134766]
[89.03327942 153.42289734]
[80.57268524 138.04806519]
[91.06661224 122.91667938]
[91.95942688 107.94327545]
[81.42984772 118.62634277]
[66.65119171 121.19371033]
[53.13553238 114.68779755]
[45.92387009 101.53515625]
[47.70598221 86.64139557]
[57.81718445 75.56152344]
[72.48624420 72.42805481]
[86.24197388 78.40969086]
[93.95407867 91.27658081]
[96.61987305 76.51535797]
[99.28566742 61.75414276]
[101.95146942 46.99292374]
[104.39719391 32.19365311]
[106.62231445 17.35961151]
[104.80053711 8.40869236]
[108.99256897 2.32193303]
[111.43830109 -12.47733784]
[106.05463409 -27.35439301]
[115.76355743 -38.64979172]
[118.20928192 -53.44906235]
[120.65501404 -68.24833679]
[123.10073853 -83.04760742]
[125.43622589 -97.86467743]
[127.66134644 -112.69871521]
[129.22186279 -127.61732483]
[130.11468506 -142.59072876]
[131.00749207 -157.56413269]
[131.78881836 -172.54377747]
[124.67544556 -186.67567444]
[132.97332764 -199.04475403]
[133.64311218 -214.02980042]
[134.31289673 -229.01483154]
[134.98269653 -243.99987793]
[121.34202576 -250.77130127]
[111.63984680 -262.50958252]
[107.55712128 -277.18103027]
[109.80120087 -292.24371338]
[117.98327637 -305.08792114]
[130.68577576 -313.48831177]
[145.70788574 -315.98947144]
[160.44696045 -312.15805054]
[172.34934998 -302.65789795]
[179.35290527 -289.13494873]
[180.24421692 -273.93215942]
[174.86883545 -259.68344116]
[164.15811157 -248.85754395]
[149.96772766 -243.33009338]
[149.29794312 -228.34504700]
[148.62815857 -213.36001587]
[147.95837402 -198.37496948]
[155.11965942 -185.31491089]
[146.77386475 -171.87399292]
[149.61555481 -165.05148315]
[145.98091125 -156.67131042]
[145.08808899 -141.69790649]
[144.19526672 -126.72451019]
[156.10403442 -135.84489441]
[170.99137878 -134.00999451]
[180.32917786 -122.27092743]
[178.76829529 -107.35236359]
[167.20288086 -97.80033112]
[152.25813293 -99.08666229]
[142.49539185 -110.47360229]
[140.27026367 -95.63955688]
[142.38676453 -88.55844116]
[137.90000916 -80.60187531]
[135.45428467 -65.80260468]
[133.00856018 -51.00333786]
[130.56283569 -36.20406723]
[136.12142944 -22.38555527]
[126.23757172 -10.03161049]
[123.79183960 4.76766014]
[121.45635223 19.58472824]
[119.23123932 34.41877365]
[121.29920197 38.72372055]
[120.68477631 44.37345505]
[116.71268463 49.65872192]
[114.04689026 64.41993713]
[111.38109589 79.18115234]
[108.71529388 93.94237518]
[106.93283081 108.83609009]
[106.04001617 123.80949402]
[114.00196838 133.95690918]
[112.95008087 146.40991211]
[103.99173737 154.53854370]
[102.87608337 169.49699402]
[101.76043701 184.45544434]
[109.97468567 171.90451050]
[121.94465637 162.86460876]
[136.26411438 158.39773560]
[151.25083923 159.02865601]
[165.14421082 164.68325806]
[176.31202698 174.69723511]
[183.44232178 187.89416504]
[185.69741821 202.72369385]
[182.81240845 217.44363403]
[175.12622070 230.32472229]
[163.54179382 239.85369873]
[149.42008972 244.91110229]
[134.42008972 244.90280151]
[120.30399323 239.82977295]
[108.73013306 230.28797913]
[101.05819702 217.39839172]
[98.18944550 202.67370605]
[93.57543945 216.94644165]
[88.96142578 231.21916199]
[89.29939270 240.34735107]
[84.17101288 245.66914368]
[79.34501648 259.87161255]
[80.25619507 266.41998291]
[78.05410767 271.65905762]
[74.15811920 274.42135620]
[68.91139984 288.47381592]
[63.66468048 302.52630615]
[66.08618164 318.16110229]
[54.38587952 327.37805176]
[49.13916016 341.43051147]
[43.89244080 355.48297119]
[38.64572525 369.53546143]
[33.39900589 383.58792114]
[28.15228844 397.64038086]
[37.80726624 409.50329590]
[40.21218872 424.50708008]
[34.82005692 438.60641479]
[23.17253113 448.05050659]
[8.46079254 450.38082886]
[3.21407413 464.43328857]
[-2.03264403 478.48577881]
[-6.75277853 492.72375488]
[-10.93978977 507.12753296]
[-15.12680054 521.53131104]
[-19.31381226 535.93511963]
[-23.50082397 550.33886719]
[-27.68783379 564.74267578]
[-31.87484550 579.14642334]
[-36.06185532 593.55023193]
[-40.24886703 607.95404053]
[-26.81892014 614.73272705]
[-14.86337566 623.86395264]
[-4.78943539 635.03674316]
[3.05978537 647.87048340]
[8.41694546 661.92803955]
[11.09958267 676.73065186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[32 198]
[33 197]
[34 196]
[40 195]
[41 194]
[42 193]
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[54 181]
[55 180]
[56 179]
[57 176]
[58 175]
[59 173]
[60 172]
[61 171]
[62 154]
[63 153]
[64 152]
[66 149]
[67 148]
[76 147]
[77 146]
[78 145]
[79 144]
[80 141]
[81 140]
[83 139]
[84 138]
[86 136]
[87 135]
[88 134]
[89 133]
[90 131]
[91 130]
[92 123]
[93 122]
[94 121]
[95 119]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
