%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[72.77641296 631.30969238]
[57.76841354 631.66595459]
[42.79777527 630.54937744]
[28.00866699 627.97076416]
[13.54352188 623.95501709]
[-0.45834878 618.54077148]
[-13.86209583 611.78009033]
[-26.53862953 603.73815918]
[-38.36586761 594.49249268]
[-49.22990417 584.13201904]
[-59.02610397 572.75653076]
[-67.66013336 560.47564697]
[-75.04882812 547.40759277]
[-81.12103271 533.67822266]
[-85.81826782 519.41979980]
[-89.09529877 504.76962280]
[-90.92056274 489.86877441]
[-91.27648163 474.86077881]
[-90.15962219 459.89013672]
[-87.58074951 445.10110474]
[-83.56468964 430.63601685]
[-78.15013123 416.63427734]
[-71.38921356 403.23065186]
[-63.34705734 390.55429077]
[-54.10110474 378.72723389]
[-43.74040985 367.86340332]
[-32.36474609 358.06741333]
[-20.08367920 349.43365479]
[-7.01548004 342.04522705]
[6.71399307 335.97329712]
[20.97251511 331.27633667]
[35.62276459 327.99960327]
[50.52364349 326.17462158]
[65.53165436 325.81900024]
[66.64730072 310.86056519]
[59.87804413 297.59304810]
[68.62032318 284.40658569]
[69.73596954 269.44812012]
[70.85162354 254.48968506]
[64.08235931 241.22218323]
[72.82463837 228.03570557]
[70.18733978 221.13162231]
[74.06988525 212.86338806]
[75.40811920 197.92320251]
[76.74635315 182.98301697]
[65.29225159 192.66824341]
[50.29336166 192.85076904]
[38.60697556 183.44712830]
[35.57595062 168.75656128]
[42.58602905 155.49537659]
[56.43230057 149.72642517]
[70.78443146 154.08718872]
[79.08126831 166.58578491]
[81.96654510 151.86589050]
[84.85181427 137.14601135]
[87.73709106 122.42610931]
[90.62236023 107.70622253]
[81.09597015 119.29276276]
[68.35826111 127.21430206]
[53.75347519 130.63485718]
[38.82289124 129.19346619]
[25.14216805 123.04222107]
[14.15506363 112.83029175]
[7.02107525 99.63536072]
[4.49306917 84.84992218]
[6.83783150 70.03431702]
[13.80791473 56.75207520]
[24.66774940 46.40489960]
[38.27127075 40.08475876]
[53.18286514 38.45862198]
[67.82888031 41.69810867]
[80.66368103 49.46134186]
[90.33279419 60.92905426]
[95.81579590 74.89102173]
[96.53404236 89.87400818]
[95.51705933 74.08552551]
[107.99300385 65.94918060]
[114.47250366 52.42083359]
[120.95199585 38.89249039]
[127.43149567 25.36414337]
[133.91099548 11.83579826]
[133.78442383 5.22553968]
[136.59347534 0.28527063]
[140.79010010 -1.99449480]
[147.66950989 -15.32392406]
[154.54891968 -28.65335274]
[161.42834473 -41.98278427]
[168.30775452 -55.31221008]
[173.44970703 -69.40335083]
[176.77197266 -84.03081512]
[180.09422302 -98.65827179]
[175.60560608 -113.82939148]
[185.96963501 -124.52687836]
[189.29188538 -139.15434265]
[175.35508728 -144.79006958]
[162.50285339 -152.58856201]
[151.06811523 -162.34780884]
[141.34704590 -173.81503296]
[133.59146118 -186.69319153]
[128.00222778 -200.64871216]
[124.72414398 -215.32012939]
[123.84210205 -230.32739258]
[125.37895203 -245.28179932]
[129.29489136 -259.79598999]
[135.48847961 -273.49398804]
[143.79930115 -286.02102661]
[154.01206970 -297.05261230]
[165.86225891 -306.30294800]
[179.04292297 -313.53250122]
[193.21264648 -318.55398560]
[208.00439453 -321.23730469]
[223.03503418 -321.51296997]
[237.91523743 -319.37384033]
[252.25955200 -314.87536621]
[265.69647217 -308.13400269]
[277.87786865 -299.32440186]
[288.48831177 -288.67474365]
[297.25289917 -276.46087646]
[303.94461060 -262.99920654]
[308.39013672 -248.63836670]
[310.47430420 -233.75036621]
[310.14315796 -218.72085571]
[307.40527344 -203.93910217]
[302.33154297 -189.78800964]
[295.05340576 -176.63412476]
[285.75936890 -164.81814575]
[274.69018555 -154.64616394]
[262.13256836 -146.38163757]
[248.41178894 -140.23864746]
[233.88323975 -136.37629700]
[218.92326355 -134.89465332]
[203.91935730 -135.83207703]
[200.59709167 -121.20462036]
[205.32334900 -107.07975769]
[194.72169495 -95.33601379]
[191.39942932 -80.70854950]
[188.07716370 -66.08109283]
[197.94430542 -77.37886047]
[210.91223145 -84.91764069]
[225.61238098 -87.90184021]
[240.49342346 -86.01654816]
[253.98493958 -79.46070099]
[264.66311646 -68.92617035]
[271.40109253 -55.52468491]
[273.48776245 -40.67053223]
[270.70291138 -25.93131065]
[263.34045410 -12.86248398]
[252.17736816 -2.84323502]
[238.39170837 3.06907916]
[223.43830872 4.25051880]
[208.89523315 0.57640290]
[196.29727173 -7.56552982]
[186.97387695 -19.31604195]
[181.90901184 -33.43507385]
[181.63717651 -48.43280029]
[174.75776672 -35.10337067]
[167.87835693 -21.77394104]
[160.99894714 -8.44451141]
[154.11952209 4.88491774]
[147.43933105 18.31529427]
[140.95983887 31.84363937]
[134.48034668 45.37198639]
[128.00085449 58.90032959]
[121.52135468 72.42867279]
[123.00179291 87.24952698]
[110.06238556 96.35350800]
[105.34225464 110.59149170]
[102.45697784 125.31138611]
[99.57170868 140.03128052]
[96.68643188 154.75117493]
[93.80116272 169.47105408]
[91.68653870 184.32125854]
[90.34830475 199.26144409]
[89.01007080 214.20162964]
[87.78309631 229.15136719]
[94.47255707 243.48878479]
[85.81007385 255.60533142]
[84.69442749 270.56378174]
[83.57877350 285.52224731]
[90.26823425 299.85964966]
[81.60575867 311.97619629]
[80.49010468 326.93466187]
[95.27931976 329.51263428]
[109.74462128 333.52783203]
[123.74671173 338.94155884]
[137.15072632 345.70166016]
[149.82759094 353.74307251]
[161.65519714 362.98831177]
[172.51963806 373.34835815]
[182.31629944 384.72341919]
[190.95082092 397.00396729]
[198.34002686 410.07174683]
[204.41278076 423.80084229]
[209.11059570 438.05908203]
[212.38821411 452.70913696]
[214.21406555 467.60989380]
[214.57058716 482.61788940]
[213.45433044 497.58856201]
[210.87605286 512.37774658]
[206.86056519 526.84295654]
[201.44656372 540.84490967]
[194.68618774 554.24877930]
[186.64453125 566.92547607]
[177.39906311 578.75292969]
[167.03880310 589.61718750]
[155.66352844 599.41357422]
[143.38279724 608.04785156]
[130.31489563 615.43682861]
[116.58567047 621.50927734]
[102.32733917 626.20684814]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 182]
[35 181]
[37 179]
[38 178]
[39 177]
[41 175]
[43 174]
[44 173]
[45 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[75 166]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[84 159]
[85 158]
[86 157]
[87 156]
[88 155]
[89 137]
[90 136]
[91 135]
[93 133]
[94 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
