%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[144.62547302 505.66668701]
[142.51721191 490.79821777]
[142.14936829 475.78552246]
[143.52691650 460.83163452]
[146.63122559 446.13876343]
[151.42031860 431.90567017]
[157.82942200 418.32479858]
[165.77186584 405.57983398]
[175.14022827 393.84313965]
[185.80781555 383.27340698]
[197.63038635 374.01364136]
[210.44801331 366.18899536]
[204.17065430 352.56567383]
[197.89329529 338.94238281]
[183.03884888 329.59826660]
[184.87968445 311.27633667]
[178.40019226 297.74798584]
[171.92070007 284.21963501]
[168.73449707 282.70950317]
[166.12145996 279.58108521]
[164.83419800 275.12054443]
[165.46908569 269.93945312]
[159.60012817 256.13525391]
[147.49993896 247.44995117]
[149.22090149 231.72262573]
[137.12069702 223.03732300]
[138.84165955 207.30999756]
[132.97270203 193.50581360]
[118.40305328 183.72357178]
[120.78858185 165.46458435]
[114.71475220 151.74931335]
[108.64091492 138.03404236]
[102.56708527 124.31877899]
[96.49324799 110.60351562]
[90.31748199 96.93384552]
[84.04012299 83.31052399]
[77.76275635 69.68721008]
[71.48539734 56.06389618]
[56.40343094 52.92694855]
[46.18001556 41.64265823]
[44.58044815 26.67918968]
[52.00976562 13.79729557]
[45.73240662 0.17397927]
[39.45504379 -13.44933701]
[38.35675430 1.51040101]
[32.27135086 15.22053909]
[21.91374588 26.07042313]
[8.50073814 32.78542328]
[-6.39192677 34.57666016]
[-21.01467133 31.23371124]
[-33.64963150 23.14929390]
[-42.81246567 11.27316284]
[-47.42673111 -2.99948764]
[-46.95034790 -17.99192047]
[-41.43928146 -31.94284058]
[-31.54097176 -43.21330643]
[-18.41825485 -50.47927856]
[-3.61277771 -52.88714981]
[11.13612652 -50.15405655]
[24.09577179 -42.60107040]
[33.74446106 -31.11415863]
[30.85918808 -45.83404922]
[27.97391510 -60.55393982]
[23.92357635 -65.77947998]
[23.22510338 -71.41944122]
[25.22874069 -75.75470734]
[22.78301430 -90.55397797]
[20.33728600 -105.35324860]
[17.89155960 -120.15251923]
[9.22778988 -107.90755463]
[-5.24748898 -103.97483063]
[-18.91637421 -110.15233612]
[-25.52963638 -123.61579895]
[-22.06378174 -138.20989990]
[-10.10335064 -147.26242065]
[4.88350773 -146.63465881]
[16.04588318 -136.61199951]
[15.15306759 -151.58540344]
[14.26025105 -166.55880737]
[13.36743546 -181.53222656]
[12.47461987 -196.50563049]
[1.98069143 -211.63700867]
[10.44129181 -227.01184082]
[6.68227768 -235.33695984]
[9.42207909 -242.20101929]
[8.52926350 -257.17440796]
[7.63644791 -272.14782715]
[-7.28995323 -274.02325439]
[-21.61752319 -278.60968018]
[-34.85826874 -285.75091553]
[-46.56122208 -295.20373535]
[-56.32777405 -306.64614868]
[-63.82528687 -319.68847656]
[-68.79840088 -333.88644409]
[-71.07772064 -348.75653076]
[-70.58563232 -363.79223633]
[-67.33887482 -378.48147583]
[-61.44805145 -392.32388306]
[-53.11378860 -404.84805298]
[-42.61995316 -415.62738037]
[-30.32395744 -424.29476929]
[-16.64460373 -430.55493164]
[-2.04780388 -434.19473267]
[12.96928215 -435.09014893]
[27.89517593 -433.21069336]
[42.22151184 -428.62039185]
[55.46033096 -421.47561646]
[67.16073608 -412.01965332]
[76.92420197 -400.57458496]
[84.41819763 -387.53024292]
[89.38748169 -373.33093262]
[91.66280365 -358.46023560]
[91.16665649 -343.42465210]
[87.91593933 -328.73629761]
[82.02138519 -314.89547729]
[73.68374634 -302.37353516]
[63.18700409 -291.59704590]
[50.88867569 -282.93298340]
[37.20763397 -276.67648315]
[22.60985374 -273.04064941]
[23.50267029 -258.06723022]
[24.39548492 -243.09382629]
[25.39974594 -228.12748718]
[34.35809326 -219.99885559]
[35.40998077 -207.54585266]
[27.44802475 -197.39843750]
[28.34084129 -182.42503357]
[29.23365784 -167.45162964]
[30.12647247 -152.47822571]
[31.01928902 -137.50482178]
[32.69083023 -122.59824371]
[35.13655853 -107.79897308]
[37.58228302 -92.99970245]
[40.02801132 -78.20043182]
[42.69380569 -63.43921280]
[45.57907867 -48.71932220]
[48.46435165 -33.99943161]
[53.07836151 -19.72669792]
[59.35572433 -6.10338163]
[65.63307953 7.51993465]
[80.25249481 10.24219894]
[90.58789825 21.18036461]
[92.52333832 36.28359222]
[85.10871887 49.78653336]
[91.38607788 63.40985107]
[97.66343689 77.03316498]
[103.94079590 90.65648651]
[109.90612793 96.07749176]
[110.20851898 104.52967834]
[116.28234863 118.24494934]
[122.35618591 131.96022034]
[128.43002319 145.67547607]
[134.50384521 159.39074707]
[146.23295593 164.75645447]
[151.00950623 176.30497742]
[146.77687073 187.63685608]
[152.64584351 201.44102478]
[165.16581726 211.11370850]
[163.02507019 225.85366821]
[175.54505920 235.52633667]
[173.40431213 250.26629639]
[179.27326965 264.07046509]
[185.44903564 277.74014282]
[191.92852783 291.26849365]
[198.40803528 304.79684448]
[210.29168701 309.81094360]
[215.40997314 321.21212769]
[211.51660156 332.66500854]
[217.79396057 346.28833008]
[224.07133484 359.91165161]
[238.34735107 355.25204468]
[253.06777954 352.28134155]
[268.03356934 351.03967285]
[283.04232788 351.54388428]
[297.89102173 353.78710938]
[312.37890625 357.73907471]
[326.31002808 363.34625244]
[339.49597168 370.53286743]
[351.75842285 379.20172119]
[362.93154907 389.23556519]
[372.86422729 400.49868774]
[381.42214966 412.83880615]
[388.48956299 426.08901978]
[393.97091675 440.07012939]
[397.79205322 454.59304810]
[399.90130615 469.46139526]
[400.27014160 484.47409058]
[398.89358521 499.42807007]
[395.79025269 514.12109375]
[391.00213623 528.35455322]
[384.59393311 541.93585205]
[376.65234375 554.68133545]
[367.28475952 566.41864014]
[356.61785889 576.98907471]
[344.79592896 586.24963379]
[331.97882080 594.07513428]
[318.33987427 600.35968018]
[304.06353760 605.01837158]
[289.34289551 607.98809814]
[274.37704468 609.22875977]
[259.36831665 608.72351074]
[244.51976013 606.47930908]
[230.03213501 602.52636719]
[216.10139465 596.91827393]
[202.91593933 589.73077393]
[190.65406799 581.06109619]
[179.48161316 571.02655029]
[169.54968262 559.76269531]
[160.99259949 547.42205811]
[153.92605591 534.17132568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 170]
[13 169]
[14 168]
[16 165]
[17 164]
[18 163]
[22 162]
[23 161]
[25 159]
[27 157]
[28 156]
[30 153]
[31 152]
[32 151]
[33 150]
[34 149]
[35 147]
[36 146]
[37 145]
[38 144]
[42 140]
[43 139]
[44 138]
[61 137]
[62 136]
[63 135]
[66 134]
[67 133]
[68 132]
[69 131]
[77 130]
[78 129]
[79 128]
[80 127]
[81 126]
[83 123]
[85 122]
[86 121]
[87 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
