%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[21.21875191 403.19027710]
[19.50612068 418.10574341]
[16.26892281 432.76602173]
[11.54147434 447.01577759]
[5.37388802 460.70391846]
[-2.16845679 473.68533325]
[-11.00560665 485.82241821]
[-21.04388237 496.98651123]
[-32.17687225 507.05926514]
[-44.28656006 515.93389893]
[-57.24457932 523.51635742]
[-70.91356659 529.72631836]
[-85.14862061 534.49780273]
[-99.79884338 537.78033447]
[-114.70893097 539.53906250]
[-129.72084045 539.75543213]
[-144.67541504 538.42706299]
[-159.41413879 535.56811523]
[-173.78079224 531.20880127]
[-187.62304688 525.39538574]
[-200.79418945 518.18945312]
[-213.15460205 509.66748047]
[-224.57324219 499.91970825]
[-234.92906189 489.04953003]
[-244.11230469 477.17214966]
[-252.02561951 464.41348267]
[-258.58508301 450.90878296]
[-263.72122192 436.80117798]
[-267.37954712 422.24026489]
[-269.52130127 407.38034058]
[-270.12374878 392.37896729]
[-269.18054199 377.39517212]
[-266.70166016 362.58776855]
[-262.71337891 348.11373901]
[-257.25799561 334.12649536]
[-250.39329529 320.77435303]
[-242.19209290 308.19879150]
[-232.74131775 296.53317261]
[-222.14112854 285.90112305]
[-210.50392151 276.41537476]
[-197.95304871 268.17648315]
[-184.62155151 261.27175903]
[-170.65075684 255.77441406]
[-156.18875122 251.74270630]
[-141.38885498 249.21940613]
[-126.40795135 248.23123169]
[-111.40484619 248.78866577]
[-96.53857422 250.88580322]
[-81.96672821 254.50041199]
[-67.84378815 259.59417725]
[-54.31945038 266.11309814]
[-41.53709030 273.98809814]
[-32.39828873 262.09344482]
[-30.77964401 247.28706360]
[-16.23635101 241.05784607]
[-7.09754896 229.16320801]
[2.04125357 217.26858521]
[11.18005562 205.37394714]
[20.31885910 193.47930908]
[29.45766068 181.58468628]
[38.59646225 169.69004822]
[47.64646149 157.72770691]
[56.60715866 145.69833374]
[65.56785583 133.66896057]
[74.52854919 121.63957977]
[67.66738892 108.46571350]
[67.19208527 93.61982727]
[73.19651031 80.03404999]
[84.49476624 70.39166260]
[98.85538483 66.59706879]
[113.44207001 69.39972687]
[122.40277100 57.37034988]
[131.09259033 45.14386368]
[139.50721741 32.72636795]
[147.92182922 20.30887222]
[156.33644104 7.89137602]
[164.75106812 -4.52611923]
[173.16567993 -16.94361496]
[181.58030701 -29.36111069]
[189.99491882 -41.77860641]
[198.40954590 -54.19610214]
[205.58489990 -67.36857605]
[211.45387268 -81.17275238]
[217.32283020 -94.97692871]
[223.19178772 -108.78110504]
[229.06074524 -122.58528137]
[234.92971802 -136.38946533]
[235.40747070 -145.51138306]
[240.99018860 -150.35443115]
[247.06401062 -164.06970215]
[253.13784790 -177.78497314]
[259.21170044 -191.50024414]
[265.28552246 -205.21549988]
[252.35281372 -212.84843445]
[240.39369202 -221.93116760]
[229.56991577 -232.34089661]
[220.02784729 -243.93681335]
[211.89653015 -256.56210327]
[205.28593445 -270.04605103]
[200.28547668 -284.20626831]
[196.96275330 -298.85128784]
[195.36271667 -313.78298950]
[195.50700378 -328.79949951]
[197.39366150 -343.69772339]
[200.99717712 -358.27618408]
[206.26881409 -372.33770752]
[213.13728333 -385.69213867]
[221.50970459 -398.15884399]
[231.27282715 -409.56927490]
[242.29464722 -419.76910400]
[254.42607117 -428.62036133]
[267.50305176 -436.00335693]
[281.34875488 -441.81826782]
[295.77590942 -445.98645020]
[310.58944702 -448.45150757]
[325.58895874 -449.18011475]
[340.57162476 -448.16241455]
[355.33486938 -445.41217041]
[369.67895508 -440.96661377]
[383.40997314 -434.88580322]
[396.34216309 -427.25201416]
[408.30065918 -418.16845703]
[419.12374878 -407.75802612]
[428.66503906 -396.16146851]
[436.79553223 -383.53561401]
[443.40521240 -370.05123901]
[448.40475464 -355.89068604]
[451.72647095 -341.24545288]
[453.32553101 -326.31362915]
[453.18023682 -311.29711914]
[451.29257202 -296.39904785]
[447.68807983 -281.82083130]
[442.41552734 -267.75964355]
[435.54614258 -254.40570068]
[427.17291260 -241.93952942]
[417.40902710 -230.52975464]
[406.38653564 -220.33067322]
[394.25448608 -211.48022461]
[381.17700195 -204.09808350]
[367.33093262 -198.28410339]
[352.90350342 -194.11689758]
[338.08981323 -191.65283203]
[323.09024048 -190.92521667]
[308.10763550 -191.94392395]
[293.34460449 -194.69512939]
[279.00079346 -199.14167786]
[272.92694092 -185.42640686]
[266.85311890 -171.71113586]
[260.77929688 -157.99586487]
[254.70544434 -144.28060913]
[248.73388672 -130.52050781]
[242.86492920 -116.71632385]
[236.99597168 -102.91214752]
[231.12699890 -89.10797119]
[225.25804138 -75.30379486]
[219.38908386 -61.49961472]
[231.61596680 -70.18888092]
[246.30369568 -73.23362732]
[260.97714233 -70.12075806]
[273.16357422 -61.37483978]
[280.80935669 -48.46971893]
[282.62603760 -33.58013535]
[278.30746460 -19.21524620]
[268.58142090 -7.79578543]
[255.08689880 -1.24613369]
[240.09797668 -0.67002201]
[226.14053345 -6.16453552]
[215.56663513 -16.80375290]
[210.15820312 -30.79477692]
[210.82704163 -45.78148270]
[202.41241455 -33.36398697]
[193.99780273 -20.94649124]
[185.58317566 -8.52899647]
[177.16856384 3.88849926]
[168.75393677 16.30599403]
[160.33932495 28.72348976]
[151.92471313 41.14098740]
[143.51008606 53.55848312]
[143.81280518 57.07141495]
[142.42904663 60.90550613]
[139.22637939 64.26650238]
[134.43214417 66.33104706]
[125.47145081 78.36042023]
[132.33261108 91.53428650]
[132.80792236 106.38017273]
[126.80348969 119.96595001]
[115.50523376 129.60833740]
[101.14461517 133.40293884]
[86.55792999 130.60028076]
[77.59722900 142.62965393]
[68.63653564 154.65902710]
[59.67584229 166.68840027]
[57.05899811 175.43997192]
[50.49109650 178.82885742]
[41.35229492 190.72348022]
[32.21348953 202.61811829]
[23.07468796 214.51275635]
[13.93588638 226.40737915]
[4.79708433 238.30201721]
[-4.34171820 250.19664001]
[-6.61403179 265.85382080]
[-20.50365639 271.23226929]
[-29.64245796 283.12689209]
[-18.74029350 293.44903564]
[-8.95726204 304.83746338]
[-0.39707008 317.17144775]
[6.84953928 330.32025146]
[12.70574760 344.14447021]
[17.10947609 358.49755859]
[20.01404381 373.22735596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 203]
[53 202]
[55 200]
[56 199]
[57 198]
[58 197]
[59 196]
[60 195]
[61 194]
[62 192]
[63 191]
[64 190]
[65 189]
[71 183]
[72 182]
[73 178]
[74 177]
[75 176]
[76 175]
[77 174]
[78 173]
[79 172]
[80 171]
[81 170]
[82 156]
[83 155]
[84 154]
[85 153]
[86 152]
[87 151]
[89 150]
[90 149]
[91 148]
[92 147]
[93 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
