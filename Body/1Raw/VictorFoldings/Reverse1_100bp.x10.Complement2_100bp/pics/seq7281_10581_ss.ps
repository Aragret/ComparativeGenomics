%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[2.24639535 360.19482422]
[9.93355846 373.10702515]
[15.65868187 387.00094604]
[19.29973412 401.58041382]
[20.77910805 416.53463745]
[20.06526947 431.54492188]
[17.17343330 446.29129028]
[12.16523838 460.45941162]
[5.14743757 473.74731445]
[-3.73038650 485.87176514]
[-14.27900219 496.57431030]
[-26.27356339 505.62683105]
[-39.45840836 512.83636475]
[-53.55249786 518.04931641]
[-68.25541687 521.15447998]
[-83.25377655 522.08569336]
[-98.22787476 520.82305908]
[-112.85855103 517.39361572]
[-126.83394623 511.87036133]
[-139.85617065 504.37106323]
[-151.64764404 495.05554199]
[-161.95706177 484.12240601]
[-170.56465149 471.80462646]
[-177.28695679 458.36483765]
[-181.98068237 444.08944702]
[-184.54577637 429.28274536]
[-184.92756653 414.26034546]
[-183.11793518 399.34246826]
[-179.15542603 384.84707642]
[-173.12451172 371.08316040]
[-165.15374756 358.34405518]
[-155.41302490 346.90130615]
[-144.10997009 336.99884033]
[-131.48551941 328.84771729]
[-117.80873108 322.62167358]
[-103.37115479 318.45343018]
[-88.48052216 316.43182373]
[-73.45423126 316.59994507]
[-58.61255646 318.95422363]
[-44.27185440 323.44445801]
[-30.73780441 329.97494507]
[-22.32318687 317.55746460]
[-13.90856743 305.13995361]
[-5.49394894 292.72247314]
[2.92066956 280.30496216]
[11.33528805 267.88748169]
[19.65723228 255.40768433]
[27.88603973 242.86628723]
[36.11484909 230.32489014]
[44.34365463 217.78347778]
[52.57246399 205.24208069]
[60.80126953 192.70068359]
[67.17987823 179.12448120]
[71.58087158 164.78462219]
[75.98187256 150.44477844]
[80.38287354 136.10493469]
[74.99429321 125.27489471]
[78.54347992 113.29211426]
[89.65071869 106.73527527]
[78.98088837 117.27827454]
[65.70533752 124.26108551]
[50.97251892 127.07962036]
[36.05698395 125.49005890]
[22.24906349 119.62991333]
[10.74328613 110.00613403]
[2.53501749 97.45127869]
[-1.66564691 83.05147552]
[-1.49530697 68.05244446]
[3.03130102 53.75174713]
[11.52258015 41.38654709]
[23.24394989 32.02655411]
[37.18139648 26.48150063]
[52.12918854 25.23108673]
[66.79418945 28.38348961]
[79.90773773 35.66599274]
[90.33538055 46.44858932]
[97.17501068 59.79847336]
[99.83494568 74.56074524]
[98.08598328 89.45493317]
[106.50060272 77.03743744]
[114.91522217 64.61994171]
[123.32984161 52.20244598]
[131.74446106 39.78495026]
[140.15907288 27.36745644]
[148.57369995 14.94996071]
[149.42909241 8.39406109]
[152.93991089 3.92514801]
[157.42829895 2.29313827]
[166.20890808 -9.86831760]
[174.98950195 -22.02977371]
[181.76950073 -35.41004562]
[186.38349915 -49.68278122]
[190.99751282 -63.95551300]
[195.61152649 -78.22824860]
[200.11915588 -92.53493500]
[204.52015686 -106.87477875]
[208.92114258 -121.21463013]
[213.32214355 -135.55447388]
[199.92819214 -142.39356995]
[187.92544556 -151.45474243]
[177.67863464 -162.46264648]
[169.49914551 -175.08276367]
[163.63557434 -188.93157959]
[160.26608276 -203.58822632]
[159.49307251 -218.60734558]
[161.34002686 -233.53248596]
[165.75083923 -247.91009521]
[172.59144592 -261.30328369]
[181.65399170 -273.30499268]
[192.66305542 -283.55056763]
[205.28408813 -291.72860718]
[219.13356018 -297.59063721]
[233.79060364 -300.95846558]
[248.80979919 -301.72976685]
[263.73474121 -299.88110352]
[278.11184692 -295.46865845]
[291.50424194 -288.62655640]
[303.50494385 -279.56265259]
[313.74926758 -268.55239868]
[321.92587280 -255.93045044]
[327.78631592 -242.08030701]
[331.15249634 -227.42288208]
[331.92208862 -212.40359497]
[330.07174683 -197.47888184]
[325.65768433 -183.10226440]
[318.81402588 -169.71063232]
[309.74877930 -157.71096802]
[298.73736572 -147.46789551]
[286.11447144 -139.29270935]
[272.26367188 -133.43385315]
[257.60586548 -130.06933594]
[242.58650208 -129.30143738]
[227.66198730 -131.15347290]
[223.26100159 -116.81362915]
[218.86000061 -102.47378540]
[214.45899963 -88.13393402]
[215.50166321 -80.81719971]
[209.88426208 -73.61423492]
[205.27024841 -59.34150314]
[200.65623474 -45.06877136]
[196.04223633 -30.79603767]
[206.60052490 -41.45072174]
[219.61451721 -48.90969086]
[234.14468384 -52.63448334]
[249.14210510 -52.35619736]
[263.52407837 -48.09492111]
[276.25241089 -40.15828705]
[286.40817261 -29.11924171]
[293.25820923 -15.77470398]
[296.30807495 -1.08802879]
[295.33752441 13.88053989]
[290.41668701 28.05040932]
[281.90075684 40.39864349]
[270.40451050 50.03381348]
[256.75787354 56.26034927]
[241.94604492 58.62874603]
[227.03825378 56.96803665]
[213.11074829 51.39810181]
[201.16893005 42.32104111]
[192.07490540 30.39213753]
[186.48518372 16.47254753]
[184.80328369 1.56713760]
[187.15095520 -13.24917030]
[178.37036133 -1.08771420]
[169.58975220 11.07374191]
[160.99119568 23.36458015]
[152.57656860 35.78207397]
[144.16195679 48.19956970]
[135.74732971 60.61706543]
[127.33271790 73.03456116]
[118.91809845 85.45205688]
[110.50347900 97.86955261]
[103.92345428 111.34928894]
[108.19561005 129.26101685]
[94.72271729 140.50593567]
[90.32171631 154.84577942]
[85.92072296 169.18562317]
[81.51972198 183.52546692]
[92.03139496 172.82478333]
[105.20151520 165.64509583]
[119.89073944 162.60751343]
[134.82829285 163.97483826]
[148.72192383 169.62875366]
[160.36970520 179.08016968]
[168.76399231 191.51141357]
[173.17858887 205.84709167]
[173.23158264 220.84700012]
[168.91838074 235.21350098]
[160.61215210 247.70375061]
[149.03143311 257.23721313]
[135.17808533 262.98916626]
[120.25057220 264.46197510]
[105.54026031 261.52828979]
[92.31974030 254.44181824]
[81.73271942 243.81567383]
[74.69508362 230.56910706]
[71.81565857 215.84806824]
[73.34267426 200.92948914]
[65.11386108 213.47088623]
[56.88505554 226.01229858]
[48.65624619 238.55369568]
[40.42744064 251.09509277]
[32.19863129 263.63650513]
[30.10733032 272.52828979]
[23.75278282 276.30209351]
[15.33816528 288.71960449]
[6.92354631 301.13708496]
[-1.49107230 313.55459595]
[-9.90569115 325.97207642]
[-18.32030869 338.38958740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 210]
[42 209]
[43 208]
[44 207]
[45 206]
[46 205]
[47 203]
[48 202]
[49 201]
[50 200]
[51 199]
[52 198]
[53 178]
[54 177]
[55 176]
[56 175]
[59 173]
[79 172]
[80 171]
[81 170]
[82 169]
[83 168]
[84 167]
[85 166]
[88 165]
[89 164]
[90 163]
[91 141]
[92 140]
[93 139]
[94 138]
[95 136]
[96 135]
[97 134]
[98 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
