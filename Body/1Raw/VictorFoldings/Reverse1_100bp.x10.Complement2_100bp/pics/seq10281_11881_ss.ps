%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[86.19649506 634.04382324]
[78.06037140 646.70086670]
[67.67572021 657.58917236]
[55.41795731 666.31518555]
[41.73018265 672.56347656]
[27.10719872 676.10821533]
[12.07762146 676.82116699]
[-2.81524110 674.67657471]
[-17.03302002 669.75201416]
[-30.06175232 662.22552490]
[-41.43045807 652.36907959]
[-50.72816467 640.53906250]
[-57.61876678 627.16314697]
[-61.85317230 612.72473145]
[-63.27831268 597.74591064]
[-61.84266663 582.76806641]
[-57.59813309 568.33270264]
[-50.69815063 554.96160889]
[-41.39214706 543.13812256]
[-30.01653099 533.28967285]
[-16.98252106 525.77227783]
[-2.76129127 520.85766602]
[12.13307190 518.72357178]
[27.16214561 519.44708252]
[30.70181847 504.87069702]
[34.24148941 490.29431152]
[37.78116226 475.71795654]
[41.32083511 461.14157104]
[44.86050797 446.56518555]
[48.40018082 431.98883057]
[51.28545380 417.26892090]
[53.51057053 402.43487549]
[47.74685287 388.70065308]
[57.44568253 376.20092773]
[59.67079926 361.36688232]
[61.89591599 346.53283691]
[56.13219833 332.79861450]
[65.83102417 320.29888916]
[68.05614471 305.46484375]
[70.28125763 290.63079834]
[56.43205261 280.40155029]
[49.63639069 264.48513794]
[51.84937668 247.23095703]
[62.55083466 233.40382385]
[78.86397552 226.86817932]
[80.64644623 211.97447205]
[82.42890930 197.08074951]
[84.21137238 182.18702698]
[85.88291931 167.28045654]
[87.44343567 152.36186218]
[89.00395966 137.44325256]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[83.20665741 71.64868927]
[68.34828186 69.59234619]
[59.18630219 57.71555328]
[60.96912384 42.82188034]
[72.67546844 33.44309616]
[87.59940338 34.95179367]
[97.19153595 46.48281860]
[99.63726044 31.68354988]
[102.08299255 16.88427925]
[104.52871704 2.08500791]
[102.56202698 -4.22717667]
[103.88043213 -9.75518227]
[107.27389526 -13.11575413]
[110.15916443 -27.83564568]
[103.78880310 -45.11280060]
[115.82999420 -57.87903595]
[118.49578857 -72.64025116]
[121.16158295 -87.40146637]
[123.82737732 -102.16268921]
[110.90124512 -114.87774658]
[108.21881104 -132.65087891]
[116.66747284 -148.33752441]
[132.69815063 -155.74621582]
[134.92327881 -170.58026123]
[129.31871033 -185.37550354]
[138.85838318 -196.81420898]
[141.08349609 -211.64825439]
[143.30862427 -226.48229980]
[134.18609619 -239.10835266]
[136.65400696 -254.12049866]
[148.74723816 -262.73959351]
[150.97236633 -277.57363892]
[153.19747925 -292.40768433]
[138.80567932 -296.72705078]
[125.17510223 -303.05068970]
[112.58326721 -311.24984741]
[101.28650665 -321.15762329]
[91.51483154 -332.57229614]
[83.46716309 -345.26150513]
[77.30734253 -358.96688843]
[73.16078949 -373.40942383]
[71.11190796 -388.29507446]
[71.20241547 -403.32080078]
[73.43046570 -418.18069458]
[77.75070953 -432.57223511]
[84.07518005 -446.20242310]
[92.27513123 -458.79376221]
[102.18360901 -470.08990479]
[113.59889984 -479.86087036]
[126.28859711 -487.90774536]
[139.99435425 -494.06671143]
[154.43714905 -498.21237183]
[169.32293701 -500.26034546]
[184.34866333 -500.16891479]
[199.20841980 -497.93994141]
[213.59968567 -493.61880493]
[227.22947693 -487.29348755]
[239.82029724 -479.09277344]
[251.11582947 -469.18359375]
[260.88610840 -457.76770020]
[268.93218994 -445.07748413]
[275.09030151 -431.37133789]
[279.23507690 -416.92831421]
[281.28213501 -402.04238892]
[281.18975830 -387.01666260]
[278.95986938 -372.15704346]
[274.63784790 -357.76605225]
[268.31167603 -344.13665771]
[260.11016846 -331.54632568]
[250.20028687 -320.25143433]
[238.78379822 -310.48187256]
[226.09309387 -302.43655396]
[212.38658142 -296.27926636]
[197.94326782 -292.13540649]
[183.05723572 -290.08929443]
[168.03152466 -290.18258667]
[165.80639648 -275.34854126]
[163.58128357 -260.51449585]
[172.61344910 -248.72654724]
[170.56817627 -233.65101624]
[158.14266968 -224.25718689]
[155.91754150 -209.42314148]
[153.69242859 -194.58909607]
[159.45614624 -180.85487366]
[149.75732422 -168.35514832]
[147.53219604 -153.52110291]
[157.35290527 -146.38464355]
[163.24234009 -135.68663025]
[164.02908325 -123.42766571]
[159.50257874 -111.93025970]
[150.46475220 -103.39878082]
[138.58859253 -99.49688721]
[135.92280579 -84.73567200]
[133.25700378 -69.97445679]
[130.59121704 -55.21323776]
[137.22854614 -45.10026550]
[135.12843323 -32.78063202]
[124.87905884 -24.95037270]
[121.99378204 -10.23048210]
[119.32798767 4.53073549]
[116.88226318 19.33000565]
[114.43653107 34.12927628]
[111.99080658 48.92854691]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[107.74488068 132.67829895]
[103.92256927 139.00376892]
[102.36204529 153.92237854]
[100.80152130 168.84098816]
[103.02115631 177.70162964]
[99.10509491 183.96949768]
[97.32262421 198.86322021]
[95.54016113 213.75692749]
[93.75769806 228.65065002]
[104.78388214 235.37394714]
[112.42054749 245.73042297]
[115.56165314 258.16055298]
[113.77481079 270.80914307]
[107.36047363 281.80203247]
[97.30204010 289.52401733]
[85.11530304 292.85592651]
[82.89019012 307.68997192]
[80.66506958 322.52401733]
[86.26963043 337.31927490]
[76.72995758 348.75796509]
[74.50484467 363.59201050]
[72.27972412 378.42605591]
[77.88428497 393.22131348]
[68.34461212 404.66000366]
[66.11949921 419.49404907]
[78.79444885 411.47247314]
[93.45873260 414.62823486]
[101.71197510 427.15356445]
[98.82634735 441.87338257]
[86.45487213 450.35552979]
[71.68448639 447.74099731]
[62.97655487 435.52850342]
[59.43688202 450.10485840]
[55.89720917 464.68124390]
[52.35753632 479.25762939]
[48.81786728 493.83398438]
[45.27819443 508.41036987]
[41.73852158 522.98675537]
[55.42560196 529.23657227]
[67.68239594 537.96398926]
[78.06582642 548.85345459]
[86.20053864 561.51135254]
[91.79246521 575.48016357]
[94.63947296 590.25482178]
[94.63863373 605.30133057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[31 190]
[32 189]
[34 187]
[35 186]
[36 185]
[38 183]
[39 182]
[40 181]
[45 174]
[46 173]
[47 172]
[48 171]
[49 169]
[50 168]
[51 167]
[52 165]
[53 164]
[54 162]
[55 161]
[56 160]
[63 159]
[64 158]
[65 157]
[66 156]
[69 155]
[70 154]
[72 151]
[73 150]
[74 149]
[75 148]
[79 142]
[80 141]
[82 139]
[83 138]
[84 137]
[87 134]
[88 133]
[89 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
