%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[149.03804016 579.59985352]
[134.87371826 574.20098877]
[123.41216278 564.28088379]
[116.03740692 551.03747559]
[113.63999176 536.06988525]
[116.50941467 521.18560791]
[124.29918671 508.18191528]
[136.06864929 498.62915039]
[150.39657593 493.68078613]
[150.61990356 478.68243408]
[150.84323120 463.68411255]
[151.06655884 448.68576050]
[151.28988647 433.68743896]
[151.51321411 418.68908691]
[151.73654175 403.69076538]
[148.69297791 396.95590210]
[152.07650757 388.47122192]
[152.52311707 373.47787476]
[150.85157776 358.57128906]
[147.09527588 344.04925537]
[143.33897400 329.52719116]
[139.58267212 315.00512695]
[127.39670563 313.92776489]
[116.10636139 309.15441895]
[106.80633545 301.13156128]
[100.40332031 290.62161255]
[97.52764130 278.63037109]
[98.47121429 266.31076050]
[103.15798950 254.85208130]
[111.14984894 245.36506653]
[121.68751526 238.77433777]
[118.58340454 224.09902954]
[108.37979889 213.24842834]
[113.09379578 198.14581299]
[109.98968506 183.47052002]
[99.78607941 172.61990356]
[104.50007629 157.51730347]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[77.96434021 86.88573456]
[63.12255478 89.05860901]
[51.00952911 80.21131134]
[48.56415558 65.41198730]
[57.18725586 53.13834763]
[71.93912506 50.42129898]
[84.36869812 58.81650162]
[82.58622742 43.92278290]
[80.80376434 29.02906609]
[79.02130127 14.13534927]
[67.64533997 -0.34460461]
[75.17581177 -16.19575310]
[73.17179871 -31.06128120]
[69.43967438 -36.51863861]
[69.07813263 -42.19017410]
[71.33625793 -46.39848709]
[69.77573395 -61.31709290]
[68.21520996 -76.23569489]
[66.65468597 -91.15430450]
[65.09416199 -106.07290649]
[59.06752396 -92.33683777]
[48.53758621 -81.65412140]
[34.88975143 -75.43025208]
[19.91962242 -74.48408508]
[5.59677744 -78.94010925]
[-6.19436502 -88.21205139]
[-13.90247822 -101.08003998]
[-16.51342773 -115.85105133]
[-13.68369675 -130.58172607]
[-5.78558636 -143.33396912]
[6.14177084 -152.43002319]
[20.52912712 -156.67314148]
[35.48357773 -155.50505066]
[49.03760529 -149.07945251]
[59.40795135 -138.24174500]
[65.23072052 -124.41548157]
[67.01318359 -139.30920410]
[68.79565430 -154.20291138]
[70.57811737 -169.09663391]
[72.36058044 -183.99035645]
[74.14305115 -198.88406372]
[75.92551422 -213.77778625]
[77.70798492 -228.67150879]
[63.84703064 -234.65097046]
[52.24430847 -244.28419495]
[43.83467484 -256.78393555]
[39.29256821 -271.13235474]
[38.97794724 -286.16409302]
[42.90776443 -300.66073608]
[50.75528717 -313.44967651]
[61.87724304 -323.49896240]
[75.36655426 -330.00045776]
[90.12630463 -332.43502808]
[91.90876770 -347.32876587]
[93.69123840 -362.22247314]
[95.47370148 -377.11618042]
[81.58303833 -383.05136108]
[69.92806244 -392.66064453]
[61.45357513 -405.16503906]
[56.84657669 -419.55087280]
[56.48052597 -434.65194702]
[60.38510513 -449.24411011]
[68.24378204 -462.14440918]
[79.41949463 -472.30709839]
[93.00627136 -478.90832520]
[107.90270233 -481.41293335]
[122.90119171 -479.61795044]
[136.78587341 -473.66882324]
[148.43119812 -464.04782104]
[156.89311218 -451.53494263]
[161.48565674 -437.14447021]
[161.83654785 -422.04302979]
[157.91729736 -407.45480347]
[150.04566956 -394.56240845]
[138.85975647 -384.41094971]
[125.26634979 -377.82339478]
[110.36741638 -375.33374023]
[108.58495331 -360.44000244]
[106.80248260 -345.54629517]
[105.02001953 -330.65258789]
[118.78842163 -324.80377197]
[130.36256409 -315.30270386]
[138.79901123 -302.91268921]
[143.40698242 -288.63308716]
[143.80493164 -273.61849976]
[139.95202637 -259.08554077]
[132.15228271 -246.21415710]
[121.03048706 -236.05194092]
[107.48221588 -229.42875671]
[92.60169983 -226.88903809]
[90.81922913 -211.99531555]
[89.03676605 -197.10160828]
[87.25430298 -182.20788574]
[85.47183228 -167.31416321]
[83.68936920 -152.42045593]
[81.90690613 -137.52673340]
[80.12443542 -122.63301849]
[80.01277161 -107.63343048]
[81.57329559 -92.71482849]
[83.13381958 -77.79621887]
[84.69433594 -62.87761688]
[86.25485992 -47.95901108]
[88.03733063 -33.06529236]
[90.04134369 -18.19976616]
[99.46762848 -10.61876202]
[101.25887299 1.74955320]
[93.91501617 12.35288334]
[95.69747925 27.24660110]
[97.47994995 42.14031982]
[99.26241302 57.03403473]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[119.17538452 154.41319275]
[129.60101318 166.31347656]
[124.66498566 180.36640930]
[127.76909637 195.04170227]
[138.19473267 206.94198608]
[133.25871277 220.99491882]
[136.36282349 235.67022705]
[153.91821289 239.46125793]
[168.00395203 250.51815796]
[175.80934143 266.57565308]
[175.80273438 284.37673950]
[168.03182983 300.33316040]
[154.10473633 311.24880981]
[157.86103821 325.77087402]
[161.61734009 340.29293823]
[165.37362671 354.81500244]
[168.72889709 340.19506836]
[176.19236755 327.18368530]
[187.11837769 316.90640259]
[200.56173706 310.25238037]
[215.35945129 307.79721069]
[230.23135376 309.75329590]
[243.89089966 315.95141602]
[255.15638733 325.85540771]
[263.05325317 338.60842896]
[266.89831543 353.10723877]
[266.35894775 368.09753418]
[261.48184204 382.28253174]
[252.68887329 394.43502808]
[240.74073792 403.50378418]
[226.67108154 408.70422363]
[211.69703674 409.58642578]
[197.11404419 406.07415771]
[184.18365479 398.47116089]
[174.02449036 387.43527222]
[167.51646423 373.92446899]
[167.06985474 388.91781616]
[166.73487854 403.91409302]
[166.51155090 418.91241455]
[166.28822327 433.91076660]
[166.06489563 448.90908813]
[165.84156799 463.90744019]
[165.61824036 478.90576172]
[165.39491272 493.90411377]
[179.56916809 499.27685547]
[191.04898071 509.17584229]
[198.44813538 522.40563965]
[200.87312317 537.36877441]
[198.03114319 552.25836182]
[190.26535034 565.27636719]
[178.51350403 574.85076904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[15 197]
[17 196]
[18 195]
[19 175]
[20 174]
[21 173]
[22 172]
[31 166]
[32 165]
[34 163]
[35 162]
[37 160]
[38 159]
[39 158]
[40 157]
[42 155]
[43 154]
[50 153]
[51 152]
[52 151]
[53 150]
[55 147]
[56 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[96 123]
[97 122]
[98 121]
[99 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
