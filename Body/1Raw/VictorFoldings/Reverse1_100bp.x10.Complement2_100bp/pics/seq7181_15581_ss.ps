%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[153.55056763 778.17675781]
[140.41958618 770.83563232]
[128.86126709 761.20648193]
[119.26927948 749.61737061]
[111.97032166 736.46289062]
[107.21299744 722.19116211]
[105.15933228 707.28820801]
[105.87928772 692.26171875]
[109.34832001 677.62335205]
[115.44829559 663.87182617]
[123.97144318 651.47546387]
[134.62747192 640.85638428]
[147.05342102 632.37640381]
[160.82609558 626.32434082]
[175.47639465 622.90618896]
[174.80661011 607.92114258]
[174.13682556 592.93609619]
[173.46704102 577.95111084]
[172.79725647 562.96606445]
[171.01478577 548.07232666]
[168.12951660 533.35241699]
[165.24424744 518.63256836]
[162.35897827 503.91265869]
[159.47369385 489.19277954]
[156.58842468 474.47286987]
[153.70315552 459.75299072]
[141.12489319 455.27758789]
[132.32998657 445.08966064]
[129.69667053 431.78042603]
[134.01766968 418.80554199]
[144.26580811 409.58782959]
[141.60000610 394.82662964]
[138.93421936 380.06539917]
[124.87081146 375.15762329]
[115.08710480 363.79385376]
[112.28654480 348.96069336]
[117.31964874 334.62316895]
[128.92919922 324.66497803]
[126.26340485 309.90374756]
[123.59761047 295.14254761]
[120.92504883 292.84259033]
[119.23371887 289.13388062]
[119.17359161 284.49172974]
[121.15781403 279.66369629]
[119.15380096 264.79815674]
[109.78548431 253.21870422]
[115.60971069 238.50852966]
[113.60569000 223.64300537]
[111.60167694 208.77746582]
[99.63810730 199.97926331]
[97.39398956 184.93205261]
[106.70347595 172.44320679]
[104.69946289 157.57768250]
[102.03366852 142.81646729]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[83.33887482 60.50579453]
[72.86089325 52.98416901]
[70.39491272 40.73252869]
[76.72821045 30.42641830]
[73.62409973 15.75111675]
[70.51998901 1.07581413]
[57.55737305 -7.56179142]
[54.61841965 -22.48885345]
[62.93293762 -34.79349899]
[59.82882690 -49.46880341]
[56.72472000 -64.14410400]
[51.88715744 -71.89238739]
[53.68535614 -79.06094360]
[50.25329208 -82.99388885]
[48.81668472 -87.40857697]
[49.22488403 -91.46424103]
[51.01536942 -94.50175476]
[48.79025269 -109.33580017]
[46.56513596 -124.16984558]
[44.34001923 -139.00389099]
[42.11490250 -153.83793640]
[38.86187744 -157.92019653]
[37.62382889 -162.39463806]
[38.21271515 -166.42802429]
[40.13704681 -169.38255310]
[31.00603485 -182.30290222]
[37.37726974 -195.76605225]
[35.81674576 -210.68466187]
[34.25622177 -225.60327148]
[32.69570160 -240.52186584]
[31.13517761 -255.44047546]
[28.46118546 -258.86154175]
[27.14708138 -262.58145142]
[27.11982155 -266.13598633]
[28.16310883 -269.13232422]
[29.95309448 -271.28967285]
[29.28330994 -286.27471924]
[28.61352539 -301.25973511]
[14.42313862 -306.78720093]
[3.71241188 -317.61309814]
[-1.66295791 -331.86181641]
[-0.77165514 -347.06460571]
[6.23189640 -360.58755493]
[18.13428879 -370.08770752]
[32.87336349 -373.91912842]
[47.89548111 -371.41796875]
[60.59797287 -363.01757812]
[68.78005219 -350.17337036]
[71.02413177 -335.11068726]
[66.94140625 -320.43923950]
[57.23922729 -308.70095825]
[43.59856415 -301.92953491]
[44.26834869 -286.94448853]
[44.93813324 -271.95944214]
[46.05378342 -257.00100708]
[47.61430359 -242.08239746]
[49.17482758 -227.16378784]
[50.73535156 -212.24517822]
[52.29587555 -197.32658386]
[61.31526947 -185.47332764]
[55.05565262 -170.94308472]
[56.94894409 -156.06304932]
[59.17406464 -141.22900391]
[61.39918137 -126.39495850]
[63.62429810 -111.56092072]
[65.84941101 -96.72687531]
[68.40524292 -81.94622040]
[71.40002441 -67.24821472]
[74.50412750 -52.57291412]
[77.60823822 -37.89760971]
[90.19306183 -30.01357841]
[93.55012512 -15.17495346]
[85.19529724 -2.02829599]
[88.29940796 12.64700603]
[91.40351868 27.32230949]
[103.81945801 39.72437286]
[97.96633148 57.18353653]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.66112518 139.49420166]
[125.55072784 127.41219330]
[140.35852051 125.01859283]
[152.60192871 133.68455505]
[155.26736450 148.44584656]
[146.82795715 160.84649658]
[132.11817932 163.78288269]
[119.56499481 155.57366943]
[121.56900787 170.43919373]
[133.85328674 180.01699829]
[135.67387390 195.12129211]
[126.46720886 206.77345276]
[128.47122192 221.63899231]
[130.47523499 236.50451660]
[139.98689270 249.14726257]
[134.01933289 262.79415894]
[136.02334595 277.65966797]
[138.35882568 292.47674561]
[141.02462769 307.23794556]
[143.69041443 321.99917603]
[158.04980469 327.26751709]
[167.77996826 338.93887329]
[170.34468079 353.81463623]
[165.15382385 367.88272095]
[153.69543457 377.39959717]
[156.36123657 392.16082764]
[159.02702332 406.92202759]
[174.35870361 414.06594849]
[182.33209229 428.79437256]
[179.97906494 445.20855713]
[168.42304993 456.86770630]
[171.30831909 471.58758545]
[174.19358826 486.30749512]
[177.07887268 501.02737427]
[179.96414185 515.74725342]
[182.84941101 530.46716309]
[185.73468018 545.18707275]
[192.08911133 531.59954834]
[204.32911682 522.92877197]
[219.25517273 521.44122314]
[232.96566772 527.52587891]
[241.87669373 539.59210205]
[243.65893555 554.48583984]
[237.84651184 568.31390381]
[225.95878601 577.46166992]
[211.10317993 579.53796387]
[197.16291809 574.00006104]
[187.78230286 562.29626465]
[188.45208740 577.28131104]
[189.12187195 592.26635742]
[189.79165649 607.25140381]
[190.46144104 622.23638916]
[205.35826111 624.33386230]
[219.61595154 629.13311768]
[232.74891663 636.47070312]
[244.30982971 646.09667969]
[253.90493774 657.68322754]
[261.20742798 670.83575439]
[265.96862793 685.10620117]
[268.02630615 700.00854492]
[267.31039429 715.03527832]
[263.84530640 729.67456055]
[257.74902344 743.42773438]
[249.22923279 755.82641602]
[238.57606506 766.44830322]
[226.15238953 774.93164062]
[212.38134766 780.98748779]
[197.73197937 784.40954590]
[182.70323181 785.08129883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 193]
[16 192]
[17 191]
[18 190]
[19 189]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[31 168]
[32 167]
[33 166]
[38 161]
[39 160]
[40 159]
[44 158]
[45 157]
[47 155]
[48 154]
[49 153]
[52 150]
[53 149]
[54 142]
[55 141]
[56 140]
[58 138]
[59 137]
[60 136]
[63 134]
[64 133]
[65 132]
[68 129]
[69 128]
[70 127]
[72 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[84 120]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
[95 113]
[96 112]
[97 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
