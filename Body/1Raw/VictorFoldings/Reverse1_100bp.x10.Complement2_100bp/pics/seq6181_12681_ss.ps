%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[73.62937164 438.36505127]
[69.68999481 453.28097534]
[58.29640961 463.68240356]
[43.08425903 466.25027466]
[28.90768242 460.16519165]
[20.29037857 447.36886597]
[19.98209572 431.94458008]
[28.08120728 418.81417847]
[42.00331497 412.16748047]
[43.78578186 397.27377319]
[45.56824493 382.38003540]
[47.35071182 367.48632812]
[49.13317871 352.59262085]
[50.69370270 337.67401123]
[52.03193665 322.73382568]
[49.49771500 315.79122925]
[53.50293350 307.58172607]
[55.06345749 292.66311646]
[52.80533218 288.45480347]
[53.16687012 282.78326416]
[56.89899826 277.32592773]
[58.90301132 262.46038818]
[60.90702820 247.59486389]
[62.91104126 232.72932434]
[50.35692215 240.93872070]
[35.64728165 238.00163269]
[27.20846748 225.60057068]
[29.87461662 210.83941650]
[42.11843872 202.17404175]
[56.92611313 204.56834412]
[65.81490326 216.64987183]
[69.13716125 202.02239990]
[72.45942688 187.39494324]
[67.73316956 173.27008057]
[78.33482361 161.52633667]
[81.65708923 146.89888000]
[84.97934723 132.27142334]
[88.30160522 117.64395905]
[79.18950653 103.88395691]
[82.72487640 87.76351166]
[96.75910187 79.07971954]
[99.86321259 64.40441132]
[102.96732330 49.72911072]
[98.25332642 34.62650299]
[108.45693207 23.77589417]
[111.56104279 9.10059166]
[114.66515350 -5.57471037]
[109.95115662 -20.67731857]
[120.15475464 -31.52792740]
[123.25886536 -46.20323181]
[126.36297607 -60.87853241]
[129.46708679 -75.55383301]
[120.16912842 -63.78319550]
[108.77973938 -54.02195740]
[95.72471619 -46.63505554]
[81.49212646 -41.89864731]
[66.61408234 -39.98981476]
[51.64679337 -40.97991562]
[37.14982986 -44.83193970]
[23.66517067 -51.40186691]
[11.69695091 -60.44408798]
[1.69260979 -71.62054443]
[-5.97383308 -84.51339722]
[-11.01576233 -98.64063263]
[-13.24468040 -113.47410583]
[-12.57725906 -128.45925903]
[-9.03845024 -143.03584290]
[-2.76055360 -156.65890503]
[6.02172613 -168.81915283]
[16.98005676 -179.06195068]
[29.70475388 -187.00437927]
[43.72009659 -192.34948730]
[58.50210571 -194.89746094]
[73.49815369 -194.55302429]
[88.14759064 -191.32907104]
[101.90274811 -185.34613037]
[114.24937439 -176.82786560]
[124.72588348 -166.09274292]
[132.94059753 -153.54209900]
[138.58641052 -139.64517212]
[141.45225525 -124.92148590]
[141.43096924 -109.92150116]
[138.52511597 -95.21184540]
[147.66392517 -107.10647583]
[156.80271912 -119.00110626]
[165.94152832 -130.89573669]
[175.08032227 -142.79037476]
[177.82717896 -151.50201416]
[184.44480896 -154.79272461]
[187.32106018 -163.46249390]
[193.98695374 -166.65432739]
[203.47584534 -178.27159119]
[212.96473694 -189.88885498]
[222.45364380 -201.50611877]
[211.72612000 -212.00498962]
[201.98291016 -223.42323303]
[193.30244446 -235.66886902]
[185.75463867 -248.64334106]
[179.40025330 -262.24215698]
[174.29045105 -276.35586548]
[170.46635437 -290.87075806]
[167.95878601 -305.67004395]
[166.78793335 -320.63449097]
[166.96319580 -335.64367676]
[168.48318481 -350.57672119]
[171.33564758 -365.31341553]
[175.49763489 -379.73504639]
[180.93562317 -393.72558594]
[187.60583496 -407.17230225]
[195.45454407 -419.96697998]
[204.41859436 -432.00659180]
[214.42578125 -443.19418335]
[225.39553833 -453.43972778]
[237.23954773 -462.66064453]
[249.86244202 -470.78277588]
[263.16259766 -477.74066162]
[277.03289795 -483.47833252]
[291.36169434 -487.94955444]
[306.03359985 -491.11834717]
[320.93048096 -492.95919800]
[335.93243408 -493.45727539]
[350.91864014 -492.60858154]
[365.76840210 -490.41992188]
[380.36221313 -486.90893555]
[394.58255005 -482.10388184]
[408.31491089 -476.04348755]
[421.44873047 -468.77648926]
[433.87826538 -460.36145020]
[445.50341797 -450.86608887]
[456.23062134 -440.36688232]
[465.97348022 -428.94836426]
[474.65356445 -416.70245361]
[482.20098877 -403.72775269]
[488.55496216 -390.12872314]
[493.66433716 -376.01489258]
[497.48797607 -361.49984741]
[499.99508667 -346.70050049]
[501.16549683 -331.73599243]
[500.98977661 -316.72683716]
[499.46932983 -301.79382324]
[496.61642456 -287.05725098]
[492.45397949 -272.63571167]
[487.01556396 -258.64535522]
[480.34497070 -245.19883728]
[472.49584961 -232.40438843]
[463.53143311 -220.36506653]
[453.52389526 -209.17776489]
[442.55383301 -198.93258667]
[430.70953369 -189.71200562]
[418.08639526 -181.59027100]
[404.78604126 -174.63276672]
[390.91555786 -168.89553833]
[376.58663940 -164.42474365]
[361.91461182 -161.25639343]
[347.01766968 -159.41600037]
[332.01571655 -158.91839600]
[317.02954102 -159.76756287]
[302.17984009 -161.95666504]
[287.58615112 -165.46809387]
[273.36593628 -170.27357483]
[259.63378906 -176.33441162]
[246.50018311 -183.60179138]
[234.07090759 -192.01721191]
[224.58200073 -180.39994812]
[215.09310913 -168.78268433]
[205.60421753 -157.16542053]
[196.20205688 -145.47784424]
[186.97496033 -133.65156555]
[177.83616638 -121.75694275]
[168.69735718 -109.86230469]
[159.55854797 -97.96767426]
[150.41975403 -86.07304382]
[144.14239502 -72.44972229]
[141.03828430 -57.77442169]
[137.93417358 -43.09912109]
[134.83006287 -28.42381859]
[139.76608276 -14.37088490]
[129.34045410 -2.47060013]
[126.23634338 12.20470238]
[123.13223267 26.88000488]
[128.06825256 40.93293762]
[117.64262390 52.83322144]
[114.53851318 67.50852203]
[111.43440247 82.18383026]
[119.56275177 91.90924072]
[120.67839050 104.53496552]
[114.38139343 115.53502655]
[102.92906189 120.96621704]
[99.60680389 135.59367371]
[96.28454590 150.22113037]
[92.96228790 164.84860229]
[97.45090485 180.01971436]
[87.08688354 190.71720886]
[83.76462555 205.34466553]
[80.44236755 219.97212219]
[77.77656555 234.73333740]
[75.77255249 249.59887695]
[73.76853943 264.46438599]
[71.76452637 279.32992554]
[69.98206329 294.22363281]
[68.42153931 309.14224243]
[66.97212219 324.07205200]
[65.63388824 339.01223755]
[68.06460571 345.16067505]
[67.16101074 350.77142334]
[64.02689362 354.37509155]
[62.24443054 369.26879883]
[60.46196365 384.16250610]
[58.67949677 399.05624390]
[56.89702988 413.94995117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 203]
[15 202]
[17 201]
[18 200]
[21 199]
[22 198]
[23 197]
[24 196]
[31 195]
[32 194]
[33 193]
[35 191]
[36 190]
[37 189]
[38 188]
[41 184]
[42 183]
[43 182]
[45 180]
[46 179]
[47 178]
[49 176]
[50 175]
[51 174]
[52 173]
[83 172]
[84 171]
[85 170]
[86 169]
[87 168]
[89 167]
[91 166]
[92 165]
[93 164]
[94 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
