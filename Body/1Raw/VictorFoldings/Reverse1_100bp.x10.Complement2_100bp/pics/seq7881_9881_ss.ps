%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[64.64129639 645.77282715]
[57.66175079 659.07373047]
[49.03857422 671.37286377]
[38.91337585 682.46832275]
[27.45241547 692.17785645]
[14.84389400 700.34197998]
[1.29485476 706.82672119]
[-12.97221470 711.52557373]
[-27.72303581 714.36132812]
[-42.71538544 715.28747559]
[-57.70307922 714.28881836]
[-72.44000244 711.38165283]
[-86.68416595 706.61383057]
[-100.20166016 700.06359863]
[-112.77051544 691.83850098]
[-124.18434906 682.07360840]
[-134.25573730 670.92932129]
[-142.81927490 658.58856201]
[-149.73437500 645.25402832]
[-154.88746643 631.14471436]
[-158.19392395 616.49218750]
[-159.59947205 601.53717041]
[-159.08100891 586.52520752]
[-156.64706421 571.70275879]
[-152.33760071 557.31329346]
[-146.22337341 543.59307861]
[-138.40480042 530.76739502]
[-129.01026917 519.04687500]
[-118.19403076 508.62393188]
[-106.13371277 499.66976929]
[-93.02734375 492.33139038]
[-79.09015656 486.72933960]
[-64.55100250 482.95559692]
[-49.64862442 481.07208252]
[-34.62774277 481.10977173]
[-19.73501015 483.06805420]
[-5.21497631 486.91473389]
[0.44781032 473.02468872]
[6.11059713 459.13467407]
[11.77338314 445.24465942]
[0.72918195 432.03616333]
[-2.11863327 414.96563721]
[4.10346413 398.72094727]
[17.76559639 387.80963135]
[35.16029739 385.30810547]
[40.40701294 371.25564575]
[45.65373230 357.20318604]
[41.82106018 340.07781982]
[56.12156296 328.47708130]
[61.15848160 314.34805298]
[66.19539642 300.21902466]
[71.23231506 286.08999634]
[76.26922607 271.96096802]
[79.48250580 257.30917358]
[80.82073975 242.36900330]
[82.15897369 227.42881775]
[83.49720764 212.48863220]
[84.72418213 197.53889465]
[85.83982849 182.58044434]
[86.95547485 167.62199402]
[84.31817627 160.71789551]
[88.20072174 152.44966125]
[89.53895569 137.50949097]
[90.76593018 122.55975342]
[91.88157654 107.60129547]
[79.83834839 116.54336548]
[64.97997284 114.48702240]
[55.81799316 102.61023712]
[57.60081863 87.71656036]
[69.30715942 78.33777618]
[84.23109436 79.84647369]
[93.82322693 91.37750244]
[96.26895905 76.57823181]
[87.33543396 63.81774902]
[90.02656555 48.84402084]
[102.24679565 40.40591049]
[104.69252014 25.60663986]
[107.02800751 10.78957272]
[109.25312805 -4.04447079]
[111.47824097 -18.87851524]
[113.70336151 -33.71255875]
[104.58084106 -46.33861923]
[107.04874420 -61.35074997]
[119.14198303 -69.96987152]
[121.36709595 -84.80390930]
[123.59221649 -99.63795471]
[125.81732941 -114.47200012]
[127.04431152 -129.42173767]
[127.26763916 -144.42007446]
[127.49096680 -159.41841125]
[127.71429443 -174.41674805]
[116.98670197 -185.71084595]
[117.42684174 -200.91810608]
[128.26014709 -211.07562256]
[128.48347473 -226.07395935]
[120.95249939 -239.98779297]
[128.87843323 -252.59846497]
[129.10176086 -267.59680176]
[115.02114105 -273.26254272]
[103.94072723 -283.63504028]
[97.35906219 -297.31152344]
[96.16625214 -312.44235229]
[100.52362061 -326.98120117]
[109.84186554 -338.96179199]
[122.86077118 -346.76385498]
[137.81964111 -349.33227539]
[152.69540405 -346.31961060]
[165.47624207 -338.13339233]
[174.43365479 -325.88064575]
[178.35621643 -311.21853638]
[176.71343994 -296.12994385]
[169.72749329 -282.65548706]
[158.34315491 -272.61746216]
[144.10009766 -267.37347412]
[143.87677002 -252.37513733]
[151.42372131 -239.53407288]
[143.48181152 -225.85063171]
[143.25848389 -210.85229492]
[153.78456116 -200.37673950]
[153.77172852 -185.16310120]
[142.71263123 -174.19342041]
[142.48930359 -159.19508362]
[142.26597595 -144.19674683]
[142.04264832 -129.19841003]
[151.53300476 -140.81446838]
[165.76362610 -145.55677795]
[180.32499695 -141.95585632]
[190.70510864 -131.12750244]
[193.68757629 -116.42700195]
[188.34826660 -102.40945435]
[176.34158325 -93.41835785]
[161.38796997 -92.23969269]
[148.12094116 -99.23869324]
[140.65138245 -112.24687958]
[138.42625427 -97.41284180]
[136.20114136 -82.57879639]
[133.97602844 -67.74475098]
[143.00819397 -55.95681000]
[140.96292114 -40.88128281]
[128.53739929 -31.48744202]
[126.31228638 -16.65339661]
[124.08716583 -1.81935370]
[121.86205292 13.01469040]
[123.97854614 20.09580803]
[119.49179077 28.05236816]
[117.04606628 42.85163879]
[125.90172577 54.77275085]
[123.63222504 69.81615448]
[111.06822968 79.02395630]
[108.62249756 93.82322693]
[106.84003448 108.71694183]
[105.72438812 123.67539978]
[108.20685577 132.46603394]
[104.47914124 138.84771729]
[103.14090729 153.78790283]
[101.91393280 168.73764038]
[100.79827881 183.69609070]
[99.68263245 198.65454102]
[102.16510010 207.44517517]
[98.43739319 213.82685852]
[97.09915924 228.76704407]
[95.76092529 243.70722961]
[94.42269135 258.64743042]
[102.69197845 246.13267517]
[114.53645325 236.92895508]
[128.70613098 232.00755310]
[143.70565796 231.88781738]
[157.95208740 236.58241272]
[169.94197083 245.59588623]
[178.40997314 257.97705078]
[182.46246338 272.41925049]
[181.67176819 287.39837646]
[176.12132263 301.33367920]
[166.39688110 312.75451660]
[153.52468872 320.45559692]
[138.86318970 323.62423706]
[123.95962524 321.92602539]
[110.38682556 315.54019165]
[99.57714081 305.14062500]
[92.67135620 291.82485962]
[90.39825439 276.99789429]
[85.36134338 291.12692261]
[80.32442474 305.25595093]
[75.28750610 319.38497925]
[70.25059509 333.51400757]
[75.06359100 345.48052979]
[70.57745361 357.14492798]
[59.70620346 362.44989014]
[54.45948410 376.50234985]
[49.21276855 390.55484009]
[58.34100723 399.69018555]
[63.31809998 411.55627441]
[63.43725204 424.37658691]
[58.71608734 436.24630737]
[49.88881302 445.41510010]
[38.29223251 450.54544067]
[25.66341019 450.90744019]
[20.00062370 464.79745483]
[14.33783722 478.68750000]
[8.67505074 492.57751465]
[21.74574661 499.97921753]
[33.76258850 508.99163818]
[44.52825165 519.46679688]
[53.86595535 531.23266602]
[61.62236023 544.09606934]
[67.67010498 557.84570312]
[71.90988159 572.25585938]
[74.27205658 587.08990479]
[74.71785736 602.10418701]
[73.23995209 617.05224609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 200]
[38 199]
[39 198]
[40 197]
[45 190]
[46 189]
[47 188]
[49 185]
[50 184]
[51 183]
[52 182]
[53 181]
[54 163]
[55 162]
[56 161]
[57 160]
[58 158]
[59 157]
[60 156]
[62 155]
[63 154]
[64 152]
[65 151]
[72 150]
[73 149]
[76 146]
[77 145]
[78 143]
[79 142]
[80 141]
[81 140]
[84 137]
[85 136]
[86 135]
[87 134]
[88 124]
[89 123]
[90 122]
[91 121]
[94 118]
[95 117]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
