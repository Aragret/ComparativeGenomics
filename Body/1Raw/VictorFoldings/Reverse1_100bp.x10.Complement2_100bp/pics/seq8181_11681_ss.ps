%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[67.04508972 704.55786133]
[52.70701599 708.99737549]
[38.03657532 712.17028809]
[23.14541817 714.05255127]
[8.14687920 714.62976074]
[-6.84489346 713.89758301]
[-21.71580124 711.86151123]
[-36.35266495 708.53710938]
[-50.64408493 703.94970703]
[-64.48130035 698.13409424]
[-77.75898743 691.13464355]
[-90.37610626 683.00457764]
[-102.23662567 673.80584717]
[-113.25027466 663.60833740]
[-123.33323669 652.48974609]
[-132.40876770 640.53466797]
[-140.40780640 627.83404541]
[-147.26945496 614.48461914]
[-152.94151306 600.58795166]
[-157.38079834 586.24981689]
[-160.55352783 571.57934570]
[-162.43556213 556.68817139]
[-163.01255798 541.68963623]
[-162.28015137 526.69787598]
[-160.24389648 511.82699585]
[-156.91929626 497.19018555]
[-152.33164978 482.89880371]
[-146.51588440 469.06167603]
[-139.51625061 455.78408813]
[-131.38601685 443.16708374]
[-122.18707275 431.30670166]
[-111.98942566 420.29318237]
[-100.87068939 410.21038818]
[-88.91547394 401.13504028]
[-76.21477509 393.13616943]
[-62.86526108 386.27468872]
[-48.96852112 380.60284424]
[-34.63032532 376.16375732]
[-19.95979691 372.99124146]
[-5.06858683 371.10940552]
[9.92996883 370.53262329]
[24.92172050 371.26522827]
[39.79257202 373.30169678]
[43.11483002 358.67422485]
[38.38858032 344.54937744]
[48.99023438 332.80563354]
[52.31249237 318.17816162]
[55.63475418 303.55072021]
[58.73886490 288.87539673]
[61.62413406 274.15551758]
[64.50940704 259.43563843]
[67.39468384 244.71572876]
[60.82103348 228.44447327]
[73.03868866 214.66729736]
[75.70448303 199.90608215]
[78.37027740 185.14486694]
[81.03607178 170.38363647]
[83.48180389 155.58436584]
[85.70691681 140.75033569]
[87.93203735 125.91628265]
[85.86407471 121.61133575]
[86.47850037 115.96160126]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[100.11978149 57.13543320]
[102.78558350 42.37421799]
[104.56804657 27.48049927]
[105.46086121 12.50709343]
[102.84779358 3.75439882]
[106.48007202 -2.68208337]
[107.59572601 -17.64053726]
[108.71137238 -32.59899139]
[109.82701874 -47.55744171]
[110.94267273 -62.51589584]
[112.05831909 -77.47434998]
[112.72810364 -92.45938873]
[112.95143127 -107.45772552]
[113.17475891 -122.45606232]
[113.39808655 -137.45440674]
[113.62141418 -152.45274353]
[106.09043884 -166.36657715]
[114.01636505 -178.97724915]
[114.23969269 -193.97558594]
[105.13465881 -199.53633118]
[99.20449066 -208.30789185]
[97.46369934 -218.66999817]
[100.16029358 -228.74180603]
[106.74295807 -236.72328186]
[115.97218323 -241.21687317]
[116.86499786 -256.19027710]
[117.75781250 -271.16369629]
[110.85562897 -285.39993286]
[119.33675385 -297.64410400]
[120.22956848 -312.61752319]
[121.12238312 -327.59091187]
[106.90308380 -332.68878174]
[94.69681549 -341.58731079]
[85.49308014 -353.56509399]
[80.03798676 -367.65121460]
[78.77375793 -382.70373535]
[81.80287170 -397.50244141]
[88.87977600 -410.84762573]
[99.43077850 -421.65747070]
[112.60056305 -429.05569458]
[127.32149506 -432.44253540]
[142.40023804 -431.54342651]
[156.61441040 -426.43130493]
[168.81173706 -417.52050781]
[178.00343323 -405.53347778]
[183.44436646 -391.44186401]
[184.69348145 -376.38809204]
[181.64949036 -361.59246826]
[174.55918884 -348.25439453]
[163.99732971 -337.45513916]
[150.82012939 -330.07015991]
[136.09579468 -326.69808960]
[135.20297241 -311.72470093]
[134.31016541 -296.75128174]
[141.27619934 -283.58605957]
[132.73121643 -270.27087402]
[131.83840942 -255.29747009]
[130.94558716 -240.32406616]
[144.91093445 -226.74159241]
[144.37648010 -206.96235657]
[129.23803711 -193.75225830]
[129.01470947 -178.75392151]
[136.56166077 -165.91285706]
[128.61975098 -152.22941589]
[128.39642334 -137.23107910]
[128.17309570 -122.23273468]
[127.94976807 -107.23439789]
[127.72644043 -92.23606110]
[129.57986450 -90.13298035]
[130.71189880 -87.16901398]
[130.79048157 -83.61524963]
[129.58772278 -79.85787201]
[127.01676941 -76.35870361]
[125.90112305 -61.40024948]
[124.78547668 -46.44179535]
[123.66982269 -31.48334122]
[122.55417633 -16.52488899]
[121.43852997 -1.56643462]
[120.43426514 13.39990997]
[119.54145050 28.37331581]
[130.07102966 17.69024277]
[144.84968567 15.12288189]
[158.36534119 21.62879372]
[165.57701111 34.78143311]
[163.79489136 49.67519379]
[153.68370056 60.75506973]
[139.01463318 63.88853836]
[125.25890350 57.90689850]
[117.54679871 45.04001236]
[114.88100433 59.80123138]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.76608276 128.14140320]
[100.54096222 142.97544861]
[98.31584167 157.80949402]
[100.37629700 164.09169006]
[99.14034271 169.63871765]
[95.79728699 173.04943848]
[93.13149261 187.81065369]
[90.46569824 202.57186890]
[87.79990387 217.33308411]
[94.49961853 228.35473633]
[91.97537994 240.59451294]
[82.11457062 247.60101318]
[79.22930145 262.32089233]
[76.34402466 277.04080200]
[73.45875549 291.76068115]
[75.23663330 298.12863159]
[73.75422668 303.61492920]
[70.26221466 306.87295532]
[66.93995667 321.50042725]
[63.61769485 336.12789917]
[68.10631561 351.29901123]
[57.74229050 361.99649048]
[54.42003250 376.62396240]
[68.71157837 381.21099854]
[82.54895782 387.02618408]
[95.82684326 394.02526855]
[108.44419098 402.15496826]
[120.30496216 411.35339355]
[131.31889343 421.55059814]
[141.40217590 432.66891479]
[150.47804260 444.62374878]
[158.47743225 457.32409668]
[165.33946228 470.67333984]
[171.01190186 484.56982422]
[175.45159912 498.90783691]
[178.62474060 513.57824707]
[180.50718689 528.46936035]
[181.08460999 543.46789551]
[180.35261536 558.45965576]
[178.31678772 573.33062744]
[174.99258423 587.96752930]
[170.40534973 602.25903320]
[164.58996582 616.09631348]
[157.59069824 629.37408447]
[149.46083069 641.99133301]
[140.26222229 653.85198975]
[130.06488037 664.86578369]
[118.94641876 674.94885254]
[106.99146271 684.02459717]
[94.29099274 692.02380371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 183]
[44 182]
[46 180]
[47 179]
[48 178]
[49 175]
[50 174]
[51 173]
[52 172]
[54 169]
[55 168]
[56 167]
[57 166]
[58 163]
[59 162]
[60 161]
[63 160]
[65 158]
[66 157]
[67 156]
[68 155]
[69 146]
[70 145]
[72 144]
[73 143]
[74 142]
[75 141]
[76 140]
[77 139]
[78 134]
[79 133]
[80 132]
[81 131]
[82 130]
[84 128]
[85 127]
[91 124]
[92 123]
[93 122]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
