%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[105.96668243 681.38507080]
[91.38802338 677.82177734]
[77.13387299 673.12567139]
[63.29212570 667.32568359]
[49.94810867 660.45751953]
[37.18410110 652.56359863]
[25.07879829 643.69256592]
[13.70683002 633.89904785]
[3.13831186 623.24353027]
[-6.56159687 611.79162598]
[-15.33309269 599.61395264]
[-23.12209511 586.78564453]
[-29.88058281 573.38580322]
[-35.56688690 559.49694824]
[-40.14594650 545.20477295]
[-43.58953476 530.59735107]
[-45.87641525 515.76483154]
[-46.99249268 500.79858398]
[-46.93088150 485.79092407]
[-45.69196701 470.83435059]
[-43.28338242 456.02108765]
[-39.71997833 441.44244385]
[-35.02372742 427.18835449]
[-29.22358513 413.34664917]
[-22.35530663 400.00271606]
[-14.46124268 387.23880005]
[-5.59005928 375.13357544]
[4.20354652 363.76171875]
[14.85919380 353.19329834]
[26.31118584 343.49349976]
[38.48891830 334.72213745]
[51.31730652 326.93325806]
[64.71726227 320.17492676]
[78.60616302 314.48873901]
[92.89838409 309.90985107]
[107.50581360 306.46640015]
[122.33837891 304.17965698]
[121.22272491 289.22122192]
[120.10707855 274.26275635]
[118.99143219 259.30432129]
[117.20896149 244.41059875]
[114.76323700 229.61132812]
[112.31750488 214.81205750]
[109.87178040 200.01278687]
[107.31594849 185.23213196]
[104.65015411 170.47090149]
[101.98435974 155.70968628]
[99.31856537 140.94847107]
[96.65276337 126.18725586]
[93.98696899 111.42604065]
[89.82629395 125.83744812]
[82.38036346 138.85890198]
[72.07028961 149.75396729]
[59.47916031 157.90647888]
[45.31905746 162.85536194]
[30.39080811 164.32075500]
[15.53867435 162.21975708]
[1.60261953 156.67121887]
[-10.62920666 147.98890686]
[-20.46503639 136.66386414]
[-27.34860229 123.33658600]
[-30.89060783 108.76078033]
[-30.89073563 93.76078033]
[-27.34897804 79.18490601]
[-20.46563721 65.85750580]
[-10.63000202 54.53230286]
[1.60167634 45.84978867]
[15.53763676 40.30100632]
[30.38973427 38.19976425]
[45.31800842 39.66489410]
[59.47819519 44.61354446]
[72.06946564 52.76583862]
[82.37972260 63.66072845]
[89.82587433 76.68205261]
[93.98696899 91.09445190]
[96.65276337 76.33322906]
[99.31856537 61.57201385]
[101.87439728 46.79135895]
[104.32012177 31.99209023]
[106.76584625 17.19281960]
[109.21157837 2.39354825]
[97.95410156 -5.90898228]
[91.40334320 -18.19327164]
[90.78739929 -32.03519821]
[96.16952515 -44.73094177]
[106.44688416 -53.82514572]
[119.57604980 -57.58575058]
[122.24184418 -72.34696960]
[124.90763855 -87.10818481]
[119.74607086 -102.06374359]
[129.62208557 -113.21334076]
[132.28788757 -127.97455597]
[134.95367432 -142.73577881]
[137.61947632 -157.49699402]
[140.28526306 -172.25820923]
[142.95106506 -187.01942444]
[145.61686707 -201.78063965]
[148.28265381 -216.54185486]
[150.94845581 -231.30308533]
[137.18199158 -237.44700623]
[125.28632355 -246.70748901]
[115.95304871 -258.54614258]
[109.72480774 -272.27465820]
[106.96368408 -287.09490967]
[107.83020782 -302.14523315]
[112.27400970 -316.55065918]
[120.03672791 -329.47366333]
[130.66705322 -340.16287231]
[143.54693604 -347.99691772]
[157.92756653 -352.52026367]
[172.97288513 -353.46997070]
[187.80816650 -350.79077148]
[201.57090759 -344.63851929]
[213.46095276 -335.37081909]
[222.78704834 -323.52651978]
[229.00695801 -309.79421997]
[231.75910950 -294.97229004]
[230.88345337 -279.92248535]
[226.43092346 -265.51977539]
[218.66036987 -252.60150146]
[208.02357483 -241.91870117]
[195.13893127 -234.09249878]
[180.75555420 -229.57786560]
[165.70967102 -228.63728333]
[163.04386902 -213.87606812]
[160.37808228 -199.11485291]
[157.71228027 -184.35363770]
[155.04649353 -169.59242249]
[152.38069153 -154.83119202]
[149.71488953 -140.06997681]
[147.04910278 -125.30876160]
[144.38330078 -110.54754639]
[149.73554993 -96.64780426]
[139.66885376 -84.44239044]
[137.00306702 -69.68116760]
[134.33726501 -54.91995239]
[146.92416382 -44.78672028]
[152.71665955 -29.60110664]
[150.04528809 -13.47409153]
[139.54573059 -0.82280725]
[124.01084900 4.83927584]
[121.56511688 19.63854599]
[119.11939240 34.43781662]
[116.67366791 49.23708725]
[118.68450165 56.34893417]
[114.07978058 64.23780823]
[111.41398621 78.99902344]
[108.74819183 93.76024628]
[108.74819183 108.76024628]
[111.41398621 123.52146149]
[114.07978058 138.28268433]
[116.74557495 153.04389954]
[119.41136932 167.80511475]
[122.07716370 182.56632996]
[126.68188477 190.45520020]
[124.67105103 197.56704712]
[127.11678314 212.36631775]
[129.56250000 227.16558838]
[132.00823975 241.96485901]
[141.60121155 230.43339539]
[156.52520752 228.92541504]
[168.23110962 238.30474854]
[170.01321411 253.19851685]
[160.85066223 265.07485962]
[145.99218750 267.13049316]
[133.94989014 258.18865967]
[135.06553650 273.14712524]
[136.18118286 288.10556030]
[137.29682922 303.06402588]
[152.30450439 303.12518311]
[167.26112366 304.36361694]
[182.07446289 306.77175903]
[196.65318298 310.33471680]
[210.90744019 315.03051758]
[224.74929810 320.83026123]
[238.09346008 327.69812012]
[250.85762024 335.59179688]
[262.96310425 344.46261597]
[274.33526611 354.25585938]
[284.90402222 364.91119385]
[294.60415649 376.36288452]
[303.37591553 388.54034424]
[311.16516113 401.36849976]
[317.92391968 414.76824951]
[323.61050415 428.65698242]
[328.18988037 442.94906616]
[331.63375854 457.55636597]
[333.92092896 472.38885498]
[335.03732300 487.35507202]
[334.97601318 502.36276245]
[333.73739624 517.31933594]
[331.32913208 532.13269043]
[327.76602173 546.71136475]
[323.07006836 560.96557617]
[317.27020264 574.80737305]
[310.40219116 588.15148926]
[302.50839233 600.91552734]
[293.63745117 613.02093506]
[283.84408569 624.39300537]
[273.18865967 634.96166992]
[261.73684692 644.66168213]
[249.55929565 653.43328857]
[236.73107910 661.22241211]
[223.33125305 667.98101807]
[209.44247437 673.66748047]
[195.15034485 678.24670410]
[180.54298401 681.69042969]
[165.71046448 683.97747803]
[150.74423218 685.09368896]
[135.73655701 685.03222656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 169]
[38 168]
[39 167]
[40 166]
[41 159]
[42 158]
[43 157]
[44 156]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[75 148]
[76 147]
[77 146]
[78 144]
[79 143]
[80 142]
[81 141]
[87 136]
[88 135]
[89 134]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
