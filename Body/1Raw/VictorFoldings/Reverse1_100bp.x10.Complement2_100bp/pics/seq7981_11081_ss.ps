%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[-33.03338623 387.93750000]
[-30.17866707 402.67852783]
[-28.93449783 417.64181519]
[-29.31546211 432.65185547]
[-31.31709290 447.53274536]
[-34.91592407 462.10998535]
[-40.06976318 476.21264648]
[-46.71818161 489.67541504]
[-54.78322601 502.34039307]
[-64.17034912 514.05914307]
[-74.76947784 524.69427490]
[-86.45635223 534.12103271]
[-99.09394836 542.22900391]
[-112.53409576 548.92297363]
[-126.61920929 554.12457275]
[-141.18415833 557.77282715]
[-156.05818176 559.82489014]
[-171.06686401 560.25671387]
[-186.03425598 559.06323242]
[-200.78488159 556.25848389]
[-215.14576721 551.87536621]
[-228.94856262 545.96520996]
[-242.03143311 538.59729004]
[-254.24098206 529.85809326]
[-265.43405151 519.84997559]
[-275.47943115 508.69033813]
[-284.25933838 496.50997925]
[-291.67083740 483.45178223]
[-297.62701416 469.66876221]
[-302.05801392 455.32257080]
[-304.91195679 440.58139038]
[-306.15530396 425.61807251]
[-305.77355957 410.60800171]
[-303.77111816 395.72723389]
[-300.17150879 381.15020752]
[-295.01690674 367.04782104]
[-288.36776733 353.58541870]
[-280.30203247 340.92083740]
[-270.91427612 329.20260620]
[-260.31457520 318.56805420]
[-248.62719727 309.14190674]
[-235.98916626 301.03466797]
[-222.54866028 294.34136963]
[-208.46325684 289.14053345]
[-193.89811707 285.49310303]
[-179.02398682 283.44183350]
[-164.01527405 283.01080322]
[-149.04794312 284.20507812]
[-134.29748535 287.01062012]
[-119.93682098 291.39453125]
[-106.13434601 297.30545044]
[-93.05187225 304.67404175]
[-80.84279633 313.41390991]
[-70.84461975 302.23193359]
[-60.84645081 291.04995728]
[-50.84827805 279.86798096]
[-41.44612503 268.18041992]
[-32.66552353 256.01895142]
[-23.88492012 243.85749817]
[-22.51810265 236.59432983]
[-14.88194656 231.58164978]
[-5.92125082 219.55227661]
[3.03944516 207.52290344]
[12.00014114 195.49351501]
[20.96083641 183.46414185]
[22.35885811 168.63529968]
[36.80779648 162.19023132]
[38.28259659 154.94822693]
[45.99253845 150.04978943]
[31.00748825 149.38029480]
[22.06479645 137.33752441]
[25.75668716 122.79896545]
[39.36163330 116.48188782]
[52.85057449 123.04302216]
[56.28031921 137.64411926]
[66.27848816 126.46214294]
[76.27666473 115.28016663]
[86.27483368 104.09819794]
[89.32199860 90.45244598]
[102.54319000 85.90363312]
[105.97373962 70.45883179]
[120.22492218 66.12834930]
[130.22309875 54.94637680]
[140.22126770 43.76440430]
[143.65180969 28.31960106]
[157.90299988 23.98912239]
[167.90116882 12.80714798]
[177.47628784 1.26084614]
[186.61509705 -10.63378716]
[195.75389099 -22.52841949]
[204.89270020 -34.42305374]
[203.99397278 -47.28987503]
[211.85057068 -57.00880051]
[223.82653809 -58.71253967]
[233.14141846 -70.46978760]
[235.64659119 -86.09140015]
[249.61476135 -91.26244354]
[238.83390808 -101.71002960]
[229.14689636 -113.17913055]
[220.64999390 -125.55576324]
[213.42764282 -138.71693420]
[207.55162048 -152.53181458]
[203.08033752 -166.86311340]
[200.05822754 -181.56840515]
[198.51533508 -196.50152588]
[198.46699524 -211.51406860]
[199.91366577 -226.45681763]
[202.84100342 -241.18125916]
[207.21987915 -255.54106140]
[213.00679016 -269.39352417]
[220.14422607 -282.60092163]
[228.56124878 -295.03204346]
[238.17419434 -306.56329346]
[248.88751221 -317.08007812]
[260.59475708 -326.47790527]
[273.17956543 -334.66336060]
[286.51684570 -341.55505371]
[300.47402954 -347.08453369]
[314.91244507 -351.19683838]
[329.68856812 -353.85107422]
[344.65554810 -355.02087402]
[359.66461182 -354.69461060]
[374.56658936 -352.87551880]
[389.21343994 -349.58172607]
[403.45950317 -344.84588623]
[417.16323853 -338.71511841]
[430.18844604 -331.25036621]
[442.40567017 -322.52578735]
[453.69345093 -312.62811279]
[463.93966675 -301.65570068]
[473.04244995 -289.71762085]
[480.91131592 -276.93249512]
[487.46810913 -263.42739868]
[492.64758301 -249.33657837]
[496.39834595 -234.80004883]
[498.68304443 -219.96231079]
[499.47903442 -204.97080994]
[498.77838135 -189.97454834]
[496.58801270 -175.12258911]
[492.92977905 -160.56251526]
[487.83993530 -146.43904114]
[481.36917114 -132.89254761]
[473.58172607 -120.05765533]
[464.55502319 -108.06193542]
[454.37875366 -97.02461243]
[443.15411377 -87.05538177]
[430.99261475 -78.25331116]
[418.01510620 -70.70590210]
[404.35061646 -64.48815155]
[390.13494873 -59.66186142]
[375.50936890 -56.27499771]
[360.61923218 -54.36122131]
[345.61254883 -53.93955612]
[330.63842773 -55.01418686]
[315.84573364 -57.57444000]
[301.38146973 -61.59486389]
[287.38940430 -67.03550720]
[274.00860596 -73.84228516]
[261.37200928 -81.94756317]
[259.53311157 -67.16690826]
[244.89868164 -61.15490723]
[235.58378601 -49.39765549]
[233.96287537 -31.92368889]
[216.78732300 -25.28425026]
[207.64852905 -13.38961697]
[198.50971985 -1.49498439]
[189.37092590 10.39964867]
[204.35597229 11.06913853]
[213.29866028 23.11190796]
[209.60676575 37.65047455]
[196.00183105 43.96754837]
[182.51287842 37.40641785]
[179.08314514 22.80532074]
[169.08497620 33.98729324]
[166.36955261 48.63228607]
[151.40324402 53.76257324]
[141.40507507 64.94454956]
[131.40689087 76.12652588]
[128.69148254 90.77151489]
[113.72516632 95.90180206]
[110.67800140 109.54755402]
[97.45681000 114.09636688]
[87.45863342 125.27834320]
[77.46046448 136.46031189]
[67.46229553 147.64228821]
[57.88717270 159.18859863]
[48.83717346 171.15092468]
[46.79822159 186.84019470]
[32.99021530 192.42483521]
[24.02951813 204.45422363]
[15.06882286 216.48359680]
[6.10812664 228.51296997]
[-2.85256910 240.54234314]
[-11.72346497 252.63810730]
[-20.50406837 264.79956055]
[-29.28467178 276.96099854]
[-14.49064159 274.48376465]
[-1.50205767 281.98687744]
[3.74287558 296.04003906]
[-1.15375483 310.21829224]
[-13.95327568 318.03955078]
[-28.80391884 315.92807007]
[-38.91616821 304.84915161]
[-39.66630173 289.86614990]
[-49.66447449 301.04812622]
[-59.66264725 312.23010254]
[-69.66082001 323.41207886]
[-59.61483765 334.57119751]
[-50.83427811 346.75103760]
[-43.42209244 359.80886841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 207]
[54 206]
[55 205]
[56 204]
[57 196]
[58 195]
[59 194]
[61 193]
[62 192]
[63 191]
[64 190]
[65 189]
[67 187]
[69 186]
[75 185]
[76 184]
[77 183]
[78 182]
[80 180]
[82 178]
[83 177]
[84 176]
[86 174]
[87 173]
[88 167]
[89 166]
[90 165]
[91 164]
[94 162]
[95 161]
[97 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
