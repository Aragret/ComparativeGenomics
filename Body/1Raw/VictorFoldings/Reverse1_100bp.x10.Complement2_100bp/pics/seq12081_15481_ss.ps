%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-2.97708344 585.52471924]
[-8.92339134 599.31042480]
[-16.25566292 612.41162109]
[-24.89617157 624.68945312]
[-34.75332260 636.01379395]
[-45.72262192 646.26458740]
[-57.68779373 655.33312988]
[-70.52199554 663.12335205]
[-84.08918762 669.55261230]
[-98.24553680 674.55279541]
[-112.84098816 678.07086182]
[-127.72080994 680.06958008]
[-142.72727966 680.52770996]
[-157.70132446 679.44036865]
[-172.48419189 676.81915283]
[-186.91918945 672.69183350]
[-200.85328674 667.10211182]
[-214.13879395 660.10931396]
[-226.63485718 651.78753662]
[-238.20903015 642.22491455]
[-248.73860168 631.52294922]
[-258.11196899 619.79504395]
[-266.22973633 607.16552734]
[-273.00588989 593.76818848]
[-278.36859131 579.74517822]
[-282.26098633 565.24505615]
[-284.64181519 550.42156982]
[-285.48580933 535.43182373]
[-284.78408813 520.43481445]
[-282.54403687 505.58938599]
[-278.78939819 491.05297852]
[-273.55999756 476.97970581]
[-266.91128540 463.51870728]
[-258.91369629 450.81268311]
[-249.65203857 438.99633789]
[-239.22448730 428.19494629]
[-227.74159241 418.52297974]
[-215.32504272 410.08297729]
[-202.10649109 402.96441650]
[-188.22605896 397.24276733]
[-173.83087158 392.97863770]
[-159.07353210 390.21728516]
[-144.11048889 388.98791504]
[-129.10035706 389.30361938]
[-114.20223236 391.16104126]
[-99.57405853 394.54046631]
[-85.37089539 399.40609741]
[-71.74331665 405.70632935]
[-64.08271790 392.81002808]
[-56.42211914 379.91369629]
[-48.76152039 367.01736450]
[-41.10092163 354.12103271]
[-33.44032669 341.22470093]
[-26.16709709 328.10601807]
[-19.28768349 314.77658081]
[-12.40827179 301.44714355]
[-5.52885914 288.11773682]
[1.35055363 274.78829956]
[8.22996616 261.45886230]
[1.38326383 248.25808716]
[3.64939094 233.38096619]
[14.36647892 222.56443787]
[29.57347488 220.10406494]
[36.45288849 206.77462769]
[43.33230209 193.44520569]
[50.21171188 180.11576843]
[57.09112549 166.78634644]
[63.97053909 153.45690918]
[62.93202972 138.59855652]
[76.13675690 129.88386536]
[83.01616669 116.55443573]
[89.89557648 103.22500610]
[96.17294312 89.60169220]
[101.83572388 75.71166229]
[107.49851227 61.82164001]
[104.57039642 43.64176941]
[118.84233093 33.43006897]
[124.29769135 19.45727158]
[129.75305176 5.48447418]
[135.20840454 -8.48832417]
[140.66375732 -22.46112251]
[142.99925232 -37.27819061]
[142.10643005 -52.25159454]
[141.21362305 -67.22499847]
[140.32080078 -82.19841003]
[139.42799377 -97.17181396]
[138.53517151 -112.14521790]
[137.64234924 -127.11862183]
[127.38455200 -133.12812805]
[121.36298370 -143.23957825]
[120.97416687 -154.88186646]
[126.19909668 -165.15882874]
[135.63659668 -171.56973267]
[135.18998718 -186.56309509]
[134.74337769 -201.55644226]
[120.21791840 -205.78327942]
[107.71069336 -214.29353333]
[98.44702148 -226.25344849]
[93.33448029 -240.49131775]
[92.87393188 -255.61227417]
[97.11049652 -270.13488770]
[105.62912750 -282.63641357]
[117.59525299 -291.89205933]
[131.83654785 -296.99508667]
[146.95780945 -297.44549561]
[161.47758484 -293.19918823]
[173.97340393 -284.67218018]
[183.22103882 -272.69985962]
[188.31449890 -258.45513916]
[188.75477600 -243.33360291]
[184.49874878 -228.81666565]
[175.96336365 -216.32656860]
[163.98484802 -207.08695984]
[149.73672485 -202.00305176]
[150.18333435 -187.00968933]
[150.62994385 -172.01634216]
[164.68547058 -160.28784180]
[165.72227478 -141.69111633]
[152.61575317 -128.01144409]
[153.50857544 -113.03803253]
[154.40139771 -98.06462860]
[155.29420471 -83.09122467]
[156.18702698 -68.11781311]
[157.07983398 -53.14441299]
[157.97265625 -38.17100525]
[163.80445862 -51.99092102]
[172.26445007 -64.37754822]
[183.01565552 -74.83753967]
[195.62988281 -82.95426941]
[209.60470581 -88.40445709]
[224.38349915 -90.97102356]
[239.37763977 -90.55173492]
[253.98991394 -87.16330719]
[267.63830566 -80.94068909]
[279.77923584 -72.13172150]
[289.92913818 -61.08726883]
[297.68368530 -48.24723053]
[302.73410034 -34.12301254]
[304.87915039 -19.27718163]
[304.03344727 -4.30104160]
[300.23068237 10.20891571]
[293.62228394 23.67476273]
[284.47146606 35.56016159]
[273.14273071 45.39171982]
[260.08724976 52.77785110]
[245.82507324 57.42436600]
[230.92422485 59.14620209]
[215.97821045 57.87477112]
[201.58232117 53.66072083]
[188.30993652 46.67189026]
[176.68968201 37.18664551]
[167.18441772 25.58277893]
[160.17269897 12.32246590]
[155.93382263 -2.06613851]
[154.63656616 -17.00576401]
[149.18119812 -3.03296685]
[143.72584534 10.93983078]
[138.27049255 24.91262817]
[132.81513977 38.88542557]
[137.38328552 50.08625412]
[132.95268250 61.77186966]
[121.38854218 67.48442841]
[115.72575378 81.37445068]
[110.06296539 95.26448059]
[124.27287292 90.46046448]
[137.77832031 96.98754883]
[142.84277344 111.10673523]
[136.56509399 124.72989655]
[122.54140472 130.05308533]
[108.80512238 124.02691650]
[103.22500610 110.10442352]
[96.34559631 123.43385315]
[89.46618652 136.76327515]
[90.01263428 152.57504272]
[77.29996490 160.33631897]
[70.42055511 173.66575623]
[63.54114151 186.99517822]
[56.66173172 200.32461548]
[49.78231812 213.65403748]
[42.90290451 226.98347473]
[49.70719910 240.80403137]
[47.09929276 255.80577087]
[36.28578186 266.27151489]
[21.55939484 268.33828735]
[14.67998314 281.66772461]
[7.80057049 294.99713135]
[0.92115772 308.32656860]
[-5.95825481 321.65600586]
[-12.83766747 334.98541260]
[-12.47871685 339.31268311]
[-13.42069149 343.14376831]
[-15.34786797 346.13064575]
[-17.86391830 348.06353760]
[-20.54399872 348.88531494]
[-28.20459747 361.78164673]
[-35.86519241 374.67794800]
[-43.52579117 387.57427979]
[-51.18638992 400.47061157]
[-58.84698486 413.36694336]
[-46.79547501 422.32043457]
[-35.72846222 432.46563721]
[-25.76326370 443.69500732]
[-17.00551605 455.88952637]
[-9.54805660 468.91989136]
[-3.46993732 482.64797974]
[1.16440952 496.92828369]
[4.30585718 511.60940552]
[5.92110443 526.53570557]
[5.99302864 541.54901123]
[4.52086782 556.49011230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 199]
[49 198]
[50 197]
[51 196]
[52 195]
[53 194]
[54 189]
[55 188]
[56 187]
[57 186]
[58 185]
[59 184]
[63 180]
[64 179]
[65 178]
[66 177]
[67 176]
[68 175]
[70 173]
[71 172]
[72 171]
[73 164]
[74 163]
[75 162]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 125]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
