%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[41.15876007 657.94598389]
[40.76991653 673.24652100]
[33.30495834 686.60815430]
[20.47927666 694.96044922]
[5.24012041 696.38403320]
[-8.91066265 690.55194092]
[-18.72132683 678.80419922]
[-21.93745422 663.84039307]
[-17.81999969 649.09912109]
[-7.31512833 637.96777344]
[7.16322041 633.00433350]
[9.38833809 618.17028809]
[11.61345482 603.33624268]
[13.83857250 588.50219727]
[16.06369019 573.66815186]
[18.28880692 558.83410645]
[20.51392365 544.00006104]
[22.73904037 529.16601562]
[8.57771206 524.27758789]
[-4.44764614 516.86810303]
[-15.89270496 507.18875122]
[-25.36673546 495.56802368]
[-32.54594421 482.40072632]
[-37.18454361 468.13464355]
[-39.12316132 453.25515747]
[-38.29432297 438.26879883]
[-34.72478867 423.68609619]
[-28.53470993 410.00399780]
[-19.93356133 397.68908691]
[-9.21306896 387.16162109]
[3.26268482 378.78115845]
[17.06963348 372.83435059]
[31.73813248 369.52505493]
[46.76893997 368.96743774]
[48.99406052 354.13339233]
[43.23033905 340.39916992]
[52.92916870 327.89944458]
[55.15428543 313.06539917]
[48.21878815 303.15451050]
[49.95116806 290.77783203]
[59.96286774 282.64587402]
[62.40859604 267.84661865]
[64.85432434 253.04733276]
[62.84349060 245.93548584]
[67.44821167 238.04661560]
[70.11400604 223.28540039]
[64.76176453 209.38565063]
[74.82845306 197.18023682]
[77.49424744 182.41902161]
[80.16004944 167.65780640]
[82.82584381 152.89659119]
[85.49163818 138.13537598]
[88.15743256 123.37415314]
[90.82322693 108.61293793]
[93.15871429 93.79586792]
[95.16272736 78.93033600]
[97.16674042 64.06481171]
[99.17075348 49.19928360]
[85.58349609 44.01184464]
[73.50154877 35.92907333]
[63.53162766 25.36087990]
[56.17346573 12.84188461]
[51.79480743 -0.99563420]
[50.61300659 -15.45367050]
[52.68425369 -29.80370140]
[57.90090179 -43.32339478]
[65.99705505 -55.33297729]
[76.56214142 -65.22940063]
[89.06169891 -72.51662445]
[102.86444092 -76.83049011]
[117.27412415 -77.95690918]
[119.49924469 -92.79095459]
[106.06900024 -86.11049652]
[92.40858459 -92.30670929]
[88.58794403 -106.81197357]
[97.42351532 -118.93354797]
[112.40204620 -119.73586273]
[122.48143768 -108.62905884]
[125.80369568 -123.25651550]
[129.12596130 -137.88397217]
[132.44821167 -152.51144409]
[135.77047729 -167.13890076]
[134.33932495 -171.23838806]
[134.29191589 -175.18328857]
[135.40971375 -178.55760193]
[137.36155701 -181.05897522]
[139.75045776 -182.52571106]
[143.93746948 -196.92948914]
[148.12448120 -211.33328247]
[152.31149292 -225.73706055]
[156.49850464 -240.14083862]
[160.68551636 -254.54461670]
[164.87251282 -268.94839478]
[169.05952454 -283.35217285]
[171.94480896 -298.07208252]
[173.39422607 -313.00189209]
[174.73245239 -327.94207764]
[176.07069397 -342.88226318]
[177.40892029 -357.82244873]
[178.74716187 -372.76263428]
[165.01177979 -379.17471313]
[154.30000305 -389.90011597]
[147.90533447 -403.64361572]
[146.59996033 -418.74566650]
[150.54151917 -433.38259888]
[159.25404358 -445.78695679]
[171.68544006 -454.46081543]
[186.33457947 -458.35681152]
[201.43247986 -457.00445557]
[215.15602112 -450.56704712]
[225.84802246 -439.82192993]
[232.21734619 -426.06668091]
[233.49488831 -410.96224976]
[229.52636719 -396.33258057]
[220.79100037 -383.94433594]
[208.34362793 -375.29336548]
[193.68734741 -371.42437744]
[192.34910583 -356.48419189]
[191.01087952 -341.54400635]
[189.67263794 -326.60382080]
[188.33441162 -311.66366577]
[190.86862183 -304.72106934]
[186.86340332 -296.51156616]
[196.25985718 -308.20370483]
[209.76132202 -314.73904419]
[224.76086426 -314.85568237]
[238.36231995 -308.53109741]
[247.93945312 -296.98648071]
[251.64308167 -282.45089722]
[248.75808716 -267.73095703]
[239.84152222 -255.66883850]
[226.61502075 -248.59355164]
[211.63241577 -247.87123108]
[197.78662109 -253.64134216]
[187.75105286 -264.78976440]
[183.46331787 -279.16516113]
[179.27630615 -264.76138306]
[175.08929443 -250.35760498]
[170.90228271 -235.95382690]
[166.71527100 -221.55004883]
[162.52825928 -207.14627075]
[158.34124756 -192.74247742]
[154.15423584 -178.33869934]
[150.39793396 -163.81663513]
[147.07566833 -149.18917847]
[143.75341797 -134.56172180]
[140.43115234 -119.93425751]
[137.10890198 -105.30680084]
[134.33328247 -90.56583405]
[132.10816956 -75.73179626]
[146.47444153 -69.92861938]
[159.04602051 -60.85711288]
[169.09283447 -49.03893661]
[176.03018188 -35.15543365]
[179.45281982 -20.00831795]
[179.15855408 -4.47338581]
[175.16027832 10.55012035]
[167.68536377 24.19156837]
[157.16281128 35.65938568]
[144.19857788 44.28699875]
[129.54074097 49.57156372]
[114.03628540 51.20329666]
[112.03227234 66.06882477]
[110.02825928 80.93435669]
[108.02424622 95.79988098]
[109.90418243 99.16710663]
[110.29077911 103.34662628]
[108.85451508 107.65292358]
[105.58444214 111.27873230]
[102.91864777 126.03994751]
[100.25285339 140.80116272]
[97.58705902 155.56237793]
[94.92126465 170.32359314]
[92.25547028 185.08482361]
[89.58967590 199.84603882]
[94.75124359 214.80158997]
[84.87522125 225.95118713]
[82.20942688 240.71240234]
[79.65359497 255.49305725]
[77.20787048 270.29232788]
[74.76213837 285.09161377]
[81.64408112 302.17141724]
[69.98833466 315.29052734]
[67.76321411 330.12457275]
[73.36777496 344.91979980]
[63.82810211 356.35852051]
[61.60298538 371.19256592]
[75.80867767 376.13568115]
[88.86067200 383.60305786]
[100.31517792 393.33911133]
[109.78305054 405.01110840]
[116.94297028 418.22064209]
[121.55239105 432.51715088]
[123.45571899 447.41326904]
[122.58958435 462.40148926]
[118.98495483 476.97146606]
[112.76601410 490.62731934]
[104.14588928 502.90460205]
[93.41935730 513.38604736]
[80.95275879 521.71563721]
[67.17147827 527.61102295]
[52.54544067 530.87274170]
[37.57308578 531.39111328]
[35.34796906 546.22515869]
[33.12284851 561.05920410]
[30.89773369 575.89324951]
[28.67261505 590.72729492]
[26.44749832 605.56134033]
[24.22238159 620.39538574]
[21.99726486 635.22943115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 210]
[12 209]
[13 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[34 187]
[35 186]
[37 184]
[38 183]
[41 181]
[42 180]
[43 179]
[45 178]
[46 177]
[48 175]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 165]
[56 164]
[57 163]
[58 162]
[71 150]
[72 149]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 123]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
