%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[24.33211327 545.90814209]
[14.64642334 557.37261963]
[4.06962967 568.02050781]
[-7.32967234 577.78277588]
[-19.47755241 586.59619141]
[-32.29522705 594.40344238]
[-45.69956589 601.15399170]
[-59.60363388 606.80407715]
[-73.91725922 611.31695557]
[-88.54761505 614.66345215]
[-103.39981079 616.82189941]
[-118.37751770 617.77813721]
[-133.38360596 617.52612305]
[-148.32075500 616.06738281]
[-163.09210205 613.41143799]
[-177.60182190 609.57556152]
[-191.75581360 604.58447266]
[-205.46231079 598.47070312]
[-218.63238525 591.27380371]
[-231.18064880 583.04046631]
[-243.02571106 573.82415771]
[-254.09075928 563.68457031]
[-264.30401611 552.68750000]
[-273.59924316 540.90423584]
[-281.91616821 528.41125488]
[-289.20083618 515.28948975]
[-295.40603638 501.62417603]
[-300.49148560 487.50381470]
[-304.42422485 473.02001953]
[-307.17877197 458.26675415]
[-308.73718262 443.33969116]
[-309.08944702 428.33560181]
[-308.23321533 413.35183716]
[-306.17404175 398.48556519]
[-302.92532349 383.83319092]
[-298.50808716 369.48974609]
[-292.95101929 355.54824829]
[-286.29010010 342.09912109]
[-278.56860352 329.22961426]
[-269.83657837 317.02313232]
[-260.15063477 305.55889893]
[-249.57359314 294.91122437]
[-238.17408752 285.14920044]
[-226.02600098 276.33612061]
[-213.20816040 268.52911377]
[-199.80368042 261.77883911]
[-185.89947510 256.12908936]
[-171.58575439 251.61650085]
[-156.95532227 248.27030945]
[-142.10308838 246.11224365]
[-127.12535095 245.15629578]
[-112.11927032 245.40866089]
[-97.18215179 246.86770630]
[-82.41087341 249.52397156]
[-67.90123749 253.36021423]
[-53.74734497 258.35159302]
[-40.04098892 264.46566772]
[-26.87106514 271.66284180]
[-18.64225769 259.12145996]
[-10.41344929 246.58004761]
[-2.18464160 234.03865051]
[6.04416609 221.49725342]
[14.27297401 208.95585632]
[9.91403770 196.83029175]
[13.38672256 184.21987915]
[23.63921356 175.78797913]
[37.07091141 174.78591919]
[45.48552704 162.36842346]
[53.90014648 149.95092773]
[62.31476593 137.53343201]
[61.91885757 134.75830078]
[62.59836197 131.65911865]
[64.48220825 128.64472961]
[67.54907990 126.16304016]
[71.61823273 124.64779663]
[80.75703430 112.75316620]
[89.89583588 100.85853577]
[91.91921234 93.05606842]
[99.26031494 88.85618591]
[108.57520294 77.09893036]
[117.89008331 65.34168243]
[118.37018585 61.02618790]
[120.03148651 57.44783783]
[122.49720764 54.88743591]
[125.33806610 53.47459793]
[128.12617493 53.18368912]
[138.12434387 42.00171661]
[148.12251282 30.81974220]
[158.12068176 19.63776588]
[161.55123901 4.19296455]
[175.80241394 -0.13751377]
[185.80058289 -11.31948853]
[195.79876709 -22.50146294]
[205.79693604 -33.68343735]
[215.79510498 -44.86541367]
[225.79327393 -56.04738617]
[215.55931091 -67.02833557]
[206.36630249 -78.89441681]
[198.29045105 -91.54730988]
[191.39865112 -104.88216400]
[185.74801636 -118.78848267]
[181.38537598 -133.15101624]
[178.34687805 -147.85078430]
[176.65771484 -162.76593018]
[176.33186340 -177.77290344]
[177.37203979 -192.74732971]
[179.76960754 -207.56510925]
[183.50471497 -222.10348511]
[188.54640198 -236.24195862]
[194.85289001 -249.86340332]
[202.37193298 -262.85491943]
[211.04121399 -275.10882568]
[220.78889465 -286.52365112]
[231.53419495 -297.00476074]
[243.18809509 -306.46530151]
[255.65400696 -314.82690430]
[268.82864380 -322.02026367]
[282.60281372 -327.98574829]
[296.86239624 -332.67398071]
[311.48925781 -336.04605103]
[326.36212158 -338.07406616]
[341.35778809 -338.74121094]
[356.35198975 -338.04193115]
[371.22048950 -335.98205566]
[385.84005737 -332.57864380]
[400.08956909 -327.85986328]
[413.85092163 -321.86486816]
[427.01013184 -314.64328003]
[439.45809937 -306.25500488]
[451.09167480 -296.76950073]
[461.81451416 -286.26538086]
[471.53768921 -274.82971191]
[480.18069458 -262.55722046]
[487.67187500 -249.54963684]
[493.94915771 -235.91471863]
[498.96054077 -221.76547241]
[502.66448975 -207.21913147]
[505.03030396 -192.39622498]
[506.03836060 -177.41961670]
[505.68035889 -162.41337585]
[503.95922852 -147.50187683]
[500.88925171 -132.80867004]
[496.49584961 -118.45550537]
[490.81542969 -104.56133270]
[483.89505005 -91.24127960]
[475.79208374 -78.60572052]
[466.57369995 -66.75936890]
[456.31622314 -55.80037689]
[445.10467529 -45.81956100]
[433.03198242 -36.89963150]
[420.19815063 -29.11450005]
[406.70956421 -22.52867699]
[392.67794800 -17.19673729]
[378.21963501 -13.16286278]
[363.45440674 -10.46048069]
[348.50457764 -9.11198330]
[333.49407959 -9.12854576]
[318.54730225 -10.51003170]
[303.78805542 -13.24499130]
[289.33865356 -17.31076241]
[275.31887817 -22.67365646]
[261.84484863 -29.28922844]
[249.02824402 -37.10266495]
[236.97525024 -46.04921341]
[226.97708130 -34.86724091]
[216.97891235 -23.68526459]
[206.98072815 -12.50329113]
[196.98255920 -1.32131636]
[186.98439026 9.86065865]
[184.26898193 24.50565147]
[169.30265808 29.63593864]
[159.30448914 40.81791306]
[149.30632019 51.99988937]
[139.30815125 63.18186188]
[129.64733887 74.65656281]
[120.33245087 86.41381073]
[111.01757050 98.17106628]
[101.79046631 109.99733734]
[92.65166473 121.89196777]
[83.51286316 133.78660583]
[74.73226166 145.94805908]
[66.31764221 158.36555481]
[57.90302277 170.78305054]
[49.48840714 183.20054626]
[53.10339737 200.31636047]
[43.41202927 214.47235107]
[26.81437492 217.18466187]
[18.58556557 229.72605896]
[10.35675907 242.26745605]
[2.12795091 254.80885315]
[-6.10085726 267.35025024]
[-14.32966518 279.89166260]
[-2.48440003 289.10772705]
[8.58086300 299.24707031]
[18.79435921 310.24392700]
[28.08985138 322.02697754]
[36.40705490 334.51980591]
[43.69202423 347.64135742]
[49.89751434 361.30657959]
[54.98328400 375.42681885]
[58.91634369 389.91052246]
[61.67118835 404.66372681]
[63.22995377 419.59075928]
[63.58252335 434.59484863]
[62.72661972 449.57861328]
[60.66778946 464.44494629]
[57.41938400 479.09738159]
[53.00247192 493.44091797]
[47.44570160 507.38253784]
[40.78510284 520.83178711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 192]
[59 191]
[60 190]
[61 189]
[62 188]
[63 187]
[67 184]
[68 183]
[69 182]
[70 181]
[75 180]
[76 179]
[77 178]
[79 177]
[80 176]
[81 175]
[86 174]
[87 173]
[88 172]
[89 171]
[91 169]
[92 168]
[93 167]
[94 166]
[95 165]
[96 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
