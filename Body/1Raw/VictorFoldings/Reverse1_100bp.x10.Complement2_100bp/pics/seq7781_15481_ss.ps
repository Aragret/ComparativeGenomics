%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[178.90911865 635.13342285]
[187.95582581 623.11688232]
[199.00292969 612.90899658]
[211.69531250 604.83789062]
[206.03253174 590.94781494]
[200.36973572 577.05780029]
[194.70695496 563.16778564]
[189.04417419 549.27777100]
[183.38137817 535.38775635]
[172.15626526 533.34735107]
[163.21748352 526.06628418]
[158.85877991 515.26373291]
[160.27024841 503.58001709]
[167.21611023 493.93161011]
[161.96939087 479.87915039]
[156.72267151 465.82669067]
[151.47595215 451.77420044]
[146.22923279 437.72174072]
[140.98251343 423.66925049]
[135.73579407 409.61679077]
[130.48907471 395.56433105]
[127.87048340 410.33398438]
[119.86399078 423.01846313]
[107.65731812 431.73611450]
[93.06124878 435.19366455]
[78.24102783 432.87829590]
[65.39514160 425.13339233]
[56.42921066 413.10791016]
[52.67326355 398.58578491]
[54.68448257 383.72122192]
[62.16451263 370.71932983]
[74.00373840 361.50885010]
[88.44587708 357.45611572]
[103.34851837 359.16232300]
[116.50095367 366.37435913]
[125.95120239 378.02066040]
[123.72608948 363.18661499]
[121.50096893 348.35256958]
[119.27584839 333.51852417]
[116.67295837 331.14001465]
[115.09279633 327.38262939]
[115.17090607 322.74072266]
[117.29799652 317.97390747]
[115.73747253 303.05529785]
[114.17694855 288.13668823]
[112.61643219 273.21807861]
[111.05590820 258.29946899]
[109.49538422 243.38087463]
[107.93486023 228.46228027]
[106.37433624 213.54367065]
[104.59187317 198.64994812]
[102.58786011 183.78442383]
[98.57890320 177.57554626]
[100.66637421 168.68284607]
[98.88391113 153.78912354]
[97.10144806 138.89540100]
[95.31897736 124.00168610]
[93.53651428 109.10797119]
[91.64321899 94.22793579]
[88.75794983 79.50804138]
[85.00164795 64.98598480]
[81.24534607 50.46392441]
[77.48904419 35.94186783]
[65.17374420 30.48770332]
[58.34794235 19.10267448]
[59.31140518 6.05837154]
[67.48893738 -3.89941359]
[63.94926453 -18.47579002]
[57.01750946 -5.17350483]
[43.64252853 1.61692250]
[28.81285858 -0.63716918]
[18.05960274 -11.09505939]
[15.39345551 -25.85621262]
[21.80882645 -39.41508484]
[34.91294098 -46.71455383]
[49.81828308 -45.03209305]
[60.96612549 -34.99421310]
[59.18365860 -49.88793182]
[57.40119553 -64.78164673]
[55.61872864 -79.67536163]
[53.83626175 -94.56908417]
[52.05379486 -109.46279907]
[42.73143005 -122.24575806]
[48.90151215 -135.80227661]
[37.52555084 -150.28224182]
[45.05602646 -166.13339233]
[43.05201340 -180.99891663]
[41.04800034 -195.86444092]
[39.04398727 -210.72996521]
[37.03997421 -225.59550476]
[22.08783722 -227.67785645]
[8.25244427 -233.71809387]
[-3.43952990 -243.26799011]
[-12.12046146 -255.61885071]
[-17.14616966 -269.85418701]
[-18.14371109 -284.91763306]
[-15.03906345 -299.69140625]
[-8.06261158 -313.07913208]
[2.26794553 -324.08740234]
[15.18601227 -331.89932251]
[29.73298073 -335.93521118]
[44.82937241 -335.89553833]
[59.35493088 -331.78326416]
[72.23176575 -323.90356445]
[82.50433350 -312.84115601]
[89.41033173 -299.41693115]
[92.43729401 -284.62707520]
[91.36061096 -269.56909180]
[86.26016235 -255.36035156]
[77.51444244 -243.05526733]
[65.77244568 -233.56695557]
[51.90550232 -227.59951782]
[53.90951538 -212.73397827]
[55.91352844 -197.86845398]
[57.91754150 -183.00292969]
[59.92155457 -168.13740540]
[69.34784698 -160.55639648]
[71.13908386 -148.18807983]
[63.79523087 -137.58474731]
[72.99010468 -125.86708832]
[66.94750977 -111.24526215]
[68.72998047 -96.35154724]
[70.51244354 -81.45783234]
[72.29491425 -66.56410980]
[74.07737732 -51.67039490]
[75.85984039 -36.77667999]
[78.52563477 -22.01546097]
[82.06530762 -7.43908596]
[96.78845215 0.68912607]
[101.16358948 17.27746773]
[92.01110840 32.18556595]
[95.76740265 46.70762634]
[99.52370453 61.22968292]
[103.28000641 75.75174713]
[110.01293945 62.34772873]
[123.28533936 55.35892105]
[138.14692688 57.39197159]
[149.05468750 67.68860626]
[151.94032288 82.40842438]
[145.72752380 96.06130981]
[132.73355103 103.55506897]
[117.80480194 102.09471130]
[106.50875092 92.22392273]
[110.62101746 99.15657806]
[108.43022919 107.32550812]
[110.21269226 122.21922302]
[111.99516296 137.11294556]
[113.77762604 152.00665283]
[115.56009674 166.90037537]
[117.45338440 181.78041077]
[119.45739746 196.64593506]
[123.18952942 202.10330200]
[123.55106354 207.77482605]
[121.29293823 211.98313904]
[122.85346222 226.90174866]
[124.41398621 241.82035828]
[125.97451019 256.73895264]
[127.53503418 271.65756226]
[129.09555054 286.57617188]
[130.65608215 301.49478149]
[132.21659851 316.41339111]
[134.10989380 331.29342651]
[136.33500671 346.12747192]
[138.56013489 360.96148682]
[140.78524780 375.79553223]
[144.54154968 390.31759644]
[149.78826904 404.37008667]
[155.03498840 418.42254639]
[160.28170776 432.47500610]
[165.52842712 446.52749634]
[170.77513123 460.57995605]
[176.02185059 474.63244629]
[181.26856995 488.68490601]
[198.79173279 495.88580322]
[205.37396240 513.30957031]
[197.27140808 529.72491455]
[202.93418884 543.61499023]
[208.59698486 557.50500488]
[214.25976562 571.39501953]
[219.92254639 585.28503418]
[225.58534241 599.17504883]
[240.30293274 596.07153320]
[255.33818054 595.64599609]
[270.20776367 597.91210938]
[284.43368530 602.79711914]
[297.55862427 610.14398193]
[309.16067505 619.71643066]
[318.86688232 631.20684814]
[326.36523438 644.24578857]
[331.41470337 658.41412354]
[333.85293579 673.25646973]
[333.60159302 688.29565430]
[330.66873169 703.04821777]
[325.14862061 717.03991699]
[317.21871948 729.82104492]
[307.13394165 740.98065186]
[295.21850586 750.16009521]
[281.85537720 757.06420898]
[267.47418213 761.47106934]
[252.53717041 763.23907471]
[237.52453613 762.31134033]
[222.91886902 758.71771240]
[209.18968201 752.57366943]
[196.77830505 744.07678223]
[186.08370972 733.50012207]
[177.44969177 721.18371582]
[171.15379333 707.52349854]
[167.39839172 692.95855713]
[166.30422974 677.95715332]
[167.90647888 663.00146484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 181]
[5 180]
[6 179]
[7 178]
[8 177]
[9 176]
[14 173]
[15 172]
[16 171]
[17 170]
[18 169]
[19 168]
[20 167]
[21 166]
[36 165]
[37 164]
[38 163]
[39 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 155]
[50 154]
[51 151]
[52 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 143]
[60 134]
[61 133]
[62 132]
[63 131]
[67 128]
[68 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[84 119]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
