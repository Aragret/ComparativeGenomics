%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[107.28533936 632.59777832]
[92.72129822 636.46887207]
[77.65707397 636.87634277]
[62.90507507 633.79815674]
[49.26084518 627.40039062]
[37.46020889 618.02795410]
[28.13955307 606.18646240]
[21.80153275 592.51434326]
[18.78794861 577.74902344]
[19.26131821 562.68670654]
[23.19611549 548.13977051]
[30.38014030 534.89263916]
[40.42596817 523.65972900]
[52.79183960 515.04681396]
[66.81088257 509.51843262]
[81.72705841 507.37265015]
[83.06529236 492.43246460]
[84.40352631 477.49227905]
[85.74176025 462.55209351]
[87.07999420 447.61190796]
[88.41822815 432.67172241]
[89.75646210 417.73153687]
[91.09469604 402.79135132]
[92.43292999 387.85116577]
[93.54857635 372.89273071]
[94.44139862 357.91931152]
[95.33421326 342.94589233]
[96.22702789 327.97250366]
[93.78324127 323.86920166]
[93.89117432 318.18719482]
[97.37590027 312.56863403]
[98.71413422 297.62844849]
[100.05236816 282.68826294]
[101.39060211 267.74807739]
[102.61757660 252.79833984]
[103.73322296 237.83988953]
[104.84886932 222.88143921]
[96.38826752 207.50660706]
[106.88220215 192.37521362]
[107.77501678 177.40180969]
[106.54804230 162.45208740]
[103.22577667 147.82461548]
[92.86175537 137.12713623]
[97.35037994 121.95600891]
[94.02811432 107.32855225]
[90.33779144 103.60089111]
[88.99869537 98.07096100]
[90.83157349 92.21626282]
[87.94630432 77.49636841]
[85.06102753 62.77647781]
[70.85814667 60.88444901]
[57.95324326 54.70781708]
[47.60229492 44.86241150]
[40.80817795 32.32041931]
[38.22349930 18.31436157]
[40.08793259 4.21601057]
[46.20605087 -8.59798717]
[55.96774292 -18.88052559]
[68.40900421 -25.63541222]
[65.74320984 -40.39662933]
[63.07741165 -55.15784454]
[60.41161728 -69.91905975]
[57.74582291 -84.68028259]
[47.67912674 -96.88569641]
[53.03137207 -110.78543854]
[50.36557770 -125.54665375]
[47.69977951 -140.30787659]
[45.03398514 -155.06909180]
[40.42926788 -162.95796204]
[42.44009781 -170.06980896]
[39.99437332 -184.86907959]
[37.54864502 -199.66835022]
[26.72130775 -204.57807922]
[19.68046761 -214.00820923]
[18.08256149 -225.54687500]
[22.20997238 -236.31163025]
[30.92930222 -243.66958618]
[28.92528725 -258.53512573]
[26.92127419 -273.40063477]
[22.67340469 -281.48727417]
[24.99979210 -288.50222778]
[12.85947227 -298.26187134]
[11.26396465 -313.39160156]
[20.64309692 -324.90539551]
[18.86063194 -339.79910278]
[17.07816505 -354.69284058]
[15.29569912 -369.58654785]
[13.51323318 -384.48025513]
[11.73076725 -399.37399292]
[-3.23246098 -401.20843506]
[-17.32162094 -406.57116699]
[-29.71758842 -415.15042114]
[-39.69967651 -426.44738770]
[-46.68753815 -439.80526733]
[-50.27491379 -454.44747925]
[-50.25323486 -469.52273560]
[-46.62376022 -484.15454102]
[-39.59750366 -497.49227905]
[-29.58296204 -508.76049805]
[-17.16237068 -517.30401611]
[-3.05784321 -522.62622070]
[11.91059971 -524.41766357]
[26.87271309 -522.57409668]
[40.95862198 -517.20281982]
[53.34938431 -508.61608887]
[63.32461929 -497.31307983]
[70.30438232 -483.95095825]
[73.88288116 -469.30657959]
[73.85205841 -454.23135376]
[70.21371460 -439.60171509]
[63.17937469 -426.26824951]
[53.15800476 -415.00610352]
[40.73223495 -406.47009277]
[26.62448502 -401.15643311]
[28.40695000 -386.26272583]
[30.18941689 -371.36901855]
[31.97188187 -356.47531128]
[33.75434875 -341.58157349]
[35.53681564 -326.68786621]
[47.36806870 -317.71249390]
[49.38790894 -302.63354492]
[39.89350891 -290.28469849]
[41.78680420 -275.40466309]
[43.79081726 -260.53912354]
[45.79483032 -245.67359924]
[60.99425507 -235.47100830]
[63.96014786 -217.08306885]
[52.34791565 -202.11407471]
[54.79364395 -187.31480408]
[57.23937225 -172.51553345]
[59.79520416 -157.73487854]
[62.46099854 -142.97366333]
[65.12679291 -128.21244812]
[67.79258728 -113.45123291]
[77.66860962 -102.30163574]
[72.50704193 -87.34607697]
[75.17283630 -72.58486176]
[77.83863068 -57.82364273]
[80.50442505 -43.06242371]
[83.17021942 -28.30120659]
[98.71911621 -25.82715607]
[112.50432587 -18.16536140]
[122.85017395 -6.22612190]
[128.49191284 8.55906200]
[128.73022461 24.40911102]
[123.51792908 39.40792465]
[113.46787262 51.73601151]
[99.78092194 59.89120483]
[102.66619110 74.61109924]
[105.55146790 89.33098602]
[108.65557861 104.00629425]
[111.97783661 118.63375092]
[122.57949066 130.37750244]
[117.85324097 144.50236511]
[121.17549896 159.12982178]
[124.96456146 144.61627197]
[132.81211853 131.83285522]
[144.03929138 121.88545990]
[157.67480469 115.63462830]
[172.53904724 113.62113190]
[187.34611511 116.01914978]
[200.81506348 122.62123108]
[211.78068542 132.85623169]
[219.29434204 145.83871460]
[222.70602417 160.44558716]
[221.72058105 175.41317749]
[216.42329407 189.44665527]
[207.27239990 201.33200073]
[195.05955505 210.04096985]
[180.84127808 214.82019043]
[165.84762573 215.25619507]
[151.37567139 211.31126404]
[138.67738342 203.32669067]
[128.85130310 191.99319458]
[122.74842072 178.29463196]
[121.85560608 193.26803589]
[129.81756592 203.41545105]
[128.76567078 215.86845398]
[119.80732727 223.99708557]
[118.69167328 238.95553589]
[117.57602692 253.91398621]
[120.05849457 262.70462036]
[116.33078766 269.08630371]
[114.99255371 284.02648926]
[113.65431213 298.96667480]
[112.31607819 313.90686035]
[111.20043182 328.86532593]
[110.30761719 343.83871460]
[109.41480255 358.81213379]
[108.52198792 373.78552246]
[111.13468933 379.85885620]
[110.39855194 385.49401855]
[107.37311554 389.18939209]
[106.03488159 404.12957764]
[104.69664764 419.06976318]
[103.35841370 434.00994873]
[102.02017975 448.95013428]
[100.68194580 463.89031982]
[99.34371185 478.83050537]
[98.00547791 493.77069092]
[96.66724396 508.71087646]
[110.96462250 513.47338867]
[123.77799225 521.40527344]
[134.41633606 532.07867432]
[142.30593872 544.91815186]
[147.02131653 559.23114014]
[148.30819702 574.24578857]
[146.09716797 589.15246582]
[140.50746155 603.14715576]
[131.84054565 615.47521973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 201]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 190]
[26 189]
[27 188]
[28 187]
[31 186]
[32 185]
[33 184]
[34 183]
[35 181]
[36 180]
[37 179]
[39 176]
[40 175]
[41 155]
[42 154]
[44 152]
[45 151]
[48 150]
[49 149]
[50 148]
[59 140]
[60 139]
[61 138]
[62 137]
[63 136]
[65 134]
[66 133]
[67 132]
[68 131]
[70 130]
[71 129]
[72 128]
[77 125]
[78 124]
[79 123]
[81 122]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
