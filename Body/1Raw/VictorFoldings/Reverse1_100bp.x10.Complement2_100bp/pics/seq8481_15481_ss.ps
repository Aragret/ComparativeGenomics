%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[155.14669800 547.40057373]
[140.93939209 539.94860840]
[138.04907227 524.16802979]
[148.69294739 512.16442871]
[149.13955688 497.17105103]
[149.58616638 482.17770386]
[150.03277588 467.18435669]
[150.47937012 452.19100952]
[150.92597961 437.19766235]
[140.53988647 420.88766479]
[151.39677429 403.90264893]
[151.39677429 388.90264893]
[151.39677429 373.90264893]
[151.39677429 358.90264893]
[151.39677429 343.90264893]
[151.17344666 328.90432739]
[149.05882263 314.05410767]
[145.30252075 299.53204346]
[141.54621887 285.01000977]
[137.78991699 270.48794556]
[134.03361511 255.96588135]
[130.27731323 241.44381714]
[126.52101135 226.92175293]
[122.65670776 212.42807007]
[111.82535553 202.20402527]
[115.63207245 186.84761047]
[111.65997314 172.38308716]
[107.68787384 157.91856384]
[103.71578217 143.45404053]
[93.36116791 137.20036316]
[89.93357086 125.18223572]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[82.17036438 61.01936722]
[71.22376251 49.59648132]
[75.52736664 35.33716202]
[71.77106476 20.81510162]
[68.18430328 35.37996292]
[60.11813736 48.02658081]
[48.42379761 57.42032242]
[34.33542252 62.56985474]
[19.33978653 62.93172455]
[5.01941967 58.46774673]
[-7.11441755 49.64901733]
[-15.78121281 37.40619659]
[-20.06633759 23.03129959]
[-19.51757431 8.04134083]
[-14.19283199 -5.98175192]
[-4.65404654 -17.55808830]
[8.09213352 -25.46599007]
[22.70057106 -28.87091827]
[37.62960434 -27.41353989]
[51.30373764 -21.24765968]
[62.27990723 -11.02397442]
[69.39983368 2.17876625]
[69.39983368 -12.82123375]
[69.39983368 -27.82123375]
[69.39983368 -42.82123566]
[66.43026733 -48.72828293]
[66.82968903 -54.39727783]
[69.62980652 -58.26617813]
[70.07641602 -73.25952911]
[67.20390320 -81.93054199]
[70.64293671 -88.47231293]
[71.31272125 -103.45735168]
[71.98250580 -118.44239044]
[72.65229034 -133.42742920]
[73.32207489 -148.41247559]
[60.65970993 -140.37104797]
[46.42879868 -145.11247253]
[41.11983871 -159.14155579]
[48.64640045 -172.11656189]
[63.46018219 -174.47280884]
[74.64037323 -164.47488403]
[76.42283630 -179.36860657]
[78.20530701 -194.26231384]
[79.98777008 -209.15603638]
[81.77024078 -224.04975891]
[83.55270386 -238.94346619]
[73.32682800 -227.96934509]
[59.01314163 -223.48399353]
[44.35320282 -226.65988159]
[33.17909241 -236.66683960]
[28.41168976 -250.88908386]
[31.29718590 -265.60891724]
[41.08131790 -276.97866821]
[55.20653534 -282.02624512]
[69.98054504 -279.43228149]
[81.54145050 -269.87478638]
[86.86717224 -255.85299683]
[90.62346649 -270.37506104]
[94.16313934 -284.95141602]
[97.70281219 -299.52780151]
[101.24248505 -314.10418701]
[87.46520996 -320.13391113]
[74.94440460 -328.46463013]
[64.06056213 -338.84310913]
[55.14442062 -350.95401001]
[48.46694183 -364.42926025]
[44.23104095 -378.85937500]
[42.56544876 -393.80584717]
[43.52077484 -408.81445312]
[47.06798935 -423.42910767]
[53.09929657 -437.20568848]
[61.43141174 -449.72555542]
[71.81113434 -460.60824585]
[83.92303467 -469.52301025]
[97.39904022 -476.19894409]
[111.82963562 -480.43319702]
[126.77629852 -482.09710693]
[141.78480530 -481.14007568]
[156.39906311 -477.59121704]
[170.17497253 -471.55834961]
[182.69387817 -463.22479248]
[193.57537842 -452.84384155]
[202.48876953 -440.73092651]
[209.16319275 -427.25418091]
[213.39581299 -412.82308960]
[215.05802917 -397.87625122]
[214.09928894 -382.86785889]
[210.54876709 -368.25399780]
[204.51432800 -354.47875977]
[196.17936707 -341.96078491]
[185.79718018 -331.08047485]
[173.68325806 -322.16845703]
[160.20574951 -315.49557495]
[145.77418518 -311.26458740]
[130.82714844 -309.60406494]
[115.81886292 -310.56451416]
[112.27919006 -295.98812866]
[108.73951721 -281.41174316]
[105.19984436 -266.83538818]
[106.87549591 -262.36309814]
[105.75947571 -256.79071045]
[101.33169556 -251.88088989]
[98.44641876 -237.16101074]
[96.66395569 -222.26728821]
[94.88149261 -207.37356567]
[93.09902191 -192.47985840]
[91.31655884 -177.58613586]
[89.53408813 -162.69241333]
[88.30711365 -147.74269104]
[87.63732910 -132.75764465]
[86.96754456 -117.77260590]
[86.29776001 -102.78756714]
[85.62797546 -87.80252838]
[85.06976318 -72.81291962]
[84.62316132 -57.81957245]
[84.39983368 -42.82123566]
[84.39983368 -27.82123375]
[84.39983368 -12.82123375]
[84.39983368 2.17876625]
[86.29312134 17.05880165]
[90.04942322 31.58086014]
[100.72735596 41.96503067]
[96.69242859 57.26306915]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[123.52554321 122.76681519]
[118.18030548 139.48194885]
[122.15239716 153.94647217]
[126.12449646 168.41099548]
[130.09658813 182.87551880]
[141.21205139 194.13415527]
[137.12123108 208.45596313]
[142.41139221 215.90257263]
[141.04307556 223.16546631]
[144.79937744 237.68751526]
[148.55567932 252.20957947]
[152.31196594 266.73162842]
[156.06826782 281.25369263]
[159.82456970 295.77575684]
[163.58087158 310.29782104]
[167.50321960 295.81973267]
[176.33197021 283.69317627]
[188.90554810 275.51361084]
[203.56970215 272.35723877]
[218.39509583 274.63928223]
[231.43118286 282.05953979]
[240.96287537 293.64172363]
[245.73608398 307.86199951]
[245.12281799 322.84948730]
[239.20378113 336.63226318]
[228.75770569 347.39697266]
[215.15895081 353.72738647]
[200.19668579 354.79058838]
[185.83943176 350.44668579]
[173.97613525 341.26724243]
[166.16679382 328.45770264]
[169.31091309 334.27371216]
[169.08044434 339.95208740]
[166.39677429 343.90264893]
[166.39677429 358.90264893]
[166.39677429 373.90264893]
[166.39677429 388.90264893]
[166.39677429 403.90264893]
[174.51960754 411.13647461]
[177.26387024 421.43447876]
[173.95678711 431.33456421]
[165.91932678 437.64425659]
[165.47273254 452.63760376]
[165.02612305 467.63095093]
[164.57951355 482.62432861]
[164.13290405 497.61767578]
[163.68630981 512.61102295]
[173.59684753 525.22692871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[16 193]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 169]
[26 167]
[27 166]
[28 165]
[29 164]
[32 162]
[34 160]
[35 159]
[36 158]
[38 156]
[39 155]
[57 154]
[58 153]
[59 152]
[60 151]
[63 150]
[64 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[76 143]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[92 137]
[93 134]
[94 133]
[95 132]
[96 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
