%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[-51.12482452 419.44287109]
[-48.10151291 434.15258789]
[-46.80637360 449.11383057]
[-47.25692749 464.12429810]
[-49.44707489 478.98092651]
[-53.34720230 493.48284912]
[-58.90456009 507.43389893]
[-66.04399872 520.64544678]
[-74.66895294 532.93884277]
[-84.66278839 544.14770508]
[-95.89035797 554.12060547]
[-108.19980621 562.72259521]
[-121.42466736 569.83734131]
[-135.38609314 575.36859131]
[-149.89526367 579.24163818]
[-164.75598145 581.40405273]
[-179.76724243 581.82653809]
[-194.72604370 580.50341797]
[-209.43009949 577.45263672]
[-223.68054199 572.71545410]
[-237.28465271 566.35583496]
[-250.05845642 558.45983887]
[-261.82919312 549.13427734]
[-272.43768311 538.50524902]
[-281.74047852 526.71649170]
[-289.61172485 513.92742920]
[-295.94497681 500.31100464]
[-300.65463257 486.05142212]
[-303.67697144 471.34149170]
[-304.97109985 456.38015747]
[-304.51956177 441.36975098]
[-302.32839966 426.51324463]
[-298.42730713 412.01159668]
[-292.86901855 398.06088257]
[-285.72869873 384.84982300]
[-277.10293579 372.55703735]
[-267.10833740 361.34878540]
[-255.88011169 351.37667847]
[-243.57009888 342.77551270]
[-230.34475708 335.66165161]
[-216.38296509 330.13131714]
[-201.87351990 326.25924683]
[-187.01268005 324.09783936]
[-172.00138855 323.67633057]
[-157.04266357 325.00042725]
[-142.33880615 328.05218506]
[-128.08868408 332.79037476]
[-114.48500061 339.15090942]
[-101.71172333 347.04772949]
[-92.39684296 335.29049683]
[-83.08195496 323.53323364]
[-81.24304962 308.75259399]
[-66.60861969 302.74057007]
[-57.29373932 290.98333740]
[-47.97885513 279.22607422]
[-38.66397476 267.46881104]
[-29.34909058 255.71157837]
[-20.21028900 243.81694031]
[-11.24959278 231.78756714]
[-2.28889656 219.75817871]
[6.67179918 207.72880554]
[15.63249493 195.69943237]
[10.34059238 184.77372742]
[10.19526768 172.56259155]
[15.28546143 161.38265991]
[24.70104027 153.38099670]
[36.69491959 150.12289429]
[49.00708771 152.28584290]
[58.32197189 140.52859497]
[67.63685608 128.77133179]
[76.95173645 117.01408386]
[71.53656006 103.24564362]
[73.71303558 88.61154175]
[82.90065765 77.01491547]
[96.64894104 71.54877472]
[111.29101562 73.67102814]
[120.60589600 61.91378021]
[129.92077637 50.15652847]
[139.23565674 38.39927673]
[148.55053711 26.64202499]
[151.05570984 11.02041626]
[165.02388000 5.84937000]
[174.33876038 -5.90788126]
[183.65364075 -17.66513252]
[192.96852112 -29.42238426]
[199.94697571 -42.70022964]
[204.34797668 -57.04007721]
[208.74897766 -71.37992096]
[212.39706421 -85.92954254]
[215.28233337 -100.64943695]
[218.16760254 -115.36933136]
[221.05288696 -130.08921814]
[223.93815613 -144.80911255]
[226.71376038 -159.55007935]
[229.37956238 -174.31129456]
[232.04534912 -189.07250977]
[218.04014587 -194.58071899]
[205.37881470 -202.71562195]
[194.54800415 -213.16455078]
[185.96405029 -225.52584839]
[179.95687866 -239.32441711]
[176.75740051 -254.02983093]
[176.48858643 -269.07690430]
[179.16078186 -283.88720703]
[184.67124939 -297.89154053]
[192.80821228 -310.55154419]
[203.25888062 -321.38067627]
[215.62158203 -329.96261597]
[229.42111206 -335.96755981]
[244.12705994 -339.16464233]
[259.17416382 -339.43103027]
[273.98403931 -336.75643921]
[287.98745728 -331.24371338]
[300.64617920 -323.10470581]
[311.47360229 -312.65228271]
[320.05355835 -300.28817749]
[326.05624390 -286.48767090]
[329.25097656 -271.78121948]
[329.51492310 -256.73406982]
[326.83792114 -241.92462158]
[321.32290649 -227.92208862]
[313.18185425 -215.26470947]
[302.72769165 -204.43898010]
[290.36221313 -195.86102295]
[276.56072998 -189.86054993]
[261.85375977 -186.66821289]
[246.80657959 -186.40670776]
[244.14077759 -171.64549255]
[241.47497559 -156.88427734]
[243.37971497 -149.74328613]
[238.65805054 -141.92384338]
[235.77276611 -127.20394897]
[232.88749695 -112.48405457]
[230.00222778 -97.76416016]
[227.11695862 -83.04427338]
[239.51651001 -91.48531342]
[254.45298767 -90.10643005]
[265.09765625 -79.53803253]
[266.58389282 -64.61184692]
[258.23223877 -52.15192032]
[243.86093140 -47.85477066]
[230.04034424 -53.68499374]
[223.08882141 -66.97892761]
[218.68782043 -52.63908005]
[214.28681946 -38.29923248]
[224.57943726 -49.21080017]
[237.08477783 -57.49428940]
[251.14686584 -62.71516800]
[266.02804565 -64.59954834]
[280.94763184 -63.04859543]
[295.12301636 -58.14365768]
[307.81057739 -50.14204025]
[318.34475708 -39.46349335]
[326.17291260 -26.66819382]
[330.88446045 -12.42735577]
[332.23217773 2.51197600]
[330.14541626 17.36611366]
[324.73361206 31.35583687]
[316.28067017 43.74727249]
[305.23001099 53.89039612]
[292.16131592 61.25311279]
[277.76016235 65.44919586]
[262.78201294 66.25851440]
[248.01258850 63.63862991]
[234.22665405 57.72696686]
[222.14738464 48.83364105]
[212.40843201 37.42517853]
[205.52070618 24.10004425]
[201.84552002 9.55724716]
[201.57563782 -5.44032431]
[204.72578430 -20.10750008]
[195.41088867 -8.35024929]
[186.09600830 3.40700173]
[176.78112793 15.16425323]
[174.94221497 29.94490433]
[160.30780029 35.95690918]
[150.99290466 47.71416092]
[141.67802429 59.47141266]
[132.36314392 71.22866058]
[123.04826355 82.98591614]
[128.46343994 96.75435638]
[126.28696442 111.38845825]
[117.09934235 122.98508453]
[103.35105896 128.45121765]
[88.70898438 126.32897186]
[79.39410400 138.08622742]
[70.07922363 149.84347534]
[60.76433945 161.60072327]
[66.16228485 178.91026306]
[60.14190674 195.84645081]
[45.29163361 205.69125366]
[27.66187286 204.66012573]
[18.70117760 216.68949890]
[9.74048138 228.71888733]
[0.77978510 240.74826050]
[-8.18091106 252.77763367]
[-9.32819653 259.28878784]
[-13.03505993 263.59649658]
[-17.59183884 265.02645874]
[-26.90672302 276.78372192]
[-36.22160721 288.54095459]
[-45.53648758 300.29821777]
[-54.85137177 312.05545044]
[-57.35654449 327.67706299]
[-71.32470703 332.84811401]
[-80.63958740 344.60537720]
[-89.95447540 356.36260986]
[-79.34527588 366.99093628]
[-70.04170990 378.77908325]
[-62.16960907 391.56762695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 207]
[50 206]
[51 205]
[53 203]
[54 202]
[55 201]
[56 200]
[57 199]
[58 196]
[59 195]
[60 194]
[61 193]
[62 192]
[68 188]
[69 187]
[70 186]
[71 185]
[76 180]
[77 179]
[78 178]
[79 177]
[80 176]
[82 174]
[83 173]
[84 172]
[85 171]
[86 145]
[87 144]
[88 143]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 129]
[95 128]
[96 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
