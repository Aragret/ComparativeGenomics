%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[117.20326233 844.59802246]
[102.59316254 841.17785645]
[88.22940063 836.83795166]
[74.16980743 831.59576416]
[60.47100067 825.47241211]
[47.18814468 818.49255371]
[34.37472153 810.68432617]
[22.08232880 802.07910156]
[10.36046028 792.71160889]
[-0.74368000 782.61950684]
[-11.18538094 771.84344482]
[-20.92259789 760.42681885]
[-29.91612053 748.41564941]
[-38.12973785 735.85821533]
[-45.53037262 722.80511475]
[-52.08822632 709.30889893]
[-57.77689362 695.42395020]
[-62.57346725 681.20617676]
[-66.45863342 666.71282959]
[-69.41674042 652.00219727]
[-71.43589020 637.13360596]
[-72.50794983 622.16687012]
[-72.62859344 607.16223145]
[-71.79734039 592.18023682]
[-70.01753998 577.28106689]
[-67.29635620 562.52478027]
[-63.64474869 547.97082520]
[-59.07741547 533.67773438]
[-53.61275482 519.70312500]
[-47.27276993 506.10321045]
[-40.08298492 492.93283081]
[-32.07235336 480.24493408]
[-23.27313423 468.09066772]
[-13.72075653 456.51895142]
[-3.45368433 445.57638550]
[7.48673964 435.30703735]
[19.05646133 425.75222778]
[31.20889473 416.95046997]
[43.89510345 408.93719482]
[57.06400681 401.74465942]
[70.66257477 395.40185547]
[84.63605499 389.93426514]
[98.92817688 385.36395264]
[113.48139191 381.70932007]
[128.23710632 378.98504639]
[126.45463562 364.09133911]
[124.67217255 349.19760132]
[122.88970184 334.30389404]
[121.10723877 319.41018677]
[111.79486084 311.68966675]
[110.18797302 299.29605103]
[117.68888092 288.80325317]
[116.12835693 273.88464355]
[114.56783295 258.96603394]
[113.00730896 244.04742432]
[111.44678497 229.12882996]
[109.55349731 214.24879456]
[107.32837677 199.41474915]
[105.10325623 184.58070374]
[102.87814331 169.74665833]
[100.65302277 154.91261292]
[98.42790985 140.07856750]
[96.20278931 125.24452972]
[93.97767639 110.41048431]
[91.53194427 95.61121368]
[88.86614990 80.84999847]
[86.20035553 66.08877563]
[83.53456116 51.32756042]
[80.86876678 36.56634521]
[75.41277313 50.53889465]
[64.80276489 61.14208603]
[50.82670975 66.58909607]
[35.83982086 65.96201324]
[22.36765671 59.36650085]
[12.68050766 47.91402817]
[8.41083050 33.53453445]
[10.27814007 18.65121651]
[17.96776390 5.77217531]
[30.18386269 -2.93224406]
[44.86780930 -5.99519444]
[59.54510498 -2.90051460]
[71.74236298 5.83028746]
[79.40467072 18.72748756]
[79.62799835 3.72914934]
[79.85132599 -11.26918793]
[80.07465363 -26.26752472]
[80.29798126 -41.26586151]
[80.52130890 -56.26419830]
[70.47925568 -45.12161255]
[55.82998276 -41.89691162]
[42.03729630 -47.79282761]
[34.24553299 -60.61033249]
[35.36082458 -75.56880951]
[44.96719742 -87.08912659]
[59.48171234 -90.87447357]
[73.49081421 -85.51303101]
[81.76976776 -73.00334167]
[83.77378082 -87.86886597]
[85.77779388 -102.73439789]
[87.78180695 -117.59992218]
[74.05554962 -123.93090820]
[62.80631638 -134.02774048]
[55.03437424 -146.99263000]
[51.43080521 -161.67274475]
[52.31603241 -176.76272583]
[57.61134338 -190.92080688]
[66.84587860 -202.88804626]
[79.19851685 -211.60031128]
[93.57086945 -216.28294373]
[108.68495178 -216.51954651]
[123.19683075 -212.28909302]
[135.81611633 -203.96772766]
[145.42071533 -192.29541016]
[151.15660095 -178.31002808]
[152.51373291 -163.25514221]
[149.37142944 -148.46942139]
[142.00910950 -135.26760864]
[131.08143616 -124.82360840]
[117.56006622 -118.06608582]
[102.64733124 -115.59590912]
[100.64331818 -100.73038483]
[98.63930511 -85.86485291]
[96.63529205 -70.99932861]
[95.51964569 -56.04087067]
[95.29631805 -41.04253387]
[95.07299042 -26.04419708]
[94.84966278 -11.04586029]
[94.62633514 3.95247722]
[94.40300751 18.95081520]
[95.62998199 33.90054703]
[98.29577637 48.66176605]
[100.96157074 63.42298126]
[103.62736511 78.18419647]
[106.29316711 92.94541931]
[109.81336212 96.83413696]
[110.90419769 102.41835022]
[108.81171417 108.18536377]
[111.03683472 123.01940918]
[113.26195526 137.85345459]
[115.48706818 152.68750000]
[117.71218872 167.52154541]
[119.93730164 182.35559082]
[122.16242218 197.18962097]
[124.38753510 212.02366638]
[127.64056396 216.10594177]
[128.87861633 220.58036804]
[128.28971863 224.61376953]
[126.36538696 227.56829834]
[127.92591095 242.48690796]
[129.48643494 257.40551758]
[131.04696655 272.32412720]
[132.60748291 287.24270630]
[143.76660156 301.89044189]
[136.00096130 317.62771606]
[137.78341675 332.52142334]
[139.56588745 347.41516113]
[141.34835815 362.30886841]
[143.13081360 377.20257568]
[158.11267090 376.36788940]
[173.11729431 376.48507690]
[188.08427429 377.55368042]
[202.95335388 379.56942749]
[217.66464233 382.52413940]
[232.15892029 386.40597534]
[246.37780762 391.19927979]
[260.26406860 396.88473511]
[273.76174927 403.43948364]
[286.81652832 410.83712769]
[299.37585449 419.04785156]
[311.38912964 428.03860474]
[322.80798340 437.77319336]
[333.58645630 448.21240234]
[343.68112183 459.31423950]
[353.05133057 471.03393555]
[361.65936279 483.32434082]
[369.47055054 496.13598633]
[376.45346069 509.41723633]
[382.57995605 523.11462402]
[387.82537842 537.17303467]
[392.16857910 551.53576660]
[395.59210205 566.14508057]
[398.08215332 580.94213867]
[399.62869263 595.86730957]
[400.22549438 610.86047363]
[399.87017822 625.86138916]
[398.56414795 640.80950928]
[396.31268311 655.64471436]
[393.12484741 670.30725098]
[389.01345825 684.73809814]
[383.99508667 698.87915039]
[378.08993530 712.67340088]
[371.32177734 726.06536865]
[363.71789551 739.00109863]
[355.30886841 751.42852783]
[346.12857056 763.29760742]
[336.21398926 774.56048584]
[325.60501099 785.17193604]
[314.34436035 795.08911133]
[302.47741699 804.27215576]
[290.05194092 812.68402100]
[277.11795044 820.29089355]
[263.72753906 827.06213379]
[249.93463135 832.97045898]
[235.79476929 837.99206543]
[221.36486816 842.10675049]
[206.70306396 845.29797363]
[191.86837769 847.55285645]
[176.92053223 848.86236572]
[161.91973877 849.22113037]
[146.92639160 848.62774658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[52 152]
[53 151]
[54 150]
[55 149]
[56 148]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[97 123]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
