%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[8.11123371 662.45050049]
[2.34523773 676.32751465]
[-5.37989902 689.21704102]
[-14.89951515 700.84436035]
[-26.01070023 710.96166992]
[-38.47661591 719.35327148]
[-52.03155136 725.84027100]
[-66.38658905 730.28448486]
[-81.23574066 732.59112549]
[-96.26249695 732.71099854]
[-111.14656830 730.64166260]
[-125.57069397 726.42706299]
[-139.22741699 720.15722656]
[-151.82566833 711.96563721]
[-163.09689331 702.02691650]
[-172.80084229 690.55297852]
[-180.73068237 677.78839111]
[-186.71739197 664.00512695]
[-190.63336182 649.49713135]
[-192.39512634 634.57348633]
[-191.96513367 619.55242920]
[-189.35252380 604.75402832]
[-184.61302185 590.49377441]
[-177.84762573 577.07562256]
[-169.20056152 564.78552246]
[-158.85612488 553.88549805]
[-147.03480530 544.60791016]
[-133.98858643 537.15039062]
[-119.99553680 531.67205811]
[-105.35393524 528.28955078]
[-90.37586212 527.07501221]
[-75.38056946 528.05432129]
[-60.68768692 531.20666504]
[-55.44096756 517.15417480]
[-50.19425201 503.10171509]
[-50.79956055 495.73590088]
[-44.76338959 488.88006592]
[-39.30803299 474.90725708]
[-49.54833984 464.06283569]
[-54.08337021 449.78897095]
[-51.96257019 434.90060425]
[-43.55357361 422.35833740]
[-30.47975922 414.67962646]
[-15.30711460 413.43374634]
[-9.85175800 399.46093750]
[-4.39640045 385.48815918]
[1.05895650 371.51535034]
[6.41014242 357.50231934]
[11.65686035 343.44985962]
[16.90357780 329.39736938]
[22.15029716 315.34490967]
[27.08189011 301.17877197]
[31.69589996 286.90603638]
[36.30990982 272.63330078]
[40.92391968 258.36056519]
[45.53792572 244.08784485]
[50.15193558 229.81510925]
[54.76594543 215.54237366]
[44.68173981 204.57997131]
[41.41693115 189.94450378]
[45.94606781 175.54472351]
[57.14830780 165.27795410]
[72.08281708 161.97528076]
[76.69682312 147.70254517]
[81.31083679 133.42980957]
[85.92484283 119.15707397]
[90.53885651 104.88434601]
[93.96991730 90.28202057]
[96.19503021 75.44797516]
[98.42015076 60.61393356]
[100.64526367 45.77989197]
[102.87038422 30.94584656]
[91.42970276 40.64691544]
[76.48092651 41.88555145]
[63.59959030 34.19977570]
[57.59011078 20.45619202]
[60.69387054 5.78081560]
[71.75325012 -4.35279942]
[86.64337158 -6.16506577]
[99.81058502 1.01994753]
[106.34401703 14.52356529]
[110.31610870 0.05904108]
[114.28820801 -14.40548325]
[118.26029968 -28.87000656]
[112.57061005 -40.44541931]
[116.17675781 -52.41118240]
[126.62333679 -58.51000214]
[123.04567719 -73.92139435]
[134.02804565 -83.98303986]
[138.21505737 -98.38681793]
[141.97135925 -112.90888214]
[145.29362488 -127.53633881]
[148.50689697 -142.18812561]
[151.61100769 -156.86343384]
[154.71511841 -171.53872681]
[157.81922913 -186.21403503]
[143.92230225 -191.97511292]
[131.32070923 -200.19184875]
[120.44368744 -210.58439636]
[111.66167450 -222.79876709]
[105.27380371 -236.41896057]
[101.49762726 -250.98107910]
[100.46176147 -265.98913574]
[102.20149994 -280.93194580]
[106.65757751 -295.30059814]
[113.67823029 -308.60568237]
[123.02432251 -320.39401245]
[134.37754822 -330.26412964]
[147.35121155 -337.87982178]
[161.50343323 -342.98171997]
[176.35218811 -345.39605713]
[191.39173889 -345.04055786]
[206.10986328 -341.92739868]
[220.00523376 -336.16259766]
[232.60459900 -327.94244385]
[243.47882080 -317.54696655]
[252.25753784 -305.33023071]
[258.64175415 -291.70831299]
[262.41400146 -277.14517212]
[263.44580078 -262.13687134]
[261.70205688 -247.19450378]
[257.24209595 -232.82705688]
[250.21786499 -219.52386475]
[240.86859131 -207.73803711]
[229.51271057 -197.87100220]
[216.53698730 -190.25880432]
[202.38339233 -185.16072083]
[187.53398132 -182.75039673]
[172.49452209 -183.10992432]
[169.39041138 -168.43461609]
[166.28630066 -153.75932312]
[163.18218994 -139.08401489]
[164.87345886 -131.88948059]
[159.92108154 -124.21408081]
[156.59881592 -109.58662415]
[157.97691345 -107.14551544]
[158.47108459 -104.01144409]
[157.81254578 -100.51834106]
[155.85826111 -97.09120178]
[152.61883545 -94.19980621]
[148.43182373 -79.79602814]
[152.30897522 -65.41489410]
[141.02711487 -54.32299423]
[146.12289429 -37.53013992]
[132.72482300 -24.89791107]
[128.75273132 -10.43338680]
[124.78063202 4.03113747]
[120.80854034 18.49566078]
[117.70442963 33.17096329]
[115.47930908 48.00500870]
[113.25419617 62.83905029]
[111.02907562 77.67309570]
[108.80396271 92.50714111]
[119.00595093 81.51081085]
[133.11862183 76.42820740]
[147.98913574 78.39481354]
[160.29541016 86.97127533]
[167.28817749 100.24158478]
[167.40524292 115.24112701]
[160.62045288 128.61897278]
[148.44953918 137.38645935]
[133.61151123 139.58491516]
[119.42124939 134.72320557]
[109.04886627 123.88745117]
[104.81158447 109.49835205]
[100.19757843 123.77108765]
[95.58357239 138.04382324]
[90.96955872 152.31655884]
[86.35555267 166.58927917]
[96.53060913 178.00924683]
[99.60308075 192.89067078]
[94.84589386 207.21672058]
[83.63169098 217.17149353]
[69.03868103 220.15638733]
[64.42466736 234.42912292]
[59.81066132 248.70185852]
[55.19665146 262.97457886]
[50.58264160 277.24731445]
[45.96863174 291.52005005]
[41.35462570 305.79278564]
[42.44922256 310.89660645]
[41.56504822 315.45419312]
[39.24152756 318.80325317]
[36.20276642 320.59161377]
[30.95605087 334.64410400]
[25.70933151 348.69656372]
[20.46261406 362.74905396]
[20.39264488 371.88320923]
[15.03175449 376.97070312]
[9.57639694 390.94351196]
[4.12104034 404.91629028]
[-1.33431685 418.88909912]
[8.98035049 430.08593750]
[13.39274693 444.59170532]
[11.07894325 459.51373291]
[2.55079865 471.90048218]
[-10.45605946 479.32550049]
[-25.33523560 480.36260986]
[-30.79059410 494.33541870]
[-36.14178085 508.34844971]
[-41.38849640 522.40087891]
[-46.63521576 536.45336914]
[-33.47164917 543.70172119]
[-21.50378609 552.78948975]
[-10.98672009 563.52307129]
[-2.14462352 575.67358398]
[4.83403397 588.98211670]
[9.80050182 603.16491699]
[12.64891911 617.91973877]
[13.31857204 632.93200684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 202]
[34 201]
[35 200]
[37 199]
[38 198]
[44 192]
[45 191]
[46 190]
[47 189]
[48 187]
[49 186]
[50 185]
[51 184]
[52 180]
[53 179]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[81 148]
[82 147]
[83 146]
[84 145]
[87 143]
[89 141]
[90 140]
[91 135]
[92 134]
[93 132]
[94 131]
[95 130]
[96 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
