%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[-9.70187664 337.77801514]
[-3.65722966 351.53216553]
[0.45819628 365.98126221]
[2.56773281 380.85620117]
[2.63208055 395.87985229]
[0.65004086 410.77230835]
[-3.34146214 425.25613403]
[-9.26806927 439.06155396]
[-17.01937103 451.93130493]
[-26.45096588 463.62570190]
[-37.38714981 473.92684937]
[-49.62418747 482.64285278]
[-62.93410873 489.61132812]
[-77.06896210 494.70248413]
[-91.76541901 497.82144165]
[-106.74969482 498.91009521]
[-121.74264526 497.94821167]
[-136.46495056 494.95367432]
[-150.64236450 489.98223877]
[-164.01074219 483.12658691]
[-176.32106018 474.51440430]
[-187.34397888 464.30612183]
[-196.87414551 452.69192505]
[-204.73402405 439.88815308]
[-210.77717590 426.13339233]
[-214.89103699 411.68380737]
[-216.99896240 396.80865479]
[-217.06169128 381.78500366]
[-215.07803345 366.89276123]
[-211.08496094 352.40936279]
[-205.15686035 338.60461426]
[-197.40417480 325.73565674]
[-187.97131348 314.04229736]
[-177.03401184 303.74234009]
[-164.79603577 295.02764893]
[-151.48535156 288.06060791]
[-137.34994507 282.97100830]
[-122.65315247 279.85363770]
[-107.66876221 278.76660156]
[-92.67591858 279.73010254]
[-77.95393372 282.72625732]
[-63.77706146 287.69918823]
[-50.40942001 294.55630493]
[-41.81085587 282.26547241]
[-33.21229172 269.97463989]
[-24.61372948 257.68377686]
[-23.35520172 250.40107727]
[-15.79452229 245.27526855]
[-29.90352631 250.36799622]
[-44.77545929 248.41209412]
[-57.08789444 239.84448242]
[-64.09020233 226.57919312]
[-64.21804810 211.57974243]
[-57.44286728 198.19702148]
[-45.27825928 189.42079163]
[-30.44182777 187.21166992]
[-16.24806404 192.06317139]
[-5.86789656 202.89147949]
[-1.62027884 217.27749634]
[-4.45414877 232.00740051]
[6.19185972 221.44035339]
[16.83786774 210.87330627]
[27.48387718 200.30624390]
[36.79875946 188.54899597]
[44.65051651 175.76815796]
[52.50226974 162.98731995]
[60.35402679 150.20646667]
[68.20578003 137.42562866]
[76.05754089 124.64479065]
[66.87103271 109.11475372]
[66.82044220 91.07115936]
[75.91971588 75.48986053]
[91.65956879 66.66767120]
[109.69944000 67.03747559]
[116.97267151 53.91878510]
[124.24590302 40.80009079]
[131.51913452 27.68139458]
[138.79235840 14.56270123]
[146.06558228 1.44400704]
[153.33882141 -11.67468739]
[158.27041626 -25.84082222]
[160.71614075 -40.64009476]
[161.72039795 -55.60643768]
[161.27378845 -70.59978485]
[160.82717896 -85.59313965]
[152.68243408 -99.15682220]
[160.03736877 -112.10881805]
[159.59075928 -127.10217285]
[159.14414978 -142.09552002]
[158.69754028 -157.08886719]
[143.88255310 -159.77394104]
[129.94970703 -165.48092651]
[117.50810242 -173.96031189]
[107.10162354 -184.84144592]
[99.18520355 -197.64862061]
[94.10491180 -211.82199097]
[92.08283234 -226.74194336]
[93.20736694 -241.75624084]
[97.42935181 -256.20852661]
[104.56423187 -269.46701050]
[114.30008698 -280.95205688]
[126.21130371 -290.16165161]
[139.77719116 -296.69314575]
[154.40469360 -300.26101685]
[169.45437622 -300.70932007]
[184.26831055 -298.01840210]
[198.19891357 -292.30593872]
[210.63717651 -283.82165527]
[221.03938293 -272.93643188]
[228.95075989 -260.12612915]
[234.02548218 -245.95077515]
[236.04168701 -231.03002930]
[234.91123962 -216.01617432]
[230.68356323 -201.56556702]
[223.54347229 -188.30989075]
[213.80311584 -176.82864380]
[201.88825989 -167.62374878]
[188.31980896 -161.09759521]
[173.69090271 -157.53547668]
[174.13749695 -142.54212952]
[174.58410645 -127.54877472]
[175.03071594 -112.55542755]
[183.14352417 -100.06416321]
[175.82054138 -86.03974152]
[176.26713562 -71.04639435]
[176.71374512 -56.05304337]
[184.18208313 -69.06165314]
[196.24758911 -77.97363281]
[210.87702942 -81.28716278]
[225.60508728 -78.44384003]
[237.94981384 -69.92282867]
[245.83091736 -57.16005707]
[247.92028809 -42.30628586]
[243.86582947 -27.86462975]
[234.35078430 -16.26876831]
[220.97862244 -9.47280216]
[206.00276184 -8.62197304]
[191.94692993 -13.85966015]
[181.17974854 -24.30322266]
[175.51541138 -38.19436646]
[173.06968689 -23.39509392]
[181.85235596 -35.55505753]
[193.35040283 -45.18805695]
[206.86073303 -51.70503616]
[221.55717468 -54.70747757]
[236.54103088 -54.01177979]
[250.89604187 -49.66048813]
[263.74438477 -41.91968155]
[274.30038452 -31.26271439]
[281.91851807 -18.34126663]
[286.13296509 -3.94548869]
[286.68600464 11.04431343]
[283.54379272 25.71150589]
[276.89849854 39.15918732]
[267.15649414 50.56502151]
[254.91348267 59.23154068]
[240.91813660 64.62878418]
[226.02627563 66.42670441]
[211.14854431 64.51536560]
[197.19471741 59.01164246]
[185.01809692 50.25209045]
[175.36326599 38.77235413]
[168.82063293 25.27443314]
[165.79028320 10.58372402]
[166.45750427 -4.40145731]
[159.18428040 8.71723652]
[151.91105652 21.83592987]
[144.63781738 34.95462418]
[137.36459351 48.07331848]
[130.09136963 61.19201279]
[122.81813812 74.31070709]
[130.13310242 83.48930359]
[133.93208313 94.59440613]
[133.77180481 106.33023834]
[129.67097473 117.32745361]
[122.10806274 126.30286407]
[111.96554565 132.20919800]
[100.42686462 134.35731506]
[88.83837891 132.49653625]
[80.98662567 145.27738953]
[73.13487244 158.05822754]
[65.28311157 170.83906555]
[57.43135834 183.61991882]
[49.57960129 196.40075684]
[62.63522720 189.01490784]
[77.41802979 186.47154236]
[92.19134521 189.06945801]
[105.21961975 196.50344849]
[114.97229767 207.90016174]
[120.30365753 221.92074585]
[120.58736420 236.91806030]
[115.79009247 251.13024902]
[106.47541809 262.88766479]
[93.73762512 270.80905151]
[79.07313538 273.96383667]
[64.20471191 271.98141479]
[50.87909317 265.09460449]
[40.66175079 254.11254883]
[34.75301361 240.32534790]
[33.84702682 225.35273743]
[38.05092621 210.95225525]
[27.40491676 221.51930237]
[16.75890732 232.08634949]
[6.11289883 242.65339661]
[-3.63306689 254.05586243]
[-12.32289124 266.28234863]
[-20.92145538 278.57318115]
[-29.52001953 290.86401367]
[-38.11858368 303.15487671]
[-27.09456062 313.36196899]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 209]
[44 208]
[45 207]
[46 206]
[48 205]
[60 204]
[61 203]
[62 202]
[63 201]
[64 184]
[65 183]
[66 182]
[67 181]
[68 180]
[69 179]
[74 171]
[75 170]
[76 169]
[77 168]
[78 167]
[79 166]
[80 165]
[81 141]
[82 140]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[89 120]
[90 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
