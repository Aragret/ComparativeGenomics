%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[67.90357208 539.49066162]
[62.07724762 553.40124512]
[52.97388840 565.42535400]
[41.16573334 574.80718994]
[27.39505768 580.95690918]
[12.52749538 583.48803711]
[-2.50236344 582.24133301]
[-16.74973106 577.29528809]
[-29.31900597 568.96081543]
[-39.42007065 557.76171875]
[-46.41796875 544.40209961]
[-49.87279892 529.72161865]
[-49.56739426 514.64324951]
[-45.52095413 500.11477661]
[-37.98783112 487.04943848]
[-27.44157600 476.26855469]
[-14.54512596 468.44985962]
[-0.10916687 464.08477783]
[14.95884514 463.44772339]
[18.06295586 448.77243042]
[21.16706657 434.09710693]
[24.27117538 419.42181396]
[27.37528610 404.74652100]
[30.47939682 390.07122803]
[33.58350754 375.39590454]
[36.68761444 360.72061157]
[39.79172516 346.04531860]
[38.10046005 338.85076904]
[43.05284119 331.17538452]
[46.37510300 316.54791260]
[33.32506943 305.31692505]
[27.73203850 288.93914795]
[31.22220230 271.89736938]
[42.92243576 258.90447998]
[59.67649078 253.60025024]
[62.56176376 238.88035583]
[65.44703674 224.16046143]
[68.33231354 209.44056702]
[71.21758270 194.72068787]
[69.41938782 187.55212402]
[74.25694275 179.80384827]
[72.56568146 172.60929871]
[77.51805878 164.93389893]
[80.84032440 150.30644226]
[84.16258240 135.67898560]
[87.48484039 121.05152130]
[90.80709839 106.42406464]
[78.16172791 114.49217987]
[63.27291489 112.66919708]
[52.94762802 101.78855133]
[51.90644836 86.82472992]
[60.62538910 74.61898804]
[75.11827087 70.75163269]
[88.75914001 76.99076080]
[95.31176758 90.48577118]
[88.57836914 76.43945312]
[93.67494202 62.10489273]
[107.10745239 55.77218628]
[111.93345642 41.56973267]
[109.04751587 26.01396370]
[120.46820831 16.45274162]
[125.29421234 2.25028682]
[130.12020874 -11.95216846]
[134.94619751 -26.15462494]
[139.77220154 -40.35707855]
[144.59820557 -54.55953598]
[149.42419434 -68.76199341]
[154.25019836 -82.96444702]
[144.57037354 -90.76068115]
[137.76249695 -101.13014984]
[134.47058105 -113.06458282]
[134.99763489 -125.40902710]
[139.27787781 -136.97358704]
[146.88442993 -146.64819336]
[157.07192993 -153.50906372]
[168.84950256 -156.90695190]
[181.07714844 -156.52859497]
[186.53250122 -170.50138855]
[191.98785400 -184.47419739]
[189.79939270 -200.14331055]
[201.63563538 -209.18502808]
[207.09098816 -223.15783691]
[212.54635620 -237.13063049]
[218.00170898 -251.10342407]
[204.57327271 -257.81106567]
[191.81045532 -265.71206665]
[179.81898499 -274.74090576]
[168.69824219 -284.82278442]
[158.54039001 -295.87417603]
[149.42958069 -307.80349731]
[141.44132996 -320.51187134]
[134.64183044 -333.89401245]
[129.08740234 -347.83905029]
[124.82409668 -362.23138428]
[121.88722992 -376.95178223]
[120.30114746 -391.87826538]
[120.07898712 -406.88711548]
[121.22258759 -421.85400391]
[123.72247314 -436.65487671]
[127.55792999 -451.16708374]
[132.69717407 -465.27038574]
[139.09762573 -478.84793091]
[146.70623779 -491.78717041]
[155.45997620 -503.98092651]
[165.28628540 -515.32812500]
[176.10374451 -525.73474121]
[187.82272339 -535.11456299]
[200.34609985 -543.38983154]
[213.57011414 -550.49200439]
[227.38517761 -556.36218262]
[241.67681885 -560.95178223]
[256.32659912 -564.22271729]
[271.21313477 -566.14794922]
[286.21304321 -566.71148682]
[301.20208740 -565.90863037]
[316.05596924 -563.74603271]
[330.65170288 -560.24169922]
[344.86825562 -555.42462158]
[358.58789062 -549.33465576]
[371.69686890 -542.02233887]
[384.08657837 -533.54827881]
[395.65435791 -523.98260498]
[406.30435181 -513.40466309]
[415.94830322 -501.90209961]
[424.50631714 -489.57022095]
[431.90744019 -476.51116943]
[438.09039307 -462.83322144]
[443.00390625 -448.64968872]
[446.60723877 -434.07809448]
[448.87060547 -419.23919678]
[449.77517700 -404.25598145]
[449.31350708 -389.25259399]
[447.48941040 -374.35333252]
[444.31796265 -359.68167114]
[439.82550049 -345.35922241]
[434.04922485 -331.50460815]
[427.03701782 -318.23269653]
[418.84695435 -305.65341187]
[409.54690552 -293.87103271]
[399.21398926 -282.98315430]
[387.93374634 -273.08004761]
[375.79971313 -264.24374390]
[362.91241455 -256.54745483]
[349.37863159 -250.05497742]
[335.31054688 -244.82009888]
[320.82470703 -240.88621521]
[306.04113770 -238.28590393]
[291.08236694 -237.04072571]
[276.07235718 -237.16099548]
[261.13543701 -238.64570618]
[246.39546204 -241.48257446]
[231.97450256 -245.64807129]
[226.51914978 -231.67527771]
[221.06378174 -217.70246887]
[215.60842896 -203.72967529]
[218.18708801 -189.05998230]
[205.96064758 -179.01882935]
[200.50529480 -165.04603577]
[195.04994202 -151.07324219]
[207.58123779 -138.57994080]
[213.40097046 -121.81316376]
[211.29220581 -104.13743591]
[201.63398743 -89.12122345]
[186.33415222 -79.81649017]
[168.45265198 -78.13845062]
[163.62664795 -63.93599319]
[158.80065918 -49.73353958]
[153.97465515 -35.53108215]
[149.14866638 -21.32862663]
[144.32266235 -7.12617111]
[139.49665833 7.07628441]
[134.67066956 21.27873993]
[137.90179443 35.81865311]
[126.13591003 46.39572906]
[121.30991364 60.59818649]
[128.10334778 73.80367279]
[123.41141510 88.27572632]
[109.51422882 95.31176758]
[105.43456268 109.74632263]
[102.11229706 124.37378693]
[98.79003906 139.00125122]
[95.46778107 153.62870789]
[92.14552307 168.25616455]
[88.93225098 182.90795898]
[85.93747711 197.60595703]
[83.05220032 212.32585144]
[80.16693115 227.04574585]
[77.28165436 241.76562500]
[74.39638519 256.48553467]
[84.89197540 264.01028442]
[91.73721313 274.90606689]
[93.94509888 287.53540039]
[91.22245789 300.01605225]
[84.00826263 310.50143433]
[73.40336609 317.45388794]
[61.00256348 319.87017822]
[57.68030167 334.49761963]
[54.46702957 349.14941406]
[51.36291885 363.82470703]
[48.25880814 378.50003052]
[45.15469742 393.17532349]
[42.05058670 407.85061646]
[38.94647980 422.52593994]
[35.84236908 437.20123291]
[32.73825836 451.87652588]
[29.63414764 466.55184937]
[43.15364838 473.23568726]
[54.58566666 483.07235718]
[63.21157455 495.44345093]
[68.48914337 509.57138062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[29 197]
[30 196]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[41 184]
[43 183]
[44 182]
[45 181]
[46 180]
[47 179]
[55 178]
[58 175]
[59 174]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 166]
[68 165]
[77 159]
[78 158]
[79 157]
[81 155]
[82 154]
[83 153]
[84 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
