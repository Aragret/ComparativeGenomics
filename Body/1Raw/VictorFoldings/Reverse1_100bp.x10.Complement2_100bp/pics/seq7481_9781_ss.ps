%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[152.24638367 452.69903564]
[156.05557251 438.15817261]
[162.09268188 424.39227295]
[170.20901489 411.74032593]
[180.20471191 400.51391602]
[191.83363342 390.98950195]
[204.80938721 383.40158081]
[199.35403442 369.42880249]
[193.89868164 355.45599365]
[188.44331360 341.48318481]
[182.67727661 327.63571167]
[176.60345459 313.92044067]
[164.37528992 305.41625977]
[165.86189270 289.66503906]
[159.78805542 275.94976807]
[153.71423340 262.23449707]
[147.64039612 248.51924133]
[135.41223145 240.01506042]
[136.89884949 224.26383972]
[130.82501221 210.54858398]
[124.75117493 196.83331299]
[118.67733765 183.11804199]
[114.22000885 197.44049072]
[102.26473236 206.49981689]
[87.27053833 206.91712952]
[74.82988739 198.53677368]
[69.58283997 184.48443604]
[73.48640442 170.00126648]
[85.08465576 160.48913574]
[100.05173492 159.49584961]
[112.80604553 167.39274597]
[108.40504456 153.05288696]
[104.00404358 138.71304321]
[99.60305023 124.37319946]
[95.20204926 110.03334808]
[87.23568726 122.74307251]
[72.64694214 126.23139954]
[59.79290390 118.50006104]
[56.03694916 103.97791290]
[63.53066254 90.98390198]
[77.98130798 86.96159363]
[91.11029053 94.21440125]
[88.00617981 79.53910065]
[84.90207672 64.86380005]
[81.19709015 79.39903259]
[74.58960724 92.86533356]
[65.36058044 104.69010162]
[53.90243912 114.37053680]
[40.70238113 121.49503326]
[26.32168007 125.76065063]
[11.37181377 126.98600769]
[-3.51154280 125.11901093]
[-17.69554138 120.23902893]
[-30.57707405 112.55358124]
[-41.60840607 102.38944244]
[-50.32048416 90.17880249]
[-56.34286499 76.44086456]
[-59.41947556 61.75977707]
[-59.41949081 46.75977707]
[-56.34291840 32.07867432]
[-50.32057190 18.34072304]
[-41.60852051 6.13006401]
[-30.57721329 -4.03409958]
[-17.69569969 -11.71958160]
[-3.51171255 -16.59959221]
[11.37163925 -18.46662903]
[26.32150841 -17.24130630]
[40.70221710 -12.97572613]
[53.90229416 -5.85126114]
[65.36046600 3.82915163]
[74.58951569 15.65389633]
[81.19702911 29.12017822]
[84.90207672 43.65557861]
[88.00617981 28.98027611]
[91.11029053 14.30497360]
[94.21440125 -0.37032875]
[88.10198212 -17.74041176]
[100.33190155 -30.32595634]
[103.21717834 -45.04584885]
[106.10244751 -59.76573944]
[108.98772430 -74.48563385]
[104.04939270 -89.51638031]
[114.09031677 -100.51770782]
[116.97558594 -115.23759460]
[119.86086273 -129.95748901]
[118.44058228 -138.98081970]
[122.90022278 -144.87432861]
[126.00433350 -159.54963684]
[124.51231384 -163.62734985]
[124.40616608 -167.57112122]
[125.47360229 -170.96168518]
[127.38798523 -173.49185181]
[129.75479126 -174.99398804]
[133.72688293 -189.45851135]
[137.69897461 -203.92303467]
[141.67106628 -218.38755798]
[145.64317322 -232.85208130]
[132.05152893 -239.28936768]
[119.78430939 -247.98915100]
[109.21429443 -258.68710327]
[100.66269684 -271.05807495]
[94.38938904 -284.72616577]
[90.58499908 -299.27600098]
[89.36515808 -314.26544189]
[90.76692200 -329.23895264]
[94.74769592 -343.74151611]
[101.18651581 -357.33242798]
[109.88770294 -369.59866333]
[120.58683777 -380.16748047]
[132.95878601 -388.71768188]
[146.62759399 -394.98944092]
[161.17785645 -398.79217529]
[176.16743469 -400.01031494]
[191.14079285 -398.60684204]
[205.64291382 -394.62442017]
[219.23309326 -388.18405151]
[231.49833679 -379.48147583]
[242.06591797 -368.78115845]
[250.61471558 -356.40823364]
[256.88491821 -342.73870850]
[260.68600464 -328.18801880]
[261.90246582 -313.19830322]
[260.49728394 -298.22509766]
[256.51321411 -283.72344971]
[250.07133484 -270.13400269]
[241.36735535 -257.86972046]
[230.66583252 -247.30335999]
[218.29193115 -238.75596619]
[204.62170410 -232.48730469]
[190.07057190 -228.68788147]
[175.08073425 -227.47312927]
[160.10769653 -228.87998962]
[156.13560486 -214.41546631]
[152.16349792 -199.95094299]
[148.19140625 -185.48641968]
[144.21931458 -171.02189636]
[140.67964172 -156.44552612]
[137.57553101 -141.77021790]
[134.58074951 -127.07221222]
[131.69548035 -112.35232544]
[128.81021118 -97.63243103]
[133.95491028 -83.65454865]
[123.70761108 -71.60035706]
[120.82234192 -56.88046646]
[117.93706512 -42.16057587]
[115.05179596 -27.44068527]
[121.53783417 -17.23000908]
[119.25453186 -4.94301224]
[108.88970947 2.73378134]
[105.78559875 17.40908432]
[102.68148804 32.08438492]
[99.57737732 46.75968933]
[99.57737732 61.75968933]
[102.68148804 76.43498993]
[105.78559875 91.11029053]
[109.54189301 105.63235474]
[113.94289398 119.97219849]
[118.34389496 134.31204224]
[122.74488831 148.65190125]
[127.14588928 162.99174500]
[132.39260864 177.04421997]
[138.46644592 190.75947571]
[144.54026794 204.47474670]
[150.61410522 218.19001770]
[163.27671814 227.67521667]
[161.35566711 242.44540405]
[167.42948914 256.16067505]
[173.50332642 269.87594604]
[179.57716370 283.59121704]
[192.23977661 293.07641602]
[190.31871033 307.84661865]
[196.39254761 321.56188965]
[200.61045837 324.63699341]
[202.98916626 328.62384033]
[203.48937988 332.66918945]
[202.41612244 336.02783203]
[207.87147522 350.00064087]
[213.32682800 363.97341919]
[218.78218079 377.94622803]
[233.46664429 374.73483276]
[248.47270203 373.86026001]
[263.43081665 375.34402466]
[277.97259521 379.14962769]
[291.73999023 385.18331909]
[304.39395142 393.29650879]
[315.62283325 403.28945923]
[325.15014648 414.91601562]
[332.74124146 427.88989258]
[338.20922852 441.89157104]
[341.41940308 456.57632446]
[342.29275513 471.58242798]
[340.80773926 486.54040527]
[337.00094604 501.08190918]
[330.96612549 514.84881592]
[322.85186768 527.50207520]
[312.85803223 538.73016357]
[301.23068237 548.25646973]
[288.25616455 555.84655762]
[274.25402832 561.31335449]
[259.56903076 564.52233887]
[244.56283569 565.39440918]
[229.60498047 563.90820312]
[215.06379700 560.10021973]
[201.29740906 554.06420898]
[188.64479065 545.94891357]
[177.41755676 535.95416260]
[167.89216614 524.32604980]
[160.30319214 511.35089111]
[154.83753967 497.34829712]
[151.62977600 482.66302490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 179]
[8 178]
[9 177]
[10 176]
[11 172]
[12 171]
[14 169]
[15 168]
[16 167]
[17 166]
[19 164]
[20 163]
[21 162]
[22 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[42 155]
[43 154]
[44 153]
[73 152]
[74 151]
[75 150]
[76 149]
[78 146]
[79 145]
[80 144]
[81 143]
[83 141]
[84 140]
[85 139]
[87 138]
[88 137]
[93 136]
[94 135]
[95 134]
[96 133]
[97 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
