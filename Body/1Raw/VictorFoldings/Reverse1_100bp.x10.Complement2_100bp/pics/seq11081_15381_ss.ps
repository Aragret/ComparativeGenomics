%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[167.11949158 787.54998779]
[153.71638489 780.79437256]
[140.94364929 772.91156006]
[128.89585876 763.95989990]
[117.66218567 754.00567627]
[107.32582855 743.12261963]
[97.96329498 731.39129639]
[89.64391327 718.89849854]
[82.42928314 705.73681641]
[76.37280273 692.00360107]
[71.51933289 677.80059814]
[67.90479279 663.23297119]
[65.55595398 648.40850830]
[64.49020386 633.43701172]
[64.71542358 618.42932129]
[66.22996521 603.49658203]
[69.02259064 588.74926758]
[73.07264709 574.29663086]
[78.35013580 560.24566650]
[84.81598663 546.70043945]
[92.42232513 533.76110840]
[101.11283875 521.52362061]
[110.82318115 510.07852173]
[121.48146820 499.51052856]
[133.00877380 489.89791870]
[145.31977844 481.31182861]
[158.32330322 473.81582642]
[171.92308044 467.46545410]
[186.01844788 462.30770874]
[200.50500488 458.38076782]
[197.83920288 443.61953735]
[195.17341614 428.85833740]
[192.50761414 414.09710693]
[189.84182739 399.33590698]
[187.17602539 384.57467651]
[184.51023865 369.81344604]
[181.84443665 355.05224609]
[177.76477051 340.61767578]
[172.30941772 326.64489746]
[158.60752869 320.91830444]
[152.87597656 306.82559204]
[158.97544861 292.49264526]
[153.61456299 287.40512085]
[153.54458618 278.27096558]
[148.29786682 264.21850586]
[143.05116272 250.16603088]
[137.80444336 236.11355591]
[126.10413361 226.89660645]
[128.52563477 211.26181030]
[123.27891541 197.20935059]
[118.03219604 183.15687561]
[112.78548431 169.10440063]
[104.27890015 181.45907593]
[89.32734680 182.66368103]
[78.95255280 171.83023071]
[80.80242920 156.94474792]
[93.51331329 148.98023987]
[107.71403503 153.80670166]
[103.52702332 139.40292358]
[99.34001160 124.99913788]
[95.15299988 110.59535980]
[90.86589050 124.96966553]
[80.83072662 136.11845398]
[66.98515320 141.88908386]
[52.00253296 141.16731262]
[38.77576447 134.09252930]
[29.85873985 122.03073883]
[26.97319221 107.31090546]
[30.67627525 92.77518463]
[40.25298691 81.23020172]
[53.85420609 74.90510559]
[68.85375977 75.02118683]
[82.35546112 81.55601501]
[91.75290680 93.24897766]
[90.19238281 78.33037567]
[88.63185883 63.41176987]
[87.07133484 48.49316406]
[85.51081848 33.57455826]
[81.94282532 28.00850296]
[81.75031281 22.32871628]
[84.13272858 18.18950081]
[83.01708221 3.23104739]
[74.27480316 -9.95542812]
[81.04405975 -23.22292137]
[71.79778290 -32.21564484]
[71.17650604 -44.69754410]
[78.96855164 -53.95014191]
[78.07573700 -68.92354584]
[67.58181000 -84.05493927]
[76.04241180 -99.42976379]
[74.92675781 -114.38821411]
[66.18447876 -127.57469177]
[72.95373535 -140.84217834]
[71.83808899 -155.80062866]
[57.18519974 -159.61790466]
[44.56708527 -167.98820496]
[35.35247040 -180.00358582]
[30.54088020 -194.36073303]
[30.65424538 -209.50225830]
[35.68026733 -223.78573608]
[45.07376099 -235.66180420]
[57.81578827 -243.84223938]
[72.52419281 -247.43966675]
[87.60351562 -246.06390381]
[101.41806030 -239.86413574]
[112.46933746 -229.51290894]
[119.55857849 -216.13302612]
[121.91680145 -201.17582703]
[119.28820038 -186.26377869]
[111.95790863 -173.01441956]
[100.72106171 -162.86494446]
[86.79654694 -156.91629028]
[87.91219330 -141.95782471]
[96.57467651 -129.84127808]
[89.88521576 -115.50386047]
[91.00086212 -100.54541016]
[99.95921326 -92.41678619]
[101.01109314 -79.96378326]
[93.04914093 -69.81636047]
[93.94195557 -54.84295654]
[104.38079834 -40.73630905]
[96.00251770 -24.33857155]
[104.66499329 -12.22202396]
[97.97554016 2.11539865]
[99.09118652 17.07385254]
[100.42942047 32.01403809]
[101.98994446 46.93264008]
[103.55046844 61.85124588]
[105.11098480 76.76985168]
[106.67150879 91.68845367]
[109.55678558 106.40834808]
[113.74379730 120.81212616]
[117.93080902 135.21591187]
[122.11782074 149.61968994]
[126.83795166 163.85768127]
[132.08467102 177.91015625]
[137.33139038 191.96263123]
[142.57810974 206.01509094]
[154.65368652 216.23716736]
[151.85690308 230.86683655]
[157.10362244 244.91931152]
[162.35034180 258.97177124]
[167.59706116 273.02426147]
[172.94824219 287.03726196]
[187.14575195 293.44577026]
[192.47921753 307.69387817]
[186.28221130 321.18954468]
[191.73756409 335.16232300]
[194.40403748 320.40124512]
[202.77636719 307.95520020]
[215.44369507 299.92156982]
[230.27134705 297.65420532]
[244.76058960 301.53515625]
[256.46972656 310.91043091]
[263.42559814 324.20013428]
[264.45599365 339.16470337]
[259.38726807 353.28234863]
[249.07359314 364.17401123]
[235.25302124 370.00424194]
[220.25454712 369.79055786]
[206.60566711 363.56893921]
[196.60565186 352.38644409]
[199.27145386 367.14767456]
[201.93724060 381.90887451]
[204.60304260 396.67010498]
[207.26882935 411.43130493]
[209.93463135 426.19253540]
[212.60043335 440.95373535]
[215.26622009 455.71496582]
[230.21125793 454.32672119]
[245.22032166 454.22839355]
[260.18228149 455.42065430]
[274.98632812 457.89474487]
[289.52291870 461.63229370]
[303.68438721 466.60568237]
[317.36587524 472.77804565]
[330.46612549 480.10366821]
[342.88812256 488.52838135]
[354.53988647 497.98974609]
[365.33517456 508.41775513]
[375.19406128 519.73516846]
[384.04351807 531.85821533]
[391.81808472 544.69714355]
[398.46014404 558.15686035]
[403.92056274 572.13775635]
[408.15887451 586.53631592]
[411.14370728 601.24591064]
[412.85299683 616.15765381]
[413.27404785 631.16107178]
[412.40377808 646.14520264]
[410.24859619 660.99908447]
[406.82446289 675.61267090]
[402.15676880 689.87780762]
[396.28002930 703.68884277]
[389.23776245 716.94360352]
[381.08212280 729.54382324]
[371.87350464 741.39636230]
[361.68002319 752.41339111]
[350.57723999 762.51336670]
[338.64727783 771.62145996]
[325.97848511 779.67028809]
[312.66470337 786.60028076]
[298.80444336 792.36004639]
[284.50036621 796.90698242]
[269.85836792 800.20739746]
[254.98683167 802.23693848]
[239.99588013 802.98052979]
[224.99650574 802.43267822]
[210.09976196 800.59735107]
[195.41592407 797.48828125]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 169]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
[37 162]
[38 148]
[39 147]
[42 144]
[44 143]
[45 142]
[46 141]
[47 140]
[49 138]
[50 137]
[51 136]
[52 135]
[58 134]
[59 133]
[60 132]
[61 131]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[81 125]
[82 124]
[84 122]
[87 120]
[88 119]
[90 116]
[91 115]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
