%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[181.84727478 493.36160278]
[180.06480408 478.46789551]
[170.86993408 466.75024414]
[176.91252136 452.12841797]
[175.13005066 437.23468018]
[173.34759521 422.34097290]
[171.56512451 407.44726562]
[169.78265381 392.55352783]
[159.68434143 403.64517212]
[144.70788574 404.48526001]
[133.43247986 394.59255981]
[132.31718445 379.63409424]
[142.00090027 368.17871094]
[156.93635559 366.78860474]
[168.56736755 376.25921631]
[168.12077332 361.26586914]
[167.67416382 346.27252197]
[167.22755432 331.27917480]
[165.22354126 316.41363525]
[152.40956116 308.90780640]
[148.61219788 294.17572021]
[156.57188416 280.78613281]
[153.03221130 266.20974731]
[149.49253845 251.63337708]
[145.95286560 237.05700684]
[142.08856201 222.56330872]
[137.90155029 208.15953064]
[133.71453857 193.75575256]
[128.46781921 179.70327759]
[122.19046783 166.07995605]
[115.91310883 152.45663452]
[101.78318787 154.78819275]
[87.53157043 153.38037109]
[74.13093567 148.32926941]
[62.49590683 139.97961426]
[53.42058563 128.90129089]
[47.52437973 115.85041046]
[45.20971298 101.71772003]
[46.63456345 87.46778870]
[51.70168304 74.07320404]
[60.06523514 62.44815826]
[71.15439606 53.38608551]
[65.08055878 39.67081833]
[59.00672531 25.95555115]
[52.93289185 12.24028397]
[46.85905838 -1.47498286]
[40.78522491 -15.19024944]
[34.71139145 -28.90551567]
[22.98228455 -34.27122879]
[18.20573044 -45.81974792]
[22.43836403 -57.15162277]
[16.56940269 -70.95580292]
[10.70044231 -84.75997925]
[4.83148193 -98.56415558]
[-1.40613472 -105.23722839]
[-1.02040184 -112.61781311]
[-6.68318844 -126.50784302]
[-11.66303253 -130.85671997]
[-13.43331909 -136.25700378]
[-12.30099010 -140.89671326]
[-17.54770851 -154.94917297]
[-22.79442596 -169.00164795]
[-28.72785187 -175.94659424]
[-28.01294327 -183.30259705]
[-33.04986191 -197.43162537]
[-38.08677673 -211.56065369]
[-43.12369156 -225.68968201]
[-47.90438461 -230.25657654]
[-49.43176651 -235.73052979]
[-48.09339523 -240.31504822]
[-52.70740509 -254.58778381]
[-57.32141113 -268.86050415]
[-61.93542099 -283.13323975]
[-64.16306305 -268.29959106]
[-69.96260834 -254.46609497]
[-78.97940063 -242.47871399]
[-90.66207886 -233.07046509]
[-104.29622650 -226.81666565]
[-119.04812622 -224.09974670]
[-134.01567078 -225.08584595]
[-148.28361511 -229.71466064]
[-160.97944641 -237.70314026]
[-171.32682800 -248.56278992]
[-178.69300842 -261.62951660]
[-182.62753296 -276.10430908]
[-182.88980103 -291.10202026]
[-179.46379089 -305.70550537]
[-172.55900574 -319.02182007]
[-162.59767151 -330.23660278]
[-150.18890381 -338.66412354]
[-136.09153748 -343.78897095]
[-121.16762543 -345.29782104]
[-106.32975006 -343.09835815]
[-92.48527527 -337.32510376]
[-80.48078156 -328.33111572]
[-71.05035400 -316.66632080]
[-64.77066040 -303.04406738]
[-64.32405853 -318.03741455]
[-63.87744904 -333.03076172]
[-63.43084335 -348.02410889]
[-77.00281525 -355.00726318]
[-86.19401550 -367.19268799]
[-89.17951202 -382.16098022]
[-85.36654663 -396.94015503]
[-75.51218414 -408.59579468]
[-61.57300568 -414.81369019]
[-46.31665421 -414.35925293]
[-32.77228928 -407.32269287]
[-23.62914848 -395.10116577]
[-20.70261574 -380.12124634]
[-24.57375145 -365.35720825]
[-34.47394180 -353.74044800]
[-48.43749619 -347.57751465]
[-48.88410187 -332.58413696]
[-49.33070755 -317.59078979]
[-49.77731323 -302.59744263]
[-47.66268921 -287.74725342]
[-43.04867935 -273.47451782]
[-38.43466949 -259.20178223]
[-33.82065964 -244.92904663]
[-28.99466324 -230.72659302]
[-23.95774651 -216.59756470]
[-18.92083168 -202.46853638]
[-13.88391495 -188.33950806]
[-8.74195480 -174.24836731]
[-3.49523664 -160.19589233]
[1.75148153 -146.14343262]
[7.20683861 -132.17062378]
[12.86962509 -118.28060150]
[18.63565826 -104.43311310]
[24.50461960 -90.62893677]
[30.37358093 -76.82476044]
[36.24254227 -63.02058411]
[50.81219101 -53.23834229]
[48.42665482 -34.97935104]
[54.50049210 -21.26408386]
[60.57432556 -7.54881668]
[66.64815521 6.16645002]
[72.72199249 19.88171577]
[78.79582977 33.59698486]
[84.86965942 47.31224823]
[100.30564117 45.18364334]
[115.71691895 47.48424530]
[129.85826111 54.02815628]
[141.58703613 64.28662872]
[149.95553589 77.43077850]
[154.28759766 92.39852905]
[154.23318481 107.98048401]
[149.79667664 122.91761780]
[141.33656311 136.00297546]
[129.53642273 146.17927551]
[135.81378174 159.80259705]
[142.09114075 173.42591858]
[145.05975342 158.72259521]
[154.90795898 147.40832520]
[169.06147766 142.44061279]
[183.82058716 145.11801147]
[195.32731628 154.74066162]
[200.57382202 168.79321289]
[198.18867493 183.60237122]
[188.79536438 195.29704285]
[174.84927368 200.82029724]
[159.99586487 198.72834778]
[148.11833191 189.56874084]
[152.30534363 203.97251892]
[156.49235535 218.37629700]
[160.26161194 221.98736572]
[162.08634949 226.25627136]
[162.04159546 230.33218384]
[160.52925110 233.51733398]
[164.06892395 248.09370422]
[167.60859680 262.67007446]
[171.14826965 277.24645996]
[184.36231995 285.49429321]
[187.74440002 300.32723999]
[179.79991150 312.87396240]
[184.15505981 298.52014160]
[193.61212158 286.87695312]
[206.76823425 279.67160034]
[221.67175293 277.97299194]
[236.11181641 282.03308105]
[247.94635010 291.24960327]
[255.41975403 304.25527954]
[257.42340088 319.12088013]
[253.66006470 333.64111328]
[244.68800354 345.66201782]
[231.83818054 353.40036011]
[217.01678467 355.70819092]
[202.42248535 352.24319458]
[190.22024536 343.51934814]
[182.22090149 330.83258057]
[182.66751099 345.82592773]
[183.11412048 360.81927490]
[183.56072998 375.81262207]
[184.67637634 390.77105713]
[186.45883179 405.66479492]
[188.24130249 420.55850220]
[190.02377319 435.45220947]
[191.80624390 450.34594727]
[201.12860107 463.12890625]
[194.95852661 476.68542480]
[196.74098206 491.57913208]
[210.66310120 498.22583008]
[218.76220703 511.35626221]
[218.45391846 526.78051758]
[209.83662415 539.57684326]
[195.66004944 545.66192627]
[180.44789124 543.09405518]
[169.05430603 532.69262695]
[165.11492920 517.77673340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[15 194]
[16 193]
[17 192]
[18 191]
[19 176]
[22 173]
[23 172]
[24 171]
[25 170]
[26 166]
[27 165]
[28 164]
[29 153]
[30 152]
[31 151]
[42 141]
[43 140]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[51 133]
[52 132]
[53 131]
[54 130]
[56 129]
[57 128]
[60 127]
[61 126]
[62 125]
[64 124]
[65 123]
[66 122]
[67 121]
[70 120]
[71 119]
[72 118]
[73 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
