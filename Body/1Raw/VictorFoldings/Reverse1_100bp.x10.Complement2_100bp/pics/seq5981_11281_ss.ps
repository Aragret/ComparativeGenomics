%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[97.08514404 790.15106201]
[82.30633545 787.54541016]
[67.75715637 783.86798096]
[53.51522446 779.13830566]
[39.65653610 773.38165283]
[26.25503349 766.62872314]
[13.38221455 758.91552734]
[1.10676622 750.28326416]
[-10.50581741 740.77801514]
[-21.39357758 730.45043945]
[-31.49842262 719.35559082]
[-40.76643753 707.55279541]
[-49.14817429 695.10498047]
[-56.59891129 682.07849121]
[-63.07889175 668.54290771]
[-68.55355072 654.57037354]
[-72.99366760 640.23553467]
[-76.37556458 625.61486816]
[-78.68118286 610.78625488]
[-79.89823151 595.82897949]
[-80.02021790 580.82269287]
[-79.04648590 565.84759521]
[-76.98223114 550.98352051]
[-73.83846283 536.30975342]
[-69.63196564 521.90460205]
[-64.38517761 507.84497070]
[-58.12609482 494.20581055]
[-50.88810730 481.05996704]
[-42.70983887 468.47747803]
[-33.63492203 456.52557373]
[-23.71177483 445.26797485]
[-12.99334431 434.76473999]
[-1.53681850 425.07196045]
[10.59667683 416.24127197]
[23.34240532 408.31985474]
[36.63235855 401.34997559]
[50.39562988 395.36877441]
[64.55879211 390.40817261]
[79.04626465 386.49468994]
[93.78076172 383.64913940]
[108.68365479 381.88674927]
[108.01387024 366.90173340]
[107.34408569 351.91668701]
[106.67430115 336.93164062]
[106.00451660 321.94659424]
[94.11006165 331.08563232]
[79.51289368 327.63275146]
[72.97348785 314.13323975]
[79.31246185 300.53848267]
[93.85695648 296.87002563]
[105.88453674 305.83062744]
[106.33114624 290.83728027]
[106.77774811 275.84393311]
[107.22435760 260.85058594]
[107.67095947 245.85723877]
[108.11756897 230.86387634]
[108.56417847 215.87052917]
[109.01078033 200.87718201]
[107.89513397 185.91873169]
[105.22933960 171.15751648]
[95.35331726 160.00791931]
[100.51488495 145.05235291]
[97.84909058 130.29113770]
[95.18329620 115.52992249]
[84.02105713 103.00871277]
[89.86505890 87.28536224]
[86.97978973 72.56546783]
[84.09451294 57.84557724]
[81.20924377 43.12568665]
[77.15890503 37.90014267]
[76.46042633 32.26018143]
[78.46406555 27.92492294]
[76.01834106 13.12565231]
[73.46250916 -1.65500093]
[70.79671478 -16.41621780]
[68.13092041 -31.17743492]
[54.31505585 -37.99126053]
[47.24319839 -51.47614670]
[49.44174957 -66.36340332]
[59.86023712 -76.97439575]
[57.19443893 -91.73561096]
[54.52864456 -106.49682617]
[51.86285019 -121.25804901]
[41.73118210 -129.24003601]
[39.81472778 -141.58956909]
[46.60189819 -151.60260010]
[44.15616989 -166.40187073]
[41.71044540 -181.20114136]
[26.68590546 -182.51037598]
[12.45925617 -187.51570129]
[-0.07520544 -195.90248108]
[-10.12955284 -207.14350891]
[-17.07176208 -220.53218079]
[-20.46543694 -235.22686768]
[-20.09725189 -250.30384827]
[-15.99034977 -264.81536865]
[-8.40289307 -277.84921265]
[2.18816257 -288.58609009]
[15.11705589 -296.35104370]
[29.57106590 -300.65597534]
[44.64159775 -301.23028564]
[59.38131332 -298.03784180]
[72.86365509 -291.27932739]
[84.24111176 -281.37960815]
[92.79848480 -268.96099854]
[97.99785614 -254.80412292]
[99.51239014 -239.79888916]
[97.24687958 -224.88853455]
[91.34372711 -211.01037598]
[82.17402649 -199.03675842]
[70.31417847 -189.72038269]
[56.50971603 -183.64686584]
[58.95544052 -168.84759521]
[61.40116882 -154.04832458]
[73.25095367 -141.10423279]
[66.62406921 -123.92384338]
[69.28986359 -109.16262817]
[71.95565796 -94.40140533]
[74.62145233 -79.64019012]
[88.09334564 -73.34367371]
[95.36029816 -60.16583252]
[93.45191956 -45.05916214]
[82.89213562 -33.84323120]
[85.55792999 -19.08201408]
[88.22372437 -4.32079649]
[92.50592041 1.70287478]
[90.81761169 10.67992496]
[93.26333618 25.47919655]
[95.92913818 40.24041367]
[98.81440735 54.96030426]
[101.69967651 69.68019867]
[104.58495331 84.40008545]
[113.84149170 91.46817017]
[115.99656677 102.91355133]
[109.94451141 112.86412811]
[112.61030579 127.62534332]
[115.27610779 142.38656616]
[125.34279633 154.59197998]
[119.99055481 168.49171448]
[122.65634918 183.25292969]
[127.85811615 169.18376160]
[137.99143982 158.12411499]
[151.55308533 151.71461487]
[166.53128052 150.90609741]
[180.70410156 155.81848145]
[191.96907043 165.72303772]
[198.65510559 179.15049744]
[199.77040100 194.10897827]
[195.14945984 208.37948608]
[185.47781372 219.84504700]
[172.19018555 226.80484009]
[157.25769043 228.22640991]
[142.89550781 223.89886475]
[131.23416138 214.46420288]
[124.00412750 201.32379150]
[123.55752563 216.31713867]
[123.11091614 231.31048584]
[122.66431427 246.30383301]
[122.21770477 261.29718018]
[121.77110291 276.29052734]
[121.32449341 291.28387451]
[120.87789154 306.27725220]
[120.98955536 321.27682495]
[121.65933990 336.26187134]
[122.32912445 351.24688721]
[122.99890900 366.23193359]
[123.66869354 381.21697998]
[138.66940308 381.64276123]
[153.59899902 383.16241455]
[168.37785339 385.76779175]
[182.92709351 389.44500732]
[197.16909790 394.17446899]
[211.02787781 399.93090820]
[224.42950439 406.68362427]
[237.30244446 414.39657593]
[249.57803345 423.02862549]
[261.19076538 432.53372192]
[272.07870483 442.86111450]
[282.18371582 453.95574951]
[291.45193481 465.75839233]
[299.83389282 478.20611572]
[307.28482056 491.23245239]
[313.76504517 504.76794434]
[319.23992920 518.74035645]
[323.68026733 533.07513428]
[327.06240845 547.69580078]
[329.36828613 562.52429199]
[330.58557129 577.48162842]
[330.70779419 592.48785400]
[329.73431396 607.46301270]
[327.67028809 622.32708740]
[324.52679443 637.00091553]
[320.32052612 651.40612793]
[315.07397461 665.46588135]
[308.81509399 679.10510254]
[301.57733154 692.25109863]
[293.39926147 704.83367920]
[284.32455444 716.78576660]
[274.40158081 728.04351807]
[263.68331909 738.54693604]
[252.22695923 748.23992920]
[240.09361267 757.07073975]
[227.34800720 764.99237061]
[214.05818176 771.96252441]
[200.29499817 777.94390869]
[186.13192749 782.90472412]
[171.64451599 786.81848145]
[156.91006470 789.66424561]
[142.00720215 791.42687988]
[127.01541901 792.09698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 140]
[60 139]
[62 137]
[63 136]
[64 135]
[66 132]
[67 131]
[68 130]
[69 129]
[72 128]
[73 127]
[74 125]
[75 124]
[76 123]
[80 119]
[81 118]
[82 117]
[83 116]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
