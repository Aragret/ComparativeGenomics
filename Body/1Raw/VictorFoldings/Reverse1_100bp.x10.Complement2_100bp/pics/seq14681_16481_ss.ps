%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUAAUCCCCCAAUCAAAACGCAUAACCCCAGUAACCACAAGAACAUCAACUUUAUGUUGCUACCAAAAAGUAUAGUAACCAGCACCAACAUCAGGCACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[216.76982117 478.00991821]
[229.48207092 469.92623901]
[224.44515991 455.79721069]
[219.40823364 441.66818237]
[214.37132263 427.53915405]
[209.33441162 413.41012573]
[204.08769226 399.35763550]
[198.63233948 385.38482666]
[193.17697144 371.41204834]
[187.72161865 357.43923950]
[182.26626587 343.46646118]
[169.09284973 341.29769897]
[158.62736511 332.83496094]
[153.67065430 320.20562744]
[155.61697388 306.66937256]
[164.06381226 295.77706909]
[158.81709290 281.72460938]
[147.94584656 276.41964722]
[143.45970154 264.75524902]
[148.27270508 252.78872681]
[143.23579407 238.65968323]
[131.67399597 229.26956177]
[134.32801819 213.67256165]
[129.18606567 199.58142090]
[123.93933868 185.52894592]
[118.69261932 171.47647095]
[113.44590759 157.42399597]
[99.83079529 151.49403381]
[94.30969238 137.31758118]
[100.62189484 123.07700348]
[95.37517548 109.02453613]
[89.82956696 103.17485809]
[90.15666199 94.72359467]
[78.23460388 84.32286835]
[81.24889374 69.73645782]
[76.21197510 55.60742569]
[64.91444397 49.38420486]
[61.01005936 37.51240540]
[66.07379150 26.52672768]
[61.24779510 12.32427311]
[46.26576996 9.24431038]
[34.91191483 -0.85453743]
[30.16889000 -15.18527699]
[33.21543503 -29.86773300]
[43.13531113 -40.97906494]
[38.30931091 -55.18152237]
[26.54342842 -65.75859833]
[29.77455330 -80.29850769]
[24.94855499 -94.50096893]
[20.12255859 -108.70342255]
[5.99635696 -120.51578522]
[10.08357620 -137.58216858]
[5.04665995 -151.71119690]
[0.00974373 -165.84024048]
[-6.16602468 -179.50990295]
[-13.43925381 -192.62860107]
[-20.71248436 -205.74728394]
[-27.98571396 -218.86598206]
[-35.25894165 -231.98468018]
[-42.53217316 -245.10337830]
[-44.97976303 -230.30441284]
[-54.96050644 -219.10687256]
[-69.38175964 -214.98045349]
[-83.77494812 -219.20375061]
[-93.68017578 -230.46813965]
[-96.02820587 -245.28323364]
[-90.09146881 -259.05838013]
[-77.70954132 -267.52526855]
[-62.71908188 -268.06027222]
[-49.76488113 -260.49746704]
[-55.22023773 -274.47024536]
[-60.67559433 -288.44305420]
[-66.13095093 -302.41583252]
[-80.80154419 -299.14871216]
[-95.79893494 -298.15942383]
[-110.77156830 -299.47119141]
[-125.36846161 -303.05325317]
[-139.24743652 -308.82165527]
[-152.08316040 -316.64117432]
[-163.57473755 -326.32846069]
[-173.45280457 -337.65649414]
[-181.48577881 -350.35971069]
[-187.48538208 -364.14031982]
[-191.31095886 -378.67529297]
[-192.87283325 -393.62390137]
[-192.13439941 -408.63574219]
[-189.11296082 -423.35891724]
[-183.87934875 -437.44824219]
[-176.55625916 -450.57351685]
[-167.31532288 -462.42703247]
[-156.37318420 -472.73092651]
[-143.98634338 -481.24365234]
[-130.44515991 -487.76565552]
[-116.06705475 -492.14407349]
[-101.18907928 -494.27627563]
[-86.15998840 -494.11227417]
[-71.33209229 -491.65588379]
[-57.05297089 -486.96469116]
[-43.65735245 -480.14871216]
[-31.45924377 -471.36767578]
[-20.74459267 -460.82742310]
[-11.76456070 -448.77505493]
[-4.72965574 -435.49310303]
[0.19521503 -421.29287720]
[2.89460540 -406.50729370]
[3.30523753 -391.48291016]
[1.41748607 -376.57196045]
[-2.72439766 -362.12393188]
[-9.02332211 -348.47753906]
[-17.33163071 -335.95266724]
[-27.45456505 -324.84292603]
[-39.15483093 -315.40872192]
[-52.15815353 -307.87121582]
[-46.70279694 -293.89840698]
[-41.24744034 -279.92559814]
[-35.79208374 -265.95281982]
[-29.41347885 -252.37660217]
[-22.14024925 -239.25790405]
[-14.86701870 -226.13922119]
[-7.59378958 -213.02052307]
[-0.32056016 -199.90182495]
[6.95266914 -186.78312683]
[8.34304810 -201.71855164]
[16.43745422 -214.34712219]
[29.42757416 -221.84756470]
[44.41138458 -222.54428101]
[58.04146576 -216.28161621]
[67.27281952 -204.45867920]
[70.04313660 -189.71672058]
[65.73352051 -175.34913635]
[55.30675888 -164.56570435]
[41.09220886 -159.77543640]
[26.26543808 -162.04852295]
[14.13877296 -170.87715149]
[19.17568970 -156.74812317]
[24.21260643 -142.61909485]
[35.00366592 -137.15287781]
[39.31563950 -125.42296600]
[34.32501221 -113.52941895]
[39.15101242 -99.32696533]
[43.97700882 -85.12451172]
[55.39770508 -75.56328583]
[52.51176834 -60.00751877]
[57.33776474 -45.80506134]
[71.97360229 -43.03776550]
[83.33477783 -33.25105667]
[88.30472565 -18.99742699]
[85.45415497 -4.07191133]
[75.45024872 7.49827528]
[80.27625275 21.70073128]
[94.07797241 32.53952026]
[90.34100342 50.57051086]
[95.37792206 64.69953918]
[106.93970490 74.08966064]
[104.28569031 89.68667603]
[109.42765045 103.77781677]
[114.67436981 117.83028412]
[128.77488708 124.44944000]
[133.89561462 138.77539062]
[127.49837494 152.17727661]
[132.74508667 166.22975159]
[137.99180603 180.28222656]
[143.23852539 194.33470154]
[149.17195129 201.27964783]
[148.45704651 208.63563538]
[160.37910461 219.03636169]
[157.36482239 233.62277222]
[162.40173340 247.75180054]
[176.70223999 259.35253906]
[172.86956787 276.47787476]
[178.11628723 290.53036499]
[194.47351074 294.83581543]
[204.93750000 307.91275024]
[205.53906250 324.48379517]
[196.23905945 338.01107788]
[201.69441223 351.98388672]
[207.14978027 365.95669556]
[212.60513306 379.92947388]
[218.06048584 393.90228271]
[222.97503662 398.32482910]
[224.66471863 403.75085449]
[223.46343994 408.37319946]
[228.50035095 422.50222778]
[233.53726196 436.63125610]
[238.57418823 450.76028442]
[243.61109924 464.88931274]
[258.57025146 463.10833740]
[273.55056763 464.70123291]
[287.80068970 469.58813477]
[300.60583496 477.52389526]
[311.32366943 488.11047363]
[319.41659546 500.81686401]
[324.47869873 515.00567627]
[326.25607300 529.96527100]
[324.65954590 544.94519043]
[319.76919556 559.19415283]
[311.83032227 571.99731445]
[301.24114990 582.71258545]
[288.53280640 590.80249023]
[274.34274292 595.86114502]
[259.38275146 597.63488770]
[244.40318298 596.03472900]
[230.15542603 591.14093018]
[217.35415649 583.19891357]
[206.64144897 572.60717773]
[198.55465698 559.89685059]
[193.49943542 545.70556641]
[191.72932434 530.74517822]
[193.33311462 515.76599121]
[198.23037720 501.51943970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[16 171]
[17 170]
[20 168]
[21 167]
[23 165]
[24 163]
[25 162]
[26 161]
[27 160]
[30 157]
[31 156]
[33 155]
[35 153]
[36 152]
[39 150]
[40 149]
[45 144]
[46 143]
[48 141]
[49 140]
[50 139]
[52 136]
[53 135]
[54 134]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[70 116]
[71 115]
[72 114]
[73 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
