%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[231.36050415 426.35708618]
[238.01055908 412.89328003]
[246.15206909 400.27529907]
[255.67887878 388.66763306]
[266.46676636 378.22161865]
[257.32797241 366.32699585]
[248.18917847 354.43237305]
[239.05036926 342.53771973]
[229.91157532 330.64309692]
[220.77276611 318.74847412]
[211.63395691 306.85382080]
[202.14506531 295.23657227]
[195.38710022 292.24462891]
[192.25399780 283.66433716]
[182.59318542 272.18963623]
[172.93237305 260.71493530]
[163.27156067 249.24023438]
[166.45594788 263.89831543]
[165.01742554 278.82919312]
[159.09312439 292.60971069]
[149.24769592 303.92642212]
[136.41957092 311.70065308]
[121.83141327 315.19146729]
[106.87368774 314.06610107]
[92.97206116 308.43182373]
[81.45156097 298.82568359]
[73.41024017 286.16323853]
[69.61454773 271.65142822]
[70.42626190 256.67343140]
[75.76802063 242.65679932]
[85.13067627 230.93754578]
[97.62184143 222.63269043]
[112.05094147 218.53376770]
[127.04267883 219.03147888]
[141.16815186 224.07838440]
[153.08177185 233.19425964]
[146.80441284 219.57093811]
[140.52705383 205.94763184]
[134.24969482 192.32431030]
[127.97232819 178.70098877]
[121.69496918 165.07768250]
[115.41761017 151.45436096]
[109.14025116 137.83103943]
[102.86288452 124.20773315]
[96.58552551 110.58441162]
[90.38861084 124.24451447]
[76.39669800 129.65063477]
[62.62497330 123.70591736]
[56.96252060 109.81575012]
[62.65304565 95.93706512]
[76.43675232 90.02019501]
[90.41703033 95.45394135]
[85.38011169 81.32491302]
[80.34319305 67.19588470]
[66.34278870 60.36753082]
[61.43591309 45.96693420]
[68.03198242 32.66176605]
[62.99506760 18.53273773]
[51.07300949 8.13201046]
[54.08729935 -6.45439863]
[49.05038452 -20.58342743]
[44.01346970 -34.71245956]
[38.66228104 -48.72547913]
[32.99949646 -62.61550903]
[31.93062210 -47.65364075]
[27.48550415 -33.32740784]
[19.89732552 -20.38833618]
[9.56414700 -9.51518440]
[-2.97197366 -1.27833652]
[-17.05341721 3.89011979]
[-31.94149971 5.71905756]
[-46.85522079 4.11253452]
[-61.01223755 -0.84517509]
[-73.66989899 -8.89399910]
[-84.16421509 -19.61171150]
[-91.94467163 -32.43608475]
[-96.60311127 -46.69437790]
[-97.89517975 -61.63862610]
[-95.75308990 -76.48488617]
[-90.28920746 -90.45435333]
[-81.79016113 -102.81421661]
[-70.70179749 -112.91609955]
[-57.60577774 -120.23008728]
[-43.18910599 -124.37248993]
[-28.20804214 -125.12601471]
[-13.44847012 -122.45112610]
[0.31535557 -116.48815155]
[12.36141205 -107.54988861]
[22.05778694 -96.10522461]
[28.89640999 -82.75296783]
[28.67308235 -97.75130463]
[28.44975471 -112.74964905]
[28.22642708 -127.74798584]
[28.00309944 -142.74632263]
[27.77977180 -157.74465942]
[27.55644417 -172.74299622]
[27.33311653 -187.74133301]
[27.10978889 -202.73966980]
[13.09026718 -208.68717957]
[2.70661664 -219.82717896]
[-2.24213314 -234.22961426]
[-0.89858121 -249.39913940]
[6.50449419 -262.70758057]
[18.68446541 -271.84915161]
[33.53107834 -275.23999023]
[48.47206879 -272.29269409]
[60.91881943 -263.51782227]
[68.71485138 -250.43569946]
[70.50946045 -235.31289673]
[65.99172211 -220.76951599]
[55.94435120 -209.32528687]
[42.10812759 -202.96299744]
[42.33145523 -187.96466064]
[42.55478287 -172.96632385]
[42.77811050 -157.96798706]
[43.00143814 -142.96965027]
[43.22476578 -127.97131348]
[43.44809341 -112.97297668]
[43.67142105 -97.97463226]
[43.89474869 -82.97629547]
[46.88952255 -68.27829742]
[52.55231094 -54.38826752]
[55.64296722 -52.69116211]
[58.06517410 -49.41275024]
[59.08465195 -44.88351822]
[58.14249802 -39.74937439]
[63.17941284 -25.62034416]
[68.21633148 -11.49131489]
[79.77811432 -2.10119033]
[77.12409973 13.49582100]
[82.16101074 27.62485123]
[95.68632507 33.75686264]
[100.99575043 48.01395416]
[94.47222137 62.15896606]
[99.50914001 76.28799438]
[104.54605865 90.41703033]
[110.20883942 104.30705261]
[116.48620605 117.93036652]
[122.76356506 131.55368042]
[129.04092407 145.17700195]
[135.31828308 158.80032349]
[141.59564209 172.42362976]
[147.87300110 186.04695129]
[154.15037537 199.67027283]
[160.42773438 213.29357910]
[166.70509338 226.91690063]
[174.74626160 239.57942200]
[184.40707397 251.05412292]
[194.06788635 262.52883911]
[203.72869873 274.00350952]
[213.47465515 285.40597534]
[217.62678528 286.67633057]
[220.83593750 288.97109985]
[222.89585876 291.86801147]
[223.75862122 294.92123413]
[223.52859497 297.71502686]
[232.66740417 309.60964966]
[241.80619812 321.50430298]
[250.94500732 333.39892578]
[260.08380127 345.29354858]
[269.22259521 357.18820190]
[278.36141968 369.08282471]
[291.23400879 361.35015869]
[304.90414429 355.13528442]
[319.19366455 350.51925659]
[333.91622925 347.56219482]
[348.87988281 346.30270386]
[363.88958740 346.75720215]
[378.74963379 348.91973877]
[393.26632690 352.76211548]
[407.25036621 358.23428345]
[420.51943970 365.26483154]
[432.90060425 373.76217651]
[444.23242188 383.61550903]
[454.36712646 394.69635010]
[463.17263794 406.86026001]
[470.53414917 419.94866943]
[476.35568237 433.79089355]
[480.56130981 448.20651245]
[483.09625244 463.00759888]
[483.92745972 478.00115967]
[483.04406738 492.99172974]
[480.45758057 507.78390503]
[476.20175171 522.18481445]
[470.33206177 536.00665283]
[462.92501831 549.06933594]
[454.07720947 561.20251465]
[443.90396118 572.24798584]
[432.53790283 582.06182861]
[420.12722778 590.51599121]
[406.83374023 597.50030518]
[392.83071899 602.92370605]
[378.30075073 606.71551514]
[363.43325806 608.82629395]
[348.42205811 609.22851562]
[333.46286011 607.91693115]
[318.75070190 604.90863037]
[304.47735596 600.24285889]
[290.82894897 593.98040771]
[277.98333740 586.20294189]
[266.10809326 577.01190186]
[255.35794067 566.52703857]
[245.87309265 554.88507080]
[237.77717590 542.23779297]
[231.17575073 528.75006104]
[226.15486145 514.59771729]
[222.77998352 499.96527100]
[221.09510803 485.04351807]
[221.12220764 470.02694702]
[222.86091614 455.11135864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[12 151]
[14 150]
[15 149]
[16 148]
[17 147]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[52 136]
[53 135]
[54 134]
[57 131]
[58 130]
[60 128]
[61 127]
[62 126]
[63 122]
[64 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
