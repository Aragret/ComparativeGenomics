%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[119.93834686 605.80499268]
[118.82269287 590.84649658]
[117.70704651 575.88806152]
[116.59140015 560.92962646]
[107.63304901 552.80096436]
[106.58116150 540.34796143]
[114.54312134 530.20056152]
[113.65029907 515.22717285]
[112.75748444 500.25375366]
[111.75322723 485.28741455]
[110.63758087 470.32894897]
[109.52192688 455.37048340]
[97.72142029 452.14462280]
[87.45912170 445.44073486]
[79.73295593 435.89279175]
[75.29969025 424.41220093]
[74.60087585 412.10076904]
[77.71886444 400.14498901]
[84.36746979 389.70162964]
[93.91813660 381.78594971]
[105.45935059 377.17288208]
[105.01274872 362.17953491]
[104.56613922 347.18618774]
[93.58280945 337.19110107]
[92.91629791 321.99206543]
[103.47454834 310.53952026]
[103.02794647 295.54617310]
[102.58133698 280.55279541]
[102.13472748 265.55944824]
[101.46494293 250.57441711]
[100.57212830 235.60101318]
[99.67931366 220.62760925]
[98.78649902 205.65420532]
[84.94774628 200.09054565]
[74.85546112 189.02458191]
[70.55097198 174.61512756]
[72.93936920 159.70487976]
[81.59982300 147.25965881]
[94.85854340 139.77850342]
[93.96572876 124.80509186]
[93.07291412 109.83168793]
[91.95726013 94.87322998]
[90.61902618 79.93304443]
[89.28079224 64.99285889]
[85.84973145 50.39053726]
[80.39437866 36.41773987]
[74.93901825 22.44494247]
[69.48365784 8.47214508]
[63.82087326 -5.41788197]
[57.95191574 -19.22205925]
[52.08295441 -33.02623749]
[46.21399307 -46.83041382]
[40.34503174 -60.63459015]
[35.67495346 -46.38010406]
[23.58612633 -37.49977493]
[8.58738136 -37.30574799]
[-3.72711968 -45.87038803]
[-8.76437187 -59.99929810]
[-4.64560509 -74.42274475]
[7.09298277 -83.76113129]
[22.07318878 -84.53148651]
[34.70851135 -76.44557190]
[30.52149963 -90.84934998]
[26.22737503 -105.22156525]
[21.82637787 -119.56140900]
[17.42537880 -133.90126038]
[5.97963047 -144.82395935]
[9.64223099 -159.26123047]
[-4.03930855 -166.70791626]
[-8.29826927 -181.31326294]
[-1.11467087 -194.31062317]
[-5.51566887 -208.65046692]
[-18.06223106 -213.54928589]
[-25.38959122 -224.61816406]
[-25.00954819 -237.69248962]
[-17.28481102 -248.00547791]
[-21.47182274 -262.40927124]
[-25.65883446 -276.81304932]
[-29.84584427 -291.21682739]
[-44.80645752 -289.66125488]
[-59.80439377 -290.80221558]
[-74.35752106 -294.60302734]
[-87.99802399 -300.94152832]
[-100.28742218 -309.61392212]
[-110.83065033 -320.34146118]
[-119.28878784 -332.77929688]
[-125.38995361 -346.52758789]
[-128.93800354 -361.14437866]
[-129.81890869 -376.15985107]
[-128.00431824 -391.09124756]
[-123.55258179 -405.45864868]
[-116.60680389 -418.80017090]
[-107.39025879 -430.68692017]
[-96.19922638 -440.73681641]
[-83.39344025 -448.62680054]
[-69.38456726 -454.10321045]
[-54.62292862 -456.99005127]
[-39.58304977 -457.19448853]
[-24.74839973 -454.70993042]
[-10.59585190 -449.61630249]
[2.41964769 -442.07730103]
[13.87970448 -432.33529663]
[23.41592598 -420.70343018]
[30.72175980 -407.55563354]
[35.56235504 -393.31454468]
[37.78210831 -378.43795776]
[37.30966187 -363.40411377]
[34.16020203 -348.69628906]
[28.43497276 -334.78723145]
[20.31801605 -322.12411499]
[10.07025814 -311.11395264]
[-1.97887838 -302.11074829]
[-15.44206333 -295.40383911]
[-11.25505161 -281.00006104]
[-7.06804085 -266.59628296]
[-2.88102937 -252.19248962]
[12.19037247 -244.72981262]
[17.30184937 -228.35337830]
[8.82417774 -213.05146790]
[13.22517586 -198.71162415]
[26.46318817 -191.98178101]
[31.13070297 -177.50183105]
[23.98207855 -163.66221619]
[35.11303711 -153.76519775]
[31.76522636 -138.30226135]
[36.16622543 -123.96240997]
[40.56722260 -109.62255859]
[45.53487396 -104.15042877]
[44.92528152 -95.03636169]
[49.11229324 -80.63258362]
[54.14920807 -66.50354767]
[60.01816940 -52.69937515]
[65.88713074 -38.89519501]
[71.75608826 -25.09102058]
[77.62505341 -11.28684330]
[81.64049530 -8.70126057]
[84.07432556 -3.56574774]
[83.45645905 3.01678777]
[88.91181946 16.98958588]
[94.36717224 30.96238327]
[99.82253265 44.93518066]
[101.41671753 30.02013588]
[107.28114319 16.21403313]
[116.90848541 4.71124029]
[129.46588135 -3.49313760]
[143.86698914 -7.68933916]
[158.86596680 -7.51435089]
[173.16525269 -2.98331141]
[185.52783203 5.51179934]
[194.88418579 17.23606873]
[200.42492676 31.17523193]
[201.67070007 46.12340927]
[198.51376343 60.78743744]
[191.22718811 73.89872742]
[180.44136047 84.32302094]
[167.08935547 91.15852356]
[152.32626343 93.81388092]
[137.42922974 92.05937958]
[123.68698883 86.04681396]
[112.28839874 76.29631805]
[104.22097778 63.65462494]
[105.55921173 78.59481049]
[106.89744568 93.53499603]
[110.05667114 97.72226715]
[110.64495850 103.38153076]
[108.04631805 108.93886566]
[108.93913269 123.91227722]
[109.83194733 138.88568115]
[123.88571930 144.73828125]
[133.96368408 156.06619263]
[138.10696411 170.58699036]
[135.54525757 185.40585327]
[126.83946991 197.59266663]
[113.75990295 204.76138306]
[114.65271759 219.73478699]
[115.54553223 234.70820618]
[116.43835449 249.68161011]
[119.75424194 255.40142822]
[119.69295502 261.08413696]
[117.12808228 265.11285400]
[117.57468414 280.10620117]
[118.02129364 295.09954834]
[118.46789551 310.09289551]
[129.68910217 320.89672852]
[129.92843628 336.10845947]
[119.55949402 346.73959351]
[120.00609589 361.73294067]
[120.45270538 376.72628784]
[137.05490112 383.57690430]
[148.95138550 396.96112061]
[153.77879333 414.15017700]
[150.60868835 431.66668701]
[140.12571716 445.98806763]
[124.48038483 454.25485229]
[125.59603119 469.21328735]
[126.71167755 484.17175293]
[130.47068787 492.49688721]
[127.73088837 499.36093140]
[128.62370300 514.33435059]
[129.51652527 529.30773926]
[140.01045227 544.43914795]
[131.54985046 559.81396484]
[132.66549683 574.77239990]
[133.78114319 589.73083496]
[134.89680481 604.68933105]
[147.03439331 614.81127930]
[148.37641907 630.55847168]
[138.12669373 642.58837891]
[122.36618042 643.76385498]
[110.44531250 633.38751221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[7 200]
[8 199]
[9 198]
[10 196]
[11 195]
[12 194]
[21 188]
[22 187]
[23 186]
[26 183]
[27 182]
[28 181]
[29 180]
[30 177]
[31 176]
[32 175]
[33 174]
[39 168]
[40 167]
[41 166]
[42 163]
[43 162]
[44 161]
[45 141]
[46 140]
[47 139]
[48 138]
[49 135]
[50 134]
[51 133]
[52 132]
[53 131]
[62 130]
[63 129]
[64 127]
[65 126]
[66 125]
[68 123]
[71 120]
[72 119]
[76 116]
[77 115]
[78 114]
[79 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
