%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[112.26764679 571.52728271]
[96.76604462 570.83441162]
[84.65326691 561.13592529]
[80.58691406 546.16113281]
[86.13058472 531.66815186]
[99.15262604 523.22979736]
[99.82241058 508.24472046]
[100.49219513 493.25970459]
[93.33091736 480.19961548]
[101.67670441 466.75869751]
[102.34648895 451.77368164]
[103.01628113 436.78863525]
[103.68606567 421.80358887]
[104.35585022 406.81854248]
[103.57452393 391.83892822]
[101.34941101 377.00488281]
[99.12429047 362.17083740]
[96.89917755 347.33679199]
[91.02958679 361.14068604]
[80.10858154 371.42327881]
[65.97654724 376.45175171]
[51.01497650 375.37875366]
[37.74515533 368.38504028]
[28.40328598 356.64923096]
[24.56363297 342.14898682]
[26.87324715 327.32785034]
[34.94291687 314.68347168]
[47.41276550 306.34661865]
[62.18139648 303.72222900]
[76.76004791 307.25253296]
[88.69194794 316.34262085]
[95.96685791 329.46224976]
[96.63664246 314.47720337]
[97.19485474 299.48760986]
[97.64145660 284.49426270]
[83.18263245 274.35452271]
[77.65628815 257.41610718]
[83.45465851 240.40261841]
[98.43474579 230.18719482]
[98.43474579 215.18719482]
[98.32307434 200.18760681]
[98.09974670 185.18927002]
[97.87641907 170.19093323]
[97.65309143 155.19259644]
[97.42976379 140.19425964]
[96.20278931 125.24452972]
[93.97767639 110.41048431]
[91.53194427 95.61121368]
[88.86614990 80.84999847]
[78.79945374 68.64457703]
[84.15170288 54.74483871]
[81.48590851 39.98361969]
[78.82010651 25.22240257]
[66.60245514 11.44523048]
[73.17610168 -4.82603598]
[70.29083252 -19.54592705]
[67.40555573 -34.26581955]
[64.52028656 -48.98571014]
[58.96785736 -35.05120087]
[47.97806931 -24.84215927]
[33.67287445 -20.32979012]
[18.81438828 -22.38536072]
[6.27154827 -30.61197281]
[-1.53381979 -43.42119598]
[-3.09462166 -58.33977127]
[1.89050961 -72.48715973]
[12.45902348 -83.13170624]
[26.57030487 -88.21813965]
[41.49968719 -86.76432800]
[54.36454010 -79.05099487]
[62.68131638 -66.56626129]
[62.45798874 -81.56459808]
[62.23466110 -96.56293488]
[62.01133347 -111.56127167]
[61.78800583 -126.55960846]
[61.56467819 -141.55795288]
[52.87004471 -151.08506775]
[52.99280548 -163.58181763]
[61.32176208 -172.35421753]
[61.32176208 -187.35421753]
[61.32176208 -202.35421753]
[53.58446503 -216.15440369]
[61.32176208 -228.88166809]
[61.32176208 -243.88166809]
[61.32176208 -258.88168335]
[58.35219955 -264.78872681]
[58.75162506 -270.45770264]
[61.55174255 -274.32659912]
[61.99834824 -289.31997681]
[62.44495392 -304.31332397]
[59.57244110 -312.98431396]
[63.01147461 -319.52609253]
[63.68125916 -334.51113892]
[64.35104370 -349.49618530]
[65.02082825 -364.48123169]
[50.59245300 -368.87130737]
[37.70956802 -376.71234131]
[27.18199921 -387.51147461]
[19.67152023 -400.58981323]
[15.65024757 -415.12530518]
[15.37096119 -430.20419312]
[18.85121536 -444.87860107]
[25.87224197 -458.22613525]
[35.99269104 -469.40768433]
[48.57638168 -477.72042847]
[62.83229446 -482.64178467]
[77.86428833 -483.86239624]
[92.72744751 -481.30554199]
[106.48744965 -475.13198853]
[118.27933502 -465.72973633]
[127.36185455 -453.68984985]
[133.16407776 -439.76919556]
[135.32127380 -424.84277344]
[133.69783020 -409.84893799]
[128.39579773 -395.73019409]
[119.74847412 -383.37402344]
[108.29943085 -373.55718994]
[94.76837158 -366.89675903]
[80.00586700 -363.81143188]
[79.33608246 -348.82638550]
[78.66629791 -333.84136963]
[77.99651337 -318.85632324]
[77.43830109 -303.86669922]
[76.99169922 -288.87335205]
[76.54508972 -273.88000488]
[76.32176208 -258.88168335]
[76.32176208 -243.88166809]
[76.32176208 -228.88166809]
[84.05906677 -216.15440369]
[76.32176208 -202.35421753]
[76.32176208 -187.35421753]
[76.32176208 -172.35421753]
[85.90245819 -157.65126038]
[76.56301880 -141.78128052]
[76.78634644 -126.78293610]
[77.00967407 -111.78459930]
[77.23300171 -96.78626251]
[77.45632935 -81.78792572]
[77.67965698 -66.78958893]
[79.24018097 -51.87098312]
[82.12545013 -37.15109253]
[85.01071930 -22.43120003]
[87.89599609 -7.71130848]
[97.75680542 -0.70480859]
[100.28103638 11.53496265]
[93.58132935 22.55660820]
[96.24712372 37.31782532]
[98.91291809 52.07904053]
[108.78894043 63.22864151]
[103.62736511 78.18419647]
[106.29316711 92.94541931]
[109.81336212 96.83413696]
[110.90419769 102.41835022]
[108.81171417 108.18536377]
[111.03683472 123.01940918]
[118.50621033 110.01139832]
[131.77317810 103.01227570]
[146.72680664 104.19079590]
[158.73356628 113.18177795]
[164.07301331 127.19927216]
[161.09068298 141.89981079]
[150.71067810 152.72825623]
[136.14933777 156.32931519]
[121.91867828 151.58714294]
[112.42810059 139.97093201]
[112.65142822 154.96926880]
[112.87475586 169.96760559]
[113.09808350 184.96594238]
[113.32141113 199.96427917]
[116.57824707 208.49838257]
[113.43474579 215.18719482]
[113.43474579 230.18719482]
[124.42839813 236.13760376]
[131.80613708 246.13946533]
[134.21726990 258.25830078]
[131.26438904 270.18228149]
[123.56746674 279.66333008]
[112.63481140 284.94085693]
[112.18820190 299.93420410]
[115.06071472 308.60522461]
[111.62168121 315.14700317]
[110.95189667 330.13201904]
[111.73321533 345.11166382]
[113.95833588 359.94570923]
[116.18344879 374.77975464]
[118.40856934 389.61380005]
[124.27816010 375.80987549]
[135.19915771 365.52731323]
[149.33119202 360.49880981]
[164.29277039 361.57183838]
[177.56259155 368.56555176]
[186.90446472 380.30136108]
[190.74411011 394.80160522]
[188.43449402 409.62274170]
[180.36482239 422.26712036]
[167.89497375 430.60394287]
[153.12634277 433.22836304]
[138.54769897 429.69805908]
[126.61579895 420.60797119]
[119.34088898 407.48834229]
[118.67110443 422.47338867]
[118.00131989 437.45840454]
[117.33152771 452.44345093]
[116.66174316 467.42849731]
[123.77511597 481.56039429]
[115.47723389 493.92947388]
[114.80744934 508.91452026]
[114.13766479 523.89953613]
[126.35494232 533.46606445]
[130.58351135 548.39587402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[15 186]
[16 185]
[17 184]
[18 183]
[32 182]
[33 181]
[34 179]
[35 178]
[39 172]
[40 171]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[46 155]
[47 154]
[48 151]
[49 150]
[51 148]
[52 147]
[53 146]
[55 143]
[56 142]
[57 141]
[58 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[79 132]
[80 131]
[81 130]
[83 128]
[84 127]
[85 126]
[88 125]
[89 124]
[90 123]
[92 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
