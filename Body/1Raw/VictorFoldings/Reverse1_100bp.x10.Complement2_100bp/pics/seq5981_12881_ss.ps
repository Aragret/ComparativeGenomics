%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[98.64256287 635.41143799]
[89.07172394 647.07592773]
[76.80742645 655.86511230]
[62.68588638 661.17968750]
[47.66991806 662.65722656]
[32.78334808 660.19708252]
[19.04115677 653.96691895]
[7.38031721 644.39160156]
[-1.40411913 632.12390137]
[-6.71321344 618.00030518]
[-8.18498325 602.98376465]
[-5.71908045 588.09814453]
[0.51636505 574.35839844]
[10.09621048 562.70123291]
[22.36728668 553.92150879]
[36.49293137 548.61791992]
[51.51003265 547.15191650]
[53.95576096 532.35266113]
[56.40148544 517.55340576]
[58.84721375 502.75411987]
[56.83638000 495.64227295]
[61.44110107 487.75338745]
[64.10689545 472.99218750]
[58.75465012 459.09243774]
[68.82134247 446.88702393]
[71.48713684 432.12579346]
[74.15293884 417.36459351]
[75.26858521 402.40612793]
[74.82197571 387.41278076]
[74.37537384 372.41943359]
[73.92876434 357.42608643]
[71.62695312 354.75512695]
[70.50448608 350.83657837]
[71.13364410 346.23684692]
[73.81211090 341.75656128]
[74.03543854 326.75820923]
[74.25876617 311.75988770]
[74.48209381 296.76153564]
[74.70542145 281.76321411]
[74.92874908 266.76486206]
[75.15207672 251.76654053]
[64.45005798 262.27685547]
[49.50628281 263.57443237]
[37.15285492 255.06602478]
[33.03759003 240.64158630]
[39.04193497 226.89575195]
[52.42078018 220.11294556]
[67.05750275 223.39416504]
[76.26095581 235.24105835]
[78.04342651 220.34733582]
[79.82588959 205.45361328]
[66.23297119 199.22517395]
[55.21580887 189.08651733]
[47.86186981 176.02131653]
[44.90231705 161.30288696]
[46.63932419 146.37019348]
[52.91527939 132.68708801]
[63.12699509 121.59883881]
[76.28366852 114.19989014]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.45730591 57.19144440]
[99.01782227 42.27283859]
[100.57834625 27.35423470]
[86.39572906 19.78048897]
[76.22980499 7.37385798]
[71.61434937 -7.94714975]
[73.22779083 -23.82797623]
[80.79364014 -37.83985901]
[93.12734222 -47.85128784]
[108.32167053 -52.35222244]
[109.65990448 -67.29240417]
[110.99813843 -82.23258972]
[112.33637238 -97.17277527]
[102.56763458 -106.44565582]
[99.96120453 -119.46168518]
[105.24892426 -131.42504883]
[116.29539490 -138.05867004]
[117.85591888 -152.97726440]
[119.41644287 -167.89587402]
[120.97696686 -182.81448364]
[121.53517914 -197.80409241]
[121.08856964 -212.79743958]
[120.64196777 -227.79078674]
[109.42076874 -238.59460449]
[109.18143463 -253.80636597]
[119.55037689 -264.43746948]
[111.40562439 -278.00115967]
[118.76055145 -290.95315552]
[110.61579895 -304.51684570]
[117.97073364 -317.46884155]
[117.52412415 -332.46218872]
[117.07752228 -347.45553589]
[116.63091278 -362.44888306]
[102.23089600 -367.18338013]
[90.32051086 -376.55987549]
[82.33800507 -389.44610596]
[79.24729156 -404.28604126]
[81.42159271 -419.28762817]
[88.59835815 -432.63940430]
[99.91094971 -442.72906494]
[113.99332428 -448.33822632]
[129.14495850 -448.78952026]
[143.53622437 -444.02853394]
[155.42930603 -434.63009644]
[163.38806152 -421.72915649]
[166.45141602 -406.88357544]
[164.24948120 -391.88598633]
[157.04811096 -378.54748535]
[145.71694946 -368.47869873]
[131.62426758 -362.89550781]
[132.07087708 -347.90216064]
[132.51747131 -332.90881348]
[132.96408081 -317.91543579]
[141.07688904 -305.42419434]
[133.75390625 -291.39978027]
[141.86671448 -278.90850830]
[134.54373169 -264.88409424]
[145.52705383 -254.88897705]
[146.19355774 -239.68995667]
[135.63531494 -228.23739624]
[136.08192444 -213.24404907]
[136.52853394 -198.25070190]
[145.49073792 -210.27894592]
[159.49540710 -215.65194702]
[174.20304871 -212.70481873]
[185.05632019 -202.35076904]
[188.69223022 -187.79809570]
[183.98414612 -173.55612183]
[172.39093018 -164.03785706]
[157.50485229 -162.19265747]
[143.93853760 -168.59226990]
[135.89556885 -181.25395203]
[134.33505249 -166.33535767]
[132.77452087 -151.41674805]
[131.21400452 -136.49813843]
[142.35284424 -123.89794159]
[140.90365601 -106.80365753]
[127.27655792 -95.83454132]
[125.93832397 -80.89435577]
[124.60009003 -65.95417023]
[123.26185608 -51.01398849]
[135.93498230 -44.98643875]
[145.81047058 -34.97378540]
[151.68756104 -22.16444206]
[152.84176636 -8.08857346]
[149.11410522 5.56468058]
[140.93269348 17.14991188]
[129.26362610 25.26372910]
[115.49695587 28.91475868]
[113.93643188 43.83336258]
[112.37590790 58.75196838]
[114.80648041 65.73151398]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[119.69567871 119.39539337]
[130.73480225 129.69007874]
[138.04153442 142.87490845]
[140.91133118 157.65257263]
[139.07548523 172.57344055]
[132.72628784 186.17781067]
[122.49694061 197.13865662]
[109.39841461 204.39117432]
[94.71960449 207.23608398]
[92.93714142 222.12980652]
[91.15467834 237.02351379]
[90.15041351 251.98986816]
[89.92708588 266.98818970]
[89.70375824 281.98654175]
[89.48043060 296.98486328]
[89.25710297 311.98321533]
[89.03377533 326.98153687]
[88.81044769 341.97988892]
[88.92211914 356.97946167]
[89.36872101 371.97280884]
[89.81533051 386.96618652]
[90.26193237 401.95953369]
[97.49318695 388.81765747]
[109.15499878 379.38354492]
[123.51740265 375.05673218]
[138.44981384 376.47903442]
[151.73710632 383.43945312]
[161.40820312 394.90551758]
[166.02842712 409.17623901]
[164.91241455 424.13464355]
[158.22570801 437.56179810]
[146.96025085 447.46578979]
[132.78720093 452.37747192]
[117.80904388 451.56820679]
[104.24770355 445.15805054]
[94.11492920 434.09793091]
[88.91415405 420.03036499]
[86.24835968 434.79159546]
[83.58256531 449.55282593]
[88.74413300 464.50836182]
[78.86811066 475.65795898]
[76.20231628 490.41918945]
[73.64648438 505.19982910]
[71.20075989 519.99908447]
[68.75502777 534.79840088]
[66.30930328 549.59765625]
[80.05629730 555.81719971]
[91.72453308 565.38354492]
[100.51844025 577.64440918]
[105.83843994 591.76391602]
[107.32180023 606.77929688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 205]
[18 204]
[19 203]
[20 202]
[22 201]
[23 200]
[25 198]
[26 197]
[27 196]
[28 181]
[29 180]
[30 179]
[31 178]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[49 170]
[50 169]
[51 168]
[60 159]
[62 157]
[63 156]
[64 154]
[65 153]
[66 152]
[73 144]
[74 143]
[75 142]
[76 141]
[80 138]
[81 137]
[82 136]
[83 135]
[84 125]
[85 124]
[86 123]
[89 120]
[91 118]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
