%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[156.27845764 422.98025513]
[163.62754822 409.87115479]
[172.84843445 398.00387573]
[183.73513794 387.64349365]
[196.04444885 379.02148438]
[189.36424255 365.59112549]
[182.68405151 352.16073608]
[170.08834839 344.21105957]
[170.87014771 328.40917969]
[164.18995667 314.97879028]
[157.50976562 301.54843140]
[154.98023987 316.33358765]
[145.47326660 327.93606567]
[131.47393799 333.32299805]
[116.64164734 331.08621216]
[104.85352325 321.81042480]
[99.19094849 307.92031860]
[101.13410187 293.04672241]
[110.17506409 281.07754517]
[123.95053101 275.14151001]
[138.85963440 276.79028320]
[151.00462341 285.59219360]
[146.39060974 271.31945801]
[135.11354065 261.58926392]
[138.23075867 246.07820129]
[133.61674500 231.80546570]
[129.00273132 217.53273010]
[124.38872528 203.25999451]
[119.77471924 188.98725891]
[107.59459686 184.78320312]
[99.94562531 174.17304993]
[99.80209351 160.89939880]
[107.44043732 149.80569458]
[103.03944397 135.46585083]
[98.63844299 121.12599945]
[86.81388092 116.56163788]
[79.71617889 106.06039429]
[79.88967133 93.38665771]
[87.27215576 83.08362579]
[83.08514404 68.67984009]
[75.93785095 81.86756897]
[62.03246307 87.49253845]
[47.72634888 82.98309326]
[39.56007004 70.40088654]
[41.26713562 55.49834061]
[52.06709671 45.08869553]
[67.02236176 43.93109894]
[79.29665375 52.55630493]
[76.63085938 37.79508972]
[73.96505737 23.03387070]
[71.29926300 8.27265358]
[64.74324036 21.76407814]
[52.37549973 30.25165939]
[37.42894363 31.51676369]
[23.81056786 25.22869682]
[15.08017826 13.03114319]
[13.51988125 -1.88748562]
[19.53753281 -15.62749481]
[31.56013489 -24.59728050]
[46.44500732 -26.45216179]
[60.30128098 -20.70727539]
[69.50660706 -8.86513996]
[69.06000519 -23.85848999]
[68.50179291 -38.84809875]
[67.83200836 -53.83313751]
[67.16222382 -68.81817627]
[58.38008881 -56.65782928]
[44.45696259 -51.07691193]
[29.70708275 -53.80473328]
[18.70085716 -63.99605179]
[14.84868240 -78.49297333]
[19.34419823 -92.80347443]
[30.79442215 -102.49327850]
[45.65137482 -104.55990601]
[59.31147003 -98.36299133]
[67.54205322 -85.82245636]
[68.88028717 -100.76264191]
[70.21852112 -115.70282745]
[71.55675507 -130.64300537]
[72.89498901 -145.58319092]
[74.23322296 -160.52337646]
[65.67697144 -148.20304871]
[53.28882980 -139.74526978]
[38.69868088 -136.26280212]
[23.82610703 -138.21383667]
[10.62784863 -145.34167480]
[0.84036589 -156.70851135]
[-4.24863052 -170.81887817]
[-3.96959543 -185.81626892]
[1.64075923 -199.72756958]
[11.84429455 -210.72245789]
[25.29856110 -217.35441589]
[40.23341751 -218.75085449]
[54.68392563 -214.72807312]
[66.74887848 -205.81533813]
[74.84091187 -193.18525696]
[77.89544678 -178.49716187]
[82.50946045 -192.76989746]
[87.12346649 -207.04263306]
[91.73748016 -221.31535339]
[78.55314636 -228.56587219]
[66.97941589 -238.18072510]
[57.43466949 -249.81233215]
[50.26394272 -263.04022217]
[45.72644806 -277.38623047]
[43.98621750 -292.33172607]
[45.10615921 -307.33645630]
[49.04578781 -321.85803223]
[55.66268921 -335.37145996]
[64.71766663 -347.38827515]
[75.88338470 -357.47409058]
[88.75621033 -365.26425171]
[102.87080383 -370.47720337]
[117.71692657 -372.92446899]
[132.75790405 -372.51760864]
[147.45001221 -369.27130127]
[161.26213074 -363.30291748]
[173.69497681 -354.82821655]
[184.29911804 -344.15350342]
[192.69119263 -331.66473389]
[198.56785583 -317.81332397]
[201.71665955 -303.10003662]
[202.02377319 -288.05667114]
[199.47810364 -273.22711182]
[194.17166138 -259.14739990]
[186.29629517 -246.32652283]
[176.13668823 -235.22793579]
[164.06007385 -226.25283813]
[150.50305176 -219.72570801]
[135.95568848 -215.88246155]
[120.94384766 -214.86204529]
[106.01020813 -216.70135498]
[101.39620209 -202.42861938]
[96.78218842 -188.15588379]
[92.16818237 -173.88314819]
[89.17340851 -159.18515015]
[87.83517456 -144.24496460]
[86.49694061 -129.30477905]
[85.15870667 -114.36459351]
[83.82047272 -99.42440796]
[82.48223877 -84.48422241]
[82.14726257 -69.48796082]
[82.81704712 -54.50292587]
[83.48683167 -39.51788712]
[86.92586517 -32.97610855]
[84.05335236 -24.30509567]
[84.49996185 -9.31174660]
[86.06048584 5.60685825]
[88.72628021 20.36807632]
[91.39207458 35.12929153]
[94.05786896 49.89051056]
[97.48892975 64.49283600]
[101.67594147 78.89661407]
[116.31716919 86.51253510]
[121.04172516 102.32538605]
[112.97828674 116.72499847]
[117.37928772 131.06484985]
[121.78028870 145.40469360]
[137.38237000 153.31636047]
[142.33767700 169.74072266]
[134.04745483 184.37326050]
[138.66145325 198.64598083]
[143.27546692 212.91871643]
[147.88948059 227.19145203]
[152.50347900 241.46418762]
[164.11059570 252.21527100]
[160.66334534 266.70547485]
[165.27735901 280.97821045]
[170.94013977 294.86822510]
[177.62033081 308.29861450]
[184.30053711 321.72897339]
[197.37403870 330.63931274]
[196.11442566 345.48056030]
[202.79461670 358.91091919]
[209.47482300 372.34130859]
[223.77737427 367.72671509]
[238.60797119 365.29544067]
[253.63528442 365.10180664]
[268.52359009 367.15014648]
[282.94030762 371.39471436]
[296.56332397 377.74063110]
[309.08831787 386.04617310]
[320.23547363 396.12579346]
[329.75576782 407.75430298]
[337.43649292 420.67187500]
[343.10607910 434.58996582]
[346.63784790 449.19766235]
[347.95291138 464.16857910]
[347.02188110 479.16827393]
[343.86557007 493.86163330]
[338.55447388 507.92044067]
[331.20724487 521.03057861]
[321.98803711 532.89923096]
[311.10281372 543.26110840]
[298.79473877 551.88488770]
[285.33880615 558.57781982]
[271.03558350 563.19036865]
[256.20465088 565.61950684]
[241.17730713 565.81097412]
[226.28927612 563.76055908]
[211.87318420 559.51391602]
[198.25105286 553.16607666]
[185.72724915 544.85870361]
[174.58152771 534.77752686]
[165.06289673 523.14764404]
[157.38400269 510.22900391]
[151.71641541 496.31008911]
[148.18672180 481.70190430]
[146.87379456 466.73080444]
[147.80696106 451.73123169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 175]
[6 174]
[7 173]
[9 171]
[10 170]
[11 169]
[22 168]
[23 167]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[33 158]
[34 157]
[35 156]
[39 153]
[40 152]
[48 151]
[49 150]
[50 149]
[51 148]
[62 147]
[63 146]
[64 144]
[65 143]
[66 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 137]
[81 136]
[97 135]
[98 134]
[99 133]
[100 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
