%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[2.49074531 466.29818726]
[8.12368011 480.25369263]
[10.92549515 495.04003906]
[10.78849697 510.08886719]
[7.71795034 524.82177734]
[1.83187985 538.67242432]
[-6.64347029 551.10845947]
[-17.38232994 561.65185547]
[-29.97192574 569.89733887]
[-43.92834854 575.52801514]
[-58.71514893 578.32745361]
[-73.76396179 578.18798828]
[-88.49635315 575.11505127]
[-102.34604645 569.22674561]
[-114.78070068 560.74938965]
[-125.32234955 550.00878906]
[-133.56581116 537.41790771]
[-139.19422913 523.46057129]
[-141.99125671 508.67330933]
[-141.84939575 493.62451172]
[-138.77407837 478.89260864]
[-132.88351440 465.04388428]
[-124.40414429 452.61059570]
[-113.66187286 442.07067871]
[-101.06961060 433.82925415]
[-87.11136627 428.20309448]
[-72.32366180 425.40847778]
[-57.27489090 425.55276489]
[-42.54349518 428.63046265]
[-36.67453384 414.82629395]
[-30.80557442 401.02212524]
[-32.94631958 386.28216553]
[-20.42633820 376.60946655]
[-14.55737782 362.80529785]
[-18.79001236 351.47341919]
[-14.01345825 339.92489624]
[-2.28435254 334.55920410]
[3.78948140 320.84393311]
[1.86842811 306.07373047]
[14.53103447 296.58853149]
[12.60998058 281.81832886]
[25.27258682 272.33312988]
[31.34642029 258.61785889]
[37.42025375 244.90260315]
[43.49408722 231.18733215]
[49.56792450 217.47206116]
[55.23070908 203.58204651]
[60.47742844 189.52957153]
[65.72414398 175.47709656]
[70.97086334 161.42462158]
[76.00778198 147.29559326]
[80.83377838 133.09313965]
[85.65977478 118.89068604]
[90.48577118 104.68823242]
[94.77989960 90.31601715]
[98.53619385 75.79396057]
[102.29249573 61.27189636]
[106.04879761 46.74983978]
[108.82440948 32.00887680]
[110.60687256 17.11515808]
[112.38934326 2.22144127]
[114.17180634 -12.67227554]
[115.95427704 -27.56599236]
[104.92808533 -34.28929138]
[97.29141998 -44.64575577]
[94.15031433 -57.07590103]
[95.93715668 -69.72447205]
[102.35149384 -80.71738434]
[112.40992737 -88.43936157]
[124.59666443 -91.77127075]
[126.82177734 -106.60530853]
[129.04689026 -121.43935394]
[131.27201843 -136.27339172]
[133.49713135 -151.10743713]
[135.16867065 -166.01402283]
[125.13233948 -177.92660522]
[126.47685242 -193.08070374]
[137.89553833 -202.57540894]
[139.01118469 -217.53385925]
[140.12683105 -232.49230957]
[141.24247742 -247.45077515]
[142.35813904 -262.40921021]
[143.47378540 -277.36767578]
[135.09548950 -293.76541138]
[145.53433228 -307.87207031]
[146.42715454 -322.84545898]
[146.42715454 -337.84545898]
[145.53433228 -352.81887817]
[144.64152527 -367.79226685]
[143.74870300 -382.76568604]
[140.87286377 -387.12188721]
[140.03894043 -391.68893433]
[140.98530579 -395.65371704]
[143.16555786 -398.42477417]
[142.94223022 -413.42312622]
[142.71890259 -428.42144775]
[142.49557495 -443.41979980]
[142.27224731 -458.41812134]
[128.25273132 -464.36563110]
[117.86907959 -475.50564575]
[112.92033386 -489.90808105]
[114.26388550 -505.07760620]
[121.66696167 -518.38604736]
[133.84692383 -527.52758789]
[148.69354248 -530.91845703]
[163.63453674 -527.97113037]
[176.08128357 -519.19628906]
[183.87731934 -506.11416626]
[185.67192078 -490.99136353]
[181.15419006 -476.44796753]
[171.10681152 -465.00375366]
[157.27058411 -458.64144897]
[157.49391174 -443.64312744]
[157.71723938 -428.64477539]
[157.94056702 -413.64645386]
[158.16389465 -398.64810181]
[158.72210693 -383.65850830]
[159.61492920 -368.68508911]
[160.50775146 -353.71170044]
[161.40055847 -338.73828125]
[170.58604431 -350.59689331]
[184.95491028 -354.90222168]
[199.14790344 -350.04849243]
[207.87141418 -337.84603882]
[207.87176514 -322.84603882]
[199.14884949 -310.64312744]
[184.95606995 -305.78872681]
[170.58700562 -310.09338379]
[161.40055847 -321.95263672]
[160.50775146 -306.97924805]
[168.29978943 -297.72665405]
[167.67851257 -285.24475098]
[158.43223572 -276.25201416]
[157.31658936 -261.29357910]
[156.20094299 -246.33511353]
[155.08528137 -231.37666321]
[153.96963501 -216.41821289]
[152.85398865 -201.45976257]
[162.73788452 -190.37625122]
[161.81954956 -175.19035339]
[150.12712097 -164.89836121]
[163.02330017 -172.55921936]
[177.10673523 -167.39617920]
[181.99563599 -153.21525574]
[174.08610535 -140.47009277]
[159.20874023 -138.55595398]
[148.33117676 -148.88232422]
[146.10606384 -134.04827881]
[143.88093567 -119.21424103]
[141.65582275 -104.38019562]
[139.43070984 -89.54615021]
[153.27992249 -79.31688690]
[160.07557678 -63.40047455]
[157.86259460 -46.14629364]
[147.16113281 -32.31916809]
[130.84799194 -25.78352737]
[129.06552124 -10.88980961]
[127.28305817 4.00390720]
[125.50059509 18.89762497]
[123.71812439 33.79134369]
[134.36546326 23.22563553]
[149.01223755 19.98954582]
[163.11996460 25.08581161]
[172.31723022 36.93529892]
[173.75415039 51.86631393]
[166.98548889 65.25231934]
[154.10858154 72.94551849]
[139.11347961 72.56208801]
[126.64658356 64.22084045]
[120.57086182 50.50613785]
[116.81455994 65.02819824]
[113.05825806 79.55025482]
[109.30195618 94.07231903]
[123.35432434 88.82532501]
[136.29598999 96.40907288]
[138.58683777 111.23310089]
[128.53814697 122.36969757]
[113.55743408 121.60936737]
[104.68823242 109.51422882]
[99.86222839 123.71668243]
[95.03623199 137.91914368]
[90.21023560 152.12159729]
[91.12141418 158.66996765]
[88.91932678 163.90904236]
[85.02333832 166.67134094]
[79.77661896 180.72381592]
[74.52989960 194.77629089]
[69.28318024 208.82875061]
[70.15380096 213.08270264]
[69.67375183 216.99856567]
[68.11516571 220.19328308]
[65.84662628 222.41146851]
[63.28318787 223.54589844]
[57.20935440 237.26116943]
[51.13552094 250.97644043]
[45.06168747 264.69171143]
[38.98785400 278.40698242]
[40.47446442 294.15817261]
[28.24630165 302.66235352]
[29.73291397 318.41357422]
[17.50474739 326.91775513]
[11.43091393 340.63302612]
[13.81644726 358.89202881]
[-0.75320119 368.67425537]
[-6.62216187 382.47845459]
[-4.90120268 398.20578003]
[-17.00139809 406.89108276]
[-22.87035751 420.69525146]
[-28.73931885 434.49942017]
[-16.30192375 442.97277832]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 209]
[30 208]
[31 207]
[33 205]
[34 204]
[37 202]
[38 201]
[40 199]
[42 197]
[43 196]
[44 195]
[45 194]
[46 193]
[47 188]
[48 187]
[49 186]
[50 185]
[51 182]
[52 181]
[53 180]
[54 179]
[55 173]
[56 172]
[57 171]
[58 170]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[70 151]
[71 150]
[72 149]
[73 148]
[74 147]
[75 141]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[85 130]
[86 129]
[87 120]
[88 119]
[89 118]
[90 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
