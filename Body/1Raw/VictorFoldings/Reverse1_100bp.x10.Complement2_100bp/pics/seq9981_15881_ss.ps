%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[23.88972855 631.70312500]
[24.84868813 646.93603516]
[19.09539413 661.07330322]
[7.77216387 671.30792236]
[-6.87276554 675.60778809]
[-21.93163300 673.11914062]
[-34.41448975 664.33618164]
[-41.84285355 651.00268555]
[-42.74182129 635.76605225]
[-36.93289948 621.65155029]
[-25.56945229 611.46160889]
[-10.90770340 607.21948242]
[-8.46197605 592.42016602]
[-6.01624870 577.62091064]
[-3.57052112 562.82165527]
[-1.12479365 548.02239990]
[1.32093382 533.22308350]
[3.76666117 518.42382812]
[6.21238852 503.62457275]
[8.65811634 488.82528687]
[-2.54398274 482.24829102]
[-10.86476326 472.23135376]
[-15.29714203 459.95288086]
[-15.29313946 446.86691284]
[-10.83152676 434.53109741]
[-2.42294049 424.42102051]
[8.94846916 417.75396729]
[21.94019318 415.34219360]
[24.82546616 400.62231445]
[27.71073723 385.90240479]
[30.59601021 371.18252563]
[33.48128128 356.46261597]
[36.36655426 341.74273682]
[38.92238617 326.96209717]
[41.14750671 312.12805176]
[43.37262344 297.29400635]
[36.58447266 289.65631104]
[35.08947754 279.32611084]
[39.62020874 269.67971802]
[48.89933777 264.00466919]
[51.56513214 249.24343872]
[54.23093033 234.48222351]
[56.89672470 219.72100830]
[59.56251907 204.95979309]
[58.07680130 202.58265686]
[57.44318390 199.47377014]
[57.94508743 195.95474243]
[59.74439240 192.44375610]
[62.85147095 189.41061401]
[66.39114380 174.83422852]
[53.62704849 182.71318054]
[38.76702881 180.66873169]
[28.60488510 169.63555908]
[27.78660965 154.65789795]
[36.68630981 142.58332825]
[51.23516083 138.93217468]
[64.78162384 145.37370300]
[71.13261414 158.96478271]
[76.16953278 144.83575439]
[81.20644379 130.70671082]
[86.24336243 116.57769012]
[91.28028107 102.44866180]
[90.13784790 98.76528931]
[90.62453461 94.59623718]
[92.92085266 90.68037415]
[96.87046814 87.80976868]
[102.53325653 73.91973877]
[100.57833099 58.21977615]
[112.54786682 49.35527802]
[118.21065521 35.46525192]
[123.87344360 21.57522392]
[127.41311646 6.99884796]
[128.75134277 -7.94133711]
[130.08958435 -22.88152122]
[131.42782593 -37.82170868]
[131.76280212 -52.81796646]
[131.09300232 -67.80300140]
[130.42321777 -82.78804016]
[129.75343323 -97.77307892]
[129.08364868 -112.75811768]
[128.41386414 -127.74315643]
[127.74408722 -142.72819519]
[127.07429504 -157.71324158]
[126.40451050 -172.69827271]
[118.05872345 -186.13919067]
[125.22000122 -199.19926453]
[124.55021667 -214.18429565]
[123.88043213 -229.16934204]
[120.37094879 -237.60269165]
[123.31391144 -244.38212585]
[112.09271240 -255.18594360]
[111.85337830 -270.39770508]
[122.22231293 -281.02880859]
[121.77571106 -296.02215576]
[121.32910156 -311.01550293]
[120.88249969 -326.00885010]
[120.43589020 -341.00222778]
[119.98928833 -355.99557495]
[106.02573395 -362.15850830]
[96.12554169 -373.77526855]
[92.25440979 -388.53930664]
[95.18093872 -403.51922607]
[104.32408142 -415.74075317]
[117.86844635 -422.77731323]
[133.12480164 -423.23175049]
[147.06396484 -417.01385498]
[156.91833496 -405.35821533]
[160.73130798 -390.57904053]
[157.74580383 -375.61074829]
[148.55461121 -363.42532349]
[134.98263550 -356.44216919]
[135.42924500 -341.44882202]
[135.87585449 -326.45547485]
[136.32244873 -311.46212769]
[136.76905823 -296.46878052]
[137.21566772 -281.47543335]
[148.19900513 -271.48031616]
[148.86550903 -256.28128052]
[138.30725098 -244.82873535]
[138.86546326 -229.83912659]
[139.53524780 -214.85408020]
[140.20503235 -199.86904907]
[148.50292969 -187.49995422]
[141.38955688 -173.36805725]
[142.05934143 -158.38302612]
[142.72912598 -143.39797974]
[143.39891052 -128.41294861]
[144.06869507 -113.42790985]
[144.73847961 -98.44287109]
[145.40826416 -83.45783234]
[146.07804871 -68.47279358]
[146.74783325 -53.48775101]
[155.52996826 -65.64810181]
[169.45309448 -71.22901917]
[184.20297241 -68.50119781]
[195.20919800 -58.30987549]
[199.06137085 -43.81295395]
[194.56585693 -29.50245857]
[183.11563110 -19.81264877]
[168.25868225 -17.74602127]
[154.59858704 -23.94294167]
[146.36799622 -36.48347092]
[145.02976990 -21.54328728]
[143.69152832 -6.60310268]
[142.35330200 8.33708191]
[150.34899902 -4.35420227]
[161.55818176 -14.32187271]
[175.09681702 -20.77983856]
[189.89720154 -23.21879578]
[204.79211426 -21.44639969]
[218.60690308 -15.60242939]
[230.25202942 -6.14776182]
[238.80915833 6.17196608]
[243.60340881 20.38516998]
[244.25669861 35.37093735]
[240.71749878 49.94742584]
[233.26492310 62.96507645]
[222.48672485 73.39726257]
[209.23291016 80.42125702]
[194.54873657 83.48311615]
[179.59225464 82.34136963]
[165.54299927 77.08606720]
[153.50894165 68.13166046]
[144.43914795 56.18432236]
[139.04888916 42.18627930]
[137.76347351 27.23801041]
[132.10067749 41.12803650]
[126.43789673 55.01806259]
[128.79786682 69.72451782]
[116.42327881 79.58252716]
[110.76049042 93.47254944]
[105.40930939 107.48557281]
[100.37239075 121.61460114]
[95.33547211 135.74363708]
[90.29856110 149.87266541]
[85.26164246 164.00169373]
[80.96752167 178.37390137]
[77.42784882 192.95028687]
[74.32373810 207.62557983]
[71.65794373 222.38679504]
[68.99214935 237.14802551]
[66.32634735 251.90924072]
[63.66055298 266.67044067]
[71.32603455 285.31457520]
[58.20666504 299.51910400]
[55.98154831 314.35314941]
[53.75643158 329.18719482]
[55.66855240 334.04425049]
[55.53931427 338.68499756]
[53.79294968 342.36810303]
[51.08644867 344.62802124]
[48.20117569 359.34790039]
[45.31590271 374.06777954]
[42.43062973 388.78768921]
[39.54535675 403.50756836]
[36.66008377 418.22747803]
[50.60035324 428.25537109]
[58.72869492 443.31927490]
[59.45236969 460.36557007]
[52.67413330 475.96264648]
[39.80207443 486.99185181]
[23.45738602 491.27102661]
[21.01165962 506.07028198]
[18.56593132 520.86956787]
[16.12020493 535.66882324]
[13.67447758 550.46807861]
[11.22875023 565.26739502]
[8.78302193 580.06665039]
[6.33729506 594.86590576]
[3.89156747 609.66516113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[17 205]
[18 204]
[19 203]
[20 202]
[28 196]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 187]
[35 186]
[36 185]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[49 178]
[50 177]
[58 176]
[59 175]
[60 174]
[61 173]
[62 172]
[66 171]
[67 170]
[69 168]
[70 167]
[71 166]
[72 145]
[73 144]
[74 143]
[75 142]
[76 132]
[77 131]
[78 130]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[86 122]
[87 121]
[88 120]
[90 119]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
