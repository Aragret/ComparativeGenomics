%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[-22.50557137 686.26837158]
[-32.17101288 697.75415039]
[-42.88449478 708.26922607]
[-54.54899597 717.71826172]
[-67.05887604 726.01568604]
[-80.30083466 733.08642578]
[-94.15496063 738.86639404]
[-108.49578094 743.30322266]
[-123.19341278 746.35681152]
[-138.11476135 747.99945068]
[-153.12467957 748.21624756]
[-168.08724976 747.00531006]
[-182.86694336 744.37750244]
[-197.32992554 740.35668945]
[-211.34521484 734.97930908]
[-224.78587341 728.29394531]
[-237.53018188 720.36132812]
[-249.46273804 711.25311279]
[-260.47546387 701.05187988]
[-270.46859741 689.85003662]
[-279.35168457 677.74896240]
[-287.04425049 664.85833740]
[-293.47662354 651.29479980]
[-298.59057617 637.18127441]
[-302.33978271 622.64550781]
[-304.69027710 607.81915283]
[-305.62075806 592.83654785]
[-305.12286377 577.83331299]
[-303.20101929 562.94537354]
[-299.87268066 548.30749512]
[-295.16799927 534.05230713]
[-289.12954712 520.30883789]
[-281.81204224 507.20166016]
[-273.28170776 494.84939575]
[-263.61584473 483.36392212]
[-252.90199280 472.84927368]
[-241.23715210 463.40066528]
[-228.72695923 455.10366821]
[-215.48474121 448.03344727]
[-201.63040161 442.25396729]
[-187.28942871 437.81765747]
[-172.59169006 434.76461792]
[-157.67027283 433.12252808]
[-142.66035461 432.90625000]
[-127.69783020 434.11779785]
[-112.91822815 436.74612427]
[-98.45539093 440.76742554]
[-84.44029999 446.14535522]
[-77.76010895 432.71499634]
[-79.01972198 417.87374878]
[-65.94620514 408.96340942]
[-59.26601028 395.53305054]
[-52.58581543 382.10266113]
[-63.00569153 372.37579346]
[-70.26966858 360.09268188]
[-73.78102875 346.24475098]
[-73.24635315 331.95266724]
[-68.70002747 318.37564087]
[-60.50218964 306.61737061]
[-49.31019211 297.63644409]
[-36.02592087 292.16806030]
[-21.72311783 290.66394043]
[-7.56058311 293.25494385]
[-0.68117070 279.92550659]
[6.19824171 266.59606934]
[5.15973234 251.73771667]
[18.36445808 243.02304077]
[25.24386978 229.69360352]
[32.12328339 216.36418152]
[39.00269318 203.03474426]
[45.88210678 189.70532227]
[52.76152039 176.37588501]
[59.64093399 163.04646301]
[66.52034760 149.71702576]
[73.39975739 136.38760376]
[80.17974854 123.00732422]
[86.85994720 109.57695007]
[83.82598877 98.33255768]
[89.09020233 87.94365692]
[99.95175934 83.74033356]
[106.83116913 70.41090393]
[113.71057892 57.08147430]
[104.63465881 43.26049423]
[103.77207947 26.84247017]
[111.26370239 12.31344700]
[124.98062134 3.59553480]
[141.12817383 2.98826098]
[140.34637451 -12.81361771]
[152.94207764 -20.76330948]
[159.62226868 -34.19368362]
[156.26538086 -46.64736176]
[162.10581970 -57.69602585]
[173.53042603 -61.67154694]
[180.40983582 -75.00097656]
[187.28926086 -88.33040619]
[194.16867065 -101.65983582]
[201.04808044 -114.98926544]
[200.50163269 -130.80102539]
[213.21429443 -138.56230164]
[220.09370422 -151.89173889]
[207.85679626 -160.61175537]
[196.98547363 -170.98455811]
[187.70108032 -182.79899597]
[180.19264221 -195.81452942]
[174.61299133 -209.76617432]
[171.07575989 -224.36988831]
[169.65292358 -239.32836914]
[170.37348938 -254.33709717]
[173.22274780 -269.09048462]
[178.14271545 -283.28817749]
[185.03323364 -296.64114380]
[193.75399780 -308.87753296]
[204.12748718 -319.74819946]
[215.94248962 -329.03186035]
[228.95849609 -336.53948975]
[242.91047668 -342.11828613]
[257.51440430 -345.65460205]
[272.47299194 -347.07650757]
[287.48165894 -346.35504150]
[302.23486328 -343.50485229]
[316.43228149 -338.58398438]
[329.78482056 -331.69265747]
[342.02062988 -322.97113037]
[352.89068604 -312.59698486]
[362.17361450 -300.78140259]
[369.68045044 -287.76492310]
[375.25836182 -273.81259155]
[378.79379272 -259.20843506]
[380.21475220 -244.24977112]
[379.49234009 -229.24114990]
[376.64126587 -214.48811340]
[371.71954346 -200.29103088]
[364.82736206 -186.93891907]
[356.10507202 -174.70361328]
[345.73025513 -163.83422852]
[333.91409302 -154.55203247]
[320.89718628 -147.04598999]
[306.94448853 -141.46894836]
[292.34011841 -137.93441772]
[277.38134766 -136.51437378]
[262.37277222 -137.23771667]
[247.61991882 -140.08972168]
[233.42314148 -145.01232910]
[226.54373169 -131.68289185]
[227.58222961 -116.82453918]
[214.37750244 -108.10984802]
[207.49809265 -94.78041840]
[200.61868286 -81.45098877]
[193.73927307 -68.12155914]
[186.85986328 -54.79213333]
[188.63035583 -37.33268738]
[173.05264282 -27.51349068]
[166.37245178 -14.08311462]
[167.63206482 0.75813347]
[154.55854797 9.66845512]
[162.84109497 20.52739906]
[165.65040588 33.96006393]
[162.38246155 47.35668945]
[153.61962891 58.08938980]
[141.02780151 64.02759552]
[127.04000854 63.96088791]
[120.16059875 77.29031372]
[113.28118896 90.61974335]
[114.50398254 107.34939575]
[100.29032135 116.25714874]
[93.61012268 129.68751526]
[92.59026337 138.76484680]
[86.72918701 143.26701355]
[79.84977722 156.59643555]
[72.97035980 169.92587280]
[66.09095001 183.25529480]
[59.21153641 196.58473206]
[52.33212280 209.91415405]
[45.45271301 223.24359131]
[38.57329941 236.57301331]
[31.69388580 249.90245056]
[32.24033356 265.71420288]
[19.52767181 273.47549438]
[12.64825821 286.80493164]
[5.76884604 300.13433838]
[16.94506264 311.32867432]
[24.10617256 325.41146851]
[26.56188202 340.99868774]
[24.08366585 356.56268311]
[16.92597771 370.58178711]
[5.80017996 381.68911743]
[-8.19614410 388.80587769]
[-23.68745232 391.24612427]
[-39.15544128 388.78286743]
[-45.83563614 402.21322632]
[-52.51583099 415.64361572]
[-51.73402786 431.44549561]
[-64.32972717 439.39517212]
[-71.00992584 452.82556152]
[-58.26531982 460.75775146]
[-46.33244324 469.86550903]
[-35.31935501 480.06631470]
[-25.32579422 491.26782227]
[-16.44227028 503.36856079]
[-8.74923420 516.25891113]
[-2.31635571 529.82220459]
[2.79810572 543.93560791]
[6.54783201 558.47119141]
[8.89886379 573.29742432]
[9.82991028 588.28002930]
[9.33253765 603.28326416]
[7.41125298 618.17132568]
[4.08345413 632.80932617]
[-0.62072074 647.06463623]
[-6.65866852 660.80828857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 194]
[49 193]
[51 191]
[52 190]
[53 189]
[63 180]
[64 179]
[65 178]
[67 176]
[68 175]
[69 174]
[70 173]
[71 172]
[72 171]
[73 170]
[74 169]
[75 168]
[76 166]
[77 165]
[80 163]
[81 162]
[82 161]
[87 155]
[89 153]
[90 152]
[93 150]
[94 149]
[95 148]
[96 147]
[97 146]
[99 144]
[100 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
