%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[84.15291595 532.15161133]
[79.49507904 517.77124023]
[79.28453827 502.65676880]
[83.54000854 488.15219116]
[91.88311005 475.54727173]
[103.57197571 465.96282959]
[117.56723022 460.25106812]
[116.22899628 445.31088257]
[114.89076233 430.37069702]
[111.16305542 423.98901367]
[113.64552307 415.19836426]
[112.52986908 400.23992920]
[111.41422272 385.28146362]
[110.29857635 370.32299805]
[99.65086365 356.37335205]
[107.78408051 339.85269165]
[98.94216156 327.86645508]
[105.41741943 313.43103027]
[96.57550049 301.44479370]
[103.05075836 287.00936890]
[101.71252441 272.06918335]
[92.87060547 260.08294678]
[99.34585571 245.64752197]
[98.00762177 230.70733643]
[96.66938782 215.76715088]
[85.19487762 225.42817688]
[70.45808411 222.63052368]
[63.32242584 209.43649292]
[69.04804230 195.57225037]
[83.41422272 191.25799561]
[95.82991791 199.67260742]
[95.60659027 184.67427063]
[95.38326263 169.67593384]
[94.93665314 154.68257141]
[94.26686859 139.69754028]
[93.59708405 124.71250153]
[92.92729950 109.72746277]
[92.03448486 94.75405121]
[90.91883850 79.79560089]
[89.80318451 64.83715057]
[78.11076355 54.54515839]
[77.19242859 39.35926819]
[87.07632446 28.27575684]
[85.96067047 13.31730270]
[83.02028656 9.00439167]
[82.11846161 4.45027208]
[83.00569916 0.47184908]
[85.14445496 -2.33137703]
[84.69784546 -17.32472610]
[81.31432343 -25.80939293]
[84.35788727 -32.54426575]
[84.13455963 -47.54260254]
[83.91123199 -62.54093933]
[83.68790436 -77.53927612]
[75.74599457 -91.22272491]
[83.29294586 -104.06378174]
[83.06961823 -119.06211853]
[75.12771606 -132.74555969]
[82.67466736 -145.58662415]
[74.73275757 -159.27006531]
[82.27970886 -172.11112976]
[82.05638123 -187.10946655]
[69.89510345 -178.32861328]
[55.40720367 -182.21459961]
[49.27263260 -195.90281677]
[56.01356506 -209.30281067]
[70.66083527 -212.53660583]
[82.41629028 -203.22186279]
[83.30910492 -218.19526672]
[84.20192719 -233.16867065]
[85.09474182 -248.14208984]
[85.98755646 -263.11547852]
[86.88037109 -278.08889771]
[72.03711700 -280.32141113]
[57.45374298 -283.87545776]
[43.24766541 -288.72247314]
[29.53326416 -294.82342529]
[16.42096519 -302.12918091]
[4.01634026 -310.58087158]
[-7.58073235 -320.11053467]
[-18.27687836 -330.64138794]
[-27.98597717 -342.08862305]
[-36.62985611 -354.36013794]
[-44.13891602 -367.35705566]
[-50.45270157 -380.97479248]
[-55.52037048 -395.10366821]
[-59.30112457 -409.62991333]
[-61.76452255 -424.43658447]
[-62.89073181 -439.40447998]
[-62.67067719 -454.41308594]
[-61.10614014 -469.34152222]
[-58.20971298 -484.06964111]
[-54.00471497 -498.47879028]
[-48.52500534 -512.45300293]
[-41.81470108 -525.87982178]
[-33.92783737 -538.65100098]
[-24.92790794 -550.66381836]
[-14.88738251 -561.82147217]
[-3.88709950 -572.03424072]
[7.98436975 -581.21978760]
[20.63144302 -589.30419922]
[33.95228958 -596.22241211]
[47.83965683 -601.91864014]
[62.18172836 -606.34710693]
[76.86302948 -609.47210693]
[91.76535797 -611.26849365]
[106.76871490 -611.72180176]
[121.75230408 -610.82836914]
[136.59548950 -608.59539795]
[151.17875671 -605.04089355]
[165.38468933 -600.19342041]
[179.09890747 -594.09210205]
[192.21098328 -586.78594971]
[204.61534119 -578.33386230]
[216.21212769 -568.80383301]
[226.90794373 -558.27264404]
[236.61669922 -546.82513428]
[245.26020813 -534.55334473]
[252.76885986 -521.55621338]
[259.08224487 -507.93829346]
[264.14947510 -493.80926514]
[267.92977905 -479.28289795]
[270.39273071 -464.47613525]
[271.51849365 -449.50817871]
[271.29797363 -434.49960327]
[269.73297119 -419.57119751]
[266.83609009 -404.84320068]
[262.63064575 -390.43414307]
[257.15051270 -376.46008301]
[250.43981934 -363.03353882]
[242.55255127 -350.26257324]
[233.55226135 -338.25003052]
[223.51139832 -327.09265137]
[212.51080322 -316.88024902]
[200.63905334 -307.69506836]
[187.99172974 -299.61102295]
[174.67066956 -292.69323730]
[160.78312683 -286.99743652]
[146.44091797 -282.56939697]
[131.75952148 -279.44485474]
[116.85714722 -277.64892578]
[101.85377502 -277.19607544]
[100.96096039 -262.22268677]
[100.06814575 -247.24926758]
[99.17533112 -232.27586365]
[98.28251648 -217.30245972]
[97.38969421 -202.32905579]
[97.05471802 -187.33279419]
[97.27804565 -172.33445740]
[105.20397949 -159.72378540]
[97.67300415 -145.80995178]
[105.59893799 -133.19927979]
[98.06795502 -119.28544617]
[98.29128265 -104.28710938]
[106.21721649 -91.67644501]
[98.68624115 -77.76260376]
[98.90956879 -62.76426697]
[99.13289642 -47.76593018]
[99.35622406 -32.76759338]
[99.69120026 -17.77133369]
[100.13780212 -2.77798295]
[100.91912842 12.20165443]
[102.03477478 27.16010857]
[113.45346069 36.65480423]
[114.79797363 51.80891037]
[104.76164246 63.72150040]
[105.87728882 78.67995453]
[106.99293518 93.63840485]
[110.08946991 97.87225342]
[110.59342957 103.53964233]
[107.91233826 109.05767822]
[108.58212280 124.04271698]
[109.25190735 139.02775574]
[109.92169189 154.01278687]
[113.15206146 159.78135681]
[113.00616455 165.46252441]
[110.38159943 169.45260620]
[110.60492706 184.45094299]
[110.82825470 199.44927979]
[111.60957336 214.42890930]
[112.94780731 229.36909485]
[114.28604126 244.30928040]
[123.22367859 257.36413574]
[116.65270996 270.73095703]
[117.99094391 285.67114258]
[126.92858124 298.72598267]
[120.35760498 312.09280396]
[129.29524231 325.14764404]
[122.72426605 338.51446533]
[132.10340881 347.36849976]
[132.91046143 359.83978271]
[125.25702667 369.20736694]
[126.37268066 384.16580200]
[127.48832703 399.12426758]
[128.60397339 414.08273315]
[129.83094788 429.03247070]
[131.16918945 443.97265625]
[132.50741577 458.91284180]
[147.29498291 462.04641724]
[160.50111389 469.40097046]
[170.95155334 480.32250977]
[177.71702576 493.83990479]
[180.19598389 508.75115967]
[178.16796875 523.73046875]
[171.81332397 537.44573975]
[161.69711304 548.67755127]
[148.71884155 556.42712402]
[134.03253174 560.00537109]
[118.94409180 559.09417725]
[104.79517365 553.77441406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[11 195]
[12 194]
[13 193]
[14 192]
[16 189]
[18 187]
[20 185]
[21 184]
[23 182]
[24 181]
[25 180]
[31 179]
[32 178]
[33 177]
[34 174]
[35 173]
[36 172]
[37 171]
[38 168]
[39 167]
[40 166]
[43 163]
[44 162]
[48 161]
[49 160]
[51 159]
[52 158]
[53 157]
[54 156]
[56 154]
[57 153]
[59 151]
[61 149]
[62 148]
[68 147]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
