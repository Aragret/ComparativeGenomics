%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[216.84222412 542.27648926]
[229.61198425 534.27459717]
[224.78598022 520.07214355]
[219.65760803 514.75030518]
[219.99557495 505.62216187]
[215.38156128 491.34942627]
[210.76754761 477.07669067]
[206.04742432 462.83868408]
[201.22142029 448.63623047]
[196.39541626 434.43377686]
[191.56942749 420.23132324]
[186.74342346 406.02886963]
[181.81182861 391.86273193]
[170.25004578 382.47262573]
[172.90406799 366.87561035]
[167.86714172 352.74658203]
[162.83023071 338.61755371]
[157.79331970 324.48852539]
[152.75639343 310.35949707]
[147.71948242 296.23046875]
[142.20924377 310.18170166]
[129.61328125 318.32675171]
[114.62957764 317.62768555]
[102.84668732 308.34524536]
[98.65933228 293.94158936]
[103.62929535 279.78884888]
[115.90290833 271.16571045]
[130.90240479 271.28836060]
[143.03404236 280.11203003]
[139.71177673 265.48455811]
[136.38952637 250.85710144]
[133.06726074 236.22962952]
[129.74501038 221.60217285]
[125.98870087 207.08010864]
[121.80168915 192.67633057]
[117.61468506 178.27255249]
[113.42767334 163.86877441]
[108.92004395 149.56208801]
[104.09404755 135.35963440]
[99.26804352 121.15717316]
[84.30135345 114.20261383]
[78.87542725 98.61649323]
[86.28784180 83.87119293]
[81.25093079 69.74216461]
[76.21401215 55.61313248]
[71.17709351 41.48410416]
[59.25503922 31.08337593]
[62.26932907 16.49696732]
[57.23241043 2.36793804]
[52.19549561 -11.76109123]
[47.15858078 -25.89012146]
[41.91186142 -39.94259262]
[36.45650482 -53.91539001]
[31.00114632 -67.88819122]
[25.54578972 -81.86098480]
[19.98656464 -95.79278564]
[14.32377720 -109.68280792]
[3.76888037 -111.23778534]
[-5.12051964 -116.98979950]
[-10.77684975 -125.84471130]
[-12.23596764 -136.16865540]
[-9.30095291 -146.08940125]
[-2.56567574 -153.83581543]
[-7.60259199 -167.96484375]
[-12.63950825 -182.09388733]
[-24.56156540 -192.49461365]
[-21.54727554 -207.08100891]
[-26.58419228 -221.21005249]
[-28.36919212 -206.31663513]
[-33.75428772 -192.31660461]
[-42.41017914 -180.06607056]
[-53.80755615 -170.31416321]
[-67.24946594 -163.65719604]
[-81.91392517 -160.50227356]
[-96.90420532 -161.04229736]
[-111.30363464 -165.24424744]
[-124.23168945 -172.85118103]
[-134.89781189 -183.39791870]
[-142.64976501 -196.23954773]
[-147.01350403 -210.59077454]
[-147.72221375 -225.57402039]
[-144.73252869 -240.27305603]
[-138.22726440 -253.78903198]
[-128.60424805 -265.29544067]
[-116.45191193 -274.08865356]
[-102.51338196 -279.63098145]
[-87.64100647 -281.58349609]
[-72.74422455 -279.82681274]
[-58.73399353 -274.46832275]
[-46.46703720 -265.83569336]
[-36.69348907 -254.45687866]
[-30.01099396 -241.02761841]
[-30.01099396 -256.02761841]
[-30.12266159 -271.02719116]
[-30.34598923 -286.02554321]
[-30.56931686 -301.02386475]
[-30.79264450 -316.02221680]
[-31.01597214 -331.02053833]
[-45.03549576 -336.96804810]
[-55.41914368 -348.10806274]
[-60.36789322 -362.51049805]
[-59.02434158 -377.68002319]
[-51.62126923 -390.98846436]
[-39.44129562 -400.13000488]
[-24.59468269 -403.52087402]
[-9.65369320 -400.57354736]
[2.79305673 -391.79870605]
[10.58909130 -378.71658325]
[12.38370132 -363.59378052]
[7.86595964 -349.05038452]
[-2.18140841 -337.60617065]
[-16.01763535 -331.24386597]
[-15.79430771 -316.24554443]
[-15.57098007 -301.24719238]
[-15.34765148 -286.24887085]
[-15.12432384 -271.25051880]
[-11.88158607 -264.60925293]
[-15.01099491 -256.02761841]
[-15.01099491 -241.02761841]
[-12.45516205 -226.24696350]
[-7.41824627 -212.11793518]
[4.14353704 -202.72781372]
[1.48952150 -187.13079834]
[6.52643776 -173.00177002]
[11.56335354 -158.87274170]
[29.72968864 -151.83721924]
[36.97674561 -133.42570496]
[28.21380424 -115.34559631]
[33.87659073 -101.45557404]
[39.31263351 -96.44844818]
[39.51858902 -87.31634521]
[44.97394562 -73.34354401]
[50.42930222 -59.37074661]
[55.88465881 -45.39794922]
[59.82134247 -42.69395828]
[62.10119247 -37.48825836]
[61.28760910 -30.92703629]
[66.32452393 -16.79800797]
[71.36144257 -2.66897821]
[76.39836121 11.46005154]
[87.96014404 20.85017586]
[85.30612183 36.44718933]
[90.34304047 50.57621765]
[95.37995911 64.70524597]
[100.41687012 78.83427429]
[112.43344879 82.86608887]
[119.99297333 93.03993225]
[120.38557434 105.70877075]
[113.47050476 116.33117676]
[118.29650116 130.53363037]
[123.12249756 144.73608398]
[127.04923248 148.17524719]
[129.06277466 152.35841370]
[129.20007324 156.43226624]
[127.83145142 159.68176270]
[132.01846313 174.08554077]
[136.20547485 188.48931885]
[140.39248657 202.89309692]
[143.63189697 205.78450012]
[145.58618164 209.21163940]
[146.24472046 212.70474243]
[145.75054932 215.83880615]
[144.37246704 218.27992249]
[147.69471741 232.90737915]
[151.01698303 247.53483582]
[154.33924866 262.16229248]
[157.66149902 276.78976440]
[161.84851074 291.19354248]
[166.88543701 305.32257080]
[171.92234802 319.45159912]
[176.95925903 333.58062744]
[181.99618530 347.70965576]
[187.03309631 361.83868408]
[198.95515442 372.23941040]
[195.94085693 386.82583618]
[201.77023315 393.85833740]
[200.94587708 401.20288086]
[205.77188110 415.40533447]
[210.59788513 429.60778809]
[215.42387390 443.81024170]
[220.24987793 458.01269531]
[225.97389221 465.13122559]
[225.04028320 472.46267700]
[229.65429688 486.73541260]
[234.26831055 501.00814819]
[238.98843384 515.24615479]
[243.81443787 529.44860840]
[258.81570435 528.01385498]
[273.74340820 530.07794189]
[287.79251099 535.52954102]
[300.20535278 544.07458496]
[310.31250000 555.25231934]
[317.56893921 568.45996094]
[321.58331299 582.98516846]
[322.13916016 598.04461670]
[319.20645142 612.82623291]
[312.94335938 626.53283691]
[303.68765259 638.42523193]
[291.93850708 647.86206055]
[278.32949829 654.33447266]
[263.59457397 657.49334717]
[248.52835083 657.16833496]
[233.94334412 653.37701416]
[220.62608337 646.32385254]
[209.29476929 636.38916016]
[200.56048584 624.10870361]
[194.89425659 610.14483643]
[192.60165405 595.25048828]
[193.80632019 580.22900391]
[198.44328308 565.89044189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 187]
[3 186]
[5 185]
[6 184]
[7 183]
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 175]
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 168]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[34 158]
[35 157]
[36 156]
[37 155]
[38 151]
[39 150]
[40 149]
[43 145]
[44 144]
[45 143]
[46 142]
[48 140]
[49 139]
[50 138]
[51 137]
[52 134]
[53 133]
[54 132]
[55 131]
[56 129]
[57 128]
[63 125]
[64 124]
[65 123]
[67 121]
[68 120]
[92 119]
[93 118]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
