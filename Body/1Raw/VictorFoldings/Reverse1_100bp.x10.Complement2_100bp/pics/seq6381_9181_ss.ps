%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[71.60095978 481.53344727]
[66.19628906 495.56149292]
[58.61123657 508.54080200]
[49.04227066 520.13525391]
[37.73724747 530.04449463]
[24.98900223 538.01177979]
[11.12773800 543.83087158]
[-3.48750186 547.35095215]
[-18.47814941 548.48083496]
[-33.45590591 547.19134521]
[-48.03282166 543.51574707]
[-61.83130646 537.54937744]
[-74.49395752 529.44665527]
[-85.69277191 519.41760254]
[-95.13768768 507.72186279]
[-102.58403778 494.66244507]
[-107.83896637 480.57763672]
[-110.76634216 465.83224487]
[-111.29034424 450.80822754]
[-109.39739990 435.89471436]
[-105.13654327 421.47799683]
[-98.61813354 407.93154907]
[-90.01102448 395.60620117]
[-79.53815460 384.82125854]
[-67.47079468 375.85604858]
[-54.12151337 368.94281006]
[-39.83610153 364.26058960]
[-24.98458099 361.93069458]
[-9.95164013 362.01342773]
[4.87333107 364.50671387]
[9.69932842 350.30426025]
[14.52532673 336.10177612]
[19.24546051 321.86380005]
[23.85947037 307.59106445]
[28.47347832 293.31832886]
[33.08749008 279.04559326]
[24.18004036 267.13781738]
[23.99015045 252.09028625]
[32.80020523 239.67109680]
[47.40254211 234.76417542]
[52.01654816 220.49143982]
[48.56930542 206.00123596]
[60.17640686 195.25016785]
[64.79042053 180.97743225]
[59.56368256 170.06835938]
[63.29087830 158.13975525]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.65103912 71.82990265]
[106.47703552 57.62744522]
[111.30303955 43.42499161]
[102.53563690 32.78903198]
[100.18715668 19.31672287]
[104.76564789 6.54538774]
[114.97453308 -2.22517633]
[128.07752991 -4.78519154]
[133.11444092 -18.91422081]
[138.15135193 -33.04325104]
[143.18827820 -47.17227936]
[148.22518921 -61.30131149]
[153.26210022 -75.43033600]
[158.29902649 -89.55937195]
[163.33593750 -103.68840027]
[168.26753235 -117.85453033]
[173.09353638 -132.05699158]
[177.91952515 -146.25944519]
[182.63966370 -160.49743652]
[187.25367737 -174.77017212]
[191.86767578 -189.04290771]
[196.48168945 -203.31562805]
[201.09570312 -217.58836365]
[191.19438171 -227.46899414]
[186.53836060 -240.58911133]
[187.98255920 -254.36926270]
[195.18844604 -266.12615967]
[206.70114136 -273.59518433]
[220.24290466 -275.36657715]
[225.06889343 -289.56906128]
[229.89489746 -303.77151489]
[234.72088623 -317.97396851]
[239.54689026 -332.17642212]
[225.14318848 -327.98910522]
[212.80142212 -336.51440430]
[211.61947632 -351.46777344]
[222.46864319 -361.82614136]
[237.35131836 -359.95370483]
[245.29635620 -347.23239136]
[251.16531372 -361.03659058]
[257.03427124 -374.84075928]
[262.90322876 -388.64492798]
[268.77218628 -402.44909668]
[274.64114380 -416.25329590]
[280.51013184 -430.05746460]
[267.63494873 -437.80184937]
[255.96290588 -447.26284790]
[245.72125244 -458.25622559]
[237.10931396 -470.56802368]
[230.29472351 -483.95861816]
[225.41012573 -498.16729736]
[222.55061340 -512.91754150]
[221.77185059 -527.92218018]
[223.08897400 -542.88916016]
[226.47636414 -557.52722168]
[231.86808777 -571.55133057]
[239.15916443 -584.68853760]
[248.20771790 -596.68310547]
[258.83758545 -607.30157471]
[270.84182739 -616.33728027]
[283.98684692 -623.61431885]
[298.01672363 -628.99102783]
[312.65835571 -632.36273193]
[327.62677002 -633.66381836]
[342.63058472 -632.86901855]
[357.37774658 -629.99371338]
[371.58117676 -625.09387207]
[384.96444702 -618.26495361]
[397.26702881 -609.63983154]
[408.24945068 -599.38641357]
[417.69790649 -587.70428467]
[425.42852783 -574.82080078]
[431.29080200 -560.98681641]
[435.17065430 -546.47149658]
[436.99249268 -531.55755615]
[436.72091675 -516.53515625]
[434.36120605 -501.69674683]
[429.95925903 -487.33120728]
[423.60079956 -473.71810913]
[415.40957642 -461.12246704]
[405.54504395 -449.78948975]
[394.19918823 -439.93969727]
[381.59292603 -431.76489258]
[367.97155762 -425.42413330]
[353.60028076 -421.04092407]
[338.75885010 -418.70053101]
[323.73611450 -418.44851685]
[308.82449341 -420.28976440]
[294.31430054 -424.18850708]
[288.44534302 -410.38433838]
[282.57638550 -396.58013916]
[276.70742798 -382.77597046]
[270.83843994 -368.97180176]
[264.96948242 -355.16760254]
[259.10052490 -341.36343384]
[253.74934387 -327.35040283]
[248.92333984 -313.14794922]
[244.09735107 -298.94549561]
[239.27134705 -284.74304199]
[234.44535828 -270.54058838]
[245.38981628 -258.65231323]
[248.86557007 -242.77545166]
[243.83145142 -227.22312927]
[231.57136536 -216.26933289]
[215.36843872 -212.97436523]
[210.75442505 -198.70162964]
[206.14041138 -184.42889404]
[201.52641296 -170.15615845]
[196.91239929 -155.88342285]
[197.84600830 -148.55197144]
[192.12197876 -141.43344116]
[187.29598999 -127.23099518]
[182.46998596 -113.02853394]
[183.29434204 -105.68399811]
[177.46496582 -98.65148163]
[172.42805481 -84.52245331]
[167.39114380 -70.39342499]
[162.35421753 -56.26439285]
[157.31730652 -42.13536453]
[152.28039551 -28.00633430]
[147.24346924 -13.87730503]
[142.20655823 0.25172448]
[151.90518188 13.49612141]
[151.79728699 30.07774162]
[141.72727966 43.46043396]
[125.50549316 48.25098801]
[120.67949677 62.45344543]
[115.85349274 76.65589905]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[92.70197296 174.54837036]
[79.06314850 185.59143066]
[74.44914246 199.86416626]
[77.56636047 215.37524414]
[66.28928375 225.10545349]
[61.67527390 239.37817383]
[70.64193726 251.90435791]
[70.51493835 267.13055420]
[61.55255890 279.21939087]
[47.36022186 283.65960693]
[42.74621201 297.93234253]
[38.13220215 312.20507812]
[33.51819229 326.47781372]
[33.85615540 335.60598755]
[28.72778130 340.92779541]
[23.90178490 355.13024902]
[19.07578659 369.33270264]
[32.35065842 376.38775635]
[44.32183075 385.48101807]
[54.67921829 396.37692261]
[63.15454102 408.79324341]
[69.52826691 422.40835571]
[73.63530731 436.86962891]
[75.36927032 451.80249023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 203]
[31 202]
[32 201]
[33 199]
[34 198]
[35 197]
[36 196]
[40 192]
[41 191]
[43 189]
[44 188]
[47 186]
[48 185]
[49 184]
[50 183]
[52 181]
[53 180]
[54 179]
[55 178]
[60 174]
[61 173]
[62 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 165]
[69 164]
[70 163]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[91 147]
[92 146]
[93 145]
[94 144]
[95 143]
[96 142]
[97 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
