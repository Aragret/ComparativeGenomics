%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[92.38658142 742.78729248]
[78.06970215 747.44781494]
[63.09665298 749.02947998]
[48.12200546 747.46307373]
[33.80038071 742.81713867]
[20.75785828 735.29473877]
[9.56460190 725.22479248]
[0.70993471 713.04736328]
[-5.41905689 699.29498291]
[-8.55443954 684.56866455]
[-8.55914783 669.51232910]
[-5.43297625 654.78411865]
[0.68741333 641.02783203]
[9.53446293 628.84497070]
[20.72141838 618.76794434]
[33.75923157 611.23742676]
[48.07794952 606.58251953]
[63.05161667 605.00677490]
[64.61213684 590.08819580]
[66.17266083 575.16955566]
[67.73318481 560.25097656]
[69.29370880 545.33233643]
[70.85423279 530.41375732]
[71.74704742 515.44036865]
[71.97037506 500.44201660]
[64.42342377 487.60095215]
[72.36533356 473.91751099]
[72.58866119 458.91915894]
[72.81198883 443.92083740]
[65.26502991 431.07977295]
[73.20693970 417.39633179]
[73.43026733 402.39797974]
[73.65359497 387.39965820]
[66.10664368 374.55859375]
[74.04854584 360.87515259]
[74.04854584 345.87515259]
[73.82521820 330.87680054]
[73.60189056 315.87847900]
[73.37856293 300.88012695]
[63.67272568 312.31677246]
[49.12595367 315.97619629]
[35.16384125 310.49356079]
[26.99390602 297.91372681]
[27.66333580 282.92868042]
[36.92244720 271.12744141]
[51.31782150 266.91162109]
[65.48033905 271.85360718]
[74.12808228 284.11123657]
[75.68860626 269.19262695]
[77.24913025 254.27403259]
[78.80965424 239.35542297]
[66.67516327 230.71714783]
[60.45235443 217.07411194]
[61.90355301 202.04878235]
[70.73869324 189.68605042]
[84.66646576 183.36430359]
[86.22698212 168.44569397]
[87.67640686 153.51588440]
[89.01464081 138.57571411]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.69956970 78.76348114]
[94.59238434 63.79007339]
[95.48520660 48.81666565]
[96.04341125 33.82705688]
[96.26673889 18.82871819]
[96.49006653 3.83038139]
[88.95909119 -10.08345795]
[96.88502502 -22.69412231]
[97.10835266 -37.69245911]
[97.33168030 -52.69079590]
[89.80069733 -66.60463715]
[97.72663116 -79.21530151]
[97.39165497 -94.21156311]
[96.49884033 -109.18496704]
[95.60602570 -124.15837097]
[94.71321106 -139.13177490]
[93.70894623 -154.09812927]
[92.59329987 -169.05657959]
[91.47765350 -184.01502991]
[80.75960541 -198.98851013]
[88.99035645 -214.48759460]
[87.65212250 -229.42778015]
[76.71233368 -244.24000549]
[84.71141052 -259.85992432]
[83.15089417 -274.77853394]
[81.59037018 -289.69714355]
[72.45935059 -302.61746216]
[78.83058929 -316.08062744]
[77.27006531 -330.99923706]
[62.38655853 -333.52584839]
[48.73714066 -339.97534180]
[37.33468628 -349.86911011]
[29.02533340 -362.47296143]
[24.42569351 -376.85162354]
[23.87708855 -391.93811035]
[27.42022896 -406.61285400]
[34.79219055 -419.78695679]
[45.44592667 -430.48278809]
[58.59085464 -437.90661621]
[73.25154114 -441.50756836]
[88.34005737 -441.01846313]
[102.73674011 -436.47552490]
[115.37325287 -428.21594238]
[125.31189728 -416.85256958]
[131.81513977 -403.22869873]
[134.40042114 -388.35525513]
[132.87588501 -373.33599854]
[127.35464478 -359.28543091]
[118.24643707 -347.24618530]
[106.22714233 -338.11169434]
[92.18866730 -332.55975342]
[93.74919128 -317.64114380]
[102.76858521 -305.78790283]
[96.50897217 -291.25765991]
[98.06949615 -276.33905029]
[99.63002014 -261.42044067]
[108.82641602 -253.56214905]
[110.24861145 -241.14598083]
[102.59230804 -230.76600647]
[103.93054199 -215.82582092]
[113.00891876 -207.83146667]
[114.24610138 -195.39550781]
[106.43610382 -185.13067627]
[107.55175781 -170.17222595]
[108.66740417 -155.21377563]
[112.29969025 -148.77728271]
[109.68661499 -140.02459717]
[110.57942963 -125.05118561]
[111.47224426 -110.07778168]
[112.36506653 -95.10437775]
[124.12213135 -104.41949463]
[138.76908875 -101.18430328]
[145.50875854 -87.78366852]
[139.37289429 -74.09603882]
[124.88462830 -70.21142578]
[112.72496796 -78.99197388]
[120.27192688 -66.15091705]
[112.33001709 -52.46746826]
[112.10668945 -37.46913147]
[111.88336182 -22.47079468]
[119.43031311 -9.62973690]
[111.48841095 4.05370903]
[111.26508331 19.05204582]
[111.04174805 34.05038452]
[113.22200012 36.82145691]
[114.16838074 40.78622818]
[113.33445740 45.35327148]
[110.45861053 49.70948029]
[109.56579590 64.68288422]
[108.67298126 79.65629578]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[103.95482635 139.91394043]
[102.61659241 154.85412598]
[104.96790314 163.68074036]
[101.14559174 170.00622559]
[99.58506775 184.92483521]
[111.90312195 193.99195862]
[117.98866272 207.91542053]
[116.29909515 222.91581726]
[107.38768768 234.97578430]
[93.72825623 240.91595459]
[92.16773224 255.83454895]
[90.60720825 270.75317383]
[89.04669189 285.67175293]
[88.37689972 300.65679932]
[88.60022736 315.65515137]
[88.82356262 330.65347290]
[89.04689026 345.65182495]
[92.10406494 351.51400757]
[91.78909302 357.18832397]
[89.04689026 361.09848022]
[96.57786560 375.01229858]
[88.65193176 387.62298584]
[88.42860413 402.62130737]
[88.20527649 417.61965942]
[95.73625183 431.53347778]
[87.81032562 444.14416504]
[87.58699799 459.14248657]
[87.36367035 474.14083862]
[94.89464569 488.05465698]
[86.96871185 500.66534424]
[86.74538422 515.66369629]
[98.23502350 506.02062988]
[113.18945312 507.18893433]
[123.04210663 518.49932861]
[122.14893341 533.47271729]
[111.02157593 543.53167725]
[96.03430176 542.91394043]
[85.77283478 531.97424316]
[84.21231079 546.89288330]
[82.65179443 561.81146240]
[81.09127045 576.73010254]
[79.53074646 591.64868164]
[77.97022247 606.56732178]
[92.29367065 611.20758057]
[105.33915710 618.72485352]
[116.53636932 628.79046631]
[125.39582825 640.96435547]
[131.53022766 654.71435547]
[134.67140198 669.43939209]
[134.68203735 684.49572754]
[131.56166077 699.22515869]
[125.44668579 712.98382568]
[116.60442352 725.17022705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 200]
[19 199]
[20 198]
[21 197]
[22 196]
[23 195]
[24 188]
[25 187]
[27 185]
[28 184]
[29 183]
[31 181]
[32 180]
[33 179]
[35 177]
[36 174]
[37 173]
[38 172]
[39 171]
[48 170]
[49 169]
[50 168]
[51 167]
[56 162]
[57 161]
[58 159]
[59 158]
[60 157]
[61 156]
[62 153]
[63 152]
[64 151]
[65 150]
[66 146]
[67 145]
[68 144]
[70 142]
[71 141]
[72 140]
[74 138]
[75 132]
[76 131]
[77 130]
[78 129]
[79 127]
[80 126]
[81 125]
[83 122]
[84 121]
[86 118]
[87 117]
[88 116]
[90 114]
[91 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
