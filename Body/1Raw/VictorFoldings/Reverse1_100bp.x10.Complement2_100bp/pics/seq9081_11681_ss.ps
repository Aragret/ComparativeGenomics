%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[38.11605835 490.47900391]
[42.47456741 504.86474609]
[44.52886200 519.75524902]
[44.22835541 534.78375244]
[41.58045197 549.58020020]
[36.65035629 563.78021240]
[29.55947304 577.03411865]
[20.48242760 589.01550293]
[9.64274502 599.42932129]
[-2.69263434 608.01916504]
[-16.21994209 614.57342529]
[-30.60605621 618.93072510]
[-45.49670410 620.98382568]
[-60.52519226 620.68206787]
[-75.32142639 618.03295898]
[-89.52104187 613.10168457]
[-102.77436066 606.00970459]
[-114.75499725 596.93164062]
[-125.16793060 586.09112549]
[-133.75672913 573.75500488]
[-140.30987549 560.22717285]
[-144.66601562 545.84069824]
[-146.71784973 530.94989014]
[-146.41487122 515.92144775]
[-143.76452637 501.12539673]
[-138.83207703 486.92620850]
[-131.73901367 473.67346191]
[-122.65998840 461.69357300]
[-111.81858826 451.28155518]
[-99.48178864 442.69375610]
[-85.95339966 436.14172363]
[-71.56657410 431.78677368]
[-56.67558289 429.73617554]
[-41.64714432 430.04040527]
[-26.85134697 432.69195557]
[-12.65254498 437.62557983]
[-5.57543945 424.40005493]
[1.50166595 411.17453003]
[8.57877159 397.94900513]
[15.65587711 384.72348022]
[14.83870125 369.85128784]
[28.17171097 361.33416748]
[35.24881744 348.10864258]
[42.32592392 334.88311768]
[49.40302658 321.65759277]
[54.54498672 307.56643677]
[57.64909744 292.89114380]
[52.71307373 278.83819580]
[63.13870621 266.93792725]
[66.24281311 252.26261902]
[69.34692383 237.58732605]
[72.45103455 222.91201782]
[75.55514526 208.23670959]
[78.22093964 193.47549438]
[80.44606018 178.64144897]
[82.67117310 163.80741882]
[84.89629364 148.97337341]
[87.12140656 134.13932800]
[81.35768890 120.40510559]
[91.05651855 107.90537262]
[81.78211975 119.69458008]
[68.91252899 127.40000916]
[54.14096451 130.00787354]
[39.41088486 127.17507935]
[26.66028404 119.27430725]
[17.56672096 107.34505463]
[13.32661057 92.95681763]
[14.49781227 78.00260925]
[20.92623520 64.44992065]
[31.76610756 54.08183670]
[45.59126282 48.26245880]
[60.58275604 47.75742722]
[74.76820374 52.63318634]
[86.28127289 62.24824524]
[93.60720825 75.33757782]
[95.78207397 90.18144226]
[101.23742676 76.20864105]
[106.69278717 62.23584366]
[112.14813995 48.26304626]
[117.60350037 34.29024887]
[123.05886078 20.31745148]
[128.51422119 6.34465313]
[133.96957397 -7.62814474]
[134.17552185 -16.76025200]
[139.61157227 -21.76737213]
[145.27435303 -35.65739822]
[150.93714905 -49.54742813]
[156.59992981 -63.43745422]
[160.78694153 -77.84123230]
[163.45272827 -92.60245514]
[161.89826965 -101.60364532]
[166.26966858 -107.56288910]
[169.15493774 -122.28278351]
[172.04022217 -137.00267029]
[173.71176147 -151.90925598]
[174.15837097 -166.90260315]
[174.49334717 -181.89886475]
[174.71667480 -196.89720154]
[174.94000244 -211.89553833]
[175.16333008 -226.89387512]
[161.68800354 -234.15159607]
[153.13865662 -246.84675598]
[151.47984314 -262.06210327]
[157.09275818 -276.30126953]
[168.68759155 -286.29217529]
[183.59992981 -289.73901367]
[198.40303040 -285.84973145]
[209.69525146 -275.51800537]
[214.88172913 -261.11804199]
[212.77062988 -245.95881653]
[203.84709167 -233.52383423]
[190.16166687 -226.67054749]
[189.93833923 -211.67221069]
[189.71501160 -196.67387390]
[189.49168396 -181.67553711]
[192.53524780 -174.94065857]
[189.15171814 -166.45599365]
[188.70510864 -151.46264648]
[197.52810669 -163.59336853]
[210.93681335 -170.31698608]
[225.93565369 -170.13139343]
[239.17388916 -163.07806396]
[247.69403076 -150.73274231]
[249.59268188 -135.85339355]
[244.44566345 -121.76409149]
[233.40283203 -111.61244202]
[218.93119812 -107.66634369]
[204.26374817 -110.80735779]
[192.67723083 -120.33377838]
[186.76010132 -134.11740112]
[183.87483215 -119.39751434]
[180.98956299 -104.67761993]
[178.21395874 -89.93666077]
[175.54815674 -75.17543793]
[185.34246826 -86.53639984]
[198.70414734 -93.35298157]
[213.65104675 -94.61398315]
[227.96589661 -90.13234711]
[239.52516174 -80.57289124]
[246.61412048 -67.35370636]
[248.18113708 -52.43578720]
[243.99377441 -38.03210831]
[234.67318726 -26.27937126]
[221.60205078 -18.92103004]
[206.71937561 -17.04864693]
[192.23291016 -20.93997955]
[180.29165649 -30.01777267]
[172.66700745 -42.93538666]
[170.48995972 -57.77466583]
[164.82716370 -43.88463974]
[159.16438293 -29.99461365]
[153.50160217 -16.10458565]
[147.94236755 -2.17278767]
[142.48701477 11.80000973]
[137.03166199 25.77280807]
[131.57629395 39.74560547]
[126.12094116 53.71840286]
[120.66558075 67.69120026]
[115.21022797 81.66400146]
[109.75486755 95.63679504]
[105.89056396 110.13049316]
[111.49512482 124.92574310]
[101.95545197 136.36444092]
[99.73033905 151.19848633]
[97.50521851 166.03253174]
[95.28009796 180.86657715]
[93.05498505 195.70062256]
[94.78707123 199.68231201]
[95.12776947 203.61276245]
[94.26403046 207.06085205]
[92.50363922 209.70048523]
[90.23044586 211.34082031]
[87.12633514 226.01612854]
[84.02222443 240.69143677]
[80.91811371 255.36672974]
[77.81401062 270.04202271]
[82.52800751 285.14465332]
[72.32440186 295.99523926]
[69.22029114 310.67056274]
[78.73538208 299.07473755]
[91.21244049 290.74868774]
[105.57208252 286.41271973]
[120.57205963 286.44192505]
[134.91470337 290.83377075]
[147.35925293 299.20831299]
[156.82913208 310.84109497]
[162.50508118 324.72576904]
[163.89608765 339.66113281]
[160.88182068 354.35513306]
[153.72302246 367.53662109]
[143.03901672 378.06527710]
[129.75408936 385.03021240]
[115.01749420 387.82891846]
[100.10411072 386.21929932]
[86.30408478 380.34057617]
[74.81126404 370.70132446]
[66.61988831 358.13546753]
[62.43859863 343.73001099]
[62.62855530 328.73468018]
[55.55144882 341.96020508]
[48.47434616 355.18576050]
[41.39723969 368.41128540]
[41.70821381 384.22943115]
[28.88140488 391.80056763]
[21.80429840 405.02609253]
[14.72719383 418.25161743]
[7.65008831 431.47714233]
[0.57298267 444.70266724]
[12.55512142 453.77874756]
[22.96984291 464.61755371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 208]
[37 207]
[38 206]
[39 205]
[40 204]
[42 202]
[43 201]
[44 200]
[45 199]
[46 179]
[47 178]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 167]
[55 166]
[56 165]
[57 164]
[58 163]
[60 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 156]
[81 155]
[82 154]
[83 153]
[85 152]
[86 151]
[87 150]
[88 149]
[89 134]
[90 133]
[92 132]
[93 131]
[94 130]
[95 118]
[96 117]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
