%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[323.44174194 369.60537720]
[333.10739136 358.11386108]
[322.78073120 347.23452759]
[312.45407104 336.35519409]
[302.12738037 325.47586060]
[291.80072021 314.59652710]
[279.72052002 313.96801758]
[271.02816772 304.98876953]
[270.77536011 292.09307861]
[260.61181641 281.06118774]
[250.44828796 270.02932739]
[240.28472900 258.99743652]
[223.27624512 254.67561340]
[219.39199829 236.67578125]
[209.06532288 225.79644775]
[194.69152832 221.89219666]
[190.80265808 206.55638123]
[180.47598267 195.67704773]
[170.14932251 184.79771423]
[159.82264709 173.91838074]
[149.49597168 163.03904724]
[139.16931152 152.15971375]
[128.84263611 141.28038025]
[118.51597595 130.40103149]
[108.18930054 119.52170563]
[95.56936646 120.70099640]
[84.53768158 114.45954895]
[79.04882050 103.03475189]
[81.07037354 90.52207947]
[70.90682983 79.49020386]
[60.74328232 68.45832825]
[50.57973480 57.42644882]
[40.41618729 46.39456940]
[32.29997635 42.20352173]
[30.18495178 35.12196350]
[20.18678093 23.93998718]
[5.22046089 18.80970001]
[2.50505018 4.16470671]
[-7.49312210 -7.01726770]
[-17.49129486 -18.19924164]
[-27.48946571 -29.38121796]
[-42.45578384 -34.51150513]
[-45.17119598 -49.15649796]
[-55.16936874 -60.33847046]
[-65.16754150 -71.52044678]
[-77.17488098 -62.51460266]
[-89.91195679 -54.57431030]
[-103.28448486 -47.75836563]
[-117.19343567 -42.11722946]
[-131.53584290 -37.69266510]
[-146.20552063 -34.51743317]
[-161.09384155 -32.61503983]
[-176.09060669 -31.99957466]
[-191.08474731 -32.67559052]
[-205.96527100 -34.63808441]
[-220.62200928 -37.87252426]
[-234.94642639 -42.35496521]
[-248.83248901 -48.05222321]
[-262.17739868 -54.92210770]
[-274.88229370 -62.91376495]
[-286.85317993 -71.96801758]
[-298.00137329 -82.01784515]
[-308.24438477 -92.98882294]
[-317.50634766 -104.79973602]
[-325.71868896 -117.36312866]
[-332.82058716 -130.58599854]
[-338.75952148 -144.37043762]
[-343.49145508 -158.61439514]
[-346.98138428 -173.21238708]
[-349.20349121 -188.05638123]
[-350.14126587 -203.03642273]
[-349.78784180 -218.04164124]
[-348.14578247 -232.96092224]
[-345.22723389 -247.68382263]
[-341.05386353 -262.10131836]
[-335.65649414 -276.10668945]
[-329.07516479 -289.59619141]
[-321.35855103 -302.47003174]
[-312.56378174 -314.63284302]
[-302.75601196 -325.99456787]
[-292.00781250 -336.47109985]
[-280.39880371 -345.98486328]
[-268.01489258 -354.46545410]
[-254.94778442 -361.85006714]
[-241.29423523 -368.08401489]
[-227.15533447 -373.12115479]
[-212.63574219 -376.92419434]
[-197.84297180 -379.46493530]
[-182.88655090 -380.72463989]
[-167.87721252 -380.69393921]
[-152.92607117 -379.37304688]
[-138.14381409 -376.77178955]
[-123.63991547 -372.90936279]
[-109.52173615 -367.81442261]
[-95.89380646 -361.52465820]
[-82.85703278 -354.08666992]
[-70.50793457 -345.55548096]
[-58.93793488 -335.99426270]
[-48.23270416 -325.47384644]
[-38.47149658 -314.07208252]
[-29.72657967 -301.87338257]
[-22.06270409 -288.96810913]
[-15.53660870 -275.45175171]
[-10.19661236 -261.42443848]
[-6.08224964 -246.98997498]
[-3.22398424 -232.25526428]
[-1.64297688 -217.32939148]
[-1.35093343 -202.32284546]
[-2.35001612 -187.34675598]
[-4.63282776 -172.51199341]
[-8.18246746 -157.92839050]
[-12.97265339 -143.70391846]
[-18.96792030 -129.94389343]
[-26.12388229 -116.75019836]
[-34.38755798 -104.22051239]
[-43.69776154 -92.44759369]
[-53.98556519 -81.51861572]
[-43.98739243 -70.33664703]
[-33.98921967 -59.15467072]
[-19.73803902 -54.82419205]
[-16.30749130 -39.37939072]
[-6.30931950 -28.19741440]
[3.68885279 -17.01543999]
[13.68702507 -5.83346510]
[27.93820763 -1.50298715]
[31.36875534 13.94181538]
[41.36692810 25.12378883]
[51.44806671 36.23102188]
[61.61161423 47.26290131]
[71.77516174 58.29477692]
[81.93870544 69.32665253]
[92.10225677 80.35853577]
[108.60311890 80.65709686]
[119.87548828 92.71120453]
[119.06864166 109.19503784]
[129.39530945 120.07437134]
[139.72196960 130.95370483]
[150.04864502 141.83303833]
[160.37530518 152.71237183]
[170.70198059 163.59170532]
[181.02865601 174.47103882]
[191.35531616 185.35037231]
[201.68199158 196.22970581]
[216.79441833 200.91212463]
[219.94465637 215.46977234]
[230.27133179 226.34910583]
[243.12117004 227.46469116]
[251.49829102 236.73870850]
[251.31660461 248.83389282]
[261.48016357 259.86578369]
[271.64370728 270.89764404]
[281.80725098 281.92953491]
[299.50665283 287.01016235]
[302.68005371 304.26983643]
[313.00671387 315.14916992]
[323.33340454 326.02850342]
[333.66006470 336.90783691]
[343.98672485 347.78717041]
[355.96612549 338.73321533]
[368.88391113 331.07745361]
[382.57766724 324.91622925]
[396.87518311 320.32696533]
[411.59661865 317.36740112]
[426.55688477 316.07476807]
[441.56777954 316.46530151]
[456.44058228 318.53408813]
[470.98822021 322.25515747]
[485.02774048 327.58163452]
[498.38259888 334.44662476]
[510.88485718 342.76370239]
[522.37725830 352.42834473]
[532.71520996 363.31896973]
[541.76885986 375.29861450]
[549.42419434 388.21664429]
[555.58502197 401.91058350]
[560.17388916 416.20825195]
[563.13299561 430.92977905]
[564.42517090 445.89007568]
[564.03417969 460.90097046]
[561.96496582 475.77371216]
[558.24346924 490.32122803]
[552.91656494 504.36059570]
[546.05120850 517.71527100]
[537.73370361 530.21722412]
[528.06872559 541.70935059]
[517.17779541 552.04699707]
[505.19787598 561.10028076]
[492.27963257 568.75524902]
[478.58551025 574.91564941]
[464.28771973 579.50408936]
[449.56610107 582.46276855]
[434.60577393 583.75451660]
[419.59487915 583.36303711]
[404.72219849 581.29339600]
[390.17477417 577.57147217]
[376.13555908 572.24407959]
[362.78112793 565.37835693]
[350.27938843 557.06048584]
[338.78756714 547.39520264]
[328.45022583 536.50390625]
[319.39733887 524.52374268]
[311.74273682 511.60525513]
[305.58273315 497.91094971]
[300.99475098 483.61303711]
[298.03649902 468.89129639]
[296.74520874 453.93093872]
[297.13708496 438.92007446]
[299.20724487 424.04745483]
[302.92959595 409.50015259]
[308.25735474 395.46109009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 158]
[3 157]
[4 156]
[5 155]
[6 154]
[9 152]
[10 151]
[11 150]
[12 149]
[14 146]
[15 145]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[29 132]
[30 131]
[31 130]
[32 129]
[33 128]
[35 127]
[36 126]
[38 124]
[39 123]
[40 122]
[41 121]
[43 119]
[44 118]
[45 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
