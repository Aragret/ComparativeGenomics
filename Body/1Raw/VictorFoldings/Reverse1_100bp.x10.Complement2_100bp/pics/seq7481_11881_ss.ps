%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[133.08399963 449.23898315]
[130.49107361 434.03106689]
[136.55279541 419.84448242]
[149.33489990 411.20611572]
[148.88829041 396.21276855]
[148.44168091 381.21942139]
[147.99507141 366.22607422]
[147.54847717 351.23272705]
[147.10186768 336.23937988]
[146.65525818 321.24603271]
[144.65124512 306.38049316]
[141.11157227 291.80410767]
[130.58943176 281.26211548]
[134.85166931 266.02584839]
[131.31199646 251.44947815]
[127.66391754 236.89985657]
[123.90761566 222.37779236]
[120.15131378 207.85574341]
[116.39501190 193.33367920]
[112.63871002 178.81161499]
[108.88241577 164.28956604]
[105.12611389 149.76750183]
[89.50534821 148.91772461]
[74.91065979 143.28517151]
[62.76900101 133.42056274]
[54.26747894 120.28836823]
[50.23730469 105.17254639]
[51.07250595 89.55099487]
[56.69143295 74.95105743]
[66.54470825 62.80020142]
[79.66896820 54.28643036]
[75.69686890 39.82190704]
[71.72477722 25.35738373]
[67.75267792 10.89285946]
[63.78058243 -3.57166457]
[60.93492126 11.15593529]
[55.22135925 25.02515411]
[46.86746597 37.48358536]
[36.20597839 48.03501129]
[23.66153336 56.25918198]
[9.73377609 61.82852173]
[-5.02255917 64.52120972]
[-20.01973152 64.22999573]
[-34.66041183 60.96648788]
[-48.36146545 54.86065674]
[-60.57718277 46.15570450]
[-70.82102203 35.19834137]
[-78.68496704 22.42499733]
[-83.85581207 8.34442902]
[-86.12758636 -6.48254013]
[-85.40982819 -21.46535683]
[-81.73110199 -36.00726318]
[-75.23795319 -49.52906036]
[-66.18898010 -61.49217606]
[-54.94461823 -71.42012787]
[-41.95271301 -78.91748810]
[-27.73073387 -83.68564606]
[-12.84513474 -85.53467560]
[2.11119699 -84.39094543]
[16.54255676 -80.29999542]
[29.87414742 -73.42477417]
[41.57497787 -64.03911591]
[51.17900848 -52.51684952]
[58.30371857 -39.31690598]
[62.66451263 -24.96912575]
[65.11024475 -39.76839828]
[67.55596924 -54.56766891]
[70.00169373 -69.36693573]
[72.44742584 -84.16620636]
[58.91920471 -77.68644714]
[45.35255814 -84.08535767]
[41.74830627 -98.64589691]
[50.76337051 -110.63458252]
[65.75218201 -111.21379852]
[75.66509247 -99.95816040]
[79.20476532 -114.53453064]
[82.74443817 -129.11091614]
[81.72849274 -138.18865967]
[86.44684601 -143.87715149]
[90.20314026 -158.39921570]
[93.95944214 -172.92127991]
[97.71574402 -187.44332886]
[89.95627594 -200.94993591]
[93.97257233 -215.62387085]
[106.89688110 -222.93809509]
[110.65318298 -237.46015930]
[114.40947723 -251.98220825]
[118.16577911 -266.50427246]
[121.92208099 -281.02633667]
[107.95332336 -286.54476929]
[94.76860809 -293.73803711]
[82.56782532 -302.49707031]
[71.53593445 -312.68908691]
[61.84017563 -324.15954590]
[53.62752533 -336.73461914]
[47.02249527 -350.22360229]
[42.12521362 -364.42205811]
[39.00991821 -379.11474609]
[37.72384262 -394.07888794]
[38.28647614 -409.08764648]
[40.68929291 -423.91351318]
[44.89587021 -438.33169556]
[50.84243011 -452.12365723]
[58.43883133 -465.08029175]
[67.56990814 -477.00518799]
[78.09723663 -487.71755981]
[89.86123657 -497.05502319]
[102.68354797 -504.87600708]
[116.36981201 -511.06195068]
[130.71252441 -515.51910400]
[145.49427795 -518.17987061]
[160.49095154 -519.00390625]
[175.47523499 -517.97869873]
[190.21995544 -515.11987305]
[204.50158691 -510.47070312]
[218.10360718 -504.10168457]
[230.81983948 -496.10937500]
[242.45750427 -486.61492920]
[252.84016418 -475.76229858]
[261.81042480 -463.71597290]
[269.23233032 -450.65856934]
[274.99331665 -436.78808594]
[279.00604248 -422.31475830]
[281.20974731 -407.45797729]
[281.57095337 -392.44302368]
[280.08422852 -377.49746704]
[276.77209473 -362.84793091]
[271.68475342 -348.71646118]
[264.89935303 -335.31729126]
[256.51873779 -322.85354614]
[246.66995239 -311.51419067]
[235.50230408 -301.47109985]
[223.18510437 -292.87655640]
[209.90507507 -285.86083984]
[195.86352539 -280.53030396]
[181.27334595 -276.96572876]
[166.35569763 -275.22122192]
[151.33673096 -275.32315063]
[136.44413757 -277.27001953]
[132.68783569 -262.74798584]
[128.93153381 -248.22590637]
[125.17523956 -233.70385742]
[121.41893768 -219.18179321]
[129.17573547 -206.51815796]
[125.57318115 -191.73721313]
[112.23780060 -183.68704224]
[108.48150635 -169.16497803]
[104.72520447 -154.64291382]
[100.96890259 -140.12084961]
[97.32081604 -125.57123566]
[93.78114319 -110.99485779]
[90.24147034 -96.41848755]
[87.24669647 -81.72048187]
[84.80096436 -66.92121124]
[82.35523987 -52.12194061]
[79.90951538 -37.32266998]
[77.46378326 -22.52339745]
[78.24510956 -7.54376078]
[82.21720123 6.92076302]
[86.18930054 21.38528633]
[90.16139221 35.84981155]
[94.13349152 50.31433487]
[108.36692047 50.67378235]
[121.92272949 55.02806091]
[133.70306396 63.02453232]
[142.75384521 74.01557922]
[148.34207153 87.11104584]
[150.01518250 101.25036621]
[147.63764954 115.28842163]
[141.40203857 128.08830261]
[131.81335449 138.61335754]
[119.64817047 146.01119995]
[123.40447235 160.53326416]
[127.16077423 175.05531311]
[130.91706848 189.57737732]
[134.67337036 204.09944153]
[138.42967224 218.62149048]
[142.18597412 233.14355469]
[147.36468506 240.66810608]
[145.88838196 247.90980530]
[149.42805481 262.48617554]
[160.20338440 274.07077026]
[155.68794250 288.26443481]
[159.22761536 302.84082031]
[163.58276367 288.48696899]
[173.03982544 276.84378052]
[186.19593811 269.63845825]
[201.09945679 267.93984985]
[215.53952026 271.99993896]
[227.37405396 281.21643066]
[234.84745789 294.22213745]
[236.85110474 309.08770752]
[233.08776855 323.60794067]
[224.11570740 335.62884521]
[211.26588440 343.36718750]
[196.44448853 345.67504883]
[181.85018921 342.21005249]
[169.64794922 333.48620605]
[161.64860535 320.79940796]
[162.09521484 335.79275513]
[162.54182434 350.78610229]
[162.98843384 365.77947998]
[163.43502808 380.77282715]
[163.88163757 395.76617432]
[164.32824707 410.75952148]
[177.60185242 418.62176514]
[184.49722290 432.42239380]
[182.81408691 447.75765991]
[173.08950806 459.73416138]
[158.42658997 464.53021240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[6 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 184]
[12 183]
[14 181]
[15 180]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[75 152]
[76 151]
[77 150]
[79 149]
[80 148]
[81 147]
[82 146]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
