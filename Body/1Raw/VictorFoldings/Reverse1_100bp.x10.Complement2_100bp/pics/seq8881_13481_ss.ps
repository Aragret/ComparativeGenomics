%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[204.83795166 535.17510986]
[198.41310120 521.39868164]
[197.75431824 506.21203613]
[202.96206665 491.93099976]
[213.24218750 480.73333740]
[227.02705383 474.32662964]
[226.35726929 459.34158325]
[225.68748474 444.35653687]
[225.01770020 429.37152100]
[222.79257202 414.53747559]
[219.03628540 400.01541138]
[215.27998352 385.49334717]
[211.52368164 370.97128296]
[206.80354309 356.73330688]
[201.14076233 342.84326172]
[195.47796631 328.95324707]
[189.81518555 315.06323242]
[183.33569336 301.53488159]
[176.06245422 288.41616821]
[168.78923035 275.29748535]
[161.51599121 262.17880249]
[154.24276733 249.06010437]
[146.96954346 235.94140625]
[139.69630432 222.82270813]
[132.42308044 209.70402527]
[125.14984894 196.58532715]
[117.87662506 183.46662903]
[110.60339355 170.34793091]
[103.33016205 157.22924805]
[104.05683899 172.21162415]
[101.47657776 186.98803711]
[95.71527863 200.83749390]
[87.05404663 213.08425903]
[75.91548920 223.13076782]
[62.84306717 230.48684692]
[48.47462463 234.79356384]
[33.51122665 235.84078979]
[18.68297005 233.57743835]
[4.71335697 228.11393738]
[-7.71600199 219.71684265]
[-17.99865150 208.79589844]
[-25.63287926 195.88394165]
[-30.24619293 181.61099243]
[-31.61350060 166.67343140]
[-29.66808510 151.80012512]
[-24.50487137 137.71675110]
[-16.37578011 125.11048889]
[-5.67745113 114.59642029]
[7.06812191 106.68753815]
[21.23905373 101.76974487]
[36.14391327 100.08299255]
[51.05546188 101.70957184]
[65.24612427 106.57012939]
[78.02352142 114.42749786]
[88.76419830 124.89830780]
[96.94113159 137.46574402]
[95.15866089 122.57202911]
[93.37619781 107.67830658]
[89.36759949 100.68519592]
[91.67977142 92.54979706]
[90.11924744 77.63118744]
[88.55872345 62.71258545]
[86.99819946 47.79397964]
[85.43767548 32.87537384]
[81.43245697 24.66586494]
[83.96668243 17.72327614]
[82.62844849 2.78309178]
[81.29021454 -12.15709305]
[67.66310883 -23.12620544]
[66.21392822 -40.22049332]
[77.35276794 -52.82069397]
[75.79224396 -67.73929596]
[74.23171997 -82.65790558]
[72.67119598 -97.57650757]
[70.66718292 -112.44203949]
[68.22145844 -127.24131012]
[65.77573395 -142.04057312]
[63.21989822 -156.82122803]
[60.55410385 -171.58244324]
[47.85440445 -180.60217285]
[45.36118698 -195.61012268]
[54.03837585 -207.66175842]
[51.37258148 -222.42297363]
[48.70678711 -237.18418884]
[33.65959930 -237.44569397]
[18.95261955 -240.63803101]
[5.15114880 -246.63850403]
[-7.21432495 -255.21646118]
[-17.66850471 -266.04217529]
[-25.80956078 -278.69958496]
[-31.32456970 -292.70208740]
[-34.00155258 -307.51156616]
[-33.73760986 -322.55871582]
[-30.54289246 -337.26516724]
[-24.54019165 -351.06567383]
[-15.96023560 -363.42974854]
[-5.13281727 -373.88217163]
[7.52588797 -382.02117920]
[21.52931213 -387.53393555]
[36.33920288 -390.20852661]
[51.38630295 -389.94213867]
[66.09224701 -386.74502563]
[79.89177704 -380.74011230]
[92.25447083 -372.15814209]
[102.70514679 -361.32904053]
[110.84210205 -348.66900635]
[116.35257721 -334.66470337]
[119.02477264 -319.85437012]
[118.75595856 -304.80731201]
[115.55648041 -290.10189819]
[109.54930878 -276.30334473]
[100.96535492 -263.94201660]
[90.13455200 -253.49310303]
[77.47321320 -245.35820007]
[63.46800232 -239.84999084]
[66.13379669 -225.08877563]
[68.79959106 -210.32754517]
[81.14409637 -202.07231140]
[84.05786896 -187.14031982]
[75.31532288 -174.24824524]
[77.98111725 -159.48703003]
[82.26330566 -153.46336365]
[80.57500458 -144.48631287]
[83.02072906 -129.68704224]
[85.46645355 -114.88776398]
[87.66413879 -113.14754486]
[89.30490875 -110.43195343]
[90.01381683 -106.94872284]
[89.49795532 -103.03740692]
[87.58980560 -99.13703156]
[89.15032959 -84.21842957]
[90.71085358 -69.29981995]
[92.27136993 -54.38121796]
[103.31784821 -47.74759674]
[108.60556793 -35.78423309]
[105.99913788 -22.76820564]
[96.23039246 -13.49532700]
[97.56862640 1.44485760]
[98.90686798 16.38504219]
[100.35628510 31.31485176]
[101.91680908 46.23345566]
[103.47732544 61.15206146]
[105.03784943 76.07066345]
[106.59837341 90.98927307]
[108.26991272 105.89584351]
[110.05238342 120.78955841]
[111.83484650 135.68327332]
[116.44886017 149.95600891]
[123.72208405 163.07470703]
[130.99531555 176.19340515]
[138.26853943 189.31208801]
[145.54177856 202.43078613]
[152.81500244 215.54948425]
[160.08822632 228.66818237]
[167.36146545 241.78686523]
[174.63468933 254.90556335]
[181.90792847 268.02426147]
[189.18115234 281.14294434]
[196.45437622 294.26165771]
[199.61614990 279.59866333]
[210.71551514 269.50885010]
[225.61268616 267.75549316]
[238.75138855 274.99252319]
[245.23120117 288.52072144]
[242.63533020 303.29437256]
[231.93196106 313.80331421]
[217.11318970 316.12796021]
[203.70521545 309.40042114]
[209.36799622 323.29046631]
[215.03077698 337.18048096]
[220.69357300 351.07052612]
[224.88240051 336.66726685]
[236.12303162 326.73507690]
[250.93244934 324.35159302]
[264.72180176 330.25534058]
[273.21829224 342.61694336]
[273.78918457 357.60607910]
[266.25759888 370.57818604]
[252.95727539 377.51370239]
[238.00946045 376.26358032]
[226.04573059 367.21499634]
[229.80203247 381.73706055]
[233.55833435 396.25912476]
[237.31463623 410.78115845]
[241.45558167 396.36407471]
[250.73825073 384.58139038]
[263.78564453 377.18096924]
[278.66220093 375.26065063]
[293.16113281 379.10531616]
[305.13156128 388.14459229]
[312.79779053 401.03756714]
[315.02252197 415.87167358]
[311.47579956 430.44631958]
[302.68371582 442.59948730]
[289.95050049 450.52828979]
[275.16513062 453.05654907]
[260.52084351 449.80920410]
[248.19007874 441.26800537]
[240.00273132 428.70172119]
[240.67251587 443.68676758]
[241.34230042 458.67181396]
[242.01208496 473.65682983]
[256.31356812 478.80819702]
[267.55169678 489.04403687]
[274.01275635 502.80352783]
[274.71148682 517.98840332]
[269.54135132 532.28308105]
[259.29071045 543.50775146]
[245.52276611 549.95068359]
[230.33699036 550.62945557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 202]
[7 201]
[8 200]
[9 199]
[10 184]
[11 183]
[12 182]
[13 181]
[14 171]
[15 170]
[16 169]
[17 168]
[18 159]
[19 158]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[56 147]
[57 146]
[58 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[66 139]
[67 138]
[68 137]
[71 133]
[72 132]
[73 131]
[74 130]
[75 125]
[76 124]
[77 123]
[78 121]
[79 120]
[82 117]
[83 116]
[84 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
