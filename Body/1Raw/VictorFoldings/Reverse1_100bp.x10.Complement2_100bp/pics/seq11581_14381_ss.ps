%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-11.69053268 701.97253418]
[-26.83377075 701.29571533]
[-40.83106995 695.47747803]
[-51.99219131 685.22052002]
[-58.96937180 671.76336670]
[-60.92008209 656.73107910]
[-57.60876465 641.93884277]
[-49.43527985 629.17285156]
[-37.38661575 619.97473145]
[-22.91770554 615.45513916]
[-22.24792099 600.47009277]
[-21.57813644 585.48510742]
[-20.90834999 570.50006104]
[-20.23856544 555.51501465]
[-19.56878090 540.52996826]
[-18.89899445 525.54492188]
[-21.74068832 518.72241211]
[-18.10603905 510.34225464]
[-27.66059303 521.90557861]
[-41.68193054 527.23492432]
[-56.50490952 524.93725586]
[-68.25483704 515.61315918]
[-73.86030579 501.69989014]
[-71.85607147 486.83438110]
[-62.76602173 474.90246582]
[-48.96628571 469.02307129]
[-34.06407547 470.73306274]
[-21.95479393 479.58547974]
[-15.80392265 493.26544189]
[-12.69981289 478.59014893]
[-9.59570217 463.91482544]
[-6.49159241 449.23953247]
[-3.38748217 434.56423950]
[-0.28337207 419.88891602]
[-1.97463953 412.69439697]
[2.97774386 405.01898193]
[1.23569715 400.57214355]
[2.26862931 394.98376465]
[6.62281752 390.00857544]
[10.37911797 375.48651123]
[6.07551289 361.22720337]
[17.02212143 349.80429077]
[15.41324615 345.30758667]
[16.61210823 339.75241089]
[21.11249542 334.90905762]
[25.29950714 320.50527954]
[29.48651695 306.10150146]
[33.67353058 291.69772339]
[37.86053848 277.29394531]
[36.70906067 269.99353027]
[42.21859741 262.70773315]
[46.61959839 248.36788940]
[51.02059555 234.02804565]
[55.42159271 219.68820190]
[59.82258987 205.34835815]
[64.22358704 191.00851440]
[68.62458801 176.66865540]
[73.02558136 162.32881165]
[77.42658234 147.98896790]
[81.82758331 133.64912415]
[86.22857666 119.30927277]
[90.62957764 104.96942139]
[94.38587952 90.44736481]
[97.48999023 75.77206421]
[100.59410095 61.09675980]
[99.30831909 52.05327606]
[103.85521698 46.22682571]
[107.17747498 31.59936333]
[109.84326935 16.83814621]
[111.84728241 1.97261858]
[106.02306366 -12.73754883]
[115.39137268 -24.31701279]
[117.39538574 -39.18254089]
[119.39939880 -54.04806900]
[121.40341187 -68.91359711]
[114.21823883 -79.62509155]
[116.19342804 -91.96537018]
[125.73154449 -99.40518951]
[127.95665741 -114.23922729]
[130.18177795 -129.07327271]
[132.40689087 -143.90731812]
[134.63200378 -158.74136353]
[135.97024536 -173.68154907]
[136.41685486 -188.67489624]
[136.86346436 -203.66824341]
[137.31005859 -218.66159058]
[137.75666809 -233.65495300]
[134.88415527 -242.32595825]
[138.32319641 -248.86773682]
[131.20982361 -262.99963379]
[139.50770569 -275.36871338]
[140.17749023 -290.35375977]
[140.84727478 -305.33880615]
[141.51705933 -320.32385254]
[142.18684387 -335.30886841]
[127.75846863 -339.69894409]
[114.87557983 -347.54000854]
[104.34801483 -358.33911133]
[96.83753204 -371.41748047]
[92.81626129 -385.95297241]
[92.53697205 -401.03186035]
[96.01722717 -415.70626831]
[103.03825378 -429.05377197]
[113.15870667 -440.23535156]
[125.74239349 -448.54806519]
[139.99830627 -453.46945190]
[155.03030396 -454.69006348]
[169.89346313 -452.13320923]
[183.65345764 -445.95962524]
[195.44534302 -436.55737305]
[204.52787781 -424.51751709]
[210.33009338 -410.59683228]
[212.48728943 -395.67044067]
[210.86383057 -380.67660522]
[205.56181335 -366.55786133]
[196.91448975 -354.20169067]
[185.46543884 -344.38485718]
[171.93438721 -337.72442627]
[157.17189026 -334.63909912]
[156.50210571 -319.65405273]
[155.83230591 -304.66900635]
[155.16252136 -289.68395996]
[154.49273682 -274.69894409]
[161.65402222 -261.63885498]
[153.30822754 -248.19795227]
[152.75001526 -233.20834351]
[152.30340576 -218.21499634]
[151.85681152 -203.22163391]
[151.41020203 -188.22828674]
[150.96359253 -173.23493958]
[161.17042542 -184.22677612]
[175.86608887 -187.23301697]
[189.56947327 -181.13240051]
[197.16954041 -168.20031738]
[195.83164978 -153.26010132]
[186.05482483 -141.88407898]
[171.48556519 -138.31524658]
[157.55784607 -143.88468933]
[149.46604919 -156.51625061]
[147.24093628 -141.68220520]
[145.01582336 -126.84815979]
[142.79071045 -112.01411438]
[140.56558228 -97.18006897]
[147.85922241 -81.21855927]
[136.26893616 -66.90958405]
[134.26492310 -52.04405594]
[132.26091003 -37.17852783]
[130.25689697 -22.31299973]
[136.22445679 -8.66611385]
[126.71281433 3.97663212]
[124.70880127 18.84216118]
[137.26290894 10.63276768]
[151.97254944 13.56985188]
[160.41137695 25.97091675]
[157.74522400 40.73207092]
[145.50140381 49.39745331]
[130.69372559 47.00313950]
[121.80493164 34.92162323]
[118.48267365 49.54908371]
[115.26940155 64.20087433]
[112.16529083 78.87617493]
[109.06118011 93.55147552]
[122.19111633 86.29855347]
[136.64155579 90.32155609]
[144.13465881 103.31592560]
[140.37800598 117.83789062]
[127.52359772 125.56861877]
[112.93501282 122.07959747]
[104.96942139 109.37042236]
[100.56842804 123.71027374]
[96.16742706 138.05010986]
[91.76643372 152.38996887]
[87.36543274 166.72981262]
[82.96443176 181.06965637]
[78.56343842 195.40950012]
[74.16243744 209.74935913]
[69.76143646 224.08920288]
[65.36044312 238.42904663]
[60.95944214 252.76889038]
[56.55844498 267.10873413]
[52.26432037 281.48095703]
[48.07731247 295.88473511]
[43.89030075 310.28851318]
[39.70328903 324.69229126]
[35.51627731 339.09606934]
[31.54418182 353.56060791]
[35.57910919 368.85864258]
[24.90117645 379.24282837]
[21.14487648 393.76486206]
[17.60520363 408.34124756]
[14.39193058 422.99304199]
[11.28781986 437.66833496]
[8.18371010 452.34362793]
[5.07959986 467.01895142]
[1.97548985 481.69424438]
[-1.12862027 496.36953735]
[-3.13263392 511.23507690]
[-3.91395617 526.21472168]
[-4.58374119 541.19976807]
[-5.25352621 556.18481445]
[-5.92331171 571.16979980]
[-6.59309673 586.15484619]
[-7.26288176 601.13989258]
[-7.93266678 616.12493896]
[6.07533121 621.91735840]
[17.25533485 632.15368652]
[24.25730133 645.59796143]
[26.23571205 660.62664795]
[22.95166206 675.42498779]
[14.80171776 688.20599365]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[18 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[36 190]
[39 189]
[40 188]
[42 186]
[45 185]
[46 184]
[47 183]
[48 182]
[49 181]
[51 180]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 162]
[64 161]
[65 160]
[67 159]
[68 158]
[69 151]
[70 150]
[72 148]
[73 147]
[74 146]
[75 145]
[78 143]
[79 142]
[80 141]
[81 140]
[82 139]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
