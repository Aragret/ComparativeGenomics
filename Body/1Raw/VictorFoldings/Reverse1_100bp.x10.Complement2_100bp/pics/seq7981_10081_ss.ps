%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[182.02305603 435.41464233]
[189.37214661 422.30554199]
[198.59303284 410.43823242]
[209.47973633 400.07785034]
[221.78903198 391.45587158]
[215.10884094 378.02548218]
[208.42864990 364.59512329]
[193.73466492 362.30932617]
[183.07817078 351.68374634]
[180.69390869 336.64483643]
[187.70321655 322.92712402]
[181.02302551 309.49673462]
[174.34281921 296.06637573]
[167.66262817 282.63598633]
[160.98243713 269.20559692]
[158.92654419 284.06405640]
[150.27630615 296.31857300]
[136.96423340 303.23150635]
[121.96426392 303.25848389]
[108.62741852 296.39343262]
[99.93319702 284.17007446]
[97.82390594 269.31912231]
[102.77076721 255.15832520]
[113.66863251 244.85121155]
[128.08290100 240.70043945]
[142.79338074 243.63331604]
[154.51373291 252.99461365]
[150.11273193 238.65476990]
[145.71174622 224.31492615]
[141.31074524 209.97508240]
[135.95956421 195.96205139]
[129.68218994 182.33872986]
[123.40483856 168.71542358]
[117.12747192 155.09210205]
[110.85011292 141.46878052]
[104.57275391 127.84547424]
[98.29539490 114.22215271]
[86.99069214 105.99443817]
[88.08129120 92.05520630]
[81.80393219 78.43189240]
[75.52657318 64.80857086]
[69.24920654 51.18525696]
[62.97184753 37.56193924]
[48.03158569 39.72262192]
[33.10289764 37.58801270]
[19.39443016 31.33957291]
[8.01360893 21.49146843]
[-0.12283126 8.84827614]
[-4.36268044 -5.56074190]
[-4.37053061 -20.56542969]
[-0.15429312 -34.94976807]
[7.93613482 -47.55041122]
[19.23789215 -57.35079956]
[12.96053123 -70.97411346]
[6.68317080 -84.59743500]
[0.40581018 -98.22074890]
[-12.50843430 -98.17771149]
[-24.43639946 -103.00458527]
[-33.61935806 -111.95156097]
[-38.71776962 -123.66417694]
[-39.00663376 -136.38833618]
[-34.47835922 -148.23298645]
[-25.83866310 -157.45111084]
[-31.70762253 -171.25529480]
[-37.57658386 -185.05946350]
[-50.09656525 -194.73213196]
[-47.95581818 -209.47210693]
[-53.82477951 -223.27627563]
[-60.42565918 -209.80674744]
[-74.57233429 -204.81961060]
[-88.16094971 -211.17172241]
[-93.40733337 -225.22431946]
[-87.30611420 -238.92742920]
[-73.35234833 -244.43128967]
[-59.54005432 -238.58369446]
[-64.15406799 -252.85643005]
[-68.76807404 -267.12918091]
[-73.38208008 -281.40188599]
[-77.99609375 -295.67462158]
[-92.92972565 -293.83532715]
[-107.94156647 -294.85574341]
[-122.48893738 -298.69897461]
[-136.04595947 -305.22613525]
[-148.12255859 -314.20120239]
[-158.28218079 -325.29980469]
[-166.15754700 -338.12069702]
[-171.46398926 -352.20040894]
[-174.00965881 -367.02996826]
[-173.70252991 -382.07330322]
[-170.55372620 -396.78662109]
[-164.67707825 -410.63803101]
[-156.28498840 -423.12680054]
[-145.68086243 -433.80148315]
[-133.24801636 -442.27618408]
[-119.43589020 -448.24456787]
[-104.74378204 -451.49087524]
[-89.70280457 -451.89776611]
[-74.85668182 -449.45050049]
[-60.74209213 -444.23754883]
[-47.86926270 -436.44735718]
[-36.70354462 -426.36157227]
[-27.64857101 -414.34475708]
[-21.03167152 -400.83129883]
[-17.09204292 -386.30975342]
[-15.97210026 -371.30499268]
[-17.71232986 -356.35949707]
[-22.24982262 -342.01351929]
[-29.42055130 -328.78561401]
[-38.96530151 -317.15399170]
[-50.53902817 -307.53915405]
[-63.72335815 -300.28863525]
[-59.10934830 -286.01589966]
[-54.49533844 -271.74316406]
[-49.88133240 -257.47042847]
[-45.26732254 -243.19770813]
[-40.02060318 -229.14523315]
[-34.15164185 -215.34106445]
[-22.05144882 -206.65576172]
[-23.77240753 -190.92842102]
[-17.90344620 -177.12425232]
[-12.03448582 -163.32006836]
[5.12032795 -161.85354614]
[19.24206734 -151.84904480]
[26.38818550 -135.98913574]
[24.50775528 -118.60596466]
[14.02912617 -104.49810791]
[20.30648613 -90.87479401]
[26.58384705 -77.25148010]
[32.86120987 -63.62816238]
[47.65421295 -65.85173798]
[62.48937607 -63.81475830]
[76.16325378 -57.67383957]
[87.56417847 -47.91886139]
[95.76263428 -35.33389282]
[100.08704376 -20.93418884]
[100.17874146 -5.88427687]
[96.02176666 8.59621334]
[87.94478607 21.33138847]
[76.59516144 31.28458023]
[82.87252808 44.90789413]
[89.14988708 58.53121185]
[95.42724609 72.15452576]
[101.70460510 85.77784729]
[113.00930786 94.00556183]
[111.91870880 107.94479370]
[118.19606781 121.56810760]
[124.47342682 135.19142151]
[130.75079346 148.81474304]
[137.02815247 162.43806458]
[143.30551147 176.06137085]
[149.58287048 189.68469238]
[153.12437439 175.10876465]
[163.91030884 164.68457031]
[178.59854126 161.64218140]
[192.63774109 166.92430115]
[201.67771912 178.89421082]
[202.91735840 193.84289551]
[195.97251892 207.13835144]
[182.99514771 214.66084290]
[168.00640869 214.07943726]
[155.65058899 205.57408142]
[160.05158997 219.91392517]
[164.45259094 234.25376892]
[168.85359192 248.59361267]
[174.41281128 262.52542114]
[181.09300232 275.95578003]
[187.77319336 289.38616943]
[194.45339966 302.81655884]
[201.13359070 316.24691772]
[216.30226135 318.93344116]
[226.85713196 329.90832520]
[228.90150452 344.81753540]
[221.85902405 357.91491699]
[228.53921509 371.34530640]
[235.21940613 384.77566528]
[249.52197266 380.16107178]
[264.35256958 377.72979736]
[279.37988281 377.53619385]
[294.26818848 379.58453369]
[308.68490601 383.82907104]
[322.30792236 390.17501831]
[334.83291626 398.48056030]
[345.98007202 408.56018066]
[355.50036621 420.18865967]
[363.18109131 433.10626221]
[368.85067749 447.02435303]
[372.38244629 461.63201904]
[373.69750977 476.60293579]
[372.76647949 491.60263062]
[369.61016846 506.29602051]
[364.29907227 520.35479736]
[356.95184326 533.46496582]
[347.73263550 545.33355713]
[336.84741211 555.69549561]
[324.53933716 564.31927490]
[311.08340454 571.01214600]
[296.78018188 575.62475586]
[281.94924927 578.05389404]
[266.92190552 578.24536133]
[252.03387451 576.19488525]
[237.61776733 571.94830322]
[223.99565125 565.60040283]
[211.47183228 557.29309082]
[200.32611084 547.21191406]
[190.80747986 535.58203125]
[183.12860107 522.66339111]
[177.46099854 508.74444580]
[173.93130493 494.13629150]
[172.61837769 479.16516113]
[173.55154419 464.16561890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 175]
[6 174]
[7 173]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[39 143]
[40 142]
[41 141]
[42 140]
[43 139]
[53 129]
[54 128]
[55 127]
[56 126]
[63 121]
[64 120]
[65 119]
[67 117]
[68 116]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
