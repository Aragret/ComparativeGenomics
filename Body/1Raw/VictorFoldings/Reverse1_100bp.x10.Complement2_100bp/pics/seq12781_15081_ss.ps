%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[146.64849854 560.96960449]
[151.92607117 546.84167480]
[160.55197144 534.47058105]
[171.98399353 524.63391113]
[185.50349426 517.95007324]
[182.39938354 503.27478027]
[179.29527283 488.59945679]
[176.19116211 473.92416382]
[173.08705139 459.24887085]
[169.76480103 444.62139893]
[159.24264526 434.07940674]
[163.50489807 418.84313965]
[159.96522522 404.26675415]
[156.42555237 389.69036865]
[144.59185791 384.59204102]
[137.75321960 373.44238281]
[138.59733582 360.19482422]
[147.03962708 349.69995117]
[143.71737671 335.07250977]
[140.39511108 320.44503784]
[137.07284546 305.81756592]
[122.50718689 306.35317993]
[108.08827972 304.19427490]
[94.31046295 299.41326904]
[81.64637756 292.17257690]
[70.53074646 282.71905518]
[61.34545517 271.37542725]
[54.40645218 258.52951050]
[49.95286179 244.62075806]
[48.13874054 230.12533569]
[49.02776718 215.53977966]
[52.59099197 201.36398315]
[58.70778656 188.08412170]
[67.16992188 176.15588379]
[77.68865967 165.98890686]
[89.90460205 157.93267822]
[103.39997101 152.26454163]
[100.29586029 137.58924866]
[97.19174957 122.91394043]
[94.08763885 108.23863983]
[89.47113037 101.63103485]
[91.04827118 93.32180023]
[88.16300201 78.60190582]
[85.27772522 63.88201523]
[82.39245605 49.16212082]
[79.50718689 34.44223022]
[76.62191010 19.72233963]
[73.73664093 5.00244856]
[70.85136414 -9.71744251]
[67.85659027 -24.41544724]
[64.42552948 -39.01776886]
[60.66922760 -53.53982925]
[56.91292953 -68.06188965]
[53.15662766 -82.58394623]
[47.97791672 -90.10848999]
[49.45422363 -97.35019684]
[45.91455078 -111.92657471]
[42.64966202 -97.28620148]
[36.35417557 -83.67124939]
[27.31449699 -71.70111084]
[15.94187069 -61.92034531]
[2.75367498 -54.77391434]
[-11.65011501 -50.58692932]
[-26.61422157 -49.54986954]
[-41.45788193 -51.70991898]
[-55.50580215 -56.96880722]
[-68.11890411 -65.08728790]
[-78.72336578 -75.69602966]
[-86.83676147 -88.31240082]
[-92.08998108 -102.36244202]
[-94.24404907 -117.20696259]
[-93.20095825 -132.17065430]
[-89.00816345 -146.57275391]
[-81.85641479 -159.75807190]
[-72.07106781 -171.12675476]
[-60.09728241 -180.16160583]
[-46.47979736 -186.45159912]
[-31.83810997 -189.71058655]
[-16.83832169 -189.79029846]
[-2.16282272 -186.68711853]
[11.52075005 -180.54222107]
[23.58988571 -171.63514709]
[33.49551773 -160.37110901]
[40.78700638 -147.26255798]
[45.13344574 -132.90158081]
[47.57917404 -147.70085144]
[50.02489853 -162.50012207]
[52.47062683 -177.29939270]
[54.91635513 -192.09866333]
[57.36208344 -206.89793396]
[59.80781174 -221.69720459]
[58.11950302 -230.67425537]
[62.40169525 -236.69792175]
[65.06748962 -251.45915222]
[67.73328400 -266.22036743]
[70.39908600 -280.98156738]
[73.06488037 -295.74279785]
[59.12622833 -301.43557739]
[46.67598724 -309.90228271]
[36.25843048 -320.77279663]
[28.32896423 -333.57192993]
[23.23423195 -347.74011230]
[21.19695473 -362.65798950]
[22.30619240 -377.67340088]
[26.51345253 -392.13000488]
[33.63481522 -405.39572144]
[43.35896301 -416.89071655]
[55.26079559 -426.11242676]
[68.82002258 -432.65774536]
[83.44388580 -436.24050903]
[98.49309540 -436.70413208]
[113.30976868 -434.02832031]
[127.24617767 -428.33007812]
[139.69308472 -419.85845947]
[150.10636902 -408.98382568]
[158.03079224 -396.18161011]
[163.11994934 -382.01141357]
[165.15136719 -367.09274292]
[164.03622437 -352.07775879]
[159.82327271 -337.62283325]
[152.69668579 -324.35989380]
[142.96801758 -312.86871338]
[131.06256104 -303.65170288]
[117.50076294 -297.11172485]
[102.87548828 -293.53469849]
[87.82609558 -293.07699585]
[85.16030121 -278.31579590]
[82.49450684 -263.55456543]
[79.82870483 -248.79335022]
[77.16291046 -234.03213501]
[74.60707855 -219.25148010]
[72.16135406 -204.45220947]
[69.71562958 -189.65293884]
[67.26989746 -174.85366821]
[64.82417297 -160.05439758]
[62.37844467 -145.25512695]
[59.93271637 -130.45585632]
[60.49092865 -115.46624756]
[64.03060150 -100.88986969]
[67.67868805 -86.34024811]
[71.43498993 -71.81819153]
[75.19129181 -57.29613113]
[78.94758606 -42.77407074]
[81.78380585 -40.67926407]
[83.74629974 -37.10663605]
[84.15152740 -32.48180389]
[82.53189087 -27.51955795]
[86.99153900 -21.62605286]
[85.57125854 -12.60271549]
[88.45652771 2.11717582]
[91.34180450 16.83706665]
[94.22707367 31.55695915]
[97.11235046 46.27685165]
[99.99761963 60.99674225]
[102.88288879 75.71662903]
[105.76816559 90.43652344]
[108.76293945 105.13452911]
[111.86705017 119.80982971]
[114.97116089 134.48513794]
[118.07527161 149.16043091]
[133.52749634 148.94317627]
[148.72230530 151.73478699]
[163.07958984 157.42686462]
[176.05163574 165.80029297]
[187.14389038 176.53372192]
[195.93392944 189.21586609]
[202.08747864 203.36125183]
[205.37113953 218.42884827]
[205.66123962 233.84271240]
[202.94851685 249.01405334]
[197.33837891 263.36367798]
[189.04678345 276.34411621]
[178.39196777 287.46051025]
[165.78225708 296.28948975]
[151.70031738 302.49530029]
[155.02256775 317.12277222]
[158.34483337 331.75024414]
[161.66709900 346.37768555]
[176.63751221 355.42788696]
[180.35751343 372.17532349]
[171.00192261 386.15069580]
[174.54159546 400.72708130]
[178.08126831 415.30346680]
[188.85659790 426.88806152]
[184.34117126 441.08172607]
[188.62080383 446.12118530]
[189.57041931 451.72433472]
[187.76235962 456.14474487]
[190.86647034 470.82003784]
[193.97058105 485.49536133]
[197.07469177 500.17065430]
[200.17880249 514.84594727]
[215.24681091 515.48297119]
[229.68276978 519.84808350]
[242.57922363 527.66680908]
[253.12547302 538.44769287]
[260.65859985 551.51300049]
[264.70504761 566.04150391]
[265.01043701 581.11987305]
[261.55560303 595.80029297]
[254.55770874 609.15997314]
[244.45664978 620.35900879]
[231.88737488 628.69354248]
[217.64001465 633.63958740]
[202.61015320 634.88623047]
[187.74258423 632.35516357]
[173.97190857 626.20538330]
[162.16375732 616.82360840]
[153.06039429 604.79949951]
[147.23406982 590.88885498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 185]
[12 183]
[13 182]
[14 181]
[18 178]
[19 177]
[20 176]
[21 175]
[37 160]
[38 159]
[39 158]
[40 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 147]
[51 143]
[52 142]
[53 141]
[54 140]
[56 139]
[57 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
