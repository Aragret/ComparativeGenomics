%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[19.43322754 477.98843384]
[15.87149525 492.57781982]
[10.60919094 506.64355469]
[3.72018909 519.98815918]
[-4.69879913 532.42425537]
[-14.52958488 543.77734375]
[-25.63415909 553.88793945]
[-37.85662842 562.61419678]
[-51.02541351 569.83355713]
[-64.95564270 575.44476318]
[-79.45175171 579.36889648]
[-94.31024933 581.55096436]
[-109.32254028 581.96032715]
[-124.27787018 580.59124756]
[-138.96629333 577.46289062]
[-153.18161011 572.61926270]
[-166.72425842 566.12823486]
[-179.40411377 558.08105469]
[-191.04318237 548.59057617]
[-201.47805786 537.79016113]
[-210.56225586 525.83129883]
[-218.16825867 512.88195801]
[-224.18928528 499.12393188]
[-228.54078674 484.75033569]
[-231.16171265 469.96292114]
[-232.01522827 454.96932983]
[-231.08938599 439.98004150]
[-228.39717102 425.20544434]
[-223.97637939 410.85299683]
[-217.88906860 397.12414551]
[-210.22070312 384.21166992]
[-201.07891846 372.29678345]
[-190.59205627 361.54681396]
[-178.90734863 352.11260986]
[-166.18881226 344.12667847]
[-152.61502075 337.70108032]
[-138.37651062 332.92602539]
[-123.67316437 329.86856079]
[-108.71140289 328.57162476]
[-93.70126343 329.05340576]
[-78.85346222 331.30712891]
[-64.37644958 335.30117798]
[-50.47344971 340.97946167]
[-43.20022202 327.86074829]
[-35.92699051 314.74206543]
[-28.65376282 301.62338257]
[-29.24942207 286.74069214]
[-15.79108334 278.42300415]
[-8.51785374 265.30432129]
[-1.24462402 252.18562317]
[6.02860546 239.06692505]
[13.30183506 225.94824219]
[13.79587746 218.57411194]
[20.78226662 212.68954468]
[28.25000763 199.68058777]
[27.87599373 184.79067993]
[41.45668030 176.67430115]
[40.89352036 173.19361877]
[41.98828506 169.26722717]
[44.93209076 165.67733765]
[49.55949783 163.26193237]
[57.60066986 150.59941101]
[65.64184570 137.93687439]
[65.49417114 133.16328430]
[68.34367371 128.24623108]
[74.11568451 125.02203369]
[82.53030396 112.60453796]
[90.94491577 100.18704224]
[90.76127625 96.33494568]
[92.27647400 92.42060852]
[95.48023224 89.20455933]
[100.02285767 87.41448212]
[108.98355865 75.38510132]
[117.94425201 63.35572433]
[126.90495300 51.32634735]
[135.86564636 39.29697037]
[144.82633972 27.26759338]
[153.78703308 15.23821545]
[161.06027222 2.11952138]
[166.51562500 -11.85327625]
[164.32716370 -27.52239418]
[176.16340637 -36.56411743]
[181.61875916 -50.53691483]
[187.07411194 -64.50971222]
[192.52947998 -78.48251343]
[190.34101868 -94.15162659]
[202.17724609 -103.19335175]
[207.63261414 -117.16615295]
[207.83856201 -126.29825592]
[213.27461243 -131.30537415]
[218.93739319 -145.19540405]
[224.60017395 -159.08543396]
[227.04591370 -173.88470459]
[226.15309143 -188.85810852]
[225.26026917 -203.83151245]
[210.72567749 -208.13514709]
[198.54139709 -217.15287781]
[190.17875671 -229.79573059]
[186.64756775 -244.53704834]
[188.37426758 -259.59674072]
[195.15031433 -273.15628052]
[206.15748596 -283.57827759]
[220.06660461 -289.60421753]
[235.19808960 -290.50646973]
[249.72473145 -286.17605591]
[261.89236450 -277.13589478]
[270.23168945 -264.47763062]
[273.73571777 -249.72984314]
[271.98126221 -234.67335510]
[265.18023682 -221.12632751]
[254.15388489 -210.72463989]
[240.23367310 -204.72433472]
[241.12649536 -189.75093079]
[242.01931763 -174.77751160]
[247.86840820 -188.59011841]
[256.26638794 -201.01889038]
[266.89926147 -211.59913635]
[279.36953735 -219.93534851]
[293.21099854 -225.71583557]
[307.90615845 -228.72451782]
[322.90563965 -228.84889221]
[337.64868164 -226.08432007]
[351.58407593 -220.53416443]
[364.19088745 -212.40589905]
[374.99777222 -202.00343323]
[383.60067749 -189.71563721]
[389.67803955 -176.00193787]
[393.00259399 -161.37500000]
[393.45010376 -146.38166809]
[391.00378418 -131.58248901]
[385.75512695 -117.53074646]
[377.90036011 -104.75176239]
[367.73312378 -93.72328949]
[355.63351440 -84.85763550]
[342.05392456 -78.48625183]
[327.50198364 -74.84734344]
[312.52178955 -74.07694244]
[297.67333984 -76.20384979]
[283.51177979 -81.14856720]
[270.56655884 -88.72621155]
[259.32159424 -98.65349579]
[250.19732666 -110.55928802]
[243.53486633 -123.99847412]
[239.58329773 -138.46861267]
[238.49020386 -153.42263794]
[232.82742310 -139.53262329]
[227.16462708 -125.64259338]
[221.60540771 -111.71079254]
[216.15005493 -97.73799133]
[218.72871399 -83.06830597]
[206.50227356 -73.02715302]
[201.04692078 -59.05435562]
[195.59155273 -45.08155823]
[190.13619995 -31.10876083]
[192.71485901 -16.43907166]
[180.48841858 -6.39791965]
[175.03306580 7.57487822]
[186.38201904 -2.23334503]
[200.18190002 -8.11238384]
[215.11741638 -9.50188637]
[229.76496887 -6.26941347]
[242.72848511 1.27693617]
[252.77233887 12.41789246]
[258.93923950 26.09156990]
[260.64135742 40.99468231]
[257.71649170 55.70676041]
[250.44342041 68.82553864]
[239.51536560 79.10062408]
[225.97389221 85.55265045]
[211.10971069 87.56666565]
[196.33958435 84.95069885]
[183.07130432 77.95409393]
[172.56950378 67.24371338]
[165.83515930 53.84040451]
[163.51014709 39.02169037]
[165.81642151 24.19891167]
[156.85571289 36.22829056]
[147.89501953 48.25766754]
[138.93432617 60.28704453]
[129.97363281 72.31642151]
[121.01293182 84.34580231]
[112.05223846 96.37517548]
[103.36241150 108.60166168]
[94.94779968 121.01915741]
[86.53318024 133.43666077]
[78.30436707 145.97805786]
[70.26319885 158.64057922]
[62.22202301 171.30310059]
[54.46563339 184.14204407]
[54.30550385 199.96244812]
[41.25896072 207.14833069]
[33.79121780 220.15728760]
[26.42052841 233.22146606]
[19.14729881 246.34016418]
[11.87407017 259.45886230]
[4.60084057 272.57754517]
[-2.67238903 285.69622803]
[-2.59695864 301.51727295]
[-15.53506851 308.89660645]
[-22.80829811 322.01528931]
[-30.08152771 335.13400269]
[-37.35475540 348.25268555]
[-25.17328072 357.03607178]
[-14.11617088 367.19857788]
[-4.33865309 378.59756470]
[4.02201080 391.07296753]
[10.84845161 404.44967651]
[16.04483604 418.53985596]
[19.53821564 433.14578247]
[21.27954674 448.06234741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 202]
[44 201]
[45 200]
[46 199]
[48 197]
[49 196]
[50 195]
[51 194]
[52 193]
[54 192]
[55 191]
[57 189]
[61 188]
[62 187]
[63 186]
[66 185]
[67 184]
[68 183]
[72 182]
[73 181]
[74 180]
[75 179]
[76 178]
[77 177]
[78 176]
[79 157]
[80 156]
[82 154]
[83 153]
[84 152]
[85 151]
[87 149]
[88 148]
[90 147]
[91 146]
[92 145]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
