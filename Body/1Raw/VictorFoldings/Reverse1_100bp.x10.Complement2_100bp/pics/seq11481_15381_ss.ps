%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[55.49511337 640.28039551]
[43.18038940 631.32116699]
[35.57999039 618.12445068]
[34.01073456 602.97662354]
[38.74450684 588.50213623]
[48.96114731 577.20874023]
[62.89056778 571.05316162]
[62.89056778 556.05316162]
[62.89056778 541.05316162]
[62.89056778 526.05316162]
[62.89056778 511.05316162]
[50.59989929 519.65197754]
[36.17146301 515.55072021]
[30.24136925 501.77267456]
[37.18105698 488.47454834]
[51.87485123 485.45916748]
[63.49032211 494.94790649]
[64.60597229 479.98944092]
[65.72161865 465.03100586]
[63.33919907 460.89178467]
[63.53171539 455.21197510]
[67.09970093 449.64593506]
[68.66022491 434.72732544]
[70.22074890 419.80871582]
[71.78127289 404.89010620]
[60.64243317 392.28991699]
[62.09161377 375.19561768]
[75.71871185 364.22653198]
[77.05694580 349.28634644]
[78.39517975 334.34616089]
[71.82421112 320.97933960]
[80.76184845 307.92449951]
[82.10008240 292.98431396]
[80.13197327 290.05874634]
[79.48310089 286.03457642]
[80.65439606 281.54220581]
[83.84627533 277.41195679]
[85.85028839 262.54641724]
[87.85430145 247.68089294]
[89.85831451 232.81536865]
[91.86233521 217.94982910]
[93.86634827 203.08430481]
[95.87036133 188.21878052]
[96.42857361 173.22917175]
[95.53575134 158.25576782]
[94.64293671 143.28234863]
[85.80660248 135.02125549]
[84.94024658 122.55397034]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[82.94699097 59.71760559]
[90.10826874 46.65753937]
[89.43848419 31.67250252]
[88.54566956 16.69909668]
[87.43001556 1.74064291]
[86.31436920 -13.21781063]
[77.57209015 -26.40428543]
[84.34134674 -39.67177963]
[75.59906769 -52.85825348]
[82.36833191 -66.12574768]
[81.25267792 -81.08420563]
[72.51039886 -94.27067566]
[79.27966309 -107.53816986]
[78.16400909 -122.49662781]
[77.04836273 -137.45507812]
[75.93271637 -152.41352844]
[74.26116943 -167.32009888]
[72.03605652 -182.15414429]
[69.81093597 -196.98818970]
[65.44313812 -205.01066589]
[67.66483307 -212.05949402]
[65.66081238 -226.92501831]
[62.77554321 -241.64491272]
[59.01924133 -256.16696167]
[55.26294327 -270.68902588]
[51.50664139 -285.21109009]
[47.75033951 -299.73315430]
[43.99404144 -314.25521851]
[40.23773956 -328.77728271]
[25.22110367 -327.83010864]
[10.29661751 -329.74221802]
[-3.99620724 -334.44451904]
[-17.14069366 -341.76702881]
[-28.66167831 -351.44500732]
[-38.14268494 -363.12863159]
[-45.24097824 -376.39553833]
[-49.69996262 -390.76611328]
[-51.35844803 -405.72091675]
[-50.15647888 -420.71929932]
[-46.13750839 -435.21911621]
[-39.44681931 -448.69616699]
[-30.32627296 -460.66329956]
[-19.10557556 -470.68789673]
[-6.19034529 -478.40756226]
[7.95253897 -483.54327393]
[22.81182098 -485.90933228]
[37.85034561 -485.42022705]
[52.52448273 -482.09362793]
[66.30377197 -476.04980469]
[78.69009399 -467.50723267]
[89.23570251 -456.77471924]
[97.55936432 -444.24026489]
[103.36019897 -430.35693359]
[106.42850494 -415.62661743]
[106.65336609 -400.58181763]
[104.02664948 -385.76638794]
[98.64331055 -371.71591187]
[90.69795990 -358.93826294]
[80.47780609 -347.89541626]
[68.35231018 -338.98648071]
[54.75979996 -332.53356934]
[58.51609802 -318.01150513]
[62.27239990 -303.48944092]
[66.02870178 -288.96740723]
[69.78500366 -274.44534302]
[73.54130554 -259.92327881]
[77.29759979 -245.40121460]
[84.03054047 -258.80523682]
[97.30294037 -265.79403687]
[112.16452026 -263.76098633]
[123.07228851 -253.46435547]
[125.95790863 -238.74453735]
[119.74512482 -225.09164429]
[106.75114441 -217.59788513]
[91.82239532 -219.05824280]
[80.52634430 -228.92903137]
[82.53035736 -214.06350708]
[84.64498138 -199.21331787]
[86.87010193 -184.37927246]
[89.09521484 -169.54522705]
[99.97434998 -179.87210083]
[114.85153198 -177.95655823]
[122.75986481 -165.21064758]
[117.86962128 -151.03018188]
[103.78569794 -145.86848450]
[90.89116669 -153.52917480]
[92.00681305 -138.57072449]
[93.12246704 -123.61227417]
[94.23811340 -108.65382385]
[102.90059662 -96.53727722]
[96.21113586 -82.19985199]
[97.32678223 -67.24139404]
[105.98926544 -55.12485123]
[99.29980469 -40.78742981]
[107.96228027 -28.67088127]
[101.27281952 -14.33345890]
[102.38847351 0.62499428]
[103.50411987 15.58344746]
[106.47419739 19.32345772]
[107.12635803 24.96896172]
[104.42352295 31.00271606]
[105.09330750 45.98775482]
[113.39118958 58.35684586]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[118.30491638 127.14238739]
[109.61634064 142.38954163]
[110.50916290 157.36294556]
[111.40197754 172.33634949]
[118.47968292 159.11114502]
[130.27450562 149.84388733]
[144.79879761 146.09625244]
[159.60498047 148.49980164]
[172.19793701 156.64949036]
[180.45553589 169.17195129]
[182.98623657 183.95693970]
[179.36355591 198.51289368]
[170.19798279 210.38691711]
[157.03408813 217.57801819]
[142.09020996 218.87434387]
[127.88465881 214.05747986]
[116.81131744 203.93913269]
[110.73588562 190.22279358]
[108.73187256 205.08831787]
[106.72785950 219.95384216]
[104.72384644 234.81938171]
[102.71983337 249.68490601]
[100.71582031 264.55044556]
[98.71180725 279.41595459]
[97.04026794 294.32254028]
[95.70203400 309.26272583]
[102.17728424 323.69815063]
[93.33536530 335.68438721]
[91.99713135 350.62457275]
[90.65889740 365.56475830]
[100.42764282 374.83761597]
[103.03407288 387.85366821]
[97.74635315 399.81701660]
[86.69987488 406.45065308]
[85.13935089 421.36923218]
[83.57883453 436.28784180]
[82.01831055 451.20645142]
[80.68007660 466.14663696]
[79.56442261 481.10510254]
[78.44877625 496.06353760]
[77.89056396 511.05316162]
[77.89056396 526.05316162]
[77.89056396 541.05316162]
[77.89056396 556.05316162]
[77.89056396 571.05316162]
[91.81998444 577.20874023]
[102.03662872 588.50213623]
[106.77039337 602.97662354]
[105.20114136 618.12445068]
[97.60074615 631.32116699]
[85.28601837 640.28039551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[17 199]
[18 198]
[19 197]
[22 196]
[23 195]
[24 194]
[25 193]
[28 189]
[29 188]
[30 187]
[32 185]
[33 184]
[37 183]
[38 182]
[39 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 163]
[45 162]
[46 161]
[49 159]
[51 157]
[52 156]
[54 154]
[55 153]
[56 150]
[57 149]
[58 148]
[60 146]
[62 144]
[63 143]
[65 141]
[66 140]
[67 139]
[68 138]
[69 132]
[70 131]
[71 130]
[73 129]
[74 128]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[81 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
