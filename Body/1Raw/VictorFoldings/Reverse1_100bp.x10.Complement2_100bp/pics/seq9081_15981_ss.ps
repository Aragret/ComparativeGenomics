%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[102.69331360 632.30847168]
[89.00675964 626.15753174]
[75.74240875 619.14239502]
[62.95478821 611.29174805]
[50.69642639 602.63793945]
[39.01770782 593.21655273]
[27.96661758 583.06622314]
[17.58856773 572.22869873]
[7.92620754 560.74853516]
[-0.98076105 548.67285156]
[-9.09573650 536.05133057]
[-16.38537216 522.93579102]
[-22.81971169 509.38018799]
[-28.37231827 495.44015503]
[-33.02037048 481.17303467]
[-36.74477386 466.63739014]
[-39.53021622 451.89300537]
[-41.36526108 437.00045776]
[-42.24235916 422.02090454]
[-42.15791321 407.01596069]
[-41.11226273 392.04724121]
[-39.10971069 377.17630005]
[-36.15848541 362.46420288]
[-32.27070999 347.97140503]
[-27.46236610 333.75747681]
[-21.75320816 319.88085938]
[-15.16669846 306.39849854]
[-7.72990179 293.36587524]
[0.52662283 280.83648682]
[9.56894684 268.86184692]
[19.35991287 257.49114990]
[29.85928726 246.77111816]
[41.02392578 236.74583435]
[52.80794907 227.45645142]
[65.16293335 218.94117737]
[78.03811646 211.23498535]
[91.38058472 204.36953735]
[105.13550568 198.37306213]
[119.24636841 193.27018738]
[115.05935669 178.86640930]
[110.87234497 164.46263123]
[106.68533325 150.05885315]
[95.70295715 139.99720764]
[99.28061676 124.58581543]
[95.09360504 110.18202972]
[88.76274109 123.78056335]
[75.70431519 131.16143799]
[60.78878403 129.57177734]
[49.57928467 119.60447693]
[46.25667572 104.97709656]
[52.06021118 91.14528656]
[64.82531738 83.26797485]
[79.79092407 84.28319550]
[91.37585449 93.81328583]
[88.93013000 79.01401520]
[86.48440552 64.21474457]
[84.03867340 49.41547394]
[81.59294891 34.61620331]
[79.14722443 19.81693268]
[75.25426483 14.47311306]
[74.72402191 8.81485653]
[76.85584259 4.54117489]
[74.85182953 -10.32435322]
[70.60396576 -18.41097260]
[72.93035126 -25.42593575]
[71.14788818 -40.31965256]
[69.36541748 -55.21337128]
[67.58295441 -70.10708618]
[65.80049133 -85.00080872]
[64.01802063 -99.89452362]
[62.23555756 -114.78823853]
[60.45309067 -129.68196106]
[58.67062378 -144.57566833]
[43.65660477 -144.41300964]
[28.71301460 -145.87463379]
[14.01505756 -148.94338989]
[-0.26493880 -153.58332825]
[-13.95954895 -159.74002075]
[-26.90821075 -167.34129333]
[-38.95910645 -176.29803467]
[-49.97094727 -186.50521851]
[-59.81462479 -197.84317017]
[-68.37472534 -210.17897034]
[-75.55089569 -223.36798096]
[-81.25897980 -237.25555420]
[-85.43206787 -251.67889404]
[-88.02123260 -266.46887207]
[-88.99610901 -281.45208740]
[-88.34527588 -296.45288086]
[-86.07635498 -311.29534912]
[-82.21595764 -325.80551147]
[-76.80934143 -339.81320190]
[-69.91989136 -353.15423584]
[-61.62838745 -365.67214966]
[-52.03204346 -377.22018433]
[-41.24337006 -387.66299438]
[-29.38886070 -396.87808228]
[-16.60750198 -404.75741577]
[-3.04914832 -411.20864868]
[11.12723446 -416.15609741]
[25.75543594 -419.54180908]
[40.66394806 -421.32604980]
[55.67797852 -421.48788452]
[70.62149048 -420.02548218]
[85.31928253 -416.95590210]
[99.59902954 -412.31521606]
[113.29330444 -406.15777588]
[126.24156189 -398.55581665]
[138.29197693 -389.59841919]
[149.30326843 -379.39065552]
[159.14633179 -368.05215454]
[167.70576477 -355.71591187]
[174.88122559 -342.52651978]
[180.58856201 -328.63861084]
[184.76087952 -314.21505737]
[187.34924316 -299.42495728]
[188.32331848 -284.44168091]
[187.67167664 -269.44091797]
[185.40196228 -254.59857178]
[181.54078674 -240.08862305]
[176.13340759 -226.08120728]
[169.24324036 -212.74055481]
[160.95106506 -200.22309875]
[151.35409546 -188.67555237]
[140.56486511 -178.23335266]
[128.70985413 -169.01890564]
[115.92807770 -161.14024353]
[102.36937714 -154.68975830]
[88.19272614 -149.74305725]
[73.56433868 -146.35813904]
[75.34680939 -131.46441650]
[77.12927246 -116.57070923]
[78.91173553 -101.67698669]
[80.69420624 -86.78327179]
[82.47666931 -71.88955688]
[84.25914001 -56.99583817]
[86.04160309 -42.10211945]
[87.82406616 -27.20840263]
[89.71736145 -12.32836723]
[91.72137451 2.53716111]
[93.94649506 17.37120438]
[96.39221954 32.17047501]
[98.83794403 46.96974564]
[101.28367615 61.76901627]
[103.72940063 76.56829071]
[106.17512512 91.36756134]
[109.49739075 105.99501801]
[113.68440247 120.39880371]
[124.96625519 131.49070740]
[121.08911133 145.87184143]
[125.27612305 160.27561951]
[129.46313477 174.67939758]
[133.65014648 189.08317566]
[148.29762268 185.82633972]
[163.12367249 183.51466370]
[178.06738281 182.15765381]
[193.06732178 181.76086426]
[208.06185913 182.32595825]
[222.98939514 183.85058594]
[237.78857422 186.32850647]
[252.39857483 189.74952698]
[266.75936890 194.09957886]
[280.81198120 199.36079407]
[294.49859619 205.51156616]
[307.76303101 212.52661133]
[320.55072021 220.37709045]
[332.80917358 229.03074646]
[344.48800659 238.45204163]
[355.53921509 248.60224915]
[365.91738892 259.43963623]
[375.57986450 270.91970825]
[384.48696899 282.99526978]
[392.60208130 295.61669922]
[399.89187622 308.73214722]
[406.32635498 322.28768921]
[411.87911987 336.22766113]
[416.52734375 350.49475098]
[420.25189209 365.03033447]
[423.03750610 379.77468872]
[424.87271118 394.66723633]
[425.74996948 409.64675903]
[425.66567993 424.65170288]
[424.62020874 439.62042236]
[422.61782837 454.49142456]
[419.66674805 469.20355225]
[415.77914429 483.69638062]
[410.97094727 497.91033936]
[405.26196289 511.78704834]
[398.67559814 525.26947021]
[391.23895264 538.30218506]
[382.98254395 550.83166504]
[373.94036865 562.80639648]
[364.14953613 574.17718506]
[353.65026855 584.89733887]
[342.48574829 594.92279053]
[330.70181274 604.21228027]
[318.34692383 612.72766113]
[305.47183228 620.43402100]
[292.12945557 627.29962158]
[278.37460327 633.29626465]
[264.26379395 638.39929199]
[249.85502625 642.58770752]
[235.20750427 645.84442139]
[220.38142395 648.15594482]
[205.43771362 649.51275635]
[190.43777466 649.90936279]
[175.44323730 649.34411621]
[160.51571655 647.81933594]
[145.71656799 645.34124756]
[131.10659790 641.92004395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 153]
[40 152]
[41 151]
[42 150]
[44 148]
[45 147]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[62 140]
[63 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[72 131]
[73 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
