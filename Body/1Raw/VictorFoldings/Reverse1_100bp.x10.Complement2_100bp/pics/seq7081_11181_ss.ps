%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[91.61739349 643.25860596]
[80.64813232 633.00561523]
[70.85174561 621.62683105]
[62.34306717 609.25549316]
[55.22187424 596.03668213]
[49.57164764 582.12548828]
[45.45863724 567.68487549]
[42.93106842 552.88427734]
[42.01857376 537.89715576]
[42.73184967 522.89916992]
[45.06253815 508.06628418]
[48.98331070 493.57232666]
[54.44819641 479.58724976]
[61.39312363 466.27502441]
[69.73666382 453.79171753]
[79.38099670 442.28372192]
[90.21305084 431.88595581]
[102.10581970 422.72030640]
[114.91987610 414.89422607]
[128.50495911 408.49951172]
[142.70182800 403.61108398]
[139.37956238 388.98364258]
[136.05729675 374.35617065]
[132.73504639 359.72869873]
[129.41278076 345.10125732]
[126.09052277 330.47378540]
[122.76826477 315.84634399]
[112.68734741 326.95376587]
[97.70889282 326.15002441]
[88.87446594 314.02761841]
[92.69647217 299.52270508]
[106.35747528 293.32778931]
[119.78607178 300.00823975]
[117.56095123 285.17419434]
[115.33583832 270.34014893]
[105.79615784 258.90142822]
[111.40072632 244.10618591]
[109.17560577 229.27214050]
[106.95049286 214.43809509]
[104.72537231 199.60406494]
[95.18569946 188.16535950]
[100.79026031 173.37010193]
[98.56514740 158.53605652]
[96.34002686 143.70202637]
[85.46089935 154.02890015]
[70.58370972 152.11335754]
[62.67537689 139.36744690]
[67.56562805 125.18698120]
[81.64954376 120.02527618]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[81.48955536 85.42373657]
[67.18639374 89.94252014]
[52.92269897 85.30063629]
[44.01848602 73.22939301]
[43.79479980 58.23106003]
[52.33507538 45.89965057]
[66.45399475 40.83446884]
[80.88555908 44.92470932]
[90.24755859 56.64590073]
[90.91734314 41.66086197]
[91.58712769 26.67582321]
[92.25691223 11.69078445]
[92.92669678 -3.29425383]
[93.59648132 -18.27929306]
[94.26626587 -33.26433182]
[94.93605042 -48.24937057]
[95.60583496 -63.23440933]
[83.83419037 -53.93772888]
[68.92117310 -55.55077362]
[59.40963745 -67.14951324]
[60.74822998 -82.08966827]
[72.17014313 -91.81283569]
[87.13237762 -90.74914551]
[97.06358337 -79.50881958]
[99.06759644 -94.37435150]
[101.07160950 -109.23987579]
[103.07562256 -124.10540771]
[105.07963562 -138.97093201]
[107.08364868 -153.83645630]
[109.08766174 -168.70199585]
[111.09167480 -183.56752014]
[108.93792725 -189.81834412]
[110.09114838 -195.38316345]
[113.38305664 -198.84327698]
[115.82878113 -213.64254761]
[118.27450562 -228.44181824]
[119.27877045 -243.40815735]
[118.83216095 -258.40151978]
[118.38555908 -273.39486694]
[117.93894958 -288.38821411]
[103.32154083 -292.19717407]
[90.37006378 -299.97122192]
[80.13442230 -311.08013916]
[73.44438171 -324.62341309]
[70.84226990 -339.50311279]
[72.53903198 -354.51303101]
[78.39711761 -368.43637085]
[87.94163513 -380.14443970]
[100.39886475 -388.68811035]
[114.75894165 -393.37478638]
[129.85775757 -393.82452393]
[144.47132874 -390.00088501]
[157.41499329 -382.21383667]
[167.63948059 -371.09463501]
[174.31590271 -357.54464722]
[176.90307617 -342.66235352]
[175.19122314 -327.65414429]
[169.31915283 -313.73669434]
[159.76287842 -302.03820801]
[147.29707336 -293.50704956]
[132.93229675 -288.83480835]
[133.37890625 -273.84146118]
[133.82551575 -258.84811401]
[134.27212524 -243.85476685]
[141.74044800 -256.86337280]
[153.80596924 -265.77536011]
[168.43540955 -269.08889771]
[183.16345215 -266.24557495]
[195.50817871 -257.72454834]
[203.38928223 -244.96177673]
[205.47865295 -230.10801697]
[201.42419434 -215.66635132]
[191.90914917 -204.07049561]
[178.53698730 -197.27452087]
[163.56114197 -196.42370605]
[149.50529480 -201.66139221]
[138.73812866 -212.10494995]
[133.07377625 -225.99609375]
[130.62805176 -211.19682312]
[128.18232727 -196.39755249]
[125.95720673 -181.56350708]
[123.95319366 -166.69798279]
[121.94918060 -151.83244324]
[119.94516754 -136.96691895]
[117.94115448 -122.10139465]
[115.93714142 -107.23586273]
[113.93312836 -92.37033844]
[111.92910767 -77.50480652]
[110.59087372 -62.56462479]
[109.92108917 -47.57958603]
[109.25130463 -32.59454727]
[108.58152008 -17.60950851]
[107.91173553 -2.62446880]
[107.24195099 12.36056995]
[106.57216644 27.34560966]
[105.90238190 42.33064651]
[105.23259735 57.31568527]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[111.17407227 141.47689819]
[113.39918518 156.31094360]
[115.62430573 171.14498901]
[125.32313538 183.64471436]
[119.55941772 197.37893677]
[121.78453064 212.21298218]
[124.00965118 227.04702759]
[126.23477173 241.88107300]
[135.93359375 254.38079834]
[130.16987610 268.11502075]
[132.39498901 282.94906616]
[134.62011719 297.78311157]
[137.39572144 312.52407837]
[140.71798706 327.15151978]
[144.04023743 341.77899170]
[147.36250305 356.40646362]
[150.68476868 371.03390503]
[154.00701904 385.66137695]
[157.32928467 400.28884888]
[172.24490356 398.56506348]
[187.25947571 398.46411133]
[202.19692993 399.98712158]
[216.88215637 403.11624146]
[231.14295959 407.81481934]
[244.81214905 414.02774048]
[257.72946167 421.68215942]
[269.74346924 430.68832397]
[280.71325684 440.94067383]
[290.51028442 452.31900024]
[299.01962280 464.68984985]
[306.14151001 477.90823364]
[311.79248047 491.81915283]
[315.90628052 506.25952148]
[318.43463135 521.05999756]
[319.34796143 536.04711914]
[318.63546753 551.04510498]
[316.30557251 565.87811279]
[312.38558960 580.37231445]
[306.92147827 594.35766602]
[299.97726440 607.67028809]
[291.63436890 620.15399170]
[281.99066162 631.66253662]
[271.15917969 642.06091309]
[259.26690674 651.22717285]
[246.45326233 659.05395508]
[232.86851501 665.44940186]
[218.67192078 670.33856201]
[204.02993774 673.66412354]
[189.11421204 675.38708496]
[174.09965515 675.48724365]
[159.16227722 673.96343994]
[144.47721863 670.83349609]
[130.21665955 666.13415527]
[116.54779816 659.92053223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 175]
[22 174]
[23 173]
[24 172]
[25 171]
[26 170]
[27 169]
[33 168]
[34 167]
[35 166]
[37 164]
[38 163]
[39 162]
[40 161]
[42 159]
[43 158]
[44 157]
[50 156]
[51 155]
[53 153]
[54 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[88 134]
[89 133]
[90 132]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
