%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[66.99455261 504.97363281]
[51.96221161 508.44238281]
[37.44858170 503.21191406]
[28.08490562 490.95117188]
[26.85910034 475.57260132]
[34.16231537 461.98339844]
[47.66411972 454.51983643]
[48.55693817 439.54641724]
[49.44975281 424.57302856]
[50.34256744 409.59960938]
[51.23538589 394.62619019]
[52.12820053 379.65280151]
[53.02101517 364.67938232]
[41.11225891 373.79977417]
[26.22490883 371.96487427]
[16.88711929 360.22583008]
[18.44799995 345.30725098]
[30.01340675 335.75521851]
[44.95814896 337.04156494]
[54.72090149 348.42849731]
[52.60440445 341.34738159]
[57.09115982 333.39080811]
[59.53688812 318.59152222]
[53.97829056 304.77304077]
[63.86214828 292.41906738]
[66.30787659 277.61981201]
[68.75360107 262.82052612]
[70.42514801 247.91397095]
[71.31796265 232.94056702]
[72.21077728 217.96714783]
[73.10359192 202.99374390]
[66.13755035 189.82850647]
[74.68253326 176.51333618]
[75.57534790 161.53993225]
[67.54887390 174.21177673]
[55.71482468 183.42889404]
[41.46345139 188.10847473]
[26.46899605 187.70074463]
[12.49298573 182.25361633]
[1.17731273 172.40701294]
[-6.14867067 159.31770325]
[-8.62431526 144.52342224]
[-5.95878410 129.76214600]
[1.53477859 116.76805115]
[12.97603607 107.06766510]
[27.02088165 101.80056000]
[42.01934052 101.58553314]
[56.20940781 106.44783783]
[67.92404938 115.81624603]
[75.78704071 128.59017944]
[78.87470245 143.27053833]
[83.27570343 128.93067932]
[87.67669678 114.59083557]
[80.98094177 101.74120331]
[85.23217010 87.88936615]
[97.98345184 81.00816345]
[102.38445282 66.66831970]
[106.78544617 52.32847214]
[111.18644714 37.98862457]
[105.84391785 26.24893761]
[109.80473328 14.39585018]
[120.42826080 8.61076546]
[117.31104279 -6.90031195]
[128.58811951 -16.63051033]
[133.20213318 -30.90324402]
[137.81614685 -45.17597580]
[124.50138855 -38.26819611]
[109.83458710 -41.41222763]
[100.52120209 -53.17066193]
[100.81918335 -68.16770172]
[110.59229279 -79.54690552]
[125.37241364 -82.10585022]
[138.40225220 -74.67462158]
[143.72479248 -60.64882660]
[142.23817444 -76.40003204]
[154.46633911 -84.90422058]
[160.54017639 -98.61949158]
[166.61401367 -112.33475494]
[165.12739563 -128.08596802]
[177.35556030 -136.59014893]
[183.42939758 -150.30541992]
[189.50323486 -164.02069092]
[195.57707214 -177.73596191]
[184.20404053 -190.60234070]
[179.61398315 -207.09242249]
[182.68376160 -223.87562561]
[192.74815369 -237.58407593]
[207.74333191 -245.48841858]
[224.62983704 -246.04121399]
[230.29263306 -259.93124390]
[235.95541382 -273.82125854]
[241.61819458 -287.71130371]
[247.28099060 -301.60131836]
[252.94377136 -315.49133301]
[258.50299072 -329.42315674]
[263.95834351 -343.39593506]
[269.41372681 -357.36874390]
[256.35952759 -364.81225586]
[244.52828979 -374.07723999]
[234.17219543 -384.96618652]
[225.51197815 -397.24700928]
[218.73223877 -410.65792847]
[213.97749329 -424.91311646]
[211.34906006 -439.70867920]
[210.90299988 -454.72930908]
[212.64878845 -469.65478516]
[216.54924011 -484.16699219]
[222.52120972 -497.95663452]
[230.43739319 -510.72970581]
[240.12907410 -522.21398926]
[251.38964844 -532.16473389]
[263.97912598 -540.36981201]
[277.62915039 -546.65429688]
[292.04876709 -550.88427734]
[306.93060303 -552.96960449]
[321.95748901 -552.86572266]
[336.80908203 -550.57501221]
[351.16885376 -546.14617920]
[364.73074341 -539.67364502]
[377.20562744 -531.29541016]
[388.32760620 -521.19000244]
[397.85968018 -509.57284546]
[405.59860229 -496.69158936]
[411.37942505 -482.82077026]
[415.07894897 -468.25604248]
[416.61831665 -453.30786133]
[415.96475220 -438.29483032]
[413.13211060 -423.53698730]
[408.18081665 -409.34887695]
[401.21640015 -396.03292847]
[392.38729858 -383.87295532]
[381.88171387 -373.12814331]
[369.92358398 -364.02755737]
[356.76776123 -356.76513672]
[342.69473267 -351.49569702]
[328.00436401 -348.33157349]
[313.00988770 -347.34017944]
[298.03082275 -348.54266357]
[283.38650513 -351.91339111]
[277.93115234 -337.94058228]
[272.47579956 -323.96777344]
[272.97137451 -316.59378052]
[266.83380127 -309.82855225]
[261.17102051 -295.93853760]
[255.50822449 -282.04849243]
[249.84544373 -268.15847778]
[244.18264771 -254.26844788]
[238.51986694 -240.37841797]
[247.98704529 -231.48368835]
[253.88258362 -219.87261963]
[255.48539734 -206.91737366]
[252.58316040 -194.15731812]
[245.50016785 -183.11602783]
[235.06120300 -175.11943054]
[222.49555969 -171.13653564]
[209.29234314 -171.66212463]
[203.21850586 -157.94685364]
[197.14466858 -144.23158264]
[191.07083130 -130.51632690]
[192.99188232 -115.74611664]
[180.32928467 -106.26092529]
[174.25544739 -92.54565430]
[168.18161011 -78.83039093]
[170.10266113 -64.06018829]
[157.44006348 -54.57498932]
[152.08886719 -40.56196976]
[147.47486877 -26.28923416]
[142.86085510 -12.01650143]
[146.30810547 2.47369432]
[134.70100403 13.22477436]
[139.29454041 30.16190338]
[125.52629089 42.38962173]
[121.12529755 56.72946930]
[116.72429657 71.06931305]
[112.32330322 85.40916443]
[119.01905823 98.25879669]
[114.76782990 112.11063385]
[102.01654816 118.99183655]
[97.61554718 133.33168030]
[93.21455383 147.67152405]
[90.54875183 162.43273926]
[89.65593719 177.40615845]
[96.55812073 191.64239502]
[88.07699585 203.88656616]
[87.18418121 218.85997009]
[86.29136658 233.83337402]
[85.39855194 248.80677795]
[96.55921173 238.78482056]
[111.54601288 238.15580750]
[123.50720215 247.20733643]
[126.97427368 261.80114746]
[120.36213684 275.26516724]
[106.69377136 281.44381714]
[92.21816254 277.51229858]
[83.55287170 265.26626587]
[81.10714722 280.06555176]
[78.66142273 294.86480713]
[84.04508209 309.74185181]
[74.33615875 321.03726196]
[71.89043427 335.83654785]
[69.55494690 350.65359497]
[67.99442291 365.57220459]
[67.10160828 380.54562378]
[66.20879364 395.51901245]
[65.31597137 410.49243164]
[64.42315674 425.46582031]
[63.53034210 440.43923950]
[62.63752747 455.41262817]
[75.15676117 464.42776489]
[80.79341125 478.78851318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[13 202]
[20 201]
[22 200]
[23 199]
[25 197]
[26 196]
[27 195]
[28 187]
[29 186]
[30 185]
[31 184]
[33 182]
[34 181]
[51 180]
[52 179]
[53 178]
[56 175]
[57 174]
[58 173]
[59 172]
[62 170]
[64 168]
[65 167]
[66 166]
[74 165]
[76 163]
[77 162]
[78 161]
[80 159]
[81 158]
[82 157]
[83 156]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 141]
[96 140]
[97 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
