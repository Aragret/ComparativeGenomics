%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[81.01075745 574.09191895]
[77.28777313 588.67053223]
[70.87280273 602.28100586]
[61.99774170 614.43127441]
[50.98342514 624.68218994]
[38.22800827 632.66320801]
[24.19259453 638.08569336]
[9.38455391 640.75372314]
[-5.66081238 640.57086182]
[-20.39962387 637.54364014]
[-34.29907990 631.78155518]
[-46.85672760 623.49291992]
[-57.61861420 612.97729492]
[-66.19570160 600.61480713]
[-72.27793121 586.85247803]
[-75.64544678 572.18768311]
[-76.17650604 557.15057373]
[-73.85190582 542.28472900]
[-68.75569153 528.12756348]
[-61.07207489 515.19085693]
[-51.07882690 503.94223022]
[-39.13718796 494.78833008]
[-25.67884445 488.06008911]
[-11.19030571 484.00067139]
[3.80467486 482.75686646]
[18.76403999 484.37362671]
[23.16503716 470.03378296]
[27.56603622 455.69393921]
[31.96703339 441.35409546]
[35.28929138 426.72662354]
[37.51441193 411.89257812]
[39.73952866 397.05853271]
[41.96464539 382.22448730]
[44.18976212 367.39044189]
[46.41487885 352.55642700]
[48.63999557 337.72238159]
[46.52350235 330.64126587]
[51.01025772 322.68469238]
[53.45598221 307.88540649]
[47.89738464 294.06689453]
[57.78124237 281.71295166]
[60.22697067 266.91369629]
[53.43980026 256.90066528]
[55.35625458 244.55113220]
[65.48792267 236.56913757]
[68.15371704 221.80792236]
[55.87836075 215.86944580]
[45.55215454 206.94378662]
[37.88526535 195.63604736]
[33.40722656 182.71543884]
[32.43038177 169.06297302]
[35.02809906 155.61137390]
[41.02930450 143.28138733]
[50.02973557 132.91870117]
[61.41917038 125.23597717]
[74.42279816 120.76384735]
[88.15390778 119.81426239]
[91.25801849 105.13896179]
[89.71247101 97.22796631]
[94.51913452 90.26902771]
[90.03050995 75.09790802]
[100.39453888 64.40041351]
[103.71679688 49.77295303]
[107.03905487 35.14549637]
[110.36131287 20.51803398]
[113.02710724 5.75681734]
[115.03112030 -9.10871124]
[101.55011749 -21.23390388]
[98.07675171 -38.86952972]
[105.81654358 -54.91778564]
[121.50041962 -63.03489685]
[123.06094360 -77.95349884]
[124.62146759 -92.87210846]
[126.18199158 -107.79071045]
[127.74251556 -122.70931244]
[116.74641418 -112.50707245]
[101.86786652 -110.60217285]
[88.65618896 -117.70510101]
[82.03901672 -131.16664124]
[84.48439026 -145.96597290]
[95.08024597 -156.58329773]
[109.87459564 -159.05863953]
[123.34950256 -152.46873474]
[130.47938538 -139.27032471]
[133.80165100 -153.89778137]
[137.12390137 -168.52523804]
[140.44616699 -183.15270996]
[143.76841736 -197.78016663]
[139.27980042 -212.95127869]
[149.64382935 -223.64877319]
[152.96609497 -238.27622986]
[138.91952515 -243.60917664]
[125.75190735 -250.84519958]
[113.71954346 -259.84344482]
[103.05664062 -270.42874146]
[93.97076416 -282.39508057]
[86.63876343 -295.50949097]
[81.20336914 -309.51672363]
[77.77037048 -324.14410400]
[76.40660095 -339.10693359]
[77.13860321 -354.11395264]
[79.95213318 -368.87301636]
[84.79241943 -383.09686279]
[91.56523895 -396.50860596]
[100.13877106 -408.84719849]
[110.34612274 -419.87243652]
[121.98860168 -429.36975098]
[134.83958435 -437.15423584]
[148.64892578 -443.07440186]
[163.14782715 -447.01498413]
[178.05404663 -448.89926147]
[193.07745361 -448.69058228]
[207.92559814 -446.39303589]
[222.30944824 -442.05126953]
[235.94903564 -435.74987793]
[248.57885742 -427.61145020]
[259.95306396 -417.79446411]
[269.85028076 -406.48995972]
[278.07778931 -393.91802979]
[284.47552490 -380.32333374]
[288.91888428 -365.97055054]
[291.32141113 -351.13903809]
[291.63632202 -336.11746216]
[289.85751343 -321.19830322]
[286.01956177 -306.67190552]
[280.19723511 -292.82101440]
[272.50381470 -279.91531372]
[263.08911133 -268.20593262]
[252.13632202 -257.92086792]
[239.85867310 -249.26029968]
[226.49516296 -242.39279175]
[212.30590820 -237.45202637]
[197.56710815 -234.53417969]
[182.56564331 -233.69606018]
[167.59355164 -234.95397949]
[164.27128601 -220.32650757]
[168.99754333 -206.20164490]
[158.39588928 -194.45790100]
[155.07362366 -179.83044434]
[151.75137329 -165.20298767]
[148.42910767 -150.57553101]
[145.10684204 -135.94805908]
[142.66111755 -121.14879608]
[141.10060120 -106.23018646]
[139.54006958 -91.31158447]
[137.97955322 -76.39298248]
[136.41902161 -61.47437286]
[146.54859924 -54.78355408]
[152.90985107 -44.35918427]
[154.24319458 -32.14758301]
[150.23458862 -20.45952606]
[141.58673096 -11.53299522]
[129.89665222 -7.10469723]
[127.89263916 7.76083088]
[140.44676208 -0.44856161]
[155.15640259 2.48852229]
[163.59521484 14.88958740]
[160.92906189 29.65074158]
[148.68524170 38.31612396]
[133.87756348 35.92181015]
[124.98877716 23.84029388]
[121.66651154 38.46775436]
[118.34425354 53.09521484]
[115.02199554 67.72267151]
[119.74824524 81.84754181]
[109.14659119 93.59128571]
[105.93331909 108.24307251]
[102.82920837 122.91837311]
[117.17379761 130.97662354]
[128.31733704 143.05599976]
[135.17962646 157.96861267]
[137.10075378 174.25280762]
[133.90443420 190.31639099]
[125.91423798 204.59228516]
[113.92077637 215.69148254]
[99.10355377 222.53808594]
[82.91493225 224.47370911]
[80.24913788 239.23493958]
[86.87602234 256.41531372]
[75.02624512 269.35943604]
[72.58051300 284.15869141]
[77.96417999 299.03573608]
[68.25525665 310.33114624]
[65.80952454 325.13043213]
[63.47404099 339.94747925]
[61.24892426 354.78152466]
[59.02380371 369.61557007]
[56.79868698 384.44961548]
[54.57357025 399.28366089]
[52.34845352 414.11770630]
[50.12333679 428.95175171]
[60.67142105 418.28695679]
[75.11230469 414.22976685]
[89.67118835 417.84072876]
[100.54239655 428.17593384]
[104.88423920 442.53381348]
[101.56175995 457.16122437]
[91.44344330 468.23458862]
[77.17420197 472.85940552]
[62.48397827 469.82669067]
[51.21275711 459.92922974]
[46.30688095 445.75509644]
[41.90588379 460.09494019]
[37.50488281 474.43478394]
[33.10388565 488.77462769]
[46.39470291 495.82803345]
[58.11030197 505.26950073]
[67.82717133 516.75775146]
[75.19404602 529.87738037]
[79.94462585 544.15423584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 205]
[27 204]
[28 203]
[29 202]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[36 185]
[38 184]
[39 183]
[41 181]
[42 180]
[45 178]
[46 177]
[57 168]
[58 167]
[60 166]
[62 164]
[63 163]
[64 162]
[65 161]
[66 154]
[67 153]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[84 142]
[85 141]
[86 140]
[87 139]
[88 138]
[90 136]
[91 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
