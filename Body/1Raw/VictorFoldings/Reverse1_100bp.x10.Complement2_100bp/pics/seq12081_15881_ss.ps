%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[350.16754150 406.79504395]
[341.20684814 394.76565552]
[332.24615479 382.73629761]
[318.43814087 377.15164185]
[316.39920044 361.46237183]
[307.43850708 349.43301392]
[298.47781372 337.40362549]
[289.07565308 325.71603394]
[279.24505615 314.38644409]
[269.41448975 303.05685425]
[259.58389282 291.72726440]
[249.75332642 280.39767456]
[239.92274475 269.06808472]
[230.09216309 257.73849487]
[220.26158142 246.40888977]
[210.43099976 235.07929993]
[193.55873108 230.25297546]
[190.21212769 212.14547729]
[180.21395874 200.96350098]
[170.21577454 189.78152466]
[160.21760559 178.59954834]
[150.21943665 167.41757202]
[140.22126770 156.23559570]
[130.22309875 145.05361938]
[115.97190857 140.72314453]
[112.54136658 125.27834320]
[102.54319000 114.09636688]
[89.32199860 109.54755402]
[86.27483368 95.90180206]
[76.27666473 84.71983337]
[66.27848816 73.53785706]
[62.10791016 72.32946014]
[58.86494827 70.08274078]
[56.76212311 67.21681976]
[55.85399246 64.17676544]
[56.04240417 61.37986755]
[46.72751999 49.62261581]
[37.41263580 37.86536407]
[28.09775352 26.10811234]
[15.39868736 23.85056877]
[7.88234663 13.86616039]
[9.14238930 1.83541441]
[0.00358648 -10.05921841]
[-9.13521576 -21.95385170]
[-18.27401733 -33.84848404]
[-27.41282082 -45.74311829]
[-36.55162430 -57.63774872]
[-45.95377350 -69.32533264]
[-55.61458588 -80.80003357]
[-65.27539825 -92.27473450]
[-69.40814972 -93.60676575]
[-72.58277893 -95.94904327]
[-74.59934235 -98.87630463]
[-75.41655731 -101.94204712]
[-75.14495850 -104.73209381]
[-84.10565186 -116.76147461]
[-93.06634521 -128.79084778]
[-106.05264282 -121.25069427]
[-119.81381226 -115.24004364]
[-134.17045593 -110.83725739]
[-148.93540955 -108.09973907]
[-163.91616821 -107.06317902]
[-178.91744995 -107.74108124]
[-193.74365234 -110.12462616]
[-208.20150757 -114.18271637]
[-222.10252380 -119.86246490]
[-235.26547241 -127.08982086]
[-247.51873779 -135.77055359]
[-258.70257568 -145.79148865]
[-268.67120361 -157.02200317]
[-277.29464722 -169.31567383]
[-284.46047974 -182.51220703]
[-290.07525635 -196.43959045]
[-294.06582642 -210.91622925]
[-296.38009644 -225.75341797]
[-296.98797607 -240.75769043]
[-295.88146973 -255.73344421]
[-293.07507324 -270.48544312]
[-288.60531616 -284.82138062]
[-282.53048706 -298.55435181]
[-274.92977905 -311.50531006]
[-265.90228271 -323.50540161]
[-255.56571960 -334.39819336]
[-244.05480957 -344.04168701]
[-231.51963806 -352.31015015]
[-218.12364197 -359.09576416]
[-204.04142761 -364.31008911]
[-189.45661926 -367.88516235]
[-174.55934143 -369.77435303]
[-159.54382324 -369.95300293]
[-144.60581970 -368.41885376]
[-129.94006348 -365.19183350]
[-115.73777771 -360.31408691]
[-102.18409729 -353.84912109]
[-89.45573425 -345.88128662]
[-77.71862030 -336.51443481]
[-67.12577820 -325.87066650]
[-57.81531143 -314.08877563]
[-49.90859222 -301.32235718]
[-43.50870514 -287.73785400]
[-38.69908524 -273.51232910]
[-35.54243851 -258.83126831]
[-34.07991409 -243.88607788]
[-34.33058167 -228.87158203]
[-36.29117203 -213.98353577]
[-39.93612289 -199.41604614]
[-45.21792221 -185.35900879]
[-52.06770325 -171.99568176]
[-60.39616776 -159.50030518]
[-70.09473419 -148.03576660]
[-81.03697205 -137.75154114]
[-72.07627106 -125.72216797]
[-63.11557770 -113.69279480]
[-53.80069351 -101.93553925]
[-44.13988495 -90.46083832]
[-34.47907257 -78.98614502]
[-31.01623344 -78.32200623]
[-27.70302773 -75.94762421]
[-25.33978271 -71.95157623]
[-24.65699005 -66.77655029]
[-15.51818752 -54.88191986]
[-6.37938547 -42.98728561]
[2.75941706 -31.09265327]
[11.89821911 -19.19802094]
[21.03702164 -7.30338812]
[37.59210968 -1.48136568]
[39.85500336 16.79323006]
[49.16988754 28.55047989]
[58.48477173 40.30773163]
[67.79965210 52.06498337]
[77.46046448 63.53968430]
[87.45863342 74.72165680]
[97.45681000 85.90363312]
[110.67800140 90.45244598]
[113.72516632 104.09819794]
[123.72333527 115.28016663]
[138.68965149 120.41046143]
[141.40507507 135.05545044]
[151.40324402 146.23742676]
[161.40141296 157.41940308]
[171.39958191 168.60137939]
[181.39775085 179.78335571]
[191.39593506 190.96531677]
[201.39410400 202.14729309]
[214.20501709 203.64497375]
[222.30232239 213.16430664]
[221.76058960 225.24871826]
[231.59117126 236.57830811]
[241.42175293 247.90789795]
[251.25233459 259.23748779]
[261.08291626 270.56707764]
[270.91351318 281.89669800]
[280.74407959 293.22628784]
[290.57467651 304.55587769]
[300.40524292 315.88546753]
[304.05303955 301.33578491]
[317.63876343 294.97747803]
[331.14755249 301.49768066]
[334.62118530 316.08993530]
[325.49905396 327.99737549]
[310.50717163 328.44293213]
[319.46786499 340.47232056]
[328.42855835 352.50167847]
[342.87750244 358.94674683]
[344.27551270 373.77560425]
[353.23623657 385.80496216]
[362.19692993 397.83435059]
[375.35446167 390.58227539]
[389.37698364 385.18945312]
[404.00323486 381.75628662]
[418.96075439 380.34680176]
[433.97088623 380.98724365]
[448.75396729 383.66564941]
[463.03463745 388.33215332]
[476.54684448 394.89978027]
[489.03887939 403.24621582]
[500.27798462 413.21597290]
[510.05480957 424.62332153]
[518.18725586 437.25570679]
[524.52374268 450.87786865]
[528.94622803 465.23596191]
[531.37243652 480.06253052]
[531.75701904 495.08139038]
[530.09295654 510.01269531]
[526.41113281 524.57836914]
[520.78015137 538.50695801]
[513.30499268 551.53906250]
[504.12484741 563.43188477]
[493.41076660 573.96380615]
[481.36230469 582.93872070]
[468.20397949 590.18933105]
[454.18087769 595.58068848]
[439.55426025 599.01220703]
[424.59658813 600.42010498]
[409.58654785 599.77807617]
[394.80374146 597.09802246]
[380.52355957 592.42999268]
[367.01208496 585.86090088]
[354.52096558 577.51312256]
[343.28289795 567.54211426]
[333.50732422 556.13372803]
[325.37628174 543.50042725]
[319.04125977 529.87762451]
[314.62026978 515.51904297]
[312.19570923 500.69219971]
[311.81271362 485.67330933]
[313.47845459 470.74218750]
[317.16183472 456.17694092]
[322.79428101 442.24893188]
[330.27087402 429.21765137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[5 163]
[6 162]
[7 161]
[8 155]
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[24 138]
[26 136]
[27 135]
[29 133]
[30 132]
[31 131]
[36 130]
[37 129]
[38 128]
[39 127]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[48 116]
[49 115]
[50 114]
[55 113]
[56 112]
[57 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
