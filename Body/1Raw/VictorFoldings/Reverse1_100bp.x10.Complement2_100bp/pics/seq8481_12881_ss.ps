%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[87.42918396 454.12246704]
[81.18643951 468.32839966]
[67.76898956 476.12271118]
[52.33611679 474.50839233]
[40.82207108 464.10617065]
[37.65424347 448.91589355]
[44.05072403 434.77853394]
[57.55194092 427.13021851]
[59.11246109 412.21160889]
[60.67298508 397.29299927]
[62.23350906 382.37442017]
[63.79403305 367.45581055]
[65.35455322 352.53720093]
[56.42001724 345.44210815]
[51.97393036 334.80499268]
[53.22757721 323.22387695]
[59.98452759 313.58828735]
[70.66088104 308.35839844]
[72.66489410 293.49285889]
[74.66890717 278.62731934]
[76.67292023 263.76181030]
[78.67693329 248.89627075]
[80.68095398 234.03074646]
[82.24147034 219.11213684]
[83.35712433 204.15368652]
[75.70369720 194.78610229]
[76.51074219 182.31483459]
[85.88988495 173.46076965]
[87.22811890 158.52058411]
[88.56635284 143.58039856]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[84.32715607 104.32907867]
[85.45252991 92.73706818]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[97.16262054 55.03413391]
[98.72314453 40.11552811]
[89.04594421 27.90940285]
[90.84105682 12.80204678]
[102.53736877 3.65153599]
[104.09789276 -11.26706886]
[105.65841675 -26.18567276]
[107.21894073 -41.10427856]
[99.09407043 -28.49528885]
[87.90536499 -18.50465584]
[74.46052551 -11.85361004]
[59.73016357 -9.02229691]
[44.77766418 -10.21511078]
[30.68246841 -15.34594250]
[18.46211624 -24.04439163]
[8.99880886 -35.68251038]
[2.97570872 -49.42013168]
[0.82762861 -64.26552582]
[2.70964074 -79.14699554]
[8.48588085 -92.99022675]
[17.73935699 -104.79586792]
[29.80205345 -113.71165466]
[43.80315399 -119.09396362]
[58.73190689 -120.55422974]
[73.51058960 -117.98703003]
[87.07231903 -111.57770538]
[98.43806458 -101.78894043]
[106.78732300 -89.32740784]
[111.51734924 -75.09269714]
[112.28658295 -60.11128235]
[118.36041260 -73.82654572]
[124.43424988 -87.54181671]
[130.50808716 -101.25708008]
[136.27410889 -115.10456848]
[141.72947693 -129.07736206]
[147.18482971 -143.05017090]
[152.64018250 -157.02296448]
[158.09555054 -170.99575806]
[163.55090332 -184.96855164]
[169.00625610 -198.94136047]
[157.47106934 -189.35284424]
[143.37559509 -184.22277832]
[128.37576294 -184.15382385]
[114.23371887 -189.15408325]
[102.61086273 -198.63613892]
[94.87265015 -211.48603821]
[91.92813873 -226.19419861]
[94.12326050 -241.03269958]
[101.20012665 -254.25836182]
[112.32736206 -264.31741333]
[126.19773865 -270.02816772]
[141.18179321 -270.71966553]
[155.51921082 -266.31072998]
[167.52561951 -257.31930542]
[175.79055786 -244.80169678]
[179.34304810 -230.22843933]
[177.76531982 -215.31008911]
[186.36389160 -227.60092163]
[194.96244812 -239.89176941]
[203.56101990 -252.18260193]
[192.20881653 -262.00765991]
[181.92701721 -272.94787598]
[172.82463074 -284.88732910]
[164.99812317 -297.69943237]
[158.53047180 -311.24835205]
[153.49023438 -325.39050293]
[149.93084717 -339.97592163]
[147.89002991 -354.85003662]
[147.38941956 -369.85516357]
[148.43434143 -384.83221436]
[151.01368713 -399.62243652]
[155.10014343 -414.06906128]
[160.65036011 -428.01895142]
[167.60552979 -441.32418823]
[175.89192200 -453.84378052]
[185.42167664 -465.44494629]
[196.09379578 -476.00479126]
[207.79513550 -485.41131592]
[220.40165710 -493.56481934]
[233.77972412 -500.37887573]
[247.78750610 -505.78125000]
[262.27655029 -509.71469116]
[277.09323120 -512.13745117]
[292.08050537 -513.02392578]
[307.07949829 -512.36462402]
[321.93118286 -510.16662598]
[336.47814941 -506.45315552]
[350.56619263 -501.26364136]
[364.04595947 -494.65304565]
[376.77456665 -486.69146729]
[388.61706543 -477.46331787]
[399.44793701 -467.06637573]
[409.15237427 -455.61090088]
[417.62750244 -443.21832275]
[424.78344727 -430.01995850]
[430.54440308 -416.15579224]
[434.84924316 -401.77273560]
[437.65237427 -387.02328491]
[438.92410278 -372.06375122]
[438.65087891 -357.05279541]
[436.83566284 -342.14947510]
[433.49765015 -327.51177979]
[428.67227173 -313.29492188]
[422.41064453 -299.64953613]
[414.77914429 -286.72033691]
[405.85867310 -274.64434814]
[395.74380493 -263.54959106]
[384.54177856 -253.55368042]
[372.37130737 -244.76257324]
[359.36141968 -237.26943970]
[345.65002441 -231.15374756]
[331.38247681 -226.48031616]
[316.71002197 -223.29867554]
[301.78817749 -221.64254761]
[286.77514648 -221.52951050]
[271.83004761 -222.96073914]
[257.11132812 -225.92108154]
[242.77502441 -230.37915039]
[228.97309875 -236.28767395]
[215.85185242 -243.58404541]
[207.25329590 -231.29319763]
[198.65472412 -219.00236511]
[190.05616760 -206.71153259]
[182.97904968 -193.48599243]
[177.52369690 -179.51319885]
[172.06834412 -165.54040527]
[166.61299133 -151.56761169]
[161.15762329 -137.59480286]
[155.70227051 -123.62200928]
[150.24691772 -109.64920807]
[151.32017517 -106.29057312]
[150.81996155 -102.24522400]
[148.44125366 -98.25836945]
[144.22334290 -95.18325043]
[138.14952087 -81.46797943]
[132.07568359 -67.75271606]
[126.00184631 -54.03744888]
[122.13754272 -39.54375458]
[120.57701874 -24.62515068]
[119.01649475 -9.70654583]
[117.45597076 5.21205902]
[127.00548553 16.58493614]
[125.63541412 31.73675346]
[113.64174652 41.67605209]
[112.08122253 56.59465790]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[116.18365479 101.57114410]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[103.50653839 144.91864014]
[102.16830444 159.85882568]
[100.83007050 174.79901123]
[108.96328735 191.31967163]
[98.31557465 205.26933289]
[97.19992828 220.22778320]
[99.22335815 224.06962585]
[99.85544586 227.96385193]
[99.25056458 231.46662903]
[97.69136810 234.22987366]
[95.54647827 236.03475952]
[93.54246521 250.90028381]
[91.53845215 265.76580811]
[89.53443909 280.63134766]
[87.53042603 295.49685669]
[85.52641296 310.36239624]
[97.57917786 324.97900391]
[95.16207886 343.44711304]
[80.27316284 354.09771729]
[78.71263885 369.01632690]
[77.15211487 383.93493652]
[75.59159088 398.85354614]
[74.03106689 413.77215576]
[72.47054291 428.69073486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[18 202]
[19 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 192]
[25 191]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[35 183]
[36 182]
[37 181]
[38 180]
[41 177]
[42 176]
[43 175]
[44 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[93 159]
[94 158]
[95 157]
[96 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
