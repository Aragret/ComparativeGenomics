%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[111.18051147 714.93896484]
[96.32619476 712.76989746]
[81.75057983 709.17730713]
[67.58974457 704.19470215]
[53.97592163 697.86859131]
[41.03621674 690.25811768]
[28.89144516 681.43432617]
[17.65500450 671.47949219]
[7.43180943 660.48669434]
[-1.68268740 648.55853271]
[-9.60338402 635.80633545]
[-16.25632477 622.34924316]
[-21.57939339 608.31280518]
[-25.52288628 593.82818604]
[-28.04998398 579.03057861]
[-29.13709259 564.05816650]
[-28.77405930 549.05072021]
[-26.96427345 534.14837646]
[-23.72463608 519.49023438]
[-19.08539391 505.21322632]
[-13.08986378 491.45062256]
[-5.79402399 478.33093262]
[2.73400283 465.97665405]
[12.41459179 454.50314331]
[23.15735435 444.01748657]
[34.86198807 434.61764526]
[47.41920471 426.39135742]
[60.71175766 419.41543579]
[74.61553955 413.75500488]
[89.00072479 409.46295166]
[103.73300934 406.57928467]
[118.67482758 405.13098145]
[118.67482758 390.13098145]
[118.67482758 375.13098145]
[118.67482758 360.13098145]
[118.67482758 345.13098145]
[118.67482758 330.13098145]
[109.09413147 315.42803955]
[118.43357086 299.55804443]
[117.31792450 284.59957886]
[115.31391144 269.73406982]
[113.30989838 254.86853027]
[103.94158936 243.28907776]
[109.76580811 228.57890320]
[107.76179504 213.71337891]
[105.75778198 198.84785461]
[103.75376892 183.98231506]
[101.74975586 169.11679077]
[99.74573517 154.25126648]
[90.37742615 142.67179871]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.92479706 44.31132507]
[81.19266510 38.85396576]
[80.83113098 33.18243027]
[83.08925629 28.97411728]
[81.52873230 14.05551147]
[79.96820831 -0.86309290]
[78.40768433 -15.78169727]
[76.84716034 -30.70030212]
[75.28663635 -45.61890793]
[73.72611237 -60.53751373]
[72.16559601 -75.45611572]
[70.60507202 -90.37471771]
[69.04454803 -105.29332733]
[67.48402405 -120.21192932]
[63.91603470 -125.77799225]
[63.72351837 -131.45777893]
[66.10594177 -135.59698486]
[64.99029541 -150.55545044]
[63.87464523 -165.51390076]
[60.11562729 -173.83901978]
[62.85543060 -180.70307922]
[53.74406052 -189.83245850]
[53.30869293 -202.32223511]
[61.23763275 -211.45779419]
[60.56784821 -226.44282532]
[59.89806366 -241.42787170]
[59.22827911 -256.41290283]
[58.55849075 -271.39794922]
[56.99797058 -286.31655884]
[54.55224228 -301.11581421]
[52.10651398 -315.91510010]
[49.66078568 -330.71435547]
[34.63624954 -332.02359009]
[20.40959930 -337.02890015]
[7.87513781 -345.41567993]
[-2.17920971 -356.65673828]
[-9.12141800 -370.04541016]
[-12.51509380 -384.74008179]
[-12.14690876 -399.81707764]
[-8.04000664 -414.32858276]
[-0.45255026 -427.36242676]
[10.13850594 -438.09930420]
[23.06739807 -445.86425781]
[37.52140808 -450.16918945]
[52.59194183 -450.74349976]
[67.33165741 -447.55105591]
[80.81399536 -440.79254150]
[92.19145203 -430.89282227]
[100.74883270 -418.47421265]
[105.94820404 -404.31732178]
[107.46273804 -389.31210327]
[105.19721985 -374.40176392]
[99.29407501 -360.52359009]
[90.12436676 -348.54998779]
[78.26452637 -339.23361206]
[64.46006012 -333.16009521]
[66.90578461 -318.36080933]
[69.35150909 -303.56155396]
[71.79724121 -288.76226807]
[79.69917297 -301.51214600]
[93.54216003 -307.28900146]
[108.16310120 -303.93817139]
[118.10874939 -292.70944214]
[119.66963196 -277.79089355]
[112.26356506 -264.74670410]
[98.65283966 -258.44210815]
[83.91390991 -261.22851562]
[73.54353333 -272.06771851]
[74.21331787 -257.08270264]
[74.88310242 -242.09765625]
[75.55288696 -227.11260986]
[76.22267151 -212.12757874]
[86.45033264 -197.86706543]
[77.82883453 -181.59588623]
[78.83309937 -166.62954712]
[79.94874573 -151.67109680]
[81.06439209 -136.71264648]
[82.40262604 -121.77245331]
[83.96315002 -106.85385132]
[85.52367401 -91.93524170]
[87.08419800 -77.01663971]
[88.64472198 -62.09803391]
[90.20524597 -47.17943192]
[91.76576996 -32.26082611]
[93.32628632 -17.34222031]
[94.88681030 -2.42361593]
[96.44733429 12.49498844]
[98.00785828 27.41359329]
[99.79032135 42.30731201]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[120.57882690 138.60037231]
[114.61126709 152.24725342]
[116.61528015 167.11277771]
[118.61929321 181.97830200]
[120.62330627 196.84384155]
[122.62731934 211.70936584]
[124.63133240 226.57489014]
[134.14299011 239.21763611]
[128.17543030 252.86451721]
[130.17944336 267.73004150]
[132.18345642 282.59558105]
[140.46150208 270.08660889]
[154.47033691 264.72451782]
[168.98503113 268.50915527]
[178.59194946 280.02902222]
[179.70796204 294.98745728]
[171.91680908 307.80532837]
[158.12440491 313.70190430]
[143.47497559 310.47790527]
[133.43191528 299.33471680]
[142.12654114 308.86184692]
[142.00378418 321.35858154]
[133.67481995 330.13098145]
[133.67481995 345.13098145]
[133.67481995 360.13098145]
[133.67481995 375.13098145]
[133.67481995 390.13098145]
[133.67481995 405.13098145]
[148.61663818 406.57928467]
[163.34892273 409.46295166]
[177.73411560 413.75500488]
[191.63789368 419.41543579]
[204.93045044 426.39135742]
[217.48767090 434.61764526]
[229.19229126 444.01748657]
[239.93505859 454.50314331]
[249.61564636 465.97665405]
[258.14367676 478.33093262]
[265.43951416 491.45062256]
[271.43505859 505.21322632]
[276.07427979 519.49023438]
[279.31393433 534.14837646]
[281.12371826 549.05072021]
[281.48675537 564.05816650]
[280.39962769 579.03057861]
[277.87252808 593.82818604]
[273.92904663 608.31280518]
[268.60598755 622.34924316]
[261.95303345 635.80633545]
[254.03233337 648.55853271]
[244.91784668 660.48669434]
[234.69464111 671.47949219]
[223.45820618 681.43432617]
[211.31343079 690.25811768]
[198.37373352 697.86859131]
[184.75990295 704.19470215]
[170.59907532 709.17730713]
[156.02345276 712.76989746]
[141.16914368 714.93896484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 179]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[39 171]
[40 162]
[41 161]
[42 160]
[44 158]
[45 157]
[46 156]
[47 155]
[48 154]
[49 153]
[51 151]
[52 150]
[54 148]
[55 147]
[56 146]
[57 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[73 133]
[74 132]
[75 131]
[77 130]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
