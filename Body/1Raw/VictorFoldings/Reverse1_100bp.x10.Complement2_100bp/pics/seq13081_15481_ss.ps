%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[168.50238037 543.21087646]
[164.75741577 528.67150879]
[162.55278015 513.82031250]
[161.91261292 498.82006836]
[162.84393311 483.83508301]
[165.33653259 469.02951050]
[169.36309814 454.56561279]
[174.87953186 440.60183716]
[181.82536316 427.29119873]
[190.12451172 414.77954102]
[199.68603516 403.20391846]
[210.40519714 392.69119263]
[222.16452026 383.35650635]
[234.83517456 375.30218506]
[228.15496826 361.87182617]
[221.47477722 348.44143677]
[214.79458618 335.01104736]
[208.11439514 321.58068848]
[201.23497009 308.25125122]
[194.15786743 295.02572632]
[187.08076477 281.80020142]
[180.00366211 268.57467651]
[167.17684937 261.00354004]
[167.48782349 245.18537903]
[160.41072083 231.95985413]
[153.33361816 218.73432922]
[146.25651550 205.50878906]
[134.77397156 201.70381165]
[128.76968384 190.74333191]
[131.94079590 178.24105835]
[125.06137848 164.91162109]
[118.18196106 151.58219910]
[105.46929932 143.82090759]
[106.01574707 128.00915527]
[91.23888397 127.27534485]
[78.79875183 119.26677704]
[72.01332855 106.11945343]
[72.69239044 91.33998108]
[80.65482330 78.87026215]
[73.77541351 65.54083252]
[66.89599609 52.21140671]
[53.69127274 43.49671555]
[54.72978210 28.63836098]
[47.85036850 15.30893135]
[40.97095871 1.97950184]
[34.09154510 -11.34992695]
[26.62380409 -24.35887909]
[18.58263016 -37.02140427]
[10.54145813 -49.68392944]
[2.50028467 -62.34645462]
[-5.54088831 -75.00897980]
[-13.67610359 -87.61128998]
[-21.90491104 -100.15269470]
[-38.53906631 -108.05120087]
[-38.85584259 -125.59732819]
[-47.27046204 -138.01481628]
[-55.68508148 -150.43231201]
[-68.95236206 -143.40193176]
[-82.90200806 -137.84722900]
[-97.37045288 -133.83332825]
[-112.18806458 -131.40730286]
[-127.18111420 -130.59759521]
[-142.17382812 -131.41369629]
[-156.99040222 -133.84603882]
[-171.45713806 -137.86608887]
[-185.40440369 -143.42674255]
[-198.66868591 -150.46278381]
[-211.09448242 -158.89172363]
[-222.53607178 -168.61474609]
[-232.85934448 -179.51783752]
[-241.94323730 -191.47317505]
[-249.68125916 -204.34059143]
[-255.98268127 -217.96920776]
[-260.77362061 -232.19924927]
[-263.99792480 -246.86387634]
[-265.61776733 -261.79113770]
[-265.61416626 -276.80603027]
[-263.98715210 -291.73254395]
[-260.75582886 -306.39559937]
[-255.95803833 -320.62335205]
[-249.65007019 -334.24893188]
[-241.90588379 -347.11264038]
[-232.81625366 -359.06359863]
[-222.48774719 -369.96176147]
[-211.04148865 -379.67926025]
[-198.61164856 -388.10226440]
[-185.34399414 -395.13192749]
[-171.39405823 -400.68588257]
[-156.92538452 -404.69900513]
[-142.10765076 -407.12423706]
[-127.11455536 -407.93313599]
[-112.12188721 -407.11621094]
[-97.30544281 -404.68307495]
[-82.83892822 -400.66223145]
[-68.89195251 -395.10083008]
[-55.62804794 -388.06408691]
[-43.20271301 -379.63449097]
[-31.76163864 -369.91085815]
[-21.43896103 -359.00720215]
[-12.35571003 -347.05136108]
[-4.61838102 -334.18353271]
[1.68230903 -320.55456543]
[6.47248793 -306.32427979]
[9.69599342 -291.65948486]
[11.31503201 -276.73211670]
[11.31062031 -261.71722412]
[9.68281078 -246.79083252]
[6.45068789 -232.12792969]
[1.65214765 -217.90045166]
[-4.65655041 -204.27519226]
[-12.40143967 -191.41191101]
[-21.49171448 -179.46142578]
[-31.82079697 -168.56384277]
[-43.26758575 -158.84693909]
[-34.85296631 -146.42944336]
[-26.43834686 -134.01194763]
[-14.62226772 -131.42219543]
[-7.51028395 -121.14583588]
[-9.36351109 -108.38150024]
[-1.13470364 -95.84009552]
[5.16295242 -91.97211456]
[7.12163687 -83.05015564]
[15.16280937 -70.38762665]
[23.20398331 -57.72510147]
[31.24515533 -45.06257629]
[39.28632736 -32.40005112]
[43.60268402 -46.76560211]
[56.74690628 -53.99259567]
[71.18938446 -49.94108200]
[78.65681458 -36.93194962]
[74.87151337 -22.41742516]
[62.00186920 -14.71208286]
[47.42097473 -18.22933960]
[54.30038834 -4.89991093]
[61.17979813 8.42951870]
[68.05921173 21.75894737]
[80.77187347 29.52022743]
[80.22542572 45.33199310]
[87.10484314 58.66142273]
[93.98425293 71.99085236]
[108.76111603 72.72465515]
[121.20124817 80.73322296]
[127.98667145 93.88054657]
[127.30760956 108.66001892]
[119.34517670 121.12973785]
[132.54989624 129.84442139]
[131.51139832 144.70277405]
[138.39080811 158.03221130]
[145.27021790 171.36163330]
[160.99238586 180.94781494]
[159.48204041 198.43168640]
[166.55914307 211.65721130]
[173.63624573 224.88275146]
[180.71334839 238.10827637]
[194.04637146 246.62539673]
[193.22918701 261.49755859]
[200.30628967 274.72308350]
[207.38339233 287.94863892]
[214.46051025 301.17416382]
[219.86576843 304.98135376]
[222.18826294 310.16815186]
[221.54476929 314.90048218]
[228.22496033 328.33087158]
[234.90515137 341.76123047]
[241.58535767 355.19161987]
[248.26554871 368.62200928]
[262.33340454 363.37673950]
[276.87249756 359.63070679]
[291.72351074 357.42498779]
[306.72372437 356.78372192]
[321.70880127 357.71395874]
[336.51455688 360.20547485]
[350.97872925 364.23098755]
[364.94290161 369.74639893]
[378.25405884 376.69128418]
[390.76632690 384.98950195]
[402.34262085 394.55020142]
[412.85614014 405.26858521]
[422.19168091 417.02722168]
[430.24691772 429.69729614]
[436.93365479 443.13995361]
[442.17855835 457.20794678]
[445.92422485 471.74713135]
[448.12957764 486.59820557]
[448.77047729 501.59841919]
[447.83990479 516.58349609]
[445.34802246 531.38916016]
[441.32214355 545.85327148]
[435.80639648 559.81732178]
[428.86120605 573.12829590]
[420.56268311 585.64031982]
[411.00170898 597.21643066]
[400.28308105 607.72967529]
[388.52420044 617.06494141]
[375.85394287 625.11987305]
[362.41110229 631.80627441]
[348.34298706 637.05084229]
[333.80371094 640.79614258]
[318.95257568 643.00115967]
[303.95233154 643.64166260]
[288.96731567 642.71069336]
[274.16168213 640.21850586]
[259.69769287 636.19226074]
[245.73379517 630.67614746]
[232.42298889 623.73065186]
[219.91111755 615.43182373]
[208.33526611 605.87054443]
[197.82226562 595.15167236]
[188.48731995 583.39257812]
[180.43267822 570.72210693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 166]
[15 165]
[16 164]
[17 163]
[18 162]
[19 159]
[20 158]
[21 157]
[22 156]
[24 154]
[25 153]
[26 152]
[27 151]
[30 149]
[31 148]
[32 147]
[34 145]
[39 140]
[40 139]
[41 138]
[43 136]
[44 135]
[45 134]
[46 133]
[47 126]
[48 125]
[49 124]
[50 123]
[51 122]
[52 120]
[53 119]
[55 116]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
