%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[16.45269966 574.58831787]
[4.53183699 584.96466064]
[-11.22867775 583.78924561]
[-21.47841072 571.75933838]
[-20.13637733 556.01208496]
[-7.99878311 545.89013672]
[-6.88313437 530.93170166]
[-5.76748562 515.97320557]
[-4.65183687 501.01477051]
[-3.53618836 486.05633545]
[-2.42053962 471.09786987]
[-11.46470356 483.06460571]
[-24.76559448 489.99905396]
[-39.75502014 490.56222534]
[-53.53875351 484.64541626]
[-63.45537567 473.39105225]
[-67.59014130 458.97219849]
[-65.14468384 444.17288208]
[-56.59119797 431.85061646]
[-43.58121872 424.38467407]
[-28.62677002 423.21658325]
[-14.61532021 428.57189941]
[-4.25226402 439.41656494]
[0.46158189 453.65795898]
[-3.84202290 439.39862061]
[7.10458565 427.97573853]
[10.86088657 413.45367432]
[14.61718655 398.93161011]
[18.37348747 384.40957642]
[21.69574738 369.78210449]
[24.58102036 355.06222534]
[18.00737381 338.79095459]
[30.22502518 325.01376343]
[32.89081955 310.25256348]
[35.55661774 295.49133301]
[38.22241211 280.73013306]
[27.36147499 291.07614136]
[12.80619240 294.70156860]
[-1.63872015 290.65872192]
[-12.19739628 280.00442505]
[-16.10982323 265.52365112]
[-12.35330391 251.00163269]
[-1.90978086 240.23442078]
[12.49083233 236.03652954]
[27.08425140 239.50526428]
[38.05578995 249.73391724]
[42.53747559 264.04785156]
[47.36347198 249.84539795]
[52.18946838 235.64294434]
[56.69709778 221.33625793]
[60.88410950 206.93247986]
[59.73263168 199.63208008]
[65.24216461 192.34628296]
[69.64316559 178.00643921]
[74.04416656 163.66658020]
[78.44515991 149.32673645]
[82.63217163 134.92295837]
[86.60427094 120.45843506]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[98.19697571 76.97815704]
[101.95326996 62.45609665]
[105.70957184 47.93403625]
[109.46587372 33.41197586]
[113.11396027 18.86235619]
[116.65363312 4.28598118]
[120.19330597 -10.29039383]
[123.18807983 -24.98839760]
[125.63381195 -39.78767014]
[128.07952881 -54.58694077]
[130.52526855 -69.38620758]
[131.86349487 -84.32639313]
[132.08682251 -99.32472992]
[132.31015015 -114.32307434]
[132.53347778 -129.32141113]
[122.10211182 -137.84204102]
[118.53481293 -150.62815857]
[122.91809082 -162.95166016]
[133.44058228 -170.38850403]
[126.11759949 -184.41293335]
[134.23040771 -196.90419006]
[134.67701721 -211.89755249]
[124.11876678 -223.35011292]
[124.78527069 -238.54913330]
[135.76860046 -248.54423523]
[136.21520996 -263.53756714]
[136.66181946 -278.53094482]
[137.10842896 -293.52429199]
[137.10842896 -308.52429199]
[136.66181946 -323.51763916]
[128.51705933 -337.08132935]
[135.87199402 -350.03332520]
[135.42538452 -365.02667236]
[134.97879028 -380.02001953]
[134.53218079 -395.01336670]
[134.08557129 -410.00671387]
[133.63896179 -425.00006104]
[119.41577911 -430.36376953]
[108.33128357 -440.76580811]
[102.07579041 -454.61993408]
[101.60321045 -469.81353760]
[106.98561859 -484.02966309]
[117.40222931 -495.10046387]
[131.26458740 -501.33770752]
[146.45878601 -501.79031372]
[160.66781616 -496.38922119]
[171.72489929 -485.95803833]
[177.94392395 -472.08749390]
[178.37652588 -456.89270020]
[172.95674133 -442.69079590]
[162.51103210 -431.64743042]
[148.63230896 -425.44665527]
[149.07891846 -410.45330811]
[149.52552795 -395.45996094]
[149.97213745 -380.46661377]
[150.41874695 -365.47326660]
[150.86534119 -350.47991943]
[158.97814941 -337.98864746]
[151.65516663 -323.96423340]
[152.10177612 -308.97088623]
[154.04725647 -306.95266724]
[155.31051636 -304.04220581]
[155.54769897 -300.49548340]
[154.51391602 -296.68814087]
[152.10177612 -293.07766724]
[151.65516663 -278.08432007]
[151.20855713 -263.09097290]
[150.76194763 -248.09762573]
[161.13088989 -237.46650696]
[160.89155579 -222.25476074]
[149.67036438 -211.45094299]
[149.22375488 -196.45759583]
[156.57868958 -183.50558472]
[148.43392944 -169.94190979]
[160.47908020 -158.20507812]
[160.30532837 -141.05035400]
[147.53181458 -129.09808350]
[147.30848694 -114.09973907]
[147.08515930 -99.10140228]
[146.86183167 -84.10306549]
[155.89053345 -96.08148956]
[169.65991211 -102.03162384]
[184.57070923 -100.39810944]
[196.72525024 -91.60795593]
[202.94639587 -77.95886993]
[201.60794067 -63.01870728]
[193.05973816 -50.69277954]
[179.53630066 -44.20306396]
[164.57260132 -45.24594498]
[152.08010864 -53.54882812]
[145.32453918 -66.94048309]
[142.87879944 -52.14121246]
[140.43307495 -37.34194183]
[137.98735046 -22.54267120]
[151.51556396 -29.02243423]
[165.08221436 -22.62352562]
[168.68647766 -8.06298447]
[159.67140198 3.92570162]
[144.68258667 4.50491858]
[134.76968384 -6.75072145]
[131.23001099 7.82565403]
[127.69033813 22.40202904]
[129.16664124 29.64373589]
[123.98793030 37.16827774]
[120.23163605 51.69033813]
[116.47533417 66.21239471]
[112.71903229 80.73445892]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[101.06879425 124.43052673]
[97.09669495 138.89505005]
[98.39602661 145.37759399]
[96.50967407 150.73843384]
[92.78501129 153.72773743]
[88.38401031 168.06758118]
[83.98301697 182.40742493]
[79.58201599 196.74728394]
[75.28789520 211.11949158]
[71.10088348 225.52326965]
[72.34695435 230.59223938]
[71.59886932 235.17411804]
[69.37609100 238.59089661]
[66.39192200 240.46894836]
[61.56592941 254.67140198]
[56.73992920 268.87387085]
[52.98363113 283.39590454]
[50.31783295 298.15713501]
[47.65203857 312.91833496]
[44.98624420 327.67956543]
[51.68595505 338.70120239]
[49.16172028 350.94097900]
[39.30091095 357.94747925]
[36.41563797 372.66738892]
[37.96820450 376.72244263]
[38.13305664 380.66418457]
[37.11621857 384.07028198]
[35.23971558 386.62866211]
[32.89554596 388.16586304]
[29.13924599 402.68792725]
[25.38294601 417.20999146]
[21.62664413 431.73205566]
[25.66157341 447.03009033]
[14.98364162 457.41424561]
[12.53791332 472.21353149]
[11.42226505 487.17196655]
[10.30661678 502.13043213]
[9.19096756 517.08886719]
[8.07531929 532.04730225]
[6.95967054 547.00579834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 206]
[11 205]
[24 204]
[26 202]
[27 201]
[28 200]
[29 199]
[30 194]
[31 193]
[33 190]
[34 189]
[35 188]
[36 187]
[47 186]
[48 185]
[49 184]
[50 180]
[51 179]
[53 178]
[54 177]
[55 176]
[56 175]
[57 172]
[58 171]
[59 170]
[60 168]
[61 167]
[62 166]
[63 165]
[64 164]
[65 162]
[66 161]
[67 160]
[68 154]
[69 153]
[70 152]
[71 151]
[72 140]
[73 139]
[74 138]
[75 137]
[79 134]
[81 132]
[82 131]
[85 128]
[86 127]
[87 126]
[88 125]
[89 120]
[90 119]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
