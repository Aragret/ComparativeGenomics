%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[91.80998230 560.82604980]
[79.38871765 552.40576172]
[67.59236145 543.13031006]
[56.47967148 533.04577637]
[46.10602188 522.20251465]
[36.52308655 510.65454102]
[27.77860832 498.45932007]
[19.91615486 485.67767334]
[12.97489548 472.37322998]
[6.98941183 458.61233521]
[1.98952353 444.46347046]
[-1.99985981 429.99716187]
[-4.95886326 415.28549194]
[-6.87274504 400.40176392]
[-7.73197031 385.42007446]
[-7.53225851 370.41510010]
[-6.27460384 355.46160889]
[-3.96527314 340.63406372]
[-0.61577076 326.00634766]
[3.75721598 311.65136719]
[9.13190079 297.64059448]
[15.48150730 284.04385376]
[22.77440071 270.92886353]
[30.97425079 258.36099243]
[40.04020309 246.40284729]
[49.92708969 235.11398315]
[60.58565903 224.55065918]
[71.96280670 214.76550293]
[84.00185394 205.80725098]
[96.64281464 197.72053528]
[109.82272339 190.54565430]
[123.47590637 184.31834412]
[118.22919464 170.26586914]
[112.98247528 156.21339417]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[77.31626892 85.13640594]
[73.23556519 73.32405853]
[78.13518524 62.26420593]
[73.09826660 48.13517761]
[68.06134796 34.00614548]
[53.64185715 38.15641785]
[38.99223328 41.40219879]
[24.16916275 43.73094177]
[9.22998619 45.13362885]
[-5.76749611 45.60483932]
[-20.76526260 45.14274216]
[-35.70528793 43.74913406]
[-50.52977371 41.42940140]
[-65.18136597 38.19252014]
[-79.60337830 34.05101395]
[-93.74001312 29.02090645]
[-107.53658295 23.12165451]
[-120.93971252 16.37608528]
[-133.89753723 8.81029415]
[-146.35993958 0.45355162]
[-158.27868652 -8.66181087]
[-169.60769653 -18.50052643]
[-180.30310059 -29.02453232]
[-190.32354736 -40.19311142]
[-199.63026428 -51.96305847]
[-208.18724060 -64.28883362]
[-215.96136475 -77.12274933]
[-222.92257690 -90.41515350]
[-229.04393005 -104.11462402]
[-234.30175781 -118.16815948]
[-238.67570496 -132.52139282]
[-242.14884949 -147.11877441]
[-244.70774841 -161.90385437]
[-246.34252930 -176.81941223]
[-247.04684448 -191.80775452]
[-246.81797791 -206.81089783]
[-245.65679932 -221.77078247]
[-243.56782532 -236.62954712]
[-240.55912781 -251.32968140]
[-236.64233398 -265.81433105]
[-231.83261108 -280.02746582]
[-226.14855957 -293.91409302]
[-219.61218262 -307.42047119]
[-212.24876404 -320.49435425]
[-204.08677673 -333.08517456]
[-195.15782166 -345.14419556]
[-185.49641418 -356.62478638]
[-175.13996887 -367.48251343]
[-164.12852478 -377.67538452]
[-152.50468445 -387.16397095]
[-140.31343079 -395.91152954]
[-127.60193634 -403.88424683]
[-114.41935730 -411.05126953]
[-100.81671143 -417.38485718]
[-86.84661865 -422.86053467]
[-72.56312561 -427.45709229]
[-58.02149582 -431.15676880]
[-43.27799225 -433.94525146]
[-28.38964462 -435.81170654]
[-13.41406250 -436.74896240]
[1.59081972 -436.75335693]
[16.56694984 -435.82492065]
[31.45639038 -433.96719360]
[46.20153046 -431.18737793]
[60.74533081 -427.49627686]
[75.03151703 -422.90808105]
[89.00482941 -417.44061279]
[102.61119080 -411.11502075]
[115.79798126 -403.95574951]
[128.51416016 -395.99047852]
[140.71055603 -387.25009155]
[152.33995056 -377.76834106]
[163.35739136 -367.58193970]
[173.72021484 -356.73028564]
[183.38835144 -345.25537109]
[192.32440186 -333.20159912]
[200.49377441 -320.61560059]
[207.86488342 -307.54602051]
[214.40919495 -294.04348755]
[220.10139465 -280.16021729]
[224.91946411 -265.94992065]
[228.84477234 -251.46755981]
[231.86210632 -236.76919556]
[233.95980835 -221.91166687]
[235.12977600 -206.95245361]
[235.36746216 -191.94946289]
[234.67195129 -176.96070862]
[233.04592896 -162.04418945]
[230.49571228 -147.25759888]
[227.03114319 -132.65817261]
[222.66561890 -118.30238342]
[217.41606140 -104.24576569]
[211.30274963 -90.54270172]
[204.34934998 -77.24620819]
[196.58276367 -64.40772247]
[188.03303528 -52.07692719]
[178.73323059 -40.30151749]
[168.71934509 -29.12705040]
[158.03012085 -18.59676361]
[146.70690918 -8.75139427]
[134.79351807 0.37096837]
[122.33602142 8.73503017]
[109.38264465 16.30843353]
[95.98348236 23.06187630]
[82.19037628 28.96923065]
[87.22729492 43.09825897]
[92.26421356 57.22729111]
[106.22577667 67.85939026]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[127.03494263 150.96667480]
[132.28166199 165.01914978]
[137.52838135 179.07162476]
[151.92192078 174.82722473]
[166.57901001 171.60871887]
[181.42662048 169.43212891]
[196.39076233 168.30830383]
[211.39692688 168.24282837]
[226.37031555 169.23605347]
[241.23634338 171.28300476]
[255.92095947 174.37350464]
[270.35098267 178.49214172]
[284.45452881 183.61840820]
[298.16137695 189.72676086]
[311.40316772 196.78675842]
[324.11398315 204.76324463]
[336.23046875 213.61647034]
[347.69226074 223.30233765]
[358.44229126 233.77256775]
[368.42697144 244.97503662]
[377.59655762 256.85391235]
[385.90539551 269.34997559]
[393.31204224 282.40106201]
[399.77966309 295.94207764]
[405.27597046 309.90557861]
[409.77362061 324.22198486]
[413.25018311 338.82003784]
[415.68838501 353.62692261]
[417.07601929 368.56890869]
[417.40618896 383.57159424]
[416.67727661 398.56018066]
[414.89291382 413.45999146]
[412.06195068 428.19683838]
[408.19848633 442.69726562]
[403.32183838 456.88906860]
[397.45623779 470.70153809]
[390.63095093 484.06579590]
[382.87991333 496.91534424]
[374.24182129 509.18612671]
[364.75967407 520.81701660]
[354.48071289 531.75006104]
[343.45611572 541.93084717]
[331.74087524 551.30853271]
[319.39331055 559.83654785]
[306.47494507 567.47229004]
[293.05010986 574.17773438]
[279.18576050 579.91955566]
[264.95089722 584.66906738]
[250.41647339 588.40264893]
[235.65489197 591.10162354]
[220.73970032 592.75262451]
[205.74519348 593.34747314]
[190.74609375 592.88305664]
[175.81709290 591.36181641]
[161.03260803 588.79125977]
[146.46626282 585.18420410]
[132.19064331 580.55871582]
[118.27687073 574.93768311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 155]
[33 154]
[34 153]
[35 152]
[36 151]
[37 150]
[39 148]
[42 146]
[43 145]
[44 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
