%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[106.83821106 338.67843628]
[102.24215698 352.96942139]
[96.28826904 366.75006104]
[89.03213501 379.89175415]
[80.54149628 392.27175903]
[70.89564514 403.77450562]
[60.18463516 414.29257202]
[48.50848007 423.72778320]
[35.97619247 431.99200439]
[22.70479012 439.00808716]
[8.81818867 444.71051025]
[-5.55395555 449.04605103]
[-20.27744865 451.97424316]
[-35.21482086 453.46771240]
[-50.22660065 453.51254272]
[-65.17262268 452.10827637]
[-79.91333771 449.26806641]
[-94.31111145 445.01840210]
[-108.23151398 439.39898682]
[-121.54457092 432.46228027]
[-134.12597656 424.27301025]
[-145.85826111 414.90771484]
[-156.63188171 404.45379639]
[-166.34625244 393.00885010]
[-174.91064453 380.67974854]
[-182.24511719 367.58163452]
[-188.28118896 353.83676147]
[-192.96249390 339.57348633]
[-196.24531555 324.92498779]
[-198.09901428 310.02801514]
[-198.50627136 295.02169800]
[-197.46330261 280.04614258]
[-194.97982788 265.24114990]
[-191.07904053 250.74494934]
[-185.79736328 236.69293213]
[-179.18411255 223.21626282]
[-171.30104065 210.44079590]
[-162.22174072 198.48580933]
[-152.03099060 187.46292114]
[-140.82392883 177.47505188]
[-128.70521545 168.61546326]
[-115.78800201 160.96687317]
[-102.19287872 154.60069275]
[-88.04679108 149.57637024]
[-73.48182678 145.94081116]
[-58.63397217 143.72796631]
[-43.64185715 142.95849609]
[-28.64547157 143.63958740]
[-13.78482914 145.76487732]
[0.80131423 149.31451416]
[14.97676849 154.25535583]
[28.60917854 160.54129028]
[41.57125854 168.11360168]
[50.35186386 155.95214844]
[59.13246536 143.79069519]
[67.91307068 131.62924194]
[76.69367218 119.46778107]
[85.47427368 107.30632782]
[86.74670410 90.58038330]
[102.12449646 83.87965393]
[110.72306061 71.58881378]
[119.32162476 59.29797745]
[127.92018890 47.00714111]
[116.06713867 37.80943680]
[104.68345642 28.03681374]
[93.79698944 17.71317863]
[83.43438721 6.86379957]
[73.62101746 -4.48477411]
[64.38087463 -16.30477142]
[55.73658752 -28.56726456]
[47.70930099 -41.24224854]
[40.31866455 -54.29870224]
[33.58275986 -67.70467377]
[27.51807594 -81.42736053]
[22.13945198 -95.43317413]
[17.46004868 -109.68785095]
[13.49131966 -124.15649414]
[10.24297619 -138.80369568]
[7.72296715 -153.59362793]
[5.93745947 -168.49009705]
[4.89082336 -183.45661926]
[4.58561993 -198.45660400]
[5.02259541 -213.45332336]
[6.20068121 -228.41007996]
[8.11699390 -243.29026794]
[10.76684380 -258.05749512]
[14.14374733 -272.67559814]
[18.23943901 -287.10882568]
[23.04389763 -301.32183838]
[28.54536438 -315.27984619]
[34.73037720 -328.94873047]
[41.58379745 -342.29498291]
[49.08885956 -355.28601074]
[57.22719193 -367.88998413]
[65.97888184 -380.07604980]
[75.32250977 -391.81442261]
[85.23520660 -403.07635498]
[95.69272614 -413.83425903]
[106.66947174 -424.06185913]
[118.13857269 -433.73410034]
[130.07197571 -442.82730103]
[142.44046021 -451.31921387]
[155.21377563 -459.18908691]
[168.36065674 -466.41766357]
[181.84893799 -472.98721313]
[195.64559937 -478.88165283]
[209.71687317 -484.08660889]
[224.02835083 -488.58932495]
[238.54498291 -492.37875366]
[253.23126221 -495.44564819]
[268.05123901 -497.78250122]
[282.96862793 -499.38360596]
[297.94696045 -500.24499512]
[312.94958496 -500.36462402]
[327.93972778 -499.74215698]
[342.88076782 -498.37915039]
[357.73611450 -496.27890015]
[372.46945190 -493.44656372]
[387.04464722 -489.88909912]
[401.42608643 -485.61517334]
[415.57858276 -480.63525391]
[429.46746826 -474.96151733]
[443.05880737 -468.60791016]
[456.31927490 -461.58990479]
[469.21646118 -453.92471313]
[481.71878052 -445.63107300]
[493.79565430 -436.72930908]
[505.41754150 -427.24118042]
[516.55596924 -417.18991089]
[527.18371582 -406.60012817]
[537.27471924 -395.49768066]
[546.80432129 -383.90982056]
[555.74920654 -371.86483765]
[564.08746338 -359.39224243]
[571.79876709 -346.52255249]
[578.86413574 -333.28723145]
[585.26629639 -319.71871948]
[590.98962402 -305.85021973]
[596.02008057 -291.71560669]
[600.34539795 -277.34954834]
[603.95501709 -262.78713989]
[606.83996582 -248.06405640]
[608.99334717 -233.21630859]
[610.40972900 -218.28022766]
[611.08581543 -203.29238892]
[611.01983643 -188.28944397]
[610.21197510 -173.30813599]
[608.66418457 -158.38510132]
[606.38037109 -143.55686951]
[603.36596680 -128.85972595]
[599.62847900 -114.32963562]
[595.17694092 -100.00215912]
[590.02233887 -85.91235352]
[584.17724609 -72.09471130]
[577.65594482 -58.58303452]
[570.47448730 -45.41039276]
[562.65032959 -32.60902405]
[554.20263672 -20.21025085]
[545.15216064 -8.24441814]
[535.52099609 3.25919223]
[525.33270264 14.27242947]
[514.61224365 24.76834106]
[503.38583374 34.72124100]
[491.68096924 44.10677719]
[479.52624512 52.90197754]
[466.95144653 61.08531952]
[453.98736572 68.63677979]
[440.66564941 75.53787231]
[427.01898193 81.77171326]
[413.08071899 87.32304382]
[398.88497925 92.17828369]
[384.46649170 96.32555389]
[369.86056519 99.75469208]
[355.10290527 102.45732117]
[340.22964478 104.42682648]
[325.27719116 105.65837097]
[310.28213501 106.14896393]
[295.28115845 105.89738464]
[280.31100464 104.90426636]
[265.40826416 103.17202759]
[250.60940552 100.70491028]
[235.95066833 97.50895691]
[221.46794128 93.59197998]
[207.19662476 88.96356964]
[193.17166138 83.63504791]
[179.42738342 77.61946106]
[165.99742126 70.93153381]
[152.91462708 63.58762360]
[140.21102905 55.60570526]
[131.61245728 67.89653778]
[123.01390076 80.18737793]
[114.41533661 92.47821808]
[115.74771881 104.04826355]
[109.00064087 113.54132843]
[97.63573456 116.08692932]
[88.85512543 128.24838257]
[80.07452393 140.40983582]
[71.29392242 152.57130432]
[62.51331711 164.73275757]
[53.73271561 176.89421082]
[64.99920654 186.81498718]
[75.25559235 197.77682495]
[84.40611267 209.67739868]
[92.36533356 222.40556335]
[99.05892944 235.84249878]
[104.42441559 249.86274719]
[108.41168213 264.33538818]
[110.98351288 279.12527466]
[112.11589050 294.09436035]
[111.79823303 309.10284424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 200]
[54 199]
[55 198]
[56 197]
[57 196]
[58 195]
[60 192]
[61 191]
[62 190]
[63 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
