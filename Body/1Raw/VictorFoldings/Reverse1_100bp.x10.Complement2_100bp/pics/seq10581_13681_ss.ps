%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[41.35078049 448.31277466]
[37.78904724 462.90216064]
[32.52674103 476.96789551]
[25.63774109 490.31246948]
[17.21875191 502.74859619]
[7.38796663 514.10162354]
[-3.71660709 524.21228027]
[-15.93907833 532.93853760]
[-29.10786247 540.15789795]
[-43.03808975 545.76910400]
[-57.53420258 549.69323730]
[-72.39270020 551.87530518]
[-87.40498352 552.28466797]
[-102.36031342 550.91558838]
[-117.04874420 547.78723145]
[-131.26405334 542.94354248]
[-144.80670166 536.45257568]
[-157.48655701 528.40533447]
[-169.12562561 518.91491699]
[-179.56050110 508.11447144]
[-188.64471436 496.15563965]
[-196.25070190 483.20629883]
[-202.27172852 469.44827271]
[-206.62324524 455.07464600]
[-209.24415588 440.28726196]
[-210.09768677 425.29367065]
[-209.17184448 410.30435181]
[-206.47962952 395.52978516]
[-202.05883789 381.17733765]
[-195.97151184 367.44848633]
[-188.30314636 354.53601074]
[-179.16136169 342.62112427]
[-168.67449951 331.87115479]
[-156.98979187 322.43695068]
[-144.27127075 314.45098877]
[-130.69746399 308.02539062]
[-116.45895386 303.25036621]
[-101.75560760 300.19290161]
[-86.79384613 298.89596558]
[-71.78371429 299.37771606]
[-56.93591309 301.63146973]
[-42.45890045 305.62548828]
[-28.55589867 311.30380249]
[-21.28266907 298.18508911]
[-14.00944042 285.06640625]
[-6.73621082 271.94769287]
[-7.16775274 267.19137573]
[-4.61596775 262.11343384]
[0.95389736 258.55139160]
[8.61449432 245.65505981]
[16.27509308 232.75872803]
[23.93568993 219.86241150]
[31.59628677 206.96607971]
[39.25688553 194.06974792]
[46.91748047 181.17343140]
[54.57807922 168.27709961]
[61.94876862 155.21290588]
[61.13159180 140.34074402]
[74.46460724 131.82362366]
[81.54170990 118.59809113]
[88.61881256 105.37255859]
[95.39880371 91.99228668]
[101.87830353 78.46394348]
[108.35779572 64.93560028]
[114.83729553 51.40724945]
[121.31678772 37.87890625]
[114.10401917 24.26706505]
[116.26411438 9.19432926]
[126.76122284 -1.58874428]
[141.41955566 -4.09304571]
[147.89904785 -17.62139130]
[146.88206482 -33.40987778]
[159.35801697 -41.54621887]
[165.83750916 -55.07456589]
[172.31700134 -68.60291290]
[178.79649353 -82.13125610]
[185.27598572 -95.65959930]
[191.75549316 -109.18795013]
[183.19737244 -121.86492920]
[182.14060974 -137.02342224]
[188.76911926 -150.58547974]
[201.21275330 -158.95278931]
[216.07373047 -159.96127319]
[222.55322266 -173.48962402]
[209.34031677 -166.38899231]
[194.34460449 -166.74731445]
[181.48591614 -174.47093201]
[174.12548828 -187.54090881]
[174.18733215 -202.54078674]
[181.65527344 -215.54962158]
[194.57720947 -223.16694641]
[209.57537842 -223.40161133]
[222.72927856 -216.19227600]
[230.60054016 -203.42343140]
[231.13182068 -188.43370056]
[239.54643250 -200.85119629]
[247.96105957 -213.26869202]
[256.37567139 -225.68618774]
[244.96568298 -235.44795227]
[234.72042847 -246.42587280]
[225.76875305 -258.48190308]
[218.22325134 -271.46438599]
[212.17878723 -285.21011353]
[207.71139526 -299.54614258]
[204.87725830 -314.29226685]
[203.71200562 -329.26296997]
[204.23030090 -344.27001953]
[206.42562866 -359.12466431]
[210.27038574 -373.64010620]
[215.71620178 -387.63378906]
[222.69459534 -400.92971802]
[231.11781311 -413.36071777]
[240.87991333 -424.77041626]
[251.85815430 -435.01531982]
[263.91442871 -443.96664429]
[276.89715576 -451.51177979]
[290.64303589 -457.55581665]
[304.97924805 -462.02276611]
[319.72543335 -464.85647583]
[334.69616699 -466.02127075]
[349.70321655 -465.50253296]
[364.55776978 -463.30676270]
[379.07312012 -459.46157837]
[393.06661987 -454.01535034]
[406.36236572 -447.03656006]
[418.79309082 -438.61294556]
[430.20248413 -428.85049438]
[440.44708252 -417.87197876]
[449.39804077 -405.81542969]
[456.94277954 -392.83245850]
[462.98641968 -379.08639526]
[467.45294189 -364.75009155]
[470.28619385 -350.00381470]
[471.45056152 -335.03302002]
[470.93136597 -320.02600098]
[468.73513794 -305.17147827]
[464.88952637 -290.65628052]
[459.44287109 -276.66293335]
[452.46368408 -263.36740112]
[444.03973389 -250.93692017]
[434.27694702 -239.52780151]
[423.29809570 -229.28353882]
[411.24127197 -220.33294678]
[398.25808716 -212.78860474]
[384.51184082 -206.74537659]
[370.17538452 -202.27926636]
[355.42901611 -199.44645691]
[340.45822144 -198.28254700]
[325.45120239 -198.80220032]
[310.59677124 -200.99885559]
[296.08166504 -204.84490967]
[282.08847046 -210.29197693]
[268.79318237 -217.27156067]
[260.37854004 -204.85406494]
[251.96392822 -192.43656921]
[243.54931641 -180.01907349]
[236.08157349 -167.01013184]
[229.60208130 -153.48178101]
[238.13128662 -141.27038574]
[239.41151428 -126.32994080]
[232.99916077 -112.66436005]
[220.52569580 -103.98625946]
[205.28382874 -102.70845032]
[198.80433655 -89.18010712]
[192.32484436 -75.65176392]
[185.84535217 -62.12341690]
[179.36584473 -48.59506989]
[172.88635254 -35.06672287]
[174.36679077 -20.24587440]
[161.42738342 -11.14189529]
[154.94789124 2.38645005]
[162.18460083 15.37752819]
[160.36242676 30.31552315]
[149.97213745 41.44635010]
[134.84513855 44.35840225]
[128.36564636 57.88674545]
[121.88614655 71.41509247]
[115.40664673 84.94343567]
[108.92715454 98.47178650]
[109.68018341 102.25402069]
[108.76241302 106.34981537]
[106.07116699 110.00553131]
[101.84434509 112.44966888]
[94.76723480 125.67519379]
[87.69013214 138.90072632]
[88.00110626 154.71887207]
[75.17429352 162.29002380]
[75.34442139 167.50712585]
[73.66435242 171.83500671]
[70.78262329 174.71783447]
[67.47440338 175.93769836]
[59.81380844 188.83401489]
[52.15320969 201.73034668]
[44.49261475 214.62667847]
[36.83201599 227.52301025]
[29.17141914 240.41932678]
[21.51082230 253.31565857]
[13.85022449 266.21197510]
[6.38248301 279.22094727]
[-0.89074636 292.33963013]
[-8.16397572 305.45831299]
[-15.43720531 318.57702637]
[-3.25572872 327.36041260]
[7.80138063 337.52291870]
[17.57889748 348.92190552]
[25.93956184 361.39730835]
[32.76600266 374.77398682]
[37.96238708 388.86419678]
[41.45576477 403.47012329]
[43.19709778 418.38668823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 202]
[44 201]
[45 200]
[46 199]
[49 198]
[50 197]
[51 196]
[52 195]
[53 194]
[54 193]
[55 192]
[56 191]
[57 187]
[59 185]
[60 184]
[61 183]
[62 179]
[63 178]
[64 177]
[65 176]
[66 175]
[70 171]
[71 170]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[83 158]
[84 157]
[95 156]
[96 155]
[97 154]
[98 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
