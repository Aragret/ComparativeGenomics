%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[121.83508301 440.38543701]
[118.75725555 425.69418335]
[117.00875092 410.78616333]
[116.60364532 395.78143311]
[117.54519653 380.80078125]
[119.82582092 365.96484375]
[123.42716980 351.39306641]
[128.32022095 337.20278931]
[134.46560669 323.50823975]
[141.81382751 310.41970825]
[150.30572510 298.04254150]
[159.87294006 286.47644043]
[170.43841553 275.81451416]
[181.91709900 266.14257812]
[173.31852722 253.85174561]
[164.71997070 241.56089783]
[156.12139893 229.27006531]
[147.52284241 216.97923279]
[147.21455383 231.97605896]
[139.53388977 244.86044312]
[126.48854065 252.26443481]
[111.48854828 252.25263977]
[98.45485687 244.82815552]
[90.79445648 231.93171692]
[90.50975037 216.93441772]
[97.67515564 203.75651550]
[110.41766357 195.84269714]
[125.40640259 195.26159668]
[138.72270203 202.16453552]
[132.04251099 188.73416138]
[125.36231232 175.30378723]
[118.68211365 161.87339783]
[116.07057953 160.85456848]
[113.70526123 158.73989868]
[112.00557709 155.61796570]
[111.35115051 151.72743225]
[112.03095245 147.43885803]
[99.93076324 138.75355530]
[101.65171814 123.02622223]
[95.78276062 109.22204590]
[89.98147583 103.62582397]
[89.93087769 95.16838074]
[84.26808929 81.27835846]
[71.89350891 71.42034912]
[74.25347137 56.71389389]
[68.59068298 42.82386780]
[62.92789841 28.93384171]
[56.95633698 15.17373753]
[50.67897415 1.55042183]
[37.87655258 -7.74519730]
[39.57748413 -22.54236221]
[33.30012512 -36.16567993]
[27.02276421 -49.78899384]
[20.74540329 -63.41231155]
[14.46804333 -77.03562927]
[0.34683532 -71.94908142]
[-14.15936470 -68.09530640]
[-28.94315720 -65.50282288]
[-43.89508438 -64.19084167]
[-58.90444565 -64.16905975]
[-73.86011505 -65.43765259]
[-88.65136719 -67.98722076]
[-103.16869354 -71.79888916]
[-117.30460358 -76.84442902]
[-130.95443726 -83.08650208]
[-144.01713562 -90.47887421]
[-156.39599609 -98.96682739]
[-167.99935913 -108.48751831]
[-178.74131775 -118.97045135]
[-188.54232788 -130.33801270]
[-197.32984924 -142.50604248]
[-205.03880310 -155.38444519]
[-211.61212158 -168.87788391]
[-217.00114441 -182.88645935]
[-221.16595459 -197.30644226]
[-224.07572937 -212.03106689]
[-225.70890808 -226.95132446]
[-226.05343628 -241.95674133]
[-225.10671997 -256.93624878]
[-222.87579346 -271.77890015]
[-219.37718201 -286.37481689]
[-214.63676453 -300.61596680]
[-208.68965149 -314.39685059]
[-201.57986450 -327.61550903]
[-193.36004639 -340.17401123]
[-184.09107971 -351.97940063]
[-173.84155273 -362.94430542]
[-162.68736267 -372.98748779]
[-150.71110535 -382.03460693]
[-138.00143433 -390.01870728]
[-124.65245819 -396.88064575]
[-110.76300812 -402.56964111]
[-96.43592072 -407.04357910]
[-81.77726746 -410.26928711]
[-66.89557648 -412.22293091]
[-51.90102768 -412.89001465]
[-36.90464401 -412.26562500]
[-22.01744843 -410.35440063]
[-7.34966612 -407.17044067]
[6.99010706 -402.73733521]
[20.89570236 -397.08792114]
[34.26416779 -390.26400757]
[46.99652100 -382.31616211]
[58.99850082 -373.30316162]
[70.18124390 -363.29177856]
[80.46195221 -352.35614014]
[89.76451874 -340.57717896]
[98.02006531 -328.04214478]
[105.16746521 -314.84381104]
[111.15380859 -301.07989502]
[115.93476105 -286.85232544]
[119.47493744 -272.26641846]
[121.74813080 -257.43017578]
[122.73749542 -242.45343018]
[122.43571472 -227.44709778]
[120.84502411 -212.52224731]
[117.97720337 -197.78938293]
[113.85347748 -183.35760498]
[108.50437927 -169.33374023]
[101.96952057 -155.82164001]
[94.29727173 -142.92132568]
[85.54444122 -130.72831726]
[75.77584076 -119.33288574]
[65.06378174 -108.81940460]
[53.48758698 -99.26570892]
[41.13295364 -90.74253845]
[28.09135818 -83.31298828]
[34.36872101 -69.68967438]
[40.64608002 -56.06635666]
[46.92344284 -42.44303894]
[53.20080185 -28.81972313]
[65.55422974 -20.49853516]
[64.30229187 -4.72693872]
[70.57965088 8.89637756]
[73.74301147 10.45378399]
[76.30918121 13.62076759]
[77.52988434 18.09996223]
[76.81792450 23.27105522]
[82.48071289 37.16108322]
[88.14350128 51.05110931]
[100.11303711 59.91560745]
[98.15811157 75.61557007]
[103.82089996 89.50559998]
[109.58693695 103.35308075]
[115.45589447 117.15725708]
[127.97587585 126.82993317]
[125.83512878 141.56990051]
[132.11248779 155.19320679]
[138.79269409 168.62358093]
[145.47288513 182.05395508]
[152.15307617 195.48434448]
[159.81367493 208.38066101]
[168.41223145 220.67150879]
[177.01080322 232.96234131]
[185.60935974 245.25317383]
[194.20793152 257.54400635]
[207.22868347 250.07635498]
[220.86642456 243.80592346]
[235.01135254 238.78323364]
[249.54956055 235.04872131]
[264.36401367 232.63244629]
[279.33541870 231.55386353]
[294.34323120 231.82167053]
[309.26663208 233.43370056]
[323.98544312 236.37698364]
[338.38116455 240.62780762]
[352.33786011 246.15194702]
[365.74322510 252.90493774]
[378.48925781 260.83239746]
[390.47338867 269.87051392]
[401.59906006 279.94647217]
[411.77676392 290.97918701]
[420.92449951 302.87982178]
[428.96862793 315.55258179]
[435.84439087 328.89535522]
[441.49642944 342.80078125]
[445.87921143 357.15686035]
[448.95748901 371.84805298]
[450.70645142 386.75601196]
[451.11203003 401.76074219]
[450.17092896 416.74139404]
[447.89074707 431.57739258]
[444.28985596 446.14929199]
[439.39721680 460.33972168]
[433.25225830 474.03445435]
[425.90444946 487.12322998]
[417.41293335 499.50064087]
[407.84606934 511.06701660]
[397.28091431 521.72930908]
[385.80252075 531.40155029]
[373.50332642 540.00598145]
[360.48236084 547.47326660]
[346.84442139 553.74328613]
[332.69934082 558.76550293]
[318.16101074 562.49957275]
[303.34649658 564.91540527]
[288.37506104 565.99353027]
[273.36724854 565.72528076]
[258.44390869 564.11279297]
[243.72518921 561.16906738]
[229.32958984 556.91778564]
[215.37304688 551.39324951]
[201.96789551 544.63983154]
[189.22209167 536.71197510]
[177.23826599 527.67352295]
[166.11288452 517.59716797]
[155.93553162 506.56414795]
[146.78816223 494.66323853]
[138.74441528 481.99026489]
[131.86904907 468.64727783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 156]
[15 155]
[16 154]
[17 153]
[18 152]
[29 151]
[30 150]
[31 149]
[32 148]
[37 147]
[39 145]
[40 144]
[42 143]
[43 142]
[45 140]
[46 139]
[47 138]
[48 134]
[49 133]
[51 131]
[52 130]
[53 129]
[54 128]
[55 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
