%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[177.50448608 448.78924561]
[184.57591248 435.51107788]
[193.96697998 423.75854492]
[205.35781860 413.93188477]
[218.36048889 406.36578369]
[213.32356262 392.23675537]
[208.28665161 378.10772705]
[203.24974060 363.97869873]
[198.21281433 349.84967041]
[193.17590332 335.72064209]
[179.65058899 329.58862305]
[174.34117126 315.33154297]
[180.86468506 301.18652344]
[175.82777405 287.05749512]
[170.79086304 272.92846680]
[165.75393677 258.79943848]
[151.79237366 248.16734314]
[155.26046753 230.08271790]
[150.01374817 216.03024292]
[144.76702881 201.97776794]
[139.52032471 187.92529297]
[134.27360535 173.87283325]
[129.02688599 159.82035828]
[123.78016663 145.76788330]
[116.40947723 132.70370483]
[107.09458923 120.94644928]
[97.77970886 109.18919373]
[92.84121704 107.42135620]
[89.24475861 103.01241302]
[88.36878204 96.94037628]
[79.40808105 84.91100311]
[64.95914459 78.46594238]
[63.56112671 63.63708878]
[54.60042953 51.60771179]
[48.69021225 48.64445877]
[45.62399292 43.85955429]
[45.55836487 39.08412552]
[36.95980072 26.79328728]
[28.36123848 14.50244904]
[19.76267433 2.21161103]
[11.16411018 -10.07922649]
[2.56554651 -22.37006569]
[-6.03301764 -34.66090393]
[-14.63158131 -46.95174026]
[-23.23014450 -59.24258041]
[-31.82870865 -71.53341675]
[-32.72341156 -56.56012344]
[-41.48506165 -44.38500595]
[-55.39876938 -38.78065872]
[-70.15322113 -41.48365021]
[-81.17658997 -51.65642548]
[-85.05316162 -66.14684296]
[-80.58174133 -80.46488953]
[-69.14785004 -90.17395782]
[-54.29439545 -92.26559448]
[-40.62369156 -86.09150696]
[-47.50310516 -99.42093658]
[-51.23819351 -101.63523102]
[-53.81520081 -104.62245941]
[-55.13333893 -107.92366028]
[-55.25124359 -111.09426117]
[-54.36843872 -113.75485992]
[-60.44227219 -127.47013092]
[-66.51610565 -141.18539429]
[-72.58994293 -154.90066528]
[-86.93374634 -150.45413208]
[-101.69678497 -147.70291138]
[-116.67940521 -146.68421936]
[-131.67897034 -147.41181946]
[-146.49264526 -149.87588501]
[-160.92008972 -154.04309082]
[-174.76617432 -159.85707092]
[-187.84365845 -167.23921204]
[-199.97567749 -176.08966064]
[-210.99816895 -186.28874207]
[-220.76205444 -197.69851685]
[-229.13529968 -210.16468811]
[-236.00466919 -223.51864624]
[-241.27725220 -237.57981873]
[-244.88172913 -252.15802002]
[-246.76939392 -267.05612183]
[-246.91467285 -282.07263184]
[-245.31564331 -297.00445557]
[-241.99389648 -311.64968872]
[-236.99436951 -325.81024170]
[-230.38467407 -339.29461670]
[-222.25421143 -351.92047119]
[-212.71290588 -363.51702881]
[-201.88983154 -373.92745972]
[-189.93132019 -383.01098633]
[-176.99911499 -390.64477539]
[-163.26811218 -396.72558594]
[-148.92401123 -401.17117310]
[-134.16079712 -403.92141724]
[-119.17810822 -404.93908691]
[-104.17858887 -404.21047974]
[-89.36507416 -401.74542236]
[-74.93791962 -397.57727051]
[-61.09222031 -391.76235962]
[-48.01522827 -384.37936401]
[-35.88379669 -375.52807617]
[-24.86198807 -365.32827759]
[-15.09885883 -353.91784668]
[-6.72644424 -341.45111084]
[0.14202715 -328.09671021]
[5.41366768 -314.03518677]
[9.01718426 -299.45672607]
[10.90384483 -284.55850220]
[11.04813194 -269.54199219]
[9.44809628 -254.61026001]
[6.12537575 -239.96527100]
[1.12490606 -225.80503845]
[-5.48568630 -212.32110596]
[-13.61700153 -199.69580078]
[-23.15907288 -188.09988403]
[-33.98285294 -177.69017029]
[-45.94196320 -168.60742188]
[-58.87467194 -160.97450256]
[-52.80083847 -147.25923157]
[-46.72700500 -133.54396057]
[-40.65317154 -119.82869720]
[-34.17367554 -106.30035400]
[-27.29426193 -92.97092438]
[-19.53787231 -80.13198090]
[-10.93930721 -67.84114075]
[-2.34074354 -55.55030441]
[6.25782061 -43.25946808]
[14.85638428 -30.96862793]
[23.45494843 -18.67779160]
[32.05351257 -6.38695288]
[40.65207672 5.90388489]
[49.25064087 18.19472313]
[57.84920502 30.48556137]
[66.62980652 42.64701843]
[75.59049988 54.67639542]
[89.39851379 60.26103210]
[91.43746185 75.95030212]
[100.39815521 87.97968292]
[109.53695679 99.87431335]
[118.85184479 111.63156891]
[128.16671753 123.38881683]
[125.15988159 108.69327545]
[126.17422485 93.72761536]
[131.13653564 79.57221222]
[139.68858337 67.24895477]
[151.21298218 57.64748001]
[164.87776184 51.46091843]
[179.69647217 49.13588715]
[194.59933472 50.84022903]
[208.51049805 56.45090866]
[220.42568970 65.56288910]
[229.48475647 77.51836395]
[235.03370667 91.45425415]
[236.67196655 106.36452484]
[234.28126526 121.17278290]
[228.03417969 134.81001282]
[218.38171387 146.29171753]
[206.02066040 154.78904724]
[191.84339905 159.68855286]
[176.87338257 160.63655090]
[162.19131470 157.56459045]
[148.85711670 150.69444275]
[137.83264160 140.52116394]
[143.07934570 154.57363892]
[148.32606506 168.62611389]
[153.57278442 182.67857361]
[158.81950378 196.73104858]
[164.06622314 210.78352356]
[169.31294250 224.83599854]
[180.70188904 230.89031982]
[184.78259277 242.70266724]
[179.88296509 253.76252747]
[184.91989136 267.89157104]
[189.95680237 282.02059937]
[194.99371338 296.14962769]
[208.99412537 302.97796631]
[213.90100098 317.37857056]
[207.30493164 330.68374634]
[212.34184265 344.81277466]
[217.37876892 358.94180298]
[222.41567993 373.07083130]
[227.45259094 387.19985962]
[232.48951721 401.32888794]
[247.34611511 398.96328735]
[262.38442993 399.36810303]
[277.09225464 402.52954102]
[290.96862793 408.33993530]
[303.54095459 416.60137939]
[314.38101196 427.03247070]
[323.11959839 439.27795410]
[329.45907593 452.92074585]
[333.18350220 467.49618530]
[334.16607666 482.50781250]
[332.37329102 497.44436646]
[327.86621094 511.79708862]
[320.79837036 525.07714844]
[311.41046143 536.83227539]
[300.02227783 546.66198730]
[287.02163696 554.23156738]
[272.85140991 559.28314209]
[257.99417114 561.64477539]
[242.95596313 561.23590088]
[228.24899292 558.07049561]
[214.37417603 552.25634766]
[201.80407715 543.99151611]
[190.96684265 533.55749512]
[182.23155212 521.30969238]
[175.89576721 507.66516113]
[172.17524719 493.08874512]
[171.19673157 478.07684326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 178]
[13 175]
[14 174]
[15 173]
[16 172]
[18 169]
[19 168]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[25 141]
[26 140]
[27 139]
[30 138]
[31 137]
[33 135]
[34 134]
[37 133]
[38 132]
[39 131]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[56 123]
[57 122]
[62 121]
[63 120]
[64 119]
[65 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
