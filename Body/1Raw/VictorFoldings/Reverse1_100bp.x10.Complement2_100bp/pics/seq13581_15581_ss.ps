%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[106.16722107 618.93615723]
[92.37127686 624.89038086]
[77.86836243 628.82055664]
[62.95373917 630.64666748]
[47.93104172 630.33154297]
[33.10611343 627.88153076]
[18.78077698 623.34661865]
[5.24667454 616.81909180]
[-7.22065735 608.43182373]
[-18.36739922 598.35559082]
[-27.96661758 586.79547119]
[-35.82288742 573.98687744]
[-41.77626038 560.19055176]
[-45.70553589 545.68743896]
[-47.53071594 530.77270508]
[-47.21464920 515.75000000]
[-44.76376343 500.92523193]
[-40.22795868 486.60015869]
[-33.69958115 473.06646729]
[-25.31153297 460.59967041]
[-15.23458862 449.45355225]
[-3.67390132 439.85504150]
[9.13516808 431.99957275]
[22.93184471 426.04702759]
[37.43524551 422.11865234]
[52.35009766 420.29440308]
[67.37275696 420.61138916]
[69.81848145 405.81213379]
[72.26421356 391.01284790]
[66.70561218 377.19433594]
[76.58946991 364.84039307]
[79.03520203 350.04113770]
[81.48092651 335.24185181]
[83.92665100 320.44259644]
[86.37238312 305.64331055]
[88.81810760 290.84405518]
[90.37863159 275.92544556]
[91.04841614 260.94039917]
[91.49502563 245.94705200]
[91.71835327 230.94871521]
[91.94168091 215.95037842]
[92.16500854 200.95204163]
[92.38833618 185.95370483]
[92.50000000 170.95411682]
[84.76270294 158.22685242]
[92.50000000 144.42668152]
[92.50000000 129.42668152]
[92.50000000 114.42668152]
[84.77587128 105.71007538]
[84.86257172 94.06388855]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[92.93894958 55.46492004]
[92.71562195 40.46658325]
[92.49229431 25.46824455]
[92.26896667 10.46990681]
[92.04563904 -4.52843046]
[83.35100555 -14.05555916]
[83.47377014 -26.55230522]
[91.80272675 -35.32470703]
[85.03372192 -21.93887138]
[74.94509888 -10.83843422]
[62.26516342 -2.82474804]
[47.90928650 1.52367318]
[32.91382980 1.89291286]
[18.36133575 -1.74368465]
[5.30235338 -9.12359047]
[-5.32037306 -19.71404266]
[-12.73998165 -32.75050735]
[-16.42084503 -47.29187012]
[-16.09723663 -62.28837967]
[-11.79251862 -76.65742493]
[-3.81745267 -89.36168671]
[7.25223398 -99.48403931]
[20.61741066 -106.29373932]
[35.31323624 -109.29919434]
[50.27880478 -108.28342438]
[64.43373871 -103.31977081]
[76.75617981 -94.76656342]
[86.35656738 -83.24125671]
[92.54183197 -69.57588196]
[94.86547852 -54.75578690]
[99.47948456 -69.02851868]
[104.09349823 -83.30125427]
[108.60112762 -97.60794067]
[113.00212097 -111.94778442]
[117.40312195 -126.28763580]
[120.94279480 -140.86401367]
[123.60858917 -155.62522888]
[126.27438354 -170.38644409]
[128.94018555 -185.14765930]
[131.60597229 -199.90887451]
[134.27177429 -214.67008972]
[136.93756104 -229.43130493]
[139.60336304 -244.19253540]
[142.26916504 -258.95373535]
[144.93495178 -273.71496582]
[147.49078369 -288.49560547]
[149.93650818 -303.29489136]
[136.13204956 -309.36840820]
[124.27220154 -318.68478394]
[115.10250092 -330.65838623]
[109.19934845 -344.53656006]
[106.93383789 -359.44689941]
[108.44837189 -374.45211792]
[113.64774323 -388.60900879]
[122.20511627 -401.02761841]
[133.58258057 -410.92733765]
[147.06491089 -417.68585205]
[161.80462646 -420.87829590]
[176.87516785 -420.30398560]
[191.32917786 -415.99905396]
[204.25807190 -408.23410034]
[214.84912109 -397.49722290]
[222.43658447 -384.46337891]
[226.54348755 -369.95187378]
[226.91166687 -354.87487793]
[223.51799011 -340.18020630]
[216.57577515 -326.79153442]
[206.52143860 -315.55050659]
[193.98696899 -307.16372681]
[179.76031494 -302.15838623]
[164.73577881 -300.84915161]
[162.29005432 -286.04989624]
[164.30088806 -278.93804932]
[159.69616699 -271.04916382]
[157.03038025 -256.28796387]
[154.36457825 -241.52673340]
[151.69879150 -226.76551819]
[149.03298950 -212.00430298]
[146.36718750 -197.24308777]
[143.70140076 -182.48185730]
[141.03559875 -167.72064209]
[138.36981201 -152.95942688]
[135.70401001 -138.19821167]
[147.42846680 -147.55435181]
[162.40748596 -148.34735107]
[175.05427551 -140.28146362]
[180.65190125 -126.36504364]
[177.11256409 -111.78858948]
[165.75637817 -101.98874664]
[150.81890869 -100.62061310]
[137.87144470 -108.19448090]
[131.74296570 -121.88663483]
[127.34197235 -107.54679108]
[122.94097137 -93.20693970]
[123.98362732 -85.89020538]
[118.36623383 -78.68724060]
[113.75222015 -64.41451263]
[109.13821411 -50.14177704]
[106.80272675 -35.32470703]
[116.38341522 -20.62174034]
[107.04397583 -4.75175810]
[107.26730347 10.24657917]
[107.49063110 25.24491692]
[107.71395874 40.24325562]
[107.93728638 55.24159241]
[110.67948914 59.15175247]
[110.99446869 64.82606506]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[116.25928497 100.12104797]
[107.50000000 114.42668152]
[107.50000000 129.42668152]
[107.50000000 144.42668152]
[115.23729706 158.22685242]
[107.50000000 170.95411682]
[110.62940979 179.53576660]
[107.38667297 186.17703247]
[107.16334534 201.17536926]
[106.94001770 216.17370605]
[106.71669006 231.17204285]
[106.49336243 246.17037964]
[109.37464905 252.12098694]
[108.89086151 257.78341675]
[106.03345490 261.61019897]
[105.36367035 276.59524536]
[115.73302460 265.75656128]
[130.47181702 262.96945190]
[144.08283997 269.27343750]
[151.48953247 282.31723022]
[149.92936707 297.23587036]
[139.98423767 308.46505737]
[125.36346436 311.81658936]
[111.52020264 306.04040527]
[103.61737823 293.28976440]
[101.17165375 308.08905029]
[98.72592163 322.88830566]
[96.28019714 337.68759155]
[93.83447266 352.48684692]
[91.38874054 367.28613281]
[96.77240753 382.16317749]
[87.06348419 393.45858765]
[84.61775208 408.25787354]
[82.17202759 423.05712891]
[96.49792480 427.59027100]
[110.03283691 434.11614990]
[122.50120544 442.50186157]
[133.64920044 452.57675171]
[143.24984741 464.13565063]
[151.10769653 476.94326782]
[157.06277466 490.73883057]
[160.99385071 505.24151611]
[162.82087708 520.15600586]
[162.50666809 535.17871094]
[160.05761719 550.00378418]
[155.52359009 564.32940674]
[148.99688721 577.86395264]
[140.61038208 590.33178711]
[130.53482056 601.47912598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 195]
[28 194]
[29 193]
[31 191]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[37 177]
[38 176]
[39 173]
[40 172]
[41 171]
[42 170]
[43 169]
[44 167]
[46 165]
[47 164]
[48 163]
[51 161]
[52 160]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[60 151]
[82 150]
[83 149]
[84 148]
[85 146]
[86 145]
[87 144]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
