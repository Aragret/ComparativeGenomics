%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[-6.50233030 541.08813477]
[-19.81749916 533.87805176]
[-30.06827545 522.73352051]
[-36.14273071 508.86343384]
[-37.38195801 493.77227783]
[-33.65153122 479.09704590]
[-25.35609818 466.42959595]
[-13.39548969 457.14398193]
[0.93290025 452.24743652]
[0.93290025 437.24743652]
[0.93290025 422.24743652]
[-1.75078309 418.29690552]
[-1.98124301 412.61853027]
[1.16287804 406.80249023]
[1.60948396 391.80914307]
[2.05608988 376.81579590]
[2.50269580 361.82244873]
[2.94930172 346.82910156]
[3.39590764 331.83575439]
[3.84251356 316.84240723]
[4.28911972 301.84906006]
[-2.73608422 315.10223389]
[-12.41215706 326.56405640]
[-24.29890251 335.71310425]
[-37.85555267 342.13317871]
[-52.46537399 345.53216553]
[-67.46371460 345.75546265]
[-82.16824341 342.79290771]
[-95.91001129 336.77929688]
[-108.06385803 327.98815918]
[-118.07686615 316.81945801]
[-125.49349976 303.78131104]
[-129.97636414 289.46682739]
[-131.32151794 274.52728271]
[-129.46775818 259.64227295]
[-124.49942017 245.48896790]
[-116.64253998 232.71128845]
[-106.25453949 221.89048767]
[-93.80801392 213.51887512]
[-79.86918640 207.97729492]
[-65.07218933 205.51783752]
[-50.09019089 206.25239563]
[-35.60475922 210.14756775]
[-22.27489471 217.02613831]
[-10.70701408 226.57518005]
[-1.42737854 238.36026001]
[5.14185047 251.84526062]
[8.70181656 266.41668701]
[9.09021473 281.41598511]
[15.36757469 267.79266357]
[21.64493561 254.16934204]
[27.92229652 240.54602051]
[34.19965744 226.92271423]
[40.47701645 213.29939270]
[46.65278625 199.62973022]
[52.72661972 185.91445923]
[43.22638702 175.80436707]
[38.28146744 162.79592896]
[38.66929626 148.84140015]
[44.36432648 136.04853821]
[54.53689575 126.36224365]
[67.67391968 121.26883698]
[81.80393219 121.56810760]
[88.08129120 107.94479370]
[86.99069214 94.00556183]
[98.29539490 85.77784729]
[104.57275391 72.15452576]
[104.34777832 65.54689026]
[107.08296967 60.56534195]
[111.24519348 58.22335052]
[117.92538452 44.79297256]
[116.35753632 26.44567299]
[131.34945679 17.32375717]
[137.82894897 3.79541111]
[144.30844116 -9.73293495]
[150.78794861 -23.26128006]
[157.26744080 -36.78962708]
[163.74693298 -50.31797028]
[170.22642517 -63.84631729]
[175.36839294 -77.93745422]
[179.12469482 -92.45951843]
[182.88099670 -106.98157501]
[186.63728333 -121.50363922]
[173.75730896 -113.81558990]
[158.92936707 -116.08106995]
[148.93261719 -127.26431274]
[148.33743286 -142.25250244]
[157.41592407 -154.19323730]
[172.01751709 -157.62736511]
[185.46656799 -150.98486328]
[191.61450195 -137.30073547]
[196.86122131 -151.35321045]
[202.10794067 -165.40568542]
[207.35466003 -179.45816040]
[212.60137939 -193.51062012]
[215.92364502 -208.13809204]
[217.26187134 -223.07826233]
[218.60011292 -238.01844788]
[219.93833923 -252.95863342]
[221.27658081 -267.89883423]
[207.54119873 -274.31091309]
[196.82942200 -285.03631592]
[190.43475342 -298.77981567]
[189.12937927 -313.88186646]
[193.07093811 -328.51879883]
[201.78346252 -340.92315674]
[214.21485901 -349.59701538]
[228.86398315 -353.49301147]
[243.96189880 -352.14065552]
[257.68545532 -345.70324707]
[268.37744141 -334.95812988]
[274.74676514 -321.20288086]
[276.02429199 -306.09844971]
[272.05578613 -291.46878052]
[263.32040405 -279.08053589]
[250.87304688 -270.42956543]
[236.21676636 -266.56057739]
[234.87852478 -251.62040710]
[233.54029846 -236.68022156]
[232.20205688 -221.74003601]
[230.86383057 -206.79985046]
[239.02386475 -219.38609314]
[250.63420105 -228.88348389]
[264.58819580 -234.38676453]
[279.55584717 -235.37139893]
[294.11053467 -231.74356079]
[306.86499023 -223.84901428]
[316.60354614 -212.44023132]
[322.39797974 -198.60459900]
[323.69601440 -183.66087341]
[320.37393188 -169.03337097]
[312.74835205 -156.11630249]
[301.54611206 -146.14085388]
[287.83493042 -140.05778503]
[272.92169189 -138.44692993]
[258.22778320 -141.46180725]
[245.15379333 -148.81506348]
[234.94580078 -159.80583191]
[228.57679749 -173.38655090]
[226.65385437 -188.26390076]
[221.40713501 -174.21144104]
[216.16041565 -160.15896606]
[210.91369629 -146.10649109]
[205.66697693 -132.05401611]
[201.15934753 -117.74733734]
[197.40304565 -103.22527313]
[193.64674377 -88.70321655]
[189.89044189 -74.18115997]
[200.69308472 -84.58803558]
[214.76664734 -89.77789307]
[229.73951721 -88.87613678]
[243.08850098 -82.03472900]
[252.56404114 -70.40657043]
[256.56936646 -55.95121002]
[254.42948914 -41.10463333]
[246.50502014 -28.36874008]
[234.13139343 -19.88975906]
[219.39375305 -17.09654617]
[204.77566528 -20.45980644]
[192.74052429 -29.41277122]
[185.31648254 -42.44670868]
[183.75477600 -57.36682129]
[177.27528381 -43.83847427]
[170.79577637 -30.31012917]
[164.31628418 -16.78178406]
[157.83679199 -3.25343871]
[151.35729980 10.27490711]
[144.87779236 23.80325317]
[148.60021973 35.31282043]
[143.31275940 46.63653564]
[131.35575867 51.47316742]
[124.67556763 64.90354156]
[118.19606781 78.43189240]
[111.91870880 92.05520630]
[113.00930786 105.99443817]
[101.70460510 114.22215271]
[95.42724609 127.84547424]
[105.88729095 140.30827332]
[109.85104370 156.02871704]
[106.57416534 171.84713745]
[96.76239014 184.60693359]
[82.42028046 191.78451538]
[66.44188690 191.98829651]
[60.36805344 205.70355225]
[59.75453186 214.81736755]
[54.10033417 219.57675171]
[47.82297516 233.20007324]
[41.54561234 246.82339478]
[35.26825333 260.44671631]
[28.99089050 274.07000732]
[22.71353149 287.69332886]
[19.28246880 302.29565430]
[18.83586311 317.28900146]
[18.38925743 332.28234863]
[17.94265175 347.27569580]
[17.49604607 362.26907349]
[17.04944038 377.26242065]
[16.60283470 392.25576782]
[16.15622711 407.24911499]
[15.93290043 422.24743652]
[15.93290043 437.24743652]
[15.93290043 452.24743652]
[30.26128960 457.14398193]
[42.22190094 466.42959595]
[50.51733017 479.09704590]
[54.24775696 493.77227783]
[53.00853348 508.86343384]
[46.93407440 522.73352051]
[36.68330002 533.87805176]
[23.36813164 541.08813477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 202]
[10 201]
[11 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 194]
[20 193]
[21 192]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[55 184]
[56 183]
[63 177]
[64 176]
[66 174]
[67 173]
[70 172]
[71 171]
[73 168]
[74 167]
[75 166]
[76 165]
[77 164]
[78 163]
[79 162]
[80 148]
[81 147]
[82 146]
[83 145]
[91 144]
[92 143]
[93 142]
[94 141]
[95 140]
[96 121]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
