%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[101.88058472 507.00762939]
[112.78372955 496.62420654]
[125.60765839 488.73495483]
[120.57073975 474.60592651]
[115.53382874 460.47689819]
[110.49691010 446.34786987]
[99.70584869 440.88162231]
[95.39387512 429.15173340]
[100.38449860 417.25817871]
[95.55850220 403.05572510]
[90.73250580 388.85327148]
[85.90650940 374.65081787]
[81.08051300 360.44836426]
[76.25450897 346.24591064]
[74.30879211 361.11917114]
[69.25307465 375.24148560]
[61.31736755 387.97036743]
[50.86268616 398.72674561]
[38.36465454 407.02127075]
[24.39184761 412.47662354]
[9.57993507 414.84457397]
[-5.39724207 414.01742554]
[-19.85832024 410.03280640]
[-33.14541626 403.07196045]
[-44.65406036 393.45162964]
[-53.86067963 381.60940552]
[-60.34643555 368.08404541]
[-63.81627655 353.49090576]
[-64.11233521 338.49383545]
[-61.22115707 323.77508545]
[-55.27426147 310.00430298]
[-46.54219818 297.80795288]
[-35.42221451 287.74087524]
[-22.42019463 280.26107788]
[-8.12764645 275.70883179]
[6.80521584 274.29119873]
[21.69904518 276.07272339]
[35.87627411 280.97235107]
[48.69193268 288.76715088]
[59.56299210 299.10250854]
[67.99489594 311.50827026]
[73.60522461 325.42422485]
[74.72087097 310.46575928]
[75.83651733 295.50732422]
[76.95217133 280.54885864]
[70.18290710 267.28137207]
[78.92518616 254.09489441]
[80.04084015 239.13644409]
[77.40353394 232.23236084]
[81.28607941 223.96412659]
[82.62431335 209.02394104]
[83.96254730 194.08375549]
[85.30078125 179.14356995]
[86.63901520 164.20338440]
[87.97724915 149.26319885]
[89.31548309 134.32301331]
[82.74451447 120.95620728]
[91.68215179 107.90135193]
[81.78754425 119.17507172]
[67.61375427 124.08460999]
[52.86575699 121.34660339]
[41.39865494 111.67678070]
[36.20991516 97.60279083]
[38.65586853 82.80355835]
[48.09714127 71.14756012]
[62.06581116 65.68164062]
[76.91049957 67.83458710]
[88.75084686 77.04362488]
[94.49168396 90.90064240]
[98.03135681 76.32426453]
[101.57102966 61.74789047]
[105.11070251 47.17151642]
[108.65037537 32.59513855]
[112.19004822 18.01876450]
[115.40332031 3.36697769]
[118.28859711 -11.35291386]
[121.17386627 -26.07280540]
[124.05914307 -40.79269791]
[126.39463043 -55.60976410]
[128.17709351 -70.50347900]
[114.69075012 -77.38417816]
[104.39157104 -88.44306183]
[98.50847626 -102.33224487]
[97.73374176 -117.36785889]
[102.14159393 -131.73422241]
[111.18158722 -143.70304871]
[123.74725342 -151.84143066]
[138.31149292 -155.18330383]
[140.09396362 -170.07702637]
[141.87641907 -184.97074890]
[143.65888977 -199.86445618]
[131.38984680 -214.30000305]
[133.53170776 -232.80203247]
[148.26040649 -243.67315674]
[149.59864807 -258.61334229]
[150.93687439 -273.55352783]
[152.16384888 -288.50326538]
[153.27949524 -303.46170044]
[154.39514160 -318.42016602]
[140.47062683 -324.36883545]
[129.23377991 -334.51831055]
[121.90348816 -347.76766968]
[119.27488708 -362.67971802]
[121.63311005 -377.63690186]
[128.72235107 -391.01678467]
[139.77362061 -401.36801147]
[153.58818054 -407.56777954]
[168.66749573 -408.94354248]
[183.37590027 -405.34609985]
[196.11793518 -397.16567993]
[205.51142883 -385.28961182]
[210.53744507 -371.00613403]
[210.65081787 -355.86459351]
[205.83921814 -341.50747681]
[196.62460327 -329.49206543]
[184.00648499 -321.12176514]
[169.35360718 -317.30450439]
[168.23794556 -302.34606934]
[167.12229919 -287.38760376]
[169.75961304 -280.48352051]
[165.87705994 -272.21530151]
[164.53881836 -257.27511597]
[163.20059204 -242.33491516]
[172.23977661 -235.37364197]
[176.84373474 -224.80390930]
[175.76264954 -213.20541382]
[169.14991760 -203.47029114]
[158.55261230 -198.08200073]
[156.77014160 -183.18827820]
[154.98767090 -168.29455566]
[153.20521545 -153.40084839]
[166.56953430 -146.71650696]
[176.85983276 -135.84274292]
[182.82014465 -122.07868958]
[183.71336365 -107.07790375]
[179.41242981 -92.64973450]
[170.41793823 -80.54108429]
[157.79997253 -72.22490692]
[143.07081604 -68.72101593]
[141.28834534 -53.82729721]
[154.51373291 -60.90466309]
[168.35256958 -55.11792374]
[172.60339355 -40.73284149]
[164.13264465 -28.35356903]
[149.18464661 -27.10564423]
[138.77903748 -37.90742493]
[135.89375305 -23.18753242]
[133.00848389 -8.46764088]
[130.12321472 6.25225019]
[131.77629089 9.36668396]
[132.00297546 13.43653202]
[130.37068176 17.78266716]
[126.76642609 21.55843735]
[123.22675323 36.13481140]
[119.68708038 50.71118927]
[116.14740753 65.28756714]
[112.60773468 79.86393738]
[109.06806183 94.44031525]
[106.62233734 109.23958588]
[113.09758759 123.67501831]
[104.25566864 135.66123962]
[102.91743469 150.60142517]
[101.57920074 165.54161072]
[100.24096680 180.48179626]
[98.90273285 195.42198181]
[97.56449890 210.36216736]
[96.22626495 225.30235291]
[94.99929047 240.25209045]
[93.88364410 255.21054077]
[100.57310486 269.54797363]
[91.91062164 281.66452026]
[90.79497528 296.62295532]
[89.67932129 311.58142090]
[88.56367493 326.53988647]
[90.45697021 341.41992188]
[95.28296661 355.62237549]
[100.10896301 369.82482910]
[104.93495941 384.02728271]
[109.76095581 398.22973633]
[114.58695984 412.43218994]
[128.71315002 424.24453735]
[124.62593842 441.31094360]
[129.66285706 455.43997192]
[134.69976807 469.56900024]
[139.73669434 483.69802856]
[154.65931702 481.69583130]
[169.67210388 482.84033203]
[184.11874390 487.08157349]
[197.36772156 494.23410034]
[208.83981323 503.98522949]
[218.03352356 515.90869141]
[224.54695129 529.48327637]
[228.09535217 544.11553955]
[228.52359009 559.16577148]
[225.81295776 573.97613525]
[220.08195496 587.89910889]
[211.58111572 600.32604980]
[200.68206787 610.71374512]
[187.86123657 618.60809326]
[173.67913818 623.66394043]
[158.75572205 625.66027832]
[143.74337769 624.50982666]
[129.29840088 620.26287842]
[116.05225372 613.10516357]
[104.58399200 603.34954834]
[95.39496613 591.42242432]
[88.88688660 577.84527588]
[85.34424591 563.21166992]
[84.92192841 548.16125488]
[87.63838196 533.35198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[42 174]
[43 173]
[44 172]
[45 171]
[47 169]
[48 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[56 161]
[58 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 149]
[76 148]
[77 147]
[78 146]
[79 140]
[80 139]
[88 131]
[89 130]
[90 129]
[91 128]
[94 123]
[95 122]
[96 121]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
