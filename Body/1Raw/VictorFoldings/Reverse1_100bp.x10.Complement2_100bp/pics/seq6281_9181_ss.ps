%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[56.90217972 715.43035889]
[45.15034485 705.85589600]
[37.38455200 692.83789062]
[34.54256058 677.94830322]
[36.96755219 662.98522949]
[44.36670303 649.75537109]
[55.84652328 639.85638428]
[70.02077484 634.48364258]
[69.79744720 619.48529053]
[69.57411957 604.48699951]
[69.35079193 589.48864746]
[69.12746429 574.49029541]
[68.90413666 559.49194336]
[60.44549179 550.84454346]
[60.13668823 538.35101318]
[68.68851471 528.69549561]
[65.54501343 522.00665283]
[68.80184174 513.47259521]
[69.02516937 498.47424316]
[69.24849701 483.47589111]
[69.47182465 468.47756958]
[69.69515228 453.47921753]
[69.91847992 438.48089600]
[70.14180756 423.48254395]
[70.36513519 408.48422241]
[70.58846283 393.48587036]
[63.04151154 380.64480591]
[70.98341370 366.96136475]
[71.20674133 351.96304321]
[63.65979004 339.12197876]
[71.60169983 325.43853760]
[61.55965042 336.58111572]
[46.91037369 339.80581665]
[33.11768723 333.90991211]
[25.32592392 321.09240723]
[26.44121742 306.13391113]
[36.04758835 294.61361694]
[50.56210327 290.82824707]
[64.57120514 296.18969727]
[72.85015869 308.69940186]
[74.85417175 293.83386230]
[76.85818481 278.96832275]
[69.32770538 263.11718750]
[80.70366669 248.63723755]
[82.48613739 233.74351501]
[84.26860046 218.84979248]
[86.05106354 203.95608521]
[87.83353424 189.06236267]
[89.17176819 174.12217712]
[90.06458282 159.14877319]
[90.95739746 144.17536926]
[91.62718201 129.19032288]
[92.07379150 114.19698334]
[83.74431610 99.63689423]
[92.71562195 85.46325684]
[92.93894958 70.46492004]
[93.16227722 55.46658325]
[93.38560486 40.46824265]
[77.10586548 32.88312912]
[65.81888580 18.98107338]
[61.76382828 1.59359765]
[65.71292114 -15.76390457]
[76.82492065 -29.60289764]
[92.82377625 -37.16283035]
[92.37716675 -52.15618134]
[91.93056488 -67.14952850]
[91.48395538 -82.14288330]
[91.03735352 -97.13623047]
[90.59074402 -112.12957764]
[89.58648682 -127.09592438]
[87.91494751 -142.00250244]
[86.13247681 -156.89620972]
[82.00547791 -165.04518127]
[84.43605042 -172.02473450]
[82.87552643 -186.94334412]
[81.31500244 -201.86193848]
[70.15589142 -216.50965881]
[77.92153168 -232.24693298]
[68.59916687 -245.02989197]
[74.76924896 -258.58642578]
[72.98677826 -273.48013306]
[71.20431519 -288.37384033]
[67.55385590 -293.88616943]
[67.27679443 -299.56246948]
[69.59732819 -303.73669434]
[68.25909424 -318.67687988]
[66.92086029 -333.61706543]
[65.36033630 -348.53567505]
[63.57786942 -363.42938232]
[61.79540253 -378.32308960]
[60.01293564 -393.21682739]
[45.11400223 -395.70648193]
[31.52059746 -402.29403687]
[20.33468437 -412.44549561]
[12.46304893 -425.33789062]
[8.54381371 -439.92611694]
[8.89469051 -455.02755737]
[13.48723698 -469.41802979]
[21.94915581 -481.93090820]
[33.59447861 -491.55191040]
[47.47916412 -497.50103760]
[62.47765350 -499.29602051]
[77.37407684 -496.79141235]
[90.96086121 -490.19018555]
[102.13656616 -480.02749634]
[109.99524689 -467.12719727]
[113.89982605 -452.53503418]
[113.53377533 -437.43395996]
[108.92678070 -423.04812622]
[100.45229340 -410.54373169]
[88.79730988 -400.93444824]
[74.90665436 -394.99926758]
[76.68911743 -380.10556030]
[78.47158813 -365.21185303]
[80.25405121 -350.31814575]
[83.38816833 -346.71447754]
[84.29176331 -341.10372925]
[81.86103821 -334.95529175]
[83.19927979 -320.01510620]
[84.53751373 -305.07492065]
[86.09803009 -290.15631104]
[87.88050079 -275.26260376]
[89.66296387 -260.36889648]
[98.85784149 -248.65122986]
[92.81524658 -234.02940369]
[102.12762451 -226.30889893]
[103.73451996 -213.91528320]
[96.23361206 -203.42247009]
[97.79413605 -188.50386047]
[99.35466003 -173.58525085]
[101.02619934 -158.67868042]
[102.80866241 -143.78495789]
[106.72473145 -137.51708984]
[104.50508881 -128.65644836]
[115.83448792 -138.48724365]
[130.61129761 -135.90931702]
[137.94261169 -122.82298279]
[132.42405701 -108.87503052]
[118.12369537 -104.34735870]
[105.58409882 -112.57618713]
[106.03070068 -97.58283234]
[106.47731018 -82.58948517]
[106.92391205 -67.59613800]
[107.37052155 -52.60278702]
[107.81712341 -37.60943604]
[119.46182251 -33.85985565]
[129.41453552 -26.70441055]
[136.70666504 -16.82101250]
[140.62286377 -5.15392780]
[140.77125549 7.17642689]
[137.12252808 18.98107338]
[130.01422119 29.11713028]
[120.11963654 36.59845352]
[108.38394165 40.69157028]
[108.16061401 55.68991089]
[107.93728638 70.68824768]
[107.71395874 85.68658447]
[115.30745697 94.51721954]
[115.04737091 106.16082764]
[107.06713867 114.64358521]
[106.62053680 129.63693237]
[109.41290283 135.62977600]
[108.84487152 141.28436279]
[105.93080139 145.06819153]
[105.03798676 160.04159546]
[104.14517212 175.01499939]
[106.22557831 178.82627869]
[106.91557312 182.71066284]
[106.36290741 186.22206116]
[104.84503174 189.00822449]
[102.72724915 190.84483337]
[100.94478607 205.73855591]
[99.16231537 220.63226318]
[97.37985229 235.52598572]
[95.59738922 250.41969299]
[102.94123840 261.02304077]
[101.15000153 273.39135742]
[91.72370911 280.97235107]
[89.71969604 295.83789062]
[87.71568298 310.70339966]
[86.60003662 325.66186523]
[94.13101196 339.57571411]
[86.20507812 352.18637085]
[85.98175049 367.18469238]
[93.51273346 381.09854126]
[85.58679962 393.70919800]
[85.36347198 408.70755005]
[85.14014435 423.70587158]
[84.91681671 438.70422363]
[84.69348907 453.70254517]
[84.47016144 468.70089722]
[84.24683380 483.69921875]
[84.02350616 498.69757080]
[83.80017853 513.69592285]
[83.68851471 528.69549561]
[93.26319885 544.42468262]
[83.90247345 559.26861572]
[84.12580109 574.26696777]
[84.34912872 589.26531982]
[84.57245636 604.26367188]
[84.79578400 619.26196289]
[85.01911163 634.26031494]
[99.34704590 639.20867920]
[111.11650085 648.76147461]
[118.90627289 661.76513672]
[121.77569580 676.64941406]
[119.37828827 691.61700439]
[112.00353241 704.86041260]
[100.54196930 714.78051758]
[86.37764740 720.17938232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 197]
[16 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[28 184]
[29 183]
[31 181]
[40 180]
[41 179]
[42 178]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 166]
[50 165]
[51 164]
[52 161]
[53 160]
[55 157]
[56 156]
[57 155]
[58 154]
[64 145]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[70 134]
[71 132]
[72 131]
[74 130]
[75 129]
[76 128]
[78 125]
[80 123]
[81 122]
[82 121]
[85 120]
[86 119]
[87 118]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
