%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[42.77618790 804.69506836]
[28.89217186 810.40380859]
[14.52199554 814.74584961]
[-0.20016886 817.68072510]
[-15.13686180 819.18096924]
[-30.14861870 819.23260498]
[-45.09527588 817.83508301]
[-59.83727646 815.00158691]
[-74.23697662 810.75842285]
[-88.15992737 805.14532471]
[-101.47612762 798.21466064]
[-114.06124878 790.03112793]
[-125.79777527 780.67114258]
[-136.57614136 770.22210693]
[-146.29568481 758.78155518]
[-154.86567688 746.45635986]
[-162.20610046 733.36151123]
[-168.24839783 719.61938477]
[-172.93615723 705.35827637]
[-176.22563171 690.71124268]
[-178.08607483 675.81512451]
[-178.50015259 660.80902100]
[-177.46395874 645.83294678]
[-174.98719788 631.02685547]
[-171.09298706 616.52886963]
[-165.81768799 602.47448730]
[-159.21054077 588.99481201]
[-151.33325195 576.21575928]
[-142.25938416 564.25665283]
[-132.07362366 553.22912598]
[-120.87110138 543.23620605]
[-108.75640869 534.37109375]
[-95.84265900 526.71667480]
[-82.25042725 520.34429932]
[-68.10662079 515.31359863]
[-53.54330444 511.67144775]
[-38.69645309 509.45184326]
[-23.70469284 508.67559814]
[-8.70799732 509.34988403]
[6.15360689 511.46841431]
[9.69327927 496.89205933]
[13.23295212 482.31567383]
[16.77262497 467.73928833]
[20.31229591 453.16293335]
[23.85196877 438.58654785]
[27.39164162 424.01016235]
[30.93131447 409.43380737]
[34.47098541 394.85742188]
[38.01065826 380.28103638]
[33.49523163 366.08737183]
[44.27055740 354.50277710]
[47.48382950 339.85098267]
[50.36910248 325.13110352]
[53.25437546 310.41119385]
[56.13964844 295.69131470]
[59.02492142 280.97143555]
[61.91019440 266.25152588]
[64.79546356 251.53164673]
[58.22182083 235.26037598]
[70.43946838 221.48320007]
[73.10527039 206.72198486]
[67.75302124 192.82225037]
[77.81971741 180.61682129]
[80.48551178 165.85560608]
[83.15130615 151.09439087]
[85.81710052 136.33317566]
[88.48290253 121.57196045]
[91.14869690 106.81073761]
[93.70452881 92.03009033]
[96.15025330 77.23081970]
[98.59598541 62.43154526]
[101.04170990 47.63227463]
[102.49112701 32.70246506]
[102.93773651 17.70911598]
[103.04940033 2.70953202]
[102.82607269 -12.28880501]
[102.60274506 -27.28714371]
[102.37941742 -42.28548050]
[88.41770172 -51.83360291]
[82.95246887 -67.66497803]
[87.95031738 -83.47583771]
[101.25270081 -93.09478760]
[100.80609131 -108.08813477]
[99.80183411 -123.05448151]
[98.24131012 -137.97308350]
[96.68078613 -152.89169312]
[95.12026215 -167.81028748]
[93.55973816 -182.72889709]
[91.99921417 -197.64750671]
[88.93172455 -201.87095642]
[87.89469910 -206.39620972]
[88.66310120 -210.39927673]
[90.71743774 -213.26493835]
[89.82462311 -228.23834229]
[88.93180847 -243.21176147]
[88.03899384 -258.18515015]
[73.66240692 -263.12301636]
[62.27312088 -273.19039917]
[55.60791397 -286.85214233]
[54.68317795 -302.02493286]
[59.63993073 -316.39501953]
[69.72230530 -327.77105713]
[83.39281464 -334.41827393]
[98.56679535 -335.32305908]
[112.93033600 -330.34741211]
[124.29309845 -320.25006104]
[130.92234802 -306.57083130]
[131.80715942 -291.39566040]
[126.81261444 -277.03869629]
[116.70034790 -265.68920898]
[103.01239777 -259.07797241]
[103.90521240 -244.10456848]
[104.79802704 -229.13116455]
[105.69084930 -214.15776062]
[106.91782379 -199.20802307]
[108.47834778 -184.28941345]
[110.03886414 -169.37081909]
[111.59938812 -154.45220947]
[113.15991211 -139.53359985]
[114.72043610 -124.61499786]
[126.04983521 -134.44580078]
[140.82664490 -131.86785889]
[148.15795898 -118.78153992]
[142.63940430 -104.83358765]
[128.33905029 -100.30590820]
[115.79943848 -108.53473663]
[116.24604797 -93.54138947]
[127.92628479 -87.07500458]
[134.94236755 -75.58941650]
[135.37040710 -62.02894592]
[128.99169922 -49.93223190]
[117.37775421 -42.50880814]
[117.60108185 -27.51047134]
[117.82440948 -12.51213264]
[118.04773712 2.48620439]
[120.30952454 5.19113398]
[121.37353516 9.12597179]
[120.67595673 13.71581745]
[117.93108368 18.15572166]
[117.48447418 33.14907074]
[127.14673615 21.67558861]
[141.44638062 17.14568329]
[155.95252991 20.96299744]
[166.17027283 31.94469261]
[168.93354797 46.68797302]
[163.38610840 60.62447357]
[151.24690247 69.43581390]
[136.27740479 70.39170837]
[123.11604309 63.19596100]
[115.84098053 50.07800293]
[113.39525604 64.87727356]
[110.94952393 79.67654419]
[108.50379944 94.47581482]
[110.40104675 102.30990601]
[105.90991211 109.47653961]
[103.24411774 124.23775482]
[100.57832336 138.99897766]
[97.91252899 153.76019287]
[95.24672699 168.52140808]
[92.58093262 183.28262329]
[97.74250031 198.23818970]
[87.86648560 209.38778687]
[85.20069122 224.14900208]
[91.90039825 235.17063904]
[89.37616730 247.41041565]
[79.51535797 254.41691589]
[76.63008118 269.13681030]
[73.74481201 283.85668945]
[70.85954285 298.57659912]
[67.97426605 313.29647827]
[65.08899689 328.01635742]
[62.20372009 342.73626709]
[63.89705658 347.67382812]
[63.56072998 352.30419922]
[61.65164566 355.90563965]
[58.84693146 358.04244995]
[63.10918045 373.27871704]
[52.58703613 383.82070923]
[49.04736328 398.39709473]
[45.50769043 412.97348022]
[41.96801758 427.54983521]
[38.42834473 442.12622070]
[34.88867188 456.70260620]
[31.34899902 471.27896118]
[27.80932808 485.85534668]
[24.26965523 500.43173218]
[20.72998238 515.00811768]
[34.90805435 519.94140625]
[48.54379272 526.22015381]
[61.50988007 533.78558350]
[73.68525696 542.56713867]
[84.95624542 552.48278809]
[95.21759796 563.44000244]
[104.37351990 575.33642578]
[112.33850861 588.06097412]
[119.03820038 601.49487305]
[124.41004181 615.51269531]
[128.40386963 629.98352051]
[130.98240662 644.77221680]
[132.12156677 659.74078369]
[131.81071472 674.74945068]
[130.05276489 689.65795898]
[126.86411285 704.32727051]
[122.27453613 718.62030029]
[116.32689667 732.40368652]
[109.07671356 745.54864502]
[100.59169769 757.93255615]
[90.95106506 769.43963623]
[80.24481964 779.96258545]
[68.57294464 789.40307617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 187]
[41 186]
[42 185]
[43 184]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[51 176]
[52 172]
[53 171]
[54 170]
[55 169]
[56 168]
[57 167]
[58 166]
[60 163]
[61 162]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 153]
[70 152]
[71 151]
[72 150]
[73 140]
[74 139]
[75 135]
[76 134]
[77 133]
[78 132]
[82 127]
[83 126]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
