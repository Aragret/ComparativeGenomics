%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[215.33503723 375.16592407]
[220.26463318 360.98529053]
[226.60357666 347.37612915]
[234.28683472 334.47814941]
[243.23554993 322.42361450]
[253.35791016 311.33630371]
[243.35974121 300.15432739]
[233.36157227 288.97235107]
[223.36340332 277.79037476]
[213.36521912 266.60839844]
[203.36705017 255.42642212]
[188.52763367 254.85423279]
[178.22877502 243.65653992]
[178.92956543 228.09547424]
[168.93139648 216.91351318]
[158.93321228 205.73153687]
[159.09759521 220.73063660]
[150.50862122 233.02816772]
[136.36976624 238.03747559]
[121.95449829 233.89019775]
[112.63933563 222.13316345]
[111.89861298 207.15147400]
[120.00859070 194.53289795]
[133.94445801 188.98388672]
[148.50947571 192.57467651]
[139.91090393 180.28382874]
[131.31234741 167.99299622]
[122.71378326 155.70216370]
[114.11521912 143.41131592]
[105.51665497 131.12048340]
[107.48711395 145.99049377]
[105.04624176 160.79057312]
[98.40520477 174.24034119]
[88.13850403 185.17628479]
[75.13431549 192.65232849]
[60.51763916 196.02171326]
[45.55295944 194.99296570]
[31.53487015 189.65505981]
[19.67607689 180.46980286]
[11.00248241 168.23179626]
[6.26444197 153.99975586]
[5.87184191 139.00489807]
[9.85864639 124.54441833]
[17.87995720 111.86930084]
[29.24184990 102.07607269]
[42.96140671 96.01193237]
[57.85175323 94.20150757]
[72.62471771 96.80139923]
[86.00229645 103.58670807]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[74.49450684 48.25098801]
[69.66851044 34.04853058]
[63.94449234 26.93000603]
[64.87809753 19.59855461]
[60.26409149 5.32582140]
[46.31532288 -6.69555235]
[50.65618134 -23.69919586]
[45.83018494 -37.90164948]
[41.00418854 -52.10410690]
[36.17818832 -66.30656433]
[31.35219193 -80.50901794]
[17.22599030 -92.32138062]
[21.31320953 -109.38777161]
[16.27629280 -123.51679993]
[11.23937702 -137.64582825]
[6.20246077 -151.77485657]
[1.06050110 -165.86599731]
[-4.18621731 -179.91847229]
[-9.43293571 -193.97094727]
[-14.67965317 -208.02340698]
[-19.92637253 -222.07588196]
[-25.17308998 -236.12835693]
[-39.96090698 -233.39128113]
[-54.99935532 -233.26385498]
[-69.83142853 -235.74993896]
[-84.00640106 -240.77400208]
[-97.09351349 -248.18336487]
[-108.69506073 -257.75286865]
[-118.45848083 -269.19168091]
[-126.08708191 -282.15222168]
[-131.34902954 -296.24063110]
[-134.08444214 -311.02874756]
[-134.21015930 -326.06723022]
[-131.72238159 -340.89901733]
[-126.69670868 -355.07342529]
[-119.28586578 -368.15969849]
[-109.71505737 -379.76013184]
[-98.27512360 -389.52227783]
[-85.31372070 -397.14941406]
[-71.22472382 -402.40975952]
[-56.43628693 -405.14349365]
[-41.39780807 -405.26748657]
[-26.56629944 -402.77804565]
[-12.39246464 -397.75076294]
[0.69296592 -390.33843994]
[12.29234123 -380.76629639]
[22.05316925 -369.32525635]
[29.67882919 -356.36300659]
[34.93758774 -342.27340698]
[37.66963196 -327.48464966]
[37.79194641 -312.44616699]
[35.30080414 -297.61492920]
[30.27191734 -283.44168091]
[22.85810471 -270.35708618]
[13.28466129 -258.75878906]
[1.84251571 -248.99926758]
[-11.12061882 -241.37507629]
[-5.87390041 -227.32260132]
[-0.62718219 -213.27012634]
[4.61953592 -199.21766663]
[9.86625385 -185.16519165]
[15.11297226 -171.11271667]
[20.39752197 -165.94596863]
[20.33148956 -156.81176758]
[25.36840630 -142.68273926]
[30.40532303 -128.55371094]
[35.44223785 -114.42468262]
[46.23329926 -108.95846558]
[50.54527283 -97.22856140]
[45.55464554 -85.33501434]
[50.38064575 -71.13256073]
[55.20664215 -56.93010330]
[60.03263855 -42.72764969]
[64.85863495 -28.52519226]
[75.56712341 -22.89891815]
[79.70397186 -11.10611343]
[74.53681946 0.71181220]
[79.15083313 14.98454571]
[83.87096405 29.22253418]
[88.69696045 43.42499161]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[117.80748749 122.52191925]
[126.40605164 134.81275940]
[135.00462341 147.10359192]
[143.60317993 159.39443970]
[152.20175171 171.68527222]
[160.80030823 183.97610474]
[170.11518860 195.73335266]
[180.11335754 206.91532898]
[190.11154175 218.09730530]
[205.65377808 219.13494873]
[215.63404846 230.61749268]
[214.54902649 245.42825317]
[224.54719543 256.61022949]
[234.54537964 267.79220581]
[244.54354858 278.97418213]
[254.54171753 290.15615845]
[264.53988647 301.33810425]
[276.68615723 292.51434326]
[289.66281128 284.96466064]
[303.33666992 278.76654053]
[317.56744385 273.98364258]
[332.20907593 270.66497803]
[347.11132812 268.84463501]
[362.12130737 268.54132080]
[377.08493042 269.75808716]
[391.84869385 272.48248291]
[406.26107788 276.68655396]
[420.17419434 282.32714844]
[433.44525146 289.34637451]
[445.93811035 297.67221069]
[457.52453613 307.21926880]
[468.08563232 317.88949585]
[477.51306152 329.57345581]
[485.71002197 342.15124512]
[492.59246826 355.49377441]
[498.08972168 369.46414185]
[502.14538574 383.91897583]
[504.71786499 398.70996094]
[505.78073120 413.68533325]
[505.32308960 428.69137573]
[503.34963989 443.57415771]
[499.88064575 458.18087769]
[494.95169067 472.36172485]
[488.61334229 485.97116089]
[480.93063354 498.86950684]
[471.98245239 510.92440796]
[461.86056519 522.01220703]
[450.66888428 532.01904297]
[438.52224731 540.84228516]
[425.54525757 548.39141846]
[411.87112427 554.58886719]
[397.64013672 559.37115479]
[382.99835205 562.68920898]
[368.09600830 564.50885010]
[353.08602905 564.81152344]
[338.12246704 563.59411621]
[323.35882568 560.86907959]
[308.94662476 556.66436768]
[295.03375244 551.02319336]
[281.76300049 544.00335693]
[269.27050781 535.67694092]
[257.68450928 526.12939453]
[247.12387085 515.45867920]
[237.69697571 503.77432251]
[229.50054932 491.19616699]
[222.61871338 477.85333252]
[217.12207031 463.88275146]
[213.06703186 449.42770386]
[210.49520874 434.63659668]
[209.43299866 419.66119385]
[209.89129639 404.65518188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 151]
[14 148]
[15 147]
[16 146]
[25 145]
[26 144]
[27 143]
[28 142]
[29 141]
[30 140]
[50 139]
[52 137]
[53 136]
[54 135]
[55 134]
[56 133]
[58 132]
[59 131]
[61 128]
[62 127]
[63 126]
[64 125]
[65 124]
[67 121]
[68 120]
[69 119]
[70 118]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
