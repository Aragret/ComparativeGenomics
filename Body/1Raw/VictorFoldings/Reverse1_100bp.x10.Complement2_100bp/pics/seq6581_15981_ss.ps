%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[68.96963501 536.88043213]
[57.63908005 546.72418213]
[45.50424194 555.55749512]
[32.65496445 563.31488037]
[19.18638611 569.93902588]
[5.19821978 575.38073730]
[-9.20596600 579.59985352]
[-23.91952705 582.56506348]
[-38.83352661 584.25445557]
[-53.83754730 584.65551758]
[-68.82050323 583.76525879]
[-83.67145538 581.59027100]
[-98.28045654 578.14666748]
[-112.53935242 573.45989990]
[-126.34255981 567.56475830]
[-139.58789062 560.50482178]
[-152.17727661 552.33239746]
[-164.01751709 543.10797119]
[-175.02093506 532.89978027]
[-185.10606384 521.78356934]
[-194.19825745 509.84146118]
[-202.23017883 497.16195679]
[-209.14236450 483.83892822]
[-214.88365173 469.97100830]
[-219.41151428 455.66085815]
[-222.69242859 441.01446533]
[-224.70211792 426.14025879]
[-225.42570496 411.14831543]
[-224.85781860 396.14968872]
[-223.00267029 381.25540161]
[-219.87399292 366.57571411]
[-215.49494934 352.21936035]
[-209.89796448 338.29257202]
[-203.12448120 324.89849854]
[-195.22463989 312.13629150]
[-186.25692749 300.10043335]
[-176.28775024 288.88006592]
[-165.39089966 278.55822754]
[-153.64707947 269.21133423]
[-141.14321899 260.90863037]
[-127.97190857 253.71156311]
[-114.23065186 247.67341614]
[-100.02118683 242.83888245]
[-85.44872284 239.24378967]
[-70.62115479 236.91471863]
[-55.64825058 235.86894226]
[-40.64087677 236.11418152]
[-25.71014023 237.64863586]
[-10.96658516 240.46093750]
[3.48063016 244.53025818]
[17.52454185 249.82647705]
[24.00403786 236.29814148]
[30.48353386 222.76979065]
[36.96302795 209.24145508]
[36.24914932 204.51922607]
[38.49416733 199.29840088]
[43.84214020 195.41114807]
[50.72155380 182.08172607]
[57.60096359 168.75230408]
[64.48037720 155.42286682]
[71.35978699 142.09344482]
[78.23920441 128.76400757]
[84.81922913 115.28427124]
[91.09658813 101.66095734]
[90.28733063 97.89035034]
[91.14402008 93.78134155]
[93.78054047 90.08596802]
[97.97050476 87.57917023]
[104.84991455 74.24974060]
[111.72933197 60.92031479]
[118.60874176 47.59088516]
[125.48815918 34.26145554]
[130.20828247 20.02346611]
[132.65402222 5.22419596]
[135.09974670 -9.57507515]
[137.54547119 -24.37434578]
[139.99119568 -39.17361832]
[142.43692017 -53.97288895]
[144.88265991 -68.77215576]
[132.72784424 -74.91663361]
[122.80781555 -84.22411346]
[115.91915894 -95.93417358]
[112.61141205 -109.09402466]
[113.14317322 -122.63595581]
[117.46193695 -135.46403503]
[125.20908356 -146.54277039]
[135.74967957 -154.98066711]
[148.22445679 -160.10203552]
[161.61993408 -161.50100708]
[164.50520325 -176.22090149]
[167.39047241 -190.94079590]
[170.27574158 -205.66069031]
[173.16102600 -220.38056946]
[175.05430603 -235.26060486]
[175.94712830 -250.23402405]
[176.83993530 -265.20742798]
[177.73275757 -280.18081665]
[163.51345825 -285.27868652]
[151.30718994 -294.17721558]
[142.10345459 -306.15502930]
[136.64836121 -320.24114990]
[135.38412476 -335.29367065]
[138.41323853 -350.09234619]
[145.49015808 -363.43753052]
[156.04115295 -374.24740601]
[169.21093750 -381.64559937]
[183.93186951 -385.03244019]
[199.01060486 -384.13336182]
[213.22477722 -379.02120972]
[225.42210388 -370.11044312]
[234.61380005 -358.12338257]
[240.05473328 -344.03179932]
[241.30384827 -328.97799683]
[238.25987244 -314.18237305]
[231.16955566 -300.84429932]
[220.60769653 -290.04504395]
[207.43049622 -282.66006470]
[192.70616150 -279.28802490]
[191.81335449 -264.31460571]
[190.92053223 -249.34120178]
[190.02770996 -234.36779785]
[200.02729797 -245.54850769]
[214.45547485 -249.65065002]
[228.84153748 -245.40313721]
[238.72778320 -234.12208557]
[241.05087280 -219.30307007]
[235.09095764 -205.53791809]
[222.69479370 -197.09190369]
[207.70344543 -196.58213806]
[194.76217651 -204.16654968]
[187.88090515 -217.49530029]
[184.99563599 -202.77540588]
[182.11036682 -188.05552673]
[179.22509766 -173.33563232]
[176.33981323 -158.61573792]
[190.59802246 -150.39395142]
[201.19628906 -137.76789856]
[206.84019470 -122.25231171]
[206.83110046 -105.71642303]
[201.15252686 -90.15881348]
[190.47425842 -77.46585083]
[176.07348633 -69.18294525]
[159.68193054 -66.32643127]
[157.23619080 -51.52716064]
[154.79046631 -36.72789001]
[152.34474182 -21.92861748]
[149.89901733 -7.12934732]
[147.45329285 7.66992331]
[145.00755310 22.46919441]
[153.86851501 10.36616135]
[165.63204956 1.05920434]
[179.44892883 -4.77979851]
[194.32168579 -6.72932529]
[209.17668152 -4.64863729]
[222.94149780 1.31205797]
[234.62243652 10.72245312]
[243.37626648 22.90320396]
[248.57099915 36.97497177]
[249.83166504 51.92190170]
[247.06723022 66.66496277]
[240.47726440 80.13984680]
[230.53750610 91.37377930]
[217.96551514 99.55577850]
[203.66888428 104.09518433]
[188.67968750 104.66428375]
[174.08000183 101.22199249]
[160.92381287 94.01682281]
[150.16084290 83.56891632]
[142.56811523 70.63251495]
[138.69374084 56.14151001]
[138.81758118 41.14086914]
[131.93817139 54.47029877]
[125.05876160 67.79972839]
[118.17934418 81.12915802]
[111.29993439 94.45858765]
[104.71990967 107.93831635]
[98.44254303 121.56163788]
[98.92289734 126.75936127]
[97.50340271 131.17958069]
[94.79837799 134.22882080]
[91.56863403 135.64341736]
[84.68921661 148.97285461]
[77.80980682 162.30227661]
[70.93039703 175.63171387]
[64.05097961 188.96113586]
[57.17156982 202.29057312]
[50.49137497 215.72094727]
[44.01187897 229.24928284]
[37.53238297 242.77763367]
[31.05288696 256.30596924]
[43.98242188 263.92886353]
[56.20878983 272.63504028]
[67.64146423 282.36004639]
[78.19580078 293.03182983]
[87.79366302 304.57144165]
[96.36398315 316.89343262]
[103.84330750 329.90652466]
[110.17627716 343.51443481]
[115.31597900 357.61639404]
[119.22438049 372.10797119]
[121.87253571 386.88186646]
[123.24084473 401.82876587]
[123.31916809 416.83792114]
[122.10692596 431.79827881]
[119.61310577 446.59902954]
[115.85615540 461.13061523]
[110.86389923 475.28543091]
[104.67330170 488.95867920]
[97.33018494 502.04913330]
[88.88893127 514.45989990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 190]
[52 189]
[53 188]
[54 187]
[57 186]
[58 185]
[59 184]
[60 183]
[61 182]
[62 181]
[63 177]
[64 176]
[68 175]
[69 174]
[70 173]
[71 172]
[72 171]
[73 149]
[74 148]
[75 147]
[76 146]
[77 145]
[78 144]
[79 143]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
