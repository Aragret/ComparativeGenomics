%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[-72.80004120 527.84869385]
[-73.44155121 542.84936523]
[-75.67391968 557.69689941]
[-79.47186279 572.22296143]
[-84.79234314 586.26312256]
[-91.57508087 599.65814209]
[-99.74321747 612.25628662]
[-109.20420074 623.91485596]
[-119.85083771 634.50164795]
[-131.56248474 643.89685059]
[-144.20643616 651.99389648]
[-157.63943481 658.70111084]
[-171.70928955 663.94244385]
[-186.25654602 667.65850830]
[-201.11639404 669.80725098]
[-216.12045288 670.36425781]
[-231.09872437 669.32330322]
[-245.88146973 666.69610596]
[-260.30120850 662.51239014]
[-274.19458008 656.81970215]
[-287.40408325 649.68243408]
[-299.78012085 641.18151855]
[-311.18243408 631.41320801]
[-321.48184204 620.48828125]
[-330.56161499 608.53045654]
[-338.31887817 595.67523193]
[-344.66574097 582.06823730]
[-349.53030396 567.86376953]
[-352.85745239 553.22265625]
[-354.60943604 538.31079102]
[-354.76644897 523.29724121]
[-353.32672119 508.35202026]
[-350.30651855 493.64450073]
[-345.74011230 479.34136963]
[-339.67922974 465.60464478]
[-332.19250488 452.58999634]
[-323.36480713 440.44488525]
[-313.29617310 429.30688477]
[-302.10064697 419.30227661]
[-289.90512085 410.54437256]
[-276.84774780 403.13238525]
[-263.07650757 397.15036011]
[-248.74740601 392.66601562]
[-234.02284241 389.73019409]
[-219.06962585 388.37615967]
[-204.05718994 388.61926270]
[-189.15565491 390.45672607]
[-174.53385925 393.86776733]
[-160.35746765 398.81369019]
[-146.78712463 405.23846436]
[-133.97657776 413.06930542]
[-124.83778381 401.17468262]
[-115.69898224 389.28002930]
[-106.56017303 377.38540649]
[-97.42137146 365.49078369]
[-99.60495758 350.80175781]
[-90.50636292 338.60870361]
[-75.08435059 336.41796875]
[-65.94554901 324.52334595]
[-64.32690430 309.71694946]
[-49.78361130 303.48773193]
[-40.64480972 291.59307861]
[-31.50600624 279.69845581]
[-22.36720276 267.80383301]
[-13.22840118 255.90917969]
[-4.08959866 244.01455688]
[5.04920387 232.11991882]
[14.18800640 220.22528076]
[23.32680893 208.33065796]
[32.46561050 196.43601990]
[41.60441208 184.54138184]
[50.74321747 172.64675903]
[59.88201904 160.75212097]
[69.02082062 148.85748291]
[76.58519745 135.90449524]
[82.45416260 122.10031128]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[103.32805634 71.86210632]
[108.36497498 57.73307419]
[111.35974884 43.03507233]
[112.25256348 28.06166458]
[113.14537811 13.08825874]
[114.03820038 -1.88514674]
[114.93101501 -16.85855293]
[106.30951691 -33.12973404]
[116.53717804 -47.39023590]
[117.20696259 -62.37527466]
[105.16751099 -75.06664276]
[106.01513672 -92.20130157]
[118.73751068 -103.20037842]
[119.18412018 -118.19373322]
[119.63072205 -133.18708801]
[120.07733154 -148.18043518]
[120.52394104 -163.17378235]
[106.15915680 -167.84602356]
[93.69335938 -176.37716675]
[84.13707733 -188.07563782]
[78.26500702 -201.99308777]
[76.55316925 -217.00129700]
[79.14032745 -231.88362122]
[85.81676483 -245.43359375]
[96.04123688 -256.55279541]
[108.98490143 -264.33984375]
[123.59848022 -268.16348267]
[138.69729614 -267.71374512]
[153.05737305 -263.02706909]
[165.51460266 -254.48339844]
[175.05912781 -242.77534485]
[180.91720581 -228.85198975]
[182.61396790 -213.84207153]
[180.01185608 -198.96237183]
[173.32182312 -185.41909790]
[163.08618164 -174.31016541]
[150.13468933 -166.53613281]
[135.51728821 -162.72717285]
[135.07067871 -147.73382568]
[134.62406921 -132.74047852]
[134.17747498 -117.74712372]
[133.73086548 -102.75377655]
[143.79205322 -94.70380402]
[147.43405151 -82.14124298]
[143.11203003 -69.59012604]
[132.19200134 -61.70549011]
[131.52221680 -46.72045135]
[139.45115662 -37.58489227]
[139.01579285 -25.09512711]
[129.90441895 -15.96573639]
[129.01159668 -0.99233091]
[128.11878967 13.98107529]
[127.22597504 28.95448112]
[126.33315277 43.92788696]
[134.02284241 31.04887962]
[145.12675476 20.96409607]
[158.68432617 14.54596996]
[173.52267456 12.34973431]
[188.35813904 14.56538582]
[201.90728760 21.00124741]
[212.99801636 31.10055161]
[220.67083740 43.98961258]
[224.26197815 58.55339050]
[223.46078491 73.53197479]
[218.33654785 87.62957764]
[209.33258057 99.62660217]
[197.22781372 108.48519135]
[183.06942749 113.43898773]
[168.08227539 114.05944061]
[153.56286621 110.29286957]
[140.76730347 102.46512604]
[130.80252075 91.25338745]
[124.53057098 77.62757874]
[122.49400330 62.76998901]
[117.45709229 76.89901733]
[118.53533173 79.48659515]
[118.65357971 82.65718079]
[117.58461761 86.04727173]
[115.23693085 89.21790314]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[96.25833893 127.96927643]
[90.38937378 141.77345276]
[102.10727692 132.40911865]
[116.20854950 127.29500580]
[131.20504761 126.97080994]
[145.51414490 131.47074890]
[157.62579346 140.31994629]
[166.26179504 152.58450317]
[170.51080322 166.97012329]
[169.92437744 181.95864868]
[164.56440735 195.96832275]
[154.99656677 207.52064514]
[142.23056030 215.39649963]
[127.61361694 218.76472473]
[112.68829346 217.26983643]
[99.02969360 211.06961060]
[88.07924652 200.81838989]
[80.99257660 187.59797668]
[78.51756287 172.80357361]
[80.91545105 157.99629211]
[71.77664948 169.89093018]
[62.63784790 181.78555298]
[53.49904633 193.68019104]
[44.36024475 205.57482910]
[35.22144318 217.46945190]
[26.08263969 229.36408997]
[16.94383621 241.25872803]
[7.80503464 253.15335083]
[-1.33376789 265.04797363]
[-10.47257042 276.94262695]
[-19.61137199 288.83724976]
[-28.75017548 300.73187256]
[-37.88897705 312.62652588]
[-40.16128922 328.28369141]
[-54.05091476 333.66213989]
[-63.18971634 345.55676270]
[-61.33349991 361.02261353]
[-70.77098846 372.95526123]
[-85.52674103 374.62957764]
[-94.66554260 386.52420044]
[-103.80434418 398.41885376]
[-112.94314575 410.31347656]
[-122.08194733 422.20809937]
[-111.21517181 432.56884766]
[-101.51124573 444.02600098]
[-93.08014679 456.44970703]
[-86.01738739 469.69921875]
[-80.40299988 483.62442017]
[-76.30059814 498.06747437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 204]
[52 203]
[53 202]
[54 201]
[55 200]
[58 197]
[59 196]
[61 194]
[62 193]
[63 192]
[64 191]
[65 190]
[66 189]
[67 188]
[68 187]
[69 186]
[70 185]
[71 184]
[72 183]
[73 182]
[74 181]
[75 163]
[76 162]
[77 161]
[79 159]
[80 154]
[81 153]
[82 133]
[83 132]
[84 131]
[85 130]
[86 129]
[88 126]
[89 125]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
